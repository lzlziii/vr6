using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using Framework;
using Il2CppDummyDll;
using InfinityEngine.DesignPatterns;
using Models;
using OVRTouchSample;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Proyecto26;
using RSG;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Profiling;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class MainScript : MonoBehaviour
{
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BB90", Offset = "0x68BB90")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MainScript <>4__this;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RequestHelper requestOptions;

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x8530AC", Offset = "0x8530AC", VA = "0x8530AC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x853EE8", Offset = "0x853EE8", VA = "0x853EE8")]
		internal IPromise<Todo[]> <Get>b__0(Post[] res)
		{
			return null;
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x853F9C", Offset = "0x853F9C", VA = "0x853F9C")]
		internal IPromise<Models.User[]> <Get>b__1(Todo[] res)
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x854050", Offset = "0x854050", VA = "0x854050")]
		internal IPromise<Photo[]> <Get>b__2(Models.User[] res)
		{
			return null;
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x8541EC", Offset = "0x8541EC", VA = "0x8541EC")]
		internal void <Get>b__3(Photo[] res)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x854270", Offset = "0x854270", VA = "0x854270")]
		internal void <Get>b__4(Exception err)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BBA0", Offset = "0x68BBA0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<RequestException, int> <>9__5_1;

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x853DE4", Offset = "0x853DE4", VA = "0x853DE4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x853DEC", Offset = "0x853DEC", VA = "0x853DEC")]
		internal void <Put>b__5_1(RequestException err, int retries)
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly string basePath;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RequestHelper currentRequest;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x852B88", Offset = "0x852B88", VA = "0x852B88")]
	private void LogMessage(string title, string message)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x852BF0", Offset = "0x852BF0", VA = "0x852BF0")]
	public void Get()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x8530B4", Offset = "0x8530B4", VA = "0x8530B4")]
	public void Post()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x85337C", Offset = "0x85337C", VA = "0x85337C")]
	public void Put()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x85361C", Offset = "0x85361C", VA = "0x85361C")]
	public void Delete()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x8536C4", Offset = "0x8536C4", VA = "0x8536C4")]
	public void AbortRequest()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x8536F4", Offset = "0x8536F4", VA = "0x8536F4")]
	public void DownloadFile()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x853938", Offset = "0x853938", VA = "0x853938")]
	public MainScript()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x853990", Offset = "0x853990", VA = "0x853990")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690300", Offset = "0x690300")]
	private void <Post>b__4_0(Post res)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x8539E4", Offset = "0x8539E4", VA = "0x8539E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690310", Offset = "0x690310")]
	private void <Post>b__4_1(Exception err)
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x853A44", Offset = "0x853A44", VA = "0x853A44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690320", Offset = "0x690320")]
	private void <Put>b__5_0(RequestException err, ResponseHelper res, Post body)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x853ABC", Offset = "0x853ABC", VA = "0x853ABC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690330", Offset = "0x690330")]
	private void <Delete>b__6_0(RequestException err, ResponseHelper res)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x853B70", Offset = "0x853B70", VA = "0x853B70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690340", Offset = "0x690340")]
	private void <DownloadFile>b__8_0(ResponseHelper res)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x853D20", Offset = "0x853D20", VA = "0x853D20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690350", Offset = "0x690350")]
	private void <DownloadFile>b__8_1(Exception err)
	{
	}
}
[Token(Token = "0x2000003")]
public class TCP2_Demo : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] AffectedMaterials;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] RampTextures;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GUISkin GuiSkin;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Light DirLight;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Robot;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Ethan;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mUnityShader;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool mShaderSpecular;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool mShaderBump;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool mShaderReflection;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool mShaderRim;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool mShaderRimOutline;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool mShaderOutline;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mRimMin;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float mRimMax;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool mRampTextureFlag;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D mRampTexture;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float mRampSmoothing;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float mLightRotationX;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float mLightRotationY;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool mViewRobot;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool mRobotOutlineNormals;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TCP2_Demo_View DemoView;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x80DCF8", Offset = "0x80DCF8", VA = "0x80DCF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x80E428", Offset = "0x80E428", VA = "0x80E428")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x80E5CC", Offset = "0x80E5CC", VA = "0x80E5CC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x80FEAC", Offset = "0x80FEAC", VA = "0x80FEAC")]
	private void UnityDiffuseShader()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x80DD84", Offset = "0x80DD84", VA = "0x80DD84")]
	private void UpdateShader()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x80FB9C", Offset = "0x80FB9C", VA = "0x80FB9C")]
	private void RimOutlineColor()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x80E44C", Offset = "0x80E44C", VA = "0x80E44C")]
	private void RestoreRimColors()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x80FFF4", Offset = "0x80FFF4", VA = "0x80FFF4")]
	private void ToggleKeyword(Material m, bool enabled, string keyword)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x80FC8C", Offset = "0x80FC8C", VA = "0x80FC8C")]
	private void PrevRamp()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x80FD94", Offset = "0x80FD94", VA = "0x80FD94")]
	private void NextRamp()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x810434", Offset = "0x810434", VA = "0x810434")]
	public TCP2_Demo()
	{
	}
}
[Token(Token = "0x2000004")]
public class TCP2_Demo_PBS : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200022C")]
	public class SkyboxSetting
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material SkyMaterial;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color lightColor;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 DirLightEuler;

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x811928", Offset = "0x811928", VA = "0x811928")]
		public SkyboxSetting()
		{
		}
	}

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light DirLight;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PointLights;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer Robot;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Canvas;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SkyboxSetting[] SkySettings;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool FlipLight;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D[] RampTextures;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider SmoothnessSlider;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text SmoothnessValue;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider MetallicSlider;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text MetallicValue;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text BumpScaleValue;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text ShaderText;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text SkyboxValue;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text RampValue;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Slider RampThresholdSlider;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text RampThresholdValue;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Slider RampSmoothSlider;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text RampSmoothValue;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Slider RampSmoothAddSlider;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text RampSmoothAddValue;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RawImage RampImage;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int currentSky;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int currentRamp;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Material robotMaterial;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool mUseOutline;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool mRotatePointLights;

	[Token(Token = "0x17000001")]
	public bool ShowPointLights
	{
		[Token(Token = "0x600001A")]
		[Address(RVA = "0x810478", Offset = "0x810478", VA = "0x810478")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public bool ShowDirLight
	{
		[Token(Token = "0x600001B")]
		[Address(RVA = "0x8104B0", Offset = "0x8104B0", VA = "0x8104B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public bool RotatePointLights
	{
		[Token(Token = "0x600001C")]
		[Address(RVA = "0x8104E8", Offset = "0x8104E8", VA = "0x8104E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600001D")]
		[Address(RVA = "0x8104F0", Offset = "0x8104F0", VA = "0x8104F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public bool UseOutline
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0x8104FC", Offset = "0x8104FC", VA = "0x8104FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x810504", Offset = "0x810504", VA = "0x810504")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public bool UseRampTexture
	{
		[Token(Token = "0x6000020")]
		[Address(RVA = "0x810694", Offset = "0x810694", VA = "0x810694")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public bool UseStylizedFresnel
	{
		[Token(Token = "0x6000021")]
		[Address(RVA = "0x810764", Offset = "0x810764", VA = "0x810764")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public bool UseStylizedSpecular
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0x810834", Offset = "0x810834", VA = "0x810834")]
		set
		{
		}
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x810904", Offset = "0x810904", VA = "0x810904")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x810FC8", Offset = "0x810FC8", VA = "0x810FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x811220", Offset = "0x811220", VA = "0x811220")]
	public void ToggleShader()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x811180", Offset = "0x811180", VA = "0x811180")]
	public void NextSky()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x8111D4", Offset = "0x8111D4", VA = "0x8111D4")]
	public void PrevSky()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x81138C", Offset = "0x81138C", VA = "0x81138C")]
	public void NextRamp()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x8113E0", Offset = "0x8113E0", VA = "0x8113E0")]
	public void PrevRamp()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x81142C", Offset = "0x81142C", VA = "0x81142C")]
	public void SetMetallic(float f)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x8114EC", Offset = "0x8114EC", VA = "0x8114EC")]
	public void SetSmoothness(float f)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x8115AC", Offset = "0x8115AC", VA = "0x8115AC")]
	public void SetBumpScale(float f)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x81166C", Offset = "0x81166C", VA = "0x81166C")]
	public void SetRampThreshold(float f)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x81172C", Offset = "0x81172C", VA = "0x81172C")]
	public void SetRampSmooth(float f)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x8117EC", Offset = "0x8117EC", VA = "0x8117EC")]
	public void SetRampSmoothAdd(float f)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x810E28", Offset = "0x810E28", VA = "0x810E28")]
	private void UpdateRamp()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x810B80", Offset = "0x810B80", VA = "0x810B80")]
	private void UpdateSky()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x811318", Offset = "0x811318", VA = "0x811318")]
	private void ShowUnityStandardShader()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x8105C8", Offset = "0x8105C8", VA = "0x8105C8")]
	public void ShowTCP2Shader()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x8118AC", Offset = "0x8118AC", VA = "0x8118AC")]
	private void ToggleKeyword(Material m, bool enabled, string keyword)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x811914", Offset = "0x811914", VA = "0x811914")]
	public TCP2_Demo_PBS()
	{
	}
}
[Token(Token = "0x2000005")]
public class TCP2_Demo_PBS_View : MonoBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Pivot;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68C698", Offset = "0x68C698")]
	public float OrbitStrg;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float OrbitClamp;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68C6D0", Offset = "0x68C6D0")]
	public float PanStrg;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float PanClamp;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMin;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMax;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68C708", Offset = "0x68C708")]
	public float ZoomStrg;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ZoomClamp;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ZoomDistMin;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ZoomDistMax;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68C740", Offset = "0x68C740")]
	public float Decceleration;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Rect ignoreMouseRect;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 mouseDelta;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 orbitAcceleration;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 panAcceleration;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 moveAcceleration;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float zoomAcceleration;

	[Token(Token = "0x4000047")]
	private const float XMax = 60f;

	[Token(Token = "0x4000048")]
	private const float XMin = 300f;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 mResetCamPos;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 mResetPivotPos;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 mResetCamRot;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 mResetPivotRot;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool leftMouseHeld;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool rightMouseHeld;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	private bool middleMouseHeld;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x811930", Offset = "0x811930", VA = "0x811930")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x8119E8", Offset = "0x8119E8", VA = "0x8119E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x811A14", Offset = "0x811A14", VA = "0x811A14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x8122C4", Offset = "0x8122C4", VA = "0x8122C4")]
	public void ResetView()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x812434", Offset = "0x812434", VA = "0x812434")]
	public TCP2_Demo_PBS_View()
	{
	}
}
[Token(Token = "0x2000006")]
public class TCP2_Demo_View : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68C778", Offset = "0x68C778")]
	public float OrbitStrg;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float OrbitClamp;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68C7B0", Offset = "0x68C7B0")]
	public float PanStrg;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float PanClamp;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68C7E8", Offset = "0x68C7E8")]
	public float ZoomStrg;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ZoomClamp;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68C820", Offset = "0x68C820")]
	public float Decceleration;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform CharacterTransform;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 mouseDelta;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 orbitAcceleration;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 panAcceleration;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 moveAcceleration;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float zoomAcceleration;

	[Token(Token = "0x400005D")]
	private const float XMax = 60f;

	[Token(Token = "0x400005E")]
	private const float XMin = 300f;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 mResetCamPos;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 mResetCamRot;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool mMouseDown;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x81245C", Offset = "0x81245C", VA = "0x81245C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x8124F8", Offset = "0x8124F8", VA = "0x8124F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x812524", Offset = "0x812524", VA = "0x812524")]
	private void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x812E90", Offset = "0x812E90", VA = "0x812E90")]
	public void ResetView()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x812F50", Offset = "0x812F50", VA = "0x812F50")]
	public TCP2_Demo_View()
	{
	}
}
[Token(Token = "0x2000007")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68AF44", Offset = "0x68AF44")]
public class TCP2_CameraDepth : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RenderDepth;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x80DC30", Offset = "0x80DC30", VA = "0x80DC30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x80DCE4", Offset = "0x80DCE4", VA = "0x80DCE4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x80DC34", Offset = "0x80DC34", VA = "0x80DC34")]
	private void SetCameraDepth()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x80DCE8", Offset = "0x80DCE8", VA = "0x80DCE8")]
	public TCP2_CameraDepth()
	{
	}
}
[Token(Token = "0x2000008")]
public class TCP2_GetPosOnWater : MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material WaterMaterial;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68C858", Offset = "0x68C858")]
	public float heightScale;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x68C890", Offset = "0x68C890")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68C890", Offset = "0x68C890")]
	public bool followWaterHeight;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68C8DC", Offset = "0x68C8DC")]
	public float heightOffset;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x68C914", Offset = "0x68C914")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68C914", Offset = "0x68C914")]
	public bool followWaterNormal;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68C960", Offset = "0x68C960")]
	public Vector3 upAxis;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68C998", Offset = "0x68C998")]
	public Vector3 postRotation;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private bool isValid;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private int sineCount;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] sinePosOffsetsX;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] sinePosOffsetsZ;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] sinePhsOffsetsX;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] sinePhsOffsetsZ;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x812F78", Offset = "0x812F78", VA = "0x812F78")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x813170", Offset = "0x813170", VA = "0x813170")]
	public Vector3 GetPositionOnWater(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x814138", Offset = "0x814138", VA = "0x814138")]
	public Vector3 GetNormalOnWater(Vector3 worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x815714", Offset = "0x815714", VA = "0x815714")]
	public TCP2_GetPosOnWater()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class TCP2_PlanarReflection : MonoBehaviour
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x815888", Offset = "0x815888", VA = "0x815888")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x816FD4", Offset = "0x816FD4", VA = "0x816FD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x8166EC", Offset = "0x8166EC", VA = "0x8166EC")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x815FE4", Offset = "0x815FE4", VA = "0x815FE4")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x817440", Offset = "0x817440", VA = "0x817440")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x816DEC", Offset = "0x816DEC", VA = "0x816DEC")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x816B48", Offset = "0x816B48", VA = "0x816B48")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x817460", Offset = "0x817460", VA = "0x817460")]
	public TCP2_PlanarReflection()
	{
	}
}
[Token(Token = "0x200000A")]
public static class TCP2_RuntimeUtils
{
	[Token(Token = "0x4000078")]
	private const string BASE_SHADER_PATH = "Toony Colors Pro 2/";

	[Token(Token = "0x4000079")]
	private const string VARIANT_SHADER_PATH = "Hidden/Toony Colors Pro 2/Variants/";

	[Token(Token = "0x400007A")]
	private const string BASE_SHADER_NAME = "Desktop";

	[Token(Token = "0x400007B")]
	private const string BASE_SHADER_NAME_MOB = "Mobile";

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string[]> ShaderVariants;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x81005C", Offset = "0x81005C", VA = "0x81005C")]
	public static Shader GetShaderWithKeywords(Material material)
	{
		return null;
	}
}
[Token(Token = "0x200000B")]
public class TCP2_ShaderUpdateUnityTime : MonoBehaviour
{
	[Token(Token = "0x6000053")]
	[Address(RVA = "0x817BBC", Offset = "0x817BBC", VA = "0x817BBC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x817C10", Offset = "0x817C10", VA = "0x817C10")]
	public TCP2_ShaderUpdateUnityTime()
	{
	}
}
[Token(Token = "0x200000C")]
public class HandGrabber : OVRGrabber
{
	[Token(Token = "0x400007D")]
	private const float PINCH_STRENGTH_THRESHOLD = 1f;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private OVRHand hand;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x896BD8", Offset = "0x896BD8", VA = "0x896BD8", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x896C3C", Offset = "0x896C3C", VA = "0x896C3C", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x896C64", Offset = "0x896C64", VA = "0x896C64")]
	private void CheckIndexPinch()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x896DE8", Offset = "0x896DE8", VA = "0x896DE8")]
	public HandGrabber()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x68AFC8", Offset = "0x68AFC8")]
public class FastList<T>
{
	[Token(Token = "0x200022D")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BBB0", Offset = "0x68BBB0")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000142")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000E65")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E67")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E62")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000E63")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E64")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E66")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000008")]
	public int Count
	{
		[Token(Token = "0x600005B")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600005C")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public T Item
	{
		[Token(Token = "0x600005D")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600005E")]
		set
		{
		}
	}

	[Token(Token = "0x6000059")]
	public FastList()
	{
	}

	[Token(Token = "0x600005A")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600005F")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000060")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000061")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000062")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000063")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000064")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000065")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000066")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000067")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000068")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000069")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x600006A")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600006C")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600006D")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690360", Offset = "0x690360")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600006F")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000070")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000071")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000072")]
	public void Release()
	{
	}
}
[Token(Token = "0x200000E")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x847098", Offset = "0x847098", VA = "0x847098")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200000F")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x84706C", Offset = "0x84706C", VA = "0x84706C")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000010")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x86B4D0", Offset = "0x86B4D0", VA = "0x86B4D0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x86B5FC", Offset = "0x86B5FC", VA = "0x86B5FC")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x86B958", Offset = "0x86B958", VA = "0x86B958")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x86BBB0", Offset = "0x86BBB0", VA = "0x86BBB0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x86BBDC", Offset = "0x86BBDC", VA = "0x86BBDC")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000011")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x86FD70", Offset = "0x86FD70", VA = "0x86FD70")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x86FDFC", Offset = "0x86FDFC", VA = "0x86FDFC")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x86FFC0", Offset = "0x86FFC0", VA = "0x86FFC0")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000012")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700000A")]
	public bool IsVisible
	{
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x88C418", Offset = "0x88C418", VA = "0x88C418")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600007E")]
		[Address(RVA = "0x88C420", Offset = "0x88C420", VA = "0x88C420")]
		set
		{
		}
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x88C57C", Offset = "0x88C57C", VA = "0x88C57C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x88C844", Offset = "0x88C844", VA = "0x88C844")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x88C84C", Offset = "0x88C84C", VA = "0x88C84C")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000013")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200022F")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x7FF6A8", Offset = "0x7FF6A8", VA = "0x7FF6A8")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000230")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x690200", Offset = "0x690200")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x690218", Offset = "0x690218")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x690230", Offset = "0x690230")]
		public float LatencyWeight;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x690248", Offset = "0x690248")]
		public int MaxSamples;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x7FF6B0", Offset = "0x7FF6B0", VA = "0x7FF6B0")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x7FF8BC", Offset = "0x7FF8BC", VA = "0x7FF8BC")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x7FEB5C", Offset = "0x7FEB5C", VA = "0x7FEB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x7FED3C", Offset = "0x7FED3C", VA = "0x7FED3C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x7FF114", Offset = "0x7FF114", VA = "0x7FF114")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x7FF05C", Offset = "0x7FF05C", VA = "0x7FF05C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x7FF3E0", Offset = "0x7FF3E0", VA = "0x7FF3E0")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x7FF830", Offset = "0x7FF830", VA = "0x7FF830")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000014")]
public class P2PManager
{
	[Token(Token = "0x2000231")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000C83")]
		Update = 1
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x86CFD8", Offset = "0x86CFD8", VA = "0x86CFD8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x86D098", Offset = "0x86D098", VA = "0x86D098")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x86D17C", Offset = "0x86D17C", VA = "0x86D17C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x86D200", Offset = "0x86D200", VA = "0x86D200")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x86D3F4", Offset = "0x86D3F4", VA = "0x86D3F4")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x86D854", Offset = "0x86D854", VA = "0x86D854")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x86DD10", Offset = "0x86DD10", VA = "0x86DD10")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x86E000", Offset = "0x86E000", VA = "0x86E000")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x86DABC", Offset = "0x86DABC", VA = "0x86DABC")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x86DF0C", Offset = "0x86DF0C", VA = "0x86DF0C")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x86DBC8", Offset = "0x86DBC8", VA = "0x86DBC8")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x86E2C8", Offset = "0x86E2C8", VA = "0x86E2C8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x86DB28", Offset = "0x86DB28", VA = "0x86DB28")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x86DF74", Offset = "0x86DF74", VA = "0x86DF74")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x86DC70", Offset = "0x86DC70", VA = "0x86DC70")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x86E354", Offset = "0x86E354", VA = "0x86E354")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000015")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x86F934", Offset = "0x86F934", VA = "0x86F934", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x86F978", Offset = "0x86F978", VA = "0x86F978", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x86F9B8", Offset = "0x86F9B8", VA = "0x86F9B8", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x86F9E0", Offset = "0x86F9E0", VA = "0x86F9E0")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x86FB98", Offset = "0x86FB98", VA = "0x86FB98")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x86FC88", Offset = "0x86FC88", VA = "0x86FC88")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x86FD00", Offset = "0x86FD00", VA = "0x86FD00")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000016")]
public class RemotePlayer
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x7FF944", Offset = "0x7FF944", VA = "0x7FF944")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000017")]
public class RoomManager
{
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x80003C", Offset = "0x80003C", VA = "0x80003C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x800108", Offset = "0x800108", VA = "0x800108")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x800424", Offset = "0x800424", VA = "0x800424")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x800534", Offset = "0x800534", VA = "0x800534")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x8005EC", Offset = "0x8005EC", VA = "0x8005EC")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x800D48", Offset = "0x800D48", VA = "0x800D48")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x800454", Offset = "0x800454", VA = "0x800454")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x800DD4", Offset = "0x800DD4", VA = "0x800DD4")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x8016F4", Offset = "0x8016F4", VA = "0x8016F4")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x801B48", Offset = "0x801B48", VA = "0x801B48")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x801214", Offset = "0x801214", VA = "0x801214")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000018")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000232")]
	public enum State
	{
		[Token(Token = "0x4000C85")]
		INITIALIZING,
		[Token(Token = "0x4000C86")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000C87")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000C88")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000C89")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000C8A")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000C8B")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000C8C")]
		SHUTDOWN
	}

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700000B")]
	public static State CurrentState
	{
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x808310", Offset = "0x808310", VA = "0x808310")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700000C")]
	public static ulong MyID
	{
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x80077C", Offset = "0x80077C", VA = "0x80077C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700000D")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x808388", Offset = "0x808388", VA = "0x808388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x80648C", Offset = "0x80648C", VA = "0x80648C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x8069A8", Offset = "0x8069A8", VA = "0x8069A8", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x806DA8", Offset = "0x806DA8", VA = "0x806DA8")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x806F18", Offset = "0x806F18", VA = "0x806F18", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x806F1C", Offset = "0x806F1C", VA = "0x806F1C")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x80701C", Offset = "0x80701C", VA = "0x80701C")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x807934", Offset = "0x807934", VA = "0x807934")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x807E90", Offset = "0x807E90", VA = "0x807E90")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x8080D4", Offset = "0x8080D4", VA = "0x8080D4")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x808294", Offset = "0x808294", VA = "0x808294")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x806CF4", Offset = "0x806CF4", VA = "0x806CF4")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x800298", Offset = "0x800298", VA = "0x800298")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x800858", Offset = "0x800858", VA = "0x800858")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x8084AC", Offset = "0x8084AC", VA = "0x8084AC")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x800C14", Offset = "0x800C14", VA = "0x800C14")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x801BC0", Offset = "0x801BC0", VA = "0x801BC0")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x8020A4", Offset = "0x8020A4", VA = "0x8020A4")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x80218C", Offset = "0x80218C", VA = "0x80218C")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x800360", Offset = "0x800360", VA = "0x800360")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x801D40", Offset = "0x801D40", VA = "0x801D40")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x801DDC", Offset = "0x801DDC", VA = "0x801DDC")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x8086A4", Offset = "0x8086A4", VA = "0x8086A4")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x8088E0", Offset = "0x8088E0", VA = "0x8088E0")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x8063FC", Offset = "0x8063FC", VA = "0x8063FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6903C4", Offset = "0x6903C4")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x808A5C", Offset = "0x808A5C", VA = "0x808A5C")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x808B34", Offset = "0x808B34", VA = "0x808B34")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000019")]
public class VoipManager
{
	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xEED028", Offset = "0xEED028", VA = "0xEED028")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xEED0E8", Offset = "0xEED0E8", VA = "0xEED0E8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xEED1CC", Offset = "0xEED1CC", VA = "0xEED1CC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xEED250", Offset = "0xEED250", VA = "0xEED250")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xEED444", Offset = "0xEED444", VA = "0xEED444")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200001A")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x88C048", Offset = "0x88C048", VA = "0x88C048")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x88C0B8", Offset = "0x88C0B8", VA = "0x88C0B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x88C264", Offset = "0x88C264", VA = "0x88C264")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x88C2DC", Offset = "0x88C2DC", VA = "0x88C2DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x88C0FC", Offset = "0x88C0FC", VA = "0x88C0FC")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x88C3B0", Offset = "0x88C3B0", VA = "0x88C3B0")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x88C410", Offset = "0x88C410", VA = "0x88C410")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class AvatarLayer
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x986124", Offset = "0x986124", VA = "0x986124")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200001C")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x86E3E0", Offset = "0x86E3E0", VA = "0x86E3E0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200001D")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000233")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x85B058", Offset = "0x85B058", VA = "0x85B058")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000234")]
	public enum HandType
	{
		[Token(Token = "0x4000C8F")]
		Right,
		[Token(Token = "0x4000C90")]
		Left,
		[Token(Token = "0x4000C91")]
		Max
	}

	[Token(Token = "0x2000235")]
	public enum HandJoint
	{
		[Token(Token = "0x4000C93")]
		HandBase,
		[Token(Token = "0x4000C94")]
		IndexBase,
		[Token(Token = "0x4000C95")]
		IndexTip,
		[Token(Token = "0x4000C96")]
		ThumbBase,
		[Token(Token = "0x4000C97")]
		ThumbTip,
		[Token(Token = "0x4000C98")]
		Max
	}

	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BBC0", Offset = "0x68BBC0")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x85AFE0", Offset = "0x85AFE0", VA = "0x85AFE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x85B050", Offset = "0x85B050", VA = "0x85B050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x85AD50", Offset = "0x85AD50", VA = "0x85AD50")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x85AD7C", Offset = "0x85AD7C", VA = "0x85AD7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x85AD80", Offset = "0x85AD80", VA = "0x85AD80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x85AFE8", Offset = "0x85AFE8", VA = "0x85AFE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68CA50", Offset = "0x68CA50")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68CA88", Offset = "0x68CA88")]
	public bool EnableBody;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68CAC0", Offset = "0x68CAC0")]
	public bool RecordPackets;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68CAF8", Offset = "0x68CAF8")]
	public bool StartWithControllers;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68CB30", Offset = "0x68CB30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CB30", Offset = "0x68CB30")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CBA0", Offset = "0x68CBA0")]
	private bool CombineMeshes;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CBD8", Offset = "0x68CBD8")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68CC10", Offset = "0x68CC10")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68CC48", Offset = "0x68CC48")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CC80", Offset = "0x68CC80")]
	public bool EnableLaughter;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000108")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400010A")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400010B")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400010C")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400010D")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400010E")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x8F92A0", Offset = "0x8F92A0", VA = "0x8F92A0")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x8F9788", Offset = "0x8F9788", VA = "0x8F9788")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x8F9814", Offset = "0x8F9814", VA = "0x8F9814")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x8F9894", Offset = "0x8F9894", VA = "0x8F9894")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x8F99D4", Offset = "0x8F99D4", VA = "0x8F99D4")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x8F9ADC", Offset = "0x8F9ADC", VA = "0x8F9ADC")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x8F9BD8", Offset = "0x8F9BD8", VA = "0x8F9BD8")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x8F9DDC", Offset = "0x8F9DDC", VA = "0x8F9DDC")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x8F9EA4", Offset = "0x8F9EA4", VA = "0x8F9EA4")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x8F9F28", Offset = "0x8F9F28", VA = "0x8F9F28")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x8FA0B4", Offset = "0x8FA0B4", VA = "0x8FA0B4")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x8FA19C", Offset = "0x8FA19C", VA = "0x8FA19C")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x8FA2C8", Offset = "0x8FA2C8", VA = "0x8FA2C8")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x8FA328", Offset = "0x8FA328", VA = "0x8FA328")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000E5")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x8FA7C8", Offset = "0x8FA7C8", VA = "0x8FA7C8")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x8FAB44", Offset = "0x8FAB44", VA = "0x8FAB44")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x8FACE8", Offset = "0x8FACE8", VA = "0x8FACE8")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x8FAFFC", Offset = "0x8FAFFC", VA = "0x8FAFFC")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x8FB0F0", Offset = "0x8FB0F0", VA = "0x8FB0F0")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x8FB4D8", Offset = "0x8FB4D8", VA = "0x8FB4D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x8FB884", Offset = "0x8FB884", VA = "0x8FB884")]
	private void Update()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x8FC49C", Offset = "0x8FC49C", VA = "0x8FC49C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x8FC4E4", Offset = "0x8FC4E4", VA = "0x8FC4E4")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x8FB3A0", Offset = "0x8FB3A0", VA = "0x8FB3A0")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x8FB43C", Offset = "0x8FB43C", VA = "0x8FB43C")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x8FC514", Offset = "0x8FC514", VA = "0x8FC514")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x8FBC64", Offset = "0x8FBC64", VA = "0x8FBC64")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x8FC7E0", Offset = "0x8FC7E0", VA = "0x8FC7E0")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x8FC584", Offset = "0x8FC584", VA = "0x8FC584")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x8FCAC0", Offset = "0x8FCAC0", VA = "0x8FCAC0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x8FCF64", Offset = "0x8FCF64", VA = "0x8FCF64")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x8FD210", Offset = "0x8FD210", VA = "0x8FD210")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x8FD35C", Offset = "0x8FD35C", VA = "0x8FD35C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x8FD59C", Offset = "0x8FD59C", VA = "0x8FD59C")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x8FBE3C", Offset = "0x8FBE3C", VA = "0x8FBE3C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x8FD698", Offset = "0x8FD698", VA = "0x8FD698")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x8FBC74", Offset = "0x8FBC74", VA = "0x8FBC74")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x8FD790", Offset = "0x8FD790", VA = "0x8FD790")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x8FDE78", Offset = "0x8FDE78", VA = "0x8FDE78")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x8FE498", Offset = "0x8FE498", VA = "0x8FE498")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x8FE518", Offset = "0x8FE518", VA = "0x8FE518")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x8FE59C", Offset = "0x8FE59C", VA = "0x8FE59C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x8FC31C", Offset = "0x8FC31C", VA = "0x8FC31C")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x8FD84C", Offset = "0x8FD84C", VA = "0x8FD84C")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x8FEB64", Offset = "0x8FEB64", VA = "0x8FEB64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690428", Offset = "0x690428")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x8FEBD8", Offset = "0x8FEBD8", VA = "0x8FEBD8")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x8FE984", Offset = "0x8FE984", VA = "0x8FE984")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x8FECA8", Offset = "0x8FECA8", VA = "0x8FECA8")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x8FED9C", Offset = "0x8FED9C", VA = "0x8FED9C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x8FE674", Offset = "0x8FE674", VA = "0x8FE674")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x8FEE90", Offset = "0x8FEE90", VA = "0x8FEE90")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x85B0D4", Offset = "0x85B0D4", VA = "0x85B0D4")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x85B184", Offset = "0x85B184", VA = "0x85B184")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x85C944", Offset = "0x85C944", VA = "0x85C944")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x85C470", Offset = "0x85C470", VA = "0x85C470")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x85C20C", Offset = "0x85C20C", VA = "0x85C20C")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x85C2E4", Offset = "0x85C2E4", VA = "0x85C2E4")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x85CC64", Offset = "0x85CC64", VA = "0x85CC64")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400012B")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x85D434", Offset = "0x85D434", VA = "0x85D434")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000021")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x85D6E8", Offset = "0x85D6E8", VA = "0x85D6E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x85DDCC", Offset = "0x85DDCC", VA = "0x85DDCC")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000022")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x85DEC8", Offset = "0x85DEC8", VA = "0x85DEC8")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x85E038", Offset = "0x85E038", VA = "0x85E038")]
	private void Update()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x85E160", Offset = "0x85E160", VA = "0x85E160")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x85E1C4", Offset = "0x85E1C4", VA = "0x85E1C4")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x85D810", Offset = "0x85D810", VA = "0x85D810")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x85E810", Offset = "0x85E810", VA = "0x85E810")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x85E8B0", Offset = "0x85E8B0", VA = "0x85E8B0")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x85F3D0", Offset = "0x85F3D0", VA = "0x85F3D0")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x85DE30", Offset = "0x85DE30", VA = "0x85DE30")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000024")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000237")]
	public enum PacketMode
	{
		[Token(Token = "0x4000C9D")]
		SDK,
		[Token(Token = "0x4000C9E")]
		Unity
	}

	[Token(Token = "0x2000238")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x861460", Offset = "0x861460", VA = "0x861460")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000239")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x8615B8", Offset = "0x8615B8", VA = "0x8615B8")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x86108C", Offset = "0x86108C", VA = "0x86108C")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000120")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x86109C", Offset = "0x86109C", VA = "0x86109C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x86113C", Offset = "0x86113C", VA = "0x86113C")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x8613B4", Offset = "0x8613B4", VA = "0x8613B4")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x861450", Offset = "0x861450", VA = "0x861450")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x86197C", Offset = "0x86197C", VA = "0x86197C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x861AF4", Offset = "0x861AF4", VA = "0x861AF4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000026")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x861B60", Offset = "0x861B60", VA = "0x861B60")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x861C8C", Offset = "0x861C8C", VA = "0x861C8C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x861FE8", Offset = "0x861FE8", VA = "0x861FE8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x8622B8", Offset = "0x8622B8", VA = "0x8622B8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x8622E4", Offset = "0x8622E4", VA = "0x8622E4")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200023A")]
	public enum TextureType
	{
		[Token(Token = "0x4000CAF")]
		DiffuseTextures,
		[Token(Token = "0x4000CB0")]
		NormalMaps,
		[Token(Token = "0x4000CB1")]
		RoughnessMaps,
		[Token(Token = "0x4000CB2")]
		Count
	}

	[Token(Token = "0x200023B")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200023C")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200023D")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200023E")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x865000", Offset = "0x865000", VA = "0x865000")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BBD0", Offset = "0x68BBD0")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x865C20", Offset = "0x865C20", VA = "0x865C20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E7A")]
			[Address(RVA = "0x865C90", Offset = "0x865C90", VA = "0x865C90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x864E20", Offset = "0x864E20", VA = "0x864E20")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x8652B4", Offset = "0x8652B4", VA = "0x8652B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x8652B8", Offset = "0x8652B8", VA = "0x8652B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x865C28", Offset = "0x865C28", VA = "0x865C28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x400015F")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000160")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000161")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000162")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x862394", Offset = "0x862394", VA = "0x862394")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x86255C", Offset = "0x86255C", VA = "0x86255C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x862598", Offset = "0x862598", VA = "0x862598")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x8630E4", Offset = "0x8630E4", VA = "0x8630E4")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x8633E4", Offset = "0x8633E4", VA = "0x8633E4")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x86262C", Offset = "0x86262C", VA = "0x86262C")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x8634F0", Offset = "0x8634F0", VA = "0x8634F0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x862D20", Offset = "0x862D20", VA = "0x862D20")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x8637CC", Offset = "0x8637CC", VA = "0x8637CC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x863B68", Offset = "0x863B68", VA = "0x863B68")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x863C98", Offset = "0x863C98", VA = "0x863C98")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x863CD0", Offset = "0x863CD0", VA = "0x863CD0")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x86304C", Offset = "0x86304C", VA = "0x86304C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x69048C", Offset = "0x69048C")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x864E4C", Offset = "0x864E4C", VA = "0x864E4C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000028")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700000E")]
	public float Duration
	{
		[Token(Token = "0x600013B")]
		[Address(RVA = "0x865C98", Offset = "0x865C98", VA = "0x865C98")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000F")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0x865D38", Offset = "0x865D38", VA = "0x865D38")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x865DE8", Offset = "0x865DE8", VA = "0x865DE8")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x865EAC", Offset = "0x865EAC", VA = "0x865EAC")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x865FFC", Offset = "0x865FFC", VA = "0x865FFC")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x8660D8", Offset = "0x8660D8", VA = "0x8660D8")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x8661B8", Offset = "0x8661B8", VA = "0x8661B8")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x8663E8", Offset = "0x8663E8", VA = "0x8663E8")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x866668", Offset = "0x866668", VA = "0x866668")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000029")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000144")]
	[Address(RVA = "0x98A4E8", Offset = "0x98A4E8", VA = "0x98A4E8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x98A60C", Offset = "0x98A60C", VA = "0x98A60C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x98A898", Offset = "0x98A898", VA = "0x98A898")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x98A6C0", Offset = "0x98A6C0", VA = "0x98A6C0")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x98A79C", Offset = "0x98A79C", VA = "0x98A79C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200002A")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000149")]
	[Address(RVA = "0x98A058", Offset = "0x98A058", VA = "0x98A058")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x98A47C", Offset = "0x98A47C", VA = "0x98A47C")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x98A200", Offset = "0x98A200", VA = "0x98A200")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x98A294", Offset = "0x98A294", VA = "0x98A294")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x98A358", Offset = "0x98A358", VA = "0x98A358")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400016A")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400016B")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x8668B4", Offset = "0x8668B4", VA = "0x8668B4")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x866948", Offset = "0x866948", VA = "0x866948", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x866964", Offset = "0x866964", VA = "0x866964")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x866B68", Offset = "0x866B68", VA = "0x866B68")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x866DB0", Offset = "0x866DB0", VA = "0x866DB0")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200002C")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x866E30", Offset = "0x866E30", VA = "0x866E30")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x866F78", Offset = "0x866F78", VA = "0x866F78")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x867214", Offset = "0x867214", VA = "0x867214")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x8675C8", Offset = "0x8675C8", VA = "0x8675C8")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x8676CC", Offset = "0x8676CC", VA = "0x8676CC")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200002D")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000174")]
	Body = 1,
	[Token(Token = "0x4000175")]
	Hands = 2,
	[Token(Token = "0x4000176")]
	Base = 4,
	[Token(Token = "0x4000177")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000178")]
	Expressive = 0x20,
	[Token(Token = "0x4000179")]
	All = -1
}
[Token(Token = "0x200002E")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400017B")]
	AvatarSpecification,
	[Token(Token = "0x400017C")]
	AssetLoaded,
	[Token(Token = "0x400017D")]
	Count
}
[Token(Token = "0x200002F")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000030")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000031")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000183")]
	Mesh,
	[Token(Token = "0x4000184")]
	Texture,
	[Token(Token = "0x4000185")]
	Pose,
	[Token(Token = "0x4000186")]
	Material,
	[Token(Token = "0x4000187")]
	CombinedMesh,
	[Token(Token = "0x4000188")]
	PBSMaterial,
	[Token(Token = "0x4000189")]
	FailedLoad,
	[Token(Token = "0x400018A")]
	Count
}
[Token(Token = "0x2000032")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000033")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000034")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000035")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000036")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000037")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40001BF")]
	RGB24,
	[Token(Token = "0x40001C0")]
	DXT1,
	[Token(Token = "0x40001C1")]
	DXT5,
	[Token(Token = "0x40001C2")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001C3")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001C4")]
	Count
}
[Token(Token = "0x2000038")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000039")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001CC")]
	SkinnedMeshRender,
	[Token(Token = "0x40001CD")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001CE")]
	ProjectorRender,
	[Token(Token = "0x40001CF")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001D0")]
	Count
}
[Token(Token = "0x200003A")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001D2")]
	Unknown,
	[Token(Token = "0x40001D3")]
	Default,
	[Token(Token = "0x40001D4")]
	Verbose,
	[Token(Token = "0x40001D5")]
	Debug,
	[Token(Token = "0x40001D6")]
	Info,
	[Token(Token = "0x40001D7")]
	Warn,
	[Token(Token = "0x40001D8")]
	Error,
	[Token(Token = "0x40001D9")]
	Fatal,
	[Token(Token = "0x40001DA")]
	Silent
}
[Token(Token = "0x200003B")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200003C")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001DF")]
	One = 1,
	[Token(Token = "0x40001E0")]
	Two = 2,
	[Token(Token = "0x40001E1")]
	Three = 4,
	[Token(Token = "0x40001E2")]
	Joystick = 8
}
[Token(Token = "0x200003D")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001E4")]
	One = 1,
	[Token(Token = "0x40001E5")]
	Two = 2,
	[Token(Token = "0x40001E6")]
	Joystick = 4,
	[Token(Token = "0x40001E7")]
	ThumbRest = 8,
	[Token(Token = "0x40001E8")]
	Index = 0x10,
	[Token(Token = "0x40001E9")]
	Pointing = 0x40,
	[Token(Token = "0x40001EA")]
	ThumbUp = 0x80
}
[Token(Token = "0x200003E")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200003F")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000040")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000041")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000042")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000043")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000044")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000045")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000046")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400020A")]
	Add,
	[Token(Token = "0x400020B")]
	Multiply,
	[Token(Token = "0x400020C")]
	Count
}
[Token(Token = "0x2000047")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x400020E")]
	Color,
	[Token(Token = "0x400020F")]
	Texture,
	[Token(Token = "0x4000210")]
	TextureSingleChannel,
	[Token(Token = "0x4000211")]
	Parallax,
	[Token(Token = "0x4000212")]
	Count
}
[Token(Token = "0x2000048")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000214")]
	None,
	[Token(Token = "0x4000215")]
	Positional,
	[Token(Token = "0x4000216")]
	ViewReflection,
	[Token(Token = "0x4000217")]
	Fresnel,
	[Token(Token = "0x4000218")]
	Pulse,
	[Token(Token = "0x4000219")]
	Count
}
[Token(Token = "0x2000049")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x400021B")]
	Touch,
	[Token(Token = "0x400021C")]
	Malibu,
	[Token(Token = "0x400021D")]
	Go,
	[Token(Token = "0x400021E")]
	Quest,
	[Token(Token = "0x400021F")]
	Count
}
[Token(Token = "0x200004A")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000221")]
	Lowest = 1,
	[Token(Token = "0x4000222")]
	Medium = 3,
	[Token(Token = "0x4000223")]
	Highest = 5
}
[Token(Token = "0x200004B")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000225")]
	Unknown = -1,
	[Token(Token = "0x4000226")]
	One,
	[Token(Token = "0x4000227")]
	Two
}
[Token(Token = "0x200004C")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xEEF440", Offset = "0xEEF440", VA = "0xEEF440")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x711BC0", Offset = "0x711BC0", VA = "0x711BC0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x711BC8", Offset = "0x711BC8", VA = "0x711BC8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004D")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xEEF770", Offset = "0xEEF770", VA = "0xEEF770")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x711E68", Offset = "0x711E68", VA = "0x711E68", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x711E70", Offset = "0x711E70", VA = "0x711E70", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004E")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xEEEAE8", Offset = "0xEEEAE8", VA = "0xEEEAE8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x711908", Offset = "0x711908", VA = "0x711908", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x711910", Offset = "0x711910", VA = "0x711910", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004F")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xEEFCD0", Offset = "0xEEFCD0", VA = "0xEEFCD0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x712720", Offset = "0x712720", VA = "0x712720", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x712728", Offset = "0x712728", VA = "0x712728", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000050")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x85B0DC", Offset = "0x85B0DC", VA = "0x85B0DC")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000051")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000052")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400025C")]
	FirstPerson = 1,
	[Token(Token = "0x400025D")]
	ThirdPerson = 2,
	[Token(Token = "0x400025E")]
	SelfOccluding = 4
}
[Token(Token = "0x2000053")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000054")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000055")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000056")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000057")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000274")]
	Default,
	[Token(Token = "0x4000275")]
	GripSphere,
	[Token(Token = "0x4000276")]
	GripCube,
	[Token(Token = "0x4000277")]
	Count
}
[Token(Token = "0x2000058")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000279")]
	Body,
	[Token(Token = "0x400027A")]
	Clothing,
	[Token(Token = "0x400027B")]
	Eyewear,
	[Token(Token = "0x400027C")]
	Hair,
	[Token(Token = "0x400027D")]
	Beard,
	[Token(Token = "0x400027E")]
	Count
}
[Token(Token = "0x2000059")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200005A")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200005B")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200005C")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200005D")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000288")]
	AvatarHead,
	[Token(Token = "0x4000289")]
	AvatarHand,
	[Token(Token = "0x400028A")]
	Object,
	[Token(Token = "0x400028B")]
	ObjectStatic,
	[Token(Token = "0x400028C")]
	Count
}
[Token(Token = "0x200005E")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200005F")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000060")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000061")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000062")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000298")]
	Point,
	[Token(Token = "0x4000299")]
	Direction,
	[Token(Token = "0x400029A")]
	Spot,
	[Token(Token = "0x400029B")]
	Count
}
[Token(Token = "0x2000063")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000064")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000065")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000066")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000067")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40002B1")]
	None = 0u,
	[Token(Token = "0x40002B2")]
	GazeTarget = 1u,
	[Token(Token = "0x40002B3")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000068")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200006A")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200006B")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200006C")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200006D")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000240")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x70196C", Offset = "0x70196C", VA = "0x70196C")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002C8")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000010")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0x85F4BC", Offset = "0x85F4BC", VA = "0x85F4BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x8676DC", Offset = "0x8676DC", VA = "0x8676DC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x867904", Offset = "0x867904", VA = "0x867904")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x867978", Offset = "0x867978", VA = "0x867978")]
	private void Update()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x8682F4", Offset = "0x8682F4", VA = "0x8682F4")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x868360", Offset = "0x868360", VA = "0x868360")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x8683CC", Offset = "0x8683CC", VA = "0x8683CC")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x86843C", Offset = "0x86843C", VA = "0x86843C")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x8684AC", Offset = "0x8684AC", VA = "0x8684AC")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x8680F0", Offset = "0x8680F0", VA = "0x8680F0")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x8685D0", Offset = "0x8685D0", VA = "0x8685D0")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x86870C", Offset = "0x86870C", VA = "0x86870C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x85F69C", Offset = "0x85F69C", VA = "0x85F69C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x868808", Offset = "0x868808", VA = "0x868808")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x8678DC", Offset = "0x8678DC", VA = "0x8678DC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x863158", Offset = "0x863158", VA = "0x863158")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x86890C", Offset = "0x86890C", VA = "0x86890C")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200006E")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000011")]
	public static string AppID
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x8688B4", Offset = "0x8688B4", VA = "0x8688B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x868A64", Offset = "0x868A64", VA = "0x868A64")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public static string MobileAppID
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x8688E0", Offset = "0x8688E0", VA = "0x8688E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x868A94", Offset = "0x868A94", VA = "0x868A94")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x868950", Offset = "0x868950", VA = "0x868950")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x868AC4", Offset = "0x868AC4", VA = "0x868AC4")]
		set
		{
		}
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x868B18", Offset = "0x868B18", VA = "0x868B18")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200006F")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x86B074", Offset = "0x86B074", VA = "0x86B074")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x85E1CC", Offset = "0x85E1CC", VA = "0x85E1CC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x86B1C8", Offset = "0x86B1C8", VA = "0x86B1C8")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x86B360", Offset = "0x86B360", VA = "0x86B360")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000070")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x86B370", Offset = "0x86B370", VA = "0x86B370")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x85E414", Offset = "0x85E414", VA = "0x85E414")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x86B4C0", Offset = "0x86B4C0", VA = "0x86B4C0")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000071")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002D7")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002D8")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002D9")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x868B70", Offset = "0x868B70", VA = "0x868B70")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x85E5C4", Offset = "0x85E5C4", VA = "0x85E5C4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x86A30C", Offset = "0x86A30C", VA = "0x86A30C")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x86943C", Offset = "0x86943C", VA = "0x86943C")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x869004", Offset = "0x869004", VA = "0x869004")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x869218", Offset = "0x869218", VA = "0x869218")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x86B064", Offset = "0x86B064", VA = "0x86B064")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000072")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000241")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000242")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x7019E4", Offset = "0x7019E4", VA = "0x7019E4")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000243")]
	public struct TextureSet
	{
		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x701A8C", Offset = "0x701A8C", VA = "0x701A8C")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BBE0", Offset = "0x68BBE0")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x86CD7C", Offset = "0x86CD7C", VA = "0x86CD7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x86CDEC", Offset = "0x86CDEC", VA = "0x86CDEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x86C480", Offset = "0x86C480", VA = "0x86C480")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x86C6B8", Offset = "0x86C6B8", VA = "0x86C6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x86C6BC", Offset = "0x86C6BC", VA = "0x86C6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x86CD84", Offset = "0x86CD84", VA = "0x86CD84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002DD")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002DE")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002E1")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002E2")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002E3")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002E4")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002E5")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002E6")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002E7")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x86BC9C", Offset = "0x86BC9C", VA = "0x86BC9C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x86C164", Offset = "0x86C164", VA = "0x86C164")]
	public void Update()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x865BC0", Offset = "0x865BC0", VA = "0x865BC0")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x863620", Offset = "0x863620", VA = "0x863620")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x86C30C", Offset = "0x86C30C", VA = "0x86C30C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x8631DC", Offset = "0x8631DC", VA = "0x8631DC")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x863440", Offset = "0x863440", VA = "0x863440")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x86C3BC", Offset = "0x86C3BC", VA = "0x86C3BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690590", Offset = "0x690590")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x868550", Offset = "0x868550", VA = "0x868550")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x86C4AC", Offset = "0x86C4AC", VA = "0x86C4AC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000073")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x86CDF4", Offset = "0x86CDF4", VA = "0x86CDF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x86CF6C", Offset = "0x86CF6C", VA = "0x86CF6C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000074")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60001AB")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x885F38", Offset = "0x885F38", VA = "0x885F38")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000075")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CCD8", Offset = "0x68CCD8")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CD10", Offset = "0x68CD10")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CD48", Offset = "0x68CD48")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x84A1DC", Offset = "0x84A1DC", VA = "0x84A1DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x84A1E0", Offset = "0x84A1E0", VA = "0x84A1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x84A260", Offset = "0x84A260", VA = "0x84A260")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x84A4D4", Offset = "0x84A4D4", VA = "0x84A4D4")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000076")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x84A4FC", Offset = "0x84A4FC", VA = "0x84A4FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x84A640", Offset = "0x84A640", VA = "0x84A640")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x84A714", Offset = "0x84A714", VA = "0x84A714")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x84AB38", Offset = "0x84AB38", VA = "0x84AB38")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x84AB88", Offset = "0x84AB88", VA = "0x84AB88")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000077")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000014")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xB89834", Offset = "0xB89834", VA = "0xB89834")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xB89B10", Offset = "0xB89B10", VA = "0xB89B10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xB89C4C", Offset = "0xB89C4C", VA = "0xB89C4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xB89B80", Offset = "0xB89B80", VA = "0xB89B80")]
	public void Init()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xB8762C", Offset = "0xB8762C", VA = "0xB8762C")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xB89DE8", Offset = "0xB89DE8", VA = "0xB89DE8")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xB875BC", Offset = "0xB875BC", VA = "0xB875BC")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xB876E0", Offset = "0xB876E0", VA = "0xB876E0")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xB89CE4", Offset = "0xB89CE4", VA = "0xB89CE4")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xB89E90", Offset = "0xB89E90", VA = "0xB89E90")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xB89ED4", Offset = "0xB89ED4", VA = "0xB89ED4")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xB8A154", Offset = "0xB8A154", VA = "0xB8A154")]
	private void Prune()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xB89EE4", Offset = "0xB89EE4", VA = "0xB89EE4")]
	private void Display()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xB8A234", Offset = "0xB8A234", VA = "0xB8A234")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000078")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xB8ADFC", Offset = "0xB8ADFC", VA = "0xB8ADFC")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000079")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000245")]
	public enum TouchEvent
	{
		[Token(Token = "0x4000CE5")]
		SingleTap,
		[Token(Token = "0x4000CE6")]
		DoubleTap,
		[Token(Token = "0x4000CE7")]
		Left,
		[Token(Token = "0x4000CE8")]
		Right,
		[Token(Token = "0x4000CE9")]
		Up,
		[Token(Token = "0x4000CEA")]
		Down
	}

	[Token(Token = "0x2000246")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xB862F4", Offset = "0xB862F4", VA = "0xB862F4")]
	public static void Create()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xB90D28", Offset = "0xB90D28", VA = "0xB90D28")]
	public static void Update()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xB9105C", Offset = "0xB9105C", VA = "0xB9105C")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB90E98", Offset = "0xB90E98", VA = "0xB90E98")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xB87090", Offset = "0xB87090", VA = "0xB87090")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200007A")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB91110", Offset = "0xB91110", VA = "0xB91110")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB9118C", Offset = "0xB9118C", VA = "0xB9118C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB91224", Offset = "0xB91224", VA = "0xB91224")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB91280", Offset = "0xB91280", VA = "0xB91280")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB912E4", Offset = "0xB912E4", VA = "0xB912E4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB912E8", Offset = "0xB912E8", VA = "0xB912E8")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200007B")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000247")]
	public enum Result
	{
		[Token(Token = "0x4000CEC")]
		Success = 0,
		[Token(Token = "0x4000CED")]
		Unknown = -2200,
		[Token(Token = "0x4000CEE")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4000CEF")]
		InvalidParam = -2202,
		[Token(Token = "0x4000CF0")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000CF1")]
		MissingDLL = -2204,
		[Token(Token = "0x4000CF2")]
		BadVersion = -2205,
		[Token(Token = "0x4000CF3")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000248")]
	public enum AudioDataType
	{
		[Token(Token = "0x4000CF5")]
		S16_Mono,
		[Token(Token = "0x4000CF6")]
		S16_Stereo,
		[Token(Token = "0x4000CF7")]
		F32_Mono,
		[Token(Token = "0x4000CF8")]
		F32_Stereo
	}

	[Token(Token = "0x2000249")]
	public enum Viseme
	{
		[Token(Token = "0x4000CFA")]
		sil,
		[Token(Token = "0x4000CFB")]
		PP,
		[Token(Token = "0x4000CFC")]
		FF,
		[Token(Token = "0x4000CFD")]
		TH,
		[Token(Token = "0x4000CFE")]
		DD,
		[Token(Token = "0x4000CFF")]
		kk,
		[Token(Token = "0x4000D00")]
		CH,
		[Token(Token = "0x4000D01")]
		SS,
		[Token(Token = "0x4000D02")]
		nn,
		[Token(Token = "0x4000D03")]
		RR,
		[Token(Token = "0x4000D04")]
		aa,
		[Token(Token = "0x4000D05")]
		E,
		[Token(Token = "0x4000D06")]
		ih,
		[Token(Token = "0x4000D07")]
		oh,
		[Token(Token = "0x4000D08")]
		ou
	}

	[Token(Token = "0x200024A")]
	public enum Signals
	{
		[Token(Token = "0x4000D0A")]
		VisemeOn,
		[Token(Token = "0x4000D0B")]
		VisemeOff,
		[Token(Token = "0x4000D0C")]
		VisemeAmount,
		[Token(Token = "0x4000D0D")]
		VisemeSmoothing,
		[Token(Token = "0x4000D0E")]
		LaughterAmount
	}

	[Token(Token = "0x200024B")]
	public enum ContextProviders
	{
		[Token(Token = "0x4000D10")]
		Original,
		[Token(Token = "0x4000D11")]
		Enhanced,
		[Token(Token = "0x4000D12")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x200024C")]
	public class Frame
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xB86DA4", Offset = "0xB86DA4", VA = "0xB86DA4")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xB86E44", Offset = "0xB86E44", VA = "0xB86E44")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xB86ED4", Offset = "0xB86ED4", VA = "0xB86ED4")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000301")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xB85894", Offset = "0xB85894", VA = "0xB85894")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xB85940", Offset = "0xB85940", VA = "0xB85940")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xB859CC", Offset = "0xB859CC", VA = "0xB859CC")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xB85A7C", Offset = "0xB85A7C", VA = "0xB85A7C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xB85B40", Offset = "0xB85B40", VA = "0xB85B40")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xB85C28", Offset = "0xB85C28", VA = "0xB85C28")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xB85CC4", Offset = "0xB85CC4", VA = "0xB85CC4")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xB85D60", Offset = "0xB85D60", VA = "0xB85D60")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xB85E24", Offset = "0xB85E24", VA = "0xB85E24")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xB85F3C", Offset = "0xB85F3C", VA = "0xB85F3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xB862F8", Offset = "0xB862F8", VA = "0xB862F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xB861BC", Offset = "0xB861BC", VA = "0xB861BC")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xB863D8", Offset = "0xB863D8", VA = "0xB863D8")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xB864EC", Offset = "0xB864EC", VA = "0xB864EC")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xB86154", Offset = "0xB86154", VA = "0xB86154")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB8655C", Offset = "0xB8655C", VA = "0xB8655C")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB86640", Offset = "0xB86640", VA = "0xB86640")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xB8672C", Offset = "0xB8672C", VA = "0xB8672C")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xB867C0", Offset = "0xB867C0", VA = "0xB867C0")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xB86854", Offset = "0xB86854", VA = "0xB86854")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xB86918", Offset = "0xB86918", VA = "0xB86918")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB86AD0", Offset = "0xB86AD0", VA = "0xB86AD0")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB86C80", Offset = "0xB86C80", VA = "0xB86C80")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x200007C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B070", Offset = "0x68B070")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CD80", Offset = "0x68CD80")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CDB8", Offset = "0x68CDB8")]
	public bool enableTouchInput;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CDF0", Offset = "0x68CDF0")]
	public bool audioLoopback;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CE28", Offset = "0x68CE28")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CE60", Offset = "0x68CE60")]
	public bool showVisemes;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CE98", Offset = "0x68CE98")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CED0", Offset = "0x68CED0")]
	public bool skipAudioSource;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CF08", Offset = "0x68CF08")]
	public float gain;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB86F5C", Offset = "0xB86F5C", VA = "0xB86F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xB871D8", Offset = "0xB871D8", VA = "0xB871D8")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB87764", Offset = "0xB87764", VA = "0xB87764")]
	private void Update()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB87A78", Offset = "0xB87A78", VA = "0xB87A78")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB87B18", Offset = "0xB87B18", VA = "0xB87B18")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB87BBC", Offset = "0xB87BBC", VA = "0xB87BBC")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB87D24", Offset = "0xB87D24", VA = "0xB87D24")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB87E84", Offset = "0xB87E84", VA = "0xB87E84")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xB87F68", Offset = "0xB87F68", VA = "0xB87F68")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB877B4", Offset = "0xB877B4", VA = "0xB877B4")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB874E8", Offset = "0xB874E8", VA = "0xB874E8")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB87F78", Offset = "0xB87F78", VA = "0xB87F78")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB880A4", Offset = "0xB880A4", VA = "0xB880A4")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x200007D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B0D4", Offset = "0x68B0D4")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CF40", Offset = "0x68CF40")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CF78", Offset = "0x68CF78")]
	public bool enableAcceleration;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000015")]
	public int Smoothing
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xB88224", Offset = "0xB88224", VA = "0xB88224")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xB88138", Offset = "0xB88138", VA = "0xB88138")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public uint Context
	{
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xB87D1C", Offset = "0xB87D1C", VA = "0xB87D1C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000017")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xB877AC", Offset = "0xB877AC", VA = "0xB877AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xB8822C", Offset = "0xB8822C", VA = "0xB8822C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xB883C4", Offset = "0xB883C4", VA = "0xB883C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xB884E8", Offset = "0xB884E8", VA = "0xB884E8")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xB884F0", Offset = "0xB884F0", VA = "0xB884F0")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xB885E4", Offset = "0xB885E4", VA = "0xB885E4")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xB886AC", Offset = "0xB886AC", VA = "0xB886AC")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xB880C8", Offset = "0xB880C8", VA = "0xB880C8")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x200007E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B138", Offset = "0x68B138")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CFB0", Offset = "0x68CFB0")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xB8872C", Offset = "0xB8872C", VA = "0xB8872C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xB88938", Offset = "0xB88938", VA = "0xB88938")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x200007F")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68CFE8", Offset = "0x68CFE8")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D020", Offset = "0x68D020")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D058", Offset = "0x68D058")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D090", Offset = "0x68D090")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D0C8", Offset = "0x68D0C8")]
	public KeyCode laughterKey;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D100", Offset = "0x68D100")]
	public int laughterBlendTarget;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68D138", Offset = "0x68D138")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D138", Offset = "0x68D138")]
	public float laughterThreshold;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68D18C", Offset = "0x68D18C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D18C", Offset = "0x68D18C")]
	public float laughterMultiplier;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68D1E0", Offset = "0x68D1E0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D1E0", Offset = "0x68D1E0")]
	public int smoothAmount;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB8893C", Offset = "0xB8893C", VA = "0xB8893C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xB88A8C", Offset = "0xB88A8C", VA = "0xB88A8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB88E08", Offset = "0xB88E08", VA = "0xB88E08")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xB88BC0", Offset = "0xB88BC0", VA = "0xB88BC0")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xB88D04", Offset = "0xB88D04", VA = "0xB88D04")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xB88EEC", Offset = "0xB88EEC", VA = "0xB88EEC")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xB89010", Offset = "0xB89010", VA = "0xB89010")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xB8908C", Offset = "0xB8908C", VA = "0xB8908C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000080")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D238", Offset = "0x68D238")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x68D238", Offset = "0x68D238")]
	public Texture[] Textures;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68D3B4", Offset = "0x68D3B4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D3B4", Offset = "0x68D3B4")]
	public int smoothAmount;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xB89184", Offset = "0xB89184", VA = "0xB89184")]
	private void Start()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xB892E4", Offset = "0xB892E4", VA = "0xB892E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xB89588", Offset = "0xB89588", VA = "0xB89588")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xB89788", Offset = "0xB89788", VA = "0xB89788")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000081")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B19C", Offset = "0x68B19C")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x200024D")]
	public enum micActivation
	{
		[Token(Token = "0x4000D18")]
		HoldToSpeak,
		[Token(Token = "0x4000D19")]
		PushToSpeak,
		[Token(Token = "0x4000D1A")]
		ConstantSpeak
	}

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D40C", Offset = "0x68D40C")]
	public AudioSource audioSource;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D444", Offset = "0x68D444")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D47C", Offset = "0x68D47C")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68D4B4", Offset = "0x68D4B4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D4B4", Offset = "0x68D4B4")]
	private float micInputVolume;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D51C", Offset = "0x68D51C")]
	private int micFrequency;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D568", Offset = "0x68D568")]
	public micActivation micControl;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D5A0", Offset = "0x68D5A0")]
	public KeyCode micActivationKey;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D5D8", Offset = "0x68D5D8")]
	public string selectedDevice;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000018")]
	public float MicFrequency
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xB8A2A8", Offset = "0xB8A2A8", VA = "0xB8A2A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000211")]
		[Address(RVA = "0xB8A2B4", Offset = "0xB8A2B4", VA = "0xB8A2B4")]
		set
		{
		}
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xB8A340", Offset = "0xB8A340", VA = "0xB8A340")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xB8A400", Offset = "0xB8A400", VA = "0xB8A400")]
	private void Start()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB8A460", Offset = "0xB8A460", VA = "0xB8A460")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xB8A5CC", Offset = "0xB8A5CC", VA = "0xB8A5CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xB8AA84", Offset = "0xB8AA84", VA = "0xB8AA84")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xB8AA98", Offset = "0xB8AA98", VA = "0xB8AA98")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xB8AAB0", Offset = "0xB8AAB0", VA = "0xB8AAB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xB8AAB4", Offset = "0xB8AAB4", VA = "0xB8AAB4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xB8AB2C", Offset = "0xB8AB2C", VA = "0xB8AB2C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xB8A504", Offset = "0xB8A504", VA = "0xB8A504")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xB8A8BC", Offset = "0xB8A8BC", VA = "0xB8A8BC")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xB8A73C", Offset = "0xB8A73C", VA = "0xB8A73C")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xB8AD54", Offset = "0xB8AD54", VA = "0xB8AD54")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xB8AD5C", Offset = "0xB8AD5C", VA = "0xB8AD5C")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000082")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xB88840", Offset = "0xB88840", VA = "0xB88840")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xB8AD8C", Offset = "0xB8AD8C", VA = "0xB8AD8C")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000083")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200024E")]
	public delegate void OnClick();

	[Token(Token = "0x200024F")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000250")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000251")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BBF0", Offset = "0x68BBF0")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x87F81C", Offset = "0x87F81C", VA = "0x87F81C")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x880354", Offset = "0x880354", VA = "0x880354")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC00", Offset = "0x68BC00")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x87FB20", Offset = "0x87FB20", VA = "0x87FB20")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x880780", Offset = "0x880780", VA = "0x880780")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC10", Offset = "0x68BC10")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x87FD6C", Offset = "0x87FD6C", VA = "0x87FD6C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x880C0C", Offset = "0x880C0C", VA = "0x880C0C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC20", Offset = "0x68BC20")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x87FF40", Offset = "0x87FF40", VA = "0x87FF40")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x881370", Offset = "0x881370", VA = "0x881370")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC30", Offset = "0x68BC30")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x88021C", Offset = "0x88021C", VA = "0x88021C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x8813A0", Offset = "0x8813A0", VA = "0x8813A0")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000335")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000336")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000337")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000344")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000345")]
	private const float marginH = 16f;

	[Token(Token = "0x4000346")]
	private const float marginV = 16f;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x87E22C", Offset = "0x87E22C", VA = "0x87E22C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x87E754", Offset = "0x87E754", VA = "0x87E754")]
	public void Show()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x87EF60", Offset = "0x87EF60", VA = "0x87EF60")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x87EC60", Offset = "0x87EC60", VA = "0x87EC60")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x87F154", Offset = "0x87F154", VA = "0x87F154")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x87F510", Offset = "0x87F510", VA = "0x87F510")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x87F824", Offset = "0x87F824", VA = "0x87F824")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x87F92C", Offset = "0x87F92C", VA = "0x87F92C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x87FB28", Offset = "0x87FB28", VA = "0x87FB28")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x87FBC4", Offset = "0x87FBC4", VA = "0x87FBC4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x87FD74", Offset = "0x87FD74", VA = "0x87FD74")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x87FF48", Offset = "0x87FF48", VA = "0x87FF48")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x880224", Offset = "0x880224", VA = "0x880224")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x8802E4", Offset = "0x8802E4", VA = "0x8802E4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000084")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x896DF0", Offset = "0x896DF0", VA = "0x896DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x896E78", Offset = "0x896E78", VA = "0x896E78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x896EF8", Offset = "0x896EF8", VA = "0x896EF8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x896F68", Offset = "0x896F68", VA = "0x896F68")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000085")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000257")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000D24")]
		On,
		[Token(Token = "0x4000D25")]
		Off,
		[Token(Token = "0x4000D26")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000019")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x8495E8", Offset = "0x8495E8", VA = "0x8495E8")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x84958C", Offset = "0x84958C", VA = "0x84958C")]
		set
		{
		}
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x8495F0", Offset = "0x8495F0", VA = "0x8495F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x849648", Offset = "0x849648", VA = "0x849648")]
	private void Start()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x849768", Offset = "0x849768", VA = "0x849768", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x849784", Offset = "0x849784", VA = "0x849784", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x8497FC", Offset = "0x8497FC", VA = "0x8497FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x849AE0", Offset = "0x849AE0", VA = "0x849AE0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x849C3C", Offset = "0x849C3C", VA = "0x849C3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x849CD8", Offset = "0x849CD8", VA = "0x849CD8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x849DBC", Offset = "0x849DBC", VA = "0x849DBC")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x849E7C", Offset = "0x849E7C", VA = "0x849E7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x849F48", Offset = "0x849F48", VA = "0x849F48")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000086")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x98B720", Offset = "0x98B720", VA = "0x98B720")]
	private void Start()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x98B974", Offset = "0x98B974", VA = "0x98B974")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x98BEAC", Offset = "0x98BEAC", VA = "0x98BEAC")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000087")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x893A78", Offset = "0x893A78", VA = "0x893A78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x893BF8", Offset = "0x893BF8", VA = "0x893BF8")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x893E60", Offset = "0x893E60", VA = "0x893E60")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000088")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x1700001A")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x893F54", Offset = "0x893F54", VA = "0x893F54")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x893B0C", Offset = "0x893B0C", VA = "0x893B0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6905F4", Offset = "0x6905F4")]
		add
		{
		}
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x893E68", Offset = "0x893E68", VA = "0x893E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690604", Offset = "0x690604")]
		remove
		{
		}
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x893F60", Offset = "0x893F60", VA = "0x893F60")]
	private void Start()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x894094", Offset = "0x894094", VA = "0x894094")]
	private void Update()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x89424C", Offset = "0x89424C", VA = "0x89424C")]
	private void Recentered()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x894254", Offset = "0x894254", VA = "0x894254")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000089")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D6C0", Offset = "0x68D6C0")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D6F8", Offset = "0x68D6F8")]
	public bool EnableCollision;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D730", Offset = "0x68D730")]
	public float MaxFade;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D768", Offset = "0x68D768")]
	public float FadeMinDistance;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D7A0", Offset = "0x68D7A0")]
	public float FadeMaxDistance;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x98F5B8", Offset = "0x98F5B8", VA = "0x98F5B8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x98F640", Offset = "0x98F640", VA = "0x98F640")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x98F6B0", Offset = "0x98F6B0", VA = "0x98F6B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x98F6B4", Offset = "0x98F6B4", VA = "0x98F6B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x98F6EC", Offset = "0x98F6EC", VA = "0x98F6EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x98F724", Offset = "0x98F724", VA = "0x98F724")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200008A")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x84BA68", Offset = "0x84BA68", VA = "0x84BA68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x84BB14", Offset = "0x84BB14", VA = "0x84BB14")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200008B")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000258")]
	public enum States
	{
		[Token(Token = "0x4000D28")]
		Ready,
		[Token(Token = "0x4000D29")]
		Aim,
		[Token(Token = "0x4000D2A")]
		CancelAim,
		[Token(Token = "0x4000D2B")]
		PreTeleport,
		[Token(Token = "0x4000D2C")]
		CancelTeleport,
		[Token(Token = "0x4000D2D")]
		Teleporting,
		[Token(Token = "0x4000D2E")]
		PostTeleport
	}

	[Token(Token = "0x2000259")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000D30")]
		None,
		[Token(Token = "0x4000D31")]
		Aim,
		[Token(Token = "0x4000D32")]
		PreTeleport,
		[Token(Token = "0x4000D33")]
		Teleport
	}

	[Token(Token = "0x200025A")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000D35")]
		Point,
		[Token(Token = "0x4000D36")]
		Sphere,
		[Token(Token = "0x4000D37")]
		Capsule
	}

	[Token(Token = "0x200025B")]
	public class AimData
	{
		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690260", Offset = "0x690260")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700014A")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0x84FBD4", Offset = "0x84FBD4", VA = "0x84FBD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x692AA8", Offset = "0x692AA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EA7")]
			[Address(RVA = "0x84FBCC", Offset = "0x84FBCC", VA = "0x84FBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x692AB8", Offset = "0x692AB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x84FB58", Offset = "0x84FB58", VA = "0x84FB58")]
		public AimData()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x84FBDC", Offset = "0x84FBDC", VA = "0x84FBDC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC40", Offset = "0x68BC40")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x84F934", Offset = "0x84F934", VA = "0x84F934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x84F9A4", Offset = "0x84F9A4", VA = "0x84F9A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x84D46C", Offset = "0x84D46C", VA = "0x84D46C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x84F7C8", Offset = "0x84F7C8", VA = "0x84F7C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x84F7CC", Offset = "0x84F7CC", VA = "0x84F7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x84F93C", Offset = "0x84F93C", VA = "0x84F93C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC50", Offset = "0x68BC50")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x84F104", Offset = "0x84F104", VA = "0x84F104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x84F174", Offset = "0x84F174", VA = "0x84F174", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x84DB08", Offset = "0x84DB08", VA = "0x84DB08")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x84EF38", Offset = "0x84EF38", VA = "0x84EF38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x84EF3C", Offset = "0x84EF3C", VA = "0x84EF3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x84F10C", Offset = "0x84F10C", VA = "0x84F10C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC60", Offset = "0x68BC60")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x84F258", Offset = "0x84F258", VA = "0x84F258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0x84F2C8", Offset = "0x84F2C8", VA = "0x84F2C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x84DD80", Offset = "0x84DD80", VA = "0x84DD80")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x84F17C", Offset = "0x84F17C", VA = "0x84F17C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x84F180", Offset = "0x84F180", VA = "0x84F180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x84F260", Offset = "0x84F260", VA = "0x84F260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC70", Offset = "0x68BC70")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x84F750", Offset = "0x84F750", VA = "0x84F750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x84F7C0", Offset = "0x84F7C0", VA = "0x84F7C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x84DFF8", Offset = "0x84DFF8", VA = "0x84DFF8")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x84F604", Offset = "0x84F604", VA = "0x84F604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x84F608", Offset = "0x84F608", VA = "0x84F608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x84F758", Offset = "0x84F758", VA = "0x84F758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC80", Offset = "0x68BC80")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0x84F3AC", Offset = "0x84F3AC", VA = "0x84F3AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x84F41C", Offset = "0x84F41C", VA = "0x84F41C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x84E270", Offset = "0x84E270", VA = "0x84E270")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x84F2D0", Offset = "0x84F2D0", VA = "0x84F2D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x84F2D4", Offset = "0x84F2D4", VA = "0x84F2D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x84F3B4", Offset = "0x84F3B4", VA = "0x84F3B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BC90", Offset = "0x68BC90")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x84FAE0", Offset = "0x84FAE0", VA = "0x84FAE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x84FB50", Offset = "0x84FB50", VA = "0x84FB50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x84E4E8", Offset = "0x84E4E8", VA = "0x84E4E8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x84F9AC", Offset = "0x84F9AC", VA = "0x84F9AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x84F9B0", Offset = "0x84F9B0", VA = "0x84F9B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x84FAE8", Offset = "0x84FAE8", VA = "0x84FAE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BCA0", Offset = "0x68BCA0")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000157")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x84F58C", Offset = "0x84F58C", VA = "0x84F58C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000158")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x84F5FC", Offset = "0x84F5FC", VA = "0x84F5FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x84E760", Offset = "0x84E760", VA = "0x84E760")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x84F424", Offset = "0x84F424", VA = "0x84F424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x84F428", Offset = "0x84F428", VA = "0x84F428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x84F594", Offset = "0x84F594", VA = "0x84F594", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D7D8", Offset = "0x68D7D8")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D810", Offset = "0x68D810")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D848", Offset = "0x68D848")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D880", Offset = "0x68D880")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D8B8", Offset = "0x68D8B8")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D8F0", Offset = "0x68D8F0")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D928", Offset = "0x68D928")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D960", Offset = "0x68D960")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68D998", Offset = "0x68D998")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D9A8", Offset = "0x68D9A8")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68D9E0", Offset = "0x68D9E0")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68DA28", Offset = "0x68DA28")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DA38", Offset = "0x68DA38")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DA70", Offset = "0x68DA70")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DAA8", Offset = "0x68DAA8")]
	public float AimCollisionRadius;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DAE0", Offset = "0x68DAE0")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700001B")]
	public States CurrentState
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x84C774", Offset = "0x84C774", VA = "0x84C774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690614", Offset = "0x690614")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x84C77C", Offset = "0x84C77C", VA = "0x84C77C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690624", Offset = "0x690624")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x84CA3C", Offset = "0x84CA3C", VA = "0x84CA3C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001D")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x84CA7C", Offset = "0x84CA7C", VA = "0x84CA7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690654", Offset = "0x690654")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x84CA84", Offset = "0x84CA84", VA = "0x84CA84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690664", Offset = "0x690664")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x84C784", Offset = "0x84C784", VA = "0x84C784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690634", Offset = "0x690634")]
		add
		{
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x84C870", Offset = "0x84C870", VA = "0x84C870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690644", Offset = "0x690644")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x84D294", Offset = "0x84D294", VA = "0x84D294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6906AC", Offset = "0x6906AC")]
		add
		{
		}
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x84D380", Offset = "0x84D380", VA = "0x84D380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6906BC", Offset = "0x6906BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0x84D498", Offset = "0x84D498", VA = "0x84D498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690730", Offset = "0x690730")]
		add
		{
		}
		[Token(Token = "0x600026D")]
		[Address(RVA = "0x84D584", Offset = "0x84D584", VA = "0x84D584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690740", Offset = "0x690740")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0x84D670", Offset = "0x84D670", VA = "0x84D670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690750", Offset = "0x690750")]
		add
		{
		}
		[Token(Token = "0x600026F")]
		[Address(RVA = "0x84D75C", Offset = "0x84D75C", VA = "0x84D75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690760", Offset = "0x690760")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0x84D8BC", Offset = "0x84D8BC", VA = "0x84D8BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690770", Offset = "0x690770")]
		add
		{
		}
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x84D9A8", Offset = "0x84D9A8", VA = "0x84D9A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690780", Offset = "0x690780")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x84DB34", Offset = "0x84DB34", VA = "0x84DB34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6907F4", Offset = "0x6907F4")]
		add
		{
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x84DC20", Offset = "0x84DC20", VA = "0x84DC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690804", Offset = "0x690804")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x84DDAC", Offset = "0x84DDAC", VA = "0x84DDAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690878", Offset = "0x690878")]
		add
		{
		}
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x84DE98", Offset = "0x84DE98", VA = "0x84DE98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690888", Offset = "0x690888")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x84E024", Offset = "0x84E024", VA = "0x84E024")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6908FC", Offset = "0x6908FC")]
		add
		{
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x84E110", Offset = "0x84E110", VA = "0x84E110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69090C", Offset = "0x69090C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x84E29C", Offset = "0x84E29C", VA = "0x84E29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690980", Offset = "0x690980")]
		add
		{
		}
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x84E388", Offset = "0x84E388", VA = "0x84E388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690990", Offset = "0x690990")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x84E514", Offset = "0x84E514", VA = "0x84E514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690A04", Offset = "0x690A04")]
		add
		{
		}
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x84E600", Offset = "0x84E600", VA = "0x84E600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690A14", Offset = "0x690A14")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0x84E78C", Offset = "0x84E78C", VA = "0x84E78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690A88", Offset = "0x690A88")]
		add
		{
		}
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x84E878", Offset = "0x84E878", VA = "0x84E878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690A98", Offset = "0x690A98")]
		remove
		{
		}
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x84C38C", Offset = "0x84C38C", VA = "0x84C38C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x84C3B0", Offset = "0x84C3B0", VA = "0x84C3B0")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x84C95C", Offset = "0x84C95C", VA = "0x84C95C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x84CA8C", Offset = "0x84CA8C", VA = "0x84CA8C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x84CE34", Offset = "0x84CE34", VA = "0x84CE34")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x690674", Offset = "0x690674")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x84CEEC", Offset = "0x84CEEC", VA = "0x84CEEC")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x84D014", Offset = "0x84D014", VA = "0x84D014")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x84D044", Offset = "0x84D044", VA = "0x84D044")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x84D110", Offset = "0x84D110", VA = "0x84D110")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x84D18C", Offset = "0x84D18C", VA = "0x84D18C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x84D1E8", Offset = "0x84D1E8", VA = "0x84D1E8", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x84D28C", Offset = "0x84D28C", VA = "0x84D28C", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x84D218", Offset = "0x84D218", VA = "0x84D218")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6906CC", Offset = "0x6906CC")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x84D848", Offset = "0x84D848", VA = "0x84D848")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x84DA94", Offset = "0x84DA94", VA = "0x84DA94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690790", Offset = "0x690790")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x84DD0C", Offset = "0x84DD0C", VA = "0x84DD0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690814", Offset = "0x690814")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x84DF84", Offset = "0x84DF84", VA = "0x84DF84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690898", Offset = "0x690898")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x84E1FC", Offset = "0x84E1FC", VA = "0x84E1FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x69091C", Offset = "0x69091C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x84E474", Offset = "0x84E474", VA = "0x84E474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6909A0", Offset = "0x6909A0")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x84E6EC", Offset = "0x84E6EC", VA = "0x84E6EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690A24", Offset = "0x690A24")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x84E964", Offset = "0x84E964", VA = "0x84E964")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x84EB08", Offset = "0x84EB08", VA = "0x84EB08")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x84EB60", Offset = "0x84EB60", VA = "0x84EB60")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x84ED98", Offset = "0x84ED98", VA = "0x84ED98")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x84EF28", Offset = "0x84EF28", VA = "0x84EF28")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200008C")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x805550", Offset = "0x805550", VA = "0x805550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690AA8", Offset = "0x690AA8")]
		add
		{
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x80563C", Offset = "0x80563C", VA = "0x80563C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690AB8", Offset = "0x690AB8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x805728", Offset = "0x805728", VA = "0x805728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690AC8", Offset = "0x690AC8")]
		add
		{
		}
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x805814", Offset = "0x805814", VA = "0x805814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690AD8", Offset = "0x690AD8")]
		remove
		{
		}
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x805900", Offset = "0x805900", VA = "0x805900")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x8059A8", Offset = "0x8059A8", VA = "0x8059A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x8059AC", Offset = "0x8059AC", VA = "0x8059AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x805A20", Offset = "0x805A20", VA = "0x805A20")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x805C28", Offset = "0x805C28", VA = "0x805C28")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x805F50", Offset = "0x805F50", VA = "0x805F50")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x806170", Offset = "0x806170", VA = "0x806170")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200008D")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000295")]
	[Address(RVA = "0xEE2C00", Offset = "0xEE2C00", VA = "0xEE2C00", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xEE2CA0", Offset = "0xEE2CA0", VA = "0xEE2CA0", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000297")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xEE2D7C", Offset = "0xEE2D7C", VA = "0xEE2D7C")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200008E")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DBD8", Offset = "0x68DBD8")]
	public float Range;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xEE2D8C", Offset = "0xEE2D8C", VA = "0xEE2D8C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xEE2F3C", Offset = "0xEE2F3C", VA = "0xEE2F3C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200008F")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DC10", Offset = "0x68DC10")]
	public float Range;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DC48", Offset = "0x68DC48")]
	public float MinimumElevation;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DC80", Offset = "0x68DC80")]
	public float Gravity;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DCB8", Offset = "0x68DCB8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68DCB8", Offset = "0x68DCB8")]
	public float AimVelocity;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DD14", Offset = "0x68DD14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68DD14", Offset = "0x68DD14")]
	public float AimStep;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xEE2F4C", Offset = "0xEE2F4C", VA = "0xEE2F4C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xEE31B0", Offset = "0xEE31B0", VA = "0xEE31B0")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000090")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DD6C", Offset = "0x68DD6C")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xEE31C4", Offset = "0xEE31C4", VA = "0xEE31C4")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xEE32A8", Offset = "0xEE32A8", VA = "0xEE32A8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xEE32F4", Offset = "0xEE32F4", VA = "0xEE32F4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xEE3340", Offset = "0xEE3340", VA = "0xEE3340")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xEE33F4", Offset = "0xEE33F4", VA = "0xEE33F4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xEE3494", Offset = "0xEE3494", VA = "0xEE3494", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xEE3530", Offset = "0xEE3530", VA = "0xEE3530")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000091")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68DDA4", Offset = "0x68DDA4")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DDB4", Offset = "0x68DDB4")]
	public Transform PositionIndicator;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DDEC", Offset = "0x68DDEC")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DE24", Offset = "0x68DE24")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700001E")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xEE36EC", Offset = "0xEE36EC", VA = "0xEE36EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690AE8", Offset = "0x690AE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xEE36F4", Offset = "0xEE36F4", VA = "0xEE36F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690AF8", Offset = "0x690AF8")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xEE3904", Offset = "0xEE3904", VA = "0xEE3904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690B08", Offset = "0x690B08")]
		add
		{
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xEE39F0", Offset = "0xEE39F0", VA = "0xEE39F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690B18", Offset = "0x690B18")]
		remove
		{
		}
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xEE3700", Offset = "0xEE3700", VA = "0xEE3700")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xEE3790", Offset = "0xEE3790", VA = "0xEE3790")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xEE38AC", Offset = "0xEE38AC", VA = "0xEE38AC")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xEE3900", Offset = "0xEE3900", VA = "0xEE3900")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xEE3ADC", Offset = "0xEE3ADC", VA = "0xEE3ADC")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xEE3B44", Offset = "0xEE3B44", VA = "0xEE3B44")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xEE3B7C", Offset = "0xEE3B7C", VA = "0xEE3B7C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000092")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BCB0", Offset = "0x68BCB0")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000159")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0xEE43D4", Offset = "0xEE43D4", VA = "0xEE43D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xEE4444", Offset = "0xEE4444", VA = "0xEE4444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xEE40EC", Offset = "0xEE40EC", VA = "0xEE40EC")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xEE4338", Offset = "0xEE4338", VA = "0xEE4338", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xEE433C", Offset = "0xEE433C", VA = "0xEE433C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xEE43DC", Offset = "0xEE43DC", VA = "0xEE43DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BCC0", Offset = "0x68BCC0")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700015B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0xEE42C0", Offset = "0xEE42C0", VA = "0xEE42C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0xEE4330", Offset = "0xEE4330", VA = "0xEE4330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xEE418C", Offset = "0xEE418C", VA = "0xEE418C")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xEE4210", Offset = "0xEE4210", VA = "0xEE4210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xEE4214", Offset = "0xEE4214", VA = "0xEE4214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xEE42C8", Offset = "0xEE42C8", VA = "0xEE42C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xEE3E58", Offset = "0xEE3E58", VA = "0xEE3E58")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xEE3F04", Offset = "0xEE3F04", VA = "0xEE3F04", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xEE3F88", Offset = "0xEE3F88", VA = "0xEE3F88", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xEE4078", Offset = "0xEE4078", VA = "0xEE4078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690B28", Offset = "0x690B28")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xEE4118", Offset = "0xEE4118", VA = "0xEE4118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690B8C", Offset = "0x690B8C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002B5")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xEE41B8", Offset = "0xEE41B8", VA = "0xEE41B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690BF0", Offset = "0x690BF0")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xEE41E4", Offset = "0xEE41E4", VA = "0xEE41E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690C00", Offset = "0x690C00")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000093")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68DE6C", Offset = "0x68DE6C")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DE7C", Offset = "0x68DE7C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DEB4", Offset = "0x68DEB4")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DEEC", Offset = "0x68DEEC")]
	public bool FastTeleport;

	[Token(Token = "0x1700001F")]
	public Transform Pointer
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xEE444C", Offset = "0xEE444C", VA = "0xEE444C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690C10", Offset = "0x690C10")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xEE4454", Offset = "0xEE4454", VA = "0xEE4454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690C20", Offset = "0x690C20")]
		private set
		{
		}
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xEE445C", Offset = "0xEE445C", VA = "0xEE445C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xEE45C4", Offset = "0xEE45C4", VA = "0xEE45C4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xEE46B4", Offset = "0xEE46B4", VA = "0xEE46B4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000094")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000265")]
	public enum InputModes
	{
		[Token(Token = "0x4000D59")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000D5A")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000D5B")]
		ThumbstickTeleport,
		[Token(Token = "0x4000D5C")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000266")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000D5E")]
		A,
		[Token(Token = "0x4000D5F")]
		B,
		[Token(Token = "0x4000D60")]
		LeftTrigger,
		[Token(Token = "0x4000D61")]
		LeftThumbstick,
		[Token(Token = "0x4000D62")]
		RightTrigger,
		[Token(Token = "0x4000D63")]
		RightThumbstick,
		[Token(Token = "0x4000D64")]
		X,
		[Token(Token = "0x4000D65")]
		Y
	}

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DF24", Offset = "0x68DF24")]
	public InputModes InputMode;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DF5C", Offset = "0x68DF5C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DF94", Offset = "0x68DF94")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68DFCC", Offset = "0x68DFCC")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xEE46B8", Offset = "0xEE46B8", VA = "0xEE46B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xEE46BC", Offset = "0xEE46BC", VA = "0xEE46BC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xEE4B74", Offset = "0xEE4B74", VA = "0xEE4B74", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xEE4C44", Offset = "0xEE4C44", VA = "0xEE4C44")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000095")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000267")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000D67")]
		HeadRelative,
		[Token(Token = "0x4000D68")]
		ForwardFacing
	}

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BCD0", Offset = "0x68BCD0")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0xEE5194", Offset = "0xEE5194", VA = "0xEE5194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0xEE5204", Offset = "0xEE5204", VA = "0xEE5204", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xEE4EFC", Offset = "0xEE4EFC", VA = "0xEE4EFC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xEE50A8", Offset = "0xEE50A8", VA = "0xEE50A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xEE50AC", Offset = "0xEE50AC", VA = "0xEE50AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xEE519C", Offset = "0xEE519C", VA = "0xEE519C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xEE4CF0", Offset = "0xEE4CF0", VA = "0xEE4CF0")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xEE4DA4", Offset = "0xEE4DA4", VA = "0xEE4DA4")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xEE4DAC", Offset = "0xEE4DAC", VA = "0xEE4DAC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xEE4E1C", Offset = "0xEE4E1C", VA = "0xEE4E1C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xEE4E88", Offset = "0xEE4E88", VA = "0xEE4E88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690C30", Offset = "0x690C30")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002C7")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xEE4F28", Offset = "0xEE4F28", VA = "0xEE4F28")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xEE507C", Offset = "0xEE507C", VA = "0xEE507C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690C94", Offset = "0x690C94")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000096")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xEE520C", Offset = "0xEE520C", VA = "0xEE520C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xEE5210", Offset = "0xEE5210", VA = "0xEE5210", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xEE52CC", Offset = "0xEE52CC", VA = "0xEE52CC")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E004", Offset = "0x68E004")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E03C", Offset = "0x68E03C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E074", Offset = "0x68E074")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E0AC", Offset = "0x68E0AC")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xEE52D0", Offset = "0xEE52D0", VA = "0xEE52D0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xEE5340", Offset = "0xEE5340", VA = "0xEE5340", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xEE58AC", Offset = "0xEE58AC", VA = "0xEE58AC")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000098")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E0E4", Offset = "0x68E0E4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E11C", Offset = "0x68E11C")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E154", Offset = "0x68E154")]
	public float RotateStickThreshold;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xEE58B0", Offset = "0xEE58B0", VA = "0xEE58B0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xEE58FC", Offset = "0xEE58FC", VA = "0xEE58FC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xEE5DE0", Offset = "0xEE5DE0", VA = "0xEE5DE0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000099")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xEE5DF0", Offset = "0xEE5DF0", VA = "0xEE5DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xEE5DF4", Offset = "0xEE5DF4", VA = "0xEE5DF4")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xEE5DFC", Offset = "0xEE5DFC", VA = "0xEE5DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xEE5EF8", Offset = "0xEE5EF8", VA = "0xEE5EF8")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xEE5F20", Offset = "0xEE5F20", VA = "0xEE5F20")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200009A")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68E18C", Offset = "0x68E18C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000020")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xEE2C98", Offset = "0xEE2C98", VA = "0xEE2C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690CA4", Offset = "0x690CA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xEE5F38", Offset = "0xEE5F38", VA = "0xEE5F38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690CB4", Offset = "0x690CB4")]
		private set
		{
		}
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xEE2C34", Offset = "0xEE2C34", VA = "0xEE2C34", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xEE2D50", Offset = "0xEE2D50", VA = "0xEE2D50", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xEE5F40", Offset = "0xEE5F40", VA = "0xEE5F40")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x690CC4", Offset = "0x690CC4")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xEE3488", Offset = "0xEE3488", VA = "0xEE3488", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xEE3528", Offset = "0xEE3528", VA = "0xEE3528", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xEE2D84", Offset = "0xEE2D84", VA = "0xEE2D84")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200009B")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BCE0", Offset = "0x68BCE0")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700015F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0xEE6708", Offset = "0xEE6708", VA = "0xEE6708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0xEE6778", Offset = "0xEE6778", VA = "0xEE6778", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xEE61C4", Offset = "0xEE61C4", VA = "0xEE61C4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xEE6398", Offset = "0xEE6398", VA = "0xEE6398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xEE639C", Offset = "0xEE639C", VA = "0xEE639C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xEE6710", Offset = "0xEE6710", VA = "0xEE6710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E19C", Offset = "0x68E19C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003DF")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xEE6010", Offset = "0xEE6010", VA = "0xEE6010")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xEE60D4", Offset = "0xEE60D4", VA = "0xEE60D4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xEE6114", Offset = "0xEE6114", VA = "0xEE6114", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xEE6150", Offset = "0xEE6150", VA = "0xEE6150")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690CFC", Offset = "0x690CFC")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xEE61F0", Offset = "0xEE61F0", VA = "0xEE61F0", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002E5")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xEE6220", Offset = "0xEE6220", VA = "0xEE6220", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xEE636C", Offset = "0xEE636C", VA = "0xEE636C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690D60", Offset = "0x690D60")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xEE6780", Offset = "0xEE6780", VA = "0xEE6780")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xEE67E0", Offset = "0xEE67E0", VA = "0xEE67E0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xEE6998", Offset = "0xEE6998", VA = "0xEE6998", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xEE6AD0", Offset = "0xEE6AD0", VA = "0xEE6AD0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x690D70", Offset = "0x690D70")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xEE6AD4", Offset = "0xEE6AD4", VA = "0xEE6AD4")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E1D4", Offset = "0x68E1D4")]
	public float LOSOffset;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E20C", Offset = "0x68E20C")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xEE6AE0", Offset = "0xEE6AE0", VA = "0xEE6AE0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xEE6D78", Offset = "0xEE6D78", VA = "0xEE6D78")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xEE6D84", Offset = "0xEE6D84", VA = "0xEE6D84", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xEE6F3C", Offset = "0xEE6F3C", VA = "0xEE6F3C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200009F")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xEE6F40", Offset = "0xEE6F40", VA = "0xEE6F40", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xEE6FE8", Offset = "0xEE6FE8", VA = "0xEE6FE8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002F3")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xEE708C", Offset = "0xEE708C", VA = "0xEE708C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BCF0", Offset = "0x68BCF0")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000161")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0xEE745C", Offset = "0xEE745C", VA = "0xEE745C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0xEE74CC", Offset = "0xEE74CC", VA = "0xEE74CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xEE7134", Offset = "0xEE7134", VA = "0xEE7134")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xEE7320", Offset = "0xEE7320", VA = "0xEE7320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xEE7324", Offset = "0xEE7324", VA = "0xEE7324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xEE7464", Offset = "0xEE7464", VA = "0xEE7464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E244", Offset = "0x68E244")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68E244", Offset = "0x68E244")]
	public float TransitionDuration;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E29C", Offset = "0x68E29C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68E29C", Offset = "0x68E29C")]
	public float TeleportDelay;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E2F0", Offset = "0x68E2F0")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xEE7094", Offset = "0xEE7094", VA = "0xEE7094", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xEE70C0", Offset = "0xEE70C0", VA = "0xEE70C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690DA8", Offset = "0x690DA8")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xEE7160", Offset = "0xEE7160", VA = "0xEE7160")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xEE74D4", Offset = "0xEE74D4", VA = "0xEE74D4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xEE7504", Offset = "0xEE7504", VA = "0xEE7504")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000A2")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BD00", Offset = "0x68BD00")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000163")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0xEE77CC", Offset = "0xEE77CC", VA = "0xEE77CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0xEE783C", Offset = "0xEE783C", VA = "0xEE783C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xEE75AC", Offset = "0xEE75AC", VA = "0xEE75AC")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xEE7620", Offset = "0xEE7620", VA = "0xEE7620", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xEE7624", Offset = "0xEE7624", VA = "0xEE7624", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xEE77D4", Offset = "0xEE77D4", VA = "0xEE77D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E328", Offset = "0x68E328")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68E328", Offset = "0x68E328")]
	public float TransitionDuration;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xEE750C", Offset = "0xEE750C", VA = "0xEE750C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xEE7538", Offset = "0xEE7538", VA = "0xEE7538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690E0C", Offset = "0x690E0C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xEE75D8", Offset = "0xEE75D8", VA = "0xEE75D8")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000A3")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000021")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x921C00", Offset = "0x921C00", VA = "0x921C00")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000022")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x921EDC", Offset = "0x921EDC", VA = "0x921EDC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000023")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x91D650", Offset = "0x91D650", VA = "0x91D650")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x91EAF4", Offset = "0x91EAF4", VA = "0x91EAF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000025")]
	public static long Duration
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x91ECD8", Offset = "0x91ECD8", VA = "0x91ECD8")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000026")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x91EBE4", Offset = "0x91EBE4", VA = "0x91EBE4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x91E188", Offset = "0x91E188", VA = "0x91E188")]
		set
		{
		}
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x91F378", Offset = "0x91F378", VA = "0x91F378")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x91F0A4", Offset = "0x91F0A4", VA = "0x91F0A4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x91DDF8", Offset = "0x91DDF8", VA = "0x91DDF8")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x91DF8C", Offset = "0x91DF8C", VA = "0x91DF8C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x91EEB4", Offset = "0x91EEB4", VA = "0x91EEB4")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x91F5C0", Offset = "0x91F5C0", VA = "0x91F5C0")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x91E8E8", Offset = "0x91E8E8", VA = "0x91E8E8")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000A4")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x98C008", Offset = "0x98C008", VA = "0x98C008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690E70", Offset = "0x690E70")]
		add
		{
		}
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x98C0F4", Offset = "0x98C0F4", VA = "0x98C0F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690E80", Offset = "0x690E80")]
		remove
		{
		}
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x98C1E0", Offset = "0x98C1E0", VA = "0x98C1E0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x98C1F4", Offset = "0x98C1F4", VA = "0x98C1F4")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000A5")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200026C")]
	public enum ButtonType
	{
		[Token(Token = "0x4000D7B")]
		Play,
		[Token(Token = "0x4000D7C")]
		Pause,
		[Token(Token = "0x4000D7D")]
		FastForward,
		[Token(Token = "0x4000D7E")]
		Rewind,
		[Token(Token = "0x4000D7F")]
		SkipForward,
		[Token(Token = "0x4000D80")]
		SkipBack,
		[Token(Token = "0x4000D81")]
		Stop
	}

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000027")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x856150", Offset = "0x856150", VA = "0x856150")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x856158", Offset = "0x856158", VA = "0x856158")]
		set
		{
		}
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x85617C", Offset = "0x85617C", VA = "0x85617C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x857A58", Offset = "0x857A58", VA = "0x857A58")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000A6")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200026D")]
	public enum VideoShape
	{
		[Token(Token = "0x4000D83")]
		_360,
		[Token(Token = "0x4000D84")]
		_180,
		[Token(Token = "0x4000D85")]
		Quad
	}

	[Token(Token = "0x200026E")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000D87")]
		Mono,
		[Token(Token = "0x4000D88")]
		TopBottom,
		[Token(Token = "0x4000D89")]
		LeftRight
	}

	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BD10", Offset = "0x68BD10")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000165")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x91F8B0", Offset = "0x91F8B0", VA = "0x91F8B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x91F920", Offset = "0x91F920", VA = "0x91F920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x91DA38", Offset = "0x91DA38", VA = "0x91DA38")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x91F714", Offset = "0x91F714", VA = "0x91F714", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x91F718", Offset = "0x91F718", VA = "0x91F718", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x91F8B8", Offset = "0x91F8B8", VA = "0x91F8B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BD20", Offset = "0x68BD20")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x91DD4C", Offset = "0x91DD4C", VA = "0x91DD4C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x91F290", Offset = "0x91F290", VA = "0x91F290")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68E3B0", Offset = "0x68E3B0")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68E3C0", Offset = "0x68E3C0")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68E3D0", Offset = "0x68E3D0")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000028")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x91D3B8", Offset = "0x91D3B8", VA = "0x91D3B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690E90", Offset = "0x690E90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x91D3C0", Offset = "0x91D3C0", VA = "0x91D3C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690EA0", Offset = "0x690EA0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public long Duration
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x91D3CC", Offset = "0x91D3CC", VA = "0x91D3CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690EB0", Offset = "0x690EB0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x91D3D4", Offset = "0x91D3D4", VA = "0x91D3D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690EC0", Offset = "0x690EC0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x91D3DC", Offset = "0x91D3DC", VA = "0x91D3DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690ED0", Offset = "0x690ED0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x91D3E4", Offset = "0x91D3E4", VA = "0x91D3E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690EE0", Offset = "0x690EE0")]
		private set
		{
		}
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x91D3EC", Offset = "0x91D3EC", VA = "0x91D3EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x91D6B8", Offset = "0x91D6B8", VA = "0x91D6B8")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x91D724", Offset = "0x91D724", VA = "0x91D724")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x91D9C4", Offset = "0x91D9C4", VA = "0x91D9C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690EF0", Offset = "0x690EF0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x91DA64", Offset = "0x91DA64", VA = "0x91DA64")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x91DD54", Offset = "0x91DD54", VA = "0x91DD54")]
	public void Play()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x91DEEC", Offset = "0x91DEEC", VA = "0x91DEEC")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x91E080", Offset = "0x91E080", VA = "0x91E080")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x91E2D8", Offset = "0x91E2D8", VA = "0x91E2D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x91EDCC", Offset = "0x91EDCC", VA = "0x91EDCC")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x91F004", Offset = "0x91F004", VA = "0x91F004")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x91F198", Offset = "0x91F198", VA = "0x91F198")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x91F280", Offset = "0x91F280", VA = "0x91F280")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000A7")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000271")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000D91")]
		Playing,
		[Token(Token = "0x4000D92")]
		Paused,
		[Token(Token = "0x4000D93")]
		Rewinding,
		[Token(Token = "0x4000D94")]
		FastForwarding
	}

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x91F928", Offset = "0x91F928", VA = "0x91F928")]
	private void Start()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x91FC5C", Offset = "0x91FC5C", VA = "0x91FC5C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x91FE10", Offset = "0x91FE10", VA = "0x91FE10")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x91FFAC", Offset = "0x91FFAC", VA = "0x91FFAC")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x9200D4", Offset = "0x9200D4", VA = "0x9200D4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x91FF3C", Offset = "0x91FF3C", VA = "0x91FF3C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x9201B8", Offset = "0x9201B8", VA = "0x9201B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x91FB28", Offset = "0x91FB28", VA = "0x91FB28")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x9205DC", Offset = "0x9205DC", VA = "0x9205DC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000A8")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B200", Offset = "0x68B200")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000272")]
	private enum CubeFace
	{
		[Token(Token = "0x4000D96")]
		Right,
		[Token(Token = "0x4000D97")]
		Left,
		[Token(Token = "0x4000D98")]
		Top,
		[Token(Token = "0x4000D99")]
		Bottom,
		[Token(Token = "0x4000D9A")]
		Front,
		[Token(Token = "0x4000D9B")]
		Back,
		[Token(Token = "0x4000D9C")]
		COUNT
	}

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB8CCA4", Offset = "0xB8CCA4", VA = "0xB8CCA4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xB8CE30", Offset = "0xB8CE30", VA = "0xB8CE30")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB8CFEC", Offset = "0xB8CFEC", VA = "0xB8CFEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB8D4FC", Offset = "0xB8D4FC", VA = "0xB8D4FC")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB8D884", Offset = "0xB8D884", VA = "0xB8D884")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB8EE04", Offset = "0xB8EE04", VA = "0xB8EE04")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xB8EE64", Offset = "0xB8EE64", VA = "0xB8EE64")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xB8DC04", Offset = "0xB8DC04", VA = "0xB8DC04")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xB8EF4C", Offset = "0xB8EF4C", VA = "0xB8EF4C")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xB8F138", Offset = "0xB8F138", VA = "0xB8F138")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xB8E178", Offset = "0xB8E178", VA = "0xB8E178")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xB8E588", Offset = "0xB8E588", VA = "0xB8E588")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xB8E9C4", Offset = "0xB8E9C4", VA = "0xB8E9C4")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xB8F324", Offset = "0xB8F324", VA = "0xB8F324")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000A9")]
public static class VectorUtil
{
	[Token(Token = "0x600033F")]
	[Address(RVA = "0xEEB524", Offset = "0xEEB524", VA = "0xEEB524")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000AA")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x8819AC", Offset = "0x8819AC", VA = "0x8819AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x881E48", Offset = "0x881E48", VA = "0x881E48")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x881F10", Offset = "0x881F10", VA = "0x881F10")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x8821CC", Offset = "0x8821CC", VA = "0x8821CC")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x8822BC", Offset = "0x8822BC", VA = "0x8822BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x8823B0", Offset = "0x8823B0", VA = "0x8823B0")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x88241C", Offset = "0x88241C", VA = "0x88241C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x882424", Offset = "0x882424", VA = "0x882424")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690F64", Offset = "0x690F64")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x882480", Offset = "0x882480", VA = "0x882480")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690F74", Offset = "0x690F74")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x8824DC", Offset = "0x8824DC", VA = "0x8824DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690F84", Offset = "0x690F84")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x882538", Offset = "0x882538", VA = "0x882538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690F94", Offset = "0x690F94")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000AB")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BD30", Offset = "0x68BD30")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000167")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x89747C", Offset = "0x89747C", VA = "0x89747C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x8974EC", Offset = "0x8974EC", VA = "0x8974EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x897308", Offset = "0x897308", VA = "0x897308")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x89733C", Offset = "0x89733C", VA = "0x89733C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x897340", Offset = "0x897340", VA = "0x897340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x897484", Offset = "0x897484", VA = "0x897484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x896F70", Offset = "0x896F70", VA = "0x896F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x897074", Offset = "0x897074", VA = "0x897074")]
	private void Update()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x897000", Offset = "0x897000", VA = "0x897000")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x690FA4", Offset = "0x690FA4")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x897334", Offset = "0x897334", VA = "0x897334")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000AC")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68E3F0", Offset = "0x68E3F0")]
	public int SubdivisionsU;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68E40C", Offset = "0x68E40C")]
	public int SubdivisionsV;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x98FA7C", Offset = "0x98FA7C", VA = "0x98FA7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x9909DC", Offset = "0x9909DC", VA = "0x9909DC")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000AD")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700002B")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x84BB1C", Offset = "0x84BB1C", VA = "0x84BB1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x84BB7C", Offset = "0x84BB7C", VA = "0x84BB7C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x84BF3C", Offset = "0x84BF3C", VA = "0x84BF3C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x84C038", Offset = "0x84C038", VA = "0x84C038")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x691008", Offset = "0x691008")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000355")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000357")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000358")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000359")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600035A")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600035B")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600035C")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x84C0A0", Offset = "0x84C0A0", VA = "0x84C0A0")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x84C104", Offset = "0x84C104", VA = "0x84C104")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x84C1B4", Offset = "0x84C1B4", VA = "0x84C1B4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x84C3D4", Offset = "0x84C3D4", VA = "0x84C3D4")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x84C4C4", Offset = "0x84C4C4", VA = "0x84C4C4")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x84BDE8", Offset = "0x84BDE8", VA = "0x84BDE8")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x84C5AC", Offset = "0x84C5AC", VA = "0x84C5AC")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x84C63C", Offset = "0x84C63C", VA = "0x84C63C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x84C76C", Offset = "0x84C76C", VA = "0x84C76C")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000AE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B294", Offset = "0x68B294")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000274")]
	public enum DrawMode
	{
		[Token(Token = "0x4000DA1")]
		Opaque,
		[Token(Token = "0x4000DA2")]
		OpaqueWithClip,
		[Token(Token = "0x4000DA3")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000DA4")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700002C")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xB8CA3C", Offset = "0xB8CA3C", VA = "0xB8CA3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xB8CAD8", Offset = "0xB8CAD8", VA = "0xB8CAD8")]
		set
		{
		}
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xB8AE28", Offset = "0xB8AE28", VA = "0xB8AE28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xB8BEB0", Offset = "0xB8BEB0", VA = "0xB8BEB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xB8BF34", Offset = "0xB8BF34", VA = "0xB8BF34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB8C048", Offset = "0xB8C048", VA = "0xB8C048")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xB8C15C", Offset = "0xB8C15C", VA = "0xB8C15C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB8C38C", Offset = "0xB8C38C", VA = "0xB8C38C")]
	private void Update()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xB8CBF0", Offset = "0xB8CBF0", VA = "0xB8CBF0")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000AF")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BD40", Offset = "0x68BD40")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x80AC5C", Offset = "0x80AC5C", VA = "0x80AC5C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x80AD54", Offset = "0x80AD54", VA = "0x80AD54")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x80AA78", Offset = "0x80AA78", VA = "0x80AA78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x80AC64", Offset = "0x80AC64", VA = "0x80AC64")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x80AD4C", Offset = "0x80AD4C", VA = "0x80AD4C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x68B2F8", Offset = "0x68B2F8")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000276")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000DA8")]
		MouseXAndY,
		[Token(Token = "0x4000DA9")]
		MouseX,
		[Token(Token = "0x4000DAA")]
		MouseY
	}

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x91D04C", Offset = "0x91D04C", VA = "0x91D04C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x91D2D0", Offset = "0x91D2D0", VA = "0x91D2D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x91D398", Offset = "0x91D398", VA = "0x91D398")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000B1")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000B2")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB7A4B0", Offset = "0xB7A4B0", VA = "0xB7A4B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB7A4B4", Offset = "0xB7A4B4", VA = "0xB7A4B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xB7A4B8", Offset = "0xB7A4B8", VA = "0xB7A4B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xB7A644", Offset = "0xB7A644", VA = "0xB7A644")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xB7A50C", Offset = "0xB7A50C", VA = "0xB7A50C")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB7A5A0", Offset = "0xB7A5A0", VA = "0xB7A5A0")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xB7A698", Offset = "0xB7A698", VA = "0xB7A698")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB7A738", Offset = "0xB7A738", VA = "0xB7A738")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB7A8C4", Offset = "0xB7A8C4", VA = "0xB7A8C4")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB7AA50", Offset = "0xB7AA50", VA = "0xB7AA50")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000B3")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000277")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x400047E")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000484")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x8F5D04", Offset = "0x8F5D04", VA = "0x8F5D04")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x8F5D3C", Offset = "0x8F5D3C", VA = "0x8F5D3C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x8F5F0C", Offset = "0x8F5F0C", VA = "0x8F5F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x8F5FC4", Offset = "0x8F5FC4", VA = "0x8F5FC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x8F60D4", Offset = "0x8F60D4", VA = "0x8F60D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x8F6D0C", Offset = "0x8F6D0C", VA = "0x8F6D0C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000387")]
	[Address(RVA = "0x8F5FA0", Offset = "0x8F5FA0", VA = "0x8F5FA0")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000388")]
	[Address(RVA = "0x8F6028", Offset = "0x8F6028", VA = "0x8F6028")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000389")]
	[Address(RVA = "0x8F69F4", Offset = "0x8F69F4", VA = "0x8F69F4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600038A")]
	[Address(RVA = "0x8F6A90", Offset = "0x8F6A90", VA = "0x8F6A90")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600038B")]
	[Address(RVA = "0x8F6B30", Offset = "0x8F6B30", VA = "0x8F6B30")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x600038C")]
	[Address(RVA = "0x8F6BD0", Offset = "0x8F6BD0", VA = "0x8F6BD0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x600038D")]
	[Address(RVA = "0x8F6C6C", Offset = "0x8F6C6C", VA = "0x8F6C6C")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x600038E")]
	[Address(RVA = "0x8F8074", Offset = "0x8F8074", VA = "0x8F8074")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x600038F")]
	[Address(RVA = "0x8F8138", Offset = "0x8F8138", VA = "0x8F8138")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x8F81FC", Offset = "0x8F81FC", VA = "0x8F81FC")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000278")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000DAC")]
		Uninitialized = -1,
		[Token(Token = "0x4000DAD")]
		NotEnabled,
		[Token(Token = "0x4000DAE")]
		Success,
		[Token(Token = "0x4000DAF")]
		StreamError,
		[Token(Token = "0x4000DB0")]
		ProcessError,
		[Token(Token = "0x4000DB1")]
		MaxStatValue
	}

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700002D")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x92B6B8", Offset = "0x92B6B8", VA = "0x92B6B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x92B6C0", Offset = "0x92B6C0", VA = "0x92B6C0")]
		set
		{
		}
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x92B6CC", Offset = "0x92B6CC", VA = "0x92B6CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x92B91C", Offset = "0x92B91C", VA = "0x92B91C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x92BBA8", Offset = "0x92BBA8", VA = "0x92BBA8")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000B5")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000279")]
	private enum Parameters
	{
		[Token(Token = "0x4000DB3")]
		P_GAIN,
		[Token(Token = "0x4000DB4")]
		P_USEINVSQR,
		[Token(Token = "0x4000DB5")]
		P_NEAR,
		[Token(Token = "0x4000DB6")]
		P_FAR,
		[Token(Token = "0x4000DB7")]
		P_RADIUS,
		[Token(Token = "0x4000DB8")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000DB9")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000DBA")]
		P_AMBISTAT,
		[Token(Token = "0x4000DBB")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000DBC")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000DBD")]
		P_SENDLEVEL,
		[Token(Token = "0x4000DBE")]
		P_NUM
	}

	[Token(Token = "0x400048A")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700002E")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x92BE3C", Offset = "0x92BE3C", VA = "0x92BE3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600039B")]
		[Address(RVA = "0x92BE44", Offset = "0x92BE44", VA = "0x92BE44")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public float Gain
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x92BE50", Offset = "0x92BE50", VA = "0x92BE50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x92BE58", Offset = "0x92BE58", VA = "0x92BE58")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x92BEDC", Offset = "0x92BEDC", VA = "0x92BEDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x92BEE4", Offset = "0x92BEE4", VA = "0x92BEE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public float Near
	{
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x92BEF0", Offset = "0x92BEF0", VA = "0x92BEF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x92BEF8", Offset = "0x92BEF8", VA = "0x92BEF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public float Far
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x92BF80", Offset = "0x92BF80", VA = "0x92BF80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x92BF88", Offset = "0x92BF88", VA = "0x92BF88")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x92C010", Offset = "0x92C010", VA = "0x92C010")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x92C018", Offset = "0x92C018", VA = "0x92C018")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public float ReverbSend
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x92C0A0", Offset = "0x92C0A0", VA = "0x92C0A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x92C0A8", Offset = "0x92C0A8", VA = "0x92C0A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x92C130", Offset = "0x92C130", VA = "0x92C130")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x92C138", Offset = "0x92C138", VA = "0x92C138")]
		set
		{
		}
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x92BC2C", Offset = "0x92BC2C", VA = "0x92BC2C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x691040", Offset = "0x691040")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000399")]
	[Address(RVA = "0x92BD40", Offset = "0x92BD40", VA = "0x92BD40")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x92C144", Offset = "0x92C144", VA = "0x92C144")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x92C344", Offset = "0x92C344", VA = "0x92C344")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x92C348", Offset = "0x92C348", VA = "0x92C348")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x92C1B0", Offset = "0x92C1B0", VA = "0x92C1B0")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x92C428", Offset = "0x92C428", VA = "0x92C428")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x92C8FC", Offset = "0x92C8FC", VA = "0x92C8FC")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x92BCA4", Offset = "0x92BCA4", VA = "0x92BCA4")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x92C9CC", Offset = "0x92C9CC", VA = "0x92C9CC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000B6")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000495")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000497")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x92C9EC", Offset = "0x92C9EC", VA = "0x92C9EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x92C9F8", Offset = "0x92C9F8", VA = "0x92C9F8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x92CACC", Offset = "0x92CACC", VA = "0x92CACC")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x92CA30", Offset = "0x92CA30", VA = "0x92CA30")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x92CB68", Offset = "0x92CB68", VA = "0x92CB68")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200027A")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200027B")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400049E")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000036")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003B8")]
		[Address(RVA = "0x92FAF0", Offset = "0x92FAF0", VA = "0x92FAF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000037")]
	public string filePath
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x92FB7C", Offset = "0x92FB7C", VA = "0x92FB7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x92FBF4", Offset = "0x92FBF4", VA = "0x92FBF4")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x92FD6C", Offset = "0x92FD6C", VA = "0x92FD6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x92FD70", Offset = "0x92FD70", VA = "0x92FD70")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x930320", Offset = "0x930320", VA = "0x930320")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x9307F8", Offset = "0x9307F8", VA = "0x9307F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x93095C", Offset = "0x93095C", VA = "0x93095C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x9311CC", Offset = "0x9311CC", VA = "0x9311CC")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x931218", Offset = "0x931218", VA = "0x931218")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x932EE4", Offset = "0x932EE4", VA = "0x932EE4")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x932D98", Offset = "0x932D98", VA = "0x932D98")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x930134", Offset = "0x930134", VA = "0x930134")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x92FF54", Offset = "0x92FF54", VA = "0x92FF54")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x9336BC", Offset = "0x9336BC", VA = "0x9336BC")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x933B30", Offset = "0x933B30", VA = "0x933B30")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000B8")]
internal class ONSPPropagation
{
	[Token(Token = "0x200027C")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000DC5")]
		Int8,
		[Token(Token = "0x4000DC6")]
		UInt8,
		[Token(Token = "0x4000DC7")]
		Int16,
		[Token(Token = "0x4000DC8")]
		UInt16,
		[Token(Token = "0x4000DC9")]
		Int32,
		[Token(Token = "0x4000DCA")]
		UInt32,
		[Token(Token = "0x4000DCB")]
		Int64,
		[Token(Token = "0x4000DCC")]
		UInt64,
		[Token(Token = "0x4000DCD")]
		Float16,
		[Token(Token = "0x4000DCE")]
		Float32,
		[Token(Token = "0x4000DCF")]
		Float64
	}

	[Token(Token = "0x200027D")]
	public class ClientType
	{
		[Token(Token = "0x4000DD0")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000DD1")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000DD2")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000DD3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000DD4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000DD5")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000DD6")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000DD7")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000DD8")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000DD9")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000DDA")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000DDB")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000DDC")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000DDD")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x92D05C", Offset = "0x92D05C", VA = "0x92D05C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x200027E")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000F0C")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000F0D")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000F0E")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000F0F")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F10")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000F11")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000F12")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000F13")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F14")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F15")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F16")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F17")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000F18")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F19")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F1A")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200027F")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000DDE")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000169")]
		private IntPtr context
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x92DE5C", Offset = "0x92DE5C", VA = "0x92DE5C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x92DEC0", Offset = "0x92DEC0", VA = "0x92DEC0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x92DF6C", Offset = "0x92DF6C", VA = "0x92DF6C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x92E018", Offset = "0x92E018", VA = "0x92E018", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x92E03C", Offset = "0x92E03C", VA = "0x92E03C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x92E0E8", Offset = "0x92E0E8", VA = "0x92E0E8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x92E10C", Offset = "0x92E10C", VA = "0x92E10C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x92E1B4", Offset = "0x92E1B4", VA = "0x92E1B4", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x92E1D8", Offset = "0x92E1D8", VA = "0x92E1D8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x92E274", Offset = "0x92E274", VA = "0x92E274", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x92E27C", Offset = "0x92E27C", VA = "0x92E27C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x92E3A4", Offset = "0x92E3A4", VA = "0x92E3A4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x92E49C", Offset = "0x92E49C", VA = "0x92E49C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x92E550", Offset = "0x92E550", VA = "0x92E550", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x92E55C", Offset = "0x92E55C", VA = "0x92E55C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x92E6A4", Offset = "0x92E6A4", VA = "0x92E6A4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x92E6B0", Offset = "0x92E6B0", VA = "0x92E6B0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x92E778", Offset = "0x92E778", VA = "0x92E778", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x92E784", Offset = "0x92E784", VA = "0x92E784")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x92E84C", Offset = "0x92E84C", VA = "0x92E84C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x92E858", Offset = "0x92E858", VA = "0x92E858")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x92E920", Offset = "0x92E920", VA = "0x92E920", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x92E92C", Offset = "0x92E92C", VA = "0x92E92C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x92E9D4", Offset = "0x92E9D4", VA = "0x92E9D4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x92E9F8", Offset = "0x92E9F8", VA = "0x92E9F8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x92EA94", Offset = "0x92EA94", VA = "0x92EA94", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x92EA9C", Offset = "0x92EA9C", VA = "0x92EA9C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x92EB60", Offset = "0x92EB60", VA = "0x92EB60", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x92EB6C", Offset = "0x92EB6C", VA = "0x92EB6C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x92EC30", Offset = "0x92EC30", VA = "0x92EC30", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x92EC40", Offset = "0x92EC40", VA = "0x92EC40")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x92ECEC", Offset = "0x92ECEC", VA = "0x92ECEC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x92D008", Offset = "0x92D008", VA = "0x92D008")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000280")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000DE0")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700016A")]
		private IntPtr context
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x92ECF8", Offset = "0x92ECF8", VA = "0x92ECF8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x92CE18", Offset = "0x92CE18", VA = "0x92CE18")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x92ED5C", Offset = "0x92ED5C", VA = "0x92ED5C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x92EE08", Offset = "0x92EE08", VA = "0x92EE08", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x92EE2C", Offset = "0x92EE2C", VA = "0x92EE2C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x92EED8", Offset = "0x92EED8", VA = "0x92EED8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x92EEFC", Offset = "0x92EEFC", VA = "0x92EEFC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x92EFA8", Offset = "0x92EFA8", VA = "0x92EFA8", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x92EFCC", Offset = "0x92EFCC", VA = "0x92EFCC")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x92F068", Offset = "0x92F068", VA = "0x92F068", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x92F070", Offset = "0x92F070", VA = "0x92F070")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x92F198", Offset = "0x92F198", VA = "0x92F198", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x92F290", Offset = "0x92F290", VA = "0x92F290")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x92F344", Offset = "0x92F344", VA = "0x92F344", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x92F350", Offset = "0x92F350", VA = "0x92F350")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x92F498", Offset = "0x92F498", VA = "0x92F498", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x92F4A4", Offset = "0x92F4A4", VA = "0x92F4A4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x92F56C", Offset = "0x92F56C", VA = "0x92F56C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x92F578", Offset = "0x92F578", VA = "0x92F578")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x92F640", Offset = "0x92F640", VA = "0x92F640", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x92F64C", Offset = "0x92F64C", VA = "0x92F64C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x92F714", Offset = "0x92F714", VA = "0x92F714", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x92F720", Offset = "0x92F720", VA = "0x92F720")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x92F7CC", Offset = "0x92F7CC", VA = "0x92F7CC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x92F7F0", Offset = "0x92F7F0", VA = "0x92F7F0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x92F88C", Offset = "0x92F88C", VA = "0x92F88C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x92F894", Offset = "0x92F894", VA = "0x92F894")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x92F958", Offset = "0x92F958", VA = "0x92F958", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x92F964", Offset = "0x92F964", VA = "0x92F964")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x92FA28", Offset = "0x92FA28", VA = "0x92FA28", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x92FA38", Offset = "0x92FA38", VA = "0x92FA38")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x92FAE4", Offset = "0x92FAE4", VA = "0x92FAE4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x92CEC4", Offset = "0x92CEC4", VA = "0x92CEC4")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000281")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000DE2")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700016B")]
		private IntPtr context
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x92D064", Offset = "0x92D064", VA = "0x92D064")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x92CF10", Offset = "0x92CF10", VA = "0x92CF10")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x92D0C8", Offset = "0x92D0C8", VA = "0x92D0C8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x92D174", Offset = "0x92D174", VA = "0x92D174", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x92D198", Offset = "0x92D198", VA = "0x92D198")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x92D244", Offset = "0x92D244", VA = "0x92D244", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x92D268", Offset = "0x92D268", VA = "0x92D268")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x92D314", Offset = "0x92D314", VA = "0x92D314", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x92D338", Offset = "0x92D338", VA = "0x92D338")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x92D3D4", Offset = "0x92D3D4", VA = "0x92D3D4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x92D3DC", Offset = "0x92D3DC", VA = "0x92D3DC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x92D504", Offset = "0x92D504", VA = "0x92D504", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x92D5FC", Offset = "0x92D5FC", VA = "0x92D5FC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x92D6B0", Offset = "0x92D6B0", VA = "0x92D6B0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x92D6BC", Offset = "0x92D6BC", VA = "0x92D6BC")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x92D804", Offset = "0x92D804", VA = "0x92D804", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x92D810", Offset = "0x92D810", VA = "0x92D810")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x92D8D8", Offset = "0x92D8D8", VA = "0x92D8D8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x92D8E4", Offset = "0x92D8E4", VA = "0x92D8E4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x92D9AC", Offset = "0x92D9AC", VA = "0x92D9AC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x92D9B8", Offset = "0x92D9B8", VA = "0x92D9B8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x92DA80", Offset = "0x92DA80", VA = "0x92DA80", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x92DA8C", Offset = "0x92DA8C", VA = "0x92DA8C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x92DB38", Offset = "0x92DB38", VA = "0x92DB38", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x92DB5C", Offset = "0x92DB5C", VA = "0x92DB5C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x92DBF8", Offset = "0x92DBF8", VA = "0x92DBF8", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x92DC00", Offset = "0x92DC00", VA = "0x92DC00")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x92DCC4", Offset = "0x92DCC4", VA = "0x92DCC4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x92DCD0", Offset = "0x92DCD0", VA = "0x92DCD0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x92DD94", Offset = "0x92DD94", VA = "0x92DD94", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x92DDA4", Offset = "0x92DDA4", VA = "0x92DDA4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x92DE50", Offset = "0x92DE50", VA = "0x92DE50", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x92CFBC", Offset = "0x92CFBC", VA = "0x92CFBC")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000038")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x92CB78", Offset = "0x92CB78", VA = "0x92CB78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x92CBE8", Offset = "0x92CBE8", VA = "0x92CBE8")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x92D054", Offset = "0x92D054", VA = "0x92D054")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000B9")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000282")]
	public enum Preset
	{
		[Token(Token = "0x4000DE5")]
		Custom,
		[Token(Token = "0x4000DE6")]
		AcousticTile,
		[Token(Token = "0x4000DE7")]
		Brick,
		[Token(Token = "0x4000DE8")]
		BrickPainted,
		[Token(Token = "0x4000DE9")]
		Carpet,
		[Token(Token = "0x4000DEA")]
		CarpetHeavy,
		[Token(Token = "0x4000DEB")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000DEC")]
		CeramicTile,
		[Token(Token = "0x4000DED")]
		Concrete,
		[Token(Token = "0x4000DEE")]
		ConcreteRough,
		[Token(Token = "0x4000DEF")]
		ConcreteBlock,
		[Token(Token = "0x4000DF0")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000DF1")]
		Curtain,
		[Token(Token = "0x4000DF2")]
		Foliage,
		[Token(Token = "0x4000DF3")]
		Glass,
		[Token(Token = "0x4000DF4")]
		GlassHeavy,
		[Token(Token = "0x4000DF5")]
		Grass,
		[Token(Token = "0x4000DF6")]
		Gravel,
		[Token(Token = "0x4000DF7")]
		GypsumBoard,
		[Token(Token = "0x4000DF8")]
		PlasterOnBrick,
		[Token(Token = "0x4000DF9")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000DFA")]
		Soil,
		[Token(Token = "0x4000DFB")]
		SoundProof,
		[Token(Token = "0x4000DFC")]
		Snow,
		[Token(Token = "0x4000DFD")]
		Steel,
		[Token(Token = "0x4000DFE")]
		Water,
		[Token(Token = "0x4000DFF")]
		WoodThin,
		[Token(Token = "0x4000E00")]
		WoodThick,
		[Token(Token = "0x4000E01")]
		WoodFloor,
		[Token(Token = "0x4000E02")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000283")]
	public sealed class Point
	{
		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xB79D5C", Offset = "0xB79D5C", VA = "0xB79D5C")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xB79D94", Offset = "0xB79D94", VA = "0xB79D94")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xB79E04", Offset = "0xB79E04", VA = "0xB79E04")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x68BD50", Offset = "0x68BD50")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C688", Offset = "0x68C688")]
		private sealed class <>c
		{
			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x600120A")]
			[Address(RVA = "0xB7A36C", Offset = "0xB7A36C", VA = "0xB7A36C")]
			public <>c()
			{
			}

			[Token(Token = "0x600120B")]
			[Address(RVA = "0xB7A374", Offset = "0xB7A374", VA = "0xB7A374")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600120C")]
			[Address(RVA = "0xB7A3A0", Offset = "0xB7A3A0", VA = "0xB7A3A0")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700016C")]
		public float Item
		{
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0xB79E6C", Offset = "0xB79E6C", VA = "0xB79E6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xB7A290", Offset = "0xB7A290", VA = "0xB7A290")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E528", Offset = "0x68E528")]
	public Spectrum absorption;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E560", Offset = "0x68E560")]
	public Spectrum transmission;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E598", Offset = "0x68E598")]
	public Spectrum scattering;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000039")]
	public Preset preset
	{
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x933C08", Offset = "0x933C08", VA = "0x933C08")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x933C10", Offset = "0x933C10", VA = "0x933C10")]
		set
		{
		}
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x933C38", Offset = "0x933C38", VA = "0x933C38")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x933548", Offset = "0x933548", VA = "0x933548")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x934314", Offset = "0x934314", VA = "0x934314")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x934318", Offset = "0x934318", VA = "0x934318")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x933C3C", Offset = "0x933C3C", VA = "0x933C3C")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x932C04", Offset = "0x932C04", VA = "0x932C04")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x9343FC", Offset = "0x9343FC", VA = "0x9343FC")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x934994", Offset = "0x934994", VA = "0x934994")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x934F30", Offset = "0x934F30", VA = "0x934F30")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x9354C8", Offset = "0x9354C8", VA = "0x9354C8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x935A74", Offset = "0x935A74", VA = "0x935A74")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x93600C", Offset = "0x93600C", VA = "0x93600C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x9365A4", Offset = "0x9365A4", VA = "0x9365A4")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x936B44", Offset = "0x936B44", VA = "0x936B44")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x9370E4", Offset = "0x9370E4", VA = "0x9370E4")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x937688", Offset = "0x937688", VA = "0x937688")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x937C28", Offset = "0x937C28", VA = "0x937C28")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x9381D0", Offset = "0x9381D0", VA = "0x9381D0")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x938768", Offset = "0x938768", VA = "0x938768")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x938D0C", Offset = "0x938D0C", VA = "0x938D0C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x939294", Offset = "0x939294", VA = "0x939294")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x939828", Offset = "0x939828", VA = "0x939828")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x939C64", Offset = "0x939C64", VA = "0x939C64")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x93A098", Offset = "0x93A098", VA = "0x93A098")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x93A640", Offset = "0x93A640", VA = "0x93A640")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x93ABE4", Offset = "0x93ABE4", VA = "0x93ABE4")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x93B180", Offset = "0x93B180", VA = "0x93B180")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x93B5C0", Offset = "0x93B5C0", VA = "0x93B5C0")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x93B760", Offset = "0x93B760", VA = "0x93B760")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x93BB90", Offset = "0x93BB90", VA = "0x93BB90")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x93C118", Offset = "0x93C118", VA = "0x93C118")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x93C6B8", Offset = "0x93C6B8", VA = "0x93C6B8")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x93CC48", Offset = "0x93CC48", VA = "0x93CC48")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x93D1E0", Offset = "0x93D1E0", VA = "0x93D1E0")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x93D780", Offset = "0x93D780", VA = "0x93D780")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x93DD1C", Offset = "0x93DD1C", VA = "0x93DD1C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xB7A3CC", Offset = "0xB7A3CC", VA = "0xB7A3CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xB7A4A0", Offset = "0xB7A4A0", VA = "0xB7A4A0")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000BB")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700003A")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xB7AAD8", Offset = "0xB7AAD8", VA = "0xB7AAD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xB7ABEC", Offset = "0xB7ABEC", VA = "0xB7ABEC")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40004A9")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xB7ABFC", Offset = "0xB7ABFC", VA = "0xB7ABFC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xB7ACB0", Offset = "0xB7ACB0", VA = "0xB7ACB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xB7ADBC", Offset = "0xB7ADBC", VA = "0xB7ADBC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xB7ADC0", Offset = "0xB7ADC0", VA = "0xB7ADC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xB7ADC4", Offset = "0xB7ADC4", VA = "0xB7ADC4")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B330", Offset = "0x68B330")]
public class Grabber : MonoBehaviour
{
	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float grabBegin;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float grabEnd;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected bool m_parentHeldObject;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Transform m_gripTransform;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Collider[] m_grabVolumes;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected OVRInput.Controller m_controller;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Transform m_parentTransform;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool m_grabVolumeEnabled;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Vector3 m_lastPos;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Quaternion m_lastRot;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Quaternion m_anchorOffsetRotation;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector3 m_anchorOffsetPosition;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float m_prevFlex;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Grabbable m_grabbedObj;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Vector3 m_grabbedObjectPosOff;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected Quaternion m_grabbedObjectRotOff;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Dictionary<Grabbable, int> m_grabCandidates;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected bool operatingWithoutOVRCameraRig;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Renderer render;

	[Token(Token = "0x1700003B")]
	public Grabbable grabbedObject
	{
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x88F6B8", Offset = "0x88F6B8", VA = "0x88F6B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x88F5E0", Offset = "0x88F5E0", VA = "0x88F5E0")]
	public void ForceRelease(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x88F97C", Offset = "0x88F97C", VA = "0x88F97C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x88FBEC", Offset = "0x88FBEC", VA = "0x88FBEC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x88FEA8", Offset = "0x88FEA8", VA = "0x88FEA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x88FEB8", Offset = "0x88FEB8", VA = "0x88FEB8")]
	private void OnUpdatedAnchors()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x890210", Offset = "0x890210", VA = "0x890210")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x890298", Offset = "0x890298", VA = "0x890298")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x8903C8", Offset = "0x8903C8", VA = "0x8903C8")]
	private void OnTriggerExit(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x8901D0", Offset = "0x8901D0", VA = "0x8901D0")]
	protected void CheckForGrabOrRelease(float prevFlex)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x89052C", Offset = "0x89052C", VA = "0x89052C", Slot = "6")]
	protected virtual void GrabBegin()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x890E88", Offset = "0x890E88", VA = "0x890E88", Slot = "7")]
	protected virtual void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x88F6C0", Offset = "0x88F6C0", VA = "0x88F6C0")]
	protected void GrabEnd()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x891134", Offset = "0x891134", VA = "0x891134")]
	protected void GrabbableRelease(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x8911FC", Offset = "0x8911FC", VA = "0x8911FC", Slot = "8")]
	protected virtual void GrabVolumeEnable(bool enabled)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x891320", Offset = "0x891320", VA = "0x891320", Slot = "9")]
	protected virtual void OffhandGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x891424", Offset = "0x891424", VA = "0x891424")]
	public Grabber()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x8914BC", Offset = "0x8914BC", VA = "0x8914BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691054", Offset = "0x691054")]
	private void <Awake>b__22_0(OVRCameraRig r)
	{
	}
}
[Token(Token = "0x20000BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B394", Offset = "0x68B394")]
public class Hand : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BD88", Offset = "0x68BD88")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__28_0;

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x89698C", Offset = "0x89698C", VA = "0x89698C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x896994", Offset = "0x896994", VA = "0x896994")]
		internal bool <Start>b__28_0(Collider childCollider)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40004BD")]
	public const string ANIM_LAYER_NAME_POINT = "Point Layer";

	[Token(Token = "0x40004BE")]
	public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

	[Token(Token = "0x40004BF")]
	public const string ANIM_PARAM_NAME_FLEX = "Flex";

	[Token(Token = "0x40004C0")]
	public const string ANIM_PARAM_NAME_POSE = "Pose";

	[Token(Token = "0x40004C1")]
	public const float THRESH_COLLISION_FLEX = 0.9f;

	[Token(Token = "0x40004C2")]
	public const float INPUT_RATE_CHANGE = 20f;

	[Token(Token = "0x40004C3")]
	public const float COLLIDER_SCALE_MIN = 0.01f;

	[Token(Token = "0x40004C4")]
	public const float COLLIDER_SCALE_MAX = 1f;

	[Token(Token = "0x40004C5")]
	public const float COLLIDER_SCALE_PER_SECOND = 1f;

	[Token(Token = "0x40004C6")]
	public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

	[Token(Token = "0x40004C7")]
	public const float THUMB_DEBOUNCE_TIME = 0.15f;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_animator;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HandPose m_defaultGrabPose;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider[] m_colliders;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_collisionEnabled;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Interactor m_grabber;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Renderer> m_showAfterInputFocusAcquired;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_animLayerIndexThumb;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int m_animLayerIndexPoint;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_animParamIndexFlex;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int m_animParamIndexPose;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_isPointing;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool m_isGivingThumbsUp;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_pointBlend;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_thumbsUpBlend;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_collisionScaleCurrent;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x895A48", Offset = "0x895A48", VA = "0x895A48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x895AA0", Offset = "0x895AA0", VA = "0x895AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x895F48", Offset = "0x895F48", VA = "0x895F48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x896068", Offset = "0x896068", VA = "0x896068")]
	private void UpdateCapTouchStates()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x896478", Offset = "0x896478", VA = "0x896478")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x896610", Offset = "0x896610", VA = "0x896610")]
	private void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x8967C0", Offset = "0x8967C0", VA = "0x8967C0")]
	private void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x896104", Offset = "0x896104", VA = "0x896104")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x8961A4", Offset = "0x8961A4", VA = "0x8961A4")]
	private void UpdateAnimStates()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x895D0C", Offset = "0x895D0C", VA = "0x895D0C")]
	private void CollisionEnable(bool enabled)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x896910", Offset = "0x896910", VA = "0x896910")]
	public Hand()
	{
	}
}
[Token(Token = "0x20000BF")]
public class Interactor : MonoBehaviour
{
	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E670", Offset = "0x68E670")]
	private Transform m_AttachTransform;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float grabBegin;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float grabEnd;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Collider[] m_grabVolumes;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform m_gripTransform;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	internal InputHandler.ControllerType m_controller;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool m_VolumeEnabled;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float m_prevFlex;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Interactable m_interactedObj;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Interactable m_hoveredObj;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Dictionary<Interactable, int> m_Candidates;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer render;

	[Token(Token = "0x1700003C")]
	public Transform attachTransform
	{
		[Token(Token = "0x6000418")]
		[Address(RVA = "0x847F0C", Offset = "0x847F0C", VA = "0x847F0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003D")]
	public Interactable interactedObject
	{
		[Token(Token = "0x6000419")]
		[Address(RVA = "0x847F14", Offset = "0x847F14", VA = "0x847F14")]
		get
		{
			return null;
		}
		[Token(Token = "0x600041A")]
		[Address(RVA = "0x847F1C", Offset = "0x847F1C", VA = "0x847F1C")]
		set
		{
		}
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x847F24", Offset = "0x847F24", VA = "0x847F24", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x847F28", Offset = "0x847F28", VA = "0x847F28", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x847F9C", Offset = "0x847F9C", VA = "0x847F9C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x848078", Offset = "0x848078", VA = "0x848078")]
	private void CheckForActivateOrDeactivate()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x8481CC", Offset = "0x8481CC", VA = "0x8481CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x8483A4", Offset = "0x8483A4", VA = "0x8483A4")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x8488E4", Offset = "0x8488E4", VA = "0x8488E4")]
	private void OnTriggerExit(Collider otherCollider)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x848038", Offset = "0x848038", VA = "0x848038")]
	protected void CheckForGrabOrRelease(float prevFlex)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x848A84", Offset = "0x848A84", VA = "0x848A84", Slot = "6")]
	protected virtual void GrabBegin()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x847F4C", Offset = "0x847F4C", VA = "0x847F4C")]
	private Renderer GetInteractorRendering()
	{
		return null;
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x84857C", Offset = "0x84857C", VA = "0x84857C")]
	private Interactable GetClosestInteractable()
	{
		return null;
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x848C4C", Offset = "0x848C4C", VA = "0x848C4C")]
	public void Offhand(Interactable interactable, bool rendered = true)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x848DAC", Offset = "0x848DAC", VA = "0x848DAC")]
	private void Release()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x848254", Offset = "0x848254", VA = "0x848254")]
	protected void GrabEnd()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x848DF0", Offset = "0x848DF0", VA = "0x848DF0", Slot = "7")]
	protected virtual void GrabVolumeEnable(bool enabled)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x848F14", Offset = "0x848F14", VA = "0x848F14")]
	public Interactor()
	{
	}
}
[Token(Token = "0x20000C0")]
public class ObjectHaptics : MonoBehaviour
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controller;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Interactor grabber;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isOn;

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xB913FC", Offset = "0xB913FC", VA = "0xB913FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xB91454", Offset = "0xB91454", VA = "0xB91454")]
	private void Update()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xB91458", Offset = "0xB91458", VA = "0xB91458")]
	public ObjectHaptics()
	{
	}
}
[Token(Token = "0x20000C1")]
public class OculusInputHandler : InputHandler
{
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BD98", Offset = "0x68BD98")]
	private sealed class <TurnOffVibration>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusInputHandler <>4__this;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ControllerType hand;

		[Token(Token = "0x1700016D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x8E115C", Offset = "0x8E115C", VA = "0x8E115C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x8E11CC", Offset = "0x8E11CC", VA = "0x8E11CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x8E0C88", Offset = "0x8E0C88", VA = "0x8E0C88")]
		[DebuggerHidden]
		public <TurnOffVibration>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x8E1088", Offset = "0x8E1088", VA = "0x8E1088", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x8E108C", Offset = "0x8E108C", VA = "0x8E108C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x8E1164", Offset = "0x8E1164", VA = "0x8E1164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x8E02E8", Offset = "0x8E02E8", VA = "0x8E02E8", Slot = "9")]
	internal override Vector3 GetControllerVelocity(ControllerType hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x8E03E4", Offset = "0x8E03E4", VA = "0x8E03E4", Slot = "14")]
	internal override Vector2 GetThumbstickValue(ControllerType hand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x8E0598", Offset = "0x8E0598", VA = "0x8E0598", Slot = "11")]
	internal override float GetIndexTriggerValue(ControllerType hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x8E0720", Offset = "0x8E0720", VA = "0x8E0720", Slot = "13")]
	internal override float GetHandTriggerValue(ControllerType hand)
	{
		return default(float);
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x8E08A8", Offset = "0x8E08A8", VA = "0x8E08A8", Slot = "7")]
	internal override bool IsMenuKeyDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x8E0938", Offset = "0x8E0938", VA = "0x8E0938", Slot = "8")]
	internal override bool IsChangeLevelKeyDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x8E09A0", Offset = "0x8E09A0", VA = "0x8E09A0", Slot = "6")]
	internal override bool IsQuitKeyDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x8E0A08", Offset = "0x8E0A08", VA = "0x8E0A08", Slot = "15")]
	internal override void SetContollerVibration(float frequency, float amplitude, ControllerType hand)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x8E0BF0", Offset = "0x8E0BF0", VA = "0x8E0BF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691064", Offset = "0x691064")]
	private IEnumerator TurnOffVibration(ControllerType hand)
	{
		return null;
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x8E0CB4", Offset = "0x8E0CB4", VA = "0x8E0CB4", Slot = "12")]
	internal override bool GetAButtonDown(ControllerType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x8E0D1C", Offset = "0x8E0D1C", VA = "0x8E0D1C", Slot = "16")]
	internal override bool GetActivateButtonDown(ControllerType m_controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x8E0E20", Offset = "0x8E0E20", VA = "0x8E0E20", Slot = "17")]
	internal override bool GetActivateButtonUp(ControllerType m_controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x8E0F24", Offset = "0x8E0F24", VA = "0x8E0F24", Slot = "5")]
	internal override bool IsBackKeyDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x8E0F8C", Offset = "0x8E0F8C", VA = "0x8E0F8C", Slot = "10")]
	internal override Interactor GetInteractor(ControllerType hand)
	{
		return null;
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x8E1080", Offset = "0x8E1080", VA = "0x8E1080")]
	public OculusInputHandler()
	{
	}
}
[Token(Token = "0x20000C2")]
public class AxisCheck : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BDA8", Offset = "0x68BDA8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Transform> <>9__7_0;

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x986EB0", Offset = "0x986EB0", VA = "0x986EB0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x986EB8", Offset = "0x986EB8", VA = "0x986EB8")]
		internal int <SortByX>b__7_0(Transform left, Transform right)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Container symbolContainer;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Container axisContainer;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Transform> objs;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x98612C", Offset = "0x98612C", VA = "0x98612C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x986260", Offset = "0x986260", VA = "0x986260")]
	private void Start()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x9862C8", Offset = "0x9862C8", VA = "0x9862C8")]
	private void CheckNewObject(Collider other)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x986680", Offset = "0x986680", VA = "0x986680")]
	private void CheckOrder(Transform obj, string symbol)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x9864AC", Offset = "0x9864AC", VA = "0x9864AC")]
	private void SortByX()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x986D24", Offset = "0x986D24", VA = "0x986D24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x986E44", Offset = "0x986E44", VA = "0x986E44")]
	public AxisCheck()
	{
	}
}
[Token(Token = "0x20000C3")]
public class BalanceContainer : Container
{
	[Token(Token = "0x6000444")]
	[Address(RVA = "0x988014", Offset = "0x988014", VA = "0x988014", Slot = "4")]
	protected override bool IsTriggered(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x988178", Offset = "0x988178", VA = "0x988178")]
	public BalanceContainer()
	{
	}
}
[Token(Token = "0x20000C4")]
public class BalancePointer : MonoBehaviour
{
	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BalanceController controller;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Container left;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Container right;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x9889DC", Offset = "0x9889DC", VA = "0x9889DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x988B80", Offset = "0x988B80", VA = "0x988B80")]
	private void UpdatePointer()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x9889E0", Offset = "0x9889E0", VA = "0x9889E0")]
	public void UpdateRotation()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x989230", Offset = "0x989230", VA = "0x989230")]
	internal void HandleColliderChange(Collider collider)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x9892A8", Offset = "0x9892A8", VA = "0x9892A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x98948C", Offset = "0x98948C", VA = "0x98948C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x989670", Offset = "0x989670", VA = "0x989670")]
	private void HandleOnEnter(Transform obj)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x989910", Offset = "0x989910", VA = "0x989910")]
	private void HandleOnExit(Transform obj)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x989A10", Offset = "0x989A10", VA = "0x989A10")]
	private void HandleCollisionEnter(Collider obj)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x989AE0", Offset = "0x989AE0", VA = "0x989AE0")]
	private void HandleCollisionExit(Collider obj)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x989770", Offset = "0x989770", VA = "0x989770")]
	private void RotatePointer()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x989BA8", Offset = "0x989BA8", VA = "0x989BA8")]
	private float GetWeights(Container container)
	{
		return default(float);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x989E84", Offset = "0x989E84", VA = "0x989E84")]
	public BalancePointer()
	{
	}
}
[Token(Token = "0x20000C5")]
public class ComparisonContainer : Container
{
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ContainerType type;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x992134", Offset = "0x992134", VA = "0x992134", Slot = "4")]
	protected override bool IsTriggered(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x9923F4", Offset = "0x9923F4", VA = "0x9923F4")]
	public ComparisonContainer()
	{
	}
}
[Token(Token = "0x20000C6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x68B3F8", Offset = "0x68B3F8")]
public class ComparisonInfo : ScriptableObject
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int grade;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string instructionText;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string instructionClip;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string hintText;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string hintClip;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ComparisonType type;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Symbol symbol;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ComparisonObject[] objs;

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x992404", Offset = "0x992404", VA = "0x992404")]
	public ComparisonInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x20000C7")]
public enum Symbol
{
	[Token(Token = "0x40004F8")]
	GT,
	[Token(Token = "0x40004F9")]
	LT,
	[Token(Token = "0x40004FA")]
	EQ
}
[Serializable]
[Token(Token = "0x20000C8")]
public enum ComparisonType
{
	[Token(Token = "0x40004FC")]
	SYMBOL,
	[Token(Token = "0x40004FD")]
	WEIGHT
}
[Serializable]
[Token(Token = "0x20000C9")]
public class ComparisonObject
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform prefab;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float weight;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color color;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 spawnPoint;

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x994064", Offset = "0x994064", VA = "0x994064")]
	public ComparisonObject()
	{
	}
}
[Token(Token = "0x20000CA")]
public class ComparisonMgr : MonoBehaviour
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ComparisonInfo[] comparisonInfos;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Container[] containers;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Container symbolContainer;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform numberAxis;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string symbol;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int size;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_Text hint;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform parent;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int currentGrade;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentLevel;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ComparisonType type;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject currentTarget;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Transform> generatedObjs;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject[] symbolObjs;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<float> nums;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x99240C", Offset = "0x99240C", VA = "0x99240C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x992564", Offset = "0x992564", VA = "0x992564")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x9926B4", Offset = "0x9926B4", VA = "0x9926B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x992728", Offset = "0x992728", VA = "0x992728")]
	private int GetCurrentLevel(int currentGrade)
	{
		return default(int);
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x992A78", Offset = "0x992A78", VA = "0x992A78")]
	private void Update()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x992B88", Offset = "0x992B88", VA = "0x992B88")]
	private bool CheckResult()
	{
		return default(bool);
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x992FA0", Offset = "0x992FA0", VA = "0x992FA0")]
	private bool GetSymbol()
	{
		return default(bool);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x992C88", Offset = "0x992C88", VA = "0x992C88")]
	private List<float> GetNums()
	{
		return null;
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x9930C4", Offset = "0x9930C4", VA = "0x9930C4")]
	private bool CheckEquation(List<float> nums)
	{
		return default(bool);
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x9927D8", Offset = "0x9927D8", VA = "0x9927D8")]
	private void NextLevel()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x993B94", Offset = "0x993B94", VA = "0x993B94")]
	private void SetGeneratedObjs()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x993474", Offset = "0x993474", VA = "0x993474")]
	private void Restore()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x9939F0", Offset = "0x9939F0", VA = "0x9939F0")]
	private void SetSymbolObject()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x993D70", Offset = "0x993D70", VA = "0x993D70")]
	private GameObject GetSymbolObject(string symbol)
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x99371C", Offset = "0x99371C", VA = "0x99371C")]
	private void GenerateTargets(ComparisonObject[] objs)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x993E74", Offset = "0x993E74", VA = "0x993E74")]
	public void DisplayHint()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x994054", Offset = "0x994054", VA = "0x994054")]
	public ComparisonMgr()
	{
	}
}
[Token(Token = "0x20000CB")]
public class BlocksButton : SNButton
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string type;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<string> onButtonDown;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x98ABE8", Offset = "0x98ABE8", VA = "0x98ABE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x98AC6C", Offset = "0x98AC6C", VA = "0x98AC6C")]
	public BlocksButton()
	{
	}
}
[Token(Token = "0x20000CC")]
public class BlocksMgr : MonoBehaviour
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnPoint;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] prefabs;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ParticleSystem birth;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Transform> spawnObjs;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int limit;

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x98AC74", Offset = "0x98AC74", VA = "0x98AC74")]
	public void ClearAll()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x98ADFC", Offset = "0x98ADFC", VA = "0x98ADFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x98AF00", Offset = "0x98AF00", VA = "0x98AF00")]
	private void SpawnBlock(string type)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x98B2B4", Offset = "0x98B2B4", VA = "0x98B2B4")]
	public void AddSpawnObject(Transform transform)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x98B1A8", Offset = "0x98B1A8", VA = "0x98B1A8")]
	private Transform GetFrefab(string type)
	{
		return null;
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x98B324", Offset = "0x98B324", VA = "0x98B324")]
	public BlocksMgr()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ClearButton : SNButton
{
	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action onClear;

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x9918E4", Offset = "0x9918E4", VA = "0x9918E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x99195C", Offset = "0x99195C", VA = "0x99195C")]
	public ClearButton()
	{
	}
}
[Token(Token = "0x20000CE")]
public class AccountMgr : MonoSingleton<AccountMgr>
{
	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Account currentAccount;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Performance currentPerformance;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UserProfile currentProfile;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Inventory currentInventory;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSyncFromRemote;

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x98141C", Offset = "0x98141C", VA = "0x98141C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x981498", Offset = "0x981498", VA = "0x981498")]
	public UserProfile GetUserProfile()
	{
		return null;
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x9814A0", Offset = "0x9814A0", VA = "0x9814A0")]
	public ProfileData GetUserProfileData()
	{
		return null;
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x9814CC", Offset = "0x9814CC", VA = "0x9814CC")]
	internal void SetUserProfile(UserProfile profile)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x98153C", Offset = "0x98153C", VA = "0x98153C")]
	private int GetAcountID(Device device)
	{
		return default(int);
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x981614", Offset = "0x981614", VA = "0x981614")]
	private void InitUser(int accountID)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x981C08", Offset = "0x981C08", VA = "0x981C08")]
	private void InitUserProfile()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x981D24", Offset = "0x981D24", VA = "0x981D24")]
	private void InitPerformance()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x982468", Offset = "0x982468", VA = "0x982468")]
	private void InitInventory()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x9818F0", Offset = "0x9818F0", VA = "0x9818F0")]
	private void CreateAccount(UserProfile profile)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x981EE8", Offset = "0x981EE8", VA = "0x981EE8")]
	private void CreatePerformance(UserProfile profile)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x98262C", Offset = "0x98262C", VA = "0x98262C")]
	private void CreateInventory(UserProfile profile)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x982854", Offset = "0x982854", VA = "0x982854")]
	private void UpdateDevice(UserProfile profile)
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x9829C0", Offset = "0x9829C0", VA = "0x9829C0")]
	private void UpdateAccount(Account account)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x982B14", Offset = "0x982B14", VA = "0x982B14")]
	internal void UpdateAccount()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x982C74", Offset = "0x982C74", VA = "0x982C74")]
	internal void UpdateInventory()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x982EF0", Offset = "0x982EF0", VA = "0x982EF0")]
	internal void UpdatePerformance()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x981D44", Offset = "0x981D44", VA = "0x981D44")]
	private void SyncCurrentPerformance(int performanceID)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x982488", Offset = "0x982488", VA = "0x982488")]
	private void SyncCurrentInventory(int inventoryID)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x9834BC", Offset = "0x9834BC", VA = "0x9834BC")]
	private void OnGetAccount(Account account)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x98357C", Offset = "0x98357C", VA = "0x98357C")]
	private void OnUpdateAccount(Account account)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x983CF4", Offset = "0x983CF4", VA = "0x983CF4")]
	private void OnUpdateInventory(Inventory obj)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x983EF0", Offset = "0x983EF0", VA = "0x983EF0")]
	private void OnUpdatePerformace(Performance obj)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x98447C", Offset = "0x98447C", VA = "0x98447C")]
	private void OnCreateAccount(Account obj)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x98465C", Offset = "0x98465C", VA = "0x98465C")]
	private void CreateAccess(int account_id)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x983B50", Offset = "0x983B50", VA = "0x983B50")]
	private void UpdateAccess(int account_id)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x984850", Offset = "0x984850", VA = "0x984850")]
	private void onGetAccess(Access obj)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x984A6C", Offset = "0x984A6C", VA = "0x984A6C")]
	private void OnCreateInventory(Inventory obj)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x984AC0", Offset = "0x984AC0", VA = "0x984AC0")]
	private void OnCreatePerformance(Performance obj)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x984B14", Offset = "0x984B14", VA = "0x984B14")]
	private void OnGetInventory(Inventory obj)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x984C08", Offset = "0x984C08", VA = "0x984C08")]
	private void OnGetPerformance(Performance obj)
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x985050", Offset = "0x985050", VA = "0x985050")]
	public AccountMgr()
	{
	}
}
[Token(Token = "0x20000CF")]
public abstract class AnswerChecker : MonoBehaviour
{
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float confirmInterval;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Choice choice;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastTime;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, int> onUpgrade;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x986040", Offset = "0x986040", VA = "0x986040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x986068", Offset = "0x986068", VA = "0x986068")]
	public void CheckAnswer(int index)
	{
	}

	[Token(Token = "0x6000494")]
	protected abstract void AnswerRight();

	[Token(Token = "0x6000495")]
	protected abstract void AnswerWrong();

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x986100", Offset = "0x986100", VA = "0x986100")]
	protected AnswerChecker()
	{
	}
}
[Token(Token = "0x20000D0")]
public class Blink : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material material;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isArrived;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isEnabled;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color color;

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x98A904", Offset = "0x98A904", VA = "0x98A904")]
	private void Start()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x98A9D0", Offset = "0x98A9D0", VA = "0x98A9D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x98AAF4", Offset = "0x98AAF4", VA = "0x98AAF4")]
	public void Enable(bool on)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x98A9D4", Offset = "0x98A9D4", VA = "0x98A9D4")]
	private void SwitchAlpha()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x98ABA8", Offset = "0x98ABA8", VA = "0x98ABA8")]
	public Blink()
	{
	}
}
[Token(Token = "0x20000D1")]
public class ActionButton : SNButton
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action onButtonDown;

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x9850A0", Offset = "0x9850A0", VA = "0x9850A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x9850E0", Offset = "0x9850E0", VA = "0x9850E0")]
	public ActionButton()
	{
	}
}
[Token(Token = "0x20000D2")]
public class AnswerButton : SNButton
{
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int answerIndex;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int> onButtonDown;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x985FA8", Offset = "0x985FA8", VA = "0x985FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x985FAC", Offset = "0x985FAC", VA = "0x985FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x986030", Offset = "0x986030", VA = "0x986030")]
	public AnswerButton()
	{
	}
}
[Token(Token = "0x20000D3")]
public class HintButton : SNButton
{
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action onButtonDown;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x83F7D8", Offset = "0x83F7D8", VA = "0x83F7D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x83F850", Offset = "0x83F850", VA = "0x83F850")]
	public HintButton()
	{
	}
}
[Token(Token = "0x20000D4")]
public class ResetButton : SNButton
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action onButtonDown;

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x7FFE94", Offset = "0x7FFE94", VA = "0x7FFE94")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x7FFF8C", Offset = "0x7FFF8C", VA = "0x7FFF8C")]
	public ResetButton()
	{
	}
}
[Token(Token = "0x20000D5")]
public class SNButton : MonoBehaviour
{
	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource buttonClick;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color originalColor;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color highlightColor;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int sensitivity;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool buttonDown;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool triggered;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int duration;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool isGuiding;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x803808", Offset = "0x803808", VA = "0x803808")]
	public void TriggerButton(Collider other, bool down)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x8039A8", Offset = "0x8039A8", VA = "0x8039A8")]
	protected bool shouldIgnore()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x8038C8", Offset = "0x8038C8", VA = "0x8038C8")]
	public void SetButtonState(bool down)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x8039F8", Offset = "0x8039F8", VA = "0x8039F8")]
	protected void SwitchColor()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x803B30", Offset = "0x803B30", VA = "0x803B30")]
	public void SetGuideState(bool isGuiding)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x7FFF08", Offset = "0x7FFF08", VA = "0x7FFF08")]
	protected bool isTriggered()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x803C14", Offset = "0x803C14", VA = "0x803C14", Slot = "4")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x803D30", Offset = "0x803D30", VA = "0x803D30")]
	protected void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x803D38", Offset = "0x803D38", VA = "0x803D38")]
	protected void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x7FFF90", Offset = "0x7FFF90", VA = "0x7FFF90")]
	public SNButton()
	{
	}
}
[Token(Token = "0x20000D6")]
public abstract class Choice : MonoSingleton<Choice>
{
	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text[] answers;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentLevel;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int previousNumber;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightIndex;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> indexes;

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x991644", Offset = "0x991644", VA = "0x991644")]
	public void UpdateChoice()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x99182C", Offset = "0x99182C", VA = "0x99182C")]
	protected int GenerateRandom(int range)
	{
		return default(int);
	}

	[Token(Token = "0x60004B1")]
	internal abstract int GetLevel();

	[Token(Token = "0x60004B2")]
	internal abstract int[] GenerateNumbers();

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x9860F8", Offset = "0x9860F8", VA = "0x9860F8")]
	public int GetRightIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x991860", Offset = "0x991860", VA = "0x991860")]
	protected Choice()
	{
	}
}
[Token(Token = "0x20000D7")]
public class ColliderTrigger : MonoBehaviour
{
	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onEnter;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] names;

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x991964", Offset = "0x991964", VA = "0x991964")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x991A64", Offset = "0x991A64", VA = "0x991A64")]
	public ColliderTrigger()
	{
	}
}
[Token(Token = "0x20000D8")]
public class CollisionScript : MonoBehaviour
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68E6EC", Offset = "0x68E6EC")]
	private int <RefCount>k__BackingField;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68E6FC", Offset = "0x68E6FC")]
	private bool <Inside>k__BackingField;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68E70C", Offset = "0x68E70C")]
	private bool <IsGrabbed>k__BackingField;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68E71C", Offset = "0x68E71C")]
	private GroupCollision.Trigger <TriggerType>k__BackingField;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GroupCollision m_GroupCollision;

	[Token(Token = "0x1700003E")]
	public int RefCount
	{
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x991A6C", Offset = "0x991A6C", VA = "0x991A6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6910C8", Offset = "0x6910C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x991A74", Offset = "0x991A74", VA = "0x991A74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6910D8", Offset = "0x6910D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public bool Inside
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x991A7C", Offset = "0x991A7C", VA = "0x991A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6910E8", Offset = "0x6910E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x991A84", Offset = "0x991A84", VA = "0x991A84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6910F8", Offset = "0x6910F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public bool IsGrabbed
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x991A90", Offset = "0x991A90", VA = "0x991A90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691108", Offset = "0x691108")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x991A98", Offset = "0x991A98", VA = "0x991A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691118", Offset = "0x691118")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public GroupCollision.Trigger TriggerType
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x991AA4", Offset = "0x991AA4", VA = "0x991AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691128", Offset = "0x691128")]
		get
		{
			return default(GroupCollision.Trigger);
		}
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x991AAC", Offset = "0x991AAC", VA = "0x991AAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691138", Offset = "0x691138")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public GroupCollision GroupRoot
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x991AB4", Offset = "0x991AB4", VA = "0x991AB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x991ABC", Offset = "0x991ABC", VA = "0x991ABC")]
		set
		{
		}
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x991AC4", Offset = "0x991AC4", VA = "0x991AC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x991AD0", Offset = "0x991AD0", VA = "0x991AD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x991BC4", Offset = "0x991BC4", VA = "0x991BC4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x992048", Offset = "0x992048", VA = "0x992048")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x99209C", Offset = "0x99209C", VA = "0x99209C")]
	public void OnGrabSelectEnter(Interactor interactor)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x9920A8", Offset = "0x9920A8", VA = "0x9920A8")]
	public void OnGrabSelectExit(Interactor interactor)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x991F14", Offset = "0x991F14", VA = "0x991F14")]
	private void AddSelf(Collision collision)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x991AF0", Offset = "0x991AF0", VA = "0x991AF0")]
	private void RemoveSelf()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x991E40", Offset = "0x991E40", VA = "0x991E40")]
	private bool InGroup(Collision collision)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x991D94", Offset = "0x991D94", VA = "0x991D94")]
	private bool Valid(Collision collision)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x9920B0", Offset = "0x9920B0", VA = "0x9920B0")]
	public CollisionScript()
	{
	}
}
[Token(Token = "0x20000D9")]
public abstract class Container : MonoBehaviour
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<Transform> objects;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Collider> onEnter;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<Collider> onExit;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int index;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GroupCollision m_GroupCollision;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x99406C", Offset = "0x99406C", VA = "0x99406C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x989AD8", Offset = "0x989AD8", VA = "0x989AD8")]
	public GroupCollision GetGroupCollision()
	{
		return null;
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x989070", Offset = "0x989070", VA = "0x989070")]
	public float GetTotalMass()
	{
		return default(float);
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x98647C", Offset = "0x98647C", VA = "0x98647C")]
	public List<Transform> GetObjects()
	{
		return null;
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x98EE6C", Offset = "0x98EE6C", VA = "0x98EE6C")]
	public void AddObjects(List<Transform> objs)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x9940F8", Offset = "0x9940F8", VA = "0x9940F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004D2")]
	protected abstract bool IsTriggered(Collider other);

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x994320", Offset = "0x994320", VA = "0x994320")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x994530", Offset = "0x994530", VA = "0x994530")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x99472C", Offset = "0x99472C", VA = "0x99472C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x98EEDC", Offset = "0x98EEDC", VA = "0x98EEDC")]
	public void Restore()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x9948F8", Offset = "0x9948F8", VA = "0x9948F8")]
	public void ClearObjects()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x988188", Offset = "0x988188", VA = "0x988188")]
	protected Container()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DA")]
public enum ContainerType
{
	[Token(Token = "0x4000547")]
	Object,
	[Token(Token = "0x4000548")]
	Symbol,
	[Token(Token = "0x4000549")]
	Axis
}
[Token(Token = "0x20000DB")]
public class DropHandler : MonoBehaviour
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool reborn;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool updateOnLoad;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ParticleSystem birth;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ParticleSystem disappear;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 originPos;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion originRot;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AudioClip disappearSound;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action onBirth;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x8841A8", Offset = "0x8841A8", VA = "0x8841A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x884420", Offset = "0x884420", VA = "0x884420")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x8844D8", Offset = "0x8844D8", VA = "0x8844D8")]
	public void RecordOrigin()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x884548", Offset = "0x884548", VA = "0x884548")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x88454C", Offset = "0x88454C", VA = "0x88454C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x884614", Offset = "0x884614", VA = "0x884614")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x884838", Offset = "0x884838", VA = "0x884838")]
	private void Birth()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x884AAC", Offset = "0x884AAC", VA = "0x884AAC")]
	public void RestoreTransform()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x884B44", Offset = "0x884B44", VA = "0x884B44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x884C54", Offset = "0x884C54", VA = "0x884C54")]
	public DropHandler()
	{
	}
}
[Token(Token = "0x20000DC")]
public class DynamicEffect : MonoBehaviour
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material material;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isArrived;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isEnabled;

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x884C64", Offset = "0x884C64", VA = "0x884C64")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x884CF8", Offset = "0x884CF8", VA = "0x884CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x884DFC", Offset = "0x884DFC", VA = "0x884DFC")]
	public void Enable(bool on)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x884D08", Offset = "0x884D08", VA = "0x884D08")]
	private void SwitchShininess()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x884E7C", Offset = "0x884E7C", VA = "0x884E7C")]
	public DynamicEffect()
	{
	}
}
[Token(Token = "0x20000DD")]
internal class FileUtil
{
	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x8871B4", Offset = "0x8871B4", VA = "0x8871B4")]
	internal static bool CreateFolder(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x8872FC", Offset = "0x8872FC", VA = "0x8872FC")]
	internal static void DeleteFile(string fileName)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x887338", Offset = "0x887338", VA = "0x887338")]
	internal static List<string> FindFiles(string folder, string name)
	{
		return null;
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x887638", Offset = "0x887638", VA = "0x887638")]
	public FileUtil()
	{
	}
}
[Token(Token = "0x20000DE")]
public class GameTimer : MonoBehaviour
{
	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float countDownTime;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float gameTime;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text leftTime;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action onTimeUp;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool stopped;

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x88BE6C", Offset = "0x88BE6C", VA = "0x88BE6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x88BECC", Offset = "0x88BECC", VA = "0x88BECC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x88C040", Offset = "0x88C040", VA = "0x88C040")]
	public GameTimer()
	{
	}
}
[Token(Token = "0x20000DF")]
public class GroupCollision
{
	[Token(Token = "0x2000288")]
	public enum Trigger
	{
		[Token(Token = "0x4000E10")]
		Container,
		[Token(Token = "0x4000E11")]
		Member,
		[Token(Token = "0x4000E12")]
		Unknown
	}

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68E72C", Offset = "0x68E72C")]
	private bool <Enabled>k__BackingField;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Collider> onAddCollider;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Collider> onRemoveCollider;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Container m_Container;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Transform> m_Objects;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Collider> colliders;

	[Token(Token = "0x17000043")]
	public bool Enabled
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x893078", Offset = "0x893078", VA = "0x893078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691148", Offset = "0x691148")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x893080", Offset = "0x893080", VA = "0x893080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691158", Offset = "0x691158")]
		set
		{
		}
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x89308C", Offset = "0x89308C", VA = "0x89308C")]
	public GroupCollision(Container container)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x89330C", Offset = "0x89330C", VA = "0x89330C")]
	public List<Transform> GetAllObjects()
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x893314", Offset = "0x893314", VA = "0x893314")]
	public void RemoveAllObjects()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x893398", Offset = "0x893398", VA = "0x893398")]
	public void AddCollider(Collider collider, Trigger trigger)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x89360C", Offset = "0x89360C", VA = "0x89360C")]
	public void RemoveCollider(Collider collider, Trigger trigger)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x89387C", Offset = "0x89387C", VA = "0x89387C")]
	internal void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x893964", Offset = "0x893964", VA = "0x893964")]
	internal void OnTriggerExit(Collider collider)
	{
	}
}
[Token(Token = "0x20000E0")]
public class HintRender : MonoBehaviour
{
	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startTransform;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 endOffset;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool onFirst;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer lr;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TMP_Text hint;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Canvas canvas;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] positions;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 startPoint;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 endPoint;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 controlPoint;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x83F858", Offset = "0x83F858", VA = "0x83F858")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x83F984", Offset = "0x83F984", VA = "0x83F984")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x83F994", Offset = "0x83F994", VA = "0x83F994")]
	private void Translate()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x83FB14", Offset = "0x83FB14", VA = "0x83FB14")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x83FD94", Offset = "0x83FD94", VA = "0x83FD94")]
	private Vector3[] GetBeizerList(Vector3 startPoint, Vector3 controlPoint, Vector3 endPoint, int segmentNum)
	{
		return null;
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x83FEC4", Offset = "0x83FEC4", VA = "0x83FEC4")]
	private Vector3 CalculateCubicBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x840024", Offset = "0x840024", VA = "0x840024")]
	public void Display(string text)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x83F900", Offset = "0x83F900", VA = "0x83F900")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x8400C4", Offset = "0x8400C4", VA = "0x8400C4")]
	public HintRender()
	{
	}
}
[Token(Token = "0x20000E1")]
public abstract class InputHandler : MonoSingleton<InputHandler>
{
	[Token(Token = "0x2000289")]
	internal enum ControllerType
	{
		[Token(Token = "0x4000E14")]
		Left,
		[Token(Token = "0x4000E15")]
		Right
	}

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action onMenuKeyDown;

	[Token(Token = "0x6000501")]
	internal abstract bool IsBackKeyDown();

	[Token(Token = "0x6000502")]
	internal abstract bool IsQuitKeyDown();

	[Token(Token = "0x6000503")]
	internal abstract bool IsMenuKeyDown();

	[Token(Token = "0x6000504")]
	internal abstract bool IsChangeLevelKeyDown();

	[Token(Token = "0x6000505")]
	internal abstract Vector3 GetControllerVelocity(ControllerType hand);

	[Token(Token = "0x6000506")]
	internal abstract Interactor GetInteractor(ControllerType hand);

	[Token(Token = "0x6000507")]
	internal abstract float GetIndexTriggerValue(ControllerType hand);

	[Token(Token = "0x6000508")]
	internal abstract bool GetAButtonDown(ControllerType hand);

	[Token(Token = "0x6000509")]
	internal abstract float GetHandTriggerValue(ControllerType hand);

	[Token(Token = "0x600050A")]
	internal abstract Vector2 GetThumbstickValue(ControllerType hand);

	[Token(Token = "0x600050B")]
	internal abstract void SetContollerVibration(float frequency, float amplitude, ControllerType hand);

	[Token(Token = "0x600050C")]
	internal abstract bool GetActivateButtonDown(ControllerType m_controller);

	[Token(Token = "0x600050D")]
	internal abstract bool GetActivateButtonUp(ControllerType m_controller);

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x84701C", Offset = "0x84701C", VA = "0x84701C")]
	protected InputHandler()
	{
	}
}
[Token(Token = "0x20000E2")]
public class Instructions : MonoSingleton<Instructions>
{
	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text hint;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer spriteRender;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text progress;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer[] threeViewSprites;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform explain;

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x8470D0", Offset = "0x8470D0", VA = "0x8470D0")]
	public TMP_Text GetText()
	{
		return null;
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x8470D8", Offset = "0x8470D8", VA = "0x8470D8")]
	public TMP_Text GetProgressText()
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x8470E0", Offset = "0x8470E0", VA = "0x8470E0")]
	public SpriteRenderer GetSpriteRenderer()
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x8470E8", Offset = "0x8470E8", VA = "0x8470E8")]
	public SpriteRenderer[] GetThreeViewSprites()
	{
		return null;
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x8470F0", Offset = "0x8470F0", VA = "0x8470F0")]
	public RectTransform GetExplain()
	{
		return null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x8470F8", Offset = "0x8470F8", VA = "0x8470F8")]
	public void ResetThreeViewSprites()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x847198", Offset = "0x847198", VA = "0x847198")]
	internal void Init()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x8471F0", Offset = "0x8471F0", VA = "0x8471F0")]
	public void Init(string hintText, Sprite hintSprite, string progressText)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x84068C", Offset = "0x84068C", VA = "0x84068C")]
	internal void Init(string hintText)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x84729C", Offset = "0x84729C", VA = "0x84729C")]
	internal void SetText(string hintText)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x8472DC", Offset = "0x8472DC", VA = "0x8472DC")]
	public Instructions()
	{
	}
}
[Token(Token = "0x20000E3")]
public class AxisDragInteractable : Interactable
{
	[Serializable]
	[Token(Token = "0x200028A")]
	public class DragDistanceEvent : UnityEvent<float>
	{
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x987F74", Offset = "0x987F74", VA = "0x987F74")]
		public DragDistanceEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200028B")]
	public class DragStepEvent : UnityEvent<int>
	{
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x987FC4", Offset = "0x987FC4", VA = "0x987FC4")]
		public DragStepEvent()
		{
		}
	}

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E73C", Offset = "0x68E73C")]
	public Rigidbody MovingRigidbody;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 LocalAxis;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float AxisLength;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E774", Offset = "0x68E774")]
	public int Steps;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool SnapOnlyOnRelease;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool ReturnOnFree;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float ReturnSpeed;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip SnapAudioClip;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public DragDistanceEvent OnDragDistance;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public DragStepEvent OnDragStep;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 m_EndPoint;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 m_StartPoint;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 m_GrabbedOffset;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float m_CurrentDistance;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int m_CurrentStep;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Interactor m_GrabbingInteractor;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float m_StepLength;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x986FC8", Offset = "0x986FC8", VA = "0x986FC8", Slot = "5")]
	protected internal override void Start()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x987210", Offset = "0x987210", VA = "0x987210", Slot = "12")]
	public override void ProcessInteractable()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x9879CC", Offset = "0x9879CC", VA = "0x9879CC", Slot = "6")]
	protected internal override void OnSelectEnter(Interactor interactor)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x987AF8", Offset = "0x987AF8", VA = "0x987AF8", Slot = "7")]
	protected internal override void OnSelectExit(Interactor interactor)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x987DC4", Offset = "0x987DC4", VA = "0x987DC4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x987F64", Offset = "0x987F64", VA = "0x987F64")]
	public AxisDragInteractable()
	{
	}
}
[Token(Token = "0x20000E4")]
public class ButtonInteractable : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200028C")]
	public class ButtonPressedEvent : UnityEvent
	{
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x98CCD0", Offset = "0x98CCD0", VA = "0x98CCD0")]
		public ButtonPressedEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200028D")]
	public class ButtonReleasedEvent : UnityEvent
	{
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x98CCD8", Offset = "0x98CCD8", VA = "0x98CCD8")]
		public ButtonReleasedEvent()
		{
		}
	}

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Axis;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxDistance;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ReturnSpeed;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip ButtonPressAudioClip;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip ButtonReleaseAudioClip;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ButtonPressedEvent OnButtonPressed;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonReleasedEvent OnButtonReleased;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_StartPosition;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider m_Collider;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_Pressed;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool isDynamic;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool isReady;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x98C1FC", Offset = "0x98C1FC", VA = "0x98C1FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x98C3C4", Offset = "0x98C3C4", VA = "0x98C3C4")]
	public void Enabled(bool isEnabled)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x98C420", Offset = "0x98C420", VA = "0x98C420")]
	private void SetNonReady()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x98C3D4", Offset = "0x98C3D4", VA = "0x98C3D4")]
	private void SetReady()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x98C428", Offset = "0x98C428", VA = "0x98C428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x98C4C4", Offset = "0x98C4C4", VA = "0x98C4C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x98CAAC", Offset = "0x98CAAC", VA = "0x98CAAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x98CC60", Offset = "0x98CC60", VA = "0x98CC60")]
	public ButtonInteractable()
	{
	}
}
[Token(Token = "0x20000E5")]
public class DialInteractable : Interactable
{
	[Token(Token = "0x200028E")]
	public enum InteractionType
	{
		[Token(Token = "0x4000E17")]
		ControllerRotation,
		[Token(Token = "0x4000E18")]
		ControllerPull
	}

	[Serializable]
	[Token(Token = "0x200028F")]
	public class DialTurnedAngleEvent : UnityEvent<float>
	{
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x883B90", Offset = "0x883B90", VA = "0x883B90")]
		public DialTurnedAngleEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000290")]
	public class DialTurnedStepEvent : UnityEvent<int>
	{
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x883BE0", Offset = "0x883BE0", VA = "0x883BE0")]
		public DialTurnedStepEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000291")]
	public class DialChangedEvent : UnityEvent<DialInteractable>
	{
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x883B40", Offset = "0x883B40", VA = "0x883B40")]
		public DialChangedEvent()
		{
		}
	}

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public InteractionType DialType;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Rigidbody RotatingRigidbody;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 LocalRotationAxis;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 LocalAxisStart;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float RotationAngleMaximum;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E7AC", Offset = "0x68E7AC")]
	public int Steps;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool SnapOnRelease;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip SnapAudioClip;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public DialTurnedAngleEvent OnDialAngleChanged;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public DialTurnedStepEvent OnDialStepChanged;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public DialChangedEvent OnDialChanged;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Interactor m_GrabbingInteractor;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Quaternion m_GrabbedRotation;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 m_StartingWorldAxis;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float m_CurrentAngle;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int m_CurrentStep;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float m_StepSize;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform m_SyncTransform;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Transform m_OriginalTransform;

	[Token(Token = "0x17000044")]
	public float CurrentAngle
	{
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x882908", Offset = "0x882908", VA = "0x882908")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000045")]
	public int CurrentStep
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x882910", Offset = "0x882910", VA = "0x882910")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x882918", Offset = "0x882918", VA = "0x882918", Slot = "5")]
	protected internal override void Start()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x882B50", Offset = "0x882B50", VA = "0x882B50", Slot = "12")]
	public override void ProcessInteractable()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x883364", Offset = "0x883364", VA = "0x883364", Slot = "6")]
	protected internal override void OnSelectEnter(Interactor interactor)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x8835D0", Offset = "0x8835D0", VA = "0x8835D0", Slot = "7")]
	protected internal override void OnSelectExit(Interactor interactor)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x883B30", Offset = "0x883B30", VA = "0x883B30")]
	public DialInteractable()
	{
	}
}
[Token(Token = "0x20000E6")]
public class Grabbable : MonoBehaviour
{
	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool m_allowOffhandGrab;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	protected bool m_snapPosition;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[SerializeField]
	protected bool m_snapOrientation;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform m_snapOffset;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Collider[] m_grabPoints;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool m_grabbedKinematic;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Collider m_grabbedCollider;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Grabber m_grabbedBy;

	[Token(Token = "0x17000046")]
	public bool allowOffhandGrab
	{
		[Token(Token = "0x600052F")]
		[Address(RVA = "0x88F098", Offset = "0x88F098", VA = "0x88F098")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000530")]
		[Address(RVA = "0x88F0A0", Offset = "0x88F0A0", VA = "0x88F0A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public bool isGrabbed
	{
		[Token(Token = "0x6000531")]
		[Address(RVA = "0x88F0A4", Offset = "0x88F0A4", VA = "0x88F0A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000048")]
	public bool snapPosition
	{
		[Token(Token = "0x6000532")]
		[Address(RVA = "0x88F114", Offset = "0x88F114", VA = "0x88F114")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000049")]
	public bool snapOrientation
	{
		[Token(Token = "0x6000533")]
		[Address(RVA = "0x88F11C", Offset = "0x88F11C", VA = "0x88F11C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004A")]
	public Transform snapOffset
	{
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x88F124", Offset = "0x88F124", VA = "0x88F124")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004B")]
	public Grabber grabbedBy
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x88F12C", Offset = "0x88F12C", VA = "0x88F12C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004C")]
	public Transform grabbedTransform
	{
		[Token(Token = "0x6000536")]
		[Address(RVA = "0x88F134", Offset = "0x88F134", VA = "0x88F134")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004D")]
	public Rigidbody grabbedRigidbody
	{
		[Token(Token = "0x6000537")]
		[Address(RVA = "0x88F164", Offset = "0x88F164", VA = "0x88F164")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004E")]
	public Collider[] grabPoints
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x88F194", Offset = "0x88F194", VA = "0x88F194")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x88F19C", Offset = "0x88F19C", VA = "0x88F19C", Slot = "4")]
	public virtual void GrabBegin(Grabber hand, Collider grabPoint)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x88F234", Offset = "0x88F234", VA = "0x88F234", Slot = "5")]
	public virtual void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x88F374", Offset = "0x88F374", VA = "0x88F374")]
	private void Awake()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x88F4D0", Offset = "0x88F4D0", VA = "0x88F4D0", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x88F544", Offset = "0x88F544", VA = "0x88F544")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x88F6A8", Offset = "0x88F6A8", VA = "0x88F6A8")]
	public Grabbable()
	{
	}
}
[Token(Token = "0x20000E7")]
public class GrabInteractable : Interactable
{
	[Token(Token = "0x40005AC")]
	private const float k_DefaultTighteningAmount = 0.5f;

	[Token(Token = "0x40005AD")]
	private const float k_DefaultSmoothingAmount = 5f;

	[Token(Token = "0x40005AE")]
	private const float k_VelocityPredictionFactor = 0.6f;

	[Token(Token = "0x40005AF")]
	private const float k_AngularVelocityDamping = 0.95f;

	[Token(Token = "0x40005B0")]
	private const int k_ThrowSmoothingFrameCount = 20;

	[Token(Token = "0x40005B1")]
	private const float k_DefaultAttachEaseInTime = 0.15f;

	[Token(Token = "0x40005B2")]
	private const float k_DefaultThrowSmoothingDuration = 0.25f;

	[Token(Token = "0x40005B3")]
	private const float k_DefaultThrowVelocityScale = 1.5f;

	[Token(Token = "0x40005B4")]
	private const float k_DefaultThrowAngularVelocityScale = 0.25f;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform m_AttachTransform;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float m_AttachEaseInTime;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private MovementType m_MovementType;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private bool snapPosition;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[SerializeField]
	private bool snapRotation;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	[SerializeField]
	private bool m_TrackPosition;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	[SerializeField]
	private bool m_SmoothPosition;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68E8A4", Offset = "0x68E8A4")]
	private float m_SmoothPositionAmount;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68E8E4", Offset = "0x68E8E4")]
	private float m_TightenPosition;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private bool m_TrackRotation;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	[SerializeField]
	private bool m_SmoothRotation;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68E944", Offset = "0x68E944")]
	private float m_SmoothRotationAmount;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68E984", Offset = "0x68E984")]
	private float m_TightenRotation;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private bool m_ThrowOnDetach;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float m_ThrowSmoothingDuration;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68E9E4", Offset = "0x68E9E4")]
	private AnimationCurve m_ThrowSmoothingCurve;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float m_ThrowVelocityScale;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float m_ThrowAngularVelocityScale;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private bool m_GravityOnDetach;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	[SerializeField]
	private bool m_RetainTransformParent;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool m_WasKinematic;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
	private bool m_UsedGravity;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform m_OriginalSceneParent;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Interactor m_SelectingInteractor;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 m_InteractorLocalPosition;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Quaternion m_InteractorLocalRotation;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 m_TargetWorldPosition;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Quaternion m_TargetWorldRotation;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float m_CurrentAttachEaseTime;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private MovementType m_CurrentMovementType;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool m_DetachInLateUpdate;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 m_DetachVelocity;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 m_DetachAngularVelocity;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int m_ThrowSmoothingCurrentFrame;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float[] m_ThrowSmoothingFrameTimes;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3[] m_ThrowSmoothingVelocityFrames;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3[] m_ThrowSmoothingAngularVelocityFrames;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Rigidbody m_RigidBody;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 m_LastPosition;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Quaternion m_LastRotation;

	[Token(Token = "0x1700004F")]
	public Transform attachTransform
	{
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x88C860", Offset = "0x88C860", VA = "0x88C860")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x88C868", Offset = "0x88C868", VA = "0x88C868")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public float attachEaseInTime
	{
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x88C870", Offset = "0x88C870", VA = "0x88C870")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x88C878", Offset = "0x88C878", VA = "0x88C878")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public MovementType movementType
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x88C880", Offset = "0x88C880", VA = "0x88C880")]
		get
		{
			return default(MovementType);
		}
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x88C888", Offset = "0x88C888", VA = "0x88C888")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public bool trackPosition
	{
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x88C890", Offset = "0x88C890", VA = "0x88C890")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000546")]
		[Address(RVA = "0x88C898", Offset = "0x88C898", VA = "0x88C898")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public bool smoothPosition
	{
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x88C8A4", Offset = "0x88C8A4", VA = "0x88C8A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000548")]
		[Address(RVA = "0x88C8AC", Offset = "0x88C8AC", VA = "0x88C8AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float smoothPositionAmount
	{
		[Token(Token = "0x6000549")]
		[Address(RVA = "0x88C8B8", Offset = "0x88C8B8", VA = "0x88C8B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x88C8C0", Offset = "0x88C8C0", VA = "0x88C8C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float tightenPosition
	{
		[Token(Token = "0x600054B")]
		[Address(RVA = "0x88C8C8", Offset = "0x88C8C8", VA = "0x88C8C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600054C")]
		[Address(RVA = "0x88C8D0", Offset = "0x88C8D0", VA = "0x88C8D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public bool trackRotation
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0x88C8D8", Offset = "0x88C8D8", VA = "0x88C8D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600054E")]
		[Address(RVA = "0x88C8E0", Offset = "0x88C8E0", VA = "0x88C8E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public bool smoothRotation
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0x88C8EC", Offset = "0x88C8EC", VA = "0x88C8EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000550")]
		[Address(RVA = "0x88C8F4", Offset = "0x88C8F4", VA = "0x88C8F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public float smoothRotationAmount
	{
		[Token(Token = "0x6000551")]
		[Address(RVA = "0x88C900", Offset = "0x88C900", VA = "0x88C900")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000552")]
		[Address(RVA = "0x88C908", Offset = "0x88C908", VA = "0x88C908")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public float tightenRotation
	{
		[Token(Token = "0x6000553")]
		[Address(RVA = "0x88C910", Offset = "0x88C910", VA = "0x88C910")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x88C918", Offset = "0x88C918", VA = "0x88C918")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public bool throwOnDetach
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0x88C920", Offset = "0x88C920", VA = "0x88C920")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000556")]
		[Address(RVA = "0x88C928", Offset = "0x88C928", VA = "0x88C928")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public float throwSmoothingDuration
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0x88C934", Offset = "0x88C934", VA = "0x88C934")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x88C93C", Offset = "0x88C93C", VA = "0x88C93C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public float throwVelocityScale
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0x88C944", Offset = "0x88C944", VA = "0x88C944")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x88C94C", Offset = "0x88C94C", VA = "0x88C94C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public float throwAngularVelocityScale
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x88C954", Offset = "0x88C954", VA = "0x88C954")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x88C95C", Offset = "0x88C95C", VA = "0x88C95C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public bool gravityOnDetach
	{
		[Token(Token = "0x600055D")]
		[Address(RVA = "0x88C964", Offset = "0x88C964", VA = "0x88C964")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x88C96C", Offset = "0x88C96C", VA = "0x88C96C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public bool retainTransformParent
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x88C978", Offset = "0x88C978", VA = "0x88C978")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x88C980", Offset = "0x88C980", VA = "0x88C980")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public Interactor selectingInteractor
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x88C98C", Offset = "0x88C98C", VA = "0x88C98C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x88C994", Offset = "0x88C994", VA = "0x88C994", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x88CAF8", Offset = "0x88CAF8", VA = "0x88CAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x88D428", Offset = "0x88D428", VA = "0x88D428")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x88D55C", Offset = "0x88D55C", VA = "0x88D55C", Slot = "12")]
	public override void ProcessInteractable()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x88DCF0", Offset = "0x88DCF0", VA = "0x88DCF0")]
	private Vector3 GetWorldAttachPosition(Interactor interactor)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x88DEF0", Offset = "0x88DEF0", VA = "0x88DEF0")]
	private Quaternion GetWorldAttachRotation(Interactor interactor)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x88CB5C", Offset = "0x88CB5C", VA = "0x88CB5C")]
	private void UpdateTarget(float timeDelta)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x88D5C4", Offset = "0x88D5C4", VA = "0x88D5C4")]
	private void PerformKinematicUpdate(float timeDelta)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x88D800", Offset = "0x88D800", VA = "0x88D800")]
	private void PerformVelocityTrackingUpdate(float timeDelta)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x88D35C", Offset = "0x88D35C", VA = "0x88D35C")]
	private void PerformInstantaneousUpdate(float timeDelta)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x88E13C", Offset = "0x88E13C", VA = "0x88E13C")]
	private void Teleport(Transform teleportTransform)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x88D4B0", Offset = "0x88D4B0", VA = "0x88D4B0")]
	private void Detach()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x88E39C", Offset = "0x88E39C", VA = "0x88E39C")]
	private void UpdateInteractorLocalPose(Interactor interactor)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x88E6D8", Offset = "0x88E6D8", VA = "0x88E6D8", Slot = "6")]
	protected internal override void OnSelectEnter(Interactor interactor)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x88EAA4", Offset = "0x88EAA4", VA = "0x88EAA4", Slot = "7")]
	protected internal override void OnSelectExit(Interactor interactor)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x88E93C", Offset = "0x88E93C", VA = "0x88E93C")]
	private void SmoothVelocityStart()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x88EB74", Offset = "0x88EB74", VA = "0x88EB74")]
	private void SmoothVelocityEnd()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x88CEE4", Offset = "0x88CEE4", VA = "0x88CEE4")]
	private void SmoothVelocityUpdate()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x88EC78", Offset = "0x88EC78", VA = "0x88EC78")]
	private Vector3 getSmoothedVelocityValue(Vector3[] velocityFrames)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x88EFB0", Offset = "0x88EFB0", VA = "0x88EFB0")]
	public GrabInteractable()
	{
	}
}
[Token(Token = "0x20000E8")]
public abstract class Interactable : MonoBehaviour
{
	[Token(Token = "0x2000292")]
	public enum MovementType
	{
		[Token(Token = "0x4000E1A")]
		VelocityTracking,
		[Token(Token = "0x4000E1B")]
		Kinematic,
		[Token(Token = "0x4000E1C")]
		Instantaneous
	}

	[Serializable]
	[Token(Token = "0x2000293")]
	public class InteractorEvent : UnityEvent<Interactor>
	{
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x847D44", Offset = "0x847D44", VA = "0x847D44")]
		public InteractorEvent()
		{
		}
	}

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractorEvent m_OnSelectEnter;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractorEvent m_OnSelectExit;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InteractorEvent m_OnHoverEnter;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InteractorEvent m_OnHoverExit;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InteractorEvent m_OnActivate;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InteractorEvent m_OnDeactivate;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Collider[] m_interactablePoints;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Interactor m_interactedBy;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool m_Kinematic;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Collider m_interactedCollider;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioClip collisionSound;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EA80", Offset = "0x68EA80")]
	private bool <isHovered>k__BackingField;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EA90", Offset = "0x68EA90")]
	private bool <isSelected>k__BackingField;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Renderer[] renderes;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color highlightColor;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SoundMgr.PlayParameters soundPara;

	[Token(Token = "0x17000061")]
	public Collider[] interactablePoints
	{
		[Token(Token = "0x6000576")]
		[Address(RVA = "0x84732C", Offset = "0x84732C", VA = "0x84732C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public Interactor interactedBy
	{
		[Token(Token = "0x6000577")]
		[Address(RVA = "0x847334", Offset = "0x847334", VA = "0x847334")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public bool isHovered
	{
		[Token(Token = "0x6000578")]
		[Address(RVA = "0x84733C", Offset = "0x84733C", VA = "0x84733C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691168", Offset = "0x691168")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000579")]
		[Address(RVA = "0x847344", Offset = "0x847344", VA = "0x847344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691178", Offset = "0x691178")]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public bool isSelected
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0x847350", Offset = "0x847350", VA = "0x847350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691188", Offset = "0x691188")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600057B")]
		[Address(RVA = "0x847358", Offset = "0x847358", VA = "0x847358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691198", Offset = "0x691198")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public bool isInteracted
	{
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x84772C", Offset = "0x84772C", VA = "0x84772C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x847364", Offset = "0x847364", VA = "0x847364", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x847424", Offset = "0x847424", VA = "0x847424", Slot = "5")]
	protected internal virtual void Start()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x84751C", Offset = "0x84751C", VA = "0x84751C")]
	public void Highlight(bool on)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x847720", Offset = "0x847720", VA = "0x847720")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x84779C", Offset = "0x84779C", VA = "0x84779C", Slot = "6")]
	protected internal virtual void OnSelectEnter(Interactor interactor)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x84787C", Offset = "0x84787C", VA = "0x84787C", Slot = "7")]
	protected internal virtual void OnSelectExit(Interactor interactor)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x847950", Offset = "0x847950", VA = "0x847950", Slot = "8")]
	protected internal virtual void OnHoverEnter(Interactor interactor)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x8479CC", Offset = "0x8479CC", VA = "0x8479CC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x847B54", Offset = "0x847B54", VA = "0x847B54", Slot = "9")]
	protected internal virtual void OnHoverExit(Interactor interactor)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x847BD8", Offset = "0x847BD8", VA = "0x847BD8", Slot = "10")]
	protected internal virtual void OnActivate(Interactor interactor)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x847C4C", Offset = "0x847C4C", VA = "0x847C4C", Slot = "11")]
	protected internal virtual void OnDeactivate(Interactor interactor)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x847CC0", Offset = "0x847CC0", VA = "0x847CC0", Slot = "12")]
	public virtual void ProcessInteractable()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x847CC4", Offset = "0x847CC4", VA = "0x847CC4", Slot = "13")]
	public virtual void GrabBegin(Interactor interactor)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x847CCC", Offset = "0x847CCC", VA = "0x847CCC", Slot = "14")]
	public virtual void GrabEnd()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x847CD4", Offset = "0x847CD4", VA = "0x847CD4")]
	protected Interactable()
	{
	}
}
[Token(Token = "0x20000E9")]
public class OffsetGrabbable : GrabInteractable
{
	[Token(Token = "0x2000294")]
	private class SavedTransform
	{
		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 OriginalPosition;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion OriginalRotation;

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x8F8D90", Offset = "0x8F8D90", VA = "0x8F8D90")]
		public SavedTransform()
		{
		}
	}

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Dictionary<Interactor, SavedTransform> m_SavedTransforms;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Rigidbody m_Rb;

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x8F8A74", Offset = "0x8F8A74", VA = "0x8F8A74", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x8F8AD8", Offset = "0x8F8AD8", VA = "0x8F8AD8", Slot = "6")]
	protected internal override void OnSelectEnter(Interactor interactor)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x8F8D98", Offset = "0x8F8D98", VA = "0x8F8D98", Slot = "7")]
	protected internal override void OnSelectExit(Interactor interactor)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x8F8F1C", Offset = "0x8F8F1C", VA = "0x8F8F1C")]
	public OffsetGrabbable()
	{
	}
}
[Token(Token = "0x20000EA")]
public class RotationInteractable : Interactable
{
	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Rigidbody RotatingRigidbody;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 LocalRotationAxis;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 LocalAxisStart;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float RotationAngleMaximum;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion start;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float outAngle;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 lastHandProjected;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Interactor m_GrabbingInteractor;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform m_SyncTransform;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform m_OriginalTransform;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 m_StartingWorldAxis;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 worldPlaneNormal;

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x802834", Offset = "0x802834", VA = "0x802834", Slot = "5")]
	protected internal override void Start()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x802B70", Offset = "0x802B70", VA = "0x802B70", Slot = "6")]
	protected internal override void OnSelectEnter(Interactor interactor)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x8030EC", Offset = "0x8030EC", VA = "0x8030EC")]
	private void ComputeAngle(Interactor interactor)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x8032BC", Offset = "0x8032BC", VA = "0x8032BC", Slot = "7")]
	protected internal override void OnSelectExit(Interactor interactor)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x803364", Offset = "0x803364", VA = "0x803364", Slot = "12")]
	public override void ProcessInteractable()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x802F08", Offset = "0x802F08", VA = "0x802F08")]
	private Vector3 ComputeToTransformProjected(Transform xForm)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x80352C", Offset = "0x80352C", VA = "0x80352C")]
	public RotationInteractable()
	{
	}
}
[Token(Token = "0x20000EB")]
internal class LanCode
{
	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	internal static string Welcome;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal static string ChooseProfile;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal static string CreatorIntro;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal static string ExploreCompleted;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal static string ExploreInstruction;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal static string SplitIntro;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal static string HiddenCubeHint;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal static string HiddenCube;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal static string GuideIntro;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal static string CountIntro;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal static string LoadIntro;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal static string ThreeViewIntro;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal static string ThreeView;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal static string LoadCubeMemory;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	internal static string CubeIntro;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	internal static string LoadTangramMemory;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	internal static string BlocksIntro;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	internal static string AssessmentCompleted;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal static string Tangram;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	internal static string ChooseAnswer;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	internal static string ContinuePlay;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	internal static string LoadSuccess;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	internal static string PlayIntro;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	internal static string CrystalIntro;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	internal static string HouseWelcome;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	internal static string LobbyIntro;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	internal static string Openning;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	internal static string CreateFailed;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	internal static string CreateSuccess;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	internal static string CreateInprogress;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	internal static string AnswerWrong;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	internal static string AnswerRight;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	internal static string TakePicture;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	internal static string AssessmentIntro;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	internal static string PoolTen;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	internal static string SplitTen;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	internal static string Symbol;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	internal static string MatchIntro;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	internal static string Cycle;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	internal static string Sudoku;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	internal static string ChooseItems;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	internal static string AlreadyHaveItem;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	internal static string MedalNotEnough;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	internal static string Create;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	internal static string PrepareMaterials;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	internal static string CreateSuccessfully;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	internal static string UnneededMaterial;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	internal static string MaterialNotEnough;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	internal static string MaterialTooMuch;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	internal static string Basic;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal static string Junior;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal static string Senior;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal static string CameraHint;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal static string SharePhotoHint;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal static string FruiterIntro;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal static string CameraIntro;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal static string PhotoFuncIntro;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal static string PhotoIntro;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	internal static string CreatorHint;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	internal static string CreatorFruit;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	internal static string ChallengeIntro;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	internal static string DialInst;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	internal static string DragInst;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	internal static string GrabInst;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	internal static string GrabComp;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	internal static string PadIntro;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	internal static string MedalIntro;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	internal static string MedalCompleted;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	internal static string VendingIntro;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	internal static string VendingCompleted;

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x848FB4", Offset = "0x848FB4", VA = "0x848FB4")]
	public LanCode()
	{
	}
}
[Token(Token = "0x20000EC")]
public class LevelRecorder : Framework.Singleton<LevelRecorder>
{
	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool open;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x84A02C", Offset = "0x84A02C", VA = "0x84A02C")]
	public int Get(string key)
	{
		return default(int);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x84A07C", Offset = "0x84A07C", VA = "0x84A07C")]
	public void Set(string key, int level)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x84A08C", Offset = "0x84A08C", VA = "0x84A08C")]
	public LevelRecorder()
	{
	}
}
[Token(Token = "0x20000ED")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x68B43C", Offset = "0x68B43C")]
internal class LocalizedAsset : ScriptableObject
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<LocalizedLang> languages;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x84BA58", Offset = "0x84BA58", VA = "0x84BA58")]
	public LocalizedAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EE")]
internal class LocalizedLang
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string language;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioAsset> audios;

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x84BA60", Offset = "0x84BA60", VA = "0x84BA60")]
	public LocalizedLang()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EF")]
internal class AudioAsset
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x98611C", Offset = "0x98611C", VA = "0x98611C")]
	public AudioAsset()
	{
	}
}
[Token(Token = "0x20000F0")]
internal class SLocalization : MonoSingleton<SLocalization>
{
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizedAsset localizedAsset;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string defaultLanguage;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LocalizedLang localizedLang;

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x803534", Offset = "0x803534", VA = "0x803534")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x7FE9C0", Offset = "0x7FE9C0", VA = "0x7FE9C0")]
	public static AudioClip GetAudio(string name)
	{
		return null;
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x8035D0", Offset = "0x8035D0", VA = "0x8035D0")]
	public void SetLanguage(string language)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x80375C", Offset = "0x80375C", VA = "0x80375C")]
	public SLocalization()
	{
	}
}
[Token(Token = "0x20000F1")]
public class Loom : MonoBehaviour
{
	[Token(Token = "0x2000295")]
	public struct NoDelayedQueueItem
	{
		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<object> action;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object param;
	}

	[Token(Token = "0x2000296")]
	public struct DelayedQueueItem
	{
		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Action<object> action;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public object param;
	}

	[Serializable]
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BDB8", Offset = "0x68BDB8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<DelayedQueueItem, bool> <>9__20_0;

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x850CC8", Offset = "0x850CC8", VA = "0x850CC8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x850CD0", Offset = "0x850CD0", VA = "0x850CD0")]
		internal bool <Update>b__20_0(DelayedQueueItem d)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int maxThreads;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int numThreads;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Loom _current;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool initialized;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<NoDelayedQueueItem> _actions;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<NoDelayedQueueItem> _currentActions;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<DelayedQueueItem> _delayed;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<DelayedQueueItem> _currentDelayed;

	[Token(Token = "0x17000066")]
	public static Loom Current
	{
		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x84FC48", Offset = "0x84FC48", VA = "0x84FC48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x84FDDC", Offset = "0x84FDDC", VA = "0x84FDDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x84FCB4", Offset = "0x84FCB4", VA = "0x84FCB4")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x84FE54", Offset = "0x84FE54", VA = "0x84FE54")]
	public static void QueueOnMainThread(Action<object> taction, object tparam)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x84FECC", Offset = "0x84FECC", VA = "0x84FECC")]
	public static void QueueOnMainThread(Action<object> taction, object tparam, float time)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x850198", Offset = "0x850198", VA = "0x850198")]
	public static Thread RunAsync(Action a)
	{
		return null;
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x8502A0", Offset = "0x8502A0", VA = "0x8502A0")]
	private static void RunAction(object action)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x8504F4", Offset = "0x8504F4", VA = "0x8504F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x8505C4", Offset = "0x8505C4", VA = "0x8505C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x8505C8", Offset = "0x8505C8", VA = "0x8505C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x850B40", Offset = "0x850B40", VA = "0x850B40")]
	public Loom()
	{
	}
}
[Token(Token = "0x20000F2")]
public class ObjectsUtil : Framework.Singleton<ObjectsUtil>
{
	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Material normalCube;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xB91460", Offset = "0xB91460", VA = "0xB91460")]
	public void Restore(bool needPhysics)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xB918F0", Offset = "0xB918F0", VA = "0xB918F0")]
	private void RestoreGuidingState(Transform cubeTransform, bool isGuiding)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xB91608", Offset = "0xB91608", VA = "0xB91608")]
	public void RestoreRendering(Transform trans, bool isRendering)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xB9175C", Offset = "0xB9175C", VA = "0xB9175C")]
	public void SetKinematic(Transform trans, bool needPhysics)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xB91974", Offset = "0xB91974", VA = "0xB91974")]
	public void SetKinematic(List<Transform> trans, bool needPhysics)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xB91AD0", Offset = "0xB91AD0", VA = "0xB91AD0")]
	public void SetKinematic(List<GameObject> objs, bool needPhysics)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xB91C2C", Offset = "0xB91C2C", VA = "0xB91C2C")]
	public void SetCollider(List<Transform> trans, bool needPhysics)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xB91D84", Offset = "0xB91D84", VA = "0xB91D84")]
	public void SetKinematic(UnityEngine.Object[] objs, bool needPhysics)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xB91EB0", Offset = "0xB91EB0", VA = "0xB91EB0")]
	public void SetCollider(UnityEngine.Object[] objs, bool needPhysics)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xB91828", Offset = "0xB91828", VA = "0xB91828")]
	public void SetCollider(Transform trans, bool needPhysics)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xB91FDC", Offset = "0xB91FDC", VA = "0xB91FDC")]
	public List<Transform> SetObjectsInvisible(UnityEngine.Object[] objects)
	{
		return null;
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xB9215C", Offset = "0xB9215C", VA = "0xB9215C")]
	public List<Transform> SetObjectsInvisible(List<Transform> trans)
	{
		return null;
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xB922D4", Offset = "0xB922D4", VA = "0xB922D4")]
	public void Destroy(List<Transform> transforms, float delay)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xB923D4", Offset = "0xB923D4", VA = "0xB923D4")]
	public ObjectsUtil()
	{
	}
}
[Token(Token = "0x20000F3")]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool highlight;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float t;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material material;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float intensity;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maximum;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minimum;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x8F8F8C", Offset = "0x8F8F8C", VA = "0x8F8F8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x8F9024", Offset = "0x8F9024", VA = "0x8F9024")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x8F9034", Offset = "0x8F9034", VA = "0x8F9034")]
	private void SwitchAlpha()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x8F9194", Offset = "0x8F9194", VA = "0x8F9194")]
	public void HighLight()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x8F9208", Offset = "0x8F9208", VA = "0x8F9208")]
	public void UndoHighlight()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x8F927C", Offset = "0x8F927C", VA = "0x8F927C")]
	public Outline()
	{
	}
}
[Token(Token = "0x20000F4")]
public class SoundMgr : MonoSingleton<SoundMgr>
{
	[Token(Token = "0x2000298")]
	public struct PlayParameters
	{
		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Pitch;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Volume;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int SourceID;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Loop;
	}

	[Token(Token = "0x2000299")]
	public class PlayEvent
	{
		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Time;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x809CF0", Offset = "0x809CF0", VA = "0x809CF0")]
		public PlayEvent()
		{
		}
	}

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource referenceSource;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int sourceCount;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, PlayEvent> m_PlayEvents;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> m_PlayingSources;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource[] sourcePool;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_UsedSource;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> IDToRemove;

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x808F0C", Offset = "0x808F0C", VA = "0x808F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x8090C8", Offset = "0x8090C8", VA = "0x8090C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x809520", Offset = "0x809520", VA = "0x809520")]
	public AudioSource GetNewSource()
	{
		return null;
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x7FE7B0", Offset = "0x7FE7B0", VA = "0x7FE7B0")]
	public void PlaySound(AudioClip clip, Vector3 position, float delayedTime = 0f, float cooldownTime = 0.5f)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x8098A8", Offset = "0x8098A8", VA = "0x8098A8")]
	public void PlaySound(AudioClip clip, float cooldownTime = 0.5f)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x809964", Offset = "0x809964", VA = "0x809964")]
	public void PauseSound(AudioClip clip)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x809B34", Offset = "0x809B34", VA = "0x809B34")]
	public void StopSound(AudioClip clip)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x809594", Offset = "0x809594", VA = "0x809594")]
	public void PlaySound(AudioClip clip, Vector3 position, float delayedTime, PlayParameters parameters, float cooldownTime = 0.5f)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x809CF8", Offset = "0x809CF8", VA = "0x809CF8")]
	public SoundMgr()
	{
	}
}
[Token(Token = "0x20000F5")]
public class SpawnPoint : MonoSingleton<SpawnPoint>
{
	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x809DB8", Offset = "0x809DB8", VA = "0x809DB8")]
	public Transform GetSpawnPoint()
	{
		return null;
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x809DC0", Offset = "0x809DC0", VA = "0x809DC0")]
	public SpawnPoint()
	{
	}
}
[Token(Token = "0x20000F6")]
public class Statistics : MonoSingleton<Statistics>
{
	[Token(Token = "0x200029A")]
	private class Round
	{
		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long start_ts;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long end_ts;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int level;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isCorrect;

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x80B088", Offset = "0x80B088", VA = "0x80B088")]
		public Round()
		{
		}
	}

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Round> rounds;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Round currentRound;

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x80AD84", Offset = "0x80AD84", VA = "0x80AD84")]
	private new void Awake()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x80AEB4", Offset = "0x80AEB4", VA = "0x80AEB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x80AEB8", Offset = "0x80AEB8", VA = "0x80AEB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x80AEBC", Offset = "0x80AEBC", VA = "0x80AEBC")]
	public void RoundStart(int level)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x80B090", Offset = "0x80B090", VA = "0x80B090")]
	public void RoundEnd(bool isCorrect)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x80B0DC", Offset = "0x80B0DC", VA = "0x80B0DC")]
	public int GetGrade()
	{
		return default(int);
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x80AF84", Offset = "0x80AF84", VA = "0x80AF84")]
	private static long GetTimeStamp(bool useMilliSecond = false)
	{
		return default(long);
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x80B650", Offset = "0x80B650", VA = "0x80B650")]
	public Statistics()
	{
	}
}
[Token(Token = "0x20000F7")]
public class VoiceMgr : MonoSingleton<VoiceMgr>
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource reference;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AudioSource> voices;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xEECBB0", Offset = "0xEECBB0", VA = "0xEECBB0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xEECC40", Offset = "0xEECC40", VA = "0xEECC40")]
	public AudioSource PlayVoice(string name, float time = 0f)
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xEE8E60", Offset = "0xEE8E60", VA = "0xEE8E60")]
	public void PlayVoice(AudioClip clip, float time = 0f)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xEECEA8", Offset = "0xEECEA8", VA = "0xEECEA8")]
	public AudioSource GetVoice(string name)
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xEE9100", Offset = "0xEE9100", VA = "0xEE9100")]
	public void Play(string name)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xEECFD8", Offset = "0xEECFD8", VA = "0xEECFD8")]
	public VoiceMgr()
	{
	}
}
[Token(Token = "0x20000F8")]
public class CourseMgr : MonoBehaviour
{
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] courses;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int courseCode;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x99781C", Offset = "0x99781C", VA = "0x99781C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x9978BC", Offset = "0x9978BC", VA = "0x9978BC")]
	public void SetCourse(int course)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x997A08", Offset = "0x997A08", VA = "0x997A08")]
	private int GetCourseIndex(int course)
	{
		return default(int);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x997A10", Offset = "0x997A10", VA = "0x997A10")]
	public int GetCourse()
	{
		return default(int);
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x997A18", Offset = "0x997A18", VA = "0x997A18")]
	public CourseMgr()
	{
	}
}
[Token(Token = "0x20000F9")]
public class CountAnimation : CubeAnimation
{
	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BDC8", Offset = "0x68BDC8")]
	private sealed class <Play>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CountAnimation <>4__this;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <columnCount>5__2;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__3;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<int> <indexes>5__4;

		[Token(Token = "0x1700016F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x9977A4", Offset = "0x9977A4", VA = "0x9977A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x997814", Offset = "0x997814", VA = "0x997814", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x9963B8", Offset = "0x9963B8", VA = "0x9963B8")]
		[DebuggerHidden]
		public <Play>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x996860", Offset = "0x996860", VA = "0x996860", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x996864", Offset = "0x996864", VA = "0x996864", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x9977AC", Offset = "0x9977AC", VA = "0x9977AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource stepSound;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material hiddenCubeMaterial;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material originMaterial;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TMP_Text numberPrefab;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 offsetVector;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<TMP_Text> numbers;

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x9960A4", Offset = "0x9960A4", VA = "0x9960A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x9961C8", Offset = "0x9961C8", VA = "0x9961C8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x996320", Offset = "0x996320", VA = "0x996320")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6911A8", Offset = "0x6911A8")]
	private IEnumerator Play(float time)
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x9963E4", Offset = "0x9963E4", VA = "0x9963E4")]
	private void DestoryNumbers()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x9964E4", Offset = "0x9964E4", VA = "0x9964E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x996608", Offset = "0x996608", VA = "0x996608", Slot = "5")]
	protected override void StartTasks()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x996778", Offset = "0x996778", VA = "0x996778", Slot = "6")]
	protected override void StopTasks()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x9967F0", Offset = "0x9967F0", VA = "0x9967F0")]
	public CountAnimation()
	{
	}
}
[Token(Token = "0x20000FA")]
public abstract class CubeAnimation : MonoBehaviour
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected TMP_Text hint;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static bool inProgress;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action onReset;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x9962B4", Offset = "0x9962B4", VA = "0x9962B4", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x9960A8", Offset = "0x9960A8", VA = "0x9960A8")]
	protected void RegisterEvents()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x9964E8", Offset = "0x9964E8", VA = "0x9964E8")]
	protected void UnRegisterEvents()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x99802C", Offset = "0x99802C", VA = "0x99802C")]
	protected void StopPlay()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x9980A8", Offset = "0x9980A8", VA = "0x9980A8")]
	public void StartPlay()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x99773C", Offset = "0x99773C", VA = "0x99773C")]
	protected void CompletePlay()
	{
	}

	[Token(Token = "0x60005F1")]
	protected abstract void StartTasks();

	[Token(Token = "0x60005F2")]
	protected abstract void StopTasks();

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x996858", Offset = "0x996858", VA = "0x996858")]
	protected CubeAnimation()
	{
	}
}
[Token(Token = "0x20000FB")]
public class CubeConfigFileHelper : MonoSingleton<CubeConfigFileHelper>
{
	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BDD8", Offset = "0x68BDD8")]
	private sealed class <InitLevelsFromFile>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filepath;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CubeConfigFileHelper <>4__this;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000171")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x99A3E0", Offset = "0x99A3E0", VA = "0x99A3E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x99A450", Offset = "0x99A450", VA = "0x99A450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x999654", Offset = "0x999654", VA = "0x999654")]
		[DebuggerHidden]
		public <InitLevelsFromFile>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x999FA8", Offset = "0x999FA8", VA = "0x999FA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x99A084", Offset = "0x99A084", VA = "0x99A084", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x999FC4", Offset = "0x999FC4", VA = "0x999FC4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x99A3E8", Offset = "0x99A3E8", VA = "0x99A3E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int[]> levels;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> gridLens;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x999590", Offset = "0x999590", VA = "0x999590")]
	public void InitLevels(string cfgfilepath)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x9995BC", Offset = "0x9995BC", VA = "0x9995BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x69120C", Offset = "0x69120C")]
	private IEnumerator InitLevelsFromFile(string filepath)
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x999680", Offset = "0x999680", VA = "0x999680")]
	internal int[] GetLevel(int index)
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x9996F0", Offset = "0x9996F0", VA = "0x9996F0")]
	private void DoInitLevels(string[] lines)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x999DE0", Offset = "0x999DE0", VA = "0x999DE0")]
	private int[] Reorder(int[] cg, int gridSize)
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x999F08", Offset = "0x999F08", VA = "0x999F08")]
	public CubeConfigFileHelper()
	{
	}
}
[Token(Token = "0x20000FC")]
public class CubeGuidance : MonoSingleton<CubeGuidance>
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cubePrefab;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cubeOrig;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tolerance;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem successEffect;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color guidedCubeColor;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool guidanceState;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int index;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material refCubeMaterial;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool nextStep;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform> transforms;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Transform> generatedCubes;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform currentCube;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool completed;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action onCompleted;

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x99A560", Offset = "0x99A560", VA = "0x99A560")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x99A608", Offset = "0x99A608", VA = "0x99A608")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x99AC44", Offset = "0x99AC44", VA = "0x99AC44")]
	private void LoadGuidedCubes()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x99A644", Offset = "0x99A644", VA = "0x99A644")]
	private void CheckNextStep()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x99A92C", Offset = "0x99A92C", VA = "0x99A92C")]
	private void GenerateRefCubes()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x99B498", Offset = "0x99B498", VA = "0x99B498")]
	public void SetGuidanceState(bool guidanceState)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x99B4E4", Offset = "0x99B4E4", VA = "0x99B4E4")]
	private void DestroyGeneratedObjects(float delay)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x99B5AC", Offset = "0x99B5AC", VA = "0x99B5AC")]
	public bool GetGuidanceState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x99B5B4", Offset = "0x99B5B4", VA = "0x99B5B4")]
	public CubeGuidance()
	{
	}
}
[Token(Token = "0x20000FD")]
public class CubeHandler : MonoBehaviour
{
	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float speed;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color originColor;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material originMaterial;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material guidingMaterial;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<string> onEnter;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<string, GameObject> onCollision;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isGuiding;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isAlphaOne;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x99B610", Offset = "0x99B610", VA = "0x99B610")]
	private void Start()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x99B724", Offset = "0x99B724", VA = "0x99B724")]
	private void Update()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x99B734", Offset = "0x99B734", VA = "0x99B734")]
	private void SwitchAlpha()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x99B8D8", Offset = "0x99B8D8", VA = "0x99B8D8")]
	public void Restore(bool needPhysics)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x99B954", Offset = "0x99B954", VA = "0x99B954")]
	public void Split(int step)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x99BA74", Offset = "0x99BA74", VA = "0x99BA74")]
	public void Combine(int step)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x99B964", Offset = "0x99B964", VA = "0x99B964")]
	private void MoveY(float dist)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x99BA88", Offset = "0x99BA88", VA = "0x99BA88")]
	public void Move(Vector3 endPos)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x99BAD8", Offset = "0x99BAD8", VA = "0x99BAD8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x99BBE4", Offset = "0x99BBE4", VA = "0x99BBE4")]
	public void SetGuideState(bool isGuiding)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x99BD08", Offset = "0x99BD08", VA = "0x99BD08")]
	public CubeHandler()
	{
	}
}
[Token(Token = "0x20000FE")]
public class CubesMgr : MonoSingleton<CubesMgr>
{
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BDE8", Offset = "0x68BDE8")]
	private sealed class <InitLevelsFromFile>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filepath;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CubesMgr <>4__this;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x17000173")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x99F91C", Offset = "0x99F91C", VA = "0x99F91C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x99F98C", Offset = "0x99F98C", VA = "0x99F98C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x99D5B4", Offset = "0x99D5B4", VA = "0x99D5B4")]
		[DebuggerHidden]
		public <InitLevelsFromFile>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x99F574", Offset = "0x99F574", VA = "0x99F574", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x99F650", Offset = "0x99F650", VA = "0x99F650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x99F590", Offset = "0x99F590", VA = "0x99F590")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x99F924", Offset = "0x99F924", VA = "0x99F924", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform prefab;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cubeOrig;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int level;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int gradeLevels;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int gridSize;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int totalGrids;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int totalCubes;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int totalColumns;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] columns;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] grids;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] residu;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnityEngine.Object[] cubes;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3Int[] positions;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] originPositions;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion[] originRotations;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<Vector3Int, int> cubeMap;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int nLevels;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isLevelLoaded;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<int[]> levels;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<int> gridLens;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string cfgfilepath;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x99C5C4", Offset = "0x99C5C4", VA = "0x99C5C4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x99C720", Offset = "0x99C720", VA = "0x99C720")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x99C828", Offset = "0x99C828", VA = "0x99C828")]
	private void RecordOrigins()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x99CBC0", Offset = "0x99CBC0", VA = "0x99CBC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x99D1B8", Offset = "0x99D1B8", VA = "0x99D1B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x99C6E8", Offset = "0x99C6E8", VA = "0x99C6E8")]
	private void InitLevels()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x99D1BC", Offset = "0x99D1BC", VA = "0x99D1BC")]
	private void InitLevelsDefault()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x998DE8", Offset = "0x998DE8", VA = "0x998DE8")]
	public int GetLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x99D5AC", Offset = "0x99D5AC", VA = "0x99D5AC")]
	internal void SetLevel(int l)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x99D514", Offset = "0x99D514", VA = "0x99D514")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691270", Offset = "0x691270")]
	private IEnumerator InitLevelsFromFile(string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x99D5E0", Offset = "0x99D5E0", VA = "0x99D5E0")]
	private void DoInitLevels(string[] lines)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x99DC9C", Offset = "0x99DC9C", VA = "0x99DC9C")]
	private void GenerateCubeObjs()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x997734", Offset = "0x997734", VA = "0x997734")]
	public int GetCubeCount()
	{
		return default(int);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x99739C", Offset = "0x99739C", VA = "0x99739C")]
	public int GetColumnCount()
	{
		return default(int);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x998E14", Offset = "0x998E14", VA = "0x998E14")]
	public int GetLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x99CBC8", Offset = "0x99CBC8", VA = "0x99CBC8")]
	public void LoadLevel(int n)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x9973A4", Offset = "0x9973A4", VA = "0x9973A4")]
	public List<int> GetColumnIndex(int indx)
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x99E838", Offset = "0x99E838", VA = "0x99E838")]
	public int GetMaxLayer()
	{
		return default(int);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x99B2F4", Offset = "0x99B2F4", VA = "0x99B2F4")]
	public List<int> GetCubeIndexByLayer()
	{
		return null;
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x99E644", Offset = "0x99E644", VA = "0x99E644")]
	public void DestroyCubeObjs()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x9976C8", Offset = "0x9976C8", VA = "0x9976C8")]
	public UnityEngine.Object GetCubeObj(int index)
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x998D40", Offset = "0x998D40", VA = "0x998D40")]
	public UnityEngine.Object[] GetCubeObjAll()
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x99E908", Offset = "0x99E908", VA = "0x99E908")]
	public Vector3Int GetCubePosition(int index)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x99E9B4", Offset = "0x99E9B4", VA = "0x99E9B4")]
	public Vector3Int[] GetCubePositionAll()
	{
		return null;
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x99E9BC", Offset = "0x99E9BC", VA = "0x99E9BC")]
	public Vector3 GetCubeOrigin(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x99EA70", Offset = "0x99EA70", VA = "0x99EA70")]
	public Vector3[] GetCubeOriginAll()
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x99EA78", Offset = "0x99EA78", VA = "0x99EA78")]
	public List<int> GetHiddenCubesFrontView()
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x99EC28", Offset = "0x99EC28", VA = "0x99EC28")]
	public List<int> GetHiddenCubesSideView()
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x99EDE4", Offset = "0x99EDE4", VA = "0x99EDE4")]
	public List<int> GetHiddenCubesTopView()
	{
		return null;
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x999274", Offset = "0x999274", VA = "0x999274")]
	public List<int> GetHiddenCubes()
	{
		return null;
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x998DF0", Offset = "0x998DF0", VA = "0x998DF0")]
	public void Challenge(int c)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x99AEDC", Offset = "0x99AEDC", VA = "0x99AEDC")]
	public void Reset()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x99EF84", Offset = "0x99EF84", VA = "0x99EF84")]
	public List<int> Split()
	{
		return null;
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x99F250", Offset = "0x99F250", VA = "0x99F250")]
	public List<int> Combine()
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x99F478", Offset = "0x99F478", VA = "0x99F478")]
	public CubesMgr()
	{
	}
}
[Token(Token = "0x20000FF")]
public class ExploreAnimation : CubeAnimation
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int level;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x886ADC", Offset = "0x886ADC", VA = "0x886ADC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x886C0C", Offset = "0x886C0C", VA = "0x886C0C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x886C14", Offset = "0x886C14", VA = "0x886C14")]
	private void OnCompleted()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x886D38", Offset = "0x886D38", VA = "0x886D38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x886E68", Offset = "0x886E68", VA = "0x886E68", Slot = "5")]
	protected override void StartTasks()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x887018", Offset = "0x887018", VA = "0x887018", Slot = "6")]
	protected override void StopTasks()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x88707C", Offset = "0x88707C", VA = "0x88707C")]
	private void ChangeLevel()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x88714C", Offset = "0x88714C", VA = "0x88714C")]
	public ExploreAnimation()
	{
	}
}
[Token(Token = "0x2000100")]
public class HiddenAnimation : CubeAnimation
{
	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BDF8", Offset = "0x68BDF8")]
	private sealed class <Play>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HiddenAnimation <>4__this;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Transform> <transforms>5__2;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] <origins>5__3;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<int> <hiddenCubes>5__4;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<int> <indexes>5__5;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__6;

		[Token(Token = "0x17000175")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x897F58", Offset = "0x897F58", VA = "0x897F58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0x897FC8", Offset = "0x897FC8", VA = "0x897FC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x897724", Offset = "0x897724", VA = "0x897724")]
		[DebuggerHidden]
		public <Play>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x8977CC", Offset = "0x8977CC", VA = "0x8977CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x8977D0", Offset = "0x8977D0", VA = "0x8977D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x897F60", Offset = "0x897F60", VA = "0x897F60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float offsetY;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource stepSound;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 offsetVector;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material hiddenCubeMaterial;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isPlayed;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x8974F4", Offset = "0x8974F4", VA = "0x8974F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x8974FC", Offset = "0x8974FC", VA = "0x8974FC", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x8975A0", Offset = "0x8975A0", VA = "0x8975A0", Slot = "5")]
	protected override void StartTasks()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x8976A8", Offset = "0x8976A8", VA = "0x8976A8", Slot = "6")]
	protected override void StopTasks()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x8976B0", Offset = "0x8976B0", VA = "0x8976B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6912D4", Offset = "0x6912D4")]
	private IEnumerator Play()
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x897750", Offset = "0x897750", VA = "0x897750")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x897758", Offset = "0x897758", VA = "0x897758")]
	public HiddenAnimation()
	{
	}
}
[Token(Token = "0x2000101")]
public class LevelManagement : MonoBehaviour
{
	[Token(Token = "0x6000641")]
	[Address(RVA = "0x849F58", Offset = "0x849F58", VA = "0x849F58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x84A024", Offset = "0x84A024", VA = "0x84A024")]
	public LevelManagement()
	{
	}
}
[Token(Token = "0x2000102")]
public class ResetAction : MonoBehaviour
{
	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TMP_Text hint;

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x7FF94C", Offset = "0x7FF94C", VA = "0x7FF94C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x7FFB1C", Offset = "0x7FFB1C", VA = "0x7FFB1C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x7FFCEC", Offset = "0x7FFCEC", VA = "0x7FFCEC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x7FFE8C", Offset = "0x7FFE8C", VA = "0x7FFE8C")]
	public ResetAction()
	{
	}
}
[Token(Token = "0x2000103")]
public class SplitAnimation : CubeAnimation
{
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE08", Offset = "0x68BE08")]
	private sealed class <Play>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplitAnimation <>4__this;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> <indexs>5__2;

		[Token(Token = "0x17000177")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x80AA00", Offset = "0x80AA00", VA = "0x80AA00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x80AA70", Offset = "0x80AA70", VA = "0x80AA70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x80A410", Offset = "0x80A410", VA = "0x80A410")]
		[DebuggerHidden]
		public <Play>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x80A5F4", Offset = "0x80A5F4", VA = "0x80A5F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x80A5F8", Offset = "0x80A5F8", VA = "0x80A5F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x80AA08", Offset = "0x80AA08", VA = "0x80AA08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource stepSound;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int step;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x80A38C", Offset = "0x80A38C", VA = "0x80A38C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x80A394", Offset = "0x80A394", VA = "0x80A394", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x80A39C", Offset = "0x80A39C", VA = "0x80A39C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691338", Offset = "0x691338")]
	private IEnumerator Play()
	{
		return null;
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x80A43C", Offset = "0x80A43C", VA = "0x80A43C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x80A444", Offset = "0x80A444", VA = "0x80A444", Slot = "5")]
	protected override void StartTasks()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x80A584", Offset = "0x80A584", VA = "0x80A584", Slot = "6")]
	protected override void StopTasks()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x80A58C", Offset = "0x80A58C", VA = "0x80A58C")]
	public SplitAnimation()
	{
	}
}
[Token(Token = "0x2000104")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B480", Offset = "0x68B480")]
public class CubeAnswerCheck : AnswerChecker
{
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE18", Offset = "0x68BE18")]
	private sealed class <TriggerSuccessEffect>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubeAnswerCheck <>4__this;

		[Token(Token = "0x17000179")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x998F1C", Offset = "0x998F1C", VA = "0x998F1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x998F8C", Offset = "0x998F8C", VA = "0x998F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x998DBC", Offset = "0x998DBC", VA = "0x998DBC")]
		[DebuggerHidden]
		public <TriggerSuccessEffect>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x998E30", Offset = "0x998E30", VA = "0x998E30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x998E34", Offset = "0x998E34", VA = "0x998E34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x998F24", Offset = "0x998F24", VA = "0x998F24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TMP_Text progress;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem successEffect;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int wrongCount;

	[Token(Token = "0x40006AA")]
	private const int scoreValue = 100;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currentGrade;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x998158", Offset = "0x998158", VA = "0x998158")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x9981B0", Offset = "0x9981B0", VA = "0x9981B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x9985E8", Offset = "0x9985E8", VA = "0x9985E8", Slot = "5")]
	protected override void AnswerWrong()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x998680", Offset = "0x998680", VA = "0x998680", Slot = "4")]
	protected override void AnswerRight()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x998BF8", Offset = "0x998BF8", VA = "0x998BF8")]
	private void ChallengeNewLevel(bool isCorrect)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x998D48", Offset = "0x998D48", VA = "0x998D48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x69139C", Offset = "0x69139C")]
	private IEnumerator TriggerSuccessEffect()
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x99858C", Offset = "0x99858C", VA = "0x99858C")]
	private int GetLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x998CB4", Offset = "0x998CB4", VA = "0x998CB4")]
	private void Challenge(bool isCorrect)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x998B9C", Offset = "0x998B9C", VA = "0x998B9C")]
	private int GetLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x998528", Offset = "0x998528", VA = "0x998528")]
	private string GetGradeText(int currentGrade)
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x998E1C", Offset = "0x998E1C", VA = "0x998E1C")]
	public CubeAnswerCheck()
	{
	}
}
[Token(Token = "0x2000105")]
public class CubeAssessmentMgr : MonoBehaviour
{
	[Token(Token = "0x6000659")]
	[Address(RVA = "0x998F94", Offset = "0x998F94", VA = "0x998F94")]
	private void Start()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x999004", Offset = "0x999004", VA = "0x999004")]
	public CubeAssessmentMgr()
	{
	}
}
[Token(Token = "0x2000106")]
public class CubeChoice : Choice
{
	[Token(Token = "0x600065B")]
	[Address(RVA = "0x99900C", Offset = "0x99900C", VA = "0x99900C", Slot = "6")]
	internal override int[] GenerateNumbers()
	{
		return null;
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x999528", Offset = "0x999528", VA = "0x999528", Slot = "5")]
	internal override int GetLevel()
	{
		return default(int);
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x999584", Offset = "0x999584", VA = "0x999584")]
	private void Start()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x999588", Offset = "0x999588", VA = "0x999588")]
	private void Update()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x99958C", Offset = "0x99958C", VA = "0x99958C")]
	public CubeChoice()
	{
	}
}
[Token(Token = "0x2000107")]
public class ColorCycleMgr : CycleMgr
{
	[Token(Token = "0x6000660")]
	[Address(RVA = "0x9920B8", Offset = "0x9920B8", VA = "0x9920B8", Slot = "6")]
	protected override void InitLevelConfigs()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x99212C", Offset = "0x99212C", VA = "0x99212C")]
	public ColorCycleMgr()
	{
	}
}
[Token(Token = "0x2000108")]
public class CycleGameMgr : MonoBehaviour
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, int> onUpgrade;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] answerItems;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip trainStartSound;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform train;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<CycleInfo> levels;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<int> missedItems;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected CycleInfo currentInfo;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Dictionary<int, int> levelConfigs;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentGrade;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int currentLevelOfGrade;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x99FA00", Offset = "0x99FA00", VA = "0x99FA00", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x99FBB4", Offset = "0x99FBB4", VA = "0x99FBB4")]
	private void EnableGroups(int grade, bool delete)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x99FD8C", Offset = "0x99FD8C", VA = "0x99FD8C", Slot = "5")]
	protected virtual void InitLevelConfigs()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x99FE68", Offset = "0x99FE68", VA = "0x99FE68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x99FF78", Offset = "0x99FF78", VA = "0x99FF78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x9A0088", Offset = "0x9A0088", VA = "0x9A0088", Slot = "6")]
	protected virtual void NextLevel()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x9A03D8", Offset = "0x9A03D8", VA = "0x9A03D8")]
	private void SetTrainItems(CycleInfo info)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x9A0778", Offset = "0x9A0778", VA = "0x9A0778")]
	public void ItemAdded(int index)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x9A0328", Offset = "0x9A0328", VA = "0x9A0328")]
	private int CaculateIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x9A0890", Offset = "0x9A0890", VA = "0x9A0890")]
	public CycleGameMgr()
	{
	}
}
[Token(Token = "0x2000109")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x68B4E4", Offset = "0x68B4E4")]
public class CycleInfo : ScriptableObject
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int grade;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CycleType type;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CycleObject[] objs;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x879570", Offset = "0x879570", VA = "0x879570")]
	public CycleInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x200010A")]
public enum CycleType
{
	[Token(Token = "0x40006BA")]
	COLOR,
	[Token(Token = "0x40006BB")]
	PIC,
	[Token(Token = "0x40006BC")]
	NUM
}
[Serializable]
[Token(Token = "0x200010B")]
public class CycleObject
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int index;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color color;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture texture;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int number;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool visible;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x87ACF4", Offset = "0x87ACF4", VA = "0x87ACF4")]
	public CycleObject()
	{
	}
}
[Token(Token = "0x200010C")]
public class CycleItem : MonoBehaviour
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int> onItemAdded;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer[] renderers;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CycleObject cycleObject;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CycleType type;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TMP_Text text;

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x879578", Offset = "0x879578", VA = "0x879578")]
	private void Awake()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x879618", Offset = "0x879618", VA = "0x879618")]
	private void Update()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x87961C", Offset = "0x87961C", VA = "0x87961C")]
	internal void SetInfo(CycleObject cycleObject, CycleType type)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x879AF0", Offset = "0x879AF0", VA = "0x879AF0")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x879B9C", Offset = "0x879B9C", VA = "0x879B9C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x879D8C", Offset = "0x879D8C", VA = "0x879D8C")]
	private bool CheckAnswer(Collision collision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x87A0E0", Offset = "0x87A0E0", VA = "0x87A0E0")]
	public CycleItem()
	{
	}
}
[Token(Token = "0x200010D")]
public class CycleMgr : MonoSingleton<CycleMgr>
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, int> onUpgrade;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip trainStartSound;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform train;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<CycleInfo> levels;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<int> missedItems;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected CycleInfo currentInfo;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Dictionary<int, int> levelConfigs;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentGrade;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentLevelOfGrade;

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x87A0E8", Offset = "0x87A0E8", VA = "0x87A0E8", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x87A27C", Offset = "0x87A27C", VA = "0x87A27C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x87A38C", Offset = "0x87A38C", VA = "0x87A38C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x87A49C", Offset = "0x87A49C", VA = "0x87A49C", Slot = "6")]
	protected virtual void InitLevelConfigs()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x87A504", Offset = "0x87A504", VA = "0x87A504", Slot = "7")]
	protected virtual void NextLevel()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x87A814", Offset = "0x87A814", VA = "0x87A814")]
	private void SetTrainItems(CycleInfo info)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x87ABB0", Offset = "0x87ABB0", VA = "0x87ABB0")]
	public void ItemAdded(int index)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x87A764", Offset = "0x87A764", VA = "0x87A764")]
	private int CaculateIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x87ACA4", Offset = "0x87ACA4", VA = "0x87ACA4")]
	public CycleMgr()
	{
	}
}
[Token(Token = "0x200010E")]
public class NumCycleMgr : CycleMgr
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> numbers;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> missedNumbers;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x92AC20", Offset = "0x92AC20", VA = "0x92AC20", Slot = "7")]
	protected override void NextLevel()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x92B1DC", Offset = "0x92B1DC", VA = "0x92B1DC", Slot = "6")]
	protected override void InitLevelConfigs()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x92B110", Offset = "0x92B110", VA = "0x92B110")]
	private void SetAnswerItems()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x92AC50", Offset = "0x92AC50", VA = "0x92AC50")]
	private void GenerateNumber()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x92B2A0", Offset = "0x92B2A0", VA = "0x92B2A0")]
	public void SetAnswerItem(Transform item)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x92B39C", Offset = "0x92B39C", VA = "0x92B39C")]
	public NumCycleMgr()
	{
	}
}
[Token(Token = "0x200010F")]
public class PicCycleMgr : CycleMgr
{
	[Token(Token = "0x6000684")]
	[Address(RVA = "0x86F868", Offset = "0x86F868", VA = "0x86F868", Slot = "6")]
	protected override void InitLevelConfigs()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x86F92C", Offset = "0x86F92C", VA = "0x86F92C")]
	public PicCycleMgr()
	{
	}
}
[Token(Token = "0x2000110")]
public class EditorSimulator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A1")]
	public class MouseEvent : UnityEvent
	{
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x885F30", Offset = "0x885F30", VA = "0x885F30")]
		public MouseEvent()
		{
		}
	}

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MouseEvent leftMouseDown;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MouseEvent rightMouseDown;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastHit hit;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform spawnPoint;

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x8858E4", Offset = "0x8858E4", VA = "0x8858E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x8858E8", Offset = "0x8858E8", VA = "0x8858E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x885F28", Offset = "0x885F28", VA = "0x885F28")]
	public EditorSimulator()
	{
	}
}
[Token(Token = "0x2000111")]
public class Fruit : MonoBehaviour
{
	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform top;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bottom;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip hitSound;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action triggerEnter;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform firstFruit;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform secondFruit;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string COLLIDER_NAME;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string OBJECT_TAG;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float DISAPEAR_TIME;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x887BB4", Offset = "0x887BB4", VA = "0x887BB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x887C90", Offset = "0x887C90", VA = "0x887C90")]
	private Transform Initialize(Transform part)
	{
		return null;
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x887FBC", Offset = "0x887FBC", VA = "0x887FBC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x888164", Offset = "0x888164", VA = "0x888164")]
	public void PlayCutAnimation()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x8886D8", Offset = "0x8886D8", VA = "0x8886D8")]
	private void SetInvisible()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x8885EC", Offset = "0x8885EC", VA = "0x8885EC")]
	private void SetVisible(bool isVisible)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x8886E0", Offset = "0x8886E0", VA = "0x8886E0")]
	public Fruit()
	{
	}
}
[Token(Token = "0x2000112")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B528", Offset = "0x68B528")]
public class FruitAnswerChecker : AnswerChecker
{
	[Token(Token = "0x6000690")]
	[Address(RVA = "0x888750", Offset = "0x888750", VA = "0x888750")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x888878", Offset = "0x888878", VA = "0x888878")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x888988", Offset = "0x888988", VA = "0x888988", Slot = "4")]
	protected override void AnswerRight()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x888DE0", Offset = "0x888DE0", VA = "0x888DE0", Slot = "5")]
	protected override void AnswerWrong()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x888E9C", Offset = "0x888E9C", VA = "0x888E9C")]
	public FruitAnswerChecker()
	{
	}
}
[Token(Token = "0x2000113")]
public class FruitButton : MonoBehaviour
{
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool rot;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 randomRot;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody mRigidbody;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int> onButtonDown;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x888EA4", Offset = "0x888EA4", VA = "0x888EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x889008", Offset = "0x889008", VA = "0x889008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x8890C0", Offset = "0x8890C0", VA = "0x8890C0")]
	private void Selected()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x889134", Offset = "0x889134", VA = "0x889134")]
	private void Update()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x8891B4", Offset = "0x8891B4", VA = "0x8891B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x8892DC", Offset = "0x8892DC", VA = "0x8892DC")]
	public FruitButton()
	{
	}
}
[Token(Token = "0x2000114")]
public class FruitChoice : Choice
{
	[Token(Token = "0x600069B")]
	[Address(RVA = "0x8892EC", Offset = "0x8892EC", VA = "0x8892EC", Slot = "6")]
	internal override int[] GenerateNumbers()
	{
		return null;
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x8894DC", Offset = "0x8894DC", VA = "0x8894DC", Slot = "5")]
	internal override int GetLevel()
	{
		return default(int);
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x889540", Offset = "0x889540", VA = "0x889540")]
	private void Update()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x889548", Offset = "0x889548", VA = "0x889548")]
	public FruitChoice()
	{
	}
}
[Token(Token = "0x2000115")]
public class FruitGameMgr : MonoSingleton<FruitGameMgr>
{
	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] disabledObjectsWhenTimesup;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text question;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int level;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int grade;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x88A958", Offset = "0x88A958", VA = "0x88A958")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x88AA98", Offset = "0x88AA98", VA = "0x88AA98")]
	private void StartGame()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x88AB28", Offset = "0x88AB28", VA = "0x88AB28")]
	private void EndGame()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x888A84", Offset = "0x888A84", VA = "0x888A84")]
	public void NextChallenge()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x88ABD0", Offset = "0x88ABD0", VA = "0x88ABD0")]
	private EquationGenerator.EquationMode GetModeByGrade()
	{
		return default(EquationGenerator.EquationMode);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x88ABF0", Offset = "0x88ABF0", VA = "0x88ABF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x889538", Offset = "0x889538", VA = "0x889538")]
	public int GetLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x88ACF8", Offset = "0x88ACF8", VA = "0x88ACF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x88AD90", Offset = "0x88AD90", VA = "0x88AD90")]
	public FruitGameMgr()
	{
	}
}
[Token(Token = "0x2000116")]
public class FruitPool : MonoSingleton<FruitPool>
{
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE28", Offset = "0x68BE28")]
	private sealed class <SpawnFruits>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FruitPool <>4__this;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x88B778", Offset = "0x88B778", VA = "0x88B778", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x88B7E8", Offset = "0x88B7E8", VA = "0x88B7E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x88B078", Offset = "0x88B078", VA = "0x88B078")]
		[DebuggerHidden]
		public <SpawnFruits>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x88B298", Offset = "0x88B298", VA = "0x88B298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x88B29C", Offset = "0x88B29C", VA = "0x88B29C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x88B780", Offset = "0x88B780", VA = "0x88B780", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnPoint;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject answerGroup;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int spawnCount;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> fruits;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> pool;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 throwForce;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 randomPos;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Transform> answerChildrens;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer[] renders;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider[] colliders;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float speed;

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x88ADE0", Offset = "0x88ADE0", VA = "0x88ADE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x888D6C", Offset = "0x888D6C", VA = "0x888D6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691400", Offset = "0x691400")]
	public IEnumerator SpawnFruits()
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x88B0A4", Offset = "0x88B0A4", VA = "0x88B0A4")]
	private void SetEffective(bool v)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x88B1CC", Offset = "0x88B1CC", VA = "0x88B1CC")]
	public FruitPool()
	{
	}
}
[Token(Token = "0x2000117")]
public class FruitSimulator : MonoBehaviour
{
	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x88B7F0", Offset = "0x88B7F0", VA = "0x88B7F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x88B7F4", Offset = "0x88B7F4", VA = "0x88B7F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x88B958", Offset = "0x88B958", VA = "0x88B958")]
	public FruitSimulator()
	{
	}
}
[Token(Token = "0x2000118")]
public class RankUI : MonoBehaviour
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int bestScore;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EndGameGO;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text EndScore;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text EndBestScore;

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x7FD910", Offset = "0x7FD910", VA = "0x7FD910")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x7FDA9C", Offset = "0x7FDA9C", VA = "0x7FDA9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x7FDAD4", Offset = "0x7FDAD4", VA = "0x7FDAD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x7FDAD8", Offset = "0x7FDAD8", VA = "0x7FDAD8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x7FDAA0", Offset = "0x7FDAA0", VA = "0x7FDAA0")]
	private void BeginGame()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x7FDBF8", Offset = "0x7FDBF8", VA = "0x7FDBF8")]
	private void EndGame()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x7FDD2C", Offset = "0x7FDD2C", VA = "0x7FDD2C")]
	public void OnPlayClick()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x7FDD60", Offset = "0x7FDD60", VA = "0x7FDD60")]
	public RankUI()
	{
	}
}
[Token(Token = "0x2000119")]
public class ScoreMgr : MonoSingleton<ScoreMgr>
{
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE38", Offset = "0x68BE38")]
	private sealed class <FireScoreEffect>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScoreMgr <>4__this;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <pos>5__3;

		[Token(Token = "0x1700017D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x804908", Offset = "0x804908", VA = "0x804908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x804978", Offset = "0x804978", VA = "0x804978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x804628", Offset = "0x804628", VA = "0x804628")]
		[DebuggerHidden]
		public <FireScoreEffect>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x8046A4", Offset = "0x8046A4", VA = "0x8046A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x8046A8", Offset = "0x8046A8", VA = "0x8046A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x804910", Offset = "0x804910", VA = "0x804910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text score;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform scoreEffect;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int scoreNum;

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x80449C", Offset = "0x80449C", VA = "0x80449C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x8044A4", Offset = "0x8044A4", VA = "0x8044A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x8044F0", Offset = "0x8044F0", VA = "0x8044F0")]
	public void IncreaseScore(int num, Vector3 position)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x8045B4", Offset = "0x8045B4", VA = "0x8045B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691464", Offset = "0x691464")]
	private IEnumerator FireScoreEffect()
	{
		return null;
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x7FDD24", Offset = "0x7FDD24", VA = "0x7FDD24")]
	public int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x804654", Offset = "0x804654", VA = "0x804654")]
	public ScoreMgr()
	{
	}
}
[Token(Token = "0x200011A")]
public class GameMgr : MonoBehaviour
{
	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ContentLoader loader;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x88BDC0", Offset = "0x88BDC0", VA = "0x88BDC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x88BDCC", Offset = "0x88BDCC", VA = "0x88BDCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x88BE64", Offset = "0x88BE64", VA = "0x88BE64")]
	public GameMgr()
	{
	}
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x68B58C", Offset = "0x68B58C")]
public class GuideInfo : ScriptableObject
{
	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string hintText;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite hintImage;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string guideType;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string guideName;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int number;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string targetName;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string introAudio;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string completeText;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string completeAudio;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x894264", Offset = "0x894264", VA = "0x894264")]
	public GuideInfo()
	{
	}
}
[Token(Token = "0x200011C")]
public class GuideMgr : MonoBehaviour
{
	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE48", Offset = "0x68BE48")]
	private sealed class <GuideIntro>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GuideMgr <>4__this;

		[Token(Token = "0x1700017F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x8959D0", Offset = "0x8959D0", VA = "0x8959D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x895A40", Offset = "0x895A40", VA = "0x895A40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x894388", Offset = "0x894388", VA = "0x894388")]
		[DebuggerHidden]
		public <GuideIntro>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x895758", Offset = "0x895758", VA = "0x895758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x89575C", Offset = "0x89575C", VA = "0x89575C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x8959D8", Offset = "0x8959D8", VA = "0x8959D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuideInfo[] guideInfos;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text hint;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip introVoice;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int index;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool nextStep;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool ignoreGuide;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject currentTarget;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool triggered;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x89426C", Offset = "0x89426C", VA = "0x89426C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x894314", Offset = "0x894314", VA = "0x894314")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6914C8", Offset = "0x6914C8")]
	private IEnumerator GuideIntro()
	{
		return null;
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x8943B4", Offset = "0x8943B4", VA = "0x8943B4")]
	private void SetNextStep()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x89445C", Offset = "0x89445C", VA = "0x89445C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x8944C4", Offset = "0x8944C4", VA = "0x8944C4")]
	private void StartGuide()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x894AC0", Offset = "0x894AC0", VA = "0x894AC0")]
	private void EndMedalGuide(Transform view)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x894DC0", Offset = "0x894DC0", VA = "0x894DC0")]
	private void EndVendingGuide()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x894FE4", Offset = "0x894FE4", VA = "0x894FE4")]
	private void EndPadGuide()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x895224", Offset = "0x895224", VA = "0x895224")]
	private void EndDragGuide(float distance)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x8953C0", Offset = "0x8953C0", VA = "0x8953C0")]
	private void EndGrabGuide(int count)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x895750", Offset = "0x895750", VA = "0x895750")]
	public GuideMgr()
	{
	}
}
[Token(Token = "0x200011D")]
public class Recycle : MonoBehaviour
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text countText;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem disappear;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip sound;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int count;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<int> onDisappear;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x7FE3DC", Offset = "0x7FE3DC", VA = "0x7FE3DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x7FE4C8", Offset = "0x7FE4C8", VA = "0x7FE4C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x7FE4CC", Offset = "0x7FE4CC", VA = "0x7FE4CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x7FE8A8", Offset = "0x7FE8A8", VA = "0x7FE8A8")]
	private void PlayNumberSound(int count)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x7FE958", Offset = "0x7FE958", VA = "0x7FE958")]
	private string GetKeyCode(int count)
	{
		return null;
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x7FEB54", Offset = "0x7FEB54", VA = "0x7FEB54")]
	public Recycle()
	{
	}
}
[Token(Token = "0x200011E")]
public class ContentLoader : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE58", Offset = "0x68BE58")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TweenCallback <>9__18_0;

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x995D0C", Offset = "0x995D0C", VA = "0x995D0C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x995D14", Offset = "0x995D14", VA = "0x995D14")]
		internal void <DisplayContent>b__18_0()
		{
		}
	}

	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE68", Offset = "0x68BE68")]
	private sealed class <LoadContent>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ContentLoader <>4__this;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x17000181")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x99602C", Offset = "0x99602C", VA = "0x99602C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0x99609C", Offset = "0x99609C", VA = "0x99609C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x995C18", Offset = "0x995C18", VA = "0x995C18")]
		[DebuggerHidden]
		public <LoadContent>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x995D78", Offset = "0x995D78", VA = "0x995D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x995D7C", Offset = "0x995D7C", VA = "0x995D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x996034", Offset = "0x996034", VA = "0x996034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip liftSound;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DeskOperator deskOperator;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float confirmInterval;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] contentNames;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string currentContent;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastStep;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currentStep;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action onContentChanged;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnAnimationCompleted;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float speed;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float triggerTime;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isExecuted;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x995490", Offset = "0x995490", VA = "0x995490")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x99550C", Offset = "0x99550C", VA = "0x99550C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x995574", Offset = "0x995574", VA = "0x995574")]
	public void LoadGuide()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x9955D4", Offset = "0x9955D4", VA = "0x9955D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x995650", Offset = "0x995650", VA = "0x995650")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x9957D4", Offset = "0x9957D4", VA = "0x9957D4")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x99589C", Offset = "0x99589C", VA = "0x99589C")]
	private void DisplayContent()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x995540", Offset = "0x995540", VA = "0x995540")]
	public void Load(int step)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x9956A4", Offset = "0x9956A4", VA = "0x9956A4")]
	public void DoLoad(int step)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x995B80", Offset = "0x995B80", VA = "0x995B80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x69152C", Offset = "0x69152C")]
	private IEnumerator LoadContent(string name)
	{
		return null;
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x995C44", Offset = "0x995C44", VA = "0x995C44")]
	private void CloseDesk()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x995A68", Offset = "0x995A68", VA = "0x995A68")]
	private string GetContentName(int step)
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x995C90", Offset = "0x995C90", VA = "0x995C90")]
	public ContentLoader()
	{
	}
}
[Token(Token = "0x200011F")]
public class DeskOperator : MonoBehaviour
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform left;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform right;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x882594", Offset = "0x882594", VA = "0x882594")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x88263C", Offset = "0x88263C", VA = "0x88263C")]
	public void CloseDesk(float time)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x88268C", Offset = "0x88268C", VA = "0x88268C")]
	public void OpenDesk(float time)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x8826E0", Offset = "0x8826E0", VA = "0x8826E0")]
	public DeskOperator()
	{
	}
}
[Token(Token = "0x2000120")]
public class DialIndicator : MonoBehaviour
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] indicators;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material on;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material off;

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x882760", Offset = "0x882760", VA = "0x882760")]
	public void ChangeIndicator(int step)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x8828B4", Offset = "0x8828B4", VA = "0x8828B4")]
	private int GetIndicatorIndex(int step)
	{
		return default(int);
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x882900", Offset = "0x882900", VA = "0x882900")]
	public DialIndicator()
	{
	}
}
[Token(Token = "0x2000121")]
public class Drawer : MonoBehaviour
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip drawerSound;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool foward;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastDistance;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool played;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x884060", Offset = "0x884060", VA = "0x884060")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x884064", Offset = "0x884064", VA = "0x884064")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x884068", Offset = "0x884068", VA = "0x884068")]
	public void OnDragBegin()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x884134", Offset = "0x884134", VA = "0x884134")]
	public void OnDragEnd()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x8841A0", Offset = "0x8841A0", VA = "0x8841A0")]
	public Drawer()
	{
	}
}
[Token(Token = "0x2000122")]
public class GradeMgr : MonoSingleton<GradeMgr>
{
	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] gradeMenus;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite backgroundImage;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite selectionImage;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject classification;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] gradeContents;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int grade;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int classCode;

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x8914C0", Offset = "0x8914C0", VA = "0x8914C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x88AA90", Offset = "0x88AA90", VA = "0x88AA90")]
	public int GetGrade()
	{
		return default(int);
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x891558", Offset = "0x891558", VA = "0x891558")]
	public void SetGrade(int grade)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x8916BC", Offset = "0x8916BC", VA = "0x8916BC")]
	public void SetClassification(int classCode)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x89184C", Offset = "0x89184C", VA = "0x89184C")]
	public GradeMgr()
	{
	}
}
[Token(Token = "0x2000123")]
public class HouseMgr : MonoBehaviour
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ContentLoader m_Loader;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int m_GuideIndex;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioClip m_OpenningAudio;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool m_IsCourseChoosed;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x8403EC", Offset = "0x8403EC", VA = "0x8403EC")]
	public static void SetContentLoader(ContentLoader contentLoader)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x840528", Offset = "0x840528", VA = "0x840528")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x8406F0", Offset = "0x8406F0", VA = "0x8406F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x840790", Offset = "0x840790", VA = "0x840790")]
	private void SetGuide()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x840868", Offset = "0x840868", VA = "0x840868")]
	private void LoadGuide()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x8408CC", Offset = "0x8408CC", VA = "0x8408CC")]
	public HouseMgr()
	{
	}
}
[Token(Token = "0x2000124")]
public class LobbyMgr : MonoBehaviour
{
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE78", Offset = "0x68BE78")]
	private sealed class <LoadScene>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000183")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x84B9E0", Offset = "0x84B9E0", VA = "0x84B9E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x84BA50", Offset = "0x84BA50", VA = "0x84BA50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x84B8D0", Offset = "0x84B8D0", VA = "0x84B8D0")]
		[DebuggerHidden]
		public <LoadScene>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x84B904", Offset = "0x84B904", VA = "0x84B904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x84B908", Offset = "0x84B908", VA = "0x84B908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x84B9E8", Offset = "0x84B9E8", VA = "0x84B9E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool releaseVersion;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite HintSprite;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_IsChosed;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string m_Serial;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string m_Model;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_SystemLanguage;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Device m_Device;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x84AB98", Offset = "0x84AB98", VA = "0x84AB98")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x84AF6C", Offset = "0x84AF6C", VA = "0x84AF6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x84B29C", Offset = "0x84B29C", VA = "0x84B29C")]
	private void Welcome()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x84B400", Offset = "0x84B400", VA = "0x84B400")]
	private void Guide()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x84B5A4", Offset = "0x84B5A4", VA = "0x84B5A4")]
	private void onGetDevice(Device[] obj)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x84B780", Offset = "0x84B780", VA = "0x84B780")]
	private void onCreateDevice(Device obj)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x84B794", Offset = "0x84B794", VA = "0x84B794")]
	public void Choose(UserProfile profile)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x84B870", Offset = "0x84B870", VA = "0x84B870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691590", Offset = "0x691590")]
	private IEnumerator LoadScene()
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x84B8FC", Offset = "0x84B8FC", VA = "0x84B8FC")]
	public LobbyMgr()
	{
	}
}
[Token(Token = "0x2000125")]
public class UserProfile : MonoBehaviour
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Device device;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public ProfileData data;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string key;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xEEB378", Offset = "0xEEB378", VA = "0xEEB378")]
	private void Start()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xEEB4BC", Offset = "0xEEB4BC", VA = "0xEEB4BC")]
	internal void Store()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xEEB51C", Offset = "0xEEB51C", VA = "0xEEB51C")]
	public UserProfile()
	{
	}
}
[Serializable]
[Token(Token = "0x2000126")]
public class ProfileData
{
	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int userID;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int tangramGrade;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int tangramLevel;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool tangramCompleted;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int threeviewGrade;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int threeviewLevel;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool threeviewCompleted;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int creatorGrade;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int creatorLevel;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool creatorCompleted;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int sudokuGrade;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int sudokuLevel;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool sudokuCompleted;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int substitutionGrade;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int substitutionLevel;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool substitutionCompleted;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int cycleGrade;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int cycleLevel;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool cycleCompleted;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int guided;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Toy> toys;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Medal> medals;

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x87007C", Offset = "0x87007C", VA = "0x87007C")]
	public ProfileData()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x870118", Offset = "0x870118", VA = "0x870118")]
	public bool Contains(string toyType)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000127")]
public class AllumetteMgr : MonoBehaviour
{
	[Token(Token = "0x6000704")]
	[Address(RVA = "0x985F04", Offset = "0x985F04", VA = "0x985F04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x985F9C", Offset = "0x985F9C", VA = "0x985F9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x985FA0", Offset = "0x985FA0", VA = "0x985FA0")]
	public AllumetteMgr()
	{
	}
}
[Token(Token = "0x2000128")]
public class MatchComposite : MonoBehaviour
{
	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip magicSound;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform parentGO;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform matchGroupPrefab;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool compositing;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem[] ps;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> parts;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Interactable interactable;

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x8542F0", Offset = "0x8542F0", VA = "0x8542F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x854388", Offset = "0x854388", VA = "0x854388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x85467C", Offset = "0x85467C", VA = "0x85467C")]
	private void Composite()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x854A90", Offset = "0x854A90", VA = "0x854A90")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x854BD4", Offset = "0x854BD4", VA = "0x854BD4")]
	public MatchComposite()
	{
	}
}
[Token(Token = "0x2000129")]
public class StickEnd : MonoBehaviour
{
	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x80B6C8", Offset = "0x80B6C8", VA = "0x80B6C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x80B720", Offset = "0x80B720", VA = "0x80B720")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x80BA84", Offset = "0x80BA84", VA = "0x80BA84")]
	public void SetStick(bool isStick, Vector3 position)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x80BC08", Offset = "0x80BC08", VA = "0x80BC08")]
	public StickEnd()
	{
	}
}
[Token(Token = "0x200012A")]
public class StickPoint : MonoBehaviour
{
	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isStick;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 stickPosition;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OffsetGrabbable grabbable;

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x80BC10", Offset = "0x80BC10", VA = "0x80BC10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x80BC80", Offset = "0x80BC80", VA = "0x80BC80")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x80B94C", Offset = "0x80B94C", VA = "0x80B94C")]
	public void SetStick(bool isStick, Vector3 position)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x80BEDC", Offset = "0x80BEDC", VA = "0x80BEDC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x80C0D4", Offset = "0x80C0D4", VA = "0x80C0D4")]
	public StickPoint()
	{
	}
}
[Token(Token = "0x200012B")]
public class Menu_Button : Button
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float highlightZOffset;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 orgPostion;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 highlightPostion;

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x91C9BC", Offset = "0x91C9BC", VA = "0x91C9BC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x91CABC", Offset = "0x91CABC", VA = "0x91CABC", Slot = "34")]
	public override void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x91CB50", Offset = "0x91CB50", VA = "0x91CB50", Slot = "35")]
	public override void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x91CBE4", Offset = "0x91CBE4", VA = "0x91CBE4", Slot = "41")]
	public override void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x91CC4C", Offset = "0x91CC4C", VA = "0x91CC4C")]
	public Menu_Button()
	{
	}
}
[Token(Token = "0x200012C")]
public class MenuUI : MonoBehaviour
{
	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LaserPointer lp;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x91C8B8", Offset = "0x91C8B8", VA = "0x91C8B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x91C9AC", Offset = "0x91C9AC", VA = "0x91C9AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x91C9B0", Offset = "0x91C9B0", VA = "0x91C9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x91C9B4", Offset = "0x91C9B4", VA = "0x91C9B4")]
	public MenuUI()
	{
	}
}
[Token(Token = "0x200012D")]
public class MySRP : MonoBehaviour
{
	[Token(Token = "0x600071E")]
	[Address(RVA = "0x9219F4", Offset = "0x9219F4", VA = "0x9219F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x9219F8", Offset = "0x9219F8", VA = "0x9219F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x9219FC", Offset = "0x9219FC", VA = "0x9219FC")]
	public MySRP()
	{
	}
}
[Token(Token = "0x200012E")]
public class CaculateMgr : MonoBehaviour
{
	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquationGenerator.EquationMode mode;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform answer;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spawnPointL;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPointR;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Container[] containers;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int numL;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int numR;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int rightIndex;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int level;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Transform> LCubes;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Transform> RCubes;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Transform> objects;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action onLoadLevel;

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x98D2F0", Offset = "0x98D2F0", VA = "0x98D2F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x98D35C", Offset = "0x98D35C", VA = "0x98D35C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x98DB40", Offset = "0x98DB40", VA = "0x98DB40")]
	public void CompleteTask()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x98E4E0", Offset = "0x98E4E0", VA = "0x98E4E0")]
	public int GetLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x98DCA8", Offset = "0x98DCA8", VA = "0x98DCA8")]
	private void DisplayHint()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x98E4E8", Offset = "0x98E4E8", VA = "0x98E4E8")]
	public int GetLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x98E4F0", Offset = "0x98E4F0", VA = "0x98E4F0")]
	private void GenerateCubes()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x98E7D0", Offset = "0x98E7D0", VA = "0x98E7D0")]
	private void DestoryObjects()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x98D618", Offset = "0x98D618", VA = "0x98D618")]
	public void NextChallenge()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x98EF58", Offset = "0x98EF58", VA = "0x98EF58")]
	public CaculateMgr()
	{
	}
}
[Token(Token = "0x200012F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B5D0", Offset = "0x68B5D0")]
public class ContainerCheck : MonoBehaviour
{
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CaculateMgr mgr;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text countText;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text hint;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isCompleted;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> objects;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int count;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Container container;

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x9949F4", Offset = "0x9949F4", VA = "0x9949F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x994BF8", Offset = "0x994BF8", VA = "0x994BF8")]
	private void Check(Collider other)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x994BF0", Offset = "0x994BF0", VA = "0x994BF0")]
	private void LoadLevel()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x99500C", Offset = "0x99500C", VA = "0x99500C")]
	private void Update()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x9952A4", Offset = "0x9952A4", VA = "0x9952A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x995488", Offset = "0x995488", VA = "0x995488")]
	public ContainerCheck()
	{
	}
}
[Token(Token = "0x2000130")]
public class CubeContainer : Container
{
	[Token(Token = "0x6000731")]
	[Address(RVA = "0x99A458", Offset = "0x99A458", VA = "0x99A458", Slot = "4")]
	protected override bool IsTriggered(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x99A4E8", Offset = "0x99A4E8", VA = "0x99A4E8")]
	public CubeContainer()
	{
	}
}
[Token(Token = "0x2000131")]
public class CubeGenerator : MonoSingleton<CubeGenerator>
{
	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cubePrefab;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform tenModel;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int numberInLine;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float scale;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x99A4F8", Offset = "0x99A4F8", VA = "0x99A4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x99A4FC", Offset = "0x99A4FC", VA = "0x99A4FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x98E970", Offset = "0x98E970", VA = "0x98E970")]
	public void GenerateTenModel(Transform parent)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x98EB98", Offset = "0x98EB98", VA = "0x98EB98")]
	public List<Transform> GenerateCubes(int number, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x99A500", Offset = "0x99A500", VA = "0x99A500")]
	public CubeGenerator()
	{
	}
}
[Token(Token = "0x2000132")]
public class CubeRecycle : MonoBehaviour
{
	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CaculateMgr mgr;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text countText;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip sound;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem disappear;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int count;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isCompleted;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x99BD1C", Offset = "0x99BD1C", VA = "0x99BD1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x99BED8", Offset = "0x99BED8", VA = "0x99BED8")]
	private void LoadLevel()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x99BEE4", Offset = "0x99BEE4", VA = "0x99BEE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x99C0A0", Offset = "0x99C0A0", VA = "0x99C0A0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x99C390", Offset = "0x99C390", VA = "0x99C390")]
	private void DestoryObjects(List<Transform> objects)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x99C4A4", Offset = "0x99C4A4", VA = "0x99C4A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x99C5BC", Offset = "0x99C5BC", VA = "0x99C5BC")]
	public CubeRecycle()
	{
	}
}
[Token(Token = "0x2000133")]
public class EquationGenerator : Framework.Singleton<EquationGenerator>
{
	[Token(Token = "0x20002A8")]
	public enum EquationMode
	{
		[Token(Token = "0x4000E65")]
		Addition,
		[Token(Token = "0x4000E66")]
		Subtraction,
		[Token(Token = "0x4000E67")]
		Multiplication,
		[Token(Token = "0x4000E68")]
		Division
	}

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int grade;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EAF0", Offset = "0x68EAF0")]
	private EquationMode <Mode>k__BackingField;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int numL;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int numR;

	[Token(Token = "0x17000067")]
	public EquationMode Mode
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x885F40", Offset = "0x885F40", VA = "0x885F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6915F4", Offset = "0x6915F4")]
		get
		{
			return default(EquationMode);
		}
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x885F48", Offset = "0x885F48", VA = "0x885F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691604", Offset = "0x691604")]
		set
		{
		}
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x885F50", Offset = "0x885F50", VA = "0x885F50")]
	public void GenerateNumbers()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x8863AC", Offset = "0x8863AC", VA = "0x8863AC")]
	private void GenerateDivisionNumbers(int grade, out int numL, out int numR)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x886364", Offset = "0x886364", VA = "0x886364")]
	private void GenerateMultiplicationNumbers(int grade, out int numL, out int numR)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x8862C4", Offset = "0x8862C4", VA = "0x8862C4")]
	private void GenerateSubtractionNumbers(int grade, out int numL, out int numR)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x8861E8", Offset = "0x8861E8", VA = "0x8861E8")]
	private void GenerateAdditionNumbers(int grade, out int numL, out int numR)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x8863FC", Offset = "0x8863FC", VA = "0x8863FC")]
	public int GetRightAnswer()
	{
		return default(int);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x886644", Offset = "0x886644", VA = "0x886644")]
	public int GetNumL()
	{
		return default(int);
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x88664C", Offset = "0x88664C", VA = "0x88664C")]
	public int GetNumR()
	{
		return default(int);
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x886654", Offset = "0x886654", VA = "0x886654")]
	public string GetSymbol()
	{
		return null;
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x886898", Offset = "0x886898", VA = "0x886898")]
	public int GetSmallerOne()
	{
		return default(int);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x8868A8", Offset = "0x8868A8", VA = "0x8868A8")]
	public EquationGenerator()
	{
	}
}
[Token(Token = "0x2000134")]
public class MagicBall : MonoBehaviour
{
	[Token(Token = "0x600074C")]
	[Address(RVA = "0x850CFC", Offset = "0x850CFC", VA = "0x850CFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x850D00", Offset = "0x850D00", VA = "0x850D00")]
	private void Update()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x850D04", Offset = "0x850D04", VA = "0x850D04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x850E64", Offset = "0x850E64", VA = "0x850E64")]
	public MagicBall()
	{
	}
}
[Token(Token = "0x2000135")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B634", Offset = "0x68B634")]
public class NumAnswerCheck : AnswerChecker
{
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE88", Offset = "0x68BE88")]
	private sealed class <TriggerSuccessEffect>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NumAnswerCheck <>4__this;

		[Token(Token = "0x17000185")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x92ABA8", Offset = "0x92ABA8", VA = "0x92ABA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x92AC18", Offset = "0x92AC18", VA = "0x92AC18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x92AA88", Offset = "0x92AA88", VA = "0x92AA88")]
		[DebuggerHidden]
		public <TriggerSuccessEffect>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x92AABC", Offset = "0x92AABC", VA = "0x92AABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x92AAC0", Offset = "0x92AAC0", VA = "0x92AAC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x92ABB0", Offset = "0x92ABB0", VA = "0x92ABB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text hint;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text grade;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text score;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem successEffect;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int wrongCount;

	[Token(Token = "0x400078D")]
	private const int scoreValue = 100;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CaculateMgr mgr;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x92A120", Offset = "0x92A120", VA = "0x92A120")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x92A260", Offset = "0x92A260", VA = "0x92A260")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x92A370", Offset = "0x92A370", VA = "0x92A370", Slot = "5")]
	protected override void AnswerWrong()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x92A6E0", Offset = "0x92A6E0", VA = "0x92A6E0", Slot = "4")]
	protected override void AnswerRight()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x92A5C4", Offset = "0x92A5C4", VA = "0x92A5C4")]
	private void ChallengeNewLevel(bool isCorrect)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x92AA14", Offset = "0x92AA14", VA = "0x92AA14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691614", Offset = "0x691614")]
	private IEnumerator TriggerSuccessEffect()
	{
		return null;
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x92A97C", Offset = "0x92A97C", VA = "0x92A97C")]
	private int GetLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x92A9DC", Offset = "0x92A9DC", VA = "0x92A9DC")]
	private void Challenge(bool isCorrect)
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x92A9AC", Offset = "0x92A9AC", VA = "0x92A9AC")]
	private int GetLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x92AAB4", Offset = "0x92AAB4", VA = "0x92AAB4")]
	public NumAnswerCheck()
	{
	}
}
[Token(Token = "0x2000136")]
public class NumberChoice : Choice
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CaculateMgr mgr;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x92B42C", Offset = "0x92B42C", VA = "0x92B42C", Slot = "6")]
	internal override int[] GenerateNumbers()
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x92B620", Offset = "0x92B620", VA = "0x92B620", Slot = "5")]
	internal override int GetLevel()
	{
		return default(int);
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x92B650", Offset = "0x92B650", VA = "0x92B650")]
	private void Start()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x92B6A8", Offset = "0x92B6A8", VA = "0x92B6A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x92B6B0", Offset = "0x92B6B0", VA = "0x92B6B0")]
	public NumberChoice()
	{
	}
}
[Token(Token = "0x2000137")]
public class HandCamera : MonoBehaviour
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera handCamera;

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x8969D0", Offset = "0x8969D0", VA = "0x8969D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x896A28", Offset = "0x896A28", VA = "0x896A28")]
	public void TakeAPhoto()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x896BD0", Offset = "0x896BD0", VA = "0x896BD0")]
	public HandCamera()
	{
	}
}
[Token(Token = "0x2000138")]
internal class MediaMgr : Framework.Singleton<MediaMgr>
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<byte[]> onMediaLoaded;

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x855AFC", Offset = "0x855AFC", VA = "0x855AFC")]
	public void LoadMediaFiles(string local_path, string remote_path, bool force_sync, Action<List<Texture>> callback)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x855BB0", Offset = "0x855BB0", VA = "0x855BB0")]
	private void DownloadMediaFiles(string local_path, string remote_path)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x855BC4", Offset = "0x855BC4", VA = "0x855BC4")]
	public void UploadMediaFile(string file_name, string remote_path, byte[] data, Action<Media> callback)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x855DA4", Offset = "0x855DA4", VA = "0x855DA4")]
	public void DownloadMediaFile(int media_id, string path)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x855F58", Offset = "0x855F58", VA = "0x855F58")]
	private void OnDownloadMedia(object obj, string path)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x8560E0", Offset = "0x8560E0", VA = "0x8560E0")]
	public MediaMgr()
	{
	}
}
[Token(Token = "0x2000139")]
internal class MemoryLoader : Framework.Singleton<MemoryLoader>
{
	[Token(Token = "0x6000768")]
	[Address(RVA = "0x857B20", Offset = "0x857B20", VA = "0x857B20")]
	internal void LoadMemoryInfo(Memory memory)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x857DD8", Offset = "0x857DD8", VA = "0x857DD8")]
	internal string GetMemoryInfo(int typeID, Camera handCamera)
	{
		return null;
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x857F88", Offset = "0x857F88", VA = "0x857F88")]
	private bool IsInCamera(Vector3 position, Camera handCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x85807C", Offset = "0x85807C", VA = "0x85807C")]
	public MemoryLoader()
	{
	}
}
[Token(Token = "0x200013A")]
internal class MemoryMgr : Framework.Singleton<MemoryMgr>
{
	[Token(Token = "0x600076C")]
	[Address(RVA = "0x8580EC", Offset = "0x8580EC", VA = "0x8580EC")]
	internal void MakeMemory(Texture2D image, Camera handCamera)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x858464", Offset = "0x858464", VA = "0x858464")]
	private void HandleMedia(Texture2D image)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x8586EC", Offset = "0x8586EC", VA = "0x8586EC")]
	private void OnUploadMedia(Media obj)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x858700", Offset = "0x858700", VA = "0x858700")]
	public void CreateMemory(Media media)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x858A90", Offset = "0x858A90", VA = "0x858A90")]
	private void OnCreateMemory(Memory memory, string name)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x85835C", Offset = "0x85835C", VA = "0x85835C")]
	private void SaveMemoryToFile(Memory memory, string name)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x858AEC", Offset = "0x858AEC", VA = "0x858AEC")]
	internal void GetSharedMemories()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x858CD4", Offset = "0x858CD4", VA = "0x858CD4")]
	internal void LoadMemory(Texture texture, int type)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x858DA8", Offset = "0x858DA8", VA = "0x858DA8")]
	private void OnGetSharedMemories(Memory[] memories)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x858F88", Offset = "0x858F88", VA = "0x858F88")]
	private void SaveSharedMemoryToFile(Memory memory, string name)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x85900C", Offset = "0x85900C", VA = "0x85900C")]
	private string GetSharedMemoryFullName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x859064", Offset = "0x859064", VA = "0x859064")]
	private Memory GetMemory(string name, bool shared)
	{
		return null;
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x858A88", Offset = "0x858A88", VA = "0x858A88")]
	public Memory GetLocalMemory(string name)
	{
		return null;
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x858DA0", Offset = "0x858DA0", VA = "0x858DA0")]
	public Memory GetSharedMemory(string name)
	{
		return null;
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x858A94", Offset = "0x858A94", VA = "0x858A94")]
	private string GetMemoryFullName(string name)
	{
		return null;
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x859100", Offset = "0x859100", VA = "0x859100")]
	private static string GetLocalMemoryPath()
	{
		return null;
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x858F34", Offset = "0x858F34", VA = "0x858F34")]
	private string GetSharedMemoryPath()
	{
		return null;
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x859308", Offset = "0x859308", VA = "0x859308")]
	internal void DeleteMemory(Texture texture)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x8594F8", Offset = "0x8594F8", VA = "0x8594F8")]
	internal void ShareMemory(Texture texture)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x859AB8", Offset = "0x859AB8", VA = "0x859AB8")]
	public void SyncAllMemories()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x859630", Offset = "0x859630", VA = "0x859630")]
	private void SyncMemory(Memory memory, string name)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x8582C0", Offset = "0x8582C0", VA = "0x8582C0")]
	private int GetMemoryType()
	{
		return default(int);
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x859CE0", Offset = "0x859CE0", VA = "0x859CE0")]
	public MemoryMgr()
	{
	}
}
[Token(Token = "0x200013B")]
public class MenuButton : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002AA")]
	public class ButtonEvent : UnityEvent
	{
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x91C8B0", Offset = "0x91C8B0", VA = "0x91C8B0")]
		public ButtonEvent()
		{
		}
	}

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float confirmInterval;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ButtonEvent onButtonDown;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip buttonSound;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float triggerTime;

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x91C674", Offset = "0x91C674", VA = "0x91C674")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x91C89C", Offset = "0x91C89C", VA = "0x91C89C")]
	public MenuButton()
	{
	}
}
[Token(Token = "0x200013C")]
public class MyPhotoDisplay : PhotoDisplay
{
	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loadButton;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x920F90", Offset = "0x920F90", VA = "0x920F90", Slot = "4")]
	public override void Display()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x921544", Offset = "0x921544", VA = "0x921544")]
	public void Next()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x9215C0", Offset = "0x9215C0", VA = "0x9215C0")]
	public void Previous()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x9212C8", Offset = "0x9212C8", VA = "0x9212C8")]
	private void UpdateButtonStatus()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x92163C", Offset = "0x92163C", VA = "0x92163C")]
	public void Delete()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x9217B0", Offset = "0x9217B0", VA = "0x9217B0")]
	public void Share()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x9218B0", Offset = "0x9218B0", VA = "0x9218B0")]
	public void Load()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x92198C", Offset = "0x92198C", VA = "0x92198C", Slot = "5")]
	protected override List<Texture> LoadMorePhoto()
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x9219EC", Offset = "0x9219EC", VA = "0x9219EC")]
	public MyPhotoDisplay()
	{
	}
}
[Token(Token = "0x200013D")]
public class Pad : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] views;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool opened;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Transform> onViewOn;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x86E3F4", Offset = "0x86E3F4", VA = "0x86E3F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x86E518", Offset = "0x86E518", VA = "0x86E518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x86E5C8", Offset = "0x86E5C8", VA = "0x86E5C8")]
	public void Open()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x86E3F8", Offset = "0x86E3F8", VA = "0x86E3F8")]
	public void Close()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x86E734", Offset = "0x86E734", VA = "0x86E734")]
	public void TurnOn(Transform view)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x86E96C", Offset = "0x86E96C", VA = "0x86E96C")]
	public void TurnOff(Transform view)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x86E9B8", Offset = "0x86E9B8", VA = "0x86E9B8")]
	public Pad()
	{
	}
}
[Token(Token = "0x200013E")]
public abstract class PhotoDisplay : MonoBehaviour
{
	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture defaultPhoto;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Renderer render;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int index;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text hint;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x86F068", Offset = "0x86F068", VA = "0x86F068")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x86F0C0", Offset = "0x86F0C0", VA = "0x86F0C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000797")]
	public abstract void Display();

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x86F0C8", Offset = "0x86F0C8", VA = "0x86F0C8")]
	protected Texture GetCurrent(List<Texture> photos)
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x86F168", Offset = "0x86F168", VA = "0x86F168")]
	protected void NextPhoto(List<Texture> photos)
	{
	}

	[Token(Token = "0x600079A")]
	protected abstract List<Texture> LoadMorePhoto();

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x86F2A0", Offset = "0x86F2A0", VA = "0x86F2A0")]
	protected void PreviousPhoto(List<Texture> photos)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x86F350", Offset = "0x86F350", VA = "0x86F350")]
	protected void DeletePhoto(List<Texture> photos)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x86F400", Offset = "0x86F400", VA = "0x86F400")]
	protected PhotoDisplay()
	{
	}
}
[Token(Token = "0x200013F")]
public class PhotoMgr : MonoSingleton<PhotoMgr>
{
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextureLoader loader;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int totalNumOfTextures;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Texture> photos;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int page;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x86F408", Offset = "0x86F408", VA = "0x86F408")]
	private void Start()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x86F578", Offset = "0x86F578", VA = "0x86F578")]
	public void AddPhoto(Texture2D photo)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x86F4CC", Offset = "0x86F4CC", VA = "0x86F4CC")]
	public List<Texture> LoadNextPage()
	{
		return null;
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x86F6FC", Offset = "0x86F6FC", VA = "0x86F6FC")]
	public List<Texture> GetPhotos()
	{
		return null;
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x86F704", Offset = "0x86F704", VA = "0x86F704")]
	internal void Delete(Texture photo)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x86F7F0", Offset = "0x86F7F0", VA = "0x86F7F0")]
	public PhotoMgr()
	{
	}
}
[Token(Token = "0x2000140")]
public class PrizeDisplay : MonoBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text text;

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x86FFC8", Offset = "0x86FFC8", VA = "0x86FFC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x86FFCC", Offset = "0x86FFCC", VA = "0x86FFCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x870074", Offset = "0x870074", VA = "0x870074")]
	public PrizeDisplay()
	{
	}
}
[Token(Token = "0x2000141")]
public class SharedPhotoDisplay : PhotoDisplay
{
	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loadButton;

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x804980", Offset = "0x804980", VA = "0x804980")]
	public void Next()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x804C90", Offset = "0x804C90", VA = "0x804C90", Slot = "5")]
	protected override List<Texture> LoadMorePhoto()
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x804DB0", Offset = "0x804DB0", VA = "0x804DB0")]
	public void Previous()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x804E20", Offset = "0x804E20", VA = "0x804E20", Slot = "4")]
	public override void Display()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x804F84", Offset = "0x804F84", VA = "0x804F84")]
	public void Load()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x8049F8", Offset = "0x8049F8", VA = "0x8049F8")]
	private void UpdateButtonStatus()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x805050", Offset = "0x805050", VA = "0x805050")]
	public SharedPhotoDisplay()
	{
	}
}
[Token(Token = "0x2000142")]
public class SharedPhotoMgr : MonoSingleton<SharedPhotoMgr>
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int totalNumOfTextures;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Texture> sharedPhotos;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextureLoader loader;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int page;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool loadFromWeb;

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x805058", Offset = "0x805058", VA = "0x805058", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x8051B8", Offset = "0x8051B8", VA = "0x8051B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x804CEC", Offset = "0x804CEC", VA = "0x804CEC")]
	public List<Texture> LoadNextPage()
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x8052E8", Offset = "0x8052E8", VA = "0x8052E8")]
	private void onLoadCompleted()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x8052EC", Offset = "0x8052EC", VA = "0x8052EC")]
	private void OnMediaLoaded(byte[] data)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x8049F0", Offset = "0x8049F0", VA = "0x8049F0")]
	internal List<Texture> GetPhotos()
	{
		return null;
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x805268", Offset = "0x805268", VA = "0x805268")]
	public void LoadSharedPhotos()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x80538C", Offset = "0x80538C", VA = "0x80538C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x8054D8", Offset = "0x8054D8", VA = "0x8054D8")]
	public SharedPhotoMgr()
	{
	}
}
[Token(Token = "0x2000143")]
public class TextureLoader : MonoBehaviour
{
	[Token(Token = "0x20002AB")]
	private class TexturePage
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool loaded;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> filenames;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Texture> textures;

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xEE7D64", Offset = "0xEE7D64", VA = "0xEE7D64")]
		public TexturePage()
		{
		}
	}

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int kPageSize;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int kTextureWidth;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int kTextureHeight;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> _localTextureFilenames;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<TexturePage> _texturePages;

	[Token(Token = "0x17000068")]
	public int TotalNumOfTextures
	{
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xEE7844", Offset = "0xEE7844", VA = "0xEE7844")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xEE78A4", Offset = "0xEE78A4", VA = "0xEE78A4")]
		private set
		{
		}
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xEE78A8", Offset = "0xEE78A8", VA = "0xEE78A8")]
	public void Init(string folder)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xEE7DD4", Offset = "0xEE7DD4", VA = "0xEE7DD4")]
	public List<Texture> GetTexturePage(int index)
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xEE7FA4", Offset = "0xEE7FA4", VA = "0xEE7FA4")]
	private void LoadTextureFromFile(string fileName, List<Texture> buffer)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xEE81A0", Offset = "0xEE81A0", VA = "0xEE81A0")]
	public TextureLoader()
	{
	}
}
[Token(Token = "0x2000144")]
public class TextureUtil : MonoSingleton<TextureUtil>
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string path;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int width;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int height;

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xEE82A4", Offset = "0xEE82A4", VA = "0xEE82A4", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xEE8304", Offset = "0xEE8304", VA = "0xEE8304")]
	public void SaveTextureToFile(byte[] data, string folderName, string fileName)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xEE8598", Offset = "0xEE8598", VA = "0xEE8598")]
	internal void DeleteTexture(Texture texture, string folder)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xEE8810", Offset = "0xEE8810", VA = "0xEE8810")]
	internal Texture2D CreateImageFromScreen(int width, int height)
	{
		return null;
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xEE88F4", Offset = "0xEE88F4", VA = "0xEE88F4")]
	internal Texture2D CreateTextureFromData(byte[] data)
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xEE899C", Offset = "0xEE899C", VA = "0xEE899C")]
	public TextureUtil()
	{
	}
}
[Token(Token = "0x2000145")]
public class AirplaneController : ToyController
{
	[Serializable]
	[Token(Token = "0x20002AC")]
	public class FlyEvent : UnityEvent
	{
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x985D9C", Offset = "0x985D9C", VA = "0x985D9C")]
		public FlyEvent()
		{
		}
	}

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip triggerSound;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAngle;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVelocity;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Force;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HintRender tips;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_EulerAngleVelocity;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float speed;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float velocity;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lastFlyTime;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FlyEvent onPlaneFlying;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasBattery;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool active;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform placeholder;

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x9850E8", Offset = "0x9850E8", VA = "0x9850E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x98518C", Offset = "0x98518C", VA = "0x98518C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x9851E4", Offset = "0x9851E4", VA = "0x9851E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x9858A8", Offset = "0x9858A8", VA = "0x9858A8")]
	private bool InteractedNotMe(InputHandler.ControllerType hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x985AB0", Offset = "0x985AB0", VA = "0x985AB0")]
	private Quaternion CaculateDeltaRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x985A10", Offset = "0x985A10", VA = "0x985A10")]
	private float CaculateVelocity(float force)
	{
		return default(float);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x985BAC", Offset = "0x985BAC", VA = "0x985BAC")]
	public float GetVelocity()
	{
		return default(float);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x985BB4", Offset = "0x985BB4", VA = "0x985BB4")]
	public void SetBattery()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x985C3C", Offset = "0x985C3C", VA = "0x985C3C")]
	public void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x985C48", Offset = "0x985C48", VA = "0x985C48", Slot = "4")]
	public override void SetEnabled(bool enabled)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x985C88", Offset = "0x985C88", VA = "0x985C88")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x985D74", Offset = "0x985D74", VA = "0x985D74")]
	public AirplaneController()
	{
	}
}
[Token(Token = "0x2000146")]
public class Airscrew : MonoBehaviour
{
	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AirplaneController controller;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x985DA4", Offset = "0x985DA4", VA = "0x985DA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x985DFC", Offset = "0x985DFC", VA = "0x985DFC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x985EFC", Offset = "0x985EFC", VA = "0x985EFC")]
	public Airscrew()
	{
	}
}
[Token(Token = "0x2000147")]
public class BalanceController : MonoBehaviour
{
	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Joint joint;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 originalPos;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<Transform> onEnter;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<Transform> onExit;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<Collider> onCollisionEnter;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<Collider> onCollisionExit;

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x988198", Offset = "0x988198", VA = "0x988198")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x9883A8", Offset = "0x9883A8", VA = "0x9883A8")]
	private void SetKinematic()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x988400", Offset = "0x988400", VA = "0x988400")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x9885B4", Offset = "0x9885B4", VA = "0x9885B4")]
	private void SetPhysics()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x98860C", Offset = "0x98860C", VA = "0x98860C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x9888A8", Offset = "0x9888A8", VA = "0x9888A8")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x9889D4", Offset = "0x9889D4", VA = "0x9889D4")]
	public BalanceController()
	{
	}
}
[Token(Token = "0x2000148")]
public class Battery : Equipment
{
	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x989E8C", Offset = "0x989E8C", VA = "0x989E8C", Slot = "4")]
	protected override bool IsTriggered(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x989F1C", Offset = "0x989F1C", VA = "0x989F1C", Slot = "5")]
	protected override void Equip(Collider other)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x98A050", Offset = "0x98A050", VA = "0x98A050")]
	public Battery()
	{
	}
}
[Token(Token = "0x2000149")]
public class BookHandler : MonoBehaviour
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float interval;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float velocity;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer render;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 offset;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentPage;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float triggeredTime;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture[] textures;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x98B32C", Offset = "0x98B32C", VA = "0x98B32C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x98B390", Offset = "0x98B390", VA = "0x98B390")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x98B394", Offset = "0x98B394", VA = "0x98B394")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x98B5F8", Offset = "0x98B5F8", VA = "0x98B5F8")]
	private void TurningPage(short index)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x98B708", Offset = "0x98B708", VA = "0x98B708")]
	public BookHandler()
	{
	}
}
[Token(Token = "0x200014A")]
public class Bubbles : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip bubbles;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x98BEB4", Offset = "0x98BEB4", VA = "0x98BEB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x98BF0C", Offset = "0x98BF0C", VA = "0x98BF0C")]
	public void Play()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x98C000", Offset = "0x98C000", VA = "0x98C000")]
	public Bubbles()
	{
	}
}
[Token(Token = "0x200014B")]
public class Cactus : MonoBehaviour
{
	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip sound;

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x98D204", Offset = "0x98D204", VA = "0x98D204")]
	public void Play()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x98D2E8", Offset = "0x98D2E8", VA = "0x98D2E8")]
	public Cactus()
	{
	}
}
[Token(Token = "0x200014C")]
public class CarController : ToyController
{
	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 direction;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 velocity;

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x98EF60", Offset = "0x98EF60", VA = "0x98EF60")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x98F0A0", Offset = "0x98F0A0", VA = "0x98F0A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x98F1C8", Offset = "0x98F1C8", VA = "0x98F1C8")]
	private void Reset()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x98F238", Offset = "0x98F238", VA = "0x98F238")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x98F3B8", Offset = "0x98F3B8", VA = "0x98F3B8")]
	public void SetForce(Interactor interactor)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x98F5A8", Offset = "0x98F5A8", VA = "0x98F5A8")]
	public CarController()
	{
	}
}
[Token(Token = "0x200014D")]
public class ChinController : MonoBehaviour
{
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BE98", Offset = "0x68BE98")]
	private sealed class <Open>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ChinController <>4__this;

		[Token(Token = "0x17000187")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x9915CC", Offset = "0x9915CC", VA = "0x9915CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0x99163C", Offset = "0x99163C", VA = "0x99163C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x99146C", Offset = "0x99146C", VA = "0x99146C")]
		[DebuggerHidden]
		public <Open>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x9914A0", Offset = "0x9914A0", VA = "0x9914A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x9914A4", Offset = "0x9914A4", VA = "0x9914A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x9915D4", Offset = "0x9915D4", VA = "0x9915D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip laughSound;

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x9911F0", Offset = "0x9911F0", VA = "0x9911F0")]
	public void Close()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x9912FC", Offset = "0x9912FC", VA = "0x9912FC")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x9913D4", Offset = "0x9913D4", VA = "0x9913D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691678", Offset = "0x691678")]
	private IEnumerator Open(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x991498", Offset = "0x991498", VA = "0x991498")]
	public ChinController()
	{
	}
}
[Token(Token = "0x200014E")]
public class CreatorMgr : MonoBehaviour
{
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject balance;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RecipeMgr recipeMgr;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip introClip;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpriteRenderer hintSprite;

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x997A28", Offset = "0x997A28", VA = "0x997A28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x997B94", Offset = "0x997B94", VA = "0x997B94")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x997C0C", Offset = "0x997C0C", VA = "0x997C0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x997D24", Offset = "0x997D24", VA = "0x997D24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x997E3C", Offset = "0x997E3C", VA = "0x997E3C")]
	private void HandleRecipeChanged()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x997EA0", Offset = "0x997EA0", VA = "0x997EA0")]
	private void DisplayHint()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x997F84", Offset = "0x997F84", VA = "0x997F84")]
	public CreatorMgr()
	{
	}
}
[Token(Token = "0x200014F")]
public class CrystalContainer : Container
{
	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x997F8C", Offset = "0x997F8C", VA = "0x997F8C", Slot = "4")]
	protected override bool IsTriggered(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x99801C", Offset = "0x99801C", VA = "0x99801C")]
	public CrystalContainer()
	{
	}
}
[Token(Token = "0x2000150")]
public class Dispear : MonoBehaviour
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ParticleSystem disappear;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AudioClip disappearSound;

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x883C30", Offset = "0x883C30", VA = "0x883C30")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x883D90", Offset = "0x883D90", VA = "0x883D90")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x883E5C", Offset = "0x883E5C", VA = "0x883E5C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x884058", Offset = "0x884058", VA = "0x884058")]
	public Dispear()
	{
	}
}
[Token(Token = "0x2000151")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B698", Offset = "0x68B698")]
public class Eatable : MonoBehaviour
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftPart;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip eatSound;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action triggerEnter;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ParticleSystem juicyEffect;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string COLLIDER_NAME;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float DISAPEAR_TIME;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody mRigidbody;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x884E90", Offset = "0x884E90", VA = "0x884E90")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x885040", Offset = "0x885040", VA = "0x885040")]
	private Transform Initialize(Transform part)
	{
		return null;
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x8854E8", Offset = "0x8854E8", VA = "0x8854E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x885588", Offset = "0x885588", VA = "0x885588")]
	public void PlayEatAnimation()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x885884", Offset = "0x885884", VA = "0x885884")]
	public Eatable()
	{
	}
}
[Token(Token = "0x2000152")]
public abstract class Equipment : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002AE")]
	public class EquipEvent : UnityEvent
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x886AD4", Offset = "0x886AD4", VA = "0x886AD4")]
		public EquipEvent()
		{
		}
	}

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EquipEvent OnEquipped;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip success;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Outline outline;

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x886918", Offset = "0x886918", VA = "0x886918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x886984", Offset = "0x886984", VA = "0x886984")]
	private void Update()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x886988", Offset = "0x886988", VA = "0x886988")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000806")]
	protected abstract bool IsTriggered(Collider other);

	[Token(Token = "0x6000807")]
	protected abstract void Equip(Collider other);

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x886ACC", Offset = "0x886ACC", VA = "0x886ACC")]
	protected Equipment()
	{
	}
}
[Token(Token = "0x2000153")]
public class Floating : MonoBehaviour
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float range;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float t;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 pos;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float minimum;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maximum;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x887640", Offset = "0x887640", VA = "0x887640")]
	private void Start()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x887694", Offset = "0x887694", VA = "0x887694")]
	private void Update()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x88781C", Offset = "0x88781C", VA = "0x88781C")]
	public Floating()
	{
	}
}
[Token(Token = "0x2000154")]
public class FruitCreator : MonoBehaviour
{
	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, int> onUpgrade;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<int, int> onAnswerRight;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<int, int> onAnswerWrong;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecipeMgr recipeMgr;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip creatorSound;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip bonusSound;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPoint;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem builderPS;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onCreateStarted;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onCreateCompleted;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Container container;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Transform> objects;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool inProgress;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastTime;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentGrade;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentLevel;

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x889550", Offset = "0x889550", VA = "0x889550")]
	private void Start()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x889724", Offset = "0x889724", VA = "0x889724")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x88983C", Offset = "0x88983C", VA = "0x88983C")]
	private void HandleRecipeChanged()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x889844", Offset = "0x889844", VA = "0x889844")]
	private void Update()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x8898D8", Offset = "0x8898D8", VA = "0x8898D8")]
	public void Create()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x889A44", Offset = "0x889A44", VA = "0x889A44")]
	private void Creating()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x889D74", Offset = "0x889D74", VA = "0x889D74")]
	private bool CheckCondition(Recipe recipe)
	{
		return default(bool);
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x88A2A4", Offset = "0x88A2A4", VA = "0x88A2A4")]
	private bool CheckOther(RecipeItem[] items)
	{
		return default(bool);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x88A40C", Offset = "0x88A40C", VA = "0x88A40C")]
	private bool RecipeContains(string name, RecipeItem[] items)
	{
		return default(bool);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x88A130", Offset = "0x88A130", VA = "0x88A130")]
	private bool CheckItem(RecipeItem recipeItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x88A548", Offset = "0x88A548", VA = "0x88A548")]
	private bool CheckWeight(RecipeItem recipeItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x88A4B4", Offset = "0x88A4B4", VA = "0x88A4B4")]
	private bool CheckNum(RecipeItem recipeItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x88A718", Offset = "0x88A718", VA = "0x88A718")]
	private List<Transform> GetObjects(string objName)
	{
		return null;
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x889E70", Offset = "0x889E70", VA = "0x889E70")]
	private void CreateObject(Recipe recipe)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x88A8E8", Offset = "0x88A8E8", VA = "0x88A8E8")]
	public FruitCreator()
	{
	}
}
[Token(Token = "0x2000155")]
public class Hologram : MonoBehaviour
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hologram;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool state;

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x8403A0", Offset = "0x8403A0", VA = "0x8403A0")]
	public void Switch()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x8403E4", Offset = "0x8403E4", VA = "0x8403E4")]
	public Hologram()
	{
	}
}
[Token(Token = "0x2000156")]
public class InteractableButton : MonoBehaviour
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool pressed;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip pressedSound;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onButtonPressed;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onButtonReleased;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastTime;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x847D94", Offset = "0x847D94", VA = "0x847D94")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x847F04", Offset = "0x847F04", VA = "0x847F04")]
	public InteractableButton()
	{
	}
}
[Token(Token = "0x2000157")]
public class MagicCreator : MonoBehaviour
{
	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, int> onUpgrade;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<int, int> onAnswerRight;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<int, int> onAnswerWrong;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecipeMgr recipeMgr;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text hint;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip creatorSound;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip inprogressVoice;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip bonusSound;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip failedVoice;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip successVoice;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DynamicEffect effect;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem builderPS;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Container container;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Transform> objects;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool inProgress;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float lastTime;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int currentGrade;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int currentLevel;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isChinese;

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x850E6C", Offset = "0x850E6C", VA = "0x850E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x851188", Offset = "0x851188", VA = "0x851188")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x851138", Offset = "0x851138", VA = "0x851138")]
	private string GetProductName()
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x8512A0", Offset = "0x8512A0", VA = "0x8512A0")]
	private void HandleRecipeChanged()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x85135C", Offset = "0x85135C", VA = "0x85135C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x851484", Offset = "0x851484", VA = "0x851484")]
	public void Create()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x8515C0", Offset = "0x8515C0", VA = "0x8515C0")]
	private void Creating()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x8518F4", Offset = "0x8518F4", VA = "0x8518F4")]
	private bool CheckCondition(Recipe recipe)
	{
		return default(bool);
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x8520B4", Offset = "0x8520B4", VA = "0x8520B4")]
	private bool CheckOther(RecipeItem[] items)
	{
		return default(bool);
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x8522D4", Offset = "0x8522D4", VA = "0x8522D4")]
	private bool RecipeContains(string name, RecipeItem[] items)
	{
		return default(bool);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x851F40", Offset = "0x851F40", VA = "0x851F40")]
	private bool CheckItem(RecipeItem recipeItem)
	{
		return default(bool);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x8525DC", Offset = "0x8525DC", VA = "0x8525DC")]
	private bool CheckWeight(RecipeItem recipeItem)
	{
		return default(bool);
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x85237C", Offset = "0x85237C", VA = "0x85237C")]
	private bool CheckNum(RecipeItem recipeItem)
	{
		return default(bool);
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x852948", Offset = "0x852948", VA = "0x852948")]
	private List<Transform> GetObjects(string objName)
	{
		return null;
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x8519F0", Offset = "0x8519F0", VA = "0x8519F0")]
	private void CreateObject(Recipe recipe)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x852B18", Offset = "0x852B18", VA = "0x852B18")]
	public MagicCreator()
	{
	}
}
[Token(Token = "0x2000158")]
public class MoneySpray : MonoBehaviour
{
	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Money;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform startPoint;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource sound;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem ps;

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x91CCAC", Offset = "0x91CCAC", VA = "0x91CCAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x91CD04", Offset = "0x91CD04", VA = "0x91CD04")]
	public void Play()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x91CD60", Offset = "0x91CD60", VA = "0x91CD60")]
	private void SpawnMoney()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x91D044", Offset = "0x91D044", VA = "0x91D044")]
	public MoneySpray()
	{
	}
}
[Token(Token = "0x2000159")]
public class MusicBoxController : ToyController
{
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class WindUpEvent : UnityEvent
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x920F88", Offset = "0x920F88", VA = "0x920F88")]
		public WindUpEvent()
		{
		}
	}

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AudioClip> audioClips;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip dialSound;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioSource bgm;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem snowFX;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HintRender tips;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WindUpEvent onWindup;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isWinded;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform placeholder;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform winding;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float remainingTime;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rotating[] rotatings;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource music;

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x9205EC", Offset = "0x9205EC", VA = "0x9205EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x9206C4", Offset = "0x9206C4", VA = "0x9206C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x920868", Offset = "0x920868", VA = "0x920868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x920BF8", Offset = "0x920BF8", VA = "0x920BF8")]
	public void WindUp(float angle)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x920D80", Offset = "0x920D80", VA = "0x920D80")]
	public void SetWinding()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x920F40", Offset = "0x920F40", VA = "0x920F40", Slot = "4")]
	public override void SetEnabled(bool enabled)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x920F80", Offset = "0x920F80", VA = "0x920F80")]
	public MusicBoxController()
	{
	}
}
[Token(Token = "0x200015A")]
public class ObjectActivator : ToyController
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool Toggle;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnActivated;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnDeactivated;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_Activated;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xB912F0", Offset = "0xB912F0", VA = "0xB912F0")]
	public void Activated()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xB91374", Offset = "0xB91374", VA = "0xB91374")]
	public void Deactivated()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xB913B8", Offset = "0xB913B8", VA = "0xB913B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xB913F4", Offset = "0xB913F4", VA = "0xB913F4")]
	public ObjectActivator()
	{
	}
}
[Token(Token = "0x200015B")]
public class PaperplaneController : ToyController
{
	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 velocity;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x86E9C0", Offset = "0x86E9C0", VA = "0x86E9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x86EB00", Offset = "0x86EB00", VA = "0x86EB00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x86EC28", Offset = "0x86EC28", VA = "0x86EC28")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x86EC98", Offset = "0x86EC98", VA = "0x86EC98")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x86EE30", Offset = "0x86EE30", VA = "0x86EE30")]
	public void SetForce(Interactor interactor)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x86F044", Offset = "0x86F044", VA = "0x86F044")]
	public PaperplaneController()
	{
	}
}
[Token(Token = "0x200015C")]
public class Radio : ToyController
{
	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource MusicSource;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource NoiseSource;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] MusicClips;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_TuningRatio;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_VolumeRatio;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float noiseVolume;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DialInteractable[] dials;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x7FD3C8", Offset = "0x7FD3C8", VA = "0x7FD3C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x7FD4C4", Offset = "0x7FD4C4", VA = "0x7FD4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x7FD5B8", Offset = "0x7FD5B8", VA = "0x7FD5B8")]
	public void VolumeChanged(DialInteractable dial)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x7FD628", Offset = "0x7FD628", VA = "0x7FD628")]
	public void TuningChanged(DialInteractable dial)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x7FD444", Offset = "0x7FD444", VA = "0x7FD444")]
	private void Tune()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x7FD908", Offset = "0x7FD908", VA = "0x7FD908")]
	public Radio()
	{
	}
}
[Token(Token = "0x200015D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x68B6FC", Offset = "0x68B6FC")]
public class Recipe : ScriptableObject
{
	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecipeItem[] items;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string productName;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string nameText;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int grade;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string sprite;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform product;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int productAmount;

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x7FDD68", Offset = "0x7FDD68", VA = "0x7FDD68")]
	public Recipe()
	{
	}
}
[Serializable]
[Token(Token = "0x200015E")]
public class RecipeItem
{
	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string objName;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string nameText;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Unit unit;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amount;

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x7FDD70", Offset = "0x7FDD70", VA = "0x7FDD70")]
	public RecipeItem()
	{
	}
}
[Serializable]
[Token(Token = "0x200015F")]
public enum Unit
{
	[Token(Token = "0x4000840")]
	NUM,
	[Token(Token = "0x4000841")]
	WEIGHT
}
[Token(Token = "0x2000160")]
public class RecipeMgr : MonoBehaviour
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gradeSize;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int levelSize;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float confirmInterval;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string tips;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Recipe[] recipes;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Recipe current;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action onRecipeChanged;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentIndex;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lastTime;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Recipe> recipesOfGrade;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x7FDD78", Offset = "0x7FDD78", VA = "0x7FDD78")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x7FDF44", Offset = "0x7FDF44", VA = "0x7FDF44")]
	private void Start()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x7FE114", Offset = "0x7FE114", VA = "0x7FE114")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x7FE2D8", Offset = "0x7FE2D8", VA = "0x7FE2D8")]
	private int CaculateIndex(int currentGrade, int currentLevel, int levelSize)
	{
		return default(int);
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x7FDDE8", Offset = "0x7FDDE8", VA = "0x7FDDE8")]
	private List<Recipe> GetRecipeOfGrade(int grade)
	{
		return null;
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x7FE2EC", Offset = "0x7FE2EC", VA = "0x7FE2EC")]
	public Recipe GetCurrentRecipe()
	{
		return null;
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x7FE2F4", Offset = "0x7FE2F4", VA = "0x7FE2F4")]
	public string GetTips()
	{
		return null;
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x7FE2FC", Offset = "0x7FE2FC", VA = "0x7FE2FC")]
	public void NextRecipe(int grade, int level)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x7FE318", Offset = "0x7FE318", VA = "0x7FE318")]
	private void ChangeRecipe()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x7FE3B0", Offset = "0x7FE3B0", VA = "0x7FE3B0")]
	public int GetCurrentIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x7FE3B8", Offset = "0x7FE3B8", VA = "0x7FE3B8")]
	public RecipeMgr()
	{
	}
}
[Token(Token = "0x2000161")]
public class Rotating : MonoBehaviour
{
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRotating;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 axis;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x802484", Offset = "0x802484", VA = "0x802484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x802488", Offset = "0x802488", VA = "0x802488")]
	private void Update()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x802574", Offset = "0x802574", VA = "0x802574")]
	public Rotating()
	{
	}
}
[Token(Token = "0x2000162")]
public class SnowBall : MonoBehaviour
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem snowEffectPrefab;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource sound;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem snowEffect;

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x806190", Offset = "0x806190", VA = "0x806190")]
	private void Start()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x806314", Offset = "0x806314", VA = "0x806314")]
	private void Update()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x8063F4", Offset = "0x8063F4", VA = "0x8063F4")]
	public SnowBall()
	{
	}
}
[Token(Token = "0x2000163")]
public class Spawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002B0")]
	public class SpawnEvent : UnityEvent<Transform>
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x80A33C", Offset = "0x80A33C", VA = "0x80A33C")]
		public SpawnEvent()
		{
		}
	}

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform prefab;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnPoint;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 Axis;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distance;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 scale;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float weight;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string objectName;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform currentSpawn;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpawnEvent OnObjectSpawned;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x809E10", Offset = "0x809E10", VA = "0x809E10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x809E6C", Offset = "0x809E6C", VA = "0x809E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x809FBC", Offset = "0x809FBC", VA = "0x809FBC")]
	private void SpawnObject()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x80A2B4", Offset = "0x80A2B4", VA = "0x80A2B4")]
	public Spawner()
	{
	}
}
[Token(Token = "0x2000164")]
public class ToyController : MonoBehaviour
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isEnabled;

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xEEA5B0", Offset = "0xEEA5B0", VA = "0xEEA5B0")]
	public void RecordTransform(Transform obj)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xEEA884", Offset = "0xEEA884", VA = "0xEEA884", Slot = "4")]
	public virtual void SetEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xEEA890", Offset = "0xEEA890", VA = "0xEEA890")]
	public void Enabled(Transform obj)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xEEAA98", Offset = "0xEEAA98", VA = "0xEEAA98")]
	public static void RemoveToy(string name)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xEEAC58", Offset = "0xEEAC58", VA = "0xEEAC58")]
	public ToyController()
	{
	}
}
[Token(Token = "0x2000165")]
public class Winding : Equipment
{
	[Token(Token = "0x6000867")]
	[Address(RVA = "0xEED8A4", Offset = "0xEED8A4", VA = "0xEED8A4", Slot = "5")]
	protected override void Equip(Collider other)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xEED9BC", Offset = "0xEED9BC", VA = "0xEED9BC", Slot = "4")]
	protected override bool IsTriggered(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xEEDA4C", Offset = "0xEEDA4C", VA = "0xEEDA4C")]
	public Winding()
	{
	}
}
[Token(Token = "0x2000166")]
public class MedalMgr : MonoSingleton<MedalMgr>
{
	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip getMedalSound;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem effect;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int count;

	[Token(Token = "0x17000069")]
	public int Count
	{
		[Token(Token = "0x600086A")]
		[Address(RVA = "0x854C20", Offset = "0x854C20", VA = "0x854C20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x854C28", Offset = "0x854C28", VA = "0x854C28")]
	private void Start()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x855254", Offset = "0x855254", VA = "0x855254")]
	public void AddMedal(int grade, int level)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x8554C4", Offset = "0x8554C4", VA = "0x8554C4")]
	public void RemoveMedal(int number)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x8555A8", Offset = "0x8555A8", VA = "0x8555A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x855A98", Offset = "0x855A98", VA = "0x855A98")]
	public MedalMgr()
	{
	}
}
[Token(Token = "0x2000167")]
public class NFCZone : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002B1")]
	public class NFCEvent : UnityEvent
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x921BF8", Offset = "0x921BF8", VA = "0x921BF8")]
		public NFCEvent()
		{
		}
	}

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NFCEvent onNFCEnter;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip scanSound;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float confirmInterval;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float triggerTime;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x921A04", Offset = "0x921A04", VA = "0x921A04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x921A08", Offset = "0x921A08", VA = "0x921A08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x921A0C", Offset = "0x921A0C", VA = "0x921A0C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x921B20", Offset = "0x921B20", VA = "0x921B20")]
	private bool isTriggered(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x921BE8", Offset = "0x921BE8", VA = "0x921BE8")]
	public NFCZone()
	{
	}
}
[Token(Token = "0x2000168")]
public class ToyMgr : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002B2")]
	public class ToyType
	{
		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string type;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform prefab;

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xEEB370", Offset = "0xEEB370", VA = "0xEEB370")]
		public ToyType()
		{
		}
	}

	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BEA8", Offset = "0x68BEA8")]
	private sealed class <SpawnToy>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ToyMgr <>4__this;

		[Token(Token = "0x17000189")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xEEB2F8", Offset = "0xEEB2F8", VA = "0xEEB2F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xEEB368", Offset = "0xEEB368", VA = "0xEEB368", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xEEAE5C", Offset = "0xEEAE5C", VA = "0xEEAE5C")]
		[DebuggerHidden]
		public <SpawnToy>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xEEAFF0", Offset = "0xEEAFF0", VA = "0xEEAFF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xEEAFF4", Offset = "0xEEAFF4", VA = "0xEEAFF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xEEB300", Offset = "0xEEB300", VA = "0xEEB300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> toyRepos;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform parent;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ToyType> prefabs;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Toy> toys;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int repoIndex;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xEEAC60", Offset = "0xEEAC60", VA = "0xEEAC60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xEEADC4", Offset = "0xEEADC4", VA = "0xEEADC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6916DC", Offset = "0x6916DC")]
	private IEnumerator SpawnToy(int index)
	{
		return null;
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xEEAE88", Offset = "0xEEAE88", VA = "0xEEAE88")]
	private Transform GetPrefab(string type)
	{
		return null;
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xEEAFE8", Offset = "0xEEAFE8", VA = "0xEEAFE8")]
	public ToyMgr()
	{
	}
}
[Token(Token = "0x2000169")]
public class VendingButton : MonoBehaviour
{
	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VendingItem item;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer render;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color highlightColor;

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xEEB5B8", Offset = "0xEEB5B8", VA = "0xEEB5B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xEEB664", Offset = "0xEEB664", VA = "0xEEB664")]
	public void Highlight(bool on)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xEEB73C", Offset = "0xEEB73C", VA = "0xEEB73C")]
	public VendingButton()
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x68B740", Offset = "0x68B740")]
public class VendingItem : ScriptableObject
{
	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int price;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] product;

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xEEBAE0", Offset = "0xEEBAE0", VA = "0xEEBAE0")]
	public VendingItem()
	{
	}
}
[Token(Token = "0x200016B")]
public class VendingMachine : MonoBehaviour
{
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BEB8", Offset = "0x68BEB8")]
	private sealed class <Reset>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VendingMachine <>4__this;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0xEECB38", Offset = "0xEECB38", VA = "0xEECB38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xEECBA8", Offset = "0xEECBA8", VA = "0xEECBA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xEEC7CC", Offset = "0xEEC7CC", VA = "0xEEC7CC")]
		[DebuggerHidden]
		public <Reset>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xEEC9CC", Offset = "0xEEC9CC", VA = "0xEEC9CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xEEC9D0", Offset = "0xEEC9D0", VA = "0xEEC9D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xEECB40", Offset = "0xEECB40", VA = "0xEECB40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text display;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnPoint;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip productSound;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VendingButton choosedButton;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action vendingSucceed;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xEEBAE8", Offset = "0xEEBAE8", VA = "0xEEBAE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xEEBB7C", Offset = "0xEEBB7C", VA = "0xEEBB7C")]
	public void Choose(VendingButton button)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xEEBD78", Offset = "0xEEBD78", VA = "0xEEBD78")]
	public void Purchase()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xEEC758", Offset = "0xEEC758", VA = "0xEEC758")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691740", Offset = "0x691740")]
	private IEnumerator Reset()
	{
		return null;
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xEEC328", Offset = "0xEEC328", VA = "0xEEC328")]
	private bool SpawnObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xEEC7F8", Offset = "0xEEC7F8", VA = "0xEEC7F8")]
	private Transform GetPrefabs(Transform[] choices)
	{
		return null;
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xEEC9C4", Offset = "0xEEC9C4", VA = "0xEEC9C4")]
	public VendingMachine()
	{
	}
}
[Token(Token = "0x200016C")]
public class ProfilingMgr
{
	[Serializable]
	[Token(Token = "0x20002B5")]
	public enum Mode
	{
		[Token(Token = "0x4000E7D")]
		Standard,
		[Token(Token = "0x4000E7E")]
		Light,
		[Token(Token = "0x4000E7F")]
		Deep
	}

	[Token(Token = "0x20002B6")]
	private struct FrameData
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float elapsedNanoseconds;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int numCalls;
	}

	[Token(Token = "0x20002B7")]
	private struct Sample
	{
		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Recorder recorder;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<FrameData> frameData;
	}

	[Token(Token = "0x20002B8")]
	private class Statistics
	{
		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690270", Offset = "0x690270")]
		private float <Min>k__BackingField;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690280", Offset = "0x690280")]
		private float <Max>k__BackingField;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690290", Offset = "0x690290")]
		private float <Median>k__BackingField;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6902A0", Offset = "0x6902A0")]
		private float <Mean>k__BackingField;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6902B0", Offset = "0x6902B0")]
		private float <InterquartileMean>k__BackingField;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6902C0", Offset = "0x6902C0")]
		private float <StandardDeviation>k__BackingField;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6902D0", Offset = "0x6902D0")]
		private float <StandardDeviationPcOfMedian>k__BackingField;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6902E0", Offset = "0x6902E0")]
		private float <StandardDeviationPcOfMean>k__BackingField;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6902F0", Offset = "0x6902F0")]
		private float <StandardDeviationPcOfInterquartileMean>k__BackingField;

		[Token(Token = "0x1700018D")]
		public float Min
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0x871D88", Offset = "0x871D88", VA = "0x871D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693478", Offset = "0x693478")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001006")]
			[Address(RVA = "0x872238", Offset = "0x872238", VA = "0x872238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693488", Offset = "0x693488")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public float Max
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0x871D98", Offset = "0x871D98", VA = "0x871D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693498", Offset = "0x693498")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001008")]
			[Address(RVA = "0x872240", Offset = "0x872240", VA = "0x872240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6934A8", Offset = "0x6934A8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public float Median
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x871D90", Offset = "0x871D90", VA = "0x871D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6934B8", Offset = "0x6934B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600100A")]
			[Address(RVA = "0x872248", Offset = "0x872248", VA = "0x872248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6934C8", Offset = "0x6934C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public float Mean
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0x872250", Offset = "0x872250", VA = "0x872250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6934D8", Offset = "0x6934D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600100C")]
			[Address(RVA = "0x872258", Offset = "0x872258", VA = "0x872258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6934E8", Offset = "0x6934E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public float InterquartileMean
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0x872260", Offset = "0x872260", VA = "0x872260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6934F8", Offset = "0x6934F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x872268", Offset = "0x872268", VA = "0x872268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693508", Offset = "0x693508")]
			private set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public float StandardDeviation
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x872270", Offset = "0x872270", VA = "0x872270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693518", Offset = "0x693518")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x872278", Offset = "0x872278", VA = "0x872278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693528", Offset = "0x693528")]
			private set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public float StandardDeviationPcOfMedian
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x872280", Offset = "0x872280", VA = "0x872280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693538", Offset = "0x693538")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001012")]
			[Address(RVA = "0x872288", Offset = "0x872288", VA = "0x872288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693548", Offset = "0x693548")]
			private set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public float StandardDeviationPcOfMean
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x872290", Offset = "0x872290", VA = "0x872290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693558", Offset = "0x693558")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001014")]
			[Address(RVA = "0x872298", Offset = "0x872298", VA = "0x872298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693568", Offset = "0x693568")]
			private set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public float StandardDeviationPcOfInterquartileMean
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x8722A0", Offset = "0x8722A0", VA = "0x8722A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693578", Offset = "0x693578")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001016")]
			[Address(RVA = "0x8722A8", Offset = "0x8722A8", VA = "0x8722A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693588", Offset = "0x693588")]
			private set
			{
			}
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x8711E4", Offset = "0x8711E4", VA = "0x8711E4")]
		public Statistics(float[] data)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x8722B0", Offset = "0x8722B0", VA = "0x8722B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x693598", Offset = "0x693598")]
		private float <.ctor>b__36_0(float x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BEC8", Offset = "0x68BEC8")]
	private sealed class <Update>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProfilingMgr <>4__this;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x8721C0", Offset = "0x8721C0", VA = "0x8721C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x872230", Offset = "0x872230", VA = "0x872230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x8711B0", Offset = "0x8711B0", VA = "0x8711B0")]
		[DebuggerHidden]
		public <Update>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x871F7C", Offset = "0x871F7C", VA = "0x871F7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x871F80", Offset = "0x871F80", VA = "0x871F80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x8721C8", Offset = "0x8721C8", VA = "0x8721C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BED8", Offset = "0x68BED8")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float percentScale;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x8711DC", Offset = "0x8711DC", VA = "0x8711DC")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x871E48", Offset = "0x871E48", VA = "0x871E48")]
		internal float <OutputStats>b__1(int x)
		{
			return default(float);
		}
	}

	[Serializable]
	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BEE8", Offset = "0x68BEE8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<int, float> <>9__20_0;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<FrameData, float> <>9__21_1;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<float, bool> <>9__21_2;

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x871E04", Offset = "0x871E04", VA = "0x871E04")]
		public <>c()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x871E0C", Offset = "0x871E0C", VA = "0x871E0C")]
		internal float <OutputStats>b__20_0(int x)
		{
			return default(float);
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x871E28", Offset = "0x871E28", VA = "0x871E28")]
		internal float <HumanReadableOutput>b__21_1(FrameData x)
		{
			return default(float);
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x871E3C", Offset = "0x871E3C", VA = "0x871E3C")]
		internal bool <HumanReadableOutput>b__21_2(float x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BEF8", Offset = "0x68BEF8")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ProfilingMgr <>4__this;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] frameRatePercentages;

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x871D80", Offset = "0x871D80", VA = "0x871D80")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x871E58", Offset = "0x871E58", VA = "0x871E58")]
		internal string <HumanReadableOutput>b__0(int i)
		{
			return null;
		}
	}

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ProfilingMgr m_Instance;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_Profiling;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Mode m_Mode;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> m_FrameTimes;

	[Token(Token = "0x4000878")]
	private const int k_NumFrames = 450;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine m_UpdateCoroutine;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[] m_ValidFramerates;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Sample> m_Samples;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> ProfilingFunctions;

	[Token(Token = "0x1700006A")]
	public static ProfilingMgr Instance
	{
		[Token(Token = "0x6000884")]
		[Address(RVA = "0x870204", Offset = "0x870204", VA = "0x870204")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x870364", Offset = "0x870364", VA = "0x870364")]
	public void AddProfilingFunction(string func)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x8703D4", Offset = "0x8703D4", VA = "0x8703D4")]
	public void StartProfiling(Mode mode)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x8709BC", Offset = "0x8709BC", VA = "0x8709BC")]
	public void StopProfiling()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x87085C", Offset = "0x87085C", VA = "0x87085C")]
	private string GetProfilingFilename()
	{
		return null;
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x870948", Offset = "0x870948", VA = "0x870948")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6917A4", Offset = "0x6917A4")]
	private IEnumerator Update()
	{
		return null;
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x870BD8", Offset = "0x870BD8", VA = "0x870BD8")]
	private void OutputStats()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x8714B4", Offset = "0x8714B4", VA = "0x8714B4")]
	private void HumanReadableOutput(StringBuilder output, Statistics stats, float[] frameRatePercentages)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x87029C", Offset = "0x87029C", VA = "0x87029C")]
	public ProfilingMgr()
	{
	}
}
[Token(Token = "0x200016D")]
public class Quit : MonoBehaviour
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float t;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float t1;

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x875530", Offset = "0x875530", VA = "0x875530")]
	private void Start()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x875534", Offset = "0x875534", VA = "0x875534")]
	private void Update()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x875608", Offset = "0x875608", VA = "0x875608")]
	public Quit()
	{
	}
}
[Token(Token = "0x200016E")]
public class Rotation : MonoBehaviour
{
	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float step;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSpeed;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject rotObj;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float speed;

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x80257C", Offset = "0x80257C", VA = "0x80257C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x802580", Offset = "0x802580", VA = "0x802580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x802584", Offset = "0x802584", VA = "0x802584")]
	public void IncreaseSpeed()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x8025A0", Offset = "0x8025A0", VA = "0x8025A0")]
	public void DecreaseSpeed()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x8026B4", Offset = "0x8026B4", VA = "0x8026B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x802774", Offset = "0x802774", VA = "0x802774")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x80281C", Offset = "0x80281C", VA = "0x80281C")]
	public Rotation()
	{
	}
}
[Token(Token = "0x200016F")]
public class SceneFadeInOut : MonoBehaviour
{
	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image image;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeSpeed;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool sceneStarting;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x803D40", Offset = "0x803D40", VA = "0x803D40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x803E24", Offset = "0x803E24", VA = "0x803E24")]
	private void FadeToClear()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x803F2C", Offset = "0x803F2C", VA = "0x803F2C")]
	private void FadeToBlack()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x803D50", Offset = "0x803D50", VA = "0x803D50")]
	private void StartScene()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x804034", Offset = "0x804034", VA = "0x804034")]
	public void EndScene()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x804098", Offset = "0x804098", VA = "0x804098")]
	public SceneFadeInOut()
	{
	}
}
[Token(Token = "0x2000170")]
public class SceneMgr : MonoSingleton<SceneMgr>
{
	[Token(Token = "0x20002BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF08", Offset = "0x68BF08")]
	private sealed class <DoLoadScene>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x804424", Offset = "0x804424", VA = "0x804424", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x804494", Offset = "0x804494", VA = "0x804494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x8042D4", Offset = "0x8042D4", VA = "0x8042D4")]
		[DebuggerHidden]
		public <DoLoadScene>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x804350", Offset = "0x804350", VA = "0x804350", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x804354", Offset = "0x804354", VA = "0x804354", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x80442C", Offset = "0x80442C", VA = "0x80442C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string currentScene;

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x8040B0", Offset = "0x8040B0", VA = "0x8040B0")]
	public void LoadSceneAdditive(string name)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x8041FC", Offset = "0x8041FC", VA = "0x8041FC")]
	public void LoadScene(string name)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x804260", Offset = "0x804260", VA = "0x804260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691808", Offset = "0x691808")]
	private IEnumerator DoLoadScene(string name)
	{
		return null;
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x804300", Offset = "0x804300", VA = "0x804300")]
	public SceneMgr()
	{
	}
}
[Token(Token = "0x2000171")]
internal abstract class AbstractNetwork
{
	[Token(Token = "0x4000887")]
	public const string address = "https://81.70.45.74:8000/";

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x9813A0", Offset = "0x9813A0", VA = "0x9813A0")]
	protected AbstractNetwork()
	{
	}
}
[Token(Token = "0x2000172")]
internal class ArrayUtil
{
	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x986114", Offset = "0x986114", VA = "0x986114")]
	public ArrayUtil()
	{
	}
}
[Token(Token = "0x2000173")]
public class CustomCertificateHandler : CertificateHandler
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string PUB_KEY;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x99F994", Offset = "0x99F994", VA = "0x99F994")]
	public CustomCertificateHandler()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x99F99C", Offset = "0x99F99C", VA = "0x99F99C", Slot = "5")]
	protected override bool ValidateCertificate(byte[] certificateData)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000174")]
public static class DataSourceFactory
{
	[Token(Token = "0x20002BE")]
	public enum DataSourceType
	{
		[Token(Token = "0x4000E9D")]
		Network,
		[Token(Token = "0x4000E9E")]
		Database
	}

	[Token(Token = "0x4000889")]
	private const DataSourceType DEFAULT_TYPE = DataSourceType.Network;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IDataSourceService networkService;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x87E074", Offset = "0x87E074", VA = "0x87E074")]
	public static IDataSourceService GetDataSource(DataSourceType type)
	{
		return null;
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x87E160", Offset = "0x87E160", VA = "0x87E160")]
	public static IDataSourceService GetDataSource()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000175")]
public class DeviceResponse
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device[] results;

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x882758", Offset = "0x882758", VA = "0x882758")]
	public DeviceResponse()
	{
	}
}
[Token(Token = "0x2000176")]
public interface IDataSourceService
{
	[Token(Token = "0x60008AA")]
	IAccountService GetAccountService();

	[Token(Token = "0x60008AB")]
	IPerformanceService GetPerformanceService();

	[Token(Token = "0x60008AC")]
	IInventoryService GetInventoryService();

	[Token(Token = "0x60008AD")]
	IDeviceService GetDeviceService();

	[Token(Token = "0x60008AE")]
	IMemoryService GetMemoryService();

	[Token(Token = "0x60008AF")]
	IMediaService GetMediaService();

	[Token(Token = "0x60008B0")]
	IAccessService GetAccessService();
}
[Token(Token = "0x2000177")]
public interface IDeviceService
{
	[Token(Token = "0x60008B1")]
	int CreateDevice(Device device, Action<Device> callback);

	[Token(Token = "0x60008B2")]
	void UpdateDevice(Device device);

	[Token(Token = "0x60008B3")]
	void GetDevice(string UUID, Action<Device[]> callback);

	[Token(Token = "0x60008B4")]
	void GetDevice(int deviceID, Action<Device> callback);
}
[Token(Token = "0x2000178")]
public interface IMemoryService
{
	[Token(Token = "0x60008B5")]
	int CreateMemory(Memory memory, string name, Action<Memory, string> callback);

	[Token(Token = "0x60008B6")]
	void UpdateMemory(Memory memory);

	[Token(Token = "0x60008B7")]
	void GetMemory(int mediaID, Action<Memory[]> callback);

	[Token(Token = "0x60008B8")]
	void GetMemories(int accountID, Action<Memory[]> callback);

	[Token(Token = "0x60008B9")]
	void GetSharedMemories(int accountID, Action<Memory[]> callback);
}
[Serializable]
[Token(Token = "0x2000179")]
public class Access
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int account_id;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int count;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string avg_duration;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string total_time;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string last_updated;

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x9813A8", Offset = "0x9813A8", VA = "0x9813A8")]
	public Access(int account_id, int count, string avg_duration, string total_time, string last_updated)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x9813FC", Offset = "0x9813FC", VA = "0x9813FC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200017A")]
public class Account
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int account_id;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int age;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int gender;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int grade;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string info;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int media_id;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int performance_id;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int inventory_id;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string created_time;

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x981408", Offset = "0x981408", VA = "0x981408", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x981414", Offset = "0x981414", VA = "0x981414")]
	public Account()
	{
	}
}
[Serializable]
[Token(Token = "0x200017B")]
public class Device
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int dev_id;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string UUID;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string manufactor;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string accounts_info;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string extra;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string created_time;

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x8826E8", Offset = "0x8826E8", VA = "0x8826E8")]
	public Device(int dev_id, string UUID, string manufactor, string accounts_info, string extra, string created_time)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x88274C", Offset = "0x88274C", VA = "0x88274C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200017C")]
public class Inventory
{
	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int inventory_id;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string toys_info;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string rewards_info;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x848FA0", Offset = "0x848FA0", VA = "0x848FA0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x848FAC", Offset = "0x848FAC", VA = "0x848FAC")]
	public Inventory()
	{
	}
}
[Serializable]
[Token(Token = "0x200017D")]
public class Medal
{
	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int type;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int count;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x854BDC", Offset = "0x854BDC", VA = "0x854BDC")]
	public Medal(int type, int count)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x854C14", Offset = "0x854C14", VA = "0x854C14", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200017E")]
public class Media
{
	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int media_id;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int type_id;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string path;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string data;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string created_time;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x855AE8", Offset = "0x855AE8", VA = "0x855AE8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x855AF4", Offset = "0x855AF4", VA = "0x855AF4")]
	public Media()
	{
	}
}
[Serializable]
[Token(Token = "0x200017F")]
public class MediaRequest
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int media_id;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int type_id;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string path;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public byte[] data;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string created_time;

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x857AC0", Offset = "0x857AC0", VA = "0x857AC0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x855D9C", Offset = "0x855D9C", VA = "0x855D9C")]
	public MediaRequest()
	{
	}
}
[Serializable]
[Token(Token = "0x2000180")]
public class Memory
{
	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int memo_id;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int account_id;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string info;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string created_time;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int media_id;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int type_id;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int visited_count;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int shared;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int deleted;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x857ACC", Offset = "0x857ACC", VA = "0x857ACC")]
	public Memory(int accountID, int mediaID, int typeID, string info, string createdTime)
	{
	}
}
[Serializable]
[Token(Token = "0x2000181")]
public class Performance
{
	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int performance_id;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int score;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string grade;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string level;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ability_arithma;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int ability_logic;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int ability_space;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int ability_focus;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int ability_creative;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x86F054", Offset = "0x86F054", VA = "0x86F054", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x86F060", Offset = "0x86F060", VA = "0x86F060")]
	public Performance()
	{
	}
}
[Serializable]
[Token(Token = "0x2000182")]
public class Toy
{
	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string type;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enabled;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 pos;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 rot;

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xEEA514", Offset = "0xEEA514", VA = "0xEEA514")]
	public Toy(int id, string name, string type, Vector3 pos, Vector3 rot, bool enabled)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xEEA5A4", Offset = "0xEEA5A4", VA = "0xEEA5A4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000183")]
internal class NetworkService : IDataSourceService
{
	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x929E30", Offset = "0x929E30", VA = "0x929E30", Slot = "4")]
	public IAccountService GetAccountService()
	{
		return null;
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x929E88", Offset = "0x929E88", VA = "0x929E88", Slot = "7")]
	public IDeviceService GetDeviceService()
	{
		return null;
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x929EE0", Offset = "0x929EE0", VA = "0x929EE0", Slot = "6")]
	public IInventoryService GetInventoryService()
	{
		return null;
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x929F38", Offset = "0x929F38", VA = "0x929F38", Slot = "8")]
	public IMemoryService GetMemoryService()
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x929F90", Offset = "0x929F90", VA = "0x929F90", Slot = "5")]
	public IPerformanceService GetPerformanceService()
	{
		return null;
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x929FE8", Offset = "0x929FE8", VA = "0x929FE8", Slot = "9")]
	public IMediaService GetMediaService()
	{
		return null;
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x92A040", Offset = "0x92A040", VA = "0x92A040", Slot = "10")]
	public IAccessService GetAccessService()
	{
		return null;
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x92A098", Offset = "0x92A098", VA = "0x92A098")]
	public NetworkService()
	{
	}
}
[Token(Token = "0x2000184")]
public interface IAccessService
{
	[Token(Token = "0x60008D5")]
	int CreateAccess(Access access, Action<Access> callback);

	[Token(Token = "0x60008D6")]
	void UpdateAccess(Access access);

	[Token(Token = "0x60008D7")]
	void GetAccess(int deviceID, Action<Access> callback);
}
[Token(Token = "0x2000185")]
public interface IAccountService
{
	[Token(Token = "0x60008D8")]
	int CreateAccount(Account account, Action<Account> callback);

	[Token(Token = "0x60008D9")]
	void UpdateAccount(Account account);

	[Token(Token = "0x60008DA")]
	void GetAccount(int accountID, Action<Account> callback);
}
[Token(Token = "0x2000186")]
public interface IInventoryService
{
	[Token(Token = "0x60008DB")]
	int CreateInventory(Inventory inventory, Action<Inventory> callback);

	[Token(Token = "0x60008DC")]
	void UpdateInventory(Inventory inventory);

	[Token(Token = "0x60008DD")]
	void GetInventory(int inventoryID, Action<Inventory> callback);
}
[Token(Token = "0x2000187")]
public interface IMediaService
{
	[Token(Token = "0x60008DE")]
	int CreateMedia(MediaRequest media, Action<Media> callback);

	[Token(Token = "0x60008DF")]
	void GetMedia(int mediaID, Action<Media> callback);

	[Token(Token = "0x60008E0")]
	void DownloadMedia(int mediaID, string path, Action<object, string> callback);
}
[Token(Token = "0x2000188")]
public interface IPerformanceService
{
	[Token(Token = "0x60008E1")]
	int CreatePerformance(Performance performance, Action<Performance> callback);

	[Token(Token = "0x60008E2")]
	void UpdatePerformance(Performance performance);

	[Token(Token = "0x60008E3")]
	void GetPerformance(int performanceID, Action<Performance> callback);
}
[Serializable]
[Token(Token = "0x2000189")]
internal class MemoryResponse
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Memory[] results;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x91C66C", Offset = "0x91C66C", VA = "0x91C66C")]
	public MemoryResponse()
	{
	}
}
[Token(Token = "0x200018A")]
internal class NetworkAccessService : AbstractNetwork, IAccessService
{
	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF18", Offset = "0x68BF18")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Access> callback;

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x9224D0", Offset = "0x9224D0", VA = "0x9224D0")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x923084", Offset = "0x923084", VA = "0x923084")]
		internal void <CreateAccess>b__0(Access res)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF28", Offset = "0x68BF28")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Exception> <>9__1_1;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Exception> <>9__2_1;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<RequestException, int> <>9__3_2;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Access> <>9__3_0;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<Exception> <>9__3_1;

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x922D58", Offset = "0x922D58", VA = "0x922D58")]
		public <>c()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x922D60", Offset = "0x922D60", VA = "0x922D60")]
		internal void <CreateAccess>b__1_1(Exception err)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x922DEC", Offset = "0x922DEC", VA = "0x922DEC")]
		internal void <GetAccess>b__2_1(Exception err)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x922E78", Offset = "0x922E78", VA = "0x922E78")]
		internal void <UpdateAccess>b__3_2(RequestException err, int retries)
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x922F74", Offset = "0x922F74", VA = "0x922F74")]
		internal void <UpdateAccess>b__3_0(Access res)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x922FF8", Offset = "0x922FF8", VA = "0x922FF8")]
		internal void <UpdateAccess>b__3_1(Exception err)
		{
		}
	}

	[Token(Token = "0x20002C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF38", Offset = "0x68BF38")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Access> callback;

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x9227EC", Offset = "0x9227EC", VA = "0x9227EC")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x9230F4", Offset = "0x9230F4", VA = "0x9230F4")]
		internal void <GetAccess>b__0(Access res)
		{
		}
	}

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomCertificateHandler certHandler;

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x9221A4", Offset = "0x9221A4", VA = "0x9221A4", Slot = "4")]
	public int CreateAccess(Access access, Action<Access> callback)
	{
		return default(int);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x9224D8", Offset = "0x9224D8", VA = "0x9224D8", Slot = "6")]
	public void GetAccess(int accountID, Action<Access> callback)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x9227F4", Offset = "0x9227F4", VA = "0x9227F4", Slot = "5")]
	public void UpdateAccess(Access access)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x922C8C", Offset = "0x922C8C", VA = "0x922C8C")]
	public NetworkAccessService()
	{
	}
}
[Serializable]
[Token(Token = "0x200018B")]
internal class NetworkAccountService : AbstractNetwork, IAccountService
{
	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF48", Offset = "0x68BF48")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Account> callback;

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x923490", Offset = "0x923490", VA = "0x923490")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x924044", Offset = "0x924044", VA = "0x924044")]
		internal void <CreateAccount>b__0(Account res)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF58", Offset = "0x68BF58")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Exception> <>9__1_1;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<RequestException, int> <>9__2_2;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Account> <>9__2_0;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Exception> <>9__2_1;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<Exception> <>9__3_1;

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x923D18", Offset = "0x923D18", VA = "0x923D18")]
		public <>c()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x923D20", Offset = "0x923D20", VA = "0x923D20")]
		internal void <CreateAccount>b__1_1(Exception err)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x923DAC", Offset = "0x923DAC", VA = "0x923DAC")]
		internal void <UpdateAccount>b__2_2(RequestException err, int retries)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x923EA8", Offset = "0x923EA8", VA = "0x923EA8")]
		internal void <UpdateAccount>b__2_0(Account res)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x923F2C", Offset = "0x923F2C", VA = "0x923F2C")]
		internal void <UpdateAccount>b__2_1(Exception err)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x923FB8", Offset = "0x923FB8", VA = "0x923FB8")]
		internal void <GetAccount>b__3_1(Exception err)
		{
		}
	}

	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF68", Offset = "0x68BF68")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Account> callback;

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x923C44", Offset = "0x923C44", VA = "0x923C44")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x9240B4", Offset = "0x9240B4", VA = "0x9240B4")]
		internal void <GetAccount>b__0(Account res)
		{
		}
	}

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomCertificateHandler certHandler;

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x923164", Offset = "0x923164", VA = "0x923164", Slot = "4")]
	public int CreateAccount(Account account, Action<Account> callback)
	{
		return default(int);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x923498", Offset = "0x923498", VA = "0x923498", Slot = "5")]
	public void UpdateAccount(Account account)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x923930", Offset = "0x923930", VA = "0x923930", Slot = "6")]
	public void GetAccount(int accountID, Action<Account> callback)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x923C4C", Offset = "0x923C4C", VA = "0x923C4C")]
	public NetworkAccountService()
	{
	}
}
[Token(Token = "0x200018C")]
internal class NetworkDeviceService : AbstractNetwork, IDeviceService
{
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF78", Offset = "0x68BF78")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Device> callback;

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x924450", Offset = "0x924450", VA = "0x924450")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x925384", Offset = "0x925384", VA = "0x925384")]
		internal void <CreateDevice>b__0(Device res)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF88", Offset = "0x68BF88")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Exception> <>9__1_1;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Exception> <>9__2_1;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Exception> <>9__3_1;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<RequestException, int> <>9__4_2;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<Device> <>9__4_0;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<Exception> <>9__4_1;

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x924FCC", Offset = "0x924FCC", VA = "0x924FCC")]
		public <>c()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x924FD4", Offset = "0x924FD4", VA = "0x924FD4")]
		internal void <CreateDevice>b__1_1(Exception err)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x925060", Offset = "0x925060", VA = "0x925060")]
		internal void <GetDevice>b__2_1(Exception err)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x9250EC", Offset = "0x9250EC", VA = "0x9250EC")]
		internal void <GetDevice>b__3_1(Exception err)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x925178", Offset = "0x925178", VA = "0x925178")]
		internal void <UpdateDevice>b__4_2(RequestException err, int retries)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x925274", Offset = "0x925274", VA = "0x925274")]
		internal void <UpdateDevice>b__4_0(Device res)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x9252F8", Offset = "0x9252F8", VA = "0x9252F8")]
		internal void <UpdateDevice>b__4_1(Exception err)
		{
		}
	}

	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BF98", Offset = "0x68BF98")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Device[]> callback;

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x924744", Offset = "0x924744", VA = "0x924744")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x9253F4", Offset = "0x9253F4", VA = "0x9253F4")]
		internal void <GetDevice>b__0(DeviceResponse res)
		{
		}
	}

	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BFA8", Offset = "0x68BFA8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Device> callback;

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x924A60", Offset = "0x924A60", VA = "0x924A60")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x925474", Offset = "0x925474", VA = "0x925474")]
		internal void <GetDevice>b__0(Device res)
		{
		}
	}

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomCertificateHandler certHandler;

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x924124", Offset = "0x924124", VA = "0x924124", Slot = "4")]
	public int CreateDevice(Device device, Action<Device> callback)
	{
		return default(int);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x924458", Offset = "0x924458", VA = "0x924458", Slot = "6")]
	public void GetDevice(string UUID, Action<Device[]> callback)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x92474C", Offset = "0x92474C", VA = "0x92474C", Slot = "7")]
	public void GetDevice(int deviceID, Action<Device> callback)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x924A68", Offset = "0x924A68", VA = "0x924A68", Slot = "5")]
	public void UpdateDevice(Device device)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x924F00", Offset = "0x924F00", VA = "0x924F00")]
	public NetworkDeviceService()
	{
	}
}
[Serializable]
[Token(Token = "0x200018D")]
internal class NetworkInventoryService : AbstractNetwork, IInventoryService
{
	[Token(Token = "0x20002C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BFB8", Offset = "0x68BFB8")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Inventory> callback;

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x925810", Offset = "0x925810", VA = "0x925810")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x9263C4", Offset = "0x9263C4", VA = "0x9263C4")]
		internal void <CreateInventory>b__0(Inventory res)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BFC8", Offset = "0x68BFC8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Exception> <>9__1_1;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<RequestException, int> <>9__2_2;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Inventory> <>9__2_0;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Exception> <>9__2_1;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<Exception> <>9__3_1;

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x926098", Offset = "0x926098", VA = "0x926098")]
		public <>c()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x9260A0", Offset = "0x9260A0", VA = "0x9260A0")]
		internal void <CreateInventory>b__1_1(Exception err)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x92612C", Offset = "0x92612C", VA = "0x92612C")]
		internal void <UpdateInventory>b__2_2(RequestException err, int retries)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x926228", Offset = "0x926228", VA = "0x926228")]
		internal void <UpdateInventory>b__2_0(Inventory res)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x9262AC", Offset = "0x9262AC", VA = "0x9262AC")]
		internal void <UpdateInventory>b__2_1(Exception err)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x926338", Offset = "0x926338", VA = "0x926338")]
		internal void <GetInventory>b__3_1(Exception err)
		{
		}
	}

	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BFD8", Offset = "0x68BFD8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Inventory> callback;

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x925FC4", Offset = "0x925FC4", VA = "0x925FC4")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x926434", Offset = "0x926434", VA = "0x926434")]
		internal void <GetInventory>b__0(Inventory res)
		{
		}
	}

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomCertificateHandler certHandler;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x9254E4", Offset = "0x9254E4", VA = "0x9254E4", Slot = "4")]
	public int CreateInventory(Inventory inventory, Action<Inventory> callback)
	{
		return default(int);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x925818", Offset = "0x925818", VA = "0x925818", Slot = "5")]
	public void UpdateInventory(Inventory inventory)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x925CB0", Offset = "0x925CB0", VA = "0x925CB0", Slot = "6")]
	public void GetInventory(int inventoryID, Action<Inventory> callback)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x925FCC", Offset = "0x925FCC", VA = "0x925FCC")]
	public NetworkInventoryService()
	{
	}
}
[Serializable]
[Token(Token = "0x200018E")]
internal class NetworkMediaService : AbstractNetwork, IMediaService
{
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BFE8", Offset = "0x68BFE8")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Media> callback;

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x926964", Offset = "0x926964", VA = "0x926964")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x927470", Offset = "0x927470", VA = "0x927470")]
		internal void <CreateMedia>b__0(ResponseHelper res)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68BFF8", Offset = "0x68BFF8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Exception> <>9__1_1;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Exception> <>9__2_1;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<RequestException, int> <>9__3_2;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Exception> <>9__3_1;

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x9271C8", Offset = "0x9271C8", VA = "0x9271C8")]
		public <>c()
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x9271D0", Offset = "0x9271D0", VA = "0x9271D0")]
		internal void <CreateMedia>b__1_1(Exception err)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x92725C", Offset = "0x92725C", VA = "0x92725C")]
		internal void <GetMedia>b__2_1(Exception err)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x9272E8", Offset = "0x9272E8", VA = "0x9272E8")]
		internal void <DownloadMedia>b__3_2(RequestException err, int retries)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x9273E4", Offset = "0x9273E4", VA = "0x9273E4")]
		internal void <DownloadMedia>b__3_1(Exception err)
		{
		}
	}

	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C008", Offset = "0x68C008")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Media> callback;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x926C80", Offset = "0x926C80", VA = "0x926C80")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x927540", Offset = "0x927540", VA = "0x927540")]
		internal void <GetMedia>b__0(Media res)
		{
		}
	}

	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C018", Offset = "0x68C018")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<object, string> callback;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x9270F4", Offset = "0x9270F4", VA = "0x9270F4")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x9275B0", Offset = "0x9275B0", VA = "0x9275B0")]
		internal void <DownloadMedia>b__0(ResponseHelper res)
		{
		}
	}

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomCertificateHandler certHandler;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x9264A4", Offset = "0x9264A4", VA = "0x9264A4", Slot = "4")]
	public int CreateMedia(MediaRequest media, Action<Media> callback)
	{
		return default(int);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x92696C", Offset = "0x92696C", VA = "0x92696C", Slot = "5")]
	public void GetMedia(int mediaID, Action<Media> callback)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x926C88", Offset = "0x926C88", VA = "0x926C88", Slot = "6")]
	public void DownloadMedia(int mediaID, string path, Action<object, string> callback)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x9270FC", Offset = "0x9270FC", VA = "0x9270FC")]
	public NetworkMediaService()
	{
	}
}
[Token(Token = "0x200018F")]
internal class NetworkMemoryService : AbstractNetwork, IMemoryService
{
	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C028", Offset = "0x68C028")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Memory, string> callback;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x9279C8", Offset = "0x9279C8", VA = "0x9279C8")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x928C78", Offset = "0x928C78", VA = "0x928C78")]
		internal void <CreateMemory>b__0(Memory res)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C038", Offset = "0x68C038")]
	private sealed class <>c
	{
		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Exception> <>9__1_1;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Exception> <>9__2_1;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Exception> <>9__3_1;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Exception> <>9__4_1;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<RequestException, int> <>9__5_2;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<Memory> <>9__5_0;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action<Exception> <>9__5_1;

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x928834", Offset = "0x928834", VA = "0x928834")]
		public <>c()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x92883C", Offset = "0x92883C", VA = "0x92883C")]
		internal void <CreateMemory>b__1_1(Exception err)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x9288C8", Offset = "0x9288C8", VA = "0x9288C8")]
		internal void <GetMemories>b__2_1(Exception err)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x928954", Offset = "0x928954", VA = "0x928954")]
		internal void <GetMemory>b__3_1(Exception err)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x9289E0", Offset = "0x9289E0", VA = "0x9289E0")]
		internal void <GetSharedMemories>b__4_1(Exception err)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x928A6C", Offset = "0x928A6C", VA = "0x928A6C")]
		internal void <UpdateMemory>b__5_2(RequestException err, int retries)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x928B68", Offset = "0x928B68", VA = "0x928B68")]
		internal void <UpdateMemory>b__5_0(Memory res)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x928BEC", Offset = "0x928BEC", VA = "0x928BEC")]
		internal void <UpdateMemory>b__5_1(Exception err)
		{
		}
	}

	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C048", Offset = "0x68C048")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Memory[]> callback;

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x927CE4", Offset = "0x927CE4", VA = "0x927CE4")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x928CF0", Offset = "0x928CF0", VA = "0x928CF0")]
		internal void <GetMemories>b__0(MemoryResponse res)
		{
		}
	}

	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C058", Offset = "0x68C058")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Memory[]> callback;

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x928000", Offset = "0x928000", VA = "0x928000")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x928D70", Offset = "0x928D70", VA = "0x928D70")]
		internal void <GetMemory>b__0(MemoryResponse res)
		{
		}
	}

	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C068", Offset = "0x68C068")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Memory[]> callback;

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x9282C8", Offset = "0x9282C8", VA = "0x9282C8")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x928DF0", Offset = "0x928DF0", VA = "0x928DF0")]
		internal void <GetSharedMemories>b__0(MemoryResponse res)
		{
		}
	}

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomCertificateHandler certHandler;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x927628", Offset = "0x927628", VA = "0x927628", Slot = "4")]
	public int CreateMemory(Memory memory, string name, Action<Memory, string> callback)
	{
		return default(int);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x9279D0", Offset = "0x9279D0", VA = "0x9279D0", Slot = "7")]
	public void GetMemories(int accountID, Action<Memory[]> callback)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x927CEC", Offset = "0x927CEC", VA = "0x927CEC", Slot = "6")]
	public void GetMemory(int mediaID, Action<Memory[]> callback)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x928008", Offset = "0x928008", VA = "0x928008", Slot = "8")]
	public void GetSharedMemories(int accountID, Action<Memory[]> callback)
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x9282D0", Offset = "0x9282D0", VA = "0x9282D0", Slot = "5")]
	public void UpdateMemory(Memory memory)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x928768", Offset = "0x928768", VA = "0x928768")]
	public NetworkMemoryService()
	{
	}
}
[Serializable]
[Token(Token = "0x2000190")]
internal class NetworkPerformanceService : AbstractNetwork, IPerformanceService
{
	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C078", Offset = "0x68C078")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Performance> callback;

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x92919C", Offset = "0x92919C", VA = "0x92919C")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x929D50", Offset = "0x929D50", VA = "0x929D50")]
		internal void <CreatePerformance>b__0(Performance res)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C088", Offset = "0x68C088")]
	private sealed class <>c
	{
		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Exception> <>9__1_1;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<RequestException, int> <>9__2_2;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Performance> <>9__2_0;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Exception> <>9__2_1;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<Exception> <>9__3_1;

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x929A24", Offset = "0x929A24", VA = "0x929A24")]
		public <>c()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x929A2C", Offset = "0x929A2C", VA = "0x929A2C")]
		internal void <CreatePerformance>b__1_1(Exception err)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x929AB8", Offset = "0x929AB8", VA = "0x929AB8")]
		internal void <UpdatePerformance>b__2_2(RequestException err, int retries)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x929BB4", Offset = "0x929BB4", VA = "0x929BB4")]
		internal void <UpdatePerformance>b__2_0(Performance res)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x929C38", Offset = "0x929C38", VA = "0x929C38")]
		internal void <UpdatePerformance>b__2_1(Exception err)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x929CC4", Offset = "0x929CC4", VA = "0x929CC4")]
		internal void <GetPerformance>b__3_1(Exception err)
		{
		}
	}

	[Token(Token = "0x20002D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C098", Offset = "0x68C098")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<Performance> callback;

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x929950", Offset = "0x929950", VA = "0x929950")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x929DC0", Offset = "0x929DC0", VA = "0x929DC0")]
		internal void <GetPerformance>b__0(Performance res)
		{
		}
	}

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CustomCertificateHandler certHandler;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x928E70", Offset = "0x928E70", VA = "0x928E70", Slot = "4")]
	public int CreatePerformance(Performance performance, Action<Performance> callback)
	{
		return default(int);
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x9291A4", Offset = "0x9291A4", VA = "0x9291A4", Slot = "5")]
	public void UpdatePerformance(Performance performance)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x92963C", Offset = "0x92963C", VA = "0x92963C", Slot = "6")]
	public void GetPerformance(int performanceID, Action<Performance> callback)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x929958", Offset = "0x929958", VA = "0x929958")]
	public NetworkPerformanceService()
	{
	}
}
[Token(Token = "0x2000191")]
public class FruiterMgr : MonoBehaviour
{
	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RecipeMgr recipeMgr;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioClip introClip;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpriteRenderer hintSprite;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x88B960", Offset = "0x88B960", VA = "0x88B960")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x88BA54", Offset = "0x88BA54", VA = "0x88BA54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x88BB24", Offset = "0x88BB24", VA = "0x88BB24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x88BC3C", Offset = "0x88BC3C", VA = "0x88BC3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x88BD54", Offset = "0x88BD54", VA = "0x88BD54")]
	private void HandleRecipeChanged()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x88BDB8", Offset = "0x88BDB8", VA = "0x88BDB8")]
	public FruiterMgr()
	{
	}
}
[Token(Token = "0x2000192")]
public class Lid : MonoBehaviour
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onLidClose;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x84A0FC", Offset = "0x84A0FC", VA = "0x84A0FC")]
	public void LidMove(float angle)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x84A120", Offset = "0x84A120", VA = "0x84A120")]
	public void Open()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x84A1D4", Offset = "0x84A1D4", VA = "0x84A1D4")]
	public Lid()
	{
	}
}
[Token(Token = "0x2000193")]
public class Chest : MonoBehaviour
{
	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip openSound;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip medalSound;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> toys;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPoint;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem ps;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem[] randomPS;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem currentPS;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> spawnedIndexes;

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x9909E4", Offset = "0x9909E4", VA = "0x9909E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x990A4C", Offset = "0x990A4C", VA = "0x990A4C")]
	public void CloseChest()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x990AD8", Offset = "0x990AD8", VA = "0x990AD8")]
	private void StopEffect()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x990B08", Offset = "0x990B08", VA = "0x990B08")]
	public void OpenChest()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x990C44", Offset = "0x990C44", VA = "0x990C44")]
	private void PlayRandomEffect()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x9911D4", Offset = "0x9911D4", VA = "0x9911D4")]
	private void PlayEffect()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x9911E8", Offset = "0x9911E8", VA = "0x9911E8")]
	public Chest()
	{
	}
}
[Token(Token = "0x2000194")]
public class Sudoku : MonoBehaviour
{
	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_GridSize;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int[] m_ValueData;

	[Token(Token = "0x1700006B")]
	public int gridSize
	{
		[Token(Token = "0x6000914")]
		[Address(RVA = "0x80C0DC", Offset = "0x80C0DC", VA = "0x80C0DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700006C")]
	public int[] valueData
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0x80C0E4", Offset = "0x80C0E4", VA = "0x80C0E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x80C0EC", Offset = "0x80C0EC", VA = "0x80C0EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x80C0F0", Offset = "0x80C0F0", VA = "0x80C0F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x80C0F4", Offset = "0x80C0F4", VA = "0x80C0F4")]
	public void GenSimpleSudoku(int n)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x80C204", Offset = "0x80C204", VA = "0x80C204")]
	public void GenSimpleSudokuRand(int n)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x80C320", Offset = "0x80C320", VA = "0x80C320")]
	public void SwapRowOrColumn(int mode, int a, int b)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x80C348", Offset = "0x80C348", VA = "0x80C348")]
	private void SwapRow(int a, int b)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x80C484", Offset = "0x80C484", VA = "0x80C484")]
	private void SwapColumn(int a, int b)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x80C5C0", Offset = "0x80C5C0", VA = "0x80C5C0")]
	public Sudoku()
	{
	}
}
[Token(Token = "0x2000195")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x68B784", Offset = "0x68B784")]
public class SudokuInfo : ScriptableObject
{
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int grade;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int size;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool[] ItemVisible;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Texture> textures;

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x80C5C8", Offset = "0x80C5C8", VA = "0x80C5C8")]
	public SudokuInfo()
	{
	}
}
[Token(Token = "0x2000196")]
public class SudokuItem : MonoBehaviour
{
	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture defaultTexture;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material outline;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Texture> symbols;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int code;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer render;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isVisible;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material item;

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x80C5D0", Offset = "0x80C5D0", VA = "0x80C5D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x80C644", Offset = "0x80C644", VA = "0x80C644")]
	public void Change()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x80C764", Offset = "0x80C764", VA = "0x80C764")]
	private Texture GetSymbolTexture(int code)
	{
		return null;
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x80C7E4", Offset = "0x80C7E4", VA = "0x80C7E4")]
	internal void SetItemInfo(int value, bool visible, List<Texture> textures)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x80C700", Offset = "0x80C700", VA = "0x80C700")]
	private void updateTexture()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x80C900", Offset = "0x80C900", VA = "0x80C900")]
	public SudokuItem()
	{
	}
}
[Token(Token = "0x2000197")]
public class SudokuMgr : MonoBehaviour
{
	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, int> onUpgrade;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SudokuInfo[] levels;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool contentByGrade;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnLevelEnd;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] groups;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<SudokuInfo> levelsOfGrade;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SudokuInfo currentInfo;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Sudoku sudoku;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SudokuItem[] items;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] values;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentGrade;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentLevel;

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x80C908", Offset = "0x80C908", VA = "0x80C908")]
	private void Start()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x80CBE8", Offset = "0x80CBE8", VA = "0x80CBE8")]
	private List<SudokuInfo> GetLevelsOfGrade(int grade)
	{
		return null;
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x80CAD0", Offset = "0x80CAD0", VA = "0x80CAD0")]
	private void EnableGroups(int grade)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x80CD40", Offset = "0x80CD40", VA = "0x80CD40")]
	private void NextLevel()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x80CFD4", Offset = "0x80CFD4", VA = "0x80CFD4")]
	private void SetSudokuItems(SudokuInfo currentInfo)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x80D140", Offset = "0x80D140", VA = "0x80D140")]
	public void CheckAnswer()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x80D2A4", Offset = "0x80D2A4", VA = "0x80D2A4")]
	public SudokuMgr()
	{
	}
}
[Token(Token = "0x2000198")]
public class SymbolMgr : MonoBehaviour
{
	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text leftNum;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text rightNum;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Container symbolContainer;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string symbol;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> nums;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int size;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int level;

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x80D2AC", Offset = "0x80D2AC", VA = "0x80D2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x80D49C", Offset = "0x80D49C", VA = "0x80D49C")]
	private void Update()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x80D5F4", Offset = "0x80D5F4", VA = "0x80D5F4")]
	private bool CheckResult()
	{
		return default(bool);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x80D744", Offset = "0x80D744", VA = "0x80D744")]
	private bool GetSymbol()
	{
		return default(bool);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x80D63C", Offset = "0x80D63C", VA = "0x80D63C")]
	private List<int> GetNums()
	{
		return null;
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x80D870", Offset = "0x80D870", VA = "0x80D870")]
	private bool CheckEquation(List<int> nums)
	{
		return default(bool);
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x80D380", Offset = "0x80D380", VA = "0x80D380")]
	private void NextLevel()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x80DC20", Offset = "0x80DC20", VA = "0x80DC20")]
	public SymbolMgr()
	{
	}
}
[Token(Token = "0x2000199")]
public class NextLevelButton : SNButton
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action onButtonDown;

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x92A0A0", Offset = "0x92A0A0", VA = "0x92A0A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x92A118", Offset = "0x92A118", VA = "0x92A118")]
	public NextLevelButton()
	{
	}
}
[Token(Token = "0x200019A")]
public class Tangram : MonoSingleton<Tangram>
{
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C0A8", Offset = "0x68C0A8")]
	private sealed class <ReadConfigFile>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filepath;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Tangram <>4__this;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700019A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x818B60", Offset = "0x818B60", VA = "0x818B60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x818BD0", Offset = "0x818BD0", VA = "0x818BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x817D4C", Offset = "0x817D4C", VA = "0x817D4C")]
		[DebuggerHidden]
		public <ReadConfigFile>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x8187B8", Offset = "0x8187B8", VA = "0x8187B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x818894", Offset = "0x818894", VA = "0x818894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x8187D4", Offset = "0x8187D4", VA = "0x8187D4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x818B68", Offset = "0x818B68", VA = "0x818B68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<int, List<List<Vector3>>> answers;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string cfg_file;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float pi;

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x817C18", Offset = "0x817C18", VA = "0x817C18", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x817C84", Offset = "0x817C84", VA = "0x817C84")]
	private void Init()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x817CB4", Offset = "0x817CB4", VA = "0x817CB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x69186C", Offset = "0x69186C")]
	private IEnumerator ReadConfigFile(string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x817D78", Offset = "0x817D78", VA = "0x817D78")]
	private int LoadFeatureVectors(string[] lines)
	{
		return default(int);
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x818120", Offset = "0x818120", VA = "0x818120")]
	public List<Vector3> GetFeatureVector(Vector3[] positions, float[] rotations)
	{
		return null;
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x818444", Offset = "0x818444", VA = "0x818444")]
	public int CompareFeatureVector(List<Vector3> fv1, List<Vector3> fv2, Vector3 delta)
	{
		return default(int);
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x818628", Offset = "0x818628", VA = "0x818628")]
	public int MatchFeatureVector(List<Vector3> fv, List<List<Vector3>> fvList, Vector3 delta)
	{
		return default(int);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x818714", Offset = "0x818714", VA = "0x818714")]
	public Tangram()
	{
	}
}
[Token(Token = "0x200019B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x68B7C8", Offset = "0x68B7C8")]
public class TangramItem : ScriptableObject
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int grade;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int levelOfGrade;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite image;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite hintImage;

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x818BD8", Offset = "0x818BD8", VA = "0x818BD8")]
	public TangramItem()
	{
	}
}
[Token(Token = "0x200019C")]
public class TangramMgr : MonoBehaviour
{
	[Token(Token = "0x20002D9")]
	public class TangramInfo
	{
		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] positions;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] rotations;

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xEE2BF8", Offset = "0xEE2BF8", VA = "0xEE2BF8")]
		public TangramInfo()
		{
		}
	}

	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C0B8", Offset = "0x68C0B8")]
	private sealed class <InitLevelsFromFile>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string filepath;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TangramMgr <>4__this;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x1700019C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0xEE2B80", Offset = "0xEE2B80", VA = "0xEE2B80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001093")]
			[Address(RVA = "0xEE2BF0", Offset = "0xEE2BF0", VA = "0xEE2BF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xEE2790", Offset = "0xEE2790", VA = "0xEE2790")]
		[DebuggerHidden]
		public <InitLevelsFromFile>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xEE27BC", Offset = "0xEE27BC", VA = "0xEE27BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xEE2898", Offset = "0xEE2898", VA = "0xEE2898", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xEE27D8", Offset = "0xEE27D8", VA = "0xEE27D8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xEE2B88", Offset = "0xEE2B88", VA = "0xEE2B88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TangramItem[] items;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip rightSound;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip wrongSound;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, int> onUpgrade;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<int, int> onAnswerRight;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<int, int> onAnswerWrong;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] parts;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 delta;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentGrade;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int currentLevelOfGrade;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string cfgfilepath;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, Dictionary<int, string>> levels;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> feature;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isChallenge;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TangramItem currentItem;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool levelFileLoaded;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x818BE0", Offset = "0x818BE0", VA = "0x818BE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x818DCC", Offset = "0x818DCC", VA = "0x818DCC")]
	private void LoadHint()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x818EC0", Offset = "0x818EC0", VA = "0x818EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x818FDC", Offset = "0x818FDC", VA = "0x818FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x818FE0", Offset = "0x818FE0", VA = "0x818FE0")]
	private List<Vector3> GetFeature(Transform[] parts)
	{
		return null;
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x81905C", Offset = "0x81905C", VA = "0x81905C")]
	private Vector3[] GetPositions(Transform[] parts)
	{
		return null;
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x819184", Offset = "0x819184", VA = "0x819184")]
	private float[] GetLocalRotations(Transform[] parts)
	{
		return null;
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x81928C", Offset = "0x81928C", VA = "0x81928C")]
	private Vector3[] GetRotations(Transform[] parts)
	{
		return null;
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x8193D4", Offset = "0x8193D4", VA = "0x8193D4")]
	public TangramInfo GetTangramInfo()
	{
		return null;
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x819474", Offset = "0x819474", VA = "0x819474")]
	public void SetTangramInfo(TangramInfo info)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x819618", Offset = "0x819618", VA = "0x819618")]
	private void InitLevels()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x818F44", Offset = "0x818F44", VA = "0x818F44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6918D0", Offset = "0x6918D0")]
	private IEnumerator InitLevelsFromFile(string filepath)
	{
		return null;
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x819C08", Offset = "0x819C08", VA = "0x819C08")]
	private void DoInitLevels(string[] lines)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x819F00", Offset = "0x819F00", VA = "0x819F00")]
	public void SetNextLevel()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x8199A0", Offset = "0x8199A0", VA = "0x8199A0")]
	private string GetGradeText(int currentGrade)
	{
		return null;
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x81A3D0", Offset = "0x81A3D0", VA = "0x81A3D0")]
	public void OnButtonDown()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x81A868", Offset = "0x81A868", VA = "0x81A868")]
	private void TakePictureHint()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x819A9C", Offset = "0x819A9C", VA = "0x819A9C")]
	private void LoadLevel()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x81A900", Offset = "0x81A900", VA = "0x81A900")]
	private TangramItem GetTangramItem(string name)
	{
		return null;
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x81A768", Offset = "0x81A768", VA = "0x81A768")]
	private int CheckResult()
	{
		return default(int);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x81AA04", Offset = "0x81AA04", VA = "0x81AA04")]
	private int CaculateIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x81AAD4", Offset = "0x81AAD4", VA = "0x81AAD4")]
	public void DisplayHint()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x81ABD4", Offset = "0x81ABD4", VA = "0x81ABD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x81AD88", Offset = "0x81AD88", VA = "0x81AD88")]
	public TangramMgr()
	{
	}
}
[Token(Token = "0x200019D")]
public class AbsorbController : MonoBehaviour
{
	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	internal InputHandler.ControllerType controller;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform origin;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform prefab;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform hintObj;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Interactor grabber;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 hintObjPos;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 extents;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Interactable grabbable;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material guidingMaterial;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GridsMgr gridsMgr;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x9805E8", Offset = "0x9805E8", VA = "0x9805E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x98089C", Offset = "0x98089C", VA = "0x98089C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x980A6C", Offset = "0x980A6C", VA = "0x980A6C")]
	private void UpdateGrid()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x980E04", Offset = "0x980E04", VA = "0x980E04")]
	private void AbsorbGrid(Vector3[] gridCoords, int[] currentGrids)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x980AC0", Offset = "0x980AC0", VA = "0x980AC0")]
	private void DisplayHintCube(Vector3[] gridCoords, int[] currentGrids)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x9811FC", Offset = "0x9811FC", VA = "0x9811FC")]
	private int GetGridIndex(Vector3[] gridCoords)
	{
		return default(int);
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x981398", Offset = "0x981398", VA = "0x981398")]
	public AbsorbController()
	{
	}
}
[Token(Token = "0x200019E")]
public class GridsMgr : MonoBehaviour
{
	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gridSize;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform origin;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform prefab;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] currentGrids;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] gridCoords;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float scale;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, List<Transform>> cubes;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x89189C", Offset = "0x89189C", VA = "0x89189C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x891AF4", Offset = "0x891AF4", VA = "0x891AF4")]
	public int[] GetCurrentGrids()
	{
		return null;
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x891AFC", Offset = "0x891AFC", VA = "0x891AFC")]
	internal void SetCurrentGrids(int[] gridsInfo)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x891B04", Offset = "0x891B04", VA = "0x891B04")]
	public Vector3[] GetGridCoords()
	{
		return null;
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x891B0C", Offset = "0x891B0C", VA = "0x891B0C")]
	internal void GenerateCubes(int[] gridsInfo)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x89207C", Offset = "0x89207C", VA = "0x89207C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x892184", Offset = "0x892184", VA = "0x892184")]
	private void Start()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x8919AC", Offset = "0x8919AC", VA = "0x8919AC")]
	private void InitCoordinates()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x89229C", Offset = "0x89229C", VA = "0x89229C")]
	internal void RemoveCube(Transform transform)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x89240C", Offset = "0x89240C", VA = "0x89240C")]
	public void AddCube(int index, Interactable grabbable)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x891EC4", Offset = "0x891EC4", VA = "0x891EC4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x892540", Offset = "0x892540", VA = "0x892540")]
	public int[] GetCubeTopView(int n, int[] gridconf)
	{
		return null;
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x892678", Offset = "0x892678", VA = "0x892678")]
	public int[] GetCubeFrontView(int n, int[] gridconf)
	{
		return null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x892B18", Offset = "0x892B18", VA = "0x892B18")]
	public int[] GetCubeSideView(int n, int[] gridconf)
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x892FBC", Offset = "0x892FBC", VA = "0x892FBC")]
	private int GetMaxLayerRaw(int[] gridconf)
	{
		return default(int);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x89305C", Offset = "0x89305C", VA = "0x89305C")]
	public GridsMgr()
	{
	}
}
[Token(Token = "0x200019F")]
public class ThreeViewMgr : MonoBehaviour
{
	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite rightHint;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite wrongHint;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip answerright;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip answerwrong;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip rightSound;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip wrongSound;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite[] sprites;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int index;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GridsMgr gridsMgr;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, int> levels;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentGrade;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int currentLevelOfGrade;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int errorCode;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SpriteRenderer[] resultHints;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isChallenge;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int, int> onUpgrade;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<int, int> onAnswerRight;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<int, int> onAnswerWrong;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float lastTime;

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xEE89F8", Offset = "0xEE89F8", VA = "0xEE89F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xEE8A54", Offset = "0xEE8A54", VA = "0xEE8A54")]
	private void InitLevelConfigs()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xEE8CB0", Offset = "0xEE8CB0", VA = "0xEE8CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xEE9010", Offset = "0xEE9010", VA = "0xEE9010")]
	private void LoadHint()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xEE9184", Offset = "0xEE9184", VA = "0xEE9184")]
	private void InitLevel()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xEE96B0", Offset = "0xEE96B0", VA = "0xEE96B0")]
	public void OnButtonDown()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xEE9FF4", Offset = "0xEE9FF4", VA = "0xEE9FF4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xEE8C00", Offset = "0xEE8C00", VA = "0xEE8C00")]
	private int CaculateIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xEE9B64", Offset = "0xEE9B64", VA = "0xEE9B64")]
	private void SetNextLevel()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xEEA034", Offset = "0xEEA034", VA = "0xEEA034")]
	private string GetGradeText(int currentGrade)
	{
		return null;
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xEE92CC", Offset = "0xEE92CC", VA = "0xEE92CC")]
	private void LoadLevel(int level)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xEE99F4", Offset = "0xEE99F4", VA = "0xEE99F4")]
	private bool CheckResult(int level)
	{
		return default(bool);
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xEEA130", Offset = "0xEEA130", VA = "0xEEA130")]
	private void DisplayThreeViewResult(int[] expected, int[] actual)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xEEA4AC", Offset = "0xEEA4AC", VA = "0xEEA4AC")]
	private void ResetResultHints()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xEEA3DC", Offset = "0xEEA3DC", VA = "0xEEA3DC")]
	private int CompareIntArray(int[] a, int[] b)
	{
		return default(int);
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xEEA50C", Offset = "0xEEA50C", VA = "0xEEA50C")]
	public ThreeViewMgr()
	{
	}
}
[Token(Token = "0x20001A0")]
public class VendingController : MonoBehaviour
{
	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip sound;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ButtonInteractable[] buttons;

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xEEB744", Offset = "0xEEB744", VA = "0xEEB744")]
	private void Start()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xEEB8A0", Offset = "0xEEB8A0", VA = "0xEEB8A0")]
	public void OnDragBegin()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xEEB9E8", Offset = "0xEEB9E8", VA = "0xEEB9E8")]
	public void OnDragEnd()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xEEBAD8", Offset = "0xEEBAD8", VA = "0xEEBAD8")]
	public VendingController()
	{
	}
}
[Token(Token = "0x20001A1")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x98CCE0", Offset = "0x98CCE0", VA = "0x98CCE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x98CDC0", Offset = "0x98CDC0", VA = "0x98CDC0")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x20001A2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B80C", Offset = "0x68B80C")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x98CDD0", Offset = "0x98CDD0", VA = "0x98CDD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x98CE40", Offset = "0x98CE40", VA = "0x98CE40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x98CE54", Offset = "0x98CE54", VA = "0x98CE54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x98CF30", Offset = "0x98CF30", VA = "0x98CF30")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x20001A3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B870", Offset = "0x68B870")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x98CF40", Offset = "0x98CF40", VA = "0x98CF40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x98CFB0", Offset = "0x98CFB0", VA = "0x98CFB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x98D03C", Offset = "0x98D03C", VA = "0x98D03C")]
	private void Update()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x98D1F4", Offset = "0x98D1F4", VA = "0x98D1F4")]
	public CFX_LightIntensityFade()
	{
	}
}
namespace Framework
{
	[Token(Token = "0x20001A4")]
	public abstract class MonoSingleton<T> : MonoBehaviour where T : MonoSingleton<T>
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x600098C")]
		public static T Instance()
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		private static void SetInstance(T value)
		{
		}

		[Token(Token = "0x600098E")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600098F")]
		protected MonoSingleton()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class Singleton<T> where T : class
	{
		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object SyncObject;

		[Token(Token = "0x1700006D")]
		public static T Instance
		{
			[Token(Token = "0x6000990")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000991")]
		public Singleton()
		{
		}
	}
}
namespace Framework.Utility
{
	[Token(Token = "0x20001A6")]
	public static class SerializeTool
	{
		[Token(Token = "0x6000993")]
		public static byte[] BinarySerialize<T>(this T obj) where T : class
		{
			return null;
		}

		[Token(Token = "0x6000994")]
		public static T BinaryDeserialize<T>(this byte[] bytes) where T : class
		{
			return null;
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x887838", Offset = "0x887838", VA = "0x887838")]
		public static bool SerializeXML(string path, object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000996")]
		public static object DeserializeXML<T>(string path)
		{
			return null;
		}

		[Token(Token = "0x6000997")]
		public static string ToJson<T>(this T obj)
		{
			return null;
		}

		[Token(Token = "0x6000998")]
		public static T FromJson<T>(this string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x8879E0", Offset = "0x8879E0", VA = "0x8879E0")]
		public static byte[] StructToBytes(object a, int size)
		{
			return null;
		}

		[Token(Token = "0x600099A")]
		public static byte[] StructToBytes<T>(T obj)
		{
			return null;
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x887AB4", Offset = "0x887AB4", VA = "0x887AB4")]
		public static object BytesToStruct(byte[] bytes, Type type)
		{
			return null;
		}

		[Token(Token = "0x600099C")]
		public static T BytesToStruct<T>(byte[] bytes) where T : struct
		{
			return (T)null;
		}
	}
}
namespace HoloToolkit.Unity
{
	[Token(Token = "0x20001A7")]
	public enum PivotAxis
	{
		[Token(Token = "0x4000950")]
		Free,
		[Token(Token = "0x4000951")]
		Y
	}
	[Token(Token = "0x20001A8")]
	public class Billboard : MonoBehaviour
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68EB20", Offset = "0x68EB20")]
		public PivotAxis PivotAxis;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68EB58", Offset = "0x68EB58")]
		private Transform TargetTransform;

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x8400CC", Offset = "0x8400CC", VA = "0x8400CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x84016C", Offset = "0x84016C", VA = "0x84016C")]
		private void Update()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x840398", Offset = "0x840398", VA = "0x840398")]
		public Billboard()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20001A9")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700006E")]
		public bool Highlight
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x8E29F4", Offset = "0x8E29F4", VA = "0x8E29F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x8E29FC", Offset = "0x8E29FC", VA = "0x8E29FC")]
			set
			{
			}
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x8E2A08", Offset = "0x8E2A08", VA = "0x8E2A08")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x8E2C30", Offset = "0x8E2C30", VA = "0x8E2C30", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x8E2C58", Offset = "0x8E2C58", VA = "0x8E2C58", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x8E2C80", Offset = "0x8E2C80", VA = "0x8E2C80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x8E2AD4", Offset = "0x8E2AD4", VA = "0x8E2AD4")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x8E2F28", Offset = "0x8E2F28", VA = "0x8E2F28")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700006F")]
		public bool InRange
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x8E3890", Offset = "0x8E3890", VA = "0x8E3890")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x8E3898", Offset = "0x8E3898", VA = "0x8E3898")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public bool Targeted
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x8E3AA8", Offset = "0x8E3AA8", VA = "0x8E3AA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x8E3AB0", Offset = "0x8E3AB0", VA = "0x8E3AB0")]
			set
			{
			}
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x8E3ABC", Offset = "0x8E3ABC", VA = "0x8E3ABC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x8E38A4", Offset = "0x8E38A4", VA = "0x8E38A4")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x8E3D1C", Offset = "0x8E3D1C", VA = "0x8E3D1C")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x8E3DB4", Offset = "0x8E3DB4", VA = "0x8E3DB4")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x8E3E54", Offset = "0x8E3E54", VA = "0x8E3E54")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B8E4", Offset = "0x68B8E4")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000071")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x8E3E5C", Offset = "0x8E3E5C", VA = "0x8E3E5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x8E3E64", Offset = "0x8E3E64", VA = "0x8E3E64")]
			set
			{
			}
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x8E3E80", Offset = "0x8E3E80", VA = "0x8E3E80", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x8E4030", Offset = "0x8E4030", VA = "0x8E4030", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x8E4B3C", Offset = "0x8E4B3C", VA = "0x8E4B3C", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x8E5320", Offset = "0x8E5320", VA = "0x8E5320", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x8E5780", Offset = "0x8E5780", VA = "0x8E5780")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x8E4350", Offset = "0x8E4350", VA = "0x8E4350")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x8E5878", Offset = "0x8E5878", VA = "0x8E5878")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x8E5D10", Offset = "0x8E5D10", VA = "0x8E5D10", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x8E5D28", Offset = "0x8E5D28", VA = "0x8E5D28", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x8E5D30", Offset = "0x8E5D30", VA = "0x8E5D30")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002DB")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000EEC")]
			Disabled,
			[Token(Token = "0x4000EED")]
			Enabled,
			[Token(Token = "0x4000EEE")]
			Targeted
		}

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x8E7D6C", Offset = "0x8E7D6C", VA = "0x8E7D6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x8E3C48", Offset = "0x8E3C48", VA = "0x8E3C48")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x8E7DDC", Offset = "0x8E7DDC", VA = "0x8E7DDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x8E7E34", Offset = "0x8E7E34", VA = "0x8E7E34")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x8E7BF0", Offset = "0x8E7BF0", VA = "0x8E7BF0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x8E7CAC", Offset = "0x8E7CAC", VA = "0x8E7CAC")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x8E7D64", Offset = "0x8E7D64", VA = "0x8E7D64")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x8EDC74", Offset = "0x8EDC74", VA = "0x8EDC74")]
		private void Start()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x8EDD40", Offset = "0x8EDD40", VA = "0x8EDD40")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x8EDD4C", Offset = "0x8EDD4C", VA = "0x8EDD4C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x8EDD58", Offset = "0x8EDD58", VA = "0x8EDD58")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x8E11D4", Offset = "0x8E11D4", VA = "0x8E11D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x8E1234", Offset = "0x8E1234", VA = "0x8E1234")]
		private void Update()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x8E1550", Offset = "0x8E1550", VA = "0x8E1550")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x8E166C", Offset = "0x8E166C", VA = "0x8E166C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x8E1238", Offset = "0x8E1238", VA = "0x8E1238")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x8E1780", Offset = "0x8E1780", VA = "0x8E1780")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002DC")]
		public enum ContactTest
		{
			[Token(Token = "0x4000EF0")]
			PerpenTest,
			[Token(Token = "0x4000EF1")]
			BackwardsPress
		}

		[Token(Token = "0x4000978")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000979")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000072")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x8E1818", Offset = "0x8E1818", VA = "0x8E1818", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000073")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60009D0")]
			[Address(RVA = "0x8E1820", Offset = "0x8E1820", VA = "0x8E1820")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x8E182C", Offset = "0x8E182C", VA = "0x8E182C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x8E19A0", Offset = "0x8E19A0", VA = "0x8E19A0")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x8E1BBC", Offset = "0x8E1BBC", VA = "0x8E1BBC")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x8E1D1C", Offset = "0x8E1D1C", VA = "0x8E1D1C")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x8E1E7C", Offset = "0x8E1E7C", VA = "0x8E1E7C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x8E23E8", Offset = "0x8E23E8", VA = "0x8E23E8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x8E2588", Offset = "0x8E2588", VA = "0x8E2588")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x8E2680", Offset = "0x8E2680", VA = "0x8E2680")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x8E27DC", Offset = "0x8E27DC", VA = "0x8E27DC")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68ECD0", Offset = "0x68ECD0")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68ECE0", Offset = "0x68ECE0")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000074")]
		public Collider Collider
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x8E28D0", Offset = "0x8E28D0", VA = "0x8E28D0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691974", Offset = "0x691974")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x8E28D8", Offset = "0x8E28D8", VA = "0x8E28D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691984", Offset = "0x691984")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x8E1664", Offset = "0x8E1664", VA = "0x8E1664", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691994", Offset = "0x691994")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0x8E28E0", Offset = "0x8E28E0", VA = "0x8E28E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6919A4", Offset = "0x6919A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x8E28E8", Offset = "0x8E28E8", VA = "0x8E28E8", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x8E296C", Offset = "0x8E296C", VA = "0x8E296C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x8E29EC", Offset = "0x8E29EC", VA = "0x8E29EC")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000077")]
		Collider Collider
		{
			[Token(Token = "0x60009E1")]
			get;
		}

		[Token(Token = "0x17000078")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60009E2")]
			get;
		}

		[Token(Token = "0x17000079")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60009E3")]
			get;
		}
	}
	[Token(Token = "0x20001B3")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x8E1B08", Offset = "0x8E1B08", VA = "0x8E1B08")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public enum InteractionType
	{
		[Token(Token = "0x400098D")]
		Enter,
		[Token(Token = "0x400098E")]
		Stay,
		[Token(Token = "0x400098F")]
		Exit
	}
	[Token(Token = "0x20001B5")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002DD")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000EF3")]
			Mesh,
			[Token(Token = "0x4000EF4")]
			Skeleton,
			[Token(Token = "0x4000EF5")]
			Both
		}

		[Token(Token = "0x20002DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C0C8", Offset = "0x68C0C8")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700019E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001097")]
				[Address(RVA = "0x8E9030", Offset = "0x8E9030", VA = "0x8E9030", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001099")]
				[Address(RVA = "0x8E90A0", Offset = "0x8E90A0", VA = "0x8E90A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001094")]
			[Address(RVA = "0x8E89DC", Offset = "0x8E89DC", VA = "0x8E89DC")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001095")]
			[Address(RVA = "0x8E8DCC", Offset = "0x8E8DCC", VA = "0x8E8DCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001096")]
			[Address(RVA = "0x8E8DD0", Offset = "0x8E8DD0", VA = "0x8E8DD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001098")]
			[Address(RVA = "0x8E9038", Offset = "0x8E9038", VA = "0x8E9038", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000990")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68ED10", Offset = "0x68ED10")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700007A")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x8E6AB4", Offset = "0x8E6AB4", VA = "0x8E6AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x8E7E3C", Offset = "0x8E7E3C", VA = "0x8E7E3C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x8E77E0", Offset = "0x8E77E0", VA = "0x8E77E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x8E7EB8", Offset = "0x8E7EB8", VA = "0x8E7EB8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x8E7F34", Offset = "0x8E7F34", VA = "0x8E7F34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x8E7F7C", Offset = "0x8E7F7C", VA = "0x8E7F7C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x8E7FF8", Offset = "0x8E7FF8", VA = "0x8E7FF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x8E8040", Offset = "0x8E8040", VA = "0x8E8040")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x8E80BC", Offset = "0x8E80BC", VA = "0x8E80BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x8E8104", Offset = "0x8E8104", VA = "0x8E8104")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x8E6A70", Offset = "0x8E6A70", VA = "0x8E6A70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x8E8180", Offset = "0x8E8180", VA = "0x8E8180")]
			private set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x8E779C", Offset = "0x8E779C", VA = "0x8E779C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x8E81F8", Offset = "0x8E81F8", VA = "0x8E81F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x8E8270", Offset = "0x8E8270", VA = "0x8E8270")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x8E82B4", Offset = "0x8E82B4", VA = "0x8E82B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0x8E832C", Offset = "0x8E832C", VA = "0x8E832C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0x8E8370", Offset = "0x8E8370", VA = "0x8E8370")]
			private set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0x8E83E8", Offset = "0x8E83E8", VA = "0x8E83E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x8E842C", Offset = "0x8E842C", VA = "0x8E842C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x8E3648", Offset = "0x8E3648", VA = "0x8E3648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6919B4", Offset = "0x6919B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x8E84A4", Offset = "0x8E84A4", VA = "0x8E84A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6919C4", Offset = "0x6919C4")]
			private set
			{
			}
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x8E84F8", Offset = "0x8E84F8", VA = "0x8E84F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x8E8908", Offset = "0x8E8908", VA = "0x8E8908")]
		private void Update()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x8E8894", Offset = "0x8E8894", VA = "0x8E8894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6919D4", Offset = "0x6919D4")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x8E3698", Offset = "0x8E3698", VA = "0x8E3698")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x8E8A08", Offset = "0x8E8A08", VA = "0x8E8A08")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x8E7828", Offset = "0x8E7828", VA = "0x8E7828")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x8E68A4", Offset = "0x8E68A4", VA = "0x8E68A4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x8E8CEC", Offset = "0x8E8CEC", VA = "0x8E8CEC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002DF")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x8E9900", Offset = "0x8E9900", VA = "0x8E9900")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000085")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x8E1BB4", Offset = "0x8E1BB4", VA = "0x8E1BB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x8E1BAC", Offset = "0x8E1BAC", VA = "0x8E1BAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x8E1B00", Offset = "0x8E1B00", VA = "0x8E1B00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x8E90A8", Offset = "0x8E90A8", VA = "0x8E90A8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x8E90B0", Offset = "0x8E90B0", VA = "0x8E90B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691A38", Offset = "0x691A38")]
			add
			{
			}
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0x8E919C", Offset = "0x8E919C", VA = "0x8E919C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691A48", Offset = "0x691A48")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0x8E92FC", Offset = "0x8E92FC", VA = "0x8E92FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691A58", Offset = "0x691A58")]
			add
			{
			}
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0x8E93E8", Offset = "0x8E93E8", VA = "0x8E93E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691A68", Offset = "0x691A68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0x8E9548", Offset = "0x8E9548", VA = "0x8E9548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691A78", Offset = "0x691A78")]
			add
			{
			}
			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0x8E9634", Offset = "0x8E9634", VA = "0x8E9634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691A88", Offset = "0x691A88")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x8E9288", Offset = "0x8E9288", VA = "0x8E9288", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x8E94D4", Offset = "0x8E94D4", VA = "0x8E94D4", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x8E9720", Offset = "0x8E9720", VA = "0x8E9720", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000A10")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x8E193C", Offset = "0x8E193C", VA = "0x8E193C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x8E9818", Offset = "0x8E9818", VA = "0x8E9818", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x8E28C8", Offset = "0x8E28C8", VA = "0x8E28C8")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40009A8")]
		None,
		[Token(Token = "0x40009A9")]
		Proximity,
		[Token(Token = "0x40009AA")]
		Contact,
		[Token(Token = "0x40009AB")]
		Action
	}
	[Token(Token = "0x20001B8")]
	public enum InteractableState
	{
		[Token(Token = "0x40009AD")]
		Default,
		[Token(Token = "0x40009AE")]
		ProximityState,
		[Token(Token = "0x40009AF")]
		ContactState,
		[Token(Token = "0x40009B0")]
		ActionState
	}
	[Token(Token = "0x20001B9")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x8E24E4", Offset = "0x8E24E4", VA = "0x8E24E4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000089")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0x8E9950", Offset = "0x8E9950", VA = "0x8E9950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x8E9794", Offset = "0x8E9794", VA = "0x8E9794")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x8E987C", Offset = "0x8E987C", VA = "0x8E987C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x8E99B8", Offset = "0x8E99B8", VA = "0x8E99B8")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C0D8", Offset = "0x68C0D8")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170001A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600109F")]
				[Address(RVA = "0x8EAD58", Offset = "0x8EAD58", VA = "0x8EAD58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A1")]
				[Address(RVA = "0x8EADC8", Offset = "0x8EADC8", VA = "0x8EADC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600109B")]
			[Address(RVA = "0x8EA74C", Offset = "0x8EA74C", VA = "0x8EA74C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600109C")]
			[Address(RVA = "0x8EA8F8", Offset = "0x8EA8F8", VA = "0x8EA8F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600109D")]
			[Address(RVA = "0x8EA96C", Offset = "0x8EA96C", VA = "0x8EA96C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600109E")]
			[Address(RVA = "0x8EA914", Offset = "0x8EA914", VA = "0x8EA914")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x8EAD60", Offset = "0x8EAD60", VA = "0x8EAD60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x8EA61C", Offset = "0x8EA61C", VA = "0x8EA61C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x8EA698", Offset = "0x8EA698", VA = "0x8EA698")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691A98", Offset = "0x691A98")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x8EA778", Offset = "0x8EA778", VA = "0x8EA778")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x8EA8F0", Offset = "0x8EA8F0", VA = "0x8EA8F0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700008A")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000A1E")]
			[Address(RVA = "0x8E61C4", Offset = "0x8E61C4", VA = "0x8E61C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x8E634C", Offset = "0x8E634C", VA = "0x8E634C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x8EADD0", Offset = "0x8EADD0", VA = "0x8EADD0")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x8EAEA4", Offset = "0x8EAEA4", VA = "0x8EAEA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x8EB224", Offset = "0x8EB224", VA = "0x8EB224")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x8EB26C", Offset = "0x8EB26C", VA = "0x8EB26C")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x8EB610", Offset = "0x8EB610", VA = "0x8EB610")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x8EB75C", Offset = "0x8EB75C", VA = "0x8EB75C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C0E8", Offset = "0x68C0E8")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170001A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010A5")]
				[Address(RVA = "0x8E7A84", Offset = "0x8E7A84", VA = "0x8E7A84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010A7")]
				[Address(RVA = "0x8E7AF4", Offset = "0x8E7AF4", VA = "0x8E7AF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x8E649C", Offset = "0x8E649C", VA = "0x8E649C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x8E7358", Offset = "0x8E7358", VA = "0x8E7358", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010A4")]
			[Address(RVA = "0x8E735C", Offset = "0x8E735C", VA = "0x8E735C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x8E7A8C", Offset = "0x8E7A8C", VA = "0x8E7A8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009C0")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700008B")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0x8E6068", Offset = "0x8E6068", VA = "0x8E6068", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700008C")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000A27")]
			[Address(RVA = "0x8E6070", Offset = "0x8E6070", VA = "0x8E6070", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700008D")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x8E6078", Offset = "0x8E6078", VA = "0x8E6078", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		public override bool EnableState
		{
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x8E6080", Offset = "0x8E6080", VA = "0x8E6080", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x8E60C8", Offset = "0x8E60C8", VA = "0x8E60C8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x8E6118", Offset = "0x8E6118", VA = "0x8E6118", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x8E6428", Offset = "0x8E6428", VA = "0x8E6428")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691AFC", Offset = "0x691AFC")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x8E64C8", Offset = "0x8E64C8", VA = "0x8E64C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x8E6B10", Offset = "0x8E6B10", VA = "0x8E6B10")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x8E6DC8", Offset = "0x8E6DC8", VA = "0x8E6DC8")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x8E6F40", Offset = "0x8E6F40", VA = "0x8E6F40", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x8E722C", Offset = "0x8E722C", VA = "0x8E722C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x8E7230", Offset = "0x8E7230", VA = "0x8E7230", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x8E7234", Offset = "0x8E7234", VA = "0x8E7234")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EDA0", Offset = "0x68EDA0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EDB0", Offset = "0x68EDB0")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EDC0", Offset = "0x68EDC0")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700008F")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x8E7AFC", Offset = "0x8E7AFC", VA = "0x8E7AFC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691B60", Offset = "0x691B60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x8E6420", Offset = "0x8E6420", VA = "0x8E6420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691B70", Offset = "0x691B70")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public bool EnableState
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x8E7B04", Offset = "0x8E7B04", VA = "0x8E7B04", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x8E7B34", Offset = "0x8E7B34", VA = "0x8E7B34", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x8E7B6C", Offset = "0x8E7B6C", VA = "0x8E7B6C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691B80", Offset = "0x691B80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A39")]
			[Address(RVA = "0x8E7B74", Offset = "0x8E7B74", VA = "0x8E7B74", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691B90", Offset = "0x691B90")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public float SphereRadius
		{
			[Token(Token = "0x6000A3A")]
			[Address(RVA = "0x8E6AFC", Offset = "0x8E6AFC", VA = "0x8E6AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691BA0", Offset = "0x691BA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A3B")]
			[Address(RVA = "0x8E7B80", Offset = "0x8E7B80", VA = "0x8E7B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691BB0", Offset = "0x691BB0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x8E7B88", Offset = "0x8E7B88", VA = "0x8E7B88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x8E7BE4", Offset = "0x8E7BE4", VA = "0x8E7BE4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x8E7BE8", Offset = "0x8E7BE8", VA = "0x8E7BE8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40009D0")]
		None = 0,
		[Token(Token = "0x40009D1")]
		Ray = 1,
		[Token(Token = "0x40009D2")]
		Poke = 4,
		[Token(Token = "0x40009D3")]
		All = -1
	}
	[Token(Token = "0x20001C0")]
	public enum ToolInputState
	{
		[Token(Token = "0x40009D5")]
		Inactive,
		[Token(Token = "0x40009D6")]
		PrimaryInputDown,
		[Token(Token = "0x40009D7")]
		PrimaryInputDownStay,
		[Token(Token = "0x40009D8")]
		PrimaryInputUp
	}
	[Token(Token = "0x20001C1")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x8E71E8", Offset = "0x8E71E8", VA = "0x8E71E8")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EDD0", Offset = "0x68EDD0")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EDE0", Offset = "0x68EDE0")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EDF0", Offset = "0x68EDF0")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000093")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0x8E27CC", Offset = "0x8E27CC", VA = "0x8E27CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0x8E27D4", Offset = "0x8E27D4", VA = "0x8E27D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691BC0", Offset = "0x691BC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0x8E9A34", Offset = "0x8E9A34", VA = "0x8E9A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691BD0", Offset = "0x691BD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000A43")]
			get;
		}

		[Token(Token = "0x17000096")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000A44")]
			get;
		}

		[Token(Token = "0x17000097")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000A45")]
			get;
		}

		[Token(Token = "0x17000098")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0x8E27C0", Offset = "0x8E27C0", VA = "0x8E27C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691BE0", Offset = "0x691BE0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x8E6F34", Offset = "0x8E6F34", VA = "0x8E6F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691BF0", Offset = "0x691BF0")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x8E24D8", Offset = "0x8E24D8", VA = "0x8E24D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691C00", Offset = "0x691C00")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A49")]
			[Address(RVA = "0x8E6B04", Offset = "0x8E6B04", VA = "0x8E6B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691C10", Offset = "0x691C10")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000A4E")]
			get;
			[Token(Token = "0x6000A4F")]
			set;
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x8E9A40", Offset = "0x8E9A40", VA = "0x8E9A40")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000A4C")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000A4D")]
		public abstract void DeFocus();

		[Token(Token = "0x6000A50")]
		public abstract void Initialize();

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x8E9A48", Offset = "0x8E9A48", VA = "0x8E9A48")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x8E9A98", Offset = "0x8E9A98", VA = "0x8E9A98")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x8E9AF8", Offset = "0x8E9AF8", VA = "0x8E9AF8", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x8E9DC4", Offset = "0x8E9DC4", VA = "0x8E9DC4", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x8E7248", Offset = "0x8E7248", VA = "0x8E7248")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700009B")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000A56")]
			get;
		}

		[Token(Token = "0x1700009C")]
		bool EnableState
		{
			[Token(Token = "0x6000A58")]
			get;
			[Token(Token = "0x6000A59")]
			set;
		}

		[Token(Token = "0x1700009D")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000A5A")]
			get;
			[Token(Token = "0x6000A5B")]
			set;
		}

		[Token(Token = "0x6000A57")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20001C4")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002E2")]
		private enum PinchState
		{
			[Token(Token = "0x4000F06")]
			None,
			[Token(Token = "0x4000F07")]
			PinchDown,
			[Token(Token = "0x4000F08")]
			PinchStay,
			[Token(Token = "0x4000F09")]
			PinchUp
		}

		[Token(Token = "0x40009E5")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700009E")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x8EDD60", Offset = "0x8EDD60", VA = "0x8EDD60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009F")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x8EDDEC", Offset = "0x8EDDEC", VA = "0x8EDDEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A0")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x8EDE78", Offset = "0x8EDE78", VA = "0x8EDE78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x8EDF04", Offset = "0x8EDF04", VA = "0x8EDF04")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x8EDF30", Offset = "0x8EDF30", VA = "0x8EDF30")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40009E8")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40009E9")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40009EA")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40009EB")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40009EC")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68EE10", Offset = "0x68EE10")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170000A1")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x8EE1D8", Offset = "0x8EE1D8", VA = "0x8EE1D8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000A2")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x8EE1E0", Offset = "0x8EE1E0", VA = "0x8EE1E0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000A3")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000A63")]
			[Address(RVA = "0x8EE268", Offset = "0x8EE268", VA = "0x8EE268", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A4")]
		public override bool EnableState
		{
			[Token(Token = "0x6000A64")]
			[Address(RVA = "0x8EE270", Offset = "0x8EE270", VA = "0x8EE270", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A65")]
			[Address(RVA = "0x8EE2CC", Offset = "0x8EE2CC", VA = "0x8EE2CC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x8EE380", Offset = "0x8EE380", VA = "0x8EE380", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x8EE3F0", Offset = "0x8EE3F0", VA = "0x8EE3F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x8EE494", Offset = "0x8EE494", VA = "0x8EE494")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x8EE87C", Offset = "0x8EE87C", VA = "0x8EE87C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x8EE98C", Offset = "0x8EE98C", VA = "0x8EE98C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x8EED4C", Offset = "0x8EED4C", VA = "0x8EED4C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x8EEF0C", Offset = "0x8EEF0C", VA = "0x8EEF0C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x8EF03C", Offset = "0x8EF03C", VA = "0x8EF03C")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x8EF39C", Offset = "0x8EF39C", VA = "0x8EF39C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x8EF7E8", Offset = "0x8EF7E8", VA = "0x8EF7E8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x8EF8D4", Offset = "0x8EF8D4", VA = "0x8EF8D4", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x8EF910", Offset = "0x8EF910", VA = "0x8EF910")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40009F8")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40009F9")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EE84", Offset = "0x68EE84")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000A5")]
		public bool EnableState
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x8EE29C", Offset = "0x8EE29C", VA = "0x8EE29C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x8EE300", Offset = "0x8EE300", VA = "0x8EE300", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x8EF9C8", Offset = "0x8EF9C8", VA = "0x8EF9C8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x8EE82C", Offset = "0x8EE82C", VA = "0x8EE82C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x8EFC60", Offset = "0x8EFC60", VA = "0x8EFC60", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691C20", Offset = "0x691C20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x8EE3E8", Offset = "0x8EE3E8", VA = "0x8EE3E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691C30", Offset = "0x691C30")]
			set
			{
			}
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x8EF9D0", Offset = "0x8EF9D0", VA = "0x8EF9D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x8EF830", Offset = "0x8EF830", VA = "0x8EF830", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x8EFC68", Offset = "0x8EFC68", VA = "0x8EFC68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x8EFFFC", Offset = "0x8EFFFC", VA = "0x8EFFFC")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x8F01EC", Offset = "0x8F01EC", VA = "0x8F01EC")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170000A8")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x8E5D50", Offset = "0x8E5D50", VA = "0x8E5D50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x8E5D58", Offset = "0x8E5D58", VA = "0x8E5D58")]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x8E5E10", Offset = "0x8E5E10", VA = "0x8E5E10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x8E5E18", Offset = "0x8E5E18", VA = "0x8E5E18")]
			set
			{
			}
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x8E5EBC", Offset = "0x8E5EBC", VA = "0x8E5EBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x8E6040", Offset = "0x8E6040", VA = "0x8E6040")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x8E6050", Offset = "0x8E6050", VA = "0x8E6050")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x8E6060", Offset = "0x8E6060", VA = "0x8E6060")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x8E3024", Offset = "0x8E3024", VA = "0x8E3024")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x8E3028", Offset = "0x8E3028", VA = "0x8E3028")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x8E30CC", Offset = "0x8E30CC", VA = "0x8E30CC")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x8E31E0", Offset = "0x8E31E0", VA = "0x8E31E0")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x8E32F4", Offset = "0x8E32F4", VA = "0x8E32F4")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x8E341C", Offset = "0x8E341C", VA = "0x8E341C")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x8E355C", Offset = "0x8E355C", VA = "0x8E355C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x8E35C0", Offset = "0x8E35C0", VA = "0x8E35C0")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x8E3780", Offset = "0x8E3780", VA = "0x8E3780")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x8E3828", Offset = "0x8E3828", VA = "0x8E3828")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x8E3830", Offset = "0x8E3830", VA = "0x8E3830")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x8E3834", Offset = "0x8E3834", VA = "0x8E3834")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x8E37D8", Offset = "0x8E37D8", VA = "0x8E37D8")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x8E3888", Offset = "0x8E3888", VA = "0x8E3888")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C0F8", Offset = "0x68C0F8")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170001A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010AB")]
				[Address(RVA = "0x8EDBFC", Offset = "0x8EDBFC", VA = "0x8EDBFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010AD")]
				[Address(RVA = "0x8EDC6C", Offset = "0x8EDC6C", VA = "0x8EDC6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010A8")]
			[Address(RVA = "0x8ED88C", Offset = "0x8ED88C", VA = "0x8ED88C")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60010A9")]
			[Address(RVA = "0x8ED970", Offset = "0x8ED970", VA = "0x8ED970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010AA")]
			[Address(RVA = "0x8ED974", Offset = "0x8ED974", VA = "0x8ED974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x8EDC04", Offset = "0x8EDC04", VA = "0x8EDC04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A09")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000A0A")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x8ED418", Offset = "0x8ED418", VA = "0x8ED418")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x8ED4B8", Offset = "0x8ED4B8", VA = "0x8ED4B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x8ED7B0", Offset = "0x8ED7B0", VA = "0x8ED7B0")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x8ED73C", Offset = "0x8ED73C", VA = "0x8ED73C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691C40", Offset = "0x691C40")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x8ED8B8", Offset = "0x8ED8B8", VA = "0x8ED8B8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002E4")]
		public enum SelectionState
		{
			[Token(Token = "0x4000F11")]
			Off,
			[Token(Token = "0x4000F12")]
			Selected,
			[Token(Token = "0x4000F13")]
			Highlighted
		}

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170000AA")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x8F024C", Offset = "0x8F024C", VA = "0x8F024C")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x8F0254", Offset = "0x8F0254", VA = "0x8F0254")]
			set
			{
			}
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x8F044C", Offset = "0x8F044C", VA = "0x8F044C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x8F06A4", Offset = "0x8F06A4", VA = "0x8F06A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x8F02FC", Offset = "0x8F02FC", VA = "0x8F02FC")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x8F0790", Offset = "0x8F0790", VA = "0x8F0790")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002E5")]
		public enum SegmentType
		{
			[Token(Token = "0x4000F15")]
			Straight,
			[Token(Token = "0x4000F16")]
			LeftTurn,
			[Token(Token = "0x4000F17")]
			RightTurn,
			[Token(Token = "0x4000F18")]
			Switch
		}

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000A1F")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000A20")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68EF64", Offset = "0x68EF64")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170000AB")]
		public float StartDistance
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x8F07FC", Offset = "0x8F07FC", VA = "0x8F07FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691CA4", Offset = "0x691CA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x8F0804", Offset = "0x8F0804", VA = "0x8F0804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691CB4", Offset = "0x691CB4")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public float GridSize
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0x8F080C", Offset = "0x8F080C", VA = "0x8F080C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0x8F0814", Offset = "0x8F0814", VA = "0x8F0814")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public int SubDivCount
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0x8F081C", Offset = "0x8F081C", VA = "0x8F081C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0x8F0824", Offset = "0x8F0824", VA = "0x8F0824")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public SegmentType Type
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x8F082C", Offset = "0x8F082C", VA = "0x8F082C")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000AF")]
		public Pose EndPose
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x8F0834", Offset = "0x8F0834", VA = "0x8F0834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public float Radius
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x8F0D44", Offset = "0x8F0D44", VA = "0x8F0D44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B1")]
		public float SegmentLength
		{
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0x8F089C", Offset = "0x8F089C", VA = "0x8F089C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x8F0D54", Offset = "0x8F0D54", VA = "0x8F0D54")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x8F0D6C", Offset = "0x8F0D6C", VA = "0x8F0D6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x8F08DC", Offset = "0x8F08DC", VA = "0x8F08DC")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x8F0D70", Offset = "0x8F0D70", VA = "0x8F0D70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x8F0D74", Offset = "0x8F0D74", VA = "0x8F0D74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x8F0DE0", Offset = "0x8F0DE0", VA = "0x8F0DE0")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x8F1AA4", Offset = "0x8F1AA4", VA = "0x8F1AA4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x8F1E4C", Offset = "0x8F1E4C", VA = "0x8F1E4C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C108", Offset = "0x68C108")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170001A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B1")]
				[Address(RVA = "0x8F2C68", Offset = "0x8F2C68", VA = "0x8F2C68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B3")]
				[Address(RVA = "0x8F2CD8", Offset = "0x8F2CD8", VA = "0x8F2CD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x8F2948", Offset = "0x8F2948", VA = "0x8F2948")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x8F2A44", Offset = "0x8F2A44", VA = "0x8F2A44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x8F2A48", Offset = "0x8F2A48", VA = "0x8F2A48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x8F2C70", Offset = "0x8F2C70", VA = "0x8F2C70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A26")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000A27")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x8F1EF0", Offset = "0x8F1EF0", VA = "0x8F1EF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x8F1FC4", Offset = "0x8F1FC4", VA = "0x8F1FC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x8F2078", Offset = "0x8F2078", VA = "0x8F2078")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x8F21C0", Offset = "0x8F21C0", VA = "0x8F21C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x8F234C", Offset = "0x8F234C", VA = "0x8F234C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x8F252C", Offset = "0x8F252C", VA = "0x8F252C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x8F2854", Offset = "0x8F2854", VA = "0x8F2854")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x8F26E4", Offset = "0x8F26E4", VA = "0x8F26E4")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x8F26F8", Offset = "0x8F26F8", VA = "0x8F26F8")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x8F28D4", Offset = "0x8F28D4", VA = "0x8F28D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691CC4", Offset = "0x691CC4")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x8F2974", Offset = "0x8F2974", VA = "0x8F2974")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170000B2")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x8F2CE0", Offset = "0x8F2CE0", VA = "0x8F2CE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x8F2CF0", Offset = "0x8F2CF0", VA = "0x8F2CF0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x8F2CF8", Offset = "0x8F2CF8", VA = "0x8F2CF8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x8F32C4", Offset = "0x8F32C4", VA = "0x8F32C4")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000A3A")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000A3B")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68F064", Offset = "0x68F064")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170000B3")]
		public float Distance
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x8F2D48", Offset = "0x8F2D48", VA = "0x8F2D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691D28", Offset = "0x691D28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x8F2D50", Offset = "0x8F2D50", VA = "0x8F2D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691D38", Offset = "0x691D38")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public float Scale
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x8F33BC", Offset = "0x8F33BC", VA = "0x8F33BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x8F33C4", Offset = "0x8F33C4", VA = "0x8F33C4")]
			set
			{
			}
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x8F2CF4", Offset = "0x8F2CF4", VA = "0x8F2CF4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x8F33CC", Offset = "0x8F33CC", VA = "0x8F33CC")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x8F2D58", Offset = "0x8F2D58", VA = "0x8F2D58")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x8F3144", Offset = "0x8F3144", VA = "0x8F3144")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000AC8")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x8F3334", Offset = "0x8F3334", VA = "0x8F3334")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C118", Offset = "0x68C118")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170001A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010B7")]
				[Address(RVA = "0x8F3FFC", Offset = "0x8F3FFC", VA = "0x8F3FFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010B9")]
				[Address(RVA = "0x8F406C", Offset = "0x8F406C", VA = "0x8F406C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x8F3B40", Offset = "0x8F3B40", VA = "0x8F3B40")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x8F3D28", Offset = "0x8F3D28", VA = "0x8F3D28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x8F3D2C", Offset = "0x8F3D2C", VA = "0x8F3D2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x8F4004", Offset = "0x8F4004", VA = "0x8F4004", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x8F3680", Offset = "0x8F3680", VA = "0x8F3680")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x8F36DC", Offset = "0x8F36DC", VA = "0x8F36DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x8F37E8", Offset = "0x8F37E8", VA = "0x8F37E8")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x8F3998", Offset = "0x8F3998", VA = "0x8F3998")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x8F3854", Offset = "0x8F3854", VA = "0x8F3854")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x8F3AA8", Offset = "0x8F3AA8", VA = "0x8F3AA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691D48", Offset = "0x691D48")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x8F3B6C", Offset = "0x8F3B6C", VA = "0x8F3B6C")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x8F3C34", Offset = "0x8F3C34", VA = "0x8F3C34")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x8F3CC8", Offset = "0x8F3CC8", VA = "0x8F3CC8")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002E8")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000F2B")]
			Start,
			[Token(Token = "0x4000F2C")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000F2D")]
			Stop
		}

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C128", Offset = "0x68C128")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170001AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010BD")]
				[Address(RVA = "0x8F4B88", Offset = "0x8F4B88", VA = "0x8F4B88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010BF")]
				[Address(RVA = "0x8F4BF8", Offset = "0x8F4BF8", VA = "0x8F4BF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x8F4394", Offset = "0x8F4394", VA = "0x8F4394")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x8F483C", Offset = "0x8F483C", VA = "0x8F483C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x8F4840", Offset = "0x8F4840", VA = "0x8F4840", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x8F4B90", Offset = "0x8F4B90", VA = "0x8F4B90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A4E")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000A4F")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000A50")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000A51")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68F0C4", Offset = "0x68F0C4")]
		protected float _initialSpeed;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x8F4074", Offset = "0x8F4074", VA = "0x8F4074")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x8F420C", Offset = "0x8F420C", VA = "0x8F420C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x8F4218", Offset = "0x8F4218", VA = "0x8F4218", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x8E3080", Offset = "0x8E3080", VA = "0x8E3080")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x8F4170", Offset = "0x8F4170", VA = "0x8F4170")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691DAC", Offset = "0x691DAC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x8F43C0", Offset = "0x8F43C0", VA = "0x8F43C0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x8F4320", Offset = "0x8F4320", VA = "0x8F4320")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x8E3124", Offset = "0x8E3124", VA = "0x8E3124")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x8E3238", Offset = "0x8E3238", VA = "0x8E3238")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x8F4644", Offset = "0x8F4644", VA = "0x8F4644")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x8F4748", Offset = "0x8F4748", VA = "0x8F4748")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x8E334C", Offset = "0x8E334C", VA = "0x8E334C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x8E3474", Offset = "0x8E3474", VA = "0x8E3474")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x8E35B0", Offset = "0x8E35B0", VA = "0x8E35B0")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x8F47D0", Offset = "0x8F47D0", VA = "0x8F47D0")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170000B5")]
		public float TrackLength
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x8F34B0", Offset = "0x8F34B0", VA = "0x8F34B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x8F4C00", Offset = "0x8F4C00", VA = "0x8F4C00")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x8F4C08", Offset = "0x8F4C08", VA = "0x8F4C08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x8F34B8", Offset = "0x8F34B8", VA = "0x8F34B8")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x8F4C0C", Offset = "0x8F4C0C", VA = "0x8F4C0C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x8F4EA0", Offset = "0x8F4EA0", VA = "0x8F4EA0")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x8F4FF4", Offset = "0x8F4FF4", VA = "0x8F4FF4")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class Pose
	{
		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x8EE0BC", Offset = "0x8EE0BC", VA = "0x8EE0BC")]
		public Pose()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x8EE168", Offset = "0x8EE168", VA = "0x8EE168")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C138", Offset = "0x68C138")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170001AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010C3")]
				[Address(RVA = "0x8F56D0", Offset = "0x8F56D0", VA = "0x8F56D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010C5")]
				[Address(RVA = "0x8F5740", Offset = "0x8F5740", VA = "0x8F5740", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x8F52E0", Offset = "0x8F52E0", VA = "0x8F52E0")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x8F54B0", Offset = "0x8F54B0", VA = "0x8F54B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x8F54B4", Offset = "0x8F54B4", VA = "0x8F54B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x8F56D8", Offset = "0x8F56D8", VA = "0x8F56D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C148", Offset = "0x68C148")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170001AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010C9")]
				[Address(RVA = "0x8F5838", Offset = "0x8F5838", VA = "0x8F5838", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010CB")]
				[Address(RVA = "0x8F58A8", Offset = "0x8F58A8", VA = "0x8F58A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x8F53D8", Offset = "0x8F53D8", VA = "0x8F53D8")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x8F5748", Offset = "0x8F5748", VA = "0x8F5748", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x8F574C", Offset = "0x8F574C", VA = "0x8F574C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x8F5840", Offset = "0x8F5840", VA = "0x8F5840", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A74")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68F2AC", Offset = "0x68F2AC")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170000B6")]
		public bool IsMoving
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x8F5010", Offset = "0x8F5010", VA = "0x8F5010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691E10", Offset = "0x691E10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x8F5018", Offset = "0x8F5018", VA = "0x8F5018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691E20", Offset = "0x691E20")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x8F5024", Offset = "0x8F5024", VA = "0x8F5024")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x8F5068", Offset = "0x8F5068", VA = "0x8F5068")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x8F51E0", Offset = "0x8F51E0", VA = "0x8F51E0")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x8F5248", Offset = "0x8F5248", VA = "0x8F5248")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691E30", Offset = "0x691E30")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x8F530C", Offset = "0x8F530C", VA = "0x8F530C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691E94", Offset = "0x691E94")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x8F5404", Offset = "0x8F5404", VA = "0x8F5404")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x8F54A8", Offset = "0x8F54A8", VA = "0x8F54A8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x8F58B0", Offset = "0x8F58B0", VA = "0x8F58B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x8F592C", Offset = "0x8F592C", VA = "0x8F592C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x8F59FC", Offset = "0x8F59FC", VA = "0x8F59FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x8F5B14", Offset = "0x8F5B14", VA = "0x8F5B14")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x8F5BE4", Offset = "0x8F5BE4", VA = "0x8F5BE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x8F5CF4", Offset = "0x8F5CF4", VA = "0x8F5CF4")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000A85")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000A86")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000A87")]
		EUDT_None,
		[Token(Token = "0x4000A88")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20001D7")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C158", Offset = "0x68C158")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170001B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010CF")]
				[Address(RVA = "0x8ED3A0", Offset = "0x8ED3A0", VA = "0x8ED3A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010D1")]
				[Address(RVA = "0x8ED410", Offset = "0x8ED410", VA = "0x8ED410", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x8EC8AC", Offset = "0x8EC8AC", VA = "0x8EC8AC")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x8ED0A4", Offset = "0x8ED0A4", VA = "0x8ED0A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x8ED0A8", Offset = "0x8ED0A8", VA = "0x8ED0A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x8ED3A8", Offset = "0x8ED3A8", VA = "0x8ED3A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000A8A")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000A8B")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000A8C")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68F2EC", Offset = "0x68F2EC")]
		public GameObject mainCamera;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x68F324", Offset = "0x68F324")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x8EB81C", Offset = "0x8EB81C", VA = "0x8EB81C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x8EC2CC", Offset = "0x8EC2CC", VA = "0x8EC2CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x8EC428", Offset = "0x8EC428", VA = "0x8EC428")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x8EC5A8", Offset = "0x8EC5A8", VA = "0x8EC5A8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x8EC728", Offset = "0x8EC728", VA = "0x8EC728")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x8EC3FC", Offset = "0x8EC3FC", VA = "0x8EC3FC")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x8EC838", Offset = "0x8EC838", VA = "0x8EC838")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x691EF8", Offset = "0x691EF8")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x8EC8D8", Offset = "0x8EC8D8", VA = "0x8EC8D8")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x8EBC3C", Offset = "0x8EBC3C", VA = "0x8EBC3C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x8ECA3C", Offset = "0x8ECA3C", VA = "0x8ECA3C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x8EC914", Offset = "0x8EC914", VA = "0x8EC914")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x8ECE5C", Offset = "0x8ECE5C", VA = "0x8ECE5C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x8ECF38", Offset = "0x8ECF38", VA = "0x8ECF38")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x8ECFB4", Offset = "0x8ECFB4", VA = "0x8ECFB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691F5C", Offset = "0x691F5C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x8ED004", Offset = "0x8ED004", VA = "0x8ED004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691F6C", Offset = "0x691F6C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x8ED054", Offset = "0x8ED054", VA = "0x8ED054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x691F7C", Offset = "0x691F7C")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B958", Offset = "0x68B958")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C168", Offset = "0x68C168")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60010D3")]
			[Address(RVA = "0xB90948", Offset = "0xB90948", VA = "0xB90948")]
			public <>c()
			{
			}

			[Token(Token = "0x60010D4")]
			[Address(RVA = "0xB90950", Offset = "0xB90950", VA = "0xB90950")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000AA1")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000AA2")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000AA3")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000AA4")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000AA5")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000AA6")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000AA7")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000AA8")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000AA9")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000AAA")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000AAB")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xB8F950", Offset = "0xB8F950", VA = "0xB8F950")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xB8F9A8", Offset = "0xB8F9A8", VA = "0xB8F9A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xB8FE50", Offset = "0xB8FE50", VA = "0xB8FE50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xB8FF1C", Offset = "0xB8FF1C", VA = "0xB8FF1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xB9003C", Offset = "0xB9003C", VA = "0xB9003C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xB9041C", Offset = "0xB9041C", VA = "0xB9041C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xB905B4", Offset = "0xB905B4", VA = "0xB905B4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xB90764", Offset = "0xB90764", VA = "0xB90764")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xB900D8", Offset = "0xB900D8", VA = "0xB900D8")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xB90178", Offset = "0xB90178", VA = "0xB90178")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xB8FC14", Offset = "0xB8FC14", VA = "0xB8FC14")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xB908CC", Offset = "0xB908CC", VA = "0xB908CC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000ABE")]
		Default,
		[Token(Token = "0x4000ABF")]
		Generic,
		[Token(Token = "0x4000AC0")]
		PingPongBall,
		[Token(Token = "0x4000AC1")]
		Controller
	}
	[Token(Token = "0x20001DA")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000B7")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0xB908BC", Offset = "0xB908BC", VA = "0xB908BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B8")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0xB908C4", Offset = "0xB908C4", VA = "0xB908C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B9")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xB908B4", Offset = "0xB908B4", VA = "0xB908B4")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xB9098C", Offset = "0xB9098C", VA = "0xB9098C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xB90994", Offset = "0xB90994", VA = "0xB90994")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xB90C60", Offset = "0xB90C60", VA = "0xB90C60")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xB90CD0", Offset = "0xB90CD0", VA = "0xB90CD0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xB90D20", Offset = "0xB90D20", VA = "0xB90D20")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20001DC")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000AC9")]
		TRIANGLES,
		[Token(Token = "0x4000ACA")]
		QUADS
	}
	[Token(Token = "0x20001DD")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000ACC")]
		ABSORPTION,
		[Token(Token = "0x4000ACD")]
		TRANSMISSION,
		[Token(Token = "0x4000ACE")]
		SCATTERING
	}
	[Token(Token = "0x20001DE")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20001DF")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000AD3")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000AD4")]
		public const string Tab = "    ";

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xB92444", Offset = "0xB92444", VA = "0xB92444")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x691F8C", Offset = "0x691F8C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x691F8C", Offset = "0x691F8C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xB924CC", Offset = "0xB924CC", VA = "0xB924CC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x691FEC", Offset = "0x691FEC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x691FEC", Offset = "0x691FEC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xB92564", Offset = "0xB92564", VA = "0xB92564")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x69204C", Offset = "0x69204C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x69204C", Offset = "0x69204C")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xB925EC", Offset = "0xB925EC", VA = "0xB925EC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6920AC", Offset = "0x6920AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6920AC", Offset = "0x6920AC")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xB92674", Offset = "0xB92674", VA = "0xB92674")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x69210C", Offset = "0x69210C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x69210C", Offset = "0x69210C")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class CAPI
	{
		[Token(Token = "0x20002EE")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002EF")]
		public enum Result
		{
			[Token(Token = "0x4000F49")]
			Success = 0,
			[Token(Token = "0x4000F4A")]
			Failure = -1000,
			[Token(Token = "0x4000F4B")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000F4C")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000F4D")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000F4E")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000F4F")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000F50")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000F51")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002F0")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60010D9")]
			[Address(RVA = "0x8E0174", Offset = "0x8E0174", VA = "0x8E0174")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000AD5")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000ADD")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xB92774", Offset = "0xB92774", VA = "0xB92774")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xB92824", Offset = "0xB92824", VA = "0xB92824")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xB929E8", Offset = "0xB929E8", VA = "0xB929E8")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xB92AC8", Offset = "0xB92AC8", VA = "0xB92AC8")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xB92B58", Offset = "0xB92B58", VA = "0xB92B58")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xB92BE8", Offset = "0xB92BE8", VA = "0xB92BE8")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xB92C88", Offset = "0xB92C88", VA = "0xB92C88")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xB92D80", Offset = "0xB92D80", VA = "0xB92D80")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xB92E20", Offset = "0xB92E20", VA = "0xB92E20")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xB92F18", Offset = "0xB92F18", VA = "0xB92F18")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xB92FB8", Offset = "0xB92FB8", VA = "0xB92FB8")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xB93058", Offset = "0xB93058", VA = "0xB93058")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xB930F8", Offset = "0xB930F8", VA = "0xB930F8")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xB93198", Offset = "0xB93198", VA = "0xB93198")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xB93248", Offset = "0xB93248", VA = "0xB93248")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xB932F8", Offset = "0xB932F8", VA = "0xB932F8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xB933A8", Offset = "0xB933A8", VA = "0xB933A8")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xB93448", Offset = "0xB93448", VA = "0xB93448")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xB934E8", Offset = "0xB934E8", VA = "0xB934E8")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xB93598", Offset = "0xB93598", VA = "0xB93598")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xB93648", Offset = "0xB93648", VA = "0xB93648")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xB936F8", Offset = "0xB936F8", VA = "0xB936F8")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xB93798", Offset = "0xB93798", VA = "0xB93798")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xB93860", Offset = "0xB93860", VA = "0xB93860")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xB938E4", Offset = "0xB938E4", VA = "0xB938E4")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xB939A4", Offset = "0xB939A4", VA = "0xB939A4")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xB93A84", Offset = "0xB93A84", VA = "0xB93A84")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xB93B74", Offset = "0xB93B74", VA = "0xB93B74")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xB93C24", Offset = "0xB93C24", VA = "0xB93C24")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xB93CD4", Offset = "0xB93CD4", VA = "0xB93CD4")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xB93D84", Offset = "0xB93D84", VA = "0xB93D84")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xB93E34", Offset = "0xB93E34", VA = "0xB93E34")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xB93EE4", Offset = "0xB93EE4", VA = "0xB93EE4")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xB93F84", Offset = "0xB93F84", VA = "0xB93F84")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xB940C4", Offset = "0xB940C4", VA = "0xB940C4")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xB94014", Offset = "0xB94014", VA = "0xB94014")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xB942B8", Offset = "0xB942B8", VA = "0xB942B8")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xB943F0", Offset = "0xB943F0", VA = "0xB943F0")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000B4A")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xB94490", Offset = "0xB94490", VA = "0xB94490")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xB94700", Offset = "0xB94700", VA = "0xB94700")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xB947A0", Offset = "0xB947A0", VA = "0xB947A0")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xB948D8", Offset = "0xB948D8", VA = "0xB948D8")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xB94978", Offset = "0xB94978", VA = "0xB94978")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xB94AB0", Offset = "0xB94AB0", VA = "0xB94AB0")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xB94B50", Offset = "0xB94B50", VA = "0xB94B50")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xB94C88", Offset = "0xB94C88", VA = "0xB94C88")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xB94D28", Offset = "0xB94D28", VA = "0xB94D28")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xB94E60", Offset = "0xB94E60", VA = "0xB94E60")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xB94F00", Offset = "0xB94F00", VA = "0xB94F00")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xB94FA0", Offset = "0xB94FA0", VA = "0xB94FA0")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xB95058", Offset = "0xB95058", VA = "0xB95058")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xB950F8", Offset = "0xB950F8", VA = "0xB950F8")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xB952B4", Offset = "0xB952B4", VA = "0xB952B4")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xB953D0", Offset = "0xB953D0", VA = "0xB953D0")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xB95214", Offset = "0xB95214", VA = "0xB95214")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xB95470", Offset = "0xB95470", VA = "0xB95470")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xB95510", Offset = "0xB95510", VA = "0xB95510")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xB955C0", Offset = "0xB955C0", VA = "0xB955C0")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xB95660", Offset = "0xB95660", VA = "0xB95660")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xB95710", Offset = "0xB95710", VA = "0xB95710")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xB957B0", Offset = "0xB957B0", VA = "0xB957B0")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xB95850", Offset = "0xB95850", VA = "0xB95850")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xB95A7C", Offset = "0xB95A7C", VA = "0xB95A7C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xB95B2C", Offset = "0xB95B2C", VA = "0xB95B2C")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xB95CE0", Offset = "0xB95CE0", VA = "0xB95CE0")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xB95D98", Offset = "0xB95D98", VA = "0xB95D98")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xB95EA4", Offset = "0xB95EA4", VA = "0xB95EA4")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xB95F44", Offset = "0xB95F44", VA = "0xB95F44")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xB95FE4", Offset = "0xB95FE4", VA = "0xB95FE4")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xB960EC", Offset = "0xB960EC", VA = "0xB960EC")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xB9618C", Offset = "0xB9618C", VA = "0xB9618C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xB96294", Offset = "0xB96294", VA = "0xB96294")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xB96334", Offset = "0xB96334", VA = "0xB96334")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xB963E4", Offset = "0xB963E4", VA = "0xB963E4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xB96494", Offset = "0xB96494", VA = "0xB96494")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xB96544", Offset = "0xB96544", VA = "0xB96544")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xB965E4", Offset = "0xB965E4", VA = "0xB965E4")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xB9668C", Offset = "0xB9668C", VA = "0xB9668C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xB96734", Offset = "0xB96734", VA = "0xB96734")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xB967D4", Offset = "0xB967D4", VA = "0xB967D4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xB96874", Offset = "0xB96874", VA = "0xB96874")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xB96948", Offset = "0xB96948", VA = "0xB96948")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xB969F8", Offset = "0xB969F8", VA = "0xB969F8")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xB96AA8", Offset = "0xB96AA8", VA = "0xB96AA8")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xB96B48", Offset = "0xB96B48", VA = "0xB96B48")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xB96BE8", Offset = "0xB96BE8", VA = "0xB96BE8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xB96C88", Offset = "0xB96C88", VA = "0xB96C88")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xB96D40", Offset = "0xB96D40", VA = "0xB96D40")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xB96DF0", Offset = "0xB96DF0", VA = "0xB96DF0")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xB96EA0", Offset = "0xB96EA0", VA = "0xB96EA0")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xB96F50", Offset = "0xB96F50", VA = "0xB96F50")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xB97008", Offset = "0xB97008", VA = "0xB97008")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xB970C0", Offset = "0xB970C0", VA = "0xB970C0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xB97160", Offset = "0xB97160", VA = "0xB97160")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xB97200", Offset = "0xB97200", VA = "0xB97200")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xB97308", Offset = "0xB97308", VA = "0xB97308")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xB973A8", Offset = "0xB973A8", VA = "0xB973A8")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xB974B0", Offset = "0xB974B0", VA = "0xB974B0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xB97550", Offset = "0xB97550", VA = "0xB97550")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xB97678", Offset = "0xB97678", VA = "0xB97678")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xB97718", Offset = "0xB97718", VA = "0xB97718")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xB978C0", Offset = "0xB978C0", VA = "0xB978C0")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xB97B48", Offset = "0xB97B48", VA = "0xB97B48")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xB97820", Offset = "0xB97820", VA = "0xB97820")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xB97BF8", Offset = "0xB97BF8", VA = "0xB97BF8")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xB97C98", Offset = "0xB97C98", VA = "0xB97C98")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xB97D48", Offset = "0xB97D48", VA = "0xB97D48")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xB97DF8", Offset = "0xB97DF8", VA = "0xB97DF8")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xB97EA8", Offset = "0xB97EA8", VA = "0xB97EA8")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xB97F68", Offset = "0xB97F68", VA = "0xB97F68")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xB98028", Offset = "0xB98028", VA = "0xB98028")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xB980E8", Offset = "0xB980E8", VA = "0xB980E8")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xB98188", Offset = "0xB98188", VA = "0xB98188")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xB98228", Offset = "0xB98228", VA = "0xB98228")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xB982C8", Offset = "0xB982C8", VA = "0xB982C8")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xB98368", Offset = "0xB98368", VA = "0xB98368")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xB98408", Offset = "0xB98408", VA = "0xB98408")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xB9854C", Offset = "0xB9854C", VA = "0xB9854C")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xB98604", Offset = "0xB98604", VA = "0xB98604")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xB986A4", Offset = "0xB986A4", VA = "0xB986A4")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xB98708", Offset = "0xB98708", VA = "0xB98708")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xB98824", Offset = "0xB98824", VA = "0xB98824")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xB988D4", Offset = "0xB988D4", VA = "0xB988D4")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xB98A18", Offset = "0xB98A18", VA = "0xB98A18")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xB98AC8", Offset = "0xB98AC8", VA = "0xB98AC8")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xB98B90", Offset = "0xB98B90", VA = "0xB98B90")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xB98FB8", Offset = "0xB98FB8", VA = "0xB98FB8")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xB99058", Offset = "0xB99058", VA = "0xB99058")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xB99110", Offset = "0xB99110", VA = "0xB99110")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xB99A74", Offset = "0xB99A74", VA = "0xB99A74")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xB99B14", Offset = "0xB99B14", VA = "0xB99B14")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xB9270C", Offset = "0xB9270C", VA = "0xB9270C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x69216C", Offset = "0x69216C")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xB99BCC", Offset = "0xB99BCC", VA = "0xB99BCC")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xB99C70", Offset = "0xB99C70", VA = "0xB99C70")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xB99D10", Offset = "0xB99D10", VA = "0xB99D10")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xB99DB0", Offset = "0xB99DB0", VA = "0xB99DB0")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xB99E50", Offset = "0xB99E50", VA = "0xB99E50")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xB9AAC0", Offset = "0xB9AAC0", VA = "0xB9AAC0")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xB9AB60", Offset = "0xB9AB60", VA = "0xB9AB60")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xB9AF78", Offset = "0xB9AF78", VA = "0xB9AF78")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xB9AEE8", Offset = "0xB9AEE8", VA = "0xB9AEE8")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xB9B008", Offset = "0xB9B008", VA = "0xB9B008")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20001E1")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x68F3DC", Offset = "0x68F3DC")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xB85780", Offset = "0xB85780", VA = "0xB85780")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xB85784", Offset = "0xB85784", VA = "0xB85784")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xB8588C", Offset = "0xB8588C", VA = "0xB8588C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F428", Offset = "0x68F428")]
		public bool autoRetrigger;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x68F460", Offset = "0x68F460")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F484", Offset = "0x68F484")]
		public Transform[] playPositions;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xB7ADCC", Offset = "0xB7ADCC", VA = "0xB7ADCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xB7AF48", Offset = "0xB7AF48", VA = "0xB7AF48")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xB7B1CC", Offset = "0xB7B1CC", VA = "0xB7B1CC")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xB7AFA8", Offset = "0xB7AFA8", VA = "0xB7AFA8")]
		public void Play()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xB7B334", Offset = "0xB7B334", VA = "0xB7B334")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xB7B4C8", Offset = "0xB7B4C8", VA = "0xB7B4C8")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000AEC")]
		Default,
		[Token(Token = "0x4000AED")]
		Preload,
		[Token(Token = "0x4000AEE")]
		ManualPreload
	}
	[Token(Token = "0x20001E4")]
	public enum Fade
	{
		[Token(Token = "0x4000AF0")]
		In,
		[Token(Token = "0x4000AF1")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20001E5")]
	public class SoundGroup
	{
		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68F4BC", Offset = "0x68F4BC")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xB85660", Offset = "0xB85660", VA = "0xB85660")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xB856F4", Offset = "0xB856F4", VA = "0xB856F4")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xB83E54", Offset = "0xB83E54", VA = "0xB83E54")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xB83F8C", Offset = "0xB83F8C", VA = "0xB83F8C")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xB84C1C", Offset = "0xB84C1C", VA = "0xB84C1C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001E6")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002F1")]
		public enum Fade
		{
			[Token(Token = "0x4000F54")]
			In,
			[Token(Token = "0x4000F55")]
			Out
		}

		[Token(Token = "0x20002F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C178", Offset = "0x68C178")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60010DB")]
			[Address(RVA = "0xB805EC", Offset = "0xB805EC", VA = "0xB805EC")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60010DC")]
			[Address(RVA = "0xB83784", Offset = "0xB83784", VA = "0xB83784")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C188", Offset = "0x68C188")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x60010DE")]
			[Address(RVA = "0xB836E8", Offset = "0xB836E8", VA = "0xB836E8")]
			public <>c()
			{
			}

			[Token(Token = "0x60010DF")]
			[Address(RVA = "0xB836F0", Offset = "0xB836F0", VA = "0xB836F0")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F4E8", Offset = "0x68F4E8")]
		public bool makePersistent;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F520", Offset = "0x68F520")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F558", Offset = "0x68F558")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F590", Offset = "0x68F590")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F5C8", Offset = "0x68F5C8")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F600", Offset = "0x68F600")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F638", Offset = "0x68F638")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F670", Offset = "0x68F670")]
		public bool verboseLogging;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F6A8", Offset = "0x68F6A8")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F6E0", Offset = "0x68F6E0")]
		public float volumeSoundFX;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F718", Offset = "0x68F718")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000BA")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0xB7B584", Offset = "0xB7B584", VA = "0xB7B584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BB")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0xB7B668", Offset = "0xB7B668", VA = "0xB7B668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0xB7B6D0", Offset = "0xB7B6D0", VA = "0xB7B6D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BD")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xB7B748", Offset = "0xB7B748", VA = "0xB7B748")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BE")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0xB7B7C0", Offset = "0xB7B7C0", VA = "0xB7B7C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xB7B838", Offset = "0xB7B838", VA = "0xB7B838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0xB7B8B0", Offset = "0xB7B8B0", VA = "0xB7B8B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xB7DF10", Offset = "0xB7DF10", VA = "0xB7DF10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xB7B928", Offset = "0xB7B928", VA = "0xB7B928")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xB7BB60", Offset = "0xB7BB60", VA = "0xB7BB60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xB7B92C", Offset = "0xB7B92C", VA = "0xB7B92C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xB7CD04", Offset = "0xB7CD04", VA = "0xB7CD04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xB7BCB8", Offset = "0xB7BCB8", VA = "0xB7BCB8")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xB7D498", Offset = "0xB7D498", VA = "0xB7D498")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xB7D648", Offset = "0xB7D648", VA = "0xB7D648")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xB7D800", Offset = "0xB7D800", VA = "0xB7D800")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xB7D908", Offset = "0xB7D908", VA = "0xB7D908")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xB7D9CC", Offset = "0xB7D9CC", VA = "0xB7D9CC")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xB7C4A4", Offset = "0xB7C4A4", VA = "0xB7C4A4")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xB7CD08", Offset = "0xB7CD08", VA = "0xB7CD08")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xB7E1F0", Offset = "0xB7E1F0", VA = "0xB7E1F0")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xB7E2EC", Offset = "0xB7E2EC", VA = "0xB7E2EC")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xB7E3EC", Offset = "0xB7E3EC", VA = "0xB7E3EC")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xB7E070", Offset = "0xB7E070", VA = "0xB7E070")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xB7E5CC", Offset = "0xB7E5CC", VA = "0xB7E5CC")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xB7E754", Offset = "0xB7E754", VA = "0xB7E754")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xB7E98C", Offset = "0xB7E98C", VA = "0xB7E98C")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xB7B264", Offset = "0xB7B264", VA = "0xB7B264")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xB7B3F8", Offset = "0xB7B3F8", VA = "0xB7B3F8")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xB7EB68", Offset = "0xB7EB68", VA = "0xB7EB68")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xB7EC4C", Offset = "0xB7EC4C", VA = "0xB7EC4C")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xB7ED18", Offset = "0xB7ED18", VA = "0xB7ED18")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xB7EE44", Offset = "0xB7EE44", VA = "0xB7EE44")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xB7EF04", Offset = "0xB7EF04", VA = "0xB7EF04")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xB7F01C", Offset = "0xB7F01C", VA = "0xB7F01C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xB7FE04", Offset = "0xB7FE04", VA = "0xB7FE04")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xB805F4", Offset = "0xB805F4", VA = "0xB805F4")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xB807A0", Offset = "0xB807A0", VA = "0xB807A0")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xB81984", Offset = "0xB81984", VA = "0xB81984")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xB7F1F0", Offset = "0xB7F1F0", VA = "0xB7F1F0")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xB81AA8", Offset = "0xB81AA8", VA = "0xB81AA8")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xB81BBC", Offset = "0xB81BBC", VA = "0xB81BBC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xB81CDC", Offset = "0xB81CDC", VA = "0xB81CDC")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xB82184", Offset = "0xB82184", VA = "0xB82184")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xB823D4", Offset = "0xB823D4", VA = "0xB823D4")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xB82500", Offset = "0xB82500", VA = "0xB82500")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xB826F0", Offset = "0xB826F0", VA = "0xB826F0")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xB827CC", Offset = "0xB827CC", VA = "0xB827CC")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xB8291C", Offset = "0xB8291C", VA = "0xB8291C")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xB82DD8", Offset = "0xB82DD8", VA = "0xB82DD8")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000B19")]
		None = -1,
		[Token(Token = "0x4000B1A")]
		Reserved,
		[Token(Token = "0x4000B1B")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20001E8")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xB83884", Offset = "0xB83884", VA = "0xB83884")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xB83828", Offset = "0xB83828", VA = "0xB83828")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002F4")]
		public enum FadeState
		{
			[Token(Token = "0x4000F5A")]
			Null,
			[Token(Token = "0x4000F5B")]
			FadingIn,
			[Token(Token = "0x4000F5C")]
			FadingOut,
			[Token(Token = "0x4000F5D")]
			Ducking
		}

		[Token(Token = "0x20002F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C198", Offset = "0x68C198")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170001B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010E3")]
				[Address(RVA = "0xB8454C", Offset = "0xB8454C", VA = "0xB8454C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010E5")]
				[Address(RVA = "0xB845BC", Offset = "0xB845BC", VA = "0xB845BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E0")]
			[Address(RVA = "0xB84188", Offset = "0xB84188", VA = "0xB84188")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60010E1")]
			[Address(RVA = "0xB84434", Offset = "0xB84434", VA = "0xB84434", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010E2")]
			[Address(RVA = "0xB84438", Offset = "0xB84438", VA = "0xB84438", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010E4")]
			[Address(RVA = "0xB84554", Offset = "0xB84554", VA = "0xB84554", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C1A8", Offset = "0x68C1A8")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170001B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010E9")]
				[Address(RVA = "0xB84AB8", Offset = "0xB84AB8", VA = "0xB84AB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010EB")]
				[Address(RVA = "0xB84B28", Offset = "0xB84B28", VA = "0xB84B28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010E6")]
			[Address(RVA = "0xB843C4", Offset = "0xB843C4", VA = "0xB843C4")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60010E7")]
			[Address(RVA = "0xB84914", Offset = "0xB84914", VA = "0xB84914", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xB84918", Offset = "0xB84918", VA = "0xB84918", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xB84AC0", Offset = "0xB84AC0", VA = "0xB84AC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C1B8", Offset = "0x68C1B8")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170001B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60010EF")]
				[Address(RVA = "0xB8489C", Offset = "0xB8489C", VA = "0xB8489C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60010F1")]
				[Address(RVA = "0xB8490C", Offset = "0xB8490C", VA = "0xB8490C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60010EC")]
			[Address(RVA = "0xB843F0", Offset = "0xB843F0", VA = "0xB843F0")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60010ED")]
			[Address(RVA = "0xB845C4", Offset = "0xB845C4", VA = "0xB845C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60010EE")]
			[Address(RVA = "0xB845C8", Offset = "0xB845C8", VA = "0xB845C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60010F0")]
			[Address(RVA = "0xB848A4", Offset = "0xB848A4", VA = "0xB848A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000C2")]
		public float volume
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xB81954", Offset = "0xB81954", VA = "0xB81954")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0xB83924", Offset = "0xB83924", VA = "0xB83924")]
			set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public float pitch
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0xB83964", Offset = "0xB83964", VA = "0xB83964")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0xB83994", Offset = "0xB83994", VA = "0xB83994")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public AudioClip clip
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0xB839D4", Offset = "0xB839D4", VA = "0xB839D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0xB83A04", Offset = "0xB83A04", VA = "0xB83A04")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public float time
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xB83A3C", Offset = "0xB83A3C", VA = "0xB83A3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0xB7EFDC", Offset = "0xB7EFDC", VA = "0xB7EFDC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public float length
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xB83A6C", Offset = "0xB83A6C", VA = "0xB83A6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C7")]
		public bool loop
		{
			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xB83B44", Offset = "0xB83B44", VA = "0xB83B44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xB83B74", Offset = "0xB83B74", VA = "0xB83B74")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public bool mute
		{
			[Token(Token = "0x6000C02")]
			[Address(RVA = "0xB83BAC", Offset = "0xB83BAC", VA = "0xB83BAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0xB83BDC", Offset = "0xB83BDC", VA = "0xB83BDC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000C04")]
			[Address(RVA = "0xB83C14", Offset = "0xB83C14", VA = "0xB83C14")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xB83C44", Offset = "0xB83C44", VA = "0xB83C44")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public bool isPlaying
		{
			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xB83C7C", Offset = "0xB83C7C", VA = "0xB83C7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xB83CAC", Offset = "0xB83CAC", VA = "0xB83CAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xB81940", Offset = "0xB81940", VA = "0xB81940")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xB81BB4", Offset = "0xB81BB4", VA = "0xB81BB4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xB81CD4", Offset = "0xB81CD4", VA = "0xB81CD4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xB7DF80", Offset = "0xB7DF80", VA = "0xB7DF80")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xB7DF78", Offset = "0xB7DF78", VA = "0xB7DF78")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xB82640", Offset = "0xB82640", VA = "0xB82640")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xB7E188", Offset = "0xB7E188", VA = "0xB7E188")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xB83EE4", Offset = "0xB83EE4", VA = "0xB83EE4")]
		public void Play()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xB83F4C", Offset = "0xB83F4C", VA = "0xB83F4C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xB7DF88", Offset = "0xB7DF88", VA = "0xB7DF88")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xB8401C", Offset = "0xB8401C", VA = "0xB8401C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xB82074", Offset = "0xB82074", VA = "0xB82074")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xB822F0", Offset = "0xB822F0", VA = "0xB822F0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xB7E57C", Offset = "0xB7E57C", VA = "0xB7E57C")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xB84090", Offset = "0xB84090", VA = "0xB84090")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xB840BC", Offset = "0xB840BC", VA = "0xB840BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6921D0", Offset = "0x6921D0")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xB841B4", Offset = "0xB841B4", VA = "0xB841B4")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xB7EA64", Offset = "0xB7EA64", VA = "0xB7EA64")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xB7EAE8", Offset = "0xB7EAE8", VA = "0xB7EAE8")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xB7E8E0", Offset = "0xB7E8E0", VA = "0xB7E8E0")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xB7E6A4", Offset = "0xB7E6A4", VA = "0xB7E6A4")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xB8422C", Offset = "0xB8422C", VA = "0xB8422C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x692234", Offset = "0x692234")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xB842D8", Offset = "0xB842D8", VA = "0xB842D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x692298", Offset = "0x692298")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xB8441C", Offset = "0xB8441C", VA = "0xB8441C")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000B32")]
		Random,
		[Token(Token = "0x4000B33")]
		Sequential
	}
	[Token(Token = "0x20001EC")]
	public enum FreqHint
	{
		[Token(Token = "0x4000B35")]
		None,
		[Token(Token = "0x4000B36")]
		Wide,
		[Token(Token = "0x4000B37")]
		Narrow
	}
	[Token(Token = "0x20001ED")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000B39")]
		VeryLow = -2,
		[Token(Token = "0x4000B3A")]
		Low,
		[Token(Token = "0x4000B3B")]
		Default,
		[Token(Token = "0x4000B3C")]
		High,
		[Token(Token = "0x4000B3D")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20001EE")]
	public class OSPProps
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F800", Offset = "0x68F800")]
		public bool enableSpatialization;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F838", Offset = "0x68F838")]
		public bool useFastOverride;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F870", Offset = "0x68F870")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68F870", Offset = "0x68F870")]
		public float gain;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F8C4", Offset = "0x68F8C4")]
		public bool enableInvSquare;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F8FC", Offset = "0x68F8FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68F8FC", Offset = "0x68F8FC")]
		public float volumetric;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F954", Offset = "0x68F954")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x68F954", Offset = "0x68F954")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xB83894", Offset = "0xB83894", VA = "0xB83894")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EF")]
	public class SoundFX
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F9B4", Offset = "0x68F9B4")]
		public string name;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68F9EC", Offset = "0x68F9EC")]
		public SoundFXNext playback;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FA24", Offset = "0x68FA24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68FA24", Offset = "0x68FA24")]
		public float volume;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FA78", Offset = "0x68FA78")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x68FA78", Offset = "0x68FA78")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FAD4", Offset = "0x68FAD4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x68FAD4", Offset = "0x68FAD4")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FB34", Offset = "0x68FB34")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FB6C", Offset = "0x68FB6C")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FBA4", Offset = "0x68FBA4")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FBDC", Offset = "0x68FBDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68FBDC", Offset = "0x68FBDC")]
		public float spread;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FC34", Offset = "0x68FC34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68FC34", Offset = "0x68FC34")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FC88", Offset = "0x68FC88")]
		public SoundPriority priority;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FCC0", Offset = "0x68FCC0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x68FCC0", Offset = "0x68FCC0")]
		public Vector2 delay;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FD1C", Offset = "0x68FD1C")]
		public bool looping;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x68FD54", Offset = "0x68FD54")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000CB")]
		public int Length
		{
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0xB84B30", Offset = "0xB84B30", VA = "0xB84B30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CC")]
		public bool IsValid
		{
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0xB84B5C", Offset = "0xB84B5C", VA = "0xB84B5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CD")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0xB81938", Offset = "0xB81938", VA = "0xB81938")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0xB7D490", Offset = "0xB7D490", VA = "0xB7D490")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0xB8183C", Offset = "0xB8183C", VA = "0xB8183C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CF")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xB81870", Offset = "0xB81870", VA = "0xB81870")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xB83110", Offset = "0xB83110", VA = "0xB83110")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xB816C4", Offset = "0xB816C4", VA = "0xB816C4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xB81894", Offset = "0xB81894", VA = "0xB81894")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xB81848", Offset = "0xB81848", VA = "0xB81848")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xB84C3C", Offset = "0xB84C3C", VA = "0xB84C3C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xB81888", Offset = "0xB81888", VA = "0xB81888")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xB84D8C", Offset = "0xB84D8C", VA = "0xB84D8C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xB84E68", Offset = "0xB84E68", VA = "0xB84E68")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xB84F7C", Offset = "0xB84F7C", VA = "0xB84F7C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xB85008", Offset = "0xB85008", VA = "0xB85008")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xB8509C", Offset = "0xB8509C", VA = "0xB8509C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xB85128", Offset = "0xB85128", VA = "0xB85128")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xB851B4", Offset = "0xB851B4", VA = "0xB851B4")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F0")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000D0")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0xB8522C", Offset = "0xB8522C", VA = "0xB8522C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		public string name
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0xB85320", Offset = "0xB85320", VA = "0xB85320")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0xB85328", Offset = "0xB85328", VA = "0xB85328")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public int Length
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0xB85330", Offset = "0xB85330", VA = "0xB85330")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D3")]
		public bool IsValid
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xB85380", Offset = "0xB85380", VA = "0xB85380")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xB8525C", Offset = "0xB8525C", VA = "0xB8525C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xB853C0", Offset = "0xB853C0", VA = "0xB853C0")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xB85400", Offset = "0xB85400", VA = "0xB85400")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xB85448", Offset = "0xB85448", VA = "0xB85448")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xB7B1DC", Offset = "0xB7B1DC", VA = "0xB7B1DC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xB85498", Offset = "0xB85498", VA = "0xB85498")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xB854E0", Offset = "0xB854E0", VA = "0xB854E0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xB85538", Offset = "0xB85538", VA = "0xB85538")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xB85578", Offset = "0xB85578", VA = "0xB85578")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xB855C0", Offset = "0xB855C0", VA = "0xB855C0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xB85600", Offset = "0xB85600", VA = "0xB85600")]
		public SoundFXRef()
		{
		}
	}
}
namespace InfinityEngine
{
	[Token(Token = "0x20001F1")]
	[ExecuteInEditMode]
	public class BlendingEffect : MonoBehaviour
	{
		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68FD8C", Offset = "0x68FD8C")]
		public float Amount;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float edgeSharpness;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68FDA4", Offset = "0x68FDA4")]
		public float minBlending;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x68FDBC", Offset = "0x68FDBC")]
		public float maxBlending;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float seethroughness;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float distortion;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D mainTexture;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture2D normalTexture;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader shader;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material material;

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x8408D4", Offset = "0x8408D4", VA = "0x8408D4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x840C7C", Offset = "0x840C7C", VA = "0x840C7C")]
		public BlendingEffect()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class PlaySoundOnClick : MonoBehaviour
	{
		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x8462F4", Offset = "0x8462F4", VA = "0x8462F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x8463B4", Offset = "0x8463B4", VA = "0x8463B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x8463B8", Offset = "0x8463B8", VA = "0x8463B8")]
		public PlaySoundOnClick()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x8463C0", Offset = "0x8463C0", VA = "0x8463C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6922FC", Offset = "0x6922FC")]
		private void <Start>b__1_0()
		{
		}
	}
}
namespace InfinityEngine.Utils
{
	[Token(Token = "0x20001F3")]
	public static class AssetReferences
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Texture2D logo;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture2D helpIconEnable;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Texture2D helpIconDisable;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Texture2D searchIcon;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Texture2D minusIcon;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Texture2D plusIcon;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Texture2D saveIcon;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Texture2D loadIcon;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Texture2D editIcon;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Texture2D fbICon;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Texture2D twitterIcon;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Texture2D docIcon;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Texture2D rateIcon;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Texture2D moreIcon;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Texture2D supportIcon;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static Texture2D achievementIconEnable;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static Texture2D leaderboardIconEnable;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static Texture2D achievementIconDisable;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private static Texture2D leaderboardIconDisable;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static Texture2D google_translate_icon;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private static GUISkin infinityEditorSkin;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private static Font fontAwesomeFont;

		[Token(Token = "0x170000D4")]
		public static Texture2D Logo
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x84642C", Offset = "0x84642C", VA = "0x84642C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		public static Texture2D HelpIconEnable
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x8464A8", Offset = "0x8464A8", VA = "0x8464A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		public static Texture2D HelpIconDisable
		{
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x846524", Offset = "0x846524", VA = "0x846524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public static Texture2D SearchIcon
		{
			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x8465A0", Offset = "0x8465A0", VA = "0x8465A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		public static Texture2D MinusIcon
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x84661C", Offset = "0x84661C", VA = "0x84661C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		public static Texture2D PlusIcon
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x846698", Offset = "0x846698", VA = "0x846698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		public static Texture2D SaveIcon
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x846714", Offset = "0x846714", VA = "0x846714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public static Texture2D LoadIcon
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x846790", Offset = "0x846790", VA = "0x846790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		public static Texture2D EditIcon
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x84680C", Offset = "0x84680C", VA = "0x84680C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		public static Texture2D FbICon
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x846888", Offset = "0x846888", VA = "0x846888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		public static Texture2D TwitterIcon
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x846904", Offset = "0x846904", VA = "0x846904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public static Texture2D DocIcon
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x846980", Offset = "0x846980", VA = "0x846980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		public static Texture2D RateIcon
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x8469FC", Offset = "0x8469FC", VA = "0x8469FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		public static Texture2D MoreIcon
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x846A78", Offset = "0x846A78", VA = "0x846A78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		public static Texture2D SupportIcon
		{
			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x846AF4", Offset = "0x846AF4", VA = "0x846AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		public static Texture2D AchievementIconEnable
		{
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x846B70", Offset = "0x846B70", VA = "0x846B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		public static Texture2D LeaderboardIconEnable
		{
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x846BEC", Offset = "0x846BEC", VA = "0x846BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		public static Texture2D AchievementIconDisable
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x846C68", Offset = "0x846C68", VA = "0x846C68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public static Texture2D LeaderboardIconDisable
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x846CE4", Offset = "0x846CE4", VA = "0x846CE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		public static Texture2D GoogleTranslateIcon
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x846D60", Offset = "0x846D60", VA = "0x846D60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		public static GUISkin InfinityEditorSkin
		{
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x846DDC", Offset = "0x846DDC", VA = "0x846DDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		public static GUIStyle AccordionHeader
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x846E58", Offset = "0x846E58", VA = "0x846E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		public static GUIStyle FontAwesome
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x846EB8", Offset = "0x846EB8", VA = "0x846EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		public static Font FontAwesomeFont
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x846FA0", Offset = "0x846FA0", VA = "0x846FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x846F18", Offset = "0x846F18", VA = "0x846F18")]
		public static GUIStyle GetFontAwesomeStyle(GUIStyle copy)
		{
			return null;
		}
	}
}
namespace InfinityEngine.Localization
{
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x68B9CC", Offset = "0x68B9CC")]
	public class Flag : MonoBehaviour
	{
		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Language language;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool loadNextLevel;

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x840CA0", Offset = "0x840CA0", VA = "0x840CA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x840D60", Offset = "0x840D60", VA = "0x840D60")]
		public Flag()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x840D68", Offset = "0x840D68", VA = "0x840D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69230C", Offset = "0x69230C")]
		private void <Start>b__2_0()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x68BA30", Offset = "0x68BA30")]
	public class ISILocalization : InfinityEngine.DesignPatterns.Singleton<ISILocalization>
	{
		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C1C8", Offset = "0x68C1C8")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedLanguage language;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool exists;

			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x841FA8", Offset = "0x841FA8", VA = "0x841FA8")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x60010F3")]
			[Address(RVA = "0x842CD4", Offset = "0x842CD4", VA = "0x842CD4")]
			internal void <ReplaceLocalizedLanguage>b__0(LocalizedLanguage model)
			{
			}
		}

		[Token(Token = "0x20002F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C1D8", Offset = "0x68C1D8")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4000F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Language language;

			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x842080", Offset = "0x842080", VA = "0x842080")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x842D48", Offset = "0x842D48", VA = "0x842D48")]
			internal bool <HasLanguage>b__0(LocalizedLanguage token)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C1E8", Offset = "0x68C1E8")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4000F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Language language;

			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x842878", Offset = "0x842878", VA = "0x842878")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x842D84", Offset = "0x842D84", VA = "0x842D84")]
			internal bool <ChangeLanguage>b__0(LocalizedLanguage model)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ISILocalization InstanceReference;

		[Token(Token = "0x4000B7E")]
		private const string ApplicationLanguagePreferenceKey = "___APPLICATION_LANGUAGE___";

		[Token(Token = "0x4000B7F")]
		public const string DefaultLanguagePreferenceKey = "___DEFAULT_LANGUAGE_PREF___";

		[Token(Token = "0x4000B80")]
		public const string PrefabName = "ISILocalizationPrefab";

		[Token(Token = "0x4000B81")]
		public const string PrefabPath = "Assets/InfinityEngine/Gen/Resources/ISILocalizationPrefab.prefab";

		[Token(Token = "0x4000B82")]
		public const string LanguagePaths = "InfinityEngine/Gen/Xml/ISI Localization/{0}/strings.xml";

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal LocalizedLanguage m_currentLanguage;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Language m_defaultLanguage;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal bool m_isInitialized;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action onLanguageChanged;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		internal Scene m_nextScene;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		internal int m_loadSceneDelay;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		internal List<LocalizedLanguage> m_languages;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		internal List<string> m_stringKeys;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		internal List<string> m_audiosKeys;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		internal List<string> m_spriteKeys;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x68FE44", Offset = "0x68FE44")]
		internal MinMax m_stringKeysRange;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x68FE94", Offset = "0x68FE94")]
		[SerializeField]
		internal MinMax m_spriteKeysRange;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x68FEE4", Offset = "0x68FEE4")]
		[SerializeField]
		internal MinMax m_audioKeysRange;

		[Token(Token = "0x170000EC")]
		private Language DefaultLanguage
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x8411A8", Offset = "0x8411A8", VA = "0x8411A8")]
			get
			{
				return default(Language);
			}
		}

		[Token(Token = "0x170000ED")]
		public List<LocalizedLanguage> LocalizedLanguages
		{
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x841354", Offset = "0x841354", VA = "0x841354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x8413C8", Offset = "0x8413C8", VA = "0x8413C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public List<string> StringKeys
		{
			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x8413D0", Offset = "0x8413D0", VA = "0x8413D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x841444", Offset = "0x841444", VA = "0x841444")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public List<string> AudioKeys
		{
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x84144C", Offset = "0x84144C", VA = "0x84144C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x8414C0", Offset = "0x8414C0", VA = "0x8414C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public List<string> SpriteKeys
		{
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x8414C8", Offset = "0x8414C8", VA = "0x8414C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0x84153C", Offset = "0x84153C", VA = "0x84153C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public int LanguageCount
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x841544", Offset = "0x841544", VA = "0x841544")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F2")]
		public static bool IsInitialized
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x8415A8", Offset = "0x8415A8", VA = "0x8415A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F3")]
		public static Language CurrentLanguage
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x841624", Offset = "0x841624", VA = "0x841624")]
			get
			{
				return default(Language);
			}
		}

		[Token(Token = "0x170000F4")]
		public Dictionary<string, List<string>> Keys
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x841CD4", Offset = "0x841CD4", VA = "0x841CD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x841B00", Offset = "0x841B00", VA = "0x841B00")]
		private int GetStringMaxRange()
		{
			return default(int);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x841B9C", Offset = "0x841B9C", VA = "0x841B9C")]
		private int GetAudioMaxRange()
		{
			return default(int);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x841C38", Offset = "0x841C38", VA = "0x841C38")]
		private int GetSpriteMaxRange()
		{
			return default(int);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x841DE8", Offset = "0x841DE8", VA = "0x841DE8")]
		public void AddLanguage(LocalizedLanguage language)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x841E5C", Offset = "0x841E5C", VA = "0x841E5C")]
		public void ReplaceLocalizedLanguage(LocalizedLanguage language)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x841FB0", Offset = "0x841FB0", VA = "0x841FB0")]
		public bool HasLanguage(Language language)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x842088", Offset = "0x842088", VA = "0x842088")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x83FA0C", Offset = "0x83FA0C", VA = "0x83FA0C")]
		public static string GetValueOf(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x842440", Offset = "0x842440", VA = "0x842440")]
		public static string GetFormatedValueOf(string key, params object[] data)
		{
			return null;
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x842498", Offset = "0x842498", VA = "0x842498")]
		public static AudioClip GetAudio(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x842688", Offset = "0x842688", VA = "0x842688")]
		public static Sprite GetSprite(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x840DA0", Offset = "0x840DA0", VA = "0x840DA0")]
		public static bool ChangeLanguage(Language language)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x84106C", Offset = "0x84106C", VA = "0x84106C")]
		public static void LoadNextLevel()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x8416C0", Offset = "0x8416C0", VA = "0x8416C0")]
		public static bool LoadIfNotInScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x842AA0", Offset = "0x842AA0", VA = "0x842AA0")]
		public ISILocalization()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x842B18", Offset = "0x842B18", VA = "0x842B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69231C", Offset = "0x69231C")]
		private bool <Validate>b__47_0(AudioClipKV elem)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x842BAC", Offset = "0x842BAC", VA = "0x842BAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69232C", Offset = "0x69232C")]
		private bool <Validate>b__47_1(StringKV elem)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x842C40", Offset = "0x842C40", VA = "0x842C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69233C", Offset = "0x69233C")]
		private bool <Validate>b__47_2(SpriteKV elem)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F6")]
	public struct ISIString
	{
		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68FF34", Offset = "0x68FF34")]
		private string <key>k__BackingField;

		[Token(Token = "0x170000F5")]
		public string key
		{
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x701198", Offset = "0x701198", VA = "0x701198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69234C", Offset = "0x69234C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x7011A0", Offset = "0x7011A0", VA = "0x7011A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69235C", Offset = "0x69235C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x7011A8", Offset = "0x7011A8", VA = "0x7011A8")]
		public ISIString(string key)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x7011B0", Offset = "0x7011B0", VA = "0x7011B0")]
		public string Format(params object[] arg)
		{
			return null;
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x842DE0", Offset = "0x842DE0", VA = "0x842DE0")]
		public static implicit operator string(ISIString self)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001F7")]
	public enum Language
	{
		[Token(Token = "0x4000B92")]
		English,
		[Token(Token = "0x4000B93")]
		French,
		[Token(Token = "0x4000B94")]
		Spanish,
		[Token(Token = "0x4000B95")]
		Italian,
		[Token(Token = "0x4000B96")]
		German,
		[Token(Token = "0x4000B97")]
		Korean,
		[Token(Token = "0x4000B98")]
		Chinese,
		[Token(Token = "0x4000B99")]
		Japanese,
		[Token(Token = "0x4000B9A")]
		Russian,
		[Token(Token = "0x4000B9B")]
		Portuguese,
		[Token(Token = "0x4000B9C")]
		Polish,
		[Token(Token = "0x4000B9D")]
		Bengali,
		[Token(Token = "0x4000B9E")]
		Bosnian,
		[Token(Token = "0x4000B9F")]
		Catalan,
		[Token(Token = "0x4000BA0")]
		Czech,
		[Token(Token = "0x4000BA1")]
		Welsh,
		[Token(Token = "0x4000BA2")]
		Danish,
		[Token(Token = "0x4000BA3")]
		Finnish,
		[Token(Token = "0x4000BA4")]
		Hindi,
		[Token(Token = "0x4000BA5")]
		Croatian,
		[Token(Token = "0x4000BA6")]
		Hungarian,
		[Token(Token = "0x4000BA7")]
		Indonesian,
		[Token(Token = "0x4000BA8")]
		Dutch,
		[Token(Token = "0x4000BA9")]
		Slovak,
		[Token(Token = "0x4000BAA")]
		Albanian,
		[Token(Token = "0x4000BAB")]
		Serbian,
		[Token(Token = "0x4000BAC")]
		Swedish,
		[Token(Token = "0x4000BAD")]
		Swahili,
		[Token(Token = "0x4000BAE")]
		Tamil,
		[Token(Token = "0x4000BAF")]
		Thai,
		[Token(Token = "0x4000BB0")]
		Turkish,
		[Token(Token = "0x4000BB1")]
		Vietnamese
	}
	[Token(Token = "0x20001F8")]
	public static class LanguageExtensions
	{
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x842DE4", Offset = "0x842DE4", VA = "0x842DE4")]
		public static Locale ToLocale(this Language language)
		{
			return null;
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x842F8C", Offset = "0x842F8C", VA = "0x842F8C")]
		public static string Code(this Language language)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20001F9")]
	public class Locale
	{
		[Token(Token = "0x20002FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C1F8", Offset = "0x68C1F8")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Type type;

			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x84321C", Offset = "0x84321C", VA = "0x84321C")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x843DE8", Offset = "0x843DE8", VA = "0x843DE8")]
			internal bool <get_AllLocales>b__0(FieldInfo field)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C208", Offset = "0x68C208")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FieldInfo, Locale> <>9__46_1;

			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x843CF4", Offset = "0x843CF4", VA = "0x843CF4")]
			public <>c()
			{
			}

			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x843CFC", Offset = "0x843CFC", VA = "0x843CFC")]
			internal Locale <get_AllLocales>b__46_1(FieldInfo field)
			{
				return null;
			}
		}

		[Token(Token = "0x20002FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C218", Offset = "0x68C218")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x84341C", Offset = "0x84341C", VA = "0x84341C")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x843E8C", Offset = "0x843E8C", VA = "0x843E8C")]
			internal bool <WithName>b__0(Locale elem)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68FF44", Offset = "0x68FF44")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68FF54", Offset = "0x68FF54")]
		private string <LanguageCode>k__BackingField;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68FF64", Offset = "0x68FF64")]
		private string <Country>k__BackingField;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Locale Bengali;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Locale Bosnian;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Locale Catalan;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Locale Czech;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Locale Welsh;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Locale Danish;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Locale German;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Locale English;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Locale Spanish;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Locale Finnish;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Locale French;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Locale Hindi;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Locale Croatian;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Locale Hungarian;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Locale Indonesian;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static Locale Italian;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Locale Japanese;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Locale Korean;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Locale Dutch;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static Locale Polish;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static Locale Portuguese;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static Locale Russian;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static Locale Slovak;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static Locale Albanian;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static Locale Serbian;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static Locale Swedish;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static Locale Swahili;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static Locale Tamil;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static Locale Thai;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static Locale Turkish;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static Locale Vietnamese;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static Locale Chinese;

		[Token(Token = "0x170000F6")]
		public string Name
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x842FC0", Offset = "0x842FC0", VA = "0x842FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69238C", Offset = "0x69238C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x842FC8", Offset = "0x842FC8", VA = "0x842FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69239C", Offset = "0x69239C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public string LanguageCode
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x842FB8", Offset = "0x842FB8", VA = "0x842FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6923AC", Offset = "0x6923AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x842FD0", Offset = "0x842FD0", VA = "0x842FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6923BC", Offset = "0x6923BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public string Country
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x842FD8", Offset = "0x842FD8", VA = "0x842FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6923CC", Offset = "0x6923CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x842FE0", Offset = "0x842FE0", VA = "0x842FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6923DC", Offset = "0x6923DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public static Locale[] AllLocales
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x843028", Offset = "0x843028", VA = "0x843028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public string Informations
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x843224", Offset = "0x843224", VA = "0x843224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x842FE8", Offset = "0x842FE8", VA = "0x842FE8")]
		public Locale(string name, string language, string country)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x842EA4", Offset = "0x842EA4", VA = "0x842EA4")]
		public static Locale WithName(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x843424", Offset = "0x843424", VA = "0x843424", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x68BA78", Offset = "0x68BA78")]
	public class LocalizedAudio : MonoBehaviour
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "PopupAttribute", RVA = "0x68FF74", Offset = "0x68FF74")]
		[SerializeField]
		private string key;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioClip clip;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x843EC4", Offset = "0x843EC4", VA = "0x843EC4")]
		public void Play()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x843FE4", Offset = "0x843FE4", VA = "0x843FE4")]
		public LocalizedAudio()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FB")]
	public class LocalizedLanguage
	{
		[Token(Token = "0x20002FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C228", Offset = "0x68C228")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x844404", Offset = "0x844404", VA = "0x844404")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001100")]
			[Address(RVA = "0x8447AC", Offset = "0x8447AC", VA = "0x8447AC")]
			internal bool <SetString>b__0(StringKV e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C238", Offset = "0x68C238")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x6001101")]
			[Address(RVA = "0x84440C", Offset = "0x84440C", VA = "0x84440C")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6001102")]
			[Address(RVA = "0x844820", Offset = "0x844820", VA = "0x844820")]
			internal bool <GetString>b__0(StringKV e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C248", Offset = "0x68C248")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x6001103")]
			[Address(RVA = "0x844568", Offset = "0x844568", VA = "0x844568")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001104")]
			[Address(RVA = "0x844894", Offset = "0x844894", VA = "0x844894")]
			internal bool <SetAudio>b__0(AudioClipKV e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000301")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C258", Offset = "0x68C258")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x6001105")]
			[Address(RVA = "0x844570", Offset = "0x844570", VA = "0x844570")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001106")]
			[Address(RVA = "0x844908", Offset = "0x844908", VA = "0x844908")]
			internal bool <GetAudio>b__0(AudioClipKV e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000302")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C268", Offset = "0x68C268")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x6001107")]
			[Address(RVA = "0x8446CC", Offset = "0x8446CC", VA = "0x8446CC")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6001108")]
			[Address(RVA = "0x84497C", Offset = "0x84497C", VA = "0x84497C")]
			internal bool <SetSprite>b__0(SpriteKV e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000303")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C278", Offset = "0x68C278")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x6001109")]
			[Address(RVA = "0x8446D4", Offset = "0x8446D4", VA = "0x8446D4")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x600110A")]
			[Address(RVA = "0x8449F0", Offset = "0x8449F0", VA = "0x8449F0")]
			internal bool <GetSprite>b__0(SpriteKV e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int translationStep;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isExpanded;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool isBeingAutoTranslated;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float translationProgress;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D m_flag;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Language m_language;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<StringKV> m_localizedStrings;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<AudioClipKV> m_localizedAudio;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<SpriteKV> m_localizedSprites;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string m_languageName;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_languageCode;

		[Token(Token = "0x170000FB")]
		public Language Language
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x841AF8", Offset = "0x841AF8", VA = "0x841AF8")]
			get
			{
				return default(Language);
			}
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x843FEC", Offset = "0x843FEC", VA = "0x843FEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public string LanguageName
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x84409C", Offset = "0x84409C", VA = "0x84409C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public string LanguageCode
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x844160", Offset = "0x844160", VA = "0x844160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		public Texture2D Flag
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x844190", Offset = "0x844190", VA = "0x844190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		public List<StringKV> LocalizedStrings
		{
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x842338", Offset = "0x842338", VA = "0x842338")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x842340", Offset = "0x842340", VA = "0x842340")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public List<AudioClipKV> LocalizedAudio
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x842328", Offset = "0x842328", VA = "0x842328")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x842330", Offset = "0x842330", VA = "0x842330")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public List<SpriteKV> LocalizedSprites
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x842348", Offset = "0x842348", VA = "0x842348")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x842350", Offset = "0x842350", VA = "0x842350")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x844198", Offset = "0x844198", VA = "0x844198")]
		public LocalizedLanguage()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x844204", Offset = "0x844204", VA = "0x844204")]
		public LocalizedLanguage(List<StringKV> strings)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x8442B0", Offset = "0x8442B0", VA = "0x8442B0")]
		public void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x842358", Offset = "0x842358", VA = "0x842358")]
		public string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x844414", Offset = "0x844414", VA = "0x844414")]
		public void SetAudio(string key, AudioClip value)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x8425A0", Offset = "0x8425A0", VA = "0x8425A0")]
		public AudioClip GetAudio(string key)
		{
			return null;
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x844578", Offset = "0x844578", VA = "0x844578")]
		public void SetSprite(string key, Sprite value)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x842790", Offset = "0x842790", VA = "0x842790")]
		public Sprite GetSprite(string key)
		{
			return null;
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x8446DC", Offset = "0x8446DC", VA = "0x8446DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x84477C", Offset = "0x84477C", VA = "0x84477C")]
		public void UpdateTranslationProgress(int totalSteps)
		{
		}
	}
	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x68BAB0", Offset = "0x68BAB0")]
	public class LocalizedSprite : MonoBehaviour
	{
		[Token(Token = "0x2000304")]
		public enum SpriteComponentType
		{
			[Token(Token = "0x4000F88")]
			Image,
			[Token(Token = "0x4000F89")]
			SpriteRenderer
		}

		[Serializable]
		[Token(Token = "0x2000305")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C288", Offset = "0x68C288")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__6_0;

			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<LocalizedSprite> <>9__8_0;

			[Token(Token = "0x600110C")]
			[Address(RVA = "0x844E50", Offset = "0x844E50", VA = "0x844E50")]
			public <>c()
			{
			}

			[Token(Token = "0x600110D")]
			[Address(RVA = "0x844E58", Offset = "0x844E58", VA = "0x844E58")]
			internal bool <Start>b__6_0()
			{
				return default(bool);
			}

			[Token(Token = "0x600110E")]
			[Address(RVA = "0x844E5C", Offset = "0x844E5C", VA = "0x844E5C")]
			internal void <OnLanguageChanged>b__8_0(LocalizedSprite arg)
			{
			}
		}

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteComponentType type;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "PopupAttribute", RVA = "0x690048", Offset = "0x690048")]
		[SerializeField]
		private string key;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image image;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<LocalizedSprite> LocalizedSprites;

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x844A64", Offset = "0x844A64", VA = "0x844A64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x844D28", Offset = "0x844D28", VA = "0x844D28")]
		private void _OnLanguageChanged()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x842990", Offset = "0x842990", VA = "0x842990")]
		public static void OnLanguageChanged()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x844DE4", Offset = "0x844DE4", VA = "0x844DE4")]
		public LocalizedSprite()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x68BAE8", Offset = "0x68BAE8")]
	public class LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x2000306")]
		private enum TextComponentType
		{
			[Token(Token = "0x4000F8E")]
			Text,
			[Token(Token = "0x4000F8F")]
			TextMesh,
			[Token(Token = "0x4000F90")]
			TextMeshPro,
			[Token(Token = "0x4000F91")]
			TextMeshProUGUI
		}

		[Serializable]
		[Token(Token = "0x2000307")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C298", Offset = "0x68C298")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__8_0;

			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<LocalizedString> <>9__11_0;

			[Token(Token = "0x6001110")]
			[Address(RVA = "0x8453DC", Offset = "0x8453DC", VA = "0x8453DC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0x8453E4", Offset = "0x8453E4", VA = "0x8453E4")]
			internal bool <Start>b__8_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001112")]
			[Address(RVA = "0x8453E8", Offset = "0x8453E8", VA = "0x8453E8")]
			internal void <OnLanguageChanged>b__11_0(LocalizedString arg)
			{
			}
		}

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextComponentType type;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "PopupAttribute", RVA = "0x6900AC", Offset = "0x6900AC")]
		[SerializeField]
		private string key;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text label;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh textMesh;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_Text textMeshPro;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI textMeshProUGUI;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<LocalizedString> LocalizedStrings;

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x844E88", Offset = "0x844E88", VA = "0x844E88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x845060", Offset = "0x845060", VA = "0x845060")]
		private void FindComponent()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x845188", Offset = "0x845188", VA = "0x845188")]
		private void _OnLanguageChanged()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x842880", Offset = "0x842880", VA = "0x842880")]
		public static void OnLanguageChanged()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x845370", Offset = "0x845370", VA = "0x845370")]
		public LocalizedString()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public static class R3
	{
		[Token(Token = "0x2000308")]
		public static class strings
		{
			[Token(Token = "0x4000F95")]
			public const string Names = "Welcome, ChooseProfile, CreatorIntro, ExploreCompleted, ExploreInstruction, SplitIntro, HiddenCube, HiddenCubeHint, GuideIntro, CountIntro, LoadIntro, ThreeViewIntro, ThreeView, LoadCubeMemory, CubeIntro, LoadTangramMemory, BlocksIntro, AssessmentCompleted, Tangram, ChooseAnswer, ContinuePlay, LoadSuccess, PlayIntro, CrystalIntro, GrabHint, GrabComplete, DialHint, PadHint, MedalHint, MedalComplete, VendingHint, VendingComplete, BubbleGunHint, BatteryHint, MusicboxHint, WindingHint, GuideboxHint, GrabStartHint, GrabEndHint, AirplaneHint, PoolTen, SplitTen, HouseWelcome, Symbol, MatchIntro, Cycle, Sudoku, ChooseItems, AlreadyHaveItem, MedalNotEnough, ExchangeHint, Create, PrepareMaterials, UnneededMaterial, CreateSuccessfully, MaterialNotEnough, MaterialTooMuch, Front, Left, Right, Back, Reset, Go, Clue, Junior, Basic, Senior, CameraHint, SharePhotoHint, MagicLab, TangramGame, Magicbox, Train, Fruits, Cubes, FruiterIntro, FlareGunHint, ProjectorHint";

			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static ISIString Welcome;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ISIString ChooseProfile;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ISIString CreatorIntro;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ISIString ExploreCompleted;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ISIString ExploreInstruction;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ISIString SplitIntro;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ISIString HiddenCube;

			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ISIString HiddenCubeHint;

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ISIString GuideIntro;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ISIString CountIntro;

			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ISIString LoadIntro;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ISIString ThreeViewIntro;

			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ISIString ThreeView;

			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ISIString LoadCubeMemory;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ISIString CubeIntro;

			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ISIString LoadTangramMemory;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ISIString BlocksIntro;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ISIString AssessmentCompleted;

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ISIString Tangram;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ISIString ChooseAnswer;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ISIString ContinuePlay;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ISIString LoadSuccess;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ISIString PlayIntro;

			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ISIString CrystalIntro;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static ISIString GrabHint;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static ISIString GrabComplete;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static ISIString DialHint;

			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public static ISIString PadHint;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public static ISIString MedalHint;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public static ISIString MedalComplete;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public static ISIString VendingHint;

			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public static ISIString VendingComplete;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public static ISIString BubbleGunHint;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			public static ISIString BatteryHint;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public static ISIString MusicboxHint;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			public static ISIString WindingHint;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			public static ISIString GuideboxHint;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public static ISIString GrabStartHint;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			public static ISIString GrabEndHint;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			public static ISIString AirplaneHint;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			public static ISIString PoolTen;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			public static ISIString SplitTen;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			public static ISIString HouseWelcome;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			public static ISIString Symbol;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
			public static ISIString MatchIntro;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			public static ISIString Cycle;

			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
			public static ISIString Sudoku;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			public static ISIString ChooseItems;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			public static ISIString AlreadyHaveItem;

			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			public static ISIString MedalNotEnough;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
			public static ISIString ExchangeHint;

			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			public static ISIString Create;

			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
			public static ISIString PrepareMaterials;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
			public static ISIString UnneededMaterial;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			public static ISIString CreateSuccessfully;

			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			public static ISIString MaterialNotEnough;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
			public static ISIString MaterialTooMuch;

			[Token(Token = "0x4000FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			public static ISIString Front;

			[Token(Token = "0x4000FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
			public static ISIString Left;

			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			public static ISIString Right;

			[Token(Token = "0x4000FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
			public static ISIString Back;

			[Token(Token = "0x4000FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			public static ISIString Reset;

			[Token(Token = "0x4000FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
			public static ISIString Go;

			[Token(Token = "0x4000FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			public static ISIString Clue;

			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			public static ISIString Junior;

			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			public static ISIString Basic;

			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			public static ISIString Senior;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			public static ISIString CameraHint;

			[Token(Token = "0x4000FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
			public static ISIString SharePhotoHint;

			[Token(Token = "0x4000FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
			public static ISIString MagicLab;

			[Token(Token = "0x4000FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
			public static ISIString TangramGame;

			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
			public static ISIString Magicbox;

			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
			public static ISIString Train;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
			public static ISIString Fruits;

			[Token(Token = "0x4000FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
			public static ISIString Cubes;

			[Token(Token = "0x4000FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
			public static ISIString FruiterIntro;

			[Token(Token = "0x4000FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
			public static ISIString FlareGunHint;

			[Token(Token = "0x4000FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
			public static ISIString ProjectorHint;
		}

		[Token(Token = "0x2000309")]
		public static class audios
		{
			[Token(Token = "0x4000FE4")]
			public const string Names = "BatteryHint, BubbleGunHint, Cube, GrabEndHint, GrabStartHint, GuideboxHint, MusicboxHint, Pyramid, WindingHint, CCuboid, SemiCylinder, AirplaneHint";

			[Token(Token = "0x170001B8")]
			public static AudioClip BatteryHint
			{
				[Token(Token = "0x6001114")]
				[Address(RVA = "0x845414", Offset = "0x845414", VA = "0x845414")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B9")]
			public static AudioClip BubbleGunHint
			{
				[Token(Token = "0x6001115")]
				[Address(RVA = "0x84545C", Offset = "0x84545C", VA = "0x84545C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BA")]
			public static AudioClip Cube
			{
				[Token(Token = "0x6001116")]
				[Address(RVA = "0x8454A4", Offset = "0x8454A4", VA = "0x8454A4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BB")]
			public static AudioClip GrabEndHint
			{
				[Token(Token = "0x6001117")]
				[Address(RVA = "0x8454EC", Offset = "0x8454EC", VA = "0x8454EC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BC")]
			public static AudioClip GrabStartHint
			{
				[Token(Token = "0x6001118")]
				[Address(RVA = "0x845534", Offset = "0x845534", VA = "0x845534")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BD")]
			public static AudioClip GuideboxHint
			{
				[Token(Token = "0x6001119")]
				[Address(RVA = "0x84557C", Offset = "0x84557C", VA = "0x84557C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BE")]
			public static AudioClip MusicboxHint
			{
				[Token(Token = "0x600111A")]
				[Address(RVA = "0x8455C4", Offset = "0x8455C4", VA = "0x8455C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BF")]
			public static AudioClip Pyramid
			{
				[Token(Token = "0x600111B")]
				[Address(RVA = "0x84560C", Offset = "0x84560C", VA = "0x84560C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C0")]
			public static AudioClip WindingHint
			{
				[Token(Token = "0x600111C")]
				[Address(RVA = "0x845654", Offset = "0x845654", VA = "0x845654")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C1")]
			public static AudioClip CCuboid
			{
				[Token(Token = "0x600111D")]
				[Address(RVA = "0x84569C", Offset = "0x84569C", VA = "0x84569C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C2")]
			public static AudioClip SemiCylinder
			{
				[Token(Token = "0x600111E")]
				[Address(RVA = "0x8456E4", Offset = "0x8456E4", VA = "0x8456E4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C3")]
			public static AudioClip AirplaneHint
			{
				[Token(Token = "0x600111F")]
				[Address(RVA = "0x84572C", Offset = "0x84572C", VA = "0x84572C")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x200030A")]
		public static class sprites
		{
			[Token(Token = "0x4000FE5")]
			public const string Names = "Cactus, CandyCane, ChristmasBall, MusicWinding, PlaneBattery, Present, Star, TeddyBear, Vespa, S02, S03, S04, S10, S11, S12, S20, S21, S22";

			[Token(Token = "0x170001C4")]
			public static Sprite Cactus
			{
				[Token(Token = "0x6001120")]
				[Address(RVA = "0x845774", Offset = "0x845774", VA = "0x845774")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C5")]
			public static Sprite CandyCane
			{
				[Token(Token = "0x6001121")]
				[Address(RVA = "0x8457BC", Offset = "0x8457BC", VA = "0x8457BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C6")]
			public static Sprite ChristmasBall
			{
				[Token(Token = "0x6001122")]
				[Address(RVA = "0x845804", Offset = "0x845804", VA = "0x845804")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C7")]
			public static Sprite MusicWinding
			{
				[Token(Token = "0x6001123")]
				[Address(RVA = "0x84584C", Offset = "0x84584C", VA = "0x84584C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C8")]
			public static Sprite PlaneBattery
			{
				[Token(Token = "0x6001124")]
				[Address(RVA = "0x845894", Offset = "0x845894", VA = "0x845894")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C9")]
			public static Sprite Present
			{
				[Token(Token = "0x6001125")]
				[Address(RVA = "0x8458DC", Offset = "0x8458DC", VA = "0x8458DC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CA")]
			public static Sprite Star
			{
				[Token(Token = "0x6001126")]
				[Address(RVA = "0x845924", Offset = "0x845924", VA = "0x845924")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CB")]
			public static Sprite TeddyBear
			{
				[Token(Token = "0x6001127")]
				[Address(RVA = "0x84596C", Offset = "0x84596C", VA = "0x84596C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CC")]
			public static Sprite Vespa
			{
				[Token(Token = "0x6001128")]
				[Address(RVA = "0x8459B4", Offset = "0x8459B4", VA = "0x8459B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CD")]
			public static Sprite S02
			{
				[Token(Token = "0x6001129")]
				[Address(RVA = "0x8459FC", Offset = "0x8459FC", VA = "0x8459FC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CE")]
			public static Sprite S03
			{
				[Token(Token = "0x600112A")]
				[Address(RVA = "0x845A44", Offset = "0x845A44", VA = "0x845A44")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CF")]
			public static Sprite S04
			{
				[Token(Token = "0x600112B")]
				[Address(RVA = "0x845A8C", Offset = "0x845A8C", VA = "0x845A8C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D0")]
			public static Sprite S10
			{
				[Token(Token = "0x600112C")]
				[Address(RVA = "0x845AD4", Offset = "0x845AD4", VA = "0x845AD4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D1")]
			public static Sprite S11
			{
				[Token(Token = "0x600112D")]
				[Address(RVA = "0x845B1C", Offset = "0x845B1C", VA = "0x845B1C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D2")]
			public static Sprite S12
			{
				[Token(Token = "0x600112E")]
				[Address(RVA = "0x845B64", Offset = "0x845B64", VA = "0x845B64")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D3")]
			public static Sprite S20
			{
				[Token(Token = "0x600112F")]
				[Address(RVA = "0x845BAC", Offset = "0x845BAC", VA = "0x845BAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D4")]
			public static Sprite S21
			{
				[Token(Token = "0x6001130")]
				[Address(RVA = "0x845BF4", Offset = "0x845BF4", VA = "0x845BF4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D5")]
			public static Sprite S22
			{
				[Token(Token = "0x6001131")]
				[Address(RVA = "0x845C3C", Offset = "0x845C3C", VA = "0x845C3C")]
				get
				{
					return null;
				}
			}
		}
	}
}
namespace RSG
{
	[Token(Token = "0x20001FF")]
	public interface IPromise<PromisedT>
	{
		[Token(Token = "0x17000102")]
		int Id
		{
			[Token(Token = "0x6000CB8")]
			get;
		}

		[Token(Token = "0x6000CB9")]
		IPromise<PromisedT> WithName(string name);

		[Token(Token = "0x6000CBA")]
		void Done(Action<PromisedT> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x6000CBB")]
		void Done(Action<PromisedT> onResolved);

		[Token(Token = "0x6000CBC")]
		void Done();

		[Token(Token = "0x6000CBD")]
		IPromise Catch(Action<Exception> onRejected);

		[Token(Token = "0x6000CBE")]
		IPromise<PromisedT> Catch(Func<Exception, PromisedT> onRejected);

		[Token(Token = "0x6000CBF")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<PromisedT, IPromise<ConvertedT>> onResolved);

		[Token(Token = "0x6000CC0")]
		IPromise Then(Func<PromisedT, IPromise> onResolved);

		[Token(Token = "0x6000CC1")]
		IPromise Then(Action<PromisedT> onResolved);

		[Token(Token = "0x6000CC2")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<PromisedT, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected);

		[Token(Token = "0x6000CC3")]
		IPromise Then(Func<PromisedT, IPromise> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x6000CC4")]
		IPromise Then(Action<PromisedT> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x6000CC5")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<PromisedT, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress);

		[Token(Token = "0x6000CC6")]
		IPromise Then(Func<PromisedT, IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x6000CC7")]
		IPromise Then(Action<PromisedT> onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x6000CC8")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<PromisedT, ConvertedT> transform);

		[Token(Token = "0x6000CC9")]
		IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<PromisedT, IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x6000CCA")]
		IPromise ThenAll(Func<PromisedT, IEnumerable<IPromise>> chain);

		[Token(Token = "0x6000CCB")]
		IPromise<ConvertedT> ThenRace<ConvertedT>(Func<PromisedT, IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x6000CCC")]
		IPromise ThenRace(Func<PromisedT, IEnumerable<IPromise>> chain);

		[Token(Token = "0x6000CCD")]
		IPromise<PromisedT> Finally(Action onComplete);

		[Token(Token = "0x6000CCE")]
		IPromise ContinueWith(Func<IPromise> onResolved);

		[Token(Token = "0x6000CCF")]
		IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete);

		[Token(Token = "0x6000CD0")]
		IPromise<PromisedT> Progress(Action<float> onProgress);
	}
	[Token(Token = "0x2000200")]
	public interface IRejectable
	{
		[Token(Token = "0x6000CD1")]
		void Reject(Exception ex);
	}
	[Token(Token = "0x2000201")]
	public interface IPendingPromise<PromisedT> : IRejectable
	{
		[Token(Token = "0x17000103")]
		int Id
		{
			[Token(Token = "0x6000CD2")]
			get;
		}

		[Token(Token = "0x6000CD3")]
		void Resolve(PromisedT value);

		[Token(Token = "0x6000CD4")]
		void ReportProgress(float progress);
	}
	[Token(Token = "0x2000202")]
	public enum PromiseState
	{
		[Token(Token = "0x4000BEF")]
		Pending,
		[Token(Token = "0x4000BF0")]
		Rejected,
		[Token(Token = "0x4000BF1")]
		Resolved
	}
	[Token(Token = "0x2000203")]
	public class Promise<PromisedT> : IPromise<PromisedT>, IPendingPromise<PromisedT>, IRejectable, IPromiseInfo
	{
		[Token(Token = "0x200030B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C2A8", Offset = "0x68C2A8")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<PromisedT> <>4__this;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Exception ex;

			[Token(Token = "0x6001132")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001133")]
			internal void <InvokeRejectHandlers>b__0(RejectHandler handler)
			{
			}
		}

		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C2B8", Offset = "0x68C2B8")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<PromisedT> <>4__this;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float progress;

			[Token(Token = "0x6001134")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001135")]
			internal void <InvokeProgressHandlers>b__0(ProgressHandler handler)
			{
			}
		}

		[Token(Token = "0x200030D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C2C8", Offset = "0x68C2C8")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise resultPromise;

			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onRejected;

			[Token(Token = "0x6001136")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001137")]
			internal void <Catch>b__0(PromisedT _)
			{
			}

			[Token(Token = "0x6001138")]
			internal void <Catch>b__1(Exception ex)
			{
			}

			[Token(Token = "0x6001139")]
			internal void <Catch>b__2(float v)
			{
			}
		}

		[Token(Token = "0x200030E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C2D8", Offset = "0x68C2D8")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<PromisedT> resultPromise;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Exception, PromisedT> onRejected;

			[Token(Token = "0x600113A")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600113B")]
			internal void <Catch>b__0(PromisedT v)
			{
			}

			[Token(Token = "0x600113C")]
			internal void <Catch>b__1(Exception ex)
			{
			}

			[Token(Token = "0x600113D")]
			internal void <Catch>b__2(float v)
			{
			}
		}

		[Token(Token = "0x200030F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C2E8", Offset = "0x68C2E8")]
		private sealed class <>c__DisplayClass42_0<ConvertedT>
		{
			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<PromisedT, IPromise<ConvertedT>> onResolved;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<ConvertedT> resultPromise;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Exception, IPromise<ConvertedT>> onRejected;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<float> <>9__2;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__3;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x4000FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__5;

			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__6;

			[Token(Token = "0x600113E")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x600113F")]
			internal void <Then>b__0(PromisedT v)
			{
			}

			[Token(Token = "0x6001140")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x6001141")]
			internal void <Then>b__3(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x6001142")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x6001143")]
			internal void <Then>b__1(Exception ex)
			{
			}

			[Token(Token = "0x6001144")]
			internal void <Then>b__5(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x6001145")]
			internal void <Then>b__6(Exception callbackEx)
			{
			}
		}

		[Token(Token = "0x2000310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C2F8", Offset = "0x68C2F8")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<PromisedT, IPromise> onResolved;

			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise resultPromise;

			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onRejected;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<float> <>9__2;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action <>9__3;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x6001146")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6001147")]
			internal void <Then>b__0(PromisedT v)
			{
			}

			[Token(Token = "0x6001148")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x6001149")]
			internal void <Then>b__3()
			{
			}

			[Token(Token = "0x600114A")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x600114B")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000311")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C308", Offset = "0x68C308")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<PromisedT> onResolved;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise resultPromise;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onRejected;

			[Token(Token = "0x600114C")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x600114D")]
			internal void <Then>b__0(PromisedT v)
			{
			}

			[Token(Token = "0x600114E")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000312")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C318", Offset = "0x68C318")]
		private sealed class <>c__DisplayClass45_0<ConvertedT>
		{
			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<PromisedT, ConvertedT> transform;

			[Token(Token = "0x600114F")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6001150")]
			internal IPromise<ConvertedT> <Then>b__0(PromisedT value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000313")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C328", Offset = "0x68C328")]
		private sealed class <>c__DisplayClass48_0<ConvertedT>
		{
			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<PromisedT, IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x6001151")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6001152")]
			internal IPromise<IEnumerable<ConvertedT>> <ThenAll>b__0(PromisedT value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C338", Offset = "0x68C338")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<PromisedT, IEnumerable<IPromise>> chain;

			[Token(Token = "0x6001153")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x6001154")]
			internal IPromise <ThenAll>b__0(PromisedT value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000315")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C348", Offset = "0x68C348")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] progress;

			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<IEnumerable<PromisedT>> resultPromise;

			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PromisedT[] results;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int remainingCount;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x6001155")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6001156")]
			internal void <All>b__0(IPromise<PromisedT> promise, int index)
			{
			}

			[Token(Token = "0x6001157")]
			internal void <All>b__3(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000316")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C358", Offset = "0x68C358")]
		private sealed class <>c__DisplayClass51_1
		{
			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int index;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass51_0 CS$<>8__locals1;

			[Token(Token = "0x6001158")]
			public <>c__DisplayClass51_1()
			{
			}

			[Token(Token = "0x6001159")]
			internal void <All>b__1(float v)
			{
			}

			[Token(Token = "0x600115A")]
			internal void <All>b__2(PromisedT result)
			{
			}
		}

		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C368", Offset = "0x68C368")]
		private sealed class <>c__DisplayClass52_0<ConvertedT>
		{
			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<PromisedT, IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x600115B")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x600115C")]
			internal IPromise<ConvertedT> <ThenRace>b__0(PromisedT value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C378", Offset = "0x68C378")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<PromisedT, IEnumerable<IPromise>> chain;

			[Token(Token = "0x600115D")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x600115E")]
			internal IPromise <ThenRace>b__0(PromisedT value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000319")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C388", Offset = "0x68C388")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<PromisedT> resultPromise;

			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] progress;

			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<PromisedT> <>9__2;

			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x600115F")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6001160")]
			internal void <Race>b__0(IPromise<PromisedT> promise, int index)
			{
			}

			[Token(Token = "0x6001161")]
			internal void <Race>b__2(PromisedT result)
			{
			}

			[Token(Token = "0x6001162")]
			internal void <Race>b__3(Exception ex)
			{
			}
		}

		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C398", Offset = "0x68C398")]
		private sealed class <>c__DisplayClass55_1
		{
			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int index;

			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass55_0 CS$<>8__locals1;

			[Token(Token = "0x6001163")]
			public <>c__DisplayClass55_1()
			{
			}

			[Token(Token = "0x6001164")]
			internal void <Race>b__1(float v)
			{
			}
		}

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C3A8", Offset = "0x68C3A8")]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<PromisedT> promise;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action onComplete;

			[Token(Token = "0x6001165")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x6001166")]
			internal void <Finally>b__0(PromisedT x)
			{
			}

			[Token(Token = "0x6001167")]
			internal void <Finally>b__1(Exception e)
			{
			}

			[Token(Token = "0x6001168")]
			internal PromisedT <Finally>b__2(PromisedT v)
			{
				return (PromisedT)null;
			}
		}

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C3B8", Offset = "0x68C3B8")]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise promise;

			[Token(Token = "0x6001169")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x600116A")]
			internal void <ContinueWith>b__0(PromisedT x)
			{
			}

			[Token(Token = "0x600116B")]
			internal void <ContinueWith>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x200031D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C3C8", Offset = "0x68C3C8")]
		private sealed class <>c__DisplayClass60_0<ConvertedT>
		{
			[Token(Token = "0x4001014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise promise;

			[Token(Token = "0x600116C")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x600116D")]
			internal void <ContinueWith>b__0(PromisedT x)
			{
			}

			[Token(Token = "0x600116E")]
			internal void <ContinueWith>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception rejectionException;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PromisedT resolveValue;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RejectHandler> rejectHandlers;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ProgressHandler> progressHandlers;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Action<PromisedT>> resolveCallbacks;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<IRejectable> resolveRejectables;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int id;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690100", Offset = "0x690100")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690110", Offset = "0x690110")]
		private PromiseState <CurState>k__BackingField;

		[Token(Token = "0x17000104")]
		public int Id
		{
			[Token(Token = "0x6000CD5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000105")]
		public string Name
		{
			[Token(Token = "0x6000CD6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6923EC", Offset = "0x6923EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6923FC", Offset = "0x6923FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public PromiseState CurState
		{
			[Token(Token = "0x6000CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69240C", Offset = "0x69240C")]
			get
			{
				return default(PromiseState);
			}
			[Token(Token = "0x6000CD9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69241C", Offset = "0x69241C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CDA")]
		public Promise()
		{
		}

		[Token(Token = "0x6000CDB")]
		public Promise(Action<Action<PromisedT>, Action<Exception>> resolver)
		{
		}

		[Token(Token = "0x6000CDC")]
		private void AddRejectHandler(Action<Exception> onRejected, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6000CDD")]
		private void AddResolveHandler(Action<PromisedT> onResolved, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6000CDE")]
		private void AddProgressHandler(Action<float> onProgress, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6000CDF")]
		private void InvokeHandler<T>(Action<T> callback, IRejectable rejectable, T value)
		{
		}

		[Token(Token = "0x6000CE0")]
		private void ClearHandlers()
		{
		}

		[Token(Token = "0x6000CE1")]
		private void InvokeRejectHandlers(Exception ex)
		{
		}

		[Token(Token = "0x6000CE2")]
		private void InvokeResolveHandlers(PromisedT value)
		{
		}

		[Token(Token = "0x6000CE3")]
		private void InvokeProgressHandlers(float progress)
		{
		}

		[Token(Token = "0x6000CE4")]
		public void Reject(Exception ex)
		{
		}

		[Token(Token = "0x6000CE5")]
		public void Resolve(PromisedT value)
		{
		}

		[Token(Token = "0x6000CE6")]
		public void ReportProgress(float progress)
		{
		}

		[Token(Token = "0x6000CE7")]
		public void Done(Action<PromisedT> onResolved, Action<Exception> onRejected)
		{
		}

		[Token(Token = "0x6000CE8")]
		public void Done(Action<PromisedT> onResolved)
		{
		}

		[Token(Token = "0x6000CE9")]
		public void Done()
		{
		}

		[Token(Token = "0x6000CEA")]
		public IPromise<PromisedT> WithName(string name)
		{
			return null;
		}

		[Token(Token = "0x6000CEB")]
		public IPromise Catch(Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		public IPromise<PromisedT> Catch(Func<Exception, PromisedT> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000CED")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<PromisedT, IPromise<ConvertedT>> onResolved)
		{
			return null;
		}

		[Token(Token = "0x6000CEE")]
		public IPromise Then(Func<PromisedT, IPromise> onResolved)
		{
			return null;
		}

		[Token(Token = "0x6000CEF")]
		public IPromise Then(Action<PromisedT> onResolved)
		{
			return null;
		}

		[Token(Token = "0x6000CF0")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<PromisedT, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000CF1")]
		public IPromise Then(Func<PromisedT, IPromise> onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000CF2")]
		public IPromise Then(Action<PromisedT> onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000CF3")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<PromisedT, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000CF4")]
		public IPromise Then(Func<PromisedT, IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000CF5")]
		public IPromise Then(Action<PromisedT> onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<PromisedT, ConvertedT> transform)
		{
			return null;
		}

		[Token(Token = "0x6000CF7")]
		private void ActionHandlers(IRejectable resultPromise, Action<PromisedT> resolveHandler, Action<Exception> rejectHandler)
		{
		}

		[Token(Token = "0x6000CF8")]
		private void ProgressHandlers(IRejectable resultPromise, Action<float> progressHandler)
		{
		}

		[Token(Token = "0x6000CF9")]
		public IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<PromisedT, IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x6000CFA")]
		public IPromise ThenAll(Func<PromisedT, IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x6000CFB")]
		public static IPromise<IEnumerable<PromisedT>> All(params IPromise<PromisedT>[] promises)
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		public static IPromise<IEnumerable<PromisedT>> All(IEnumerable<IPromise<PromisedT>> promises)
		{
			return null;
		}

		[Token(Token = "0x6000CFD")]
		public IPromise<ConvertedT> ThenRace<ConvertedT>(Func<PromisedT, IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x6000CFE")]
		public IPromise ThenRace(Func<PromisedT, IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x6000CFF")]
		public static IPromise<PromisedT> Race(params IPromise<PromisedT>[] promises)
		{
			return null;
		}

		[Token(Token = "0x6000D00")]
		public static IPromise<PromisedT> Race(IEnumerable<IPromise<PromisedT>> promises)
		{
			return null;
		}

		[Token(Token = "0x6000D01")]
		public static IPromise<PromisedT> Resolved(PromisedT promisedValue)
		{
			return null;
		}

		[Token(Token = "0x6000D02")]
		public static IPromise<PromisedT> Rejected(Exception ex)
		{
			return null;
		}

		[Token(Token = "0x6000D03")]
		public IPromise<PromisedT> Finally(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000D04")]
		public IPromise ContinueWith(Func<IPromise> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000D05")]
		public IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000D06")]
		public IPromise<PromisedT> Progress(Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000D07")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69242C", Offset = "0x69242C")]
		private void <Done>b__30_0(Exception ex)
		{
		}

		[Token(Token = "0x6000D08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69243C", Offset = "0x69243C")]
		private void <Done>b__31_0(Exception ex)
		{
		}

		[Token(Token = "0x6000D09")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69244C", Offset = "0x69244C")]
		private void <Done>b__32_0(Exception ex)
		{
		}
	}
	[Token(Token = "0x2000204")]
	public interface IPromise
	{
		[Token(Token = "0x17000107")]
		int Id
		{
			[Token(Token = "0x6000D0A")]
			get;
		}

		[Token(Token = "0x6000D0B")]
		IPromise WithName(string name);

		[Token(Token = "0x6000D0C")]
		void Done(Action onResolved, Action<Exception> onRejected);

		[Token(Token = "0x6000D0D")]
		void Done(Action onResolved);

		[Token(Token = "0x6000D0E")]
		void Done();

		[Token(Token = "0x6000D0F")]
		IPromise Catch(Action<Exception> onRejected);

		[Token(Token = "0x6000D10")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved);

		[Token(Token = "0x6000D11")]
		IPromise Then(Func<IPromise> onResolved);

		[Token(Token = "0x6000D12")]
		IPromise Then(Action onResolved);

		[Token(Token = "0x6000D13")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected);

		[Token(Token = "0x6000D14")]
		IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x6000D15")]
		IPromise Then(Action onResolved, Action<Exception> onRejected);

		[Token(Token = "0x6000D16")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress);

		[Token(Token = "0x6000D17")]
		IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x6000D18")]
		IPromise Then(Action onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x6000D19")]
		IPromise ThenAll(Func<IEnumerable<IPromise>> chain);

		[Token(Token = "0x6000D1A")]
		IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x6000D1B")]
		IPromise ThenSequence(Func<IEnumerable<Func<IPromise>>> chain);

		[Token(Token = "0x6000D1C")]
		IPromise ThenRace(Func<IEnumerable<IPromise>> chain);

		[Token(Token = "0x6000D1D")]
		IPromise<ConvertedT> ThenRace<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x6000D1E")]
		IPromise Finally(Action onComplete);

		[Token(Token = "0x6000D1F")]
		IPromise ContinueWith(Func<IPromise> onResolved);

		[Token(Token = "0x6000D20")]
		IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete);

		[Token(Token = "0x6000D21")]
		IPromise Progress(Action<float> onProgress);
	}
	[Token(Token = "0x2000205")]
	public interface IPendingPromise : IRejectable
	{
		[Token(Token = "0x17000108")]
		int Id
		{
			[Token(Token = "0x6000D22")]
			get;
		}

		[Token(Token = "0x6000D23")]
		void Resolve();

		[Token(Token = "0x6000D24")]
		void ReportProgress(float progress);
	}
	[Token(Token = "0x2000206")]
	public interface IPromiseInfo
	{
		[Token(Token = "0x17000109")]
		int Id
		{
			[Token(Token = "0x6000D25")]
			get;
		}

		[Token(Token = "0x1700010A")]
		string Name
		{
			[Token(Token = "0x6000D26")]
			get;
		}
	}
	[Token(Token = "0x2000207")]
	public class ExceptionEventArgs : EventArgs
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690120", Offset = "0x690120")]
		private Exception <Exception>k__BackingField;

		[Token(Token = "0x1700010B")]
		public Exception Exception
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x875694", Offset = "0x875694", VA = "0x875694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69245C", Offset = "0x69245C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x87568C", Offset = "0x87568C", VA = "0x87568C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69246C", Offset = "0x69246C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x875610", Offset = "0x875610", VA = "0x875610")]
		internal ExceptionEventArgs(Exception exception)
		{
		}
	}
	[Token(Token = "0x2000208")]
	public struct RejectHandler
	{
		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<Exception> callback;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IRejectable rejectable;
	}
	[Token(Token = "0x2000209")]
	public struct ProgressHandler
	{
		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<float> callback;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IRejectable rejectable;
	}
	[Token(Token = "0x200020A")]
	public class Promise : IPromise, IPendingPromise, IRejectable, IPromiseInfo
	{
		[Token(Token = "0x200031E")]
		public struct ResolveHandler
		{
			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action callback;

			[Token(Token = "0x4001016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IRejectable rejectable;
		}

		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C3D8", Offset = "0x68C3D8")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise <>4__this;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Exception ex;

			[Token(Token = "0x600116F")]
			[Address(RVA = "0x7FAF50", Offset = "0x7FAF50", VA = "0x7FAF50")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001170")]
			[Address(RVA = "0x7FAF58", Offset = "0x7FAF58", VA = "0x7FAF58")]
			internal void <InvokeRejectHandlers>b__0(RejectHandler handler)
			{
			}
		}

		[Token(Token = "0x2000320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C3E8", Offset = "0x68C3E8")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise <>4__this;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float progress;

			[Token(Token = "0x6001171")]
			[Address(RVA = "0x7FAFA4", Offset = "0x7FAFA4", VA = "0x7FAFA4")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001172")]
			[Address(RVA = "0x7FAFAC", Offset = "0x7FAFAC", VA = "0x7FAFAC")]
			internal void <InvokeProgressHandlers>b__0(ProgressHandler handler)
			{
			}
		}

		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C3F8", Offset = "0x68C3F8")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x400101B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise resultPromise;

			[Token(Token = "0x400101C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Exception> onRejected;

			[Token(Token = "0x6001173")]
			[Address(RVA = "0x7FB004", Offset = "0x7FB004", VA = "0x7FB004")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x6001174")]
			[Address(RVA = "0x7FB00C", Offset = "0x7FB00C", VA = "0x7FB00C")]
			internal void <Catch>b__0()
			{
			}

			[Token(Token = "0x6001175")]
			[Address(RVA = "0x7FB03C", Offset = "0x7FB03C", VA = "0x7FB03C")]
			internal void <Catch>b__1(Exception ex)
			{
			}

			[Token(Token = "0x6001176")]
			[Address(RVA = "0x7FB168", Offset = "0x7FB168", VA = "0x7FB168")]
			internal void <Catch>b__2(float v)
			{
			}
		}

		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C408", Offset = "0x68C408")]
		private sealed class <>c__DisplayClass51_0<ConvertedT>
		{
			[Token(Token = "0x400101D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IPromise<ConvertedT>> onResolved;

			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<ConvertedT> resultPromise;

			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Exception, IPromise<ConvertedT>> onRejected;

			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<float> <>9__2;

			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__3;

			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__5;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__6;

			[Token(Token = "0x6001177")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6001178")]
			internal void <Then>b__0()
			{
			}

			[Token(Token = "0x6001179")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x600117A")]
			internal void <Then>b__3(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x600117B")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x600117C")]
			internal void <Then>b__1(Exception ex)
			{
			}

			[Token(Token = "0x600117D")]
			internal void <Then>b__5(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x600117E")]
			internal void <Then>b__6(Exception callbackEx)
			{
			}
		}

		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C418", Offset = "0x68C418")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IPromise> onResolved;

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> onRejected;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<float> <>9__2;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__3;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x600117F")]
			[Address(RVA = "0x7FB1A8", Offset = "0x7FB1A8", VA = "0x7FB1A8")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x6001180")]
			[Address(RVA = "0x7FB1B0", Offset = "0x7FB1B0", VA = "0x7FB1B0")]
			internal void <Then>b__0()
			{
			}

			[Token(Token = "0x6001181")]
			[Address(RVA = "0x7FB404", Offset = "0x7FB404", VA = "0x7FB404")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x6001182")]
			[Address(RVA = "0x7FB444", Offset = "0x7FB444", VA = "0x7FB444")]
			internal void <Then>b__3()
			{
			}

			[Token(Token = "0x6001183")]
			[Address(RVA = "0x7FB474", Offset = "0x7FB474", VA = "0x7FB474")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x7FB4AC", Offset = "0x7FB4AC", VA = "0x7FB4AC")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C428", Offset = "0x68C428")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onResolved;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> onRejected;

			[Token(Token = "0x6001185")]
			[Address(RVA = "0x7FB530", Offset = "0x7FB530", VA = "0x7FB530")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x7FB538", Offset = "0x7FB538", VA = "0x7FB538")]
			internal void <Then>b__0()
			{
			}

			[Token(Token = "0x6001187")]
			[Address(RVA = "0x7FB57C", Offset = "0x7FB57C", VA = "0x7FB57C")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000325")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C438", Offset = "0x68C438")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerable<IPromise>> chain;

			[Token(Token = "0x6001188")]
			[Address(RVA = "0x7FB628", Offset = "0x7FB628", VA = "0x7FB628")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6001189")]
			[Address(RVA = "0x7FB630", Offset = "0x7FB630", VA = "0x7FB630")]
			internal IPromise <ThenAll>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000326")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C448", Offset = "0x68C448")]
		private sealed class <>c__DisplayClass57_0<ConvertedT>
		{
			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x600118A")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x600118B")]
			internal IPromise<IEnumerable<ConvertedT>> <ThenAll>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000327")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C458", Offset = "0x68C458")]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] progress;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int remainingCount;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x600118C")]
			[Address(RVA = "0x7FB6C4", Offset = "0x7FB6C4", VA = "0x7FB6C4")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x600118D")]
			[Address(RVA = "0x7FB6CC", Offset = "0x7FB6CC", VA = "0x7FB6CC")]
			internal void <All>b__0(IPromise promise, int index)
			{
			}

			[Token(Token = "0x600118E")]
			[Address(RVA = "0x7FB9F4", Offset = "0x7FB9F4", VA = "0x7FB9F4")]
			internal void <All>b__3(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C468", Offset = "0x68C468")]
		private sealed class <>c__DisplayClass59_1
		{
			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass59_0 CS$<>8__locals1;

			[Token(Token = "0x600118F")]
			[Address(RVA = "0x7FB9EC", Offset = "0x7FB9EC", VA = "0x7FB9EC")]
			public <>c__DisplayClass59_1()
			{
			}

			[Token(Token = "0x6001190")]
			[Address(RVA = "0x7FBA68", Offset = "0x7FBA68", VA = "0x7FBA68")]
			internal void <All>b__1(float v)
			{
			}

			[Token(Token = "0x6001191")]
			[Address(RVA = "0x7FBB74", Offset = "0x7FBB74", VA = "0x7FBB74")]
			internal void <All>b__2()
			{
			}
		}

		[Token(Token = "0x2000329")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C478", Offset = "0x68C478")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerable<Func<IPromise>>> chain;

			[Token(Token = "0x6001192")]
			[Address(RVA = "0x7FBC98", Offset = "0x7FBC98", VA = "0x7FBC98")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6001193")]
			[Address(RVA = "0x7FBCA0", Offset = "0x7FBCA0", VA = "0x7FBCA0")]
			internal IPromise <ThenSequence>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200032A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C488", Offset = "0x68C488")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int count;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise promise;

			[Token(Token = "0x6001194")]
			[Address(RVA = "0x7FBD34", Offset = "0x7FBD34", VA = "0x7FBD34")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x6001195")]
			[Address(RVA = "0x7FBD3C", Offset = "0x7FBD3C", VA = "0x7FBD3C")]
			internal IPromise <Sequence>b__0(IPromise prevPromise, Func<IPromise> fn)
			{
				return null;
			}

			[Token(Token = "0x6001196")]
			[Address(RVA = "0x7FBF58", Offset = "0x7FBF58", VA = "0x7FBF58")]
			internal void <Sequence>b__1()
			{
			}
		}

		[Token(Token = "0x200032B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C498", Offset = "0x68C498")]
		private sealed class <>c__DisplayClass62_1
		{
			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int itemSequence;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<IPromise> fn;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass62_0 CS$<>8__locals1;

			[Token(Token = "0x6001197")]
			[Address(RVA = "0x7FBF50", Offset = "0x7FBF50", VA = "0x7FBF50")]
			public <>c__DisplayClass62_1()
			{
			}

			[Token(Token = "0x6001198")]
			[Address(RVA = "0x7FBF88", Offset = "0x7FBF88", VA = "0x7FBF88")]
			internal IPromise <Sequence>b__2()
			{
				return null;
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0x7FC054", Offset = "0x7FC054", VA = "0x7FC054")]
			internal void <Sequence>b__3(float v)
			{
			}
		}

		[Token(Token = "0x200032C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C4A8", Offset = "0x68C4A8")]
		private sealed class <>c__DisplayClass63_0
		{
			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerable<IPromise>> chain;

			[Token(Token = "0x600119A")]
			[Address(RVA = "0x7FC0D8", Offset = "0x7FC0D8", VA = "0x7FC0D8")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x600119B")]
			[Address(RVA = "0x7FC0E0", Offset = "0x7FC0E0", VA = "0x7FC0E0")]
			internal IPromise <ThenRace>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200032D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C4B8", Offset = "0x68C4B8")]
		private sealed class <>c__DisplayClass64_0<ConvertedT>
		{
			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x600119C")]
			public <>c__DisplayClass64_0()
			{
			}

			[Token(Token = "0x600119D")]
			internal IPromise<ConvertedT> <ThenRace>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200032E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C4C8", Offset = "0x68C4C8")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] progress;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> <>9__2;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__3;

			[Token(Token = "0x600119E")]
			[Address(RVA = "0x7FC174", Offset = "0x7FC174", VA = "0x7FC174")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x600119F")]
			[Address(RVA = "0x7FC17C", Offset = "0x7FC17C", VA = "0x7FC17C")]
			internal void <Race>b__0(IPromise promise, int index)
			{
			}

			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x7FC4AC", Offset = "0x7FC4AC", VA = "0x7FC4AC")]
			internal void <Race>b__2(Exception ex)
			{
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x7FC520", Offset = "0x7FC520", VA = "0x7FC520")]
			internal void <Race>b__3()
			{
			}
		}

		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C4D8", Offset = "0x68C4D8")]
		private sealed class <>c__DisplayClass66_1
		{
			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass66_0 CS$<>8__locals1;

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x7FC4A4", Offset = "0x7FC4A4", VA = "0x7FC4A4")]
			public <>c__DisplayClass66_1()
			{
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x7FC580", Offset = "0x7FC580", VA = "0x7FC580")]
			internal void <Race>b__1(float v)
			{
			}
		}

		[Token(Token = "0x2000330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C4E8", Offset = "0x68C4E8")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise promise;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x7FC648", Offset = "0x7FC648", VA = "0x7FC648")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x7FC650", Offset = "0x7FC650", VA = "0x7FC650")]
			internal void <Finally>b__0()
			{
			}

			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x7FC680", Offset = "0x7FC680", VA = "0x7FC680")]
			internal void <Finally>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x2000331")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C4F8", Offset = "0x68C4F8")]
		private sealed class <>c__DisplayClass70_0
		{
			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise promise;

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0x7FC7A4", Offset = "0x7FC7A4", VA = "0x7FC7A4")]
			public <>c__DisplayClass70_0()
			{
			}

			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x7FC7AC", Offset = "0x7FC7AC", VA = "0x7FC7AC")]
			internal void <ContinueWith>b__0()
			{
			}

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x7FC7DC", Offset = "0x7FC7DC", VA = "0x7FC7DC")]
			internal void <ContinueWith>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x2000332")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C508", Offset = "0x68C508")]
		private sealed class <>c__DisplayClass71_0<ConvertedT>
		{
			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise promise;

			[Token(Token = "0x60011AA")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x60011AB")]
			internal void <ContinueWith>b__0()
			{
			}

			[Token(Token = "0x60011AC")]
			internal void <ContinueWith>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnablePromiseTracking;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static EventHandler<ExceptionEventArgs> unhandlerException;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int nextPromiseId;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly HashSet<IPromiseInfo> PendingPromises;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Exception rejectionException;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<RejectHandler> rejectHandlers;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ResolveHandler> resolveHandlers;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ProgressHandler> progressHandlers;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly int id;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690130", Offset = "0x690130")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690140", Offset = "0x690140")]
		private PromiseState <CurState>k__BackingField;

		[Token(Token = "0x1700010C")]
		public int Id
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x875A58", Offset = "0x875A58", VA = "0x875A58", Slot = "32")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010D")]
		public string Name
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x875A60", Offset = "0x875A60", VA = "0x875A60", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69247C", Offset = "0x69247C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x875A68", Offset = "0x875A68", VA = "0x875A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69248C", Offset = "0x69248C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public PromiseState CurState
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x875A70", Offset = "0x875A70", VA = "0x875A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69249C", Offset = "0x69249C")]
			get
			{
				return default(PromiseState);
			}
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x875A78", Offset = "0x875A78", VA = "0x875A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6924AC", Offset = "0x6924AC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event EventHandler<ExceptionEventArgs> UnhandledException
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x875810", Offset = "0x875810", VA = "0x875810")]
			add
			{
			}
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x875900", Offset = "0x875900", VA = "0x875900")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x8759F0", Offset = "0x8759F0", VA = "0x8759F0")]
		public static IEnumerable<IPromiseInfo> GetPendingPromises()
		{
			return null;
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x875A80", Offset = "0x875A80", VA = "0x875A80")]
		public Promise()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x875BC4", Offset = "0x875BC4", VA = "0x875BC4")]
		public Promise(Action<Action, Action<Exception>> resolver)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x875B54", Offset = "0x875B54", VA = "0x875B54")]
		internal static int NextId()
		{
			return default(int);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x875FD0", Offset = "0x875FD0", VA = "0x875FD0")]
		private void AddRejectHandler(Action<Exception> onRejected, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x876074", Offset = "0x876074", VA = "0x876074")]
		private void AddResolveHandler(Action onResolved, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x876118", Offset = "0x876118", VA = "0x876118")]
		private void AddProgressHandler(Action<float> onProgress, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x8761BC", Offset = "0x8761BC", VA = "0x8761BC")]
		private void InvokeRejectHandler(Action<Exception> callback, IRejectable rejectable, Exception value)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x876320", Offset = "0x876320", VA = "0x876320")]
		private void InvokeResolveHandler(Action callback, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x876474", Offset = "0x876474", VA = "0x876474")]
		private void InvokeProgressHandler(Action<float> callback, IRejectable rejectable, float progress)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x8765E4", Offset = "0x8765E4", VA = "0x8765E4")]
		private void ClearHandlers()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x8765F0", Offset = "0x8765F0", VA = "0x8765F0")]
		private void InvokeRejectHandlers(Exception ex)
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x8766DC", Offset = "0x8766DC", VA = "0x8766DC")]
		private void InvokeResolveHandlers()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x876780", Offset = "0x876780", VA = "0x876780")]
		private void InvokeProgressHandlers(float progress)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x875DB0", Offset = "0x875DB0", VA = "0x875DB0", Slot = "31")]
		public void Reject(Exception ex)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x87687C", Offset = "0x87687C", VA = "0x87687C", Slot = "29")]
		public void Resolve()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x876A90", Offset = "0x876A90", VA = "0x876A90", Slot = "30")]
		public void ReportProgress(float progress)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x876C44", Offset = "0x876C44", VA = "0x876C44", Slot = "6")]
		public void Done(Action onResolved, Action<Exception> onRejected)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x876D64", Offset = "0x876D64", VA = "0x876D64", Slot = "7")]
		public void Done(Action onResolved)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x876E84", Offset = "0x876E84", VA = "0x876E84", Slot = "8")]
		public void Done()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x8770E0", Offset = "0x8770E0", VA = "0x8770E0", Slot = "5")]
		public IPromise WithName(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x876F00", Offset = "0x876F00", VA = "0x876F00", Slot = "9")]
		public IPromise Catch(Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000D47")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved)
		{
			return null;
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x877194", Offset = "0x877194", VA = "0x877194", Slot = "11")]
		public IPromise Then(Func<IPromise> onResolved)
		{
			return null;
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x876E78", Offset = "0x876E78", VA = "0x876E78", Slot = "12")]
		public IPromise Then(Action onResolved)
		{
			return null;
		}

		[Token(Token = "0x6000D4A")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x8774F8", Offset = "0x8774F8", VA = "0x8774F8", Slot = "14")]
		public IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x876D5C", Offset = "0x876D5C", VA = "0x876D5C", Slot = "15")]
		public IPromise Then(Action onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000D4D")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x8771A0", Offset = "0x8771A0", VA = "0x8771A0", Slot = "17")]
		public IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x87734C", Offset = "0x87734C", VA = "0x87734C", Slot = "18")]
		public IPromise Then(Action onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x8770E8", Offset = "0x8770E8", VA = "0x8770E8")]
		private void ActionHandlers(IRejectable resultPromise, Action resolveHandler, Action<Exception> rejectHandler)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x877178", Offset = "0x877178", VA = "0x877178")]
		private void ProgressHandlers(IRejectable resultPromise, Action<float> progressHandler)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x877500", Offset = "0x877500", VA = "0x877500", Slot = "19")]
		public IPromise ThenAll(Func<IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x6000D53")]
		public IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x8775BC", Offset = "0x8775BC", VA = "0x8775BC")]
		public static IPromise All(params IPromise[] promises)
		{
			return null;
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x877620", Offset = "0x877620", VA = "0x877620")]
		public static IPromise All(IEnumerable<IPromise> promises)
		{
			return null;
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x87784C", Offset = "0x87784C", VA = "0x87784C", Slot = "21")]
		public IPromise ThenSequence(Func<IEnumerable<Func<IPromise>>> chain)
		{
			return null;
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x877908", Offset = "0x877908", VA = "0x877908")]
		public static IPromise Sequence(params Func<IPromise>[] fns)
		{
			return null;
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x87796C", Offset = "0x87796C", VA = "0x87796C")]
		public static IPromise Sequence(IEnumerable<Func<IPromise>> fns)
		{
			return null;
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x877C18", Offset = "0x877C18", VA = "0x877C18", Slot = "22")]
		public IPromise ThenRace(Func<IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x6000D5A")]
		public IPromise<ConvertedT> ThenRace<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x877CD4", Offset = "0x877CD4", VA = "0x877CD4")]
		public static IPromise Race(params IPromise[] promises)
		{
			return null;
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x877D38", Offset = "0x877D38", VA = "0x877D38")]
		public static IPromise Race(IEnumerable<IPromise> promises)
		{
			return null;
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x8777E0", Offset = "0x8777E0", VA = "0x8777E0")]
		public static IPromise Resolved()
		{
			return null;
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x877EEC", Offset = "0x877EEC", VA = "0x877EEC")]
		public static IPromise Rejected(Exception ex)
		{
			return null;
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x877F60", Offset = "0x877F60", VA = "0x877F60", Slot = "24")]
		public IPromise Finally(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x8780F8", Offset = "0x8780F8", VA = "0x8780F8", Slot = "25")]
		public IPromise ContinueWith(Func<IPromise> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000D61")]
		public IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x87826C", Offset = "0x87826C", VA = "0x87826C", Slot = "27")]
		public IPromise Progress(Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x8782A4", Offset = "0x8782A4", VA = "0x8782A4")]
		internal static void PropagateUnhandledException(object sender, Exception ex)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x878410", Offset = "0x878410", VA = "0x878410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6924BC", Offset = "0x6924BC")]
		private void <InvokeResolveHandlers>b__35_0(ResolveHandler handler)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x878414", Offset = "0x878414", VA = "0x878414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6924CC", Offset = "0x6924CC")]
		private void <Done>b__40_0(Exception ex)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x878488", Offset = "0x878488", VA = "0x878488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6924DC", Offset = "0x6924DC")]
		private void <Done>b__41_0(Exception ex)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x8784FC", Offset = "0x8784FC", VA = "0x8784FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6924EC", Offset = "0x6924EC")]
		private void <Done>b__42_0(Exception ex)
		{
		}
	}
	[Token(Token = "0x200020B")]
	public static class PromiseHelpers
	{
		[Token(Token = "0x2000333")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C518", Offset = "0x68C518")]
		private sealed class <>c__DisplayClass0_0<T1, T2>
		{
			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 val1;

			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int numUnresolved;

			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<Tuple<T1, T2>> promise;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 val2;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool alreadyRejected;

			[Token(Token = "0x60011AD")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60011AE")]
			internal void <All>b__0(T1 val)
			{
			}

			[Token(Token = "0x60011AF")]
			internal void <All>b__1(Exception e)
			{
			}

			[Token(Token = "0x60011B0")]
			internal void <All>b__2(T2 val)
			{
			}

			[Token(Token = "0x60011B1")]
			internal void <All>b__3(Exception e)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C528", Offset = "0x68C528")]
		private sealed class <>c__1<T1, T2, T3>
		{
			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__1<T1, T2, T3> <>9;

			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Tuple<Tuple<T1, T2>, T3>, Tuple<T1, T2, T3>> <>9__1_0;

			[Token(Token = "0x60011B3")]
			public <>c__1()
			{
			}

			[Token(Token = "0x60011B4")]
			internal Tuple<T1, T2, T3> <All>b__1_0(Tuple<Tuple<T1, T2>, T3> vals)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000335")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C538", Offset = "0x68C538")]
		private sealed class <>c__2<T1, T2, T3, T4>
		{
			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__2<T1, T2, T3, T4> <>9;

			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<Tuple<Tuple<T1, T2>, Tuple<T3, T4>>, Tuple<T1, T2, T3, T4>> <>9__2_0;

			[Token(Token = "0x60011B6")]
			public <>c__2()
			{
			}

			[Token(Token = "0x60011B7")]
			internal Tuple<T1, T2, T3, T4> <All>b__2_0(Tuple<Tuple<T1, T2>, Tuple<T3, T4>> vals)
			{
				return null;
			}
		}

		[Token(Token = "0x6000D69")]
		public static IPromise<Tuple<T1, T2>> All<T1, T2>(IPromise<T1> p1, IPromise<T2> p2)
		{
			return null;
		}

		[Token(Token = "0x6000D6A")]
		public static IPromise<Tuple<T1, T2, T3>> All<T1, T2, T3>(IPromise<T1> p1, IPromise<T2> p2, IPromise<T3> p3)
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		public static IPromise<Tuple<T1, T2, T3, T4>> All<T1, T2, T3, T4>(IPromise<T1> p1, IPromise<T2> p2, IPromise<T3> p3, IPromise<T4> p4)
		{
			return null;
		}
	}
	[Token(Token = "0x200020C")]
	public class PromiseCancelledException : Exception
	{
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x7FC80C", Offset = "0x7FC80C", VA = "0x7FC80C")]
		public PromiseCancelledException()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x7FC874", Offset = "0x7FC874", VA = "0x7FC874")]
		public PromiseCancelledException(string message)
		{
		}
	}
	[Token(Token = "0x200020D")]
	internal class PredicateWait
	{
		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Func<TimeData, bool> predicate;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeStarted;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IPendingPromise pendingPromise;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimeData timeData;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int frameStarted;

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x875808", Offset = "0x875808", VA = "0x875808")]
		public PredicateWait()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public struct TimeData
	{
		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float elapsedTime;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float deltaTime;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int elapsedUpdates;
	}
	[Token(Token = "0x200020F")]
	public interface IPromiseTimer
	{
		[Token(Token = "0x6000D6F")]
		IPromise WaitFor(float seconds);

		[Token(Token = "0x6000D70")]
		IPromise WaitUntil(Func<TimeData, bool> predicate);

		[Token(Token = "0x6000D71")]
		IPromise WaitWhile(Func<TimeData, bool> predicate);

		[Token(Token = "0x6000D72")]
		void Update(float deltaTime);

		[Token(Token = "0x6000D73")]
		bool Cancel(IPromise promise);
	}
	[Token(Token = "0x2000210")]
	public class PromiseTimer : IPromiseTimer
	{
		[Token(Token = "0x2000336")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C548", Offset = "0x68C548")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float seconds;

			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x7FC9A8", Offset = "0x7FC9A8", VA = "0x7FC9A8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x7FD328", Offset = "0x7FD328", VA = "0x7FD328")]
			internal bool <WaitFor>b__0(TimeData t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000337")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C558", Offset = "0x68C558")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<TimeData, bool> predicate;

			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x7FCB94", Offset = "0x7FCB94", VA = "0x7FCB94")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60011BB")]
			[Address(RVA = "0x7FD33C", Offset = "0x7FD33C", VA = "0x7FD33C")]
			internal bool <WaitWhile>b__0(TimeData t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float curTime;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int curFrame;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly LinkedList<PredicateWait> waiting;

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x7FC8EC", Offset = "0x7FC8EC", VA = "0x7FC8EC", Slot = "4")]
		public IPromise WaitFor(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x7FCAE0", Offset = "0x7FCAE0", VA = "0x7FCAE0", Slot = "6")]
		public IPromise WaitWhile(Func<TimeData, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x7FC9B0", Offset = "0x7FC9B0", VA = "0x7FC9B0", Slot = "5")]
		public IPromise WaitUntil(Func<TimeData, bool> predicate)
		{
			return null;
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x7FCB9C", Offset = "0x7FCB9C", VA = "0x7FCB9C", Slot = "8")]
		public bool Cancel(IPromise promise)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x7FCCE8", Offset = "0x7FCCE8", VA = "0x7FCCE8")]
		private LinkedListNode<PredicateWait> FindInWaiting(IPromise promise)
		{
			return null;
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x7FCEB8", Offset = "0x7FCEB8", VA = "0x7FCEB8", Slot = "7")]
		public void Update(float deltaTime)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x7FD21C", Offset = "0x7FD21C", VA = "0x7FD21C")]
		private LinkedListNode<PredicateWait> RemoveNode(LinkedListNode<PredicateWait> node)
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x7FD2B8", Offset = "0x7FD2B8", VA = "0x7FD2B8")]
		public PromiseTimer()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class Tuple
	{
		[Token(Token = "0x6000D7C")]
		public static Tuple<T1, T2> Create<T1, T2>(T1 item1, T2 item2)
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		public static Tuple<T1, T2, T3> Create<T1, T2, T3>(T1 item1, T2 item2, T3 item3)
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		public static Tuple<T1, T2, T3, T4> Create<T1, T2, T3, T4>(T1 item1, T2 item2, T3 item3, T4 item4)
		{
			return null;
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x7FD3C0", Offset = "0x7FD3C0", VA = "0x7FD3C0")]
		public Tuple()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class Tuple<T1, T2>
	{
		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690150", Offset = "0x690150")]
		private T1 <Item1>k__BackingField;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690160", Offset = "0x690160")]
		private T2 <Item2>k__BackingField;

		[Token(Token = "0x1700010F")]
		public T1 Item1
		{
			[Token(Token = "0x6000D81")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6924FC", Offset = "0x6924FC")]
			get
			{
				return (T1)null;
			}
			[Token(Token = "0x6000D82")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69250C", Offset = "0x69250C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public T2 Item2
		{
			[Token(Token = "0x6000D83")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69251C", Offset = "0x69251C")]
			get
			{
				return (T2)null;
			}
			[Token(Token = "0x6000D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69252C", Offset = "0x69252C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D80")]
		internal Tuple(T1 item1, T2 item2)
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class Tuple<T1, T2, T3>
	{
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690170", Offset = "0x690170")]
		private T1 <Item1>k__BackingField;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690180", Offset = "0x690180")]
		private T2 <Item2>k__BackingField;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x690190", Offset = "0x690190")]
		private T3 <Item3>k__BackingField;

		[Token(Token = "0x17000111")]
		public T1 Item1
		{
			[Token(Token = "0x6000D86")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69253C", Offset = "0x69253C")]
			get
			{
				return (T1)null;
			}
			[Token(Token = "0x6000D87")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69254C", Offset = "0x69254C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public T2 Item2
		{
			[Token(Token = "0x6000D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69255C", Offset = "0x69255C")]
			get
			{
				return (T2)null;
			}
			[Token(Token = "0x6000D89")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69256C", Offset = "0x69256C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public T3 Item3
		{
			[Token(Token = "0x6000D8A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69257C", Offset = "0x69257C")]
			get
			{
				return (T3)null;
			}
			[Token(Token = "0x6000D8B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69258C", Offset = "0x69258C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D85")]
		internal Tuple(T1 item1, T2 item2, T3 item3)
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class Tuple<T1, T2, T3, T4>
	{
		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6901A0", Offset = "0x6901A0")]
		private T1 <Item1>k__BackingField;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6901B0", Offset = "0x6901B0")]
		private T2 <Item2>k__BackingField;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6901C0", Offset = "0x6901C0")]
		private T3 <Item3>k__BackingField;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6901D0", Offset = "0x6901D0")]
		private T4 <Item4>k__BackingField;

		[Token(Token = "0x17000114")]
		public T1 Item1
		{
			[Token(Token = "0x6000D8D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69259C", Offset = "0x69259C")]
			get
			{
				return (T1)null;
			}
			[Token(Token = "0x6000D8E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6925AC", Offset = "0x6925AC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public T2 Item2
		{
			[Token(Token = "0x6000D8F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6925BC", Offset = "0x6925BC")]
			get
			{
				return (T2)null;
			}
			[Token(Token = "0x6000D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6925CC", Offset = "0x6925CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public T3 Item3
		{
			[Token(Token = "0x6000D91")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6925DC", Offset = "0x6925DC")]
			get
			{
				return (T3)null;
			}
			[Token(Token = "0x6000D92")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6925EC", Offset = "0x6925EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public T4 Item4
		{
			[Token(Token = "0x6000D93")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6925FC", Offset = "0x6925FC")]
			get
			{
				return (T4)null;
			}
			[Token(Token = "0x6000D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69260C", Offset = "0x69260C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D8C")]
		internal Tuple(T1 item1, T2 item2, T3 item3, T4 item4)
		{
		}
	}
}
namespace RSG.Exceptions
{
	[Token(Token = "0x2000215")]
	public class PromiseException : Exception
	{
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x87569C", Offset = "0x87569C", VA = "0x87569C")]
		public PromiseException()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x875704", Offset = "0x875704", VA = "0x875704")]
		public PromiseException(string message)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x87577C", Offset = "0x87577C", VA = "0x87577C")]
		public PromiseException(string message, Exception inner)
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class PromiseStateException : PromiseException
	{
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x8757FC", Offset = "0x8757FC", VA = "0x8757FC")]
		public PromiseStateException()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x875800", Offset = "0x875800", VA = "0x875800")]
		public PromiseStateException(string message)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x875804", Offset = "0x875804", VA = "0x875804")]
		public PromiseStateException(string message, Exception inner)
		{
		}
	}
}
namespace RSG.Promises
{
	[Token(Token = "0x2000217")]
	public static class EnumerableExt
	{
		[Token(Token = "0x2000338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C568", Offset = "0x68C568")]
		private sealed class <FromItems>d__2<T> : IEnumerable<T>, IEnumerable, IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] items;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] <>3__items;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] <>7__wrap1;

			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>7__wrap2;

			[Token(Token = "0x170001D6")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x60011BF")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170001D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011C1")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011BC")]
			[DebuggerHidden]
			public <FromItems>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60011BD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011BE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011C0")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60011C2")]
			[DebuggerHidden]
			private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60011C3")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9B")]
		public static void Each<T>(this IEnumerable<T> source, Action<T> fn)
		{
		}

		[Token(Token = "0x6000D9C")]
		public static void Each<T>(this IEnumerable<T> source, Action<T, int> fn)
		{
		}

		[Token(Token = "0x6000D9D")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x69263C", Offset = "0x69263C")]
		public static IEnumerable<T> FromItems<T>(params T[] items)
		{
			return null;
		}
	}
}
namespace Proyecto26
{
	[Token(Token = "0x2000218")]
	public static class HttpBase
	{
		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C578", Offset = "0x68C578")]
		private sealed class <CreateRequestAndRetry>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RequestHelper options;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<RequestException, ResponseHelper> callback;

			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <retries>5__2;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <request>5__3;

			[Token(Token = "0x170001D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011C8")]
				[Address(RVA = "0x873EA8", Offset = "0x873EA8", VA = "0x873EA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011CA")]
				[Address(RVA = "0x873F18", Offset = "0x873F18", VA = "0x873F18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x8732B4", Offset = "0x8732B4", VA = "0x8732B4")]
			[DebuggerHidden]
			public <CreateRequestAndRetry>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x873680", Offset = "0x873680", VA = "0x873680", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x87376C", Offset = "0x87376C", VA = "0x87376C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x8736AC", Offset = "0x8736AC", VA = "0x8736AC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x873EB0", Offset = "0x873EB0", VA = "0x873EB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200033A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C588", Offset = "0x68C588")]
		private sealed class <>c__DisplayClass5_0<TResponse>
		{
			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RequestHelper options;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<RequestException, ResponseHelper, TResponse> callback;

			[Token(Token = "0x60011CB")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60011CC")]
			internal void <DefaultUnityWebRequest>b__0(RequestException err, ResponseHelper res)
			{
			}
		}

		[Token(Token = "0x200033B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C598", Offset = "0x68C598")]
		private sealed class <>c__DisplayClass6_0<TResponse>
		{
			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RequestHelper options;

			[Token(Token = "0x4001063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<RequestException, ResponseHelper, TResponse[]> callback;

			[Token(Token = "0x60011CD")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60011CE")]
			internal void <DefaultUnityWebRequest>b__0(RequestException err, ResponseHelper res)
			{
			}
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x87321C", Offset = "0x87321C", VA = "0x87321C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6926A0", Offset = "0x6926A0")]
		public static IEnumerator CreateRequestAndRetry(RequestHelper options, Action<RequestException, ResponseHelper> callback)
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x8732E0", Offset = "0x8732E0", VA = "0x8732E0")]
		private static UnityWebRequest CreateRequest(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x8733B4", Offset = "0x8733B4", VA = "0x8733B4")]
		private static RequestException CreateException(UnityWebRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x8735C4", Offset = "0x8735C4", VA = "0x8735C4")]
		private static void DebugLog(bool debugEnabled, object message, bool isError)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x87367C", Offset = "0x87367C", VA = "0x87367C")]
		public static IEnumerator DefaultUnityWebRequest(RequestHelper options, Action<RequestException, ResponseHelper> callback)
		{
			return null;
		}

		[Token(Token = "0x6000DA3")]
		public static IEnumerator DefaultUnityWebRequest<TResponse>(RequestHelper options, Action<RequestException, ResponseHelper, TResponse> callback)
		{
			return null;
		}

		[Token(Token = "0x6000DA4")]
		public static IEnumerator DefaultUnityWebRequest<TResponse>(RequestHelper options, Action<RequestException, ResponseHelper, TResponse[]> callback)
		{
			return null;
		}
	}
	[Token(Token = "0x2000219")]
	public static class JsonHelper
	{
		[Serializable]
		[Token(Token = "0x200033C")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Items;

			[Token(Token = "0x60011CF")]
			public Wrapper()
			{
			}
		}

		[Token(Token = "0x6000DA5")]
		public static T[] ArrayFromJson<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6000DA6")]
		public static T[] FromJsonString<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6000DA7")]
		public static string ArrayToJsonString<T>(T[] array)
		{
			return null;
		}

		[Token(Token = "0x6000DA8")]
		public static string ArrayToJsonString<T>(T[] array, bool prettyPrint)
		{
			return null;
		}
	}
	[Token(Token = "0x200021A")]
	public class RequestException : Exception
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isHttpError;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isNetworkError;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private long _statusCode;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string _serverMessage;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string _response;

		[Token(Token = "0x17000118")]
		public bool IsHttpError
		{
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x873F20", Offset = "0x873F20", VA = "0x873F20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x873F28", Offset = "0x873F28", VA = "0x873F28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public bool IsNetworkError
		{
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x873F34", Offset = "0x873F34", VA = "0x873F34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x873F3C", Offset = "0x873F3C", VA = "0x873F3C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public long StatusCode
		{
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x873F48", Offset = "0x873F48", VA = "0x873F48")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x873F50", Offset = "0x873F50", VA = "0x873F50")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public string ServerMessage
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x873F58", Offset = "0x873F58", VA = "0x873F58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x873F60", Offset = "0x873F60", VA = "0x873F60")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public string Response
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x873F68", Offset = "0x873F68", VA = "0x873F68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x873F70", Offset = "0x873F70", VA = "0x873F70")]
			set
			{
			}
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x873F78", Offset = "0x873F78", VA = "0x873F78")]
		public RequestException()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x873FE0", Offset = "0x873FE0", VA = "0x873FE0")]
		public RequestException(string message)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x874058", Offset = "0x874058", VA = "0x874058")]
		public RequestException(string format, params object[] args)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x873510", Offset = "0x873510", VA = "0x873510")]
		public RequestException(string message, bool isHttpError, bool isNetworkError, long statusCode, string response)
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class RequestHelper
	{
		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _uri;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _method;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private object _body;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _bodyString;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] _bodyRaw;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int? _timeout;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _contentType;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _retries;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _retrySecondsDelay;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action<RequestException, int> _retryCallback;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _enableDebug;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool? _chunkedTransfer;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool? _useHttpContinue;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int? _redirectLimit;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _ignoreHttpException;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WWWForm _formData;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, string> _simpleForm;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<IMultipartFormSection> _formSections;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CertificateHandler _certificateHandler;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UploadHandler _uploadHandler;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private DownloadHandler _downloadHandler;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<string, string> _headers;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6901E0", Offset = "0x6901E0")]
		private UnityWebRequest <Request>k__BackingField;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _isAborted;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool _defaultContentType;

		[Token(Token = "0x1700011D")]
		public string Uri
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x8733AC", Offset = "0x8733AC", VA = "0x8733AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x8740EC", Offset = "0x8740EC", VA = "0x8740EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public string Method
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x8733A4", Offset = "0x8733A4", VA = "0x8733A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x8740F4", Offset = "0x8740F4", VA = "0x8740F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public object Body
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x87304C", Offset = "0x87304C", VA = "0x87304C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x8740FC", Offset = "0x8740FC", VA = "0x8740FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public string BodyString
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x873054", Offset = "0x873054", VA = "0x873054")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x874104", Offset = "0x874104", VA = "0x874104")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public byte[] BodyRaw
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x87303C", Offset = "0x87303C", VA = "0x87303C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x87410C", Offset = "0x87410C", VA = "0x87410C")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public int? Timeout
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x872BC0", Offset = "0x872BC0", VA = "0x872BC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x874114", Offset = "0x874114", VA = "0x874114")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public string ContentType
		{
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x87306C", Offset = "0x87306C", VA = "0x87306C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x87411C", Offset = "0x87411C", VA = "0x87411C")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public int Retries
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x873E90", Offset = "0x873E90", VA = "0x873E90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x874124", Offset = "0x874124", VA = "0x874124")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public float RetrySecondsDelay
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x873E98", Offset = "0x873E98", VA = "0x873E98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x87412C", Offset = "0x87412C", VA = "0x87412C")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public Action<RequestException, int> RetryCallback
		{
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x873EA0", Offset = "0x873EA0", VA = "0x873EA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x874134", Offset = "0x874134", VA = "0x874134")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public bool EnableDebug
		{
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x873D80", Offset = "0x873D80", VA = "0x873D80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x87413C", Offset = "0x87413C", VA = "0x87413C")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public bool? ChunkedTransfer
		{
			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x872BC8", Offset = "0x872BC8", VA = "0x872BC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x874148", Offset = "0x874148", VA = "0x874148")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public bool? UseHttpContinue
		{
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x872BD0", Offset = "0x872BD0", VA = "0x872BD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x874150", Offset = "0x874150", VA = "0x874150")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public int? RedirectLimit
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x872BD8", Offset = "0x872BD8", VA = "0x872BD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x874158", Offset = "0x874158", VA = "0x874158")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public bool IgnoreHttpException
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x873214", Offset = "0x873214", VA = "0x873214")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x874160", Offset = "0x874160", VA = "0x874160")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public WWWForm FormData
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x873064", Offset = "0x873064", VA = "0x873064")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x87416C", Offset = "0x87416C", VA = "0x87416C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public Dictionary<string, string> SimpleForm
		{
			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x87305C", Offset = "0x87305C", VA = "0x87305C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x874174", Offset = "0x874174", VA = "0x874174")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public List<IMultipartFormSection> FormSections
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x872510", Offset = "0x872510", VA = "0x872510")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x87417C", Offset = "0x87417C", VA = "0x87417C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public CertificateHandler CertificateHandler
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x872AA4", Offset = "0x872AA4", VA = "0x872AA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x874184", Offset = "0x874184", VA = "0x874184")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public UploadHandler UploadHandler
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x872AAC", Offset = "0x872AAC", VA = "0x872AAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x87418C", Offset = "0x87418C", VA = "0x87418C")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public DownloadHandler DownloadHandler
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x872AB4", Offset = "0x872AB4", VA = "0x872AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x874194", Offset = "0x874194", VA = "0x874194")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public Dictionary<string, string> Headers
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x872B4C", Offset = "0x872B4C", VA = "0x872B4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x87419C", Offset = "0x87419C", VA = "0x87419C")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public UnityWebRequest Request
		{
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x8741A4", Offset = "0x8741A4", VA = "0x8741A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x692704", Offset = "0x692704")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x872BE0", Offset = "0x872BE0", VA = "0x872BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x692714", Offset = "0x692714")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public float UploadProgress
		{
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0x8741AC", Offset = "0x8741AC", VA = "0x8741AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000135")]
		public ulong UploadedBytes
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x8741C4", Offset = "0x8741C4", VA = "0x8741C4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000136")]
		public float DownloadProgress
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x8741D8", Offset = "0x8741D8", VA = "0x8741D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000137")]
		public ulong DownloadedBytes
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x8741F0", Offset = "0x8741F0", VA = "0x8741F0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000138")]
		public bool IsAborted
		{
			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x873E88", Offset = "0x873E88", VA = "0x873E88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x8742A4", Offset = "0x8742A4", VA = "0x8742A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public bool DefaultContentType
		{
			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x873044", Offset = "0x873044", VA = "0x873044")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x8742B0", Offset = "0x8742B0", VA = "0x8742B0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x874204", Offset = "0x874204", VA = "0x874204")]
		public string GetHeader(string name)
		{
			return null;
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x8742BC", Offset = "0x8742BC", VA = "0x8742BC")]
		public void Abort()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x874334", Offset = "0x874334", VA = "0x874334")]
		public RequestHelper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class ResponseHelper
	{
		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6901F0", Offset = "0x6901F0")]
		private UnityWebRequest <Request>k__BackingField;

		[Token(Token = "0x1700013A")]
		public UnityWebRequest Request
		{
			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x8743B4", Offset = "0x8743B4", VA = "0x8743B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x692724", Offset = "0x692724")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x8743BC", Offset = "0x8743BC", VA = "0x8743BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x692734", Offset = "0x692734")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public long StatusCode
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x8743C4", Offset = "0x8743C4", VA = "0x8743C4")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700013C")]
		public byte[] Data
		{
			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x8743F4", Offset = "0x8743F4", VA = "0x8743F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		public string Text
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x873D88", Offset = "0x873D88", VA = "0x873D88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		public string Error
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x8744E4", Offset = "0x8744E4", VA = "0x8744E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		public Dictionary<string, string> Headers
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x874514", Offset = "0x874514", VA = "0x874514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x873150", Offset = "0x873150", VA = "0x873150")]
		public ResponseHelper(UnityWebRequest request)
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x874544", Offset = "0x874544", VA = "0x874544", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200021D")]
	public static class StaticCoroutine
	{
		[Token(Token = "0x200033D")]
		private class CoroutineHolder : MonoBehaviour
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x875528", Offset = "0x875528", VA = "0x875528")]
			public CoroutineHolder()
			{
			}
		}

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineHolder _runner;

		[Token(Token = "0x17000140")]
		private static CoroutineHolder runner
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x87540C", Offset = "0x87540C", VA = "0x87540C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x874614", Offset = "0x874614", VA = "0x874614")]
		public static Coroutine StartCoroutine(IEnumerator coroutine)
		{
			return null;
		}
	}
	[Token(Token = "0x200021E")]
	public static class RestClient
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, string> _defaultRequestHeaders;

		[Token(Token = "0x17000141")]
		public static Dictionary<string, string> DefaultRequestHeaders
		{
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x872ABC", Offset = "0x872ABC", VA = "0x872ABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x874550", Offset = "0x874550", VA = "0x874550")]
			set
			{
			}
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x8745A4", Offset = "0x8745A4", VA = "0x8745A4")]
		public static void CleanDefaultHeaders()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x874600", Offset = "0x874600", VA = "0x874600")]
		public static void Request(RequestHelper options, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000DFF")]
		public static void Request<T>(RequestHelper options, Action<RequestException, ResponseHelper, T> callback)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x87464C", Offset = "0x87464C", VA = "0x87464C")]
		public static void Get(string url, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x8746C8", Offset = "0x8746C8", VA = "0x8746C8")]
		public static void Get(RequestHelper options, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E02")]
		public static void Get<T>(string url, Action<RequestException, ResponseHelper, T> callback)
		{
		}

		[Token(Token = "0x6000E03")]
		public static void Get<T>(RequestHelper options, Action<RequestException, ResponseHelper, T> callback)
		{
		}

		[Token(Token = "0x6000E04")]
		public static void GetArray<T>(string url, Action<RequestException, ResponseHelper, T[]> callback)
		{
		}

		[Token(Token = "0x6000E05")]
		public static void GetArray<T>(RequestHelper options, Action<RequestException, ResponseHelper, T[]> callback)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x87473C", Offset = "0x87473C", VA = "0x87473C")]
		public static void Post(string url, object body, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x874848", Offset = "0x874848", VA = "0x874848")]
		public static void Post(string url, string bodyString, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x8747D4", Offset = "0x8747D4", VA = "0x8747D4")]
		public static void Post(RequestHelper options, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E09")]
		public static void Post<T>(string url, object body, Action<RequestException, ResponseHelper, T> callback)
		{
		}

		[Token(Token = "0x6000E0A")]
		public static void Post<T>(string url, string bodyString, Action<RequestException, ResponseHelper, T> callback)
		{
		}

		[Token(Token = "0x6000E0B")]
		public static void Post<T>(RequestHelper options, Action<RequestException, ResponseHelper, T> callback)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x8748E0", Offset = "0x8748E0", VA = "0x8748E0")]
		public static void Put(string url, object body, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x8749EC", Offset = "0x8749EC", VA = "0x8749EC")]
		public static void Put(string url, string bodyString, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x874978", Offset = "0x874978", VA = "0x874978")]
		public static void Put(RequestHelper options, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E0F")]
		public static void Put<T>(string url, object body, Action<RequestException, ResponseHelper, T> callback)
		{
		}

		[Token(Token = "0x6000E10")]
		public static void Put<T>(string url, string bodyString, Action<RequestException, ResponseHelper, T> callback)
		{
		}

		[Token(Token = "0x6000E11")]
		public static void Put<T>(RequestHelper options, Action<RequestException, ResponseHelper, T> callback)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x874A84", Offset = "0x874A84", VA = "0x874A84")]
		public static void Delete(string url, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x874B00", Offset = "0x874B00", VA = "0x874B00")]
		public static void Delete(RequestHelper options, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x874B74", Offset = "0x874B74", VA = "0x874B74")]
		public static void Head(string url, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x874BF0", Offset = "0x874BF0", VA = "0x874BF0")]
		public static void Head(RequestHelper options, Action<RequestException, ResponseHelper> callback)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x874C64", Offset = "0x874C64", VA = "0x874C64")]
		public static IPromise<ResponseHelper> Request(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E17")]
		public static IPromise<T> Request<T>(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x874D18", Offset = "0x874D18", VA = "0x874D18")]
		public static IPromise<ResponseHelper> Get(string url)
		{
			return null;
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x874D84", Offset = "0x874D84", VA = "0x874D84")]
		public static IPromise<ResponseHelper> Get(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E1A")]
		public static IPromise<T> Get<T>(string url)
		{
			return null;
		}

		[Token(Token = "0x6000E1B")]
		public static IPromise<T> Get<T>(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E1C")]
		public static IPromise<T[]> GetArray<T>(string url)
		{
			return null;
		}

		[Token(Token = "0x6000E1D")]
		public static IPromise<T[]> GetArray<T>(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x874E34", Offset = "0x874E34", VA = "0x874E34")]
		public static IPromise<ResponseHelper> Post(string url, object body)
		{
			return null;
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x874F74", Offset = "0x874F74", VA = "0x874F74")]
		public static IPromise<ResponseHelper> Post(string url, string bodyString)
		{
			return null;
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x874EC4", Offset = "0x874EC4", VA = "0x874EC4")]
		public static IPromise<ResponseHelper> Post(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E21")]
		public static IPromise<T> Post<T>(string url, object body)
		{
			return null;
		}

		[Token(Token = "0x6000E22")]
		public static IPromise<T> Post<T>(string url, string bodyString)
		{
			return null;
		}

		[Token(Token = "0x6000E23")]
		public static IPromise<T> Post<T>(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x875004", Offset = "0x875004", VA = "0x875004")]
		public static IPromise<ResponseHelper> Put(string url, object body)
		{
			return null;
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x875144", Offset = "0x875144", VA = "0x875144")]
		public static IPromise<ResponseHelper> Put(string url, string bodyString)
		{
			return null;
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x875094", Offset = "0x875094", VA = "0x875094")]
		public static IPromise<ResponseHelper> Put(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E27")]
		public static IPromise<T> Put<T>(string url, object body)
		{
			return null;
		}

		[Token(Token = "0x6000E28")]
		public static IPromise<T> Put<T>(string url, string bodyString)
		{
			return null;
		}

		[Token(Token = "0x6000E29")]
		public static IPromise<T> Put<T>(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x8751D4", Offset = "0x8751D4", VA = "0x8751D4")]
		public static IPromise<ResponseHelper> Delete(string url)
		{
			return null;
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x875240", Offset = "0x875240", VA = "0x875240")]
		public static IPromise<ResponseHelper> Delete(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x8752F0", Offset = "0x8752F0", VA = "0x8752F0")]
		public static IPromise<ResponseHelper> Head(string url)
		{
			return null;
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x87535C", Offset = "0x87535C", VA = "0x87535C")]
		public static IPromise<ResponseHelper> Head(RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E2E")]
		private static void Promisify<T>(this Promise<T> promise, RequestException error, T response)
		{
		}

		[Token(Token = "0x6000E2F")]
		private static void Promisify<T>(this Promise<T> promise, RequestException error, ResponseHelper response, T body)
		{
		}
	}
}
namespace Proyecto26.Common
{
	[Token(Token = "0x200021F")]
	public static class Common
	{
		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C5A8", Offset = "0x68C5A8")]
		private sealed class <SendWebRequestWithOptions>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RequestHelper options;

			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityWebRequest request;

			[Token(Token = "0x170001DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011D4")]
				[Address(RVA = "0x873074", Offset = "0x873074", VA = "0x873074", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011D6")]
				[Address(RVA = "0x8730E4", Offset = "0x8730E4", VA = "0x8730E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x872C80", Offset = "0x872C80", VA = "0x872C80")]
			[DebuggerHidden]
			public <SendWebRequestWithOptions>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x872CAC", Offset = "0x872CAC", VA = "0x872CAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x872CB0", Offset = "0x872CB0", VA = "0x872CB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x87307C", Offset = "0x87307C", VA = "0x87307C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C40")]
		private const string CONTENT_TYPE_HEADER = "Content-Type";

		[Token(Token = "0x4000C41")]
		private const string DEFAULT_CONTENT_TYPE = "application/json";

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x872328", Offset = "0x872328", VA = "0x872328")]
		private static string GetFormSectionsContentType(out byte[] bodyRaw, RequestHelper options)
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x872518", Offset = "0x872518", VA = "0x872518")]
		private static void ConfigureWebRequestWithOptions(UnityWebRequest request, byte[] bodyRaw, string contentType, RequestHelper options)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x872BE8", Offset = "0x872BE8", VA = "0x872BE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x692764", Offset = "0x692764")]
		public static IEnumerator SendWebRequestWithOptions(this UnityWebRequest request, RequestHelper options)
		{
			return null;
		}
	}
	[Token(Token = "0x2000220")]
	public static class Extensions
	{
		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x8730EC", Offset = "0x8730EC", VA = "0x8730EC")]
		public static ResponseHelper CreateWebResponse(this UnityWebRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x87317C", Offset = "0x87317C", VA = "0x87317C")]
		public static bool IsValidRequest(this UnityWebRequest request, RequestHelper options)
		{
			return default(bool);
		}
	}
}
namespace Models
{
	[Serializable]
	[Token(Token = "0x2000221")]
	public class Photo
	{
		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int albumId;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int id;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string thumbnailUrl;

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x91CC5C", Offset = "0x91CC5C", VA = "0x91CC5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x91CC68", Offset = "0x91CC68", VA = "0x91CC68")]
		public Photo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public class Post
	{
		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int userId;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string body;

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x91CC70", Offset = "0x91CC70", VA = "0x91CC70", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x91CC7C", Offset = "0x91CC7C", VA = "0x91CC7C")]
		public Post()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000223")]
	public class Todo
	{
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int userId;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool completed;

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x91CC84", Offset = "0x91CC84", VA = "0x91CC84", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x91CC90", Offset = "0x91CC90", VA = "0x91CC90")]
		public Todo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000224")]
	public class User
	{
		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string username;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string email;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string phone;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string website;

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x91CC98", Offset = "0x91CC98", VA = "0x91CC98", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x91CCA4", Offset = "0x91CCA4", VA = "0x91CCA4")]
		public User()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000225")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x200033F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C5B8", Offset = "0x68C5B8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x87B234", Offset = "0x87B234", VA = "0x87B234")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x87C810", Offset = "0x87C810", VA = "0x87C810")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C5C8", Offset = "0x68C5C8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x87B3D4", Offset = "0x87B3D4", VA = "0x87B3D4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x87C998", Offset = "0x87C998", VA = "0x87C998")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000341")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C5D8", Offset = "0x68C5D8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x87B574", Offset = "0x87B574", VA = "0x87B574")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x87C9C8", Offset = "0x87C9C8", VA = "0x87C9C8")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000342")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C5E8", Offset = "0x68C5E8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x87B714", Offset = "0x87B714", VA = "0x87B714")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x87C9F8", Offset = "0x87C9F8", VA = "0x87C9F8")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000343")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C5F8", Offset = "0x68C5F8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x87B8A0", Offset = "0x87B8A0", VA = "0x87B8A0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x87CA28", Offset = "0x87CA28", VA = "0x87CA28")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C608", Offset = "0x68C608")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x87BAC4", Offset = "0x87BAC4", VA = "0x87BAC4")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x87CA58", Offset = "0x87CA58", VA = "0x87CA58")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C618", Offset = "0x68C618")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x87BFA0", Offset = "0x87BFA0", VA = "0x87BFA0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x87CA88", Offset = "0x87CA88", VA = "0x87CA88")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x87CAB8", Offset = "0x87CAB8", VA = "0x87CAB8")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x87CAF4", Offset = "0x87CAF4", VA = "0x87CAF4")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x87CB24", Offset = "0x87CB24", VA = "0x87CB24")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x87CB54", Offset = "0x87CB54", VA = "0x87CB54")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x2000346")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C628", Offset = "0x68C628")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x87C1C8", Offset = "0x87C1C8", VA = "0x87C1C8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x87CC3C", Offset = "0x87CC3C", VA = "0x87CC3C")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C638", Offset = "0x68C638")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x87C44C", Offset = "0x87C44C", VA = "0x87C44C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x87CC6C", Offset = "0x87CC6C", VA = "0x87CC6C")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x87CC9C", Offset = "0x87CC9C", VA = "0x87CC9C")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C648", Offset = "0x68C648")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x87C600", Offset = "0x87C600", VA = "0x87C600")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x87CDC4", Offset = "0x87CDC4", VA = "0x87CDC4")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C658", Offset = "0x68C658")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x87C808", Offset = "0x87C808", VA = "0x87C808")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x87C840", Offset = "0x87C840", VA = "0x87C840")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x87C870", Offset = "0x87C870", VA = "0x87C870")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x87B0B4", Offset = "0x87B0B4", VA = "0x87B0B4")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x87B23C", Offset = "0x87B23C", VA = "0x87B23C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x87B3DC", Offset = "0x87B3DC", VA = "0x87B3DC")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x87B57C", Offset = "0x87B57C", VA = "0x87B57C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x87B71C", Offset = "0x87B71C", VA = "0x87B71C")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x87B8A8", Offset = "0x87B8A8", VA = "0x87B8A8")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x87BACC", Offset = "0x87BACC", VA = "0x87BACC")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x87BFA8", Offset = "0x87BFA8", VA = "0x87BFA8")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x87C1D0", Offset = "0x87C1D0", VA = "0x87C1D0")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x87C454", Offset = "0x87C454", VA = "0x87C454")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x87C608", Offset = "0x87C608", VA = "0x87C608")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x2000226")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C668", Offset = "0x68C668")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400107C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x400107D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x87D810", Offset = "0x87D810", VA = "0x87D810")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x87DA20", Offset = "0x87DA20", VA = "0x87DA20")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x87DA58", Offset = "0x87DA58", VA = "0x87DA58")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x68C678", Offset = "0x68C678")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x400107E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x87DA18", Offset = "0x87DA18", VA = "0x87DA18")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x87DAA8", Offset = "0x87DAA8", VA = "0x87DAA8")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x87DAE0", Offset = "0x87DAE0", VA = "0x87DAE0")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x87CDF4", Offset = "0x87CDF4", VA = "0x87CDF4")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x87CFFC", Offset = "0x87CFFC", VA = "0x87CFFC")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x87D218", Offset = "0x87D218", VA = "0x87D218")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x87D2BC", Offset = "0x87D2BC", VA = "0x87D2BC")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x87D360", Offset = "0x87D360", VA = "0x87D360")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x87D404", Offset = "0x87D404", VA = "0x87D404")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x87D4B8", Offset = "0x87D4B8", VA = "0x87D4B8")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x87D56C", Offset = "0x87D56C", VA = "0x87D56C")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x87D610", Offset = "0x87D610", VA = "0x87D610")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x87D818", Offset = "0x87D818", VA = "0x87D818")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000227")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x200034C")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170001DC")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60011F9")]
				[Address(RVA = "0x87ACFC", Offset = "0x87ACFC", VA = "0x87ACFC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60011FA")]
			[Address(RVA = "0x87AD54", Offset = "0x87AD54", VA = "0x87AD54")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x200034D")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170001DD")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60011FB")]
				[Address(RVA = "0x87AF40", Offset = "0x87AF40", VA = "0x87AF40", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x87AFF4", Offset = "0x87AFF4", VA = "0x87AFF4")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x200034E")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4001082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170001DE")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60011FD")]
				[Address(RVA = "0x87AE18", Offset = "0x87AE18", VA = "0x87AE18", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x87AE48", Offset = "0x87AE48", VA = "0x87AE48")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x200034F")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x170001DF")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60011FF")]
				[Address(RVA = "0x87AD80", Offset = "0x87AD80", VA = "0x87AD80", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001200")]
			[Address(RVA = "0x87ADDC", Offset = "0x87ADDC", VA = "0x87ADDC")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000350")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x170001E0")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001201")]
				[Address(RVA = "0x87AE74", Offset = "0x87AE74", VA = "0x87AE74", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001202")]
			[Address(RVA = "0x87AF04", Offset = "0x87AF04", VA = "0x87AF04")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000351")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x170001E1")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001203")]
				[Address(RVA = "0x87B020", Offset = "0x87B020", VA = "0x87B020", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001204")]
			[Address(RVA = "0x87B088", Offset = "0x87B088", VA = "0x87B088")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x2000228")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x2000352")]
		public static class Physics
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0x87DC88", Offset = "0x87DC88", VA = "0x87DC88")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6001206")]
			[Address(RVA = "0x87DE74", Offset = "0x87DE74", VA = "0x87DE74")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001207")]
			[Address(RVA = "0x87DE7C", Offset = "0x87DE7C", VA = "0x87DE7C")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001208")]
			[Address(RVA = "0x87DF10", Offset = "0x87DF10", VA = "0x87DF10")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x87DB30", Offset = "0x87DB30", VA = "0x87DB30")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x87DBD4", Offset = "0x87DBD4", VA = "0x87DBD4")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
