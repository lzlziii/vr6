using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using DigitalOpus.MB.Core;
using EVP;
using Il2CppDummyDll;
using OVRTouchSample;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Prashant.SteeringSystem;
using SWS;
using TMPro;
using TrafficSimulation;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class CraneMover : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pos1;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 pos2;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x96F538", Offset = "0x96F538", VA = "0x96F538")]
	private void Update()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x96F64C", Offset = "0x96F64C", VA = "0x96F64C")]
	public CraneMover()
	{
	}
}
[Token(Token = "0x2000003")]
public class CraneRotator : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_angle;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotationSpeed;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x96F6E0", Offset = "0x96F6E0", VA = "0x96F6E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x96F6E4", Offset = "0x96F6E4", VA = "0x96F6E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x96F814", Offset = "0x96F814", VA = "0x96F814")]
	public CraneRotator()
	{
	}
}
[Token(Token = "0x2000004")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x95E780", Offset = "0x95E780", VA = "0x95E780")]
	public string GetShaderNameForPipeline()
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x95E7FC", Offset = "0x95E7FC", VA = "0x95E7FC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x95ED40", Offset = "0x95ED40", VA = "0x95ED40")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x95EF18", Offset = "0x95EF18", VA = "0x95EF18")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x2000005")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x600000A")]
	[Address(RVA = "0x943378", Offset = "0x943378", VA = "0x943378")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x943450", Offset = "0x943450", VA = "0x943450")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000006")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x9450FC", Offset = "0x9450FC", VA = "0x9450FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x945248", Offset = "0x945248", VA = "0x945248")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x94549C", Offset = "0x94549C", VA = "0x94549C")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x945928", Offset = "0x945928", VA = "0x945928")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x2000007")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000010")]
	[Address(RVA = "0x9440D4", Offset = "0x9440D4", VA = "0x9440D4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x9441AC", Offset = "0x9441AC", VA = "0x9441AC")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000008")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5420", Offset = "0x7C5420")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x943CB8", Offset = "0x943CB8", VA = "0x943CB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x943D20", Offset = "0x943D20", VA = "0x943D20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x9439DC", Offset = "0x9439DC", VA = "0x9439DC")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x943B50", Offset = "0x943B50", VA = "0x943B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x943B54", Offset = "0x943B54", VA = "0x943B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x943CC0", Offset = "0x943CC0", VA = "0x943CC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x943458", Offset = "0x943458", VA = "0x943458")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x94353C", Offset = "0x94353C", VA = "0x94353C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x94396C", Offset = "0x94396C", VA = "0x94396C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CD9F4", Offset = "0x7CD9F4")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x943A08", Offset = "0x943A08", VA = "0x943A08")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x943AE0", Offset = "0x943AE0", VA = "0x943AE0")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x2000009")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x943D28", Offset = "0x943D28", VA = "0x943D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x943D84", Offset = "0x943D84", VA = "0x943D84")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x943E10", Offset = "0x943E10", VA = "0x943E10")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x943EE8", Offset = "0x943EE8", VA = "0x943EE8")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x200000A")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x943EF0", Offset = "0x943EF0", VA = "0x943EF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x943FE4", Offset = "0x943FE4", VA = "0x943FE4")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x200000B")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x600001D")]
	[Address(RVA = "0x943FEC", Offset = "0x943FEC", VA = "0x943FEC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x9440C4", Offset = "0x9440C4", VA = "0x9440C4")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x200000C")]
[ExecuteInEditMode]
public class MB_MigrateMaterialsToDifferentPipeline : MonoBehaviour
{
	[Token(Token = "0x600001F")]
	[Address(RVA = "0x9440CC", Offset = "0x9440CC", VA = "0x9440CC")]
	public MB_MigrateMaterialsToDifferentPipeline()
	{
	}
}
[Token(Token = "0x200000D")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x9441B4", Offset = "0x9441B4", VA = "0x9441B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x9443A0", Offset = "0x9443A0", VA = "0x9443A0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x944FD8", Offset = "0x944FD8", VA = "0x944FD8")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x9450F4", Offset = "0x9450F4", VA = "0x9450F4")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x200000E")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x945930", Offset = "0x945930", VA = "0x945930")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x945A08", Offset = "0x945A08", VA = "0x945A08")]
	public void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x945AB0", Offset = "0x945AB0", VA = "0x945AB0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x945D18", Offset = "0x945D18", VA = "0x945D18")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7C3BB4", Offset = "0x7C3BB4")]
public class FastList<T>
{
	[Token(Token = "0x20002C7")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5430", Offset = "0x7C5430")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000107")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60012E5")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E2")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60012E3")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E4")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E6")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000001")]
	public int Count
	{
		[Token(Token = "0x600002A")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600002B")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public T Item
	{
		[Token(Token = "0x600002C")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600002D")]
		set
		{
		}
	}

	[Token(Token = "0x6000028")]
	public FastList()
	{
	}

	[Token(Token = "0x6000029")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600002E")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600002F")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000030")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000031")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000032")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000033")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000034")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000035")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000036")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000037")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000038")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000039")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600003A")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600003B")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600003C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDA58", Offset = "0x7CDA58")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600003E")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600003F")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000040")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000041")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000010")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x9B40D8", Offset = "0x9B40D8", VA = "0x9B40D8")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000011")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x9B40AC", Offset = "0x9B40AC", VA = "0x9B40AC")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000012")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xF50154", Offset = "0xF50154", VA = "0xF50154")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xF502C0", Offset = "0xF502C0", VA = "0xF502C0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xF50664", Offset = "0xF50664", VA = "0xF50664")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xF508BC", Offset = "0xF508BC", VA = "0xF508BC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xF508E8", Offset = "0xF508E8", VA = "0xF508E8")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000013")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xE722A4", Offset = "0xE722A4", VA = "0xE722A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xE72330", Offset = "0xE72330", VA = "0xE72330")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xE7249C", Offset = "0xE7249C", VA = "0xE7249C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000014")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000003")]
	public bool IsVisible
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x9B15A8", Offset = "0x9B15A8", VA = "0x9B15A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004D")]
		[Address(RVA = "0x9B15B0", Offset = "0x9B15B0", VA = "0x9B15B0")]
		set
		{
		}
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x9B16D8", Offset = "0x9B16D8", VA = "0x9B16D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x9B18F4", Offset = "0x9B18F4", VA = "0x9B18F4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x9B18FC", Offset = "0x9B18FC", VA = "0x9B18FC")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000015")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20002C9")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xE7DAE0", Offset = "0xE7DAE0", VA = "0xE7DAE0")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002CA")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD574", Offset = "0x7CD574")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD58C", Offset = "0x7CD58C")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD5A4", Offset = "0x7CD5A4")]
		public float LatencyWeight;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD5BC", Offset = "0x7CD5BC")]
		public int MaxSamples;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xE7DAE8", Offset = "0xE7DAE8", VA = "0xE7DAE8")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xE7DC80", Offset = "0xE7DC80", VA = "0xE7DC80")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xE7D160", Offset = "0xE7D160", VA = "0xE7D160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE7D284", Offset = "0xE7D284", VA = "0xE7D284")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE7D5F8", Offset = "0xE7D5F8", VA = "0xE7D5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE7D55C", Offset = "0xE7D55C", VA = "0xE7D55C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE7D854", Offset = "0xE7D854", VA = "0xE7D854")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE7DBF4", Offset = "0xE7DBF4", VA = "0xE7DBF4")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000016")]
public class P2PManager
{
	[Token(Token = "0x20002CB")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000FA0")]
		Update = 1
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xF5185C", Offset = "0xF5185C", VA = "0xF5185C")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xF5191C", Offset = "0xF5191C", VA = "0xF5191C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xF51A00", Offset = "0xF51A00", VA = "0xF51A00")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xF51A84", Offset = "0xF51A84", VA = "0xF51A84")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xF51BE0", Offset = "0xF51BE0", VA = "0xF51BE0")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xF51E90", Offset = "0xF51E90", VA = "0xF51E90")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xF52284", Offset = "0xF52284", VA = "0xF52284")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xF52528", Offset = "0xF52528", VA = "0xF52528")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xF52054", Offset = "0xF52054", VA = "0xF52054")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xF52458", Offset = "0xF52458", VA = "0xF52458")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xF5213C", Offset = "0xF5213C", VA = "0xF5213C")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xF52740", Offset = "0xF52740", VA = "0xF52740")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xF5209C", Offset = "0xF5209C", VA = "0xF5209C")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xF5249C", Offset = "0xF5249C", VA = "0xF5249C")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xF521E4", Offset = "0xF521E4", VA = "0xF521E4")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xF527CC", Offset = "0xF527CC", VA = "0xF527CC")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000017")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE71EC0", Offset = "0xE71EC0", VA = "0xE71EC0", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE71EFC", Offset = "0xE71EFC", VA = "0xE71EFC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE71F34", Offset = "0xE71F34", VA = "0xE71F34", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE71F5C", Offset = "0xE71F5C", VA = "0xE71F5C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE720FC", Offset = "0xE720FC", VA = "0xE720FC")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE7217C", Offset = "0xE7217C", VA = "0xE7217C")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE721D0", Offset = "0xE721D0", VA = "0xE721D0")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000018")]
public class RemotePlayer
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE7DD08", Offset = "0xE7DD08", VA = "0xE7DD08")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000019")]
public class RoomManager
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE7F2E4", Offset = "0xE7F2E4", VA = "0xE7F2E4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE7F3B0", Offset = "0xE7F3B0", VA = "0xE7F3B0")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE7F510", Offset = "0xE7F510", VA = "0xE7F510")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE7F620", Offset = "0xE7F620", VA = "0xE7F620")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE7F6D4", Offset = "0xE7F6D4", VA = "0xE7F6D4")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE7F808", Offset = "0xE7F808", VA = "0xE7F808")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE7F540", Offset = "0xE7F540", VA = "0xE7F540")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE7F894", Offset = "0xE7F894", VA = "0xE7F894")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xE7FF40", Offset = "0xE7FF40", VA = "0xE7FF40")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE80210", Offset = "0xE80210", VA = "0xE80210")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE7FB34", Offset = "0xE7FB34", VA = "0xE7FB34")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200001A")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20002CC")]
	public enum State
	{
		[Token(Token = "0x4000FA2")]
		INITIALIZING,
		[Token(Token = "0x4000FA3")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000FA4")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000FA5")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000FA6")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000FA7")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000FA8")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000FA9")]
		SHUTDOWN
	}

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000004")]
	public static State CurrentState
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0xE5F438", Offset = "0xE5F438", VA = "0xE5F438")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000005")]
	public static ulong MyID
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0xE5F4AC", Offset = "0xE5F4AC", VA = "0xE5F4AC")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000006")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0xE5F584", Offset = "0xE5F584", VA = "0xE5F584")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE5D58C", Offset = "0xE5D58C", VA = "0xE5D58C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE5D918", Offset = "0xE5D918", VA = "0xE5D918", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xE5E0B0", Offset = "0xE5E0B0", VA = "0xE5E0B0")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE5E378", Offset = "0xE5E378", VA = "0xE5E378", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE5E37C", Offset = "0xE5E37C", VA = "0xE5E37C")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xE5E470", Offset = "0xE5E470", VA = "0xE5E470")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xE5EB64", Offset = "0xE5EB64", VA = "0xE5EB64")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xE5F030", Offset = "0xE5F030", VA = "0xE5F030")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xE5F1FC", Offset = "0xE5F1FC", VA = "0xE5F1FC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xE5F3C8", Offset = "0xE5F3C8", VA = "0xE5F3C8")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xE5DC14", Offset = "0xE5DC14", VA = "0xE5DC14")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xE5E20C", Offset = "0xE5E20C", VA = "0xE5E20C")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xE5DCC8", Offset = "0xE5DCC8", VA = "0xE5DCC8")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xE5F698", Offset = "0xE5F698", VA = "0xE5F698")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xE5F818", Offset = "0xE5F818", VA = "0xE5F818")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE5F900", Offset = "0xE5F900", VA = "0xE5F900")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xE5FA24", Offset = "0xE5FA24", VA = "0xE5FA24")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xE5FAF4", Offset = "0xE5FAF4", VA = "0xE5FAF4")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xE5E2BC", Offset = "0xE5E2BC", VA = "0xE5E2BC")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xE5FF20", Offset = "0xE5FF20", VA = "0xE5FF20")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xE5FFAC", Offset = "0xE5FFAC", VA = "0xE5FFAC")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xE5FD44", Offset = "0xE5FD44", VA = "0xE5FD44")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xE60258", Offset = "0xE60258", VA = "0xE60258")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xE5D504", Offset = "0xE5D504", VA = "0xE5D504")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7CDABC", Offset = "0x7CDABC")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xE60394", Offset = "0xE60394", VA = "0xE60394")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xE6045C", Offset = "0xE6045C", VA = "0xE6045C")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200001B")]
public class VoipManager
{
	[Token(Token = "0x6000098")]
	[Address(RVA = "0xE5DFF0", Offset = "0xE5DFF0", VA = "0xE5DFF0")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xE6017C", Offset = "0xE6017C", VA = "0xE6017C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xE5F348", Offset = "0xE5F348", VA = "0xE5F348")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xE6F09C", Offset = "0xE6F09C", VA = "0xE6F09C")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xE6F1EC", Offset = "0xE6F1EC", VA = "0xE6F1EC")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200001C")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x9B1234", Offset = "0x9B1234", VA = "0x9B1234")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x9B12A4", Offset = "0x9B12A4", VA = "0x9B12A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x9B1420", Offset = "0x9B1420", VA = "0x9B1420")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x9B1484", Offset = "0x9B1484", VA = "0x9B1484")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x9B12E0", Offset = "0x9B12E0", VA = "0x9B12E0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x9B1540", Offset = "0x9B1540", VA = "0x9B1540")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x9B15A0", Offset = "0x9B15A0", VA = "0x9B15A0")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200001D")]
public class AvatarLayer
{
	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x95E778", Offset = "0x95E778", VA = "0x95E778")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public class PacketRecordSettings
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xF44D38", Offset = "0xF44D38", VA = "0xF44D38")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200001F")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20002CD")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xF42AF8", Offset = "0xF42AF8", VA = "0xF42AF8")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20002CE")]
	public enum HandType
	{
		[Token(Token = "0x4000FAC")]
		Right,
		[Token(Token = "0x4000FAD")]
		Left,
		[Token(Token = "0x4000FAE")]
		Max
	}

	[Token(Token = "0x20002CF")]
	public enum HandJoint
	{
		[Token(Token = "0x4000FB0")]
		HandBase,
		[Token(Token = "0x4000FB1")]
		IndexBase,
		[Token(Token = "0x4000FB2")]
		IndexTip,
		[Token(Token = "0x4000FB3")]
		ThumbBase,
		[Token(Token = "0x4000FB4")]
		ThumbTip,
		[Token(Token = "0x4000FB5")]
		Max
	}

	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5440", Offset = "0x7C5440")]
	private sealed class <WaitForMouthAudioSource>d__138 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xF44EDC", Offset = "0xF44EDC", VA = "0xF44EDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xF44F44", Offset = "0xF44F44", VA = "0xF44F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xF448F0", Offset = "0xF448F0", VA = "0xF448F0")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__138(int <>1__state)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xF44D4C", Offset = "0xF44D4C", VA = "0xF44D4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xF44D50", Offset = "0xF44D50", VA = "0xF44D50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xF44EE4", Offset = "0xF44EE4", VA = "0xF44EE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C5DD4", Offset = "0x7C5DD4")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C5E0C", Offset = "0x7C5E0C")]
	public bool EnableBody;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C5E44", Offset = "0x7C5E44")]
	public bool RecordPackets;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C5E7C", Offset = "0x7C5E7C")]
	public bool StartWithControllers;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C5EB4", Offset = "0x7C5EB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C5EB4", Offset = "0x7C5EB4")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C5F24", Offset = "0x7C5F24")]
	private bool CombineMeshes;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C5F5C", Offset = "0x7C5F5C")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C5F94", Offset = "0x7C5F94")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C5FCC", Offset = "0x7C5FCC")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6004", Offset = "0x7C6004")]
	public bool EnableLaughter;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int renderPartCount;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000AA")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000AC")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000AD")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000AE")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000AF")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000B0")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xF3E560", Offset = "0xF3E560", VA = "0xF3E560")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xF3E8C8", Offset = "0xF3E8C8", VA = "0xF3E8C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xF3E954", Offset = "0xF3E954", VA = "0xF3E954")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xF3E9C0", Offset = "0xF3E9C0", VA = "0xF3E9C0")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xF3EAE8", Offset = "0xF3EAE8", VA = "0xF3EAE8")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xF3ED0C", Offset = "0xF3ED0C", VA = "0xF3ED0C")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xF3EF18", Offset = "0xF3EF18", VA = "0xF3EF18")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xF3F4A0", Offset = "0xF3F4A0", VA = "0xF3F4A0")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xF3F568", Offset = "0xF3F568", VA = "0xF3F568")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xF3F5EC", Offset = "0xF3F5EC", VA = "0xF3F5EC")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xF3F6D4", Offset = "0xF3F6D4", VA = "0xF3F6D4")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xF3F760", Offset = "0xF3F760", VA = "0xF3F760")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xF3F87C", Offset = "0xF3F87C", VA = "0xF3F87C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xF3F8DC", Offset = "0xF3F8DC", VA = "0xF3F8DC")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000B4")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xF3FD60", Offset = "0xF3FD60", VA = "0xF3FD60")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xF400C0", Offset = "0xF400C0", VA = "0xF400C0")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xF40224", Offset = "0xF40224", VA = "0xF40224")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xF404EC", Offset = "0xF404EC", VA = "0xF404EC")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xF405D8", Offset = "0xF405D8", VA = "0xF405D8")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xF40FD4", Offset = "0xF40FD4", VA = "0xF40FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xF414AC", Offset = "0xF414AC", VA = "0xF414AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xF41F20", Offset = "0xF41F20", VA = "0xF41F20")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xF41F74", Offset = "0xF41F74", VA = "0xF41F74")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xF4083C", Offset = "0xF4083C", VA = "0xF4083C")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xF408D8", Offset = "0xF408D8", VA = "0xF408D8")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xF41FA4", Offset = "0xF41FA4", VA = "0xF41FA4")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xF41814", Offset = "0xF41814", VA = "0xF41814")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xF421E8", Offset = "0xF421E8", VA = "0xF421E8")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xF4200C", Offset = "0xF4200C", VA = "0xF4200C")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xF42C38", Offset = "0xF42C38", VA = "0xF42C38")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xF4303C", Offset = "0xF4303C", VA = "0xF4303C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xF433C4", Offset = "0xF433C4", VA = "0xF433C4")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xF43504", Offset = "0xF43504", VA = "0xF43504")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xF436BC", Offset = "0xF436BC", VA = "0xF436BC")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xF41A1C", Offset = "0xF41A1C", VA = "0xF41A1C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xF43794", Offset = "0xF43794", VA = "0xF43794")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xF41824", Offset = "0xF41824", VA = "0xF41824")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xF43888", Offset = "0xF43888", VA = "0xF43888")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xF43E34", Offset = "0xF43E34", VA = "0xF43E34")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xF442F4", Offset = "0xF442F4", VA = "0xF442F4")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xF4436C", Offset = "0xF4436C", VA = "0xF4436C")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xF443E8", Offset = "0xF443E8", VA = "0xF443E8")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xF41DB4", Offset = "0xF41DB4", VA = "0xF41DB4")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xF43944", Offset = "0xF43944", VA = "0xF43944")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xF44880", Offset = "0xF44880", VA = "0xF44880")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDB20", Offset = "0x7CDB20")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xF4491C", Offset = "0xF4491C", VA = "0xF4491C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xF44724", Offset = "0xF44724", VA = "0xF44724")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xF449E4", Offset = "0xF449E4", VA = "0xF449E4")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xF44AD0", Offset = "0xF44AD0", VA = "0xF44AD0")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xF444B8", Offset = "0xF444B8", VA = "0xF444B8")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xF44BBC", Offset = "0xF44BBC", VA = "0xF44BBC")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000020")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xF44F4C", Offset = "0xF44F4C", VA = "0xF44F4C")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000021")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xF44FFC", Offset = "0xF44FFC", VA = "0xF44FFC")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xF462DC", Offset = "0xF462DC", VA = "0xF462DC")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xF45E80", Offset = "0xF45E80", VA = "0xF45E80")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xF45C24", Offset = "0xF45C24", VA = "0xF45C24")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xF45CF4", Offset = "0xF45CF4", VA = "0xF45CF4")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xF46540", Offset = "0xF46540", VA = "0xF46540")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000022")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40000CD")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xF46AC0", Offset = "0xF46AC0", VA = "0xF46AC0")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000023")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xF46D28", Offset = "0xF46D28", VA = "0xF46D28")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xF47120", Offset = "0xF47120", VA = "0xF47120")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000024")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xF43268", Offset = "0xF43268", VA = "0xF43268")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xF4721C", Offset = "0xF4721C", VA = "0xF4721C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xF47338", Offset = "0xF47338", VA = "0xF47338")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xF4739C", Offset = "0xF4739C", VA = "0xF4739C")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xF46E44", Offset = "0xF46E44", VA = "0xF46E44")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xF47980", Offset = "0xF47980", VA = "0xF47980")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xF479E0", Offset = "0xF479E0", VA = "0xF479E0")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xF481C4", Offset = "0xF481C4", VA = "0xF481C4")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xF47184", Offset = "0xF47184", VA = "0xF47184")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000026")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20002D1")]
	public enum PacketMode
	{
		[Token(Token = "0x4000FBA")]
		SDK,
		[Token(Token = "0x4000FBB")]
		Unity
	}

	[Token(Token = "0x20002D2")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xF4940C", Offset = "0xF4940C", VA = "0xF4940C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20002D3")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xF42740", Offset = "0xF42740", VA = "0xF42740")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xF492B0", Offset = "0xF492B0", VA = "0xF492B0")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60000EF")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xF492C0", Offset = "0xF492C0", VA = "0xF492C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xF40974", Offset = "0xF40974", VA = "0xF40974")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xF49360", Offset = "0xF49360", VA = "0xF49360")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xF493FC", Offset = "0xF493FC", VA = "0xF493FC")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xF49568", Offset = "0xF49568", VA = "0xF49568")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xF496C4", Offset = "0xF496C4", VA = "0xF496C4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000028")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xF49730", Offset = "0xF49730", VA = "0xF49730")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xF4989C", Offset = "0xF4989C", VA = "0xF4989C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xF49C40", Offset = "0xF49C40", VA = "0xF49C40")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xF49F0C", Offset = "0xF49F0C", VA = "0xF49F0C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xF49F38", Offset = "0xF49F38", VA = "0xF49F38")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20002D4")]
	public enum TextureType
	{
		[Token(Token = "0x4000FCC")]
		DiffuseTextures,
		[Token(Token = "0x4000FCD")]
		NormalMaps,
		[Token(Token = "0x4000FCE")]
		RoughnessMaps,
		[Token(Token = "0x4000FCF")]
		Count
	}

	[Token(Token = "0x20002D5")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20002D6")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20002D7")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20002D8")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xF4C158", Offset = "0xF4C158", VA = "0xF4C158")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5450", Offset = "0x7C5450")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F8")]
			[Address(RVA = "0xF4CA68", Offset = "0xF4CA68", VA = "0xF4CA68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0xF4CAD0", Offset = "0xF4CAD0", VA = "0xF4CAD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xF4BFC0", Offset = "0xF4BFC0", VA = "0xF4BFC0")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xF4C3F0", Offset = "0xF4C3F0", VA = "0xF4C3F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xF4C3F4", Offset = "0xF4C3F4", VA = "0xF4C3F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xF4CA70", Offset = "0xF4CA70", VA = "0xF4CA70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000101")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000102")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000103")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000104")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xF49FE8", Offset = "0xF49FE8", VA = "0xF49FE8")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xF4A148", Offset = "0xF4A148", VA = "0xF4A148")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xF4A170", Offset = "0xF4A170", VA = "0xF4A170")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xF4A888", Offset = "0xF4A888", VA = "0xF4A888")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xF4AB08", Offset = "0xF4AB08", VA = "0xF4AB08")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xF4A204", Offset = "0xF4A204", VA = "0xF4A204")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xF4ABF8", Offset = "0xF4ABF8", VA = "0xF4ABF8")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xF4A604", Offset = "0xF4A604", VA = "0xF4A604")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xF4AE60", Offset = "0xF4AE60", VA = "0xF4AE60")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xF4B0D8", Offset = "0xF4B0D8", VA = "0xF4B0D8")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xF4B1D4", Offset = "0xF4B1D4", VA = "0xF4B1D4")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xF4B20C", Offset = "0xF4B20C", VA = "0xF4B20C")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xF4A80C", Offset = "0xF4A80C", VA = "0xF4A80C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDB84", Offset = "0x7CDB84")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xF4BFEC", Offset = "0xF4BFEC", VA = "0xF4BFEC")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200002A")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000007")]
	public float Duration
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0xF42580", Offset = "0xF42580", VA = "0xF42580")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0xF426BC", Offset = "0xF426BC", VA = "0xF426BC")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xF42B74", Offset = "0xF42B74", VA = "0xF42B74")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xF42440", Offset = "0xF42440", VA = "0xF42440")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xF4CAD8", Offset = "0xF4CAD8", VA = "0xF4CAD8")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xF425EC", Offset = "0xF425EC", VA = "0xF425EC")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xF4CBB4", Offset = "0xF4CBB4", VA = "0xF4CBB4")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xF4CDBC", Offset = "0xF4CDBC", VA = "0xF4CDBC")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xF4D014", Offset = "0xF4D014", VA = "0xF4D014")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200002B")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000113")]
	[Address(RVA = "0x95F830", Offset = "0x95F830", VA = "0x95F830")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x95F944", Offset = "0x95F944", VA = "0x95F944")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x95FAF0", Offset = "0x95FAF0", VA = "0x95FAF0")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x95F9B4", Offset = "0x95F9B4", VA = "0x95F9B4")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x95FA48", Offset = "0x95FA48", VA = "0x95FA48")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200002C")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000118")]
	[Address(RVA = "0x95F430", Offset = "0x95F430", VA = "0x95F430")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x95F7D4", Offset = "0x95F7D4", VA = "0x95F7D4")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x95F5D0", Offset = "0x95F5D0", VA = "0x95F5D0")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x95F648", Offset = "0x95F648", VA = "0x95F648")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x95F6E4", Offset = "0x95F6E4", VA = "0x95F6E4")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200002D")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400010C")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400010D")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xF4D204", Offset = "0xF4D204", VA = "0xF4D204")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xF4D290", Offset = "0xF4D290", VA = "0xF4D290", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xF4D2AC", Offset = "0xF4D2AC", VA = "0xF4D2AC")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xF4D458", Offset = "0xF4D458", VA = "0xF4D458")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xF4D600", Offset = "0xF4D600", VA = "0xF4D600")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xF4D680", Offset = "0xF4D680", VA = "0xF4D680")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xF4D764", Offset = "0xF4D764", VA = "0xF4D764")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xF4D958", Offset = "0xF4D958", VA = "0xF4D958")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xF4DCE4", Offset = "0xF4DCE4", VA = "0xF4DCE4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xF4DDDC", Offset = "0xF4DDDC", VA = "0xF4DDDC")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200002F")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000116")]
	Body = 1,
	[Token(Token = "0x4000117")]
	Hands = 2,
	[Token(Token = "0x4000118")]
	Base = 4,
	[Token(Token = "0x4000119")]
	BodyTilt = 0x10,
	[Token(Token = "0x400011A")]
	Expressive = 0x20,
	[Token(Token = "0x400011B")]
	All = -1
}
[Token(Token = "0x2000030")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400011D")]
	AvatarSpecification,
	[Token(Token = "0x400011E")]
	AssetLoaded,
	[Token(Token = "0x400011F")]
	Count
}
[Token(Token = "0x2000031")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000032")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000033")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000125")]
	Mesh,
	[Token(Token = "0x4000126")]
	Texture,
	[Token(Token = "0x4000127")]
	Pose,
	[Token(Token = "0x4000128")]
	Material,
	[Token(Token = "0x4000129")]
	CombinedMesh,
	[Token(Token = "0x400012A")]
	PBSMaterial,
	[Token(Token = "0x400012B")]
	FailedLoad,
	[Token(Token = "0x400012C")]
	Count
}
[Token(Token = "0x2000034")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000035")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000036")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000037")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000038")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000039")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000161")]
	RGB24,
	[Token(Token = "0x4000162")]
	DXT1,
	[Token(Token = "0x4000163")]
	DXT5,
	[Token(Token = "0x4000164")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000165")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000166")]
	Count
}
[Token(Token = "0x200003A")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200003B")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400016E")]
	SkinnedMeshRender,
	[Token(Token = "0x400016F")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000170")]
	ProjectorRender,
	[Token(Token = "0x4000171")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000172")]
	Count
}
[Token(Token = "0x200003C")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000174")]
	Unknown,
	[Token(Token = "0x4000175")]
	Default,
	[Token(Token = "0x4000176")]
	Verbose,
	[Token(Token = "0x4000177")]
	Debug,
	[Token(Token = "0x4000178")]
	Info,
	[Token(Token = "0x4000179")]
	Warn,
	[Token(Token = "0x400017A")]
	Error,
	[Token(Token = "0x400017B")]
	Fatal,
	[Token(Token = "0x400017C")]
	Silent
}
[Token(Token = "0x200003D")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200003E")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000181")]
	One = 1,
	[Token(Token = "0x4000182")]
	Two = 2,
	[Token(Token = "0x4000183")]
	Three = 4,
	[Token(Token = "0x4000184")]
	Joystick = 8
}
[Token(Token = "0x200003F")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000186")]
	One = 1,
	[Token(Token = "0x4000187")]
	Two = 2,
	[Token(Token = "0x4000188")]
	Joystick = 4,
	[Token(Token = "0x4000189")]
	ThumbRest = 8,
	[Token(Token = "0x400018A")]
	Index = 0x10,
	[Token(Token = "0x400018B")]
	Pointing = 0x40,
	[Token(Token = "0x400018C")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000040")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000041")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000042")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000043")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000044")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000045")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000046")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000048")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001AC")]
	Add,
	[Token(Token = "0x40001AD")]
	Multiply,
	[Token(Token = "0x40001AE")]
	Count
}
[Token(Token = "0x2000049")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001B0")]
	Color,
	[Token(Token = "0x40001B1")]
	Texture,
	[Token(Token = "0x40001B2")]
	TextureSingleChannel,
	[Token(Token = "0x40001B3")]
	Parallax,
	[Token(Token = "0x40001B4")]
	Count
}
[Token(Token = "0x200004A")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001B6")]
	None,
	[Token(Token = "0x40001B7")]
	Positional,
	[Token(Token = "0x40001B8")]
	ViewReflection,
	[Token(Token = "0x40001B9")]
	Fresnel,
	[Token(Token = "0x40001BA")]
	Pulse,
	[Token(Token = "0x40001BB")]
	Count
}
[Token(Token = "0x200004B")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001BD")]
	Touch,
	[Token(Token = "0x40001BE")]
	Malibu,
	[Token(Token = "0x40001BF")]
	Go,
	[Token(Token = "0x40001C0")]
	Quest,
	[Token(Token = "0x40001C1")]
	Count
}
[Token(Token = "0x200004C")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40001C3")]
	Lowest = 1,
	[Token(Token = "0x40001C4")]
	Medium = 3,
	[Token(Token = "0x40001C5")]
	Highest = 5
}
[Token(Token = "0x200004D")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40001C7")]
	Unknown = -1,
	[Token(Token = "0x40001C8")]
	One,
	[Token(Token = "0x40001C9")]
	Two
}
[Token(Token = "0x200004E")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xD2C538", Offset = "0xD2C538", VA = "0xD2C538")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x6D959C", Offset = "0x6D959C", VA = "0x6D959C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x6D95A4", Offset = "0x6D95A4", VA = "0x6D95A4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200004F")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xD2C86C", Offset = "0xD2C86C", VA = "0xD2C86C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x6D97DC", Offset = "0x6D97DC", VA = "0x6D97DC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x6D97E4", Offset = "0x6D97E4", VA = "0x6D97E4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000050")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xE6FFCC", Offset = "0xE6FFCC", VA = "0xE6FFCC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x85A904", Offset = "0x85A904", VA = "0x85A904", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x85A90C", Offset = "0x85A90C", VA = "0x85A90C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000051")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xD2CD98", Offset = "0xD2CD98", VA = "0xD2CD98")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x6DA064", Offset = "0x6DA064", VA = "0x6DA064", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x6DA06C", Offset = "0x6DA06C", VA = "0x6DA06C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000052")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xF44F54", Offset = "0xF44F54", VA = "0xF44F54")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000053")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000054")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40001FE")]
	FirstPerson = 1,
	[Token(Token = "0x40001FF")]
	ThirdPerson = 2,
	[Token(Token = "0x4000200")]
	SelfOccluding = 4
}
[Token(Token = "0x2000055")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000056")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000057")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000058")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000059")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000216")]
	Default,
	[Token(Token = "0x4000217")]
	GripSphere,
	[Token(Token = "0x4000218")]
	GripCube,
	[Token(Token = "0x4000219")]
	Count
}
[Token(Token = "0x200005A")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400021B")]
	Body,
	[Token(Token = "0x400021C")]
	Clothing,
	[Token(Token = "0x400021D")]
	Eyewear,
	[Token(Token = "0x400021E")]
	Hair,
	[Token(Token = "0x400021F")]
	Beard,
	[Token(Token = "0x4000220")]
	Count
}
[Token(Token = "0x200005B")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x200005C")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200005E")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200005F")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400022A")]
	AvatarHead,
	[Token(Token = "0x400022B")]
	AvatarHand,
	[Token(Token = "0x400022C")]
	Object,
	[Token(Token = "0x400022D")]
	ObjectStatic,
	[Token(Token = "0x400022E")]
	Count
}
[Token(Token = "0x2000060")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000061")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000062")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000063")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000064")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400023A")]
	Point,
	[Token(Token = "0x400023B")]
	Direction,
	[Token(Token = "0x400023C")]
	Spot,
	[Token(Token = "0x400023D")]
	Count
}
[Token(Token = "0x2000065")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000066")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000067")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000068")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000069")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000253")]
	None = 0u,
	[Token(Token = "0x4000254")]
	GazeTarget = 1u,
	[Token(Token = "0x4000255")]
	Any = uint.MaxValue
}
[Token(Token = "0x200006A")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x200006B")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200006C")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200006D")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200006E")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200006F")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20002DA")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x85CBFC", Offset = "0x85CBFC", VA = "0x85CBFC")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400026A")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ovrAvatarDebugContext debugContext;

	[Token(Token = "0x17000009")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0xF40BC8", Offset = "0xF40BC8", VA = "0xF40BC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xF4DDEC", Offset = "0xF4DDEC", VA = "0xF4DDEC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xF4E038", Offset = "0xF4E038", VA = "0xF4E038")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xF4E0AC", Offset = "0xF4E0AC", VA = "0xF4E0AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xF4E8F0", Offset = "0xF4E8F0", VA = "0xF4E8F0")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xF4E948", Offset = "0xF4E948", VA = "0xF4E948")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xF41444", Offset = "0xF41444", VA = "0xF41444")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xF419B4", Offset = "0xF419B4", VA = "0xF419B4")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xF413B0", Offset = "0xF413B0", VA = "0xF413B0")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xF4E728", Offset = "0xF4E728", VA = "0xF4E728")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xF40DD8", Offset = "0xF40DD8", VA = "0xF40DD8")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xF40EF4", Offset = "0xF40EF4", VA = "0xF40EF4")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xF40D58", Offset = "0xF40D58", VA = "0xF40D58")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xF4E9EC", Offset = "0xF4E9EC", VA = "0xF4E9EC")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xF4DFEC", Offset = "0xF4DFEC", VA = "0xF4DFEC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xF4A8E8", Offset = "0xF4A8E8", VA = "0xF4A8E8")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xF4EAC4", Offset = "0xF4EAC4", VA = "0xF4EAC4")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000070")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000A")]
	public static string AppID
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0xF4EA84", Offset = "0xF4EA84", VA = "0xF4EA84")]
		get
		{
			return null;
		}
		[Token(Token = "0x600015A")]
		[Address(RVA = "0xF4EBF0", Offset = "0xF4EBF0", VA = "0xF4EBF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static string MobileAppID
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0xF4EAA4", Offset = "0xF4EAA4", VA = "0xF4EAA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600015C")]
		[Address(RVA = "0xF4EC1C", Offset = "0xF4EC1C", VA = "0xF4EC1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0xF4EADC", Offset = "0xF4EADC", VA = "0xF4EADC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600015E")]
		[Address(RVA = "0xF4EC48", Offset = "0xF4EC48", VA = "0xF4EC48")]
		set
		{
		}
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xF4EC9C", Offset = "0xF4EC9C", VA = "0xF4EC9C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000071")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xF3EBC8", Offset = "0xF3EBC8", VA = "0xF3EBC8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xF473A4", Offset = "0xF473A4", VA = "0xF473A4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xF4FFD4", Offset = "0xF4FFD4", VA = "0xF4FFD4")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xF50134", Offset = "0xF50134", VA = "0xF50134")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000072")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xF3EDE8", Offset = "0xF3EDE8", VA = "0xF3EDE8")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xF475CC", Offset = "0xF475CC", VA = "0xF475CC")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xF50144", Offset = "0xF50144", VA = "0xF50144")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000073")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400027A")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400027B")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400027C")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xF3F0FC", Offset = "0xF3F0FC", VA = "0xF3F0FC")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xF47764", Offset = "0xF47764", VA = "0xF47764")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xF4F790", Offset = "0xF4F790", VA = "0xF4F790")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xF4EF24", Offset = "0xF4EF24", VA = "0xF4EF24")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xF4ECF4", Offset = "0xF4ECF4", VA = "0xF4ECF4")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xF4EE08", Offset = "0xF4EE08", VA = "0xF4EE08")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xF4FFC4", Offset = "0xF4FFC4", VA = "0xF4FFC4")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000074")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002DB")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20002DC")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x85CC64", Offset = "0x85CC64", VA = "0x85CC64")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20002DD")]
	public struct TextureSet
	{
		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x85CCEC", Offset = "0x85CCEC", VA = "0x85CCEC")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5460", Offset = "0x7C5460")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xF51624", Offset = "0xF51624", VA = "0xF51624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0xF5168C", Offset = "0xF5168C", VA = "0xF5168C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xF50FC0", Offset = "0xF50FC0", VA = "0xF50FC0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xF51128", Offset = "0xF51128", VA = "0xF51128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xF5112C", Offset = "0xF5112C", VA = "0xF5112C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xF5162C", Offset = "0xF5162C", VA = "0xF5162C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000280")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000281")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000284")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000285")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000286")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000287")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000288")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000289")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400028A")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xF509A8", Offset = "0xF509A8", VA = "0xF509A8")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xF50D04", Offset = "0xF50D04", VA = "0xF50D04")]
	public void Update()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xF4CA18", Offset = "0xF4CA18", VA = "0xF4CA18")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xF4ACDC", Offset = "0xF4ACDC", VA = "0xF4ACDC")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xF50E7C", Offset = "0xF50E7C", VA = "0xF50E7C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xF4A96C", Offset = "0xF4A96C", VA = "0xF4A96C")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xF4AB50", Offset = "0xF4AB50", VA = "0xF4AB50")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xF50F2C", Offset = "0xF50F2C", VA = "0xF50F2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDC88", Offset = "0x7CDC88")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xF4E9A0", Offset = "0xF4E9A0", VA = "0xF4E9A0")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xF50FEC", Offset = "0xF50FEC", VA = "0xF50FEC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000075")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xF51694", Offset = "0xF51694", VA = "0xF51694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xF517F0", Offset = "0xF517F0", VA = "0xF517F0")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000076")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x600017A")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x9AF050", Offset = "0x9AF050", VA = "0x9AF050")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000077")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C605C", Offset = "0x7C605C")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6094", Offset = "0x7C6094")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C60CC", Offset = "0x7C60CC")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x93F78C", Offset = "0x93F78C", VA = "0x93F78C")]
	private void Start()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x93F790", Offset = "0x93F790", VA = "0x93F790")]
	private void Update()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x93F810", Offset = "0x93F810", VA = "0x93F810")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x93F9FC", Offset = "0x93F9FC", VA = "0x93F9FC")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000078")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x93FA2C", Offset = "0x93FA2C", VA = "0x93FA2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x93FB30", Offset = "0x93FB30", VA = "0x93FB30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x93FC04", Offset = "0x93FC04", VA = "0x93FC04")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x93FE90", Offset = "0x93FE90", VA = "0x93FE90")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x93FEE0", Offset = "0x93FEE0", VA = "0x93FEE0")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000079")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700000D")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0xB5689C", Offset = "0xB5689C", VA = "0xB5689C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xB56B54", Offset = "0xB56B54", VA = "0xB56B54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xB56C90", Offset = "0xB56C90", VA = "0xB56C90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xB56BC4", Offset = "0xB56BC4", VA = "0xB56BC4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xB54AB4", Offset = "0xB54AB4", VA = "0xB54AB4")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xB56E18", Offset = "0xB56E18", VA = "0xB56E18")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xB54A4C", Offset = "0xB54A4C", VA = "0xB54A4C")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xB54B34", Offset = "0xB54B34", VA = "0xB54B34")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xB56D28", Offset = "0xB56D28", VA = "0xB56D28")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xB56EB8", Offset = "0xB56EB8", VA = "0xB56EB8")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xB56EF4", Offset = "0xB56EF4", VA = "0xB56EF4")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xB570E8", Offset = "0xB570E8", VA = "0xB570E8")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xB56F04", Offset = "0xB56F04", VA = "0xB56F04")]
	private void Display()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xB57198", Offset = "0xB57198", VA = "0xB57198")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x200007A")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xB57C5C", Offset = "0xB57C5C", VA = "0xB57C5C")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x200007B")]
public static class OVRTouchpad
{
	[Token(Token = "0x20002DF")]
	public enum TouchEvent
	{
		[Token(Token = "0x4001002")]
		SingleTap,
		[Token(Token = "0x4001003")]
		DoubleTap,
		[Token(Token = "0x4001004")]
		Left,
		[Token(Token = "0x4001005")]
		Right,
		[Token(Token = "0x4001006")]
		Up,
		[Token(Token = "0x4001007")]
		Down
	}

	[Token(Token = "0x20002E0")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xB536C8", Offset = "0xB536C8", VA = "0xB536C8")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xB5B2A4", Offset = "0xB5B2A4", VA = "0xB5B2A4")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xB5B5C4", Offset = "0xB5B5C4", VA = "0xB5B5C4")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xB5B414", Offset = "0xB5B414", VA = "0xB5B414")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xB545A8", Offset = "0xB545A8", VA = "0xB545A8")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200007C")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x600019B")]
	[Address(RVA = "0xB5B674", Offset = "0xB5B674", VA = "0xB5B674")]
	private void Awake()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xB5B6F0", Offset = "0xB5B6F0", VA = "0xB5B6F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xB5B788", Offset = "0xB5B788", VA = "0xB5B788")]
	private void Update()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xB5B7E4", Offset = "0xB5B7E4", VA = "0xB5B7E4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xB5B848", Offset = "0xB5B848", VA = "0xB5B848")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xB5B84C", Offset = "0xB5B84C", VA = "0xB5B84C")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200007D")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20002E1")]
	public enum Result
	{
		[Token(Token = "0x4001009")]
		Success = 0,
		[Token(Token = "0x400100A")]
		Unknown = -2200,
		[Token(Token = "0x400100B")]
		CannotCreateContext = -2201,
		[Token(Token = "0x400100C")]
		InvalidParam = -2202,
		[Token(Token = "0x400100D")]
		BadSampleRate = -2203,
		[Token(Token = "0x400100E")]
		MissingDLL = -2204,
		[Token(Token = "0x400100F")]
		BadVersion = -2205,
		[Token(Token = "0x4001010")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20002E2")]
	public enum AudioDataType
	{
		[Token(Token = "0x4001012")]
		S16_Mono,
		[Token(Token = "0x4001013")]
		S16_Stereo,
		[Token(Token = "0x4001014")]
		F32_Mono,
		[Token(Token = "0x4001015")]
		F32_Stereo
	}

	[Token(Token = "0x20002E3")]
	public enum Viseme
	{
		[Token(Token = "0x4001017")]
		sil,
		[Token(Token = "0x4001018")]
		PP,
		[Token(Token = "0x4001019")]
		FF,
		[Token(Token = "0x400101A")]
		TH,
		[Token(Token = "0x400101B")]
		DD,
		[Token(Token = "0x400101C")]
		kk,
		[Token(Token = "0x400101D")]
		CH,
		[Token(Token = "0x400101E")]
		SS,
		[Token(Token = "0x400101F")]
		nn,
		[Token(Token = "0x4001020")]
		RR,
		[Token(Token = "0x4001021")]
		aa,
		[Token(Token = "0x4001022")]
		E,
		[Token(Token = "0x4001023")]
		ih,
		[Token(Token = "0x4001024")]
		oh,
		[Token(Token = "0x4001025")]
		ou
	}

	[Token(Token = "0x20002E4")]
	public enum Signals
	{
		[Token(Token = "0x4001027")]
		VisemeOn,
		[Token(Token = "0x4001028")]
		VisemeOff,
		[Token(Token = "0x4001029")]
		VisemeAmount,
		[Token(Token = "0x400102A")]
		VisemeSmoothing,
		[Token(Token = "0x400102B")]
		LaughterAmount
	}

	[Token(Token = "0x20002E5")]
	public enum ContextProviders
	{
		[Token(Token = "0x400102D")]
		Original,
		[Token(Token = "0x400102E")]
		Enhanced,
		[Token(Token = "0x400102F")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20002E6")]
	public class Frame
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xB54310", Offset = "0xB54310", VA = "0xB54310")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xB54368", Offset = "0xB54368", VA = "0xB54368")]
		public void Reset()
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xB543F8", Offset = "0xB543F8", VA = "0xB543F8")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002A4")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xB52C98", Offset = "0xB52C98", VA = "0xB52C98")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xB52D28", Offset = "0xB52D28", VA = "0xB52D28")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xB52D98", Offset = "0xB52D98", VA = "0xB52D98")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xB52E2C", Offset = "0xB52E2C", VA = "0xB52E2C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB52ED4", Offset = "0xB52ED4", VA = "0xB52ED4")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB52FA0", Offset = "0xB52FA0", VA = "0xB52FA0")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xB53020", Offset = "0xB53020", VA = "0xB53020")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xB530A0", Offset = "0xB530A0", VA = "0xB530A0")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xB53148", Offset = "0xB53148", VA = "0xB53148")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xB53250", Offset = "0xB53250", VA = "0xB53250")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xB536CC", Offset = "0xB536CC", VA = "0xB536CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xB53590", Offset = "0xB53590", VA = "0xB53590")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xB537AC", Offset = "0xB537AC", VA = "0xB537AC")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xB538C0", Offset = "0xB538C0", VA = "0xB538C0")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xB53930", Offset = "0xB53930", VA = "0xB53930")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xB53998", Offset = "0xB53998", VA = "0xB53998")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xB53ABC", Offset = "0xB53ABC", VA = "0xB53ABC")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xB53BF4", Offset = "0xB53BF4", VA = "0xB53BF4")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xB53CD4", Offset = "0xB53CD4", VA = "0xB53CD4")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xB53DB4", Offset = "0xB53DB4", VA = "0xB53DB4")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xB53EB8", Offset = "0xB53EB8", VA = "0xB53EB8")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xB5405C", Offset = "0xB5405C", VA = "0xB5405C")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xB541F8", Offset = "0xB541F8", VA = "0xB541F8")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x200007E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C3C5C", Offset = "0x7C3C5C")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6104", Offset = "0x7C6104")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C613C", Offset = "0x7C613C")]
	public bool enableTouchInput;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6174", Offset = "0x7C6174")]
	public bool audioLoopback;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C61AC", Offset = "0x7C61AC")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C61E4", Offset = "0x7C61E4")]
	public bool showVisemes;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C621C", Offset = "0x7C621C")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6254", Offset = "0x7C6254")]
	public bool skipAudioSource;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C628C", Offset = "0x7C628C")]
	public float gain;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xB54480", Offset = "0xB54480", VA = "0xB54480")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xB54668", Offset = "0xB54668", VA = "0xB54668")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xB54BB4", Offset = "0xB54BB4", VA = "0xB54BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xB54E60", Offset = "0xB54E60", VA = "0xB54E60")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xB54EC4", Offset = "0xB54EC4", VA = "0xB54EC4")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xB54F30", Offset = "0xB54F30", VA = "0xB54F30")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xB550D4", Offset = "0xB550D4", VA = "0xB550D4")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xB55278", Offset = "0xB55278", VA = "0xB55278")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xB553AC", Offset = "0xB553AC", VA = "0xB553AC")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xB54BF8", Offset = "0xB54BF8", VA = "0xB54BF8")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xB54978", Offset = "0xB54978", VA = "0xB54978")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xB553BC", Offset = "0xB553BC", VA = "0xB553BC")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xB554E8", Offset = "0xB554E8", VA = "0xB554E8")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x200007F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C3CC0", Offset = "0x7C3CC0")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C62C4", Offset = "0x7C62C4")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C62FC", Offset = "0x7C62FC")]
	public bool enableAcceleration;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700000E")]
	public int Smoothing
	{
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xB55668", Offset = "0xB55668", VA = "0xB55668")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xB5557C", Offset = "0xB5557C", VA = "0xB5557C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public uint Context
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xB55670", Offset = "0xB55670", VA = "0xB55670")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000010")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xB55678", Offset = "0xB55678", VA = "0xB55678")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xB55680", Offset = "0xB55680", VA = "0xB55680")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB55818", Offset = "0xB55818", VA = "0xB55818")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB5593C", Offset = "0xB5593C", VA = "0xB5593C")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB55944", Offset = "0xB55944", VA = "0xB55944")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB55A38", Offset = "0xB55A38", VA = "0xB55A38")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB55B00", Offset = "0xB55B00", VA = "0xB55B00")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB5550C", Offset = "0xB5550C", VA = "0xB5550C")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000080")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C3D24", Offset = "0x7C3D24")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6334", Offset = "0x7C6334")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB55B78", Offset = "0xB55B78", VA = "0xB55B78")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xB55CE8", Offset = "0xB55CE8", VA = "0xB55CE8")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000081")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C636C", Offset = "0x7C636C")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C63A4", Offset = "0x7C63A4")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C63DC", Offset = "0x7C63DC")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6414", Offset = "0x7C6414")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C644C", Offset = "0x7C644C")]
	public KeyCode laughterKey;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6484", Offset = "0x7C6484")]
	public int laughterBlendTarget;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C64BC", Offset = "0x7C64BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C64BC", Offset = "0x7C64BC")]
	public float laughterThreshold;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C6510", Offset = "0x7C6510")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6510", Offset = "0x7C6510")]
	public float laughterMultiplier;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C6564", Offset = "0x7C6564")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6564", Offset = "0x7C6564")]
	public int smoothAmount;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xB55CEC", Offset = "0xB55CEC", VA = "0xB55CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xB55E30", Offset = "0xB55E30", VA = "0xB55E30")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xB560E0", Offset = "0xB560E0", VA = "0xB560E0")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xB55F3C", Offset = "0xB55F3C", VA = "0xB55F3C")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xB55FF0", Offset = "0xB55FF0", VA = "0xB55FF0")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xB561B0", Offset = "0xB561B0", VA = "0xB561B0")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xB56274", Offset = "0xB56274", VA = "0xB56274")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xB562DC", Offset = "0xB562DC", VA = "0xB562DC")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000082")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C65BC", Offset = "0x7C65BC")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x7C65BC", Offset = "0x7C65BC")]
	public Texture[] Textures;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C6738", Offset = "0x7C6738")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6738", Offset = "0x7C6738")]
	public int smoothAmount;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xB563D4", Offset = "0xB563D4", VA = "0xB563D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xB56528", Offset = "0xB56528", VA = "0xB56528")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xB566CC", Offset = "0xB566CC", VA = "0xB566CC")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xB567F0", Offset = "0xB567F0", VA = "0xB567F0")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C3D88", Offset = "0x7C3D88")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20002E7")]
	public enum micActivation
	{
		[Token(Token = "0x4001035")]
		HoldToSpeak,
		[Token(Token = "0x4001036")]
		PushToSpeak,
		[Token(Token = "0x4001037")]
		ConstantSpeak
	}

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6790", Offset = "0x7C6790")]
	public AudioSource audioSource;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C67C8", Offset = "0x7C67C8")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6800", Offset = "0x7C6800")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C6838", Offset = "0x7C6838")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6838", Offset = "0x7C6838")]
	private float micInputVolume;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C68A0", Offset = "0x7C68A0")]
	private int micFrequency;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C68EC", Offset = "0x7C68EC")]
	public micActivation micControl;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6924", Offset = "0x7C6924")]
	public KeyCode micActivationKey;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C695C", Offset = "0x7C695C")]
	public string selectedDevice;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000011")]
	public float MicFrequency
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xB5720C", Offset = "0xB5720C", VA = "0xB5720C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xB57218", Offset = "0xB57218", VA = "0xB57218")]
		set
		{
		}
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xB572A4", Offset = "0xB572A4", VA = "0xB572A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xB57364", Offset = "0xB57364", VA = "0xB57364")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xB573B0", Offset = "0xB573B0", VA = "0xB573B0")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xB574F4", Offset = "0xB574F4", VA = "0xB574F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xB5792C", Offset = "0xB5792C", VA = "0xB5792C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xB57940", Offset = "0xB57940", VA = "0xB57940")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB57958", Offset = "0xB57958", VA = "0xB57958")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB5795C", Offset = "0xB5795C", VA = "0xB5795C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB579D4", Offset = "0xB579D4", VA = "0xB579D4")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB57438", Offset = "0xB57438", VA = "0xB57438")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xB57798", Offset = "0xB57798", VA = "0xB57798")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB57650", Offset = "0xB57650", VA = "0xB57650")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB57BB4", Offset = "0xB57BB4", VA = "0xB57BB4")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xB57BBC", Offset = "0xB57BBC", VA = "0xB57BBC")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000084")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB55C44", Offset = "0xB55C44", VA = "0xB55C44")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB57BEC", Offset = "0xB57BEC", VA = "0xB57BEC")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000085")]
public class RichPresenceSample : MonoBehaviour
{
	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string DeeplinkMessageOverride;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsJoinable;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool IsIdle;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint CurrentCapacity;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint MaxCapacity;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DateTime StartTime;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DateTime EndTime;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RichPresenceExtraContext ExtraContext;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text InVRConsole;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text DestinationsConsole;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<string> DestinationAPINames;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ulong LoggedInUserID;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int DestinationIndex;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool OnlyPushUpOnce;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xE7DD10", Offset = "0xE7DD10", VA = "0xE7DD10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xE7DEA0", Offset = "0xE7DEA0", VA = "0xE7DEA0")]
	private void SetPresence()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xE7E07C", Offset = "0xE7E07C", VA = "0xE7E07C")]
	private void ClearPresence()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xE7E128", Offset = "0xE7E128", VA = "0xE7E128")]
	private string GetAppLaunchDetails()
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xE7E50C", Offset = "0xE7E50C", VA = "0xE7E50C")]
	private void OnLaunchIntentChangeNotif(Message<string> message)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xE7E5B4", Offset = "0xE7E5B4", VA = "0xE7E5B4")]
	private void OnGetDestinations(Message<DestinationList> message)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xE7E974", Offset = "0xE7E974", VA = "0xE7E974")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xE7EA38", Offset = "0xE7EA38", VA = "0xE7EA38")]
	private void ScrollThroughDestinations()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xE7E838", Offset = "0xE7E838", VA = "0xE7E838")]
	private void UpdateDestinationsConsole()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xE7EB2C", Offset = "0xE7EB2C", VA = "0xE7EB2C")]
	private void OnLoggedInUser(Message<User> message)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xE7DDF0", Offset = "0xE7DDF0", VA = "0xE7DDF0")]
	private void UpdateConsole(string value)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xE7EA20", Offset = "0xE7EA20", VA = "0xE7EA20")]
	private bool PressAButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xE7EA2C", Offset = "0xE7EA2C", VA = "0xE7EA2C")]
	private bool PressBButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xE7EB14", Offset = "0xE7EB14", VA = "0xE7EB14")]
	private bool PressUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xE7EB20", Offset = "0xE7EB20", VA = "0xE7EB20")]
	private bool PressDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xE7EBE0", Offset = "0xE7EBE0", VA = "0xE7EBE0")]
	public RichPresenceSample()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xE7ECB4", Offset = "0xE7ECB4", VA = "0xE7ECB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCEC", Offset = "0x7CDCEC")]
	private void <Start>b__12_0(Message<PlatformInitialize> message)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xE7EE6C", Offset = "0xE7EE6C", VA = "0xE7EE6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDCFC", Offset = "0x7CDCFC")]
	private void <SetPresence>b__13_0(Message message)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xE7EF5C", Offset = "0xE7EF5C", VA = "0xE7EF5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD0C", Offset = "0x7CDD0C")]
	private void <SetPresence>b__13_1(Message<User> message2)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xE7F14C", Offset = "0xE7F14C", VA = "0xE7F14C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD1C", Offset = "0x7CDD1C")]
	private void <ClearPresence>b__14_0(Message message)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xE7F23C", Offset = "0xE7F23C", VA = "0xE7F23C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD2C", Offset = "0x7CDD2C")]
	private void <ClearPresence>b__14_1(Message<User> message2)
	{
	}
}
[Token(Token = "0x2000086")]
public class BufferedAudioStream
{
	[Token(Token = "0x40002E6")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x40002EA")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x40002EB")]
	private const int sampleRate = 48000;

	[Token(Token = "0x40002EC")]
	private const int bufferSize = 12000;

	[Token(Token = "0x40002ED")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x9601F8", Offset = "0x9601F8", VA = "0x9601F8")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x960308", Offset = "0x960308", VA = "0x960308")]
	public void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x9602B8", Offset = "0x9602B8", VA = "0x9602B8")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x9604E0", Offset = "0x9604E0", VA = "0x9604E0")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x2000087")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20002E8")]
	public delegate void OnClick();

	[Token(Token = "0x20002E9")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20002EA")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20002EB")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5470", Offset = "0x7C5470")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x992CB4", Offset = "0x992CB4", VA = "0x992CB4")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x993654", Offset = "0x993654", VA = "0x993654")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5480", Offset = "0x7C5480")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x992F28", Offset = "0x992F28", VA = "0x992F28")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x993878", Offset = "0x993878", VA = "0x993878")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5490", Offset = "0x7C5490")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x993140", Offset = "0x993140", VA = "0x993140")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x993AFC", Offset = "0x993AFC", VA = "0x993AFC")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C54A0", Offset = "0x7C54A0")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x9932D4", Offset = "0x9932D4", VA = "0x9932D4")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x993ED4", Offset = "0x993ED4", VA = "0x993ED4")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C54B0", Offset = "0x7C54B0")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x99352C", Offset = "0x99352C", VA = "0x99352C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x993EF4", Offset = "0x993EF4", VA = "0x993EF4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40002F0")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40002F1")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40002F2")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40002FF")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000300")]
	private const float marginH = 16f;

	[Token(Token = "0x4000301")]
	private const float marginV = 16f;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x991C60", Offset = "0x991C60", VA = "0x991C60")]
	public void Awake()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x992064", Offset = "0x992064", VA = "0x992064")]
	public void Show()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x992630", Offset = "0x992630", VA = "0x992630")]
	public void Hide()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x9923DC", Offset = "0x9923DC", VA = "0x9923DC")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x9927D8", Offset = "0x9927D8", VA = "0x9927D8")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x992A8C", Offset = "0x992A8C", VA = "0x992A8C")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x992CBC", Offset = "0x992CBC", VA = "0x992CBC")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x992DA0", Offset = "0x992DA0", VA = "0x992DA0")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x992F30", Offset = "0x992F30", VA = "0x992F30")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x992FCC", Offset = "0x992FCC", VA = "0x992FCC")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x993148", Offset = "0x993148", VA = "0x993148")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x9932DC", Offset = "0x9932DC", VA = "0x9932DC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x993534", Offset = "0x993534", VA = "0x993534")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x9935E4", Offset = "0x9935E4", VA = "0x9935E4")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000088")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig m_CameraRig;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule m_InputModule;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x9B317C", Offset = "0x9B317C", VA = "0x9B317C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x9B3250", Offset = "0x9B3250", VA = "0x9B3250")]
	private void Start()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x9B3258", Offset = "0x9B3258", VA = "0x9B3258")]
	private void Update()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x9B3214", Offset = "0x9B3214", VA = "0x9B3214")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x9B3318", Offset = "0x9B3318", VA = "0x9B3318")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000089")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20002F1")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001041")]
		On,
		[Token(Token = "0x4001042")]
		Off,
		[Token(Token = "0x4001043")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _forward;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _hitTarget;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000012")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x9B5710", Offset = "0x9B5710", VA = "0x9B5710")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x9B56CC", Offset = "0x9B56CC", VA = "0x9B56CC")]
		set
		{
		}
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x9B5718", Offset = "0x9B5718", VA = "0x9B5718")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x9B5770", Offset = "0x9B5770", VA = "0x9B5770")]
	private void Start()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x9B5804", Offset = "0x9B5804", VA = "0x9B5804", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x9B5820", Offset = "0x9B5820", VA = "0x9B5820", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x9B5874", Offset = "0x9B5874", VA = "0x9B5874")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x9B5AD0", Offset = "0x9B5AD0", VA = "0x9B5AD0")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x9B5BE4", Offset = "0x9B5BE4", VA = "0x9B5BE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x9B5C78", Offset = "0x9B5C78", VA = "0x9B5C78")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200008A")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x95FB44", Offset = "0x95FB44", VA = "0x95FB44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x95FD50", Offset = "0x95FD50", VA = "0x95FD50")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x9601F0", Offset = "0x9601F0", VA = "0x9601F0")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200008B")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x9B2934", Offset = "0x9B2934", VA = "0x9B2934")]
	private void Start()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x9B2A68", Offset = "0x9B2A68", VA = "0x9B2A68")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x9B2CB8", Offset = "0x9B2CB8", VA = "0x9B2CB8")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x200008C")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000013")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x9B2D64", Offset = "0x9B2D64", VA = "0x9B2D64")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x9B29C4", Offset = "0x9B29C4", VA = "0x9B29C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD3C", Offset = "0x7CDD3C")]
		add
		{
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x9B2CC0", Offset = "0x9B2CC0", VA = "0x9B2CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD4C", Offset = "0x7CDD4C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x9B2D70", Offset = "0x9B2D70", VA = "0x9B2D70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x9B2EC8", Offset = "0x9B2EC8", VA = "0x9B2EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x9B303C", Offset = "0x9B303C", VA = "0x9B303C")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x9B3044", Offset = "0x9B3044", VA = "0x9B3044")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x200008D")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6A44", Offset = "0x7C6A44")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6A7C", Offset = "0x7C6A7C")]
	public bool EnableCollision;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6AB4", Offset = "0x7C6AB4")]
	public float MaxFade;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6AEC", Offset = "0x7C6AEC")]
	public float FadeMinDistance;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6B24", Offset = "0x7C6B24")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x96D0B8", Offset = "0x96D0B8", VA = "0x96D0B8")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x96D140", Offset = "0x96D140", VA = "0x96D140")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x96D1B0", Offset = "0x96D1B0", VA = "0x96D1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x96D1B4", Offset = "0x96D1B4", VA = "0x96D1B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x96D1D8", Offset = "0x96D1D8", VA = "0x96D1D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x96D1FC", Offset = "0x96D1FC", VA = "0x96D1FC")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200008E")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x93FEF0", Offset = "0x93FEF0", VA = "0x93FEF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x93FF9C", Offset = "0x93FF9C", VA = "0x93FF9C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200008F")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20002F2")]
	public enum States
	{
		[Token(Token = "0x4001045")]
		Ready,
		[Token(Token = "0x4001046")]
		Aim,
		[Token(Token = "0x4001047")]
		CancelAim,
		[Token(Token = "0x4001048")]
		PreTeleport,
		[Token(Token = "0x4001049")]
		CancelTeleport,
		[Token(Token = "0x400104A")]
		Teleporting,
		[Token(Token = "0x400104B")]
		PostTeleport
	}

	[Token(Token = "0x20002F3")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400104D")]
		None,
		[Token(Token = "0x400104E")]
		Aim,
		[Token(Token = "0x400104F")]
		PreTeleport,
		[Token(Token = "0x4001050")]
		Teleport
	}

	[Token(Token = "0x20002F4")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001052")]
		Point,
		[Token(Token = "0x4001053")]
		Sphere,
		[Token(Token = "0x4001054")]
		Capsule
	}

	[Token(Token = "0x20002F5")]
	public class AimData
	{
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CD5D4", Offset = "0x7CD5D4")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700010F")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0x943158", Offset = "0x943158", VA = "0x943158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1900", Offset = "0x7D1900")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x943160", Offset = "0x943160", VA = "0x943160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1910", Offset = "0x7D1910")]
			private set
			{
			}
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x9430E4", Offset = "0x9430E4", VA = "0x9430E4")]
		public AimData()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x943168", Offset = "0x943168", VA = "0x943168")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C54C0", Offset = "0x7C54C0")]
	private sealed class <ReadyStateCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0x942F30", Offset = "0x942F30", VA = "0x942F30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0x942F98", Offset = "0x942F98", VA = "0x942F98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x941434", Offset = "0x941434", VA = "0x941434")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x942E48", Offset = "0x942E48", VA = "0x942E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x942E4C", Offset = "0x942E4C", VA = "0x942E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x942F38", Offset = "0x942F38", VA = "0x942F38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C54D0", Offset = "0x7C54D0")]
	private sealed class <AimStateCoroutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x942910", Offset = "0x942910", VA = "0x942910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x942978", Offset = "0x942978", VA = "0x942978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x94191C", Offset = "0x94191C", VA = "0x94191C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x9427D8", Offset = "0x9427D8", VA = "0x9427D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x9427DC", Offset = "0x9427DC", VA = "0x9427DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x942918", Offset = "0x942918", VA = "0x942918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C54E0", Offset = "0x7C54E0")]
	private sealed class <CancelAimStateCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0x942A24", Offset = "0x942A24", VA = "0x942A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x942A8C", Offset = "0x942A8C", VA = "0x942A8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x941B00", Offset = "0x941B00", VA = "0x941B00")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x942980", Offset = "0x942980", VA = "0x942980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x942984", Offset = "0x942984", VA = "0x942984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x942A2C", Offset = "0x942A2C", VA = "0x942A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C54F0", Offset = "0x7C54F0")]
	private sealed class <PreTeleportStateCoroutine>d__71 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000116")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600133E")]
			[Address(RVA = "0x942DD8", Offset = "0x942DD8", VA = "0x942DD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001340")]
			[Address(RVA = "0x942E40", Offset = "0x942E40", VA = "0x942E40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x941CE4", Offset = "0x941CE4", VA = "0x941CE4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__71(int <>1__state)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x942D00", Offset = "0x942D00", VA = "0x942D00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x942D04", Offset = "0x942D04", VA = "0x942D04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x942DE0", Offset = "0x942DE0", VA = "0x942DE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5500", Offset = "0x7C5500")]
	private sealed class <CancelTeleportStateCoroutine>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001344")]
			[Address(RVA = "0x942B38", Offset = "0x942B38", VA = "0x942B38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x942BA0", Offset = "0x942BA0", VA = "0x942BA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x941EC8", Offset = "0x941EC8", VA = "0x941EC8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x942A94", Offset = "0x942A94", VA = "0x942A94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x942A98", Offset = "0x942A98", VA = "0x942A98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x942B40", Offset = "0x942B40", VA = "0x942B40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5510", Offset = "0x7C5510")]
	private sealed class <TeleportingStateCoroutine>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0x943074", Offset = "0x943074", VA = "0x943074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x9430DC", Offset = "0x9430DC", VA = "0x9430DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x9420AC", Offset = "0x9420AC", VA = "0x9420AC")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x942FA0", Offset = "0x942FA0", VA = "0x942FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x942FA4", Offset = "0x942FA4", VA = "0x942FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x94307C", Offset = "0x94307C", VA = "0x94307C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5520", Offset = "0x7C5520")]
	private sealed class <PostTeleportStateCoroutine>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700011C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0x942C90", Offset = "0x942C90", VA = "0x942C90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x942CF8", Offset = "0x942CF8", VA = "0x942CF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x942290", Offset = "0x942290", VA = "0x942290")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x942BA8", Offset = "0x942BA8", VA = "0x942BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x942BAC", Offset = "0x942BAC", VA = "0x942BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x942C98", Offset = "0x942C98", VA = "0x942C98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6B5C", Offset = "0x7C6B5C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6B94", Offset = "0x7C6B94")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6BCC", Offset = "0x7C6BCC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6C04", Offset = "0x7C6C04")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6C3C", Offset = "0x7C6C3C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6C74", Offset = "0x7C6C74")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6CAC", Offset = "0x7C6CAC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6CE4", Offset = "0x7C6CE4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C6D1C", Offset = "0x7C6D1C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6D2C", Offset = "0x7C6D2C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6D64", Offset = "0x7C6D64")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C6DAC", Offset = "0x7C6DAC")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6DBC", Offset = "0x7C6DBC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6DF4", Offset = "0x7C6DF4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6E2C", Offset = "0x7C6E2C")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6E64", Offset = "0x7C6E64")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000014")]
	public States CurrentState
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x940980", Offset = "0x940980", VA = "0x940980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD5C", Offset = "0x7CDD5C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x940988", Offset = "0x940988", VA = "0x940988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD6C", Offset = "0x7CDD6C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0x940BB8", Offset = "0x940BB8", VA = "0x940BB8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000016")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x940BE0", Offset = "0x940BE0", VA = "0x940BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD9C", Offset = "0x7CDD9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000245")]
		[Address(RVA = "0x940BE8", Offset = "0x940BE8", VA = "0x940BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDAC", Offset = "0x7CDDAC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x940990", Offset = "0x940990", VA = "0x940990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD7C", Offset = "0x7CDD7C")]
		add
		{
		}
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x940A34", Offset = "0x940A34", VA = "0x940A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDD8C", Offset = "0x7CDD8C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x9412EC", Offset = "0x9412EC", VA = "0x9412EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDDF4", Offset = "0x7CDDF4")]
		add
		{
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x941390", Offset = "0x941390", VA = "0x941390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE04", Offset = "0x7CDE04")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x941460", Offset = "0x941460", VA = "0x941460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE78", Offset = "0x7CDE78")]
		add
		{
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x941504", Offset = "0x941504", VA = "0x941504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE88", Offset = "0x7CDE88")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x9415A8", Offset = "0x9415A8", VA = "0x9415A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDE98", Offset = "0x7CDE98")]
		add
		{
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x94164C", Offset = "0x94164C", VA = "0x94164C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDEA8", Offset = "0x7CDEA8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x941764", Offset = "0x941764", VA = "0x941764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDEB8", Offset = "0x7CDEB8")]
		add
		{
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x941808", Offset = "0x941808", VA = "0x941808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDEC8", Offset = "0x7CDEC8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x941948", Offset = "0x941948", VA = "0x941948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF3C", Offset = "0x7CDF3C")]
		add
		{
		}
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x9419EC", Offset = "0x9419EC", VA = "0x9419EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDF4C", Offset = "0x7CDF4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x941B2C", Offset = "0x941B2C", VA = "0x941B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFC0", Offset = "0x7CDFC0")]
		add
		{
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x941BD0", Offset = "0x941BD0", VA = "0x941BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CDFD0", Offset = "0x7CDFD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x941D10", Offset = "0x941D10", VA = "0x941D10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF044", Offset = "0x7CF044")]
		add
		{
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x941DB4", Offset = "0x941DB4", VA = "0x941DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF054", Offset = "0x7CF054")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x941EF4", Offset = "0x941EF4", VA = "0x941EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF0C8", Offset = "0x7CF0C8")]
		add
		{
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x941F98", Offset = "0x941F98", VA = "0x941F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF0D8", Offset = "0x7CF0D8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x9420D8", Offset = "0x9420D8", VA = "0x9420D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF14C", Offset = "0x7CF14C")]
		add
		{
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x94217C", Offset = "0x94217C", VA = "0x94217C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF15C", Offset = "0x7CF15C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x9422BC", Offset = "0x9422BC", VA = "0x9422BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF1D0", Offset = "0x7CF1D0")]
		add
		{
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x942360", Offset = "0x942360", VA = "0x942360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF1E0", Offset = "0x7CF1E0")]
		remove
		{
		}
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x940650", Offset = "0x940650", VA = "0x940650")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x940674", Offset = "0x940674", VA = "0x940674")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x940AD8", Offset = "0x940AD8", VA = "0x940AD8")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x940BF0", Offset = "0x940BF0", VA = "0x940BF0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x940F48", Offset = "0x940F48", VA = "0x940F48")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7CDDBC", Offset = "0x7CDDBC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x941000", Offset = "0x941000", VA = "0x941000")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x9410C8", Offset = "0x9410C8", VA = "0x9410C8")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x9410E4", Offset = "0x9410E4", VA = "0x9410E4")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x9411AC", Offset = "0x9411AC", VA = "0x9411AC")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x9411F0", Offset = "0x9411F0", VA = "0x9411F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x94124C", Offset = "0x94124C", VA = "0x94124C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x94127C", Offset = "0x94127C", VA = "0x94127C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDE14", Offset = "0x7CDE14")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x9416F0", Offset = "0x9416F0", VA = "0x9416F0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x9418AC", Offset = "0x9418AC", VA = "0x9418AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDED8", Offset = "0x7CDED8")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x941A90", Offset = "0x941A90", VA = "0x941A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDF5C", Offset = "0x7CDF5C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x941C74", Offset = "0x941C74", VA = "0x941C74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CDFE0", Offset = "0x7CDFE0")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x941E58", Offset = "0x941E58", VA = "0x941E58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF064", Offset = "0x7CF064")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x94203C", Offset = "0x94203C", VA = "0x94203C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF0E8", Offset = "0x7CF0E8")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x942220", Offset = "0x942220", VA = "0x942220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF16C", Offset = "0x7CF16C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x942404", Offset = "0x942404", VA = "0x942404")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x942548", Offset = "0x942548", VA = "0x942548")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x94257C", Offset = "0x94257C", VA = "0x94257C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x94269C", Offset = "0x94269C", VA = "0x94269C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x9427C8", Offset = "0x9427C8", VA = "0x9427C8")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000090")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xE5CAF0", Offset = "0xE5CAF0", VA = "0xE5CAF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF1F0", Offset = "0x7CF1F0")]
		add
		{
		}
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xE5CB94", Offset = "0xE5CB94", VA = "0xE5CB94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF200", Offset = "0x7CF200")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xE5CC38", Offset = "0xE5CC38", VA = "0xE5CC38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF210", Offset = "0x7CF210")]
		add
		{
		}
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xE5CCDC", Offset = "0xE5CCDC", VA = "0xE5CCDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF220", Offset = "0x7CF220")]
		remove
		{
		}
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xE5CD80", Offset = "0xE5CD80", VA = "0xE5CD80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xE5CE28", Offset = "0xE5CE28", VA = "0xE5CE28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xE5CE2C", Offset = "0xE5CE2C", VA = "0xE5CE2C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xE5CEA0", Offset = "0xE5CEA0", VA = "0xE5CEA0")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xE5D010", Offset = "0xE5D010", VA = "0xE5D010")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xE5D2F4", Offset = "0xE5D2F4", VA = "0xE5D2F4")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xE5D4E4", Offset = "0xE5D4E4", VA = "0xE5D4E4")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000091")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600027A")]
	[Address(RVA = "0xE6312C", Offset = "0xE6312C", VA = "0xE6312C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xE631C0", Offset = "0xE631C0", VA = "0xE631C0", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600027C")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xE63290", Offset = "0xE63290", VA = "0xE63290")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000092")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6F5C", Offset = "0x7C6F5C")]
	public float Range;

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xE632A0", Offset = "0xE632A0", VA = "0xE632A0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xE633FC", Offset = "0xE633FC", VA = "0xE633FC")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000093")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6F94", Offset = "0x7C6F94")]
	public float Range;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C6FCC", Offset = "0x7C6FCC")]
	public float MinimumElevation;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7004", Offset = "0x7C7004")]
	public float Gravity;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C703C", Offset = "0x7C703C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C703C", Offset = "0x7C703C")]
	public float AimVelocity;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7098", Offset = "0x7C7098")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7098", Offset = "0x7C7098")]
	public float AimStep;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xE6340C", Offset = "0xE6340C", VA = "0xE6340C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xE63658", Offset = "0xE63658", VA = "0xE63658")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000094")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C70F0", Offset = "0x7C70F0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xE6366C", Offset = "0xE6366C", VA = "0xE6366C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xE63750", Offset = "0xE63750", VA = "0xE63750")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xE63780", Offset = "0xE63780", VA = "0xE63780")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xE637B0", Offset = "0xE637B0", VA = "0xE637B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xE63850", Offset = "0xE63850", VA = "0xE63850", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xE638BC", Offset = "0xE638BC", VA = "0xE638BC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xE63924", Offset = "0xE63924", VA = "0xE63924")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000095")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C7128", Offset = "0x7C7128")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7138", Offset = "0x7C7138")]
	public Transform PositionIndicator;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7170", Offset = "0x7C7170")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C71A8", Offset = "0x7C71A8")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000017")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xE63A40", Offset = "0xE63A40", VA = "0xE63A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF230", Offset = "0x7CF230")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xE63A48", Offset = "0xE63A48", VA = "0xE63A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF240", Offset = "0x7CF240")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xE63BF8", Offset = "0xE63BF8", VA = "0xE63BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF250", Offset = "0x7CF250")]
		add
		{
		}
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xE63C9C", Offset = "0xE63C9C", VA = "0xE63C9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF260", Offset = "0x7CF260")]
		remove
		{
		}
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xE63A54", Offset = "0xE63A54", VA = "0xE63A54")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xE63ADC", Offset = "0xE63ADC", VA = "0xE63ADC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xE63BB4", Offset = "0xE63BB4", VA = "0xE63BB4")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xE63BF4", Offset = "0xE63BF4", VA = "0xE63BF4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xE63D40", Offset = "0xE63D40", VA = "0xE63D40")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xE63DA8", Offset = "0xE63DA8", VA = "0xE63DA8")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xE63DC8", Offset = "0xE63DC8", VA = "0xE63DC8", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000096")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20002FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5530", Offset = "0x7C5530")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0xE6448C", Offset = "0xE6448C", VA = "0xE6448C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001358")]
			[Address(RVA = "0xE644F4", Offset = "0xE644F4", VA = "0xE644F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xE641D8", Offset = "0xE641D8", VA = "0xE641D8")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xE643FC", Offset = "0xE643FC", VA = "0xE643FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xE64400", Offset = "0xE64400", VA = "0xE64400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xE64494", Offset = "0xE64494", VA = "0xE64494", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5540", Offset = "0x7C5540")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000120")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600135C")]
			[Address(RVA = "0xE6438C", Offset = "0xE6438C", VA = "0xE6438C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600135E")]
			[Address(RVA = "0xE643F4", Offset = "0xE643F4", VA = "0xE643F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xE64274", Offset = "0xE64274", VA = "0xE64274")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xE642F8", Offset = "0xE642F8", VA = "0xE642F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xE642FC", Offset = "0xE642FC", VA = "0xE642FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xE64394", Offset = "0xE64394", VA = "0xE64394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xE63FA8", Offset = "0xE63FA8", VA = "0xE63FA8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xE64054", Offset = "0xE64054", VA = "0xE64054", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xE640AC", Offset = "0xE640AC", VA = "0xE640AC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xE64168", Offset = "0xE64168", VA = "0xE64168")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF270", Offset = "0x7CF270")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xE64204", Offset = "0xE64204", VA = "0xE64204")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF2D4", Offset = "0x7CF2D4")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x600029A")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xE642A0", Offset = "0xE642A0", VA = "0xE642A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF338", Offset = "0x7CF338")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xE642CC", Offset = "0xE642CC", VA = "0xE642CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF348", Offset = "0x7CF348")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C71F0", Offset = "0x7C71F0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7200", Offset = "0x7C7200")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7238", Offset = "0x7C7238")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7270", Offset = "0x7C7270")]
	public bool FastTeleport;

	[Token(Token = "0x17000018")]
	public Transform Pointer
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xE644FC", Offset = "0xE644FC", VA = "0xE644FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF358", Offset = "0x7CF358")]
		get
		{
			return null;
		}
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xE64504", Offset = "0xE64504", VA = "0xE64504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF368", Offset = "0x7CF368")]
		private set
		{
		}
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xE6450C", Offset = "0xE6450C", VA = "0xE6450C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xE64668", Offset = "0xE64668", VA = "0xE64668", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xE64720", Offset = "0xE64720", VA = "0xE64720")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000098")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20002FF")]
	public enum InputModes
	{
		[Token(Token = "0x4001076")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001077")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001078")]
		ThumbstickTeleport,
		[Token(Token = "0x4001079")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000300")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400107B")]
		A,
		[Token(Token = "0x400107C")]
		B,
		[Token(Token = "0x400107D")]
		LeftTrigger,
		[Token(Token = "0x400107E")]
		LeftThumbstick,
		[Token(Token = "0x400107F")]
		RightTrigger,
		[Token(Token = "0x4001080")]
		RightThumbstick,
		[Token(Token = "0x4001081")]
		X,
		[Token(Token = "0x4001082")]
		Y
	}

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C72A8", Offset = "0x7C72A8")]
	public InputModes InputMode;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C72E0", Offset = "0x7C72E0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7318", Offset = "0x7C7318")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7350", Offset = "0x7C7350")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xE64724", Offset = "0xE64724", VA = "0xE64724")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xE64728", Offset = "0xE64728", VA = "0xE64728", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xE64B70", Offset = "0xE64B70", VA = "0xE64B70", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xE64C30", Offset = "0xE64C30", VA = "0xE64C30")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000099")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000301")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001084")]
		HeadRelative,
		[Token(Token = "0x4001085")]
		ForwardFacing
	}

	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5550", Offset = "0x7C5550")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0xE650C0", Offset = "0xE650C0", VA = "0xE650C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0xE65128", Offset = "0xE65128", VA = "0xE65128", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xE64E9C", Offset = "0xE64E9C", VA = "0xE64E9C")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xE65018", Offset = "0xE65018", VA = "0xE65018", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xE6501C", Offset = "0xE6501C", VA = "0xE6501C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xE650C8", Offset = "0xE650C8", VA = "0xE650C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xE64CDC", Offset = "0xE64CDC", VA = "0xE64CDC")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xE64D90", Offset = "0xE64D90", VA = "0xE64D90")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xE64D98", Offset = "0xE64D98", VA = "0xE64D98", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xE64DE4", Offset = "0xE64DE4", VA = "0xE64DE4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xE64E2C", Offset = "0xE64E2C", VA = "0xE64E2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF378", Offset = "0x7CF378")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002AB")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002AC")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xE64EC8", Offset = "0xE64EC8", VA = "0xE64EC8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xE64FEC", Offset = "0xE64FEC", VA = "0xE64FEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF3DC", Offset = "0x7CF3DC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200009A")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xE65130", Offset = "0xE65130", VA = "0xE65130", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xE65134", Offset = "0xE65134", VA = "0xE65134", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xE651B0", Offset = "0xE651B0", VA = "0xE651B0")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200009B")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7388", Offset = "0x7C7388")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C73C0", Offset = "0x7C73C0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C73F8", Offset = "0x7C73F8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7430", Offset = "0x7C7430")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xE651B4", Offset = "0xE651B4", VA = "0xE651B4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xE65224", Offset = "0xE65224", VA = "0xE65224", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xE6569C", Offset = "0xE6569C", VA = "0xE6569C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7468", Offset = "0x7C7468")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C74A0", Offset = "0x7C74A0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C74D8", Offset = "0x7C74D8")]
	public float RotateStickThreshold;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xE656A0", Offset = "0xE656A0", VA = "0xE656A0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xE656E4", Offset = "0xE656E4", VA = "0xE656E4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xE65B54", Offset = "0xE65B54", VA = "0xE65B54")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200009D")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xE65B64", Offset = "0xE65B64", VA = "0xE65B64")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xE65B68", Offset = "0xE65B68", VA = "0xE65B68")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xE65B70", Offset = "0xE65B70", VA = "0xE65B70")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xE65C58", Offset = "0xE65C58", VA = "0xE65C58")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xE65C80", Offset = "0xE65C80", VA = "0xE65C80")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200009E")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C7510", Offset = "0x7C7510")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000019")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xE65C98", Offset = "0xE65C98", VA = "0xE65C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF3EC", Offset = "0x7CF3EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xE65CA0", Offset = "0xE65CA0", VA = "0xE65CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF3FC", Offset = "0x7CF3FC")]
		private set
		{
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xE6315C", Offset = "0xE6315C", VA = "0xE6315C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xE63264", Offset = "0xE63264", VA = "0xE63264", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xE65CA8", Offset = "0xE65CA8", VA = "0xE65CA8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7CF40C", Offset = "0x7CF40C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xE638B0", Offset = "0xE638B0", VA = "0xE638B0", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xE6391C", Offset = "0xE6391C", VA = "0xE6391C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xE63298", Offset = "0xE63298", VA = "0xE63298")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200009F")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000303")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5560", Offset = "0x7C5560")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0xE662FC", Offset = "0xE662FC", VA = "0xE662FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xE66364", Offset = "0xE66364", VA = "0xE66364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xE65EF8", Offset = "0xE65EF8", VA = "0xE65EF8")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xE66090", Offset = "0xE66090", VA = "0xE66090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xE66094", Offset = "0xE66094", VA = "0xE66094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xE66304", Offset = "0xE66304", VA = "0xE66304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7520", Offset = "0x7C7520")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000399")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xE65D70", Offset = "0xE65D70", VA = "0xE65D70")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xE65E34", Offset = "0xE65E34", VA = "0xE65E34", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xE65E60", Offset = "0xE65E60", VA = "0xE65E60", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xE65E88", Offset = "0xE65E88", VA = "0xE65E88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF444", Offset = "0x7CF444")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xE65F24", Offset = "0xE65F24", VA = "0xE65F24", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002CA")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xE65F40", Offset = "0xE65F40", VA = "0xE65F40", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xE66064", Offset = "0xE66064", VA = "0xE66064")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF4A8", Offset = "0x7CF4A8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xE6636C", Offset = "0xE6636C", VA = "0xE6636C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xE663CC", Offset = "0xE663CC", VA = "0xE663CC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xE66550", Offset = "0xE66550", VA = "0xE66550", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xE66640", Offset = "0xE66640", VA = "0xE66640")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7CF4B8", Offset = "0x7CF4B8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xE66644", Offset = "0xE66644", VA = "0xE66644")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7558", Offset = "0x7C7558")]
	public float LOSOffset;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7590", Offset = "0x7C7590")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xE66650", Offset = "0xE66650", VA = "0xE66650", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xE66880", Offset = "0xE66880", VA = "0xE66880")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000A2")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xE6688C", Offset = "0xE6688C", VA = "0xE6688C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xE66A10", Offset = "0xE66A10", VA = "0xE66A10")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000A3")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xE66A14", Offset = "0xE66A14", VA = "0xE66A14", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xE66AAC", Offset = "0xE66AAC", VA = "0xE66AAC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D8")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xE66B40", Offset = "0xE66B40", VA = "0xE66B40")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5570", Offset = "0x7C5570")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600136E")]
			[Address(RVA = "0xE66EA8", Offset = "0xE66EA8", VA = "0xE66EA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0xE66F10", Offset = "0xE66F10", VA = "0xE66F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xE66BE4", Offset = "0xE66BE4", VA = "0xE66BE4")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xE66DA8", Offset = "0xE66DA8", VA = "0xE66DA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xE66DAC", Offset = "0xE66DAC", VA = "0xE66DAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xE66EB0", Offset = "0xE66EB0", VA = "0xE66EB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C75C8", Offset = "0x7C75C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C75C8", Offset = "0x7C75C8")]
	public float TransitionDuration;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7620", Offset = "0x7C7620")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7620", Offset = "0x7C7620")]
	public float TeleportDelay;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7674", Offset = "0x7C7674")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xE66B48", Offset = "0xE66B48", VA = "0xE66B48", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xE66B74", Offset = "0xE66B74", VA = "0xE66B74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF4F0", Offset = "0x7CF4F0")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xE66C10", Offset = "0xE66C10", VA = "0xE66C10")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000A5")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xE66F18", Offset = "0xE66F18", VA = "0xE66F18", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xE66F34", Offset = "0xE66F34", VA = "0xE66F34")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5580", Offset = "0x7C5580")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001374")]
			[Address(RVA = "0xE67180", Offset = "0xE67180", VA = "0xE67180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0xE671E8", Offset = "0xE671E8", VA = "0xE671E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xE66FD8", Offset = "0xE66FD8", VA = "0xE66FD8")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xE6704C", Offset = "0xE6704C", VA = "0xE6704C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xE67050", Offset = "0xE67050", VA = "0xE67050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xE67188", Offset = "0xE67188", VA = "0xE67188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C76AC", Offset = "0x7C76AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C76AC", Offset = "0x7C76AC")]
	public float TransitionDuration;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xE66F3C", Offset = "0xE66F3C", VA = "0xE66F3C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xE66F68", Offset = "0xE66F68", VA = "0xE66F68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF554", Offset = "0x7CF554")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xE67004", Offset = "0xE67004", VA = "0xE67004")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000A7")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700001A")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x94C6C4", Offset = "0x94C6C4", VA = "0x94C6C4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001B")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x94C980", Offset = "0x94C980", VA = "0x94C980")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001C")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x948E28", Offset = "0x948E28", VA = "0x948E28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001D")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x949980", Offset = "0x949980", VA = "0x949980")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x949F90", Offset = "0x949F90", VA = "0x949F90")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x949CDC", Offset = "0x949CDC", VA = "0x949CDC")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x94926C", Offset = "0x94926C", VA = "0x94926C")]
	public static void Play()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x9493F0", Offset = "0x9493F0", VA = "0x9493F0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x949B04", Offset = "0x949B04", VA = "0x949B04")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x94A184", Offset = "0x94A184", VA = "0x94A184")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x9497C4", Offset = "0x9497C4", VA = "0x9497C4")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000A8")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000306")]
	public enum VideoShape
	{
		[Token(Token = "0x4001098")]
		_360,
		[Token(Token = "0x4001099")]
		_180,
		[Token(Token = "0x400109A")]
		Quad
	}

	[Token(Token = "0x2000307")]
	public enum VideoStereo
	{
		[Token(Token = "0x400109C")]
		Mono,
		[Token(Token = "0x400109D")]
		TopBottom,
		[Token(Token = "0x400109E")]
		LeftRight
	}

	[Token(Token = "0x2000308")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5590", Offset = "0x7C5590")]
	private sealed class <Start>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x94A44C", Offset = "0x94A44C", VA = "0x94A44C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x94A4B4", Offset = "0x94A4B4", VA = "0x94A4B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x948F68", Offset = "0x948F68", VA = "0x948F68")]
		[DebuggerHidden]
		public <Start>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x94A2C8", Offset = "0x94A2C8", VA = "0x94A2C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x94A2CC", Offset = "0x94A2CC", VA = "0x94A2CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x94A454", Offset = "0x94A454", VA = "0x94A454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C55A0", Offset = "0x7C55A0")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x9491D0", Offset = "0x9491D0", VA = "0x9491D0")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x949EBC", Offset = "0x949EBC", VA = "0x949EBC")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C7714", Offset = "0x7C7714")]
	private bool <isPlaying>k__BackingField;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string MovieName;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool LoopVideo;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public VideoShape Shape;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VideoStereo Stereo;

	[Token(Token = "0x1700001E")]
	public bool isPlaying
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x948A58", Offset = "0x948A58", VA = "0x948A58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5B8", Offset = "0x7CF5B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x948A60", Offset = "0x948A60", VA = "0x948A60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF5C8", Offset = "0x7CF5C8")]
		private set
		{
		}
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x948A6C", Offset = "0x948A6C", VA = "0x948A6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x948E90", Offset = "0x948E90", VA = "0x948E90")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x948EF8", Offset = "0x948EF8", VA = "0x948EF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF5D8", Offset = "0x7CF5D8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x948F94", Offset = "0x948F94", VA = "0x948F94")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x9491D8", Offset = "0x9491D8", VA = "0x9491D8")]
	public void Play()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x949360", Offset = "0x949360", VA = "0x949360")]
	public void Pause()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x9494E4", Offset = "0x9494E4", VA = "0x9494E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x949A70", Offset = "0x949A70", VA = "0x949A70")]
	public void Rewind()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x949C4C", Offset = "0x949C4C", VA = "0x949C4C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x949DD0", Offset = "0x949DD0", VA = "0x949DD0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x949EB4", Offset = "0x949EB4", VA = "0x949EB4")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000A9")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C3DEC", Offset = "0x7C3DEC")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x200030A")]
	private enum CubeFace
	{
		[Token(Token = "0x40010A6")]
		Right,
		[Token(Token = "0x40010A7")]
		Left,
		[Token(Token = "0x40010A8")]
		Top,
		[Token(Token = "0x40010A9")]
		Bottom,
		[Token(Token = "0x40010AA")]
		Front,
		[Token(Token = "0x40010AB")]
		Back,
		[Token(Token = "0x40010AC")]
		COUNT
	}

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xB57C88", Offset = "0xB57C88", VA = "0xB57C88")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xB57DE8", Offset = "0xB57DE8", VA = "0xB57DE8")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xB57FA4", Offset = "0xB57FA4", VA = "0xB57FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xB5847C", Offset = "0xB5847C", VA = "0xB5847C")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xB58750", Offset = "0xB58750", VA = "0xB58750")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xB599AC", Offset = "0xB599AC", VA = "0xB599AC")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xB59A0C", Offset = "0xB59A0C", VA = "0xB59A0C")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xB58AD0", Offset = "0xB58AD0", VA = "0xB58AD0")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xB59AF4", Offset = "0xB59AF4", VA = "0xB59AF4")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xB59CE0", Offset = "0xB59CE0", VA = "0xB59CE0")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xB58F88", Offset = "0xB58F88", VA = "0xB58F88")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xB592B0", Offset = "0xB592B0", VA = "0xB592B0")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xB59608", Offset = "0xB59608", VA = "0xB59608")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB59E94", Offset = "0xB59E94", VA = "0xB59E94")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000AA")]
public static class VectorUtil
{
	[Token(Token = "0x600030A")]
	[Address(RVA = "0xE6E5C0", Offset = "0xE6E5C0", VA = "0xE6E5C0")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000AB")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x9942C4", Offset = "0x9942C4", VA = "0x9942C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x994694", Offset = "0x994694", VA = "0x994694")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x99474C", Offset = "0x99474C", VA = "0x99474C")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x99494C", Offset = "0x99494C", VA = "0x99494C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x994A34", Offset = "0x994A34", VA = "0x994A34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x994B10", Offset = "0x994B10", VA = "0x994B10")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x994B7C", Offset = "0x994B7C", VA = "0x994B7C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x994B84", Offset = "0x994B84", VA = "0x994B84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF64C", Offset = "0x7CF64C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x994BE0", Offset = "0x994BE0", VA = "0x994BE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF65C", Offset = "0x7CF65C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x994C3C", Offset = "0x994C3C", VA = "0x994C3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF66C", Offset = "0x7CF66C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x994C98", Offset = "0x994C98", VA = "0x994C98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CF67C", Offset = "0x7CF67C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000AC")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C55B0", Offset = "0x7C55B0")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0x9B376C", Offset = "0x9B376C", VA = "0x9B376C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x9B37D4", Offset = "0x9B37D4", VA = "0x9B37D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x9B361C", Offset = "0x9B361C", VA = "0x9B361C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x9B3650", Offset = "0x9B3650", VA = "0x9B3650", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x9B3654", Offset = "0x9B3654", VA = "0x9B3654", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x9B3774", Offset = "0x9B3774", VA = "0x9B3774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x9B3320", Offset = "0x9B3320", VA = "0x9B3320")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x9B3420", Offset = "0x9B3420", VA = "0x9B3420")]
	private void Update()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x9B33B0", Offset = "0x9B33B0", VA = "0x9B33B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF68C", Offset = "0x7CF68C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x9B3648", Offset = "0x9B3648", VA = "0x9B3648")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000AD")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7734", Offset = "0x7C7734")]
	public int SubdivisionsU;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7750", Offset = "0x7C7750")]
	public int SubdivisionsV;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x96D4A8", Offset = "0x96D4A8", VA = "0x96D4A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x96DF60", Offset = "0x96DF60", VA = "0x96DF60")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000AE")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700001F")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600031C")]
		[Address(RVA = "0x93FFA4", Offset = "0x93FFA4", VA = "0x93FFA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x93FFFC", Offset = "0x93FFFC", VA = "0x93FFFC")]
	public void Start()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x940340", Offset = "0x940340", VA = "0x940340")]
	public void Update()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x940424", Offset = "0x940424", VA = "0x940424")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7CF6F0", Offset = "0x7CF6F0")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000320")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000321")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000322")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000323")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000324")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000325")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000326")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000327")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x94048C", Offset = "0x94048C", VA = "0x94048C")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x9404C8", Offset = "0x9404C8", VA = "0x9404C8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x94053C", Offset = "0x94053C", VA = "0x94053C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x940698", Offset = "0x940698", VA = "0x940698")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x94076C", Offset = "0x94076C", VA = "0x94076C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x94024C", Offset = "0x94024C", VA = "0x94024C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x94082C", Offset = "0x94082C", VA = "0x94082C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x940894", Offset = "0x940894", VA = "0x940894")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x940978", Offset = "0x940978", VA = "0x940978")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000AF")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C55C0", Offset = "0x7C55C0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xE6219C", Offset = "0xE6219C", VA = "0xE6219C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xE6228C", Offset = "0xE6228C", VA = "0xE6228C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xE61FFC", Offset = "0xE61FFC", VA = "0xE61FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xE621A4", Offset = "0xE621A4", VA = "0xE621A4")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xE62284", Offset = "0xE62284", VA = "0xE62284")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7C3E80", Offset = "0x7C3E80")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200030D")]
	public enum RotationAxes
	{
		[Token(Token = "0x40010B3")]
		MouseXAndY,
		[Token(Token = "0x40010B4")]
		MouseX,
		[Token(Token = "0x40010B5")]
		MouseY
	}

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x948718", Offset = "0x948718", VA = "0x948718")]
	private void Update()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x948978", Offset = "0x948978", VA = "0x948978")]
	private void Start()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x948A38", Offset = "0x948A38", VA = "0x948A38")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200030E")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40010B7")]
		Uninitialized = -1,
		[Token(Token = "0x40010B8")]
		NotEnabled,
		[Token(Token = "0x40010B9")]
		Success,
		[Token(Token = "0x40010BA")]
		StreamError,
		[Token(Token = "0x40010BB")]
		ProcessError,
		[Token(Token = "0x40010BC")]
		MaxStatValue
	}

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000020")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x94CC38", Offset = "0x94CC38", VA = "0x94CC38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000338")]
		[Address(RVA = "0x94CC40", Offset = "0x94CC40", VA = "0x94CC40")]
		set
		{
		}
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x94CC4C", Offset = "0x94CC4C", VA = "0x94CC4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x94CE68", Offset = "0x94CE68", VA = "0x94CE68")]
	private void Update()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x94D0C4", Offset = "0x94D0C4", VA = "0x94D0C4")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000B2")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200030F")]
	private enum Parameters
	{
		[Token(Token = "0x40010BE")]
		P_GAIN,
		[Token(Token = "0x40010BF")]
		P_USEINVSQR,
		[Token(Token = "0x40010C0")]
		P_NEAR,
		[Token(Token = "0x40010C1")]
		P_FAR,
		[Token(Token = "0x40010C2")]
		P_RADIUS,
		[Token(Token = "0x40010C3")]
		P_DISABLE_RFL,
		[Token(Token = "0x40010C4")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40010C5")]
		P_AMBISTAT,
		[Token(Token = "0x40010C6")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40010C7")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40010C8")]
		P_SENDLEVEL,
		[Token(Token = "0x40010C9")]
		P_NUM
	}

	[Token(Token = "0x40003F3")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000021")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x94D320", Offset = "0x94D320", VA = "0x94D320")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x94D328", Offset = "0x94D328", VA = "0x94D328")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public float Gain
	{
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x94D334", Offset = "0x94D334", VA = "0x94D334")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x94D33C", Offset = "0x94D33C", VA = "0x94D33C")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x94D3C0", Offset = "0x94D3C0", VA = "0x94D3C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x94D3C8", Offset = "0x94D3C8", VA = "0x94D3C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public float Near
	{
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x94D3D4", Offset = "0x94D3D4", VA = "0x94D3D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x94D3DC", Offset = "0x94D3DC", VA = "0x94D3DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public float Far
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x94D464", Offset = "0x94D464", VA = "0x94D464")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x94D46C", Offset = "0x94D46C", VA = "0x94D46C")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x94D4F4", Offset = "0x94D4F4", VA = "0x94D4F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x94D4FC", Offset = "0x94D4FC", VA = "0x94D4FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public float ReverbSend
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x94D584", Offset = "0x94D584", VA = "0x94D584")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x94D58C", Offset = "0x94D58C", VA = "0x94D58C")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public bool EnableRfl
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x94D614", Offset = "0x94D614", VA = "0x94D614")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x94D61C", Offset = "0x94D61C", VA = "0x94D61C")]
		set
		{
		}
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x94D148", Offset = "0x94D148", VA = "0x94D148")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x7CF728", Offset = "0x7CF728")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600033E")]
	[Address(RVA = "0x94D240", Offset = "0x94D240", VA = "0x94D240")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x94D628", Offset = "0x94D628", VA = "0x94D628")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x94D79C", Offset = "0x94D79C", VA = "0x94D79C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x94D7A0", Offset = "0x94D7A0", VA = "0x94D7A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x94D694", Offset = "0x94D694", VA = "0x94D694")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x94D868", Offset = "0x94D868", VA = "0x94D868")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x94DCC8", Offset = "0x94DCC8", VA = "0x94DCC8")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000355")]
	[Address(RVA = "0x94D1C0", Offset = "0x94D1C0", VA = "0x94D1C0")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x94DD98", Offset = "0x94DD98", VA = "0x94DD98")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000B3")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40003FE")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000400")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x94DDB8", Offset = "0x94DDB8", VA = "0x94DDB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x94DDC4", Offset = "0x94DDC4", VA = "0x94DDC4")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600035A")]
	[Address(RVA = "0x94DE7C", Offset = "0x94DE7C", VA = "0x94DE7C")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x600035B")]
	[Address(RVA = "0x94DDFC", Offset = "0x94DDFC", VA = "0x94DDFC")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x94DEFC", Offset = "0x94DEFC", VA = "0x94DEFC")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000310")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000311")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000407")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000029")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x950978", Offset = "0x950978", VA = "0x950978")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002A")]
	public string filePath
	{
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x950A04", Offset = "0x950A04", VA = "0x950A04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x950A7C", Offset = "0x950A7C", VA = "0x950A7C")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x950BC4", Offset = "0x950BC4", VA = "0x950BC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x950BC8", Offset = "0x950BC8", VA = "0x950BC8")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x951128", Offset = "0x951128", VA = "0x951128")]
	private void Update()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x9514C0", Offset = "0x9514C0", VA = "0x9514C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x95161C", Offset = "0x95161C", VA = "0x95161C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x951D04", Offset = "0x951D04", VA = "0x951D04")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x951D40", Offset = "0x951D40", VA = "0x951D40")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x953560", Offset = "0x953560", VA = "0x953560")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x953438", Offset = "0x953438", VA = "0x953438")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x950F60", Offset = "0x950F60", VA = "0x950F60")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x950D94", Offset = "0x950D94", VA = "0x950D94")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x953B74", Offset = "0x953B74", VA = "0x953B74")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x953FB0", Offset = "0x953FB0", VA = "0x953FB0")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000B5")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000312")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40010D0")]
		Int8,
		[Token(Token = "0x40010D1")]
		UInt8,
		[Token(Token = "0x40010D2")]
		Int16,
		[Token(Token = "0x40010D3")]
		UInt16,
		[Token(Token = "0x40010D4")]
		Int32,
		[Token(Token = "0x40010D5")]
		UInt32,
		[Token(Token = "0x40010D6")]
		Int64,
		[Token(Token = "0x40010D7")]
		UInt64,
		[Token(Token = "0x40010D8")]
		Float16,
		[Token(Token = "0x40010D9")]
		Float32,
		[Token(Token = "0x40010DA")]
		Float64
	}

	[Token(Token = "0x2000313")]
	public class ClientType
	{
		[Token(Token = "0x40010DB")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40010DC")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40010DD")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40010DE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40010DF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40010E0")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40010E1")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40010E2")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40010E3")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40010E4")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40010E5")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40010E6")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40010E7")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x94E3B0", Offset = "0x94E3B0", VA = "0x94E3B0")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000314")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001388")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001389")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x600138A")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x600138B")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600138C")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x600138D")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600138E")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600138F")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001390")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001391")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001392")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001393")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001394")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001395")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001396")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000315")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40010E8")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700012E")]
		private IntPtr context
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x94F020", Offset = "0x94F020", VA = "0x94F020")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001398")]
		[Address(RVA = "0x94F084", Offset = "0x94F084", VA = "0x94F084")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001399")]
		[Address(RVA = "0x94F114", Offset = "0x94F114", VA = "0x94F114")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x94F1A4", Offset = "0x94F1A4", VA = "0x94F1A4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139B")]
		[Address(RVA = "0x94F1C8", Offset = "0x94F1C8", VA = "0x94F1C8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x94F258", Offset = "0x94F258", VA = "0x94F258", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139D")]
		[Address(RVA = "0x94F27C", Offset = "0x94F27C", VA = "0x94F27C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x94F308", Offset = "0x94F308", VA = "0x94F308", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139F")]
		[Address(RVA = "0x94F32C", Offset = "0x94F32C", VA = "0x94F32C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x94F3AC", Offset = "0x94F3AC", VA = "0x94F3AC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x94F3B4", Offset = "0x94F3B4", VA = "0x94F3B4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x94F4D4", Offset = "0x94F4D4", VA = "0x94F4D4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x94F5CC", Offset = "0x94F5CC", VA = "0x94F5CC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x94F664", Offset = "0x94F664", VA = "0x94F664", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x94F670", Offset = "0x94F670", VA = "0x94F670")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x94F79C", Offset = "0x94F79C", VA = "0x94F79C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x94F7A8", Offset = "0x94F7A8", VA = "0x94F7A8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x94F854", Offset = "0x94F854", VA = "0x94F854", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x94F860", Offset = "0x94F860", VA = "0x94F860")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x94F90C", Offset = "0x94F90C", VA = "0x94F90C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x94F918", Offset = "0x94F918", VA = "0x94F918")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x94F9C4", Offset = "0x94F9C4", VA = "0x94F9C4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x94F9D0", Offset = "0x94F9D0", VA = "0x94F9D0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x94FA5C", Offset = "0x94FA5C", VA = "0x94FA5C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x94FA80", Offset = "0x94FA80", VA = "0x94FA80")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x94FB00", Offset = "0x94FB00", VA = "0x94FB00", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x94FB08", Offset = "0x94FB08", VA = "0x94FB08")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x94FBB0", Offset = "0x94FBB0", VA = "0x94FBB0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x94FBBC", Offset = "0x94FBBC", VA = "0x94FBBC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x94FC64", Offset = "0x94FC64", VA = "0x94FC64", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x94FC74", Offset = "0x94FC74", VA = "0x94FC74")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x94FD04", Offset = "0x94FD04", VA = "0x94FD04", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x94E35C", Offset = "0x94E35C", VA = "0x94E35C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000316")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40010EA")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700012F")]
		private IntPtr context
		{
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0x94FD10", Offset = "0x94FD10", VA = "0x94FD10")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x94E1A4", Offset = "0x94E1A4", VA = "0x94E1A4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x94FD74", Offset = "0x94FD74", VA = "0x94FD74")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x94FE04", Offset = "0x94FE04", VA = "0x94FE04", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x94FE28", Offset = "0x94FE28", VA = "0x94FE28")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x94FEB8", Offset = "0x94FEB8", VA = "0x94FEB8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x94FEDC", Offset = "0x94FEDC", VA = "0x94FEDC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x94FF6C", Offset = "0x94FF6C", VA = "0x94FF6C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x94FF90", Offset = "0x94FF90", VA = "0x94FF90")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x950010", Offset = "0x950010", VA = "0x950010", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x950018", Offset = "0x950018", VA = "0x950018")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x950138", Offset = "0x950138", VA = "0x950138", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x950230", Offset = "0x950230", VA = "0x950230")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x9502C8", Offset = "0x9502C8", VA = "0x9502C8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x9502D4", Offset = "0x9502D4", VA = "0x9502D4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x950400", Offset = "0x950400", VA = "0x950400", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x95040C", Offset = "0x95040C", VA = "0x95040C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x9504B8", Offset = "0x9504B8", VA = "0x9504B8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x9504C4", Offset = "0x9504C4", VA = "0x9504C4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x950570", Offset = "0x950570", VA = "0x950570", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x95057C", Offset = "0x95057C", VA = "0x95057C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x950628", Offset = "0x950628", VA = "0x950628", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x950634", Offset = "0x950634", VA = "0x950634")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x9506C4", Offset = "0x9506C4", VA = "0x9506C4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x9506E8", Offset = "0x9506E8", VA = "0x9506E8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x950768", Offset = "0x950768", VA = "0x950768", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x950770", Offset = "0x950770", VA = "0x950770")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x950818", Offset = "0x950818", VA = "0x950818", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x950824", Offset = "0x950824", VA = "0x950824")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x9508CC", Offset = "0x9508CC", VA = "0x9508CC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x9508DC", Offset = "0x9508DC", VA = "0x9508DC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x95096C", Offset = "0x95096C", VA = "0x95096C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x94E234", Offset = "0x94E234", VA = "0x94E234")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000317")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40010EC")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000130")]
		private IntPtr context
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x94E3B8", Offset = "0x94E3B8", VA = "0x94E3B8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x94E280", Offset = "0x94E280", VA = "0x94E280")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x94E41C", Offset = "0x94E41C", VA = "0x94E41C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x94E4AC", Offset = "0x94E4AC", VA = "0x94E4AC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x94E4D0", Offset = "0x94E4D0", VA = "0x94E4D0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x94E560", Offset = "0x94E560", VA = "0x94E560", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x94E584", Offset = "0x94E584", VA = "0x94E584")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x94E614", Offset = "0x94E614", VA = "0x94E614", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x94E638", Offset = "0x94E638", VA = "0x94E638")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x94E6B8", Offset = "0x94E6B8", VA = "0x94E6B8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x94E6C0", Offset = "0x94E6C0", VA = "0x94E6C0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x94E7E0", Offset = "0x94E7E0", VA = "0x94E7E0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x94E8D8", Offset = "0x94E8D8", VA = "0x94E8D8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x94E970", Offset = "0x94E970", VA = "0x94E970", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x94E97C", Offset = "0x94E97C", VA = "0x94E97C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x94EAA8", Offset = "0x94EAA8", VA = "0x94EAA8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x94EAB4", Offset = "0x94EAB4", VA = "0x94EAB4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x94EB60", Offset = "0x94EB60", VA = "0x94EB60", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x94EB6C", Offset = "0x94EB6C", VA = "0x94EB6C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x94EC18", Offset = "0x94EC18", VA = "0x94EC18", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x94EC24", Offset = "0x94EC24", VA = "0x94EC24")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x94ECD0", Offset = "0x94ECD0", VA = "0x94ECD0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x94ECDC", Offset = "0x94ECDC", VA = "0x94ECDC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x94ED6C", Offset = "0x94ED6C", VA = "0x94ED6C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x94ED90", Offset = "0x94ED90", VA = "0x94ED90")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x94EE10", Offset = "0x94EE10", VA = "0x94EE10", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x94EE18", Offset = "0x94EE18", VA = "0x94EE18")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x94EEC0", Offset = "0x94EEC0", VA = "0x94EEC0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x94EECC", Offset = "0x94EECC", VA = "0x94EECC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x94EF74", Offset = "0x94EF74", VA = "0x94EF74", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x94EF84", Offset = "0x94EF84", VA = "0x94EF84")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x94F014", Offset = "0x94F014", VA = "0x94F014", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x94E310", Offset = "0x94E310", VA = "0x94E310")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700002B")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x94DF0C", Offset = "0x94DF0C", VA = "0x94DF0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x94DF7C", Offset = "0x94DF7C", VA = "0x94DF7C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x94E3A8", Offset = "0x94E3A8", VA = "0x94E3A8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000B6")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000318")]
	public enum Preset
	{
		[Token(Token = "0x40010EF")]
		Custom,
		[Token(Token = "0x40010F0")]
		AcousticTile,
		[Token(Token = "0x40010F1")]
		Brick,
		[Token(Token = "0x40010F2")]
		BrickPainted,
		[Token(Token = "0x40010F3")]
		Carpet,
		[Token(Token = "0x40010F4")]
		CarpetHeavy,
		[Token(Token = "0x40010F5")]
		CarpetHeavyPadded,
		[Token(Token = "0x40010F6")]
		CeramicTile,
		[Token(Token = "0x40010F7")]
		Concrete,
		[Token(Token = "0x40010F8")]
		ConcreteRough,
		[Token(Token = "0x40010F9")]
		ConcreteBlock,
		[Token(Token = "0x40010FA")]
		ConcreteBlockPainted,
		[Token(Token = "0x40010FB")]
		Curtain,
		[Token(Token = "0x40010FC")]
		Foliage,
		[Token(Token = "0x40010FD")]
		Glass,
		[Token(Token = "0x40010FE")]
		GlassHeavy,
		[Token(Token = "0x40010FF")]
		Grass,
		[Token(Token = "0x4001100")]
		Gravel,
		[Token(Token = "0x4001101")]
		GypsumBoard,
		[Token(Token = "0x4001102")]
		PlasterOnBrick,
		[Token(Token = "0x4001103")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001104")]
		Soil,
		[Token(Token = "0x4001105")]
		SoundProof,
		[Token(Token = "0x4001106")]
		Snow,
		[Token(Token = "0x4001107")]
		Steel,
		[Token(Token = "0x4001108")]
		Water,
		[Token(Token = "0x4001109")]
		WoodThin,
		[Token(Token = "0x400110A")]
		WoodThick,
		[Token(Token = "0x400110B")]
		WoodFloor,
		[Token(Token = "0x400110C")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000319")]
	public sealed class Point
	{
		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xB48FF8", Offset = "0xB48FF8", VA = "0xB48FF8")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xB49030", Offset = "0xB49030", VA = "0xB49030")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xB490A0", Offset = "0xB490A0", VA = "0xB490A0")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7C55D0", Offset = "0x7C55D0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5DB4", Offset = "0x7C5DB4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001665")]
			[Address(RVA = "0xB49570", Offset = "0xB49570", VA = "0xB49570")]
			public <>c()
			{
			}

			[Token(Token = "0x6001666")]
			[Address(RVA = "0xB49578", Offset = "0xB49578", VA = "0xB49578")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001667")]
			[Address(RVA = "0xB49590", Offset = "0xB49590", VA = "0xB49590")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000131")]
		public float Item
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xB490D8", Offset = "0xB490D8", VA = "0xB490D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xB49494", Offset = "0xB49494", VA = "0xB49494")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C77FC", Offset = "0x7C77FC")]
	public Spectrum absorption;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C7834", Offset = "0x7C7834")]
	public Spectrum transmission;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C786C", Offset = "0x7C786C")]
	public Spectrum scattering;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700002C")]
	public Preset preset
	{
		[Token(Token = "0x6000371")]
		[Address(RVA = "0x954088", Offset = "0x954088", VA = "0x954088")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000372")]
		[Address(RVA = "0x954090", Offset = "0x954090", VA = "0x954090")]
		set
		{
		}
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x9540B8", Offset = "0x9540B8", VA = "0x9540B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x953A08", Offset = "0x953A08", VA = "0x953A08")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x95469C", Offset = "0x95469C", VA = "0x95469C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x9546A0", Offset = "0x9546A0", VA = "0x9546A0")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x9540BC", Offset = "0x9540BC", VA = "0x9540BC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x9532A4", Offset = "0x9532A4", VA = "0x9532A4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x954784", Offset = "0x954784", VA = "0x954784")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x954C24", Offset = "0x954C24", VA = "0x954C24")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x9550C8", Offset = "0x9550C8", VA = "0x9550C8")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x955568", Offset = "0x955568", VA = "0x955568")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x955A1C", Offset = "0x955A1C", VA = "0x955A1C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x955EBC", Offset = "0x955EBC", VA = "0x955EBC")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x95635C", Offset = "0x95635C", VA = "0x95635C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x956804", Offset = "0x956804", VA = "0x956804")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x956CAC", Offset = "0x956CAC", VA = "0x956CAC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x957158", Offset = "0x957158", VA = "0x957158")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x957600", Offset = "0x957600", VA = "0x957600")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x957AB0", Offset = "0x957AB0", VA = "0x957AB0")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x957F50", Offset = "0x957F50", VA = "0x957F50")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x9583FC", Offset = "0x9583FC", VA = "0x9583FC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x95888C", Offset = "0x95888C", VA = "0x95888C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x958D28", Offset = "0x958D28", VA = "0x958D28")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x9590B0", Offset = "0x9590B0", VA = "0x9590B0")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x959430", Offset = "0x959430", VA = "0x959430")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x9598E0", Offset = "0x9598E0", VA = "0x9598E0")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x959D8C", Offset = "0x959D8C", VA = "0x959D8C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x95A230", Offset = "0x95A230", VA = "0x95A230")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x95A5BC", Offset = "0x95A5BC", VA = "0x95A5BC")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x95A720", Offset = "0x95A720", VA = "0x95A720")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x95AA9C", Offset = "0x95AA9C", VA = "0x95AA9C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x95AF2C", Offset = "0x95AF2C", VA = "0x95AF2C")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x95B3D0", Offset = "0x95B3D0", VA = "0x95B3D0")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x95B868", Offset = "0x95B868", VA = "0x95B868")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x95BD08", Offset = "0x95BD08", VA = "0x95BD08")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x95C1B0", Offset = "0x95C1B0", VA = "0x95C1B0")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x95C654", Offset = "0x95C654", VA = "0x95C654")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xB495A8", Offset = "0xB495A8", VA = "0xB495A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xB4967C", Offset = "0xB4967C", VA = "0xB4967C")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000B8")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700002D")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0xB49C38", Offset = "0xB49C38", VA = "0xB49C38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xB49D4C", Offset = "0xB49D4C", VA = "0xB49D4C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000412")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x600039B")]
	[Address(RVA = "0xB49D5C", Offset = "0xB49D5C", VA = "0xB49D5C")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xB49DF4", Offset = "0xB49DF4", VA = "0xB49DF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xB49F00", Offset = "0xB49F00", VA = "0xB49F00")]
	private void Start()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xB49F04", Offset = "0xB49F04", VA = "0xB49F04")]
	private void Update()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xB49F08", Offset = "0xB49F08", VA = "0xB49F08")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000BA")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200031B")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000422")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000428")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xF03F20", Offset = "0xF03F20", VA = "0xF03F20")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xF03F58", Offset = "0xF03F58", VA = "0xF03F58")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xF04128", Offset = "0xF04128", VA = "0xF04128")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xF041D8", Offset = "0xF041D8", VA = "0xF041D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xF042CC", Offset = "0xF042CC", VA = "0xF042CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xF04C34", Offset = "0xF04C34", VA = "0xF04C34")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xF041BC", Offset = "0xF041BC", VA = "0xF041BC")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xF0423C", Offset = "0xF0423C", VA = "0xF0423C")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xF0499C", Offset = "0xF0499C", VA = "0xF0499C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xF04A1C", Offset = "0xF04A1C", VA = "0xF04A1C")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xF04AA4", Offset = "0xF04AA4", VA = "0xF04AA4")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xF04B2C", Offset = "0xF04B2C", VA = "0xF04B2C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xF04BAC", Offset = "0xF04BAC", VA = "0xF04BAC")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xF05A6C", Offset = "0xF05A6C", VA = "0xF05A6C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xF05B14", Offset = "0xF05B14", VA = "0xF05B14")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xF05BBC", Offset = "0xF05BBC", VA = "0xF05BBC")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000BB")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000BC")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xB4968C", Offset = "0xB4968C", VA = "0xB4968C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xB49690", Offset = "0xB49690", VA = "0xB49690")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xB49694", Offset = "0xB49694", VA = "0xB49694")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xB497FC", Offset = "0xB497FC", VA = "0xB497FC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xB496E0", Offset = "0xB496E0", VA = "0xB496E0")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xB49770", Offset = "0xB49770", VA = "0xB49770")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xB49848", Offset = "0xB49848", VA = "0xB49848")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xB498E0", Offset = "0xB498E0", VA = "0xB498E0")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xB49A48", Offset = "0xB49A48", VA = "0xB49A48")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xB49BB0", Offset = "0xB49BB0", VA = "0xB49BB0")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000BD")]
public class CarSimulator : MonoBehaviour
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool gasPedalPressing;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxRPM;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float idle;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rpm;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float accelerationSpeed;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float decelerationSpeed;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider accelSlider;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x96C83C", Offset = "0x96C83C", VA = "0x96C83C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x96C848", Offset = "0x96C848", VA = "0x96C848")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x96C980", Offset = "0x96C980", VA = "0x96C980")]
	public void onPointerDownRaceButton()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x96C98C", Offset = "0x96C98C", VA = "0x96C98C")]
	public void onPointerUpRaceButton()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x96C994", Offset = "0x96C994", VA = "0x96C994")]
	public CarSimulator()
	{
	}
}
[Token(Token = "0x20000BE")]
public class DropListCntrlMobile : MonoBehaviour
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dropdown rpmDropdownList;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gasPedalButton;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] sounds;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x994DA0", Offset = "0x994DA0", VA = "0x994DA0")]
	public void ControllRPM()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x994F4C", Offset = "0x994F4C", VA = "0x994F4C")]
	public DropListCntrlMobile()
	{
	}
}
[Token(Token = "0x20000BF")]
public class DropListController : MonoBehaviour
{
	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dropdown rpmDropdownList;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gasPedalButton;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle gasPedalPressingCheckbox;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] sounds;

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x994F54", Offset = "0x994F54", VA = "0x994F54")]
	public void ControllRPM()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x99515C", Offset = "0x99515C", VA = "0x99515C")]
	public DropListController()
	{
	}
}
[Token(Token = "0x20000C0")]
public class MobileSetRPMToSlider : MonoBehaviour
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound_mobile res_mob;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controllerGameobject;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider rpmSlider;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider pitchSlider;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text pitchText;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text rpmText;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle ReversingCheckbox;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool simulated;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject gasPedalButton;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CarSimulator carSimulator;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x94817C", Offset = "0x94817C", VA = "0x94817C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x948214", Offset = "0x948214", VA = "0x948214")]
	public void SetRPM()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x9482B4", Offset = "0x9482B4", VA = "0x9482B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x9484EC", Offset = "0x9484EC", VA = "0x9484EC")]
	public void ReverseGearCheckbox()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x9485E8", Offset = "0x9485E8", VA = "0x9485E8")]
	public void Reversing()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x948678", Offset = "0x948678", VA = "0x948678")]
	public void RPMLimit()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x948708", Offset = "0x948708", VA = "0x948708")]
	public MobileSetRPMToSlider()
	{
	}
}
[Token(Token = "0x20000C1")]
public class SetRPMToSlider : MonoBehaviour
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound res;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controllerGameobject;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider rpmSlider;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider pitchSlider;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text pitchText;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text rpmText;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle ReversingCheckbox;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle gasPedalCheckbox;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool simulated;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject gasPedalButton;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CarSimulator carSimulator;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xE5A9DC", Offset = "0xE5A9DC", VA = "0xE5A9DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xE5AA74", Offset = "0xE5AA74", VA = "0xE5AA74")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xE5ACE0", Offset = "0xE5ACE0", VA = "0xE5ACE0")]
	public void GasPedalCheckbox()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xE5AD70", Offset = "0xE5AD70", VA = "0xE5AD70")]
	public void ReverseGearCheckbox()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xE5AE6C", Offset = "0xE5AE6C", VA = "0xE5AE6C")]
	public void Reversing()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xE5AEFC", Offset = "0xE5AEFC", VA = "0xE5AEFC")]
	public void RPMLimit()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xE5AF8C", Offset = "0xE5AF8C", VA = "0xE5AF8C")]
	public SetRPMToSlider()
	{
	}
}
[Token(Token = "0x20000C2")]
public class Muffler : MonoBehaviour
{
	[Token(Token = "0x200031C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5608", Offset = "0x7C5608")]
	private sealed class <Wait1>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Muffler <>4__this;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x94AE68", Offset = "0x94AE68", VA = "0x94AE68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x94AED0", Offset = "0x94AED0", VA = "0x94AED0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x94AD38", Offset = "0x94AD38", VA = "0x94AD38")]
		[DebuggerHidden]
		public <Wait1>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x94ADA8", Offset = "0x94ADA8", VA = "0x94ADA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x94ADAC", Offset = "0x94ADAC", VA = "0x94ADAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x94AE70", Offset = "0x94AE70", VA = "0x94AE70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5618", Offset = "0x7C5618")]
	private sealed class <Wait2>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Muffler <>4__this;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0x94AF98", Offset = "0x94AF98", VA = "0x94AF98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x94B000", Offset = "0x94B000", VA = "0x94B000", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x94AD64", Offset = "0x94AD64", VA = "0x94AD64")]
		[DebuggerHidden]
		public <Wait2>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x94AED8", Offset = "0x94AED8", VA = "0x94AED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x94AEDC", Offset = "0x94AEDC", VA = "0x94AEDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x94AFA0", Offset = "0x94AFA0", VA = "0x94AFA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound res;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C78C4", Offset = "0x7C78C4")]
	public float masterVolume;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C78E0", Offset = "0x7C78E0")]
	public float pitchMultiplier;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C78F8", Offset = "0x7C78F8")]
	public float playTime;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip offClip;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip onClip;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource offLoop;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource onLoop;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve mufflerOffVolCurve;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve mufflerOnVolCurve;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float clipsValue;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int oneShotController;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x94A4BC", Offset = "0x94A4BC", VA = "0x94A4BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x94A53C", Offset = "0x94A53C", VA = "0x94A53C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x94A90C", Offset = "0x94A90C", VA = "0x94A90C")]
	private void CreateOff()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x94AAB0", Offset = "0x94AAB0", VA = "0x94AAB0")]
	private void CreateOn()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x94ACC8", Offset = "0x94ACC8", VA = "0x94ACC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF73C", Offset = "0x7CF73C")]
	private IEnumerator Wait1()
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x94AC58", Offset = "0x94AC58", VA = "0x94AC58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF7A0", Offset = "0x7CF7A0")]
	private IEnumerator Wait2()
	{
		return null;
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x94AD90", Offset = "0x94AD90", VA = "0x94AD90")]
	public Muffler()
	{
	}
}
[Token(Token = "0x20000C3")]
public class MufflerRandom : MonoBehaviour
{
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5628", Offset = "0x7C5628")]
	private sealed class <Wait1>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MufflerRandom <>4__this;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x94B9DC", Offset = "0x94B9DC", VA = "0x94B9DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x94BA44", Offset = "0x94BA44", VA = "0x94BA44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x94B8AC", Offset = "0x94B8AC", VA = "0x94B8AC")]
		[DebuggerHidden]
		public <Wait1>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x94B91C", Offset = "0x94B91C", VA = "0x94B91C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x94B920", Offset = "0x94B920", VA = "0x94B920", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x94B9E4", Offset = "0x94B9E4", VA = "0x94B9E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5638", Offset = "0x7C5638")]
	private sealed class <Wait2>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MufflerRandom <>4__this;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x94BB0C", Offset = "0x94BB0C", VA = "0x94BB0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0x94BB74", Offset = "0x94BB74", VA = "0x94BB74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x94B8D8", Offset = "0x94B8D8", VA = "0x94B8D8")]
		[DebuggerHidden]
		public <Wait2>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x94BA4C", Offset = "0x94BA4C", VA = "0x94BA4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x94BA50", Offset = "0x94BA50", VA = "0x94BA50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x94BB14", Offset = "0x94BB14", VA = "0x94BB14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound res;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7910", Offset = "0x7C7910")]
	public float masterVolume;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C792C", Offset = "0x7C792C")]
	public float pitchMultiplier;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7944", Offset = "0x7C7944")]
	public float playTime;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] offClip;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] onClip;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource offLoop;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource onLoop;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve mufflerOffVolCurve;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve mufflerOnVolCurve;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float clipsValue;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int oneShotController;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x94B008", Offset = "0x94B008", VA = "0x94B008")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x94B088", Offset = "0x94B088", VA = "0x94B088")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x94B458", Offset = "0x94B458", VA = "0x94B458")]
	private void CreateOff()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x94B610", Offset = "0x94B610", VA = "0x94B610")]
	private void CreateOn()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x94B83C", Offset = "0x94B83C", VA = "0x94B83C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF804", Offset = "0x7CF804")]
	private IEnumerator Wait1()
	{
		return null;
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x94B7CC", Offset = "0x94B7CC", VA = "0x94B7CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF868", Offset = "0x7CF868")]
	private IEnumerator Wait2()
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x94B904", Offset = "0x94B904", VA = "0x94B904")]
	public MufflerRandom()
	{
	}
}
[Token(Token = "0x20000C4")]
public class Muffler_mob : MonoBehaviour
{
	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5648", Offset = "0x7C5648")]
	private sealed class <Wait1>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Muffler_mob <>4__this;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x94C524", Offset = "0x94C524", VA = "0x94C524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x94C58C", Offset = "0x94C58C", VA = "0x94C58C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x94C3F4", Offset = "0x94C3F4", VA = "0x94C3F4")]
		[DebuggerHidden]
		public <Wait1>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x94C464", Offset = "0x94C464", VA = "0x94C464", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x94C468", Offset = "0x94C468", VA = "0x94C468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x94C52C", Offset = "0x94C52C", VA = "0x94C52C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5658", Offset = "0x7C5658")]
	private sealed class <Wait2>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Muffler_mob <>4__this;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0x94C654", Offset = "0x94C654", VA = "0x94C654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0x94C6BC", Offset = "0x94C6BC", VA = "0x94C6BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x94C420", Offset = "0x94C420", VA = "0x94C420")]
		[DebuggerHidden]
		public <Wait2>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x94C594", Offset = "0x94C594", VA = "0x94C594", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x94C598", Offset = "0x94C598", VA = "0x94C598", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x94C65C", Offset = "0x94C65C", VA = "0x94C65C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound_mobile res;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C795C", Offset = "0x7C795C")]
	public float masterVolume;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7978", Offset = "0x7C7978")]
	public float pitchMultiplier;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7990", Offset = "0x7C7990")]
	public float playTime;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip offClip;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip onClip;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource offLoop;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource onLoop;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve mufflerOffVolCurve;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve mufflerOnVolCurve;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float clipsValue;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int oneShotController;

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x94BB7C", Offset = "0x94BB7C", VA = "0x94BB7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x94BBFC", Offset = "0x94BBFC", VA = "0x94BBFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x94BFC8", Offset = "0x94BFC8", VA = "0x94BFC8")]
	private void CreateOff()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x94C16C", Offset = "0x94C16C", VA = "0x94C16C")]
	private void CreateOn()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x94C384", Offset = "0x94C384", VA = "0x94C384")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF8CC", Offset = "0x7CF8CC")]
	private IEnumerator Wait1()
	{
		return null;
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x94C314", Offset = "0x94C314", VA = "0x94C314")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF930", Offset = "0x7CF930")]
	private IEnumerator Wait2()
	{
		return null;
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x94C44C", Offset = "0x94C44C", VA = "0x94C44C")]
	public Muffler_mob()
	{
	}
}
[Token(Token = "0x20000C5")]
public class RealisticEngineSound : MonoBehaviour
{
	[Token(Token = "0x2000322")]
	public enum GasPedalValue
	{
		[Token(Token = "0x4001124")]
		Simulated,
		[Token(Token = "0x4001125")]
		NotSimulated
	}

	[Token(Token = "0x2000323")]
	public enum EngineShake
	{
		[Token(Token = "0x4001127")]
		Off,
		[Token(Token = "0x4001128")]
		Random,
		[Token(Token = "0x4001129")]
		AllwaysOn
	}

	[Token(Token = "0x2000324")]
	public enum ShakeLenghtType
	{
		[Token(Token = "0x400112B")]
		Fix,
		[Token(Token = "0x400112C")]
		Random
	}

	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5668", Offset = "0x7C5668")]
	private sealed class <WaitForStart>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RealisticEngineSound <>4__this;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xE7AE2C", Offset = "0xE7AE2C", VA = "0xE7AE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0xE7AE94", Offset = "0xE7AE94", VA = "0xE7AE94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xE7ACC4", Offset = "0xE7ACC4", VA = "0xE7ACC4")]
		[DebuggerHidden]
		public <WaitForStart>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xE7AD44", Offset = "0xE7AD44", VA = "0xE7AD44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xE7AD48", Offset = "0xE7AD48", VA = "0xE7AD48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xE7AE34", Offset = "0xE7AE34", VA = "0xE7AE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C79A8", Offset = "0x7C79A8")]
	public float masterVolume;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerGroup audioMixer;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float engineCurrentRPM;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool gasPedalPressing;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C79C4", Offset = "0x7C79C4")]
	public float gasPedalValue;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GasPedalValue gasPedalValueSetting;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C79DC", Offset = "0x7C79DC")]
	public float gasPedalSimSpeed;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxRPMLimit;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C79F4", Offset = "0x7C79F4")]
	private float dopplerAmount;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7A0C", Offset = "0x7C7A0C")]
	public float pitchMultiplier;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioReverbPreset reverbZoneSetting;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private AudioReverbPreset reverbZoneControll;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7A28", Offset = "0x7C7A28")]
	public float optimisationLevel;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public AudioRolloffMode audioRolloffMode;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minDistance;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxDistance;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isReversing;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool useRPMLimit;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool enableReverseGear;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public float carCurrentSpeed;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public float carMaxSpeed;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool isShifting;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip idleClip;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve idleVolCurve;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve idlePitchCurve;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip lowOffClip;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip lowOnClip;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve lowVolCurve;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve lowPitchCurve;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip medOffClip;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip medOnClip;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AnimationCurve medVolCurve;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimationCurve medPitchCurve;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip highOffClip;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip highOnClip;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AnimationCurve highVolCurve;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AnimationCurve highPitchCurve;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip maxRPMClip;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AnimationCurve maxRPMVolCurve;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip reversingClip;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AnimationCurve reversingVolCurve;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AnimationCurve reversingPitchCurve;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private AudioSource engineIdle;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private AudioSource lowOff;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AudioSource lowOn;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AudioSource medOff;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AudioSource medOn;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource highOff;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource highOn;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private AudioSource maxRPM;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private AudioSource reversing;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float clipsValue;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float clipsValue2;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Camera mainCamera;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public bool isCameraNear;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public EngineShake engineShakeSetting;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	public ShakeLenghtType shakeLenghtSetting;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[HideInInspector]
	public float shakeLength;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[HideInInspector]
	public float shakeVolumeChange;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[HideInInspector]
	public float randomChance;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _endRange;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float shakeVolumeChangeDetect;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float _oscillateRange;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float _oscillateOffset;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float lenght;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float randomShakingValue;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float randomShakingValue2;

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xE77098", Offset = "0xE77098", VA = "0xE77098")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xE788B0", Offset = "0xE788B0", VA = "0xE788B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xE788B4", Offset = "0xE788B4", VA = "0xE788B4")]
	private void DestroyAll()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xE78CD4", Offset = "0xE78CD4", VA = "0xE78CD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xE78D78", Offset = "0xE78D78", VA = "0xE78D78")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xE78EB4", Offset = "0xE78EB4", VA = "0xE78EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xE7AB54", Offset = "0xE7AB54", VA = "0xE7AB54")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xE78880", Offset = "0xE78880", VA = "0xE78880")]
	private void UpdateStartRange()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xE78704", Offset = "0xE78704", VA = "0xE78704")]
	private void SetReverbZone()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xE78D08", Offset = "0xE78D08", VA = "0xE78D08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF994", Offset = "0x7CF994")]
	private IEnumerator WaitForStart()
	{
		return null;
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xE77600", Offset = "0xE77600", VA = "0xE77600")]
	private void CreateIdle()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xE779C0", Offset = "0xE779C0", VA = "0xE779C0")]
	private void CreateLowOff()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xE777DC", Offset = "0xE777DC", VA = "0xE777DC")]
	private void CreateLowOn()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xE77D90", Offset = "0xE77D90", VA = "0xE77D90")]
	private void CreateMedOff()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xE77BAC", Offset = "0xE77BAC", VA = "0xE77BAC")]
	private void CreateMedOn()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xE78160", Offset = "0xE78160", VA = "0xE78160")]
	private void CreateHighOff()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xE77F7C", Offset = "0xE77F7C", VA = "0xE77F7C")]
	private void CreateHighOn()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xE7834C", Offset = "0xE7834C", VA = "0xE7834C")]
	private void CreateRPMLimit()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xE78528", Offset = "0xE78528", VA = "0xE78528")]
	private void CreateReverse()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xE7ACF0", Offset = "0xE7ACF0", VA = "0xE7ACF0")]
	public RealisticEngineSound()
	{
	}
}
[Token(Token = "0x20000C6")]
public class RealisticEngineSound_mobile : MonoBehaviour
{
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5678", Offset = "0x7C5678")]
	private sealed class <WaitForStart>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RealisticEngineSound_mobile <>4__this;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0xE7CF84", Offset = "0xE7CF84", VA = "0xE7CF84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001432")]
			[Address(RVA = "0xE7CFEC", Offset = "0xE7CFEC", VA = "0xE7CFEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xE7CE38", Offset = "0xE7CE38", VA = "0xE7CE38")]
		[DebuggerHidden]
		public <WaitForStart>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xE7CE9C", Offset = "0xE7CE9C", VA = "0xE7CE9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xE7CEA0", Offset = "0xE7CEA0", VA = "0xE7CEA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xE7CF8C", Offset = "0xE7CF8C", VA = "0xE7CF8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7AC0", Offset = "0x7C7AC0")]
	public float masterVolume;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerGroup audioMixer;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float engineCurrentRPM;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxRPMLimit;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7ADC", Offset = "0x7C7ADC")]
	private float dopplerAmount;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7AF4", Offset = "0x7C7AF4")]
	public float pitchMultiplier;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7B10", Offset = "0x7C7B10")]
	public float optimisationLevel;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioRolloffMode audioRolloffMode;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minDistance;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxDistance;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isReversing;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool useRPMLimit;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool enableReverseGear;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public float carCurrentSpeed;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float carMaxSpeed;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool isShifting;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool gasPedalPressing;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip idleClip;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve idleVolCurve;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve idlePitchCurve;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip lowOnClip;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve lowVolCurve;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve lowPitchCurve;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip medOnClip;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve medVolCurve;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve medPitchCurve;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip highOnClip;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve highVolCurve;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AnimationCurve highPitchCurve;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip maxRPMClip;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimationCurve maxRPMVolCurve;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioClip reversingClip;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AnimationCurve reversingVolCurve;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AnimationCurve reversingPitchCurve;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource engineIdle;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private AudioSource lowOn;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AudioSource medOn;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AudioSource highOn;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AudioSource maxRPM;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AudioSource reversing;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float clipsValue;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Camera mainCamera;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public bool isCameraNear;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xE7AE9C", Offset = "0xE7AE9C", VA = "0xE7AE9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xE7BE3C", Offset = "0xE7BE3C", VA = "0xE7BE3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xE7C0BC", Offset = "0xE7C0BC", VA = "0xE7C0BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xE7BE40", Offset = "0xE7BE40", VA = "0xE7BE40")]
	private void DestroyAll()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xE7C158", Offset = "0xE7C158", VA = "0xE7C158")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xE7C294", Offset = "0xE7C294", VA = "0xE7C294")]
	private void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xE7CCD4", Offset = "0xE7CCD4", VA = "0xE7CCD4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xE7C0E8", Offset = "0xE7C0E8", VA = "0xE7C0E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CF9F8", Offset = "0x7CF9F8")]
	private IEnumerator WaitForStart()
	{
		return null;
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xE7B314", Offset = "0xE7B314", VA = "0xE7B314")]
	private void CreateIdle()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xE7B4F0", Offset = "0xE7B4F0", VA = "0xE7B4F0")]
	private void CreateLowOn()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xE7B6CC", Offset = "0xE7B6CC", VA = "0xE7B6CC")]
	private void CreateMedOn()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xE7B8A8", Offset = "0xE7B8A8", VA = "0xE7B8A8")]
	private void CreateHighOn()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xE7BA84", Offset = "0xE7BA84", VA = "0xE7BA84")]
	private void CreateMaxRPM()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xE7BC60", Offset = "0xE7BC60", VA = "0xE7BC60")]
	private void CreateReverse()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xE7CE64", Offset = "0xE7CE64", VA = "0xE7CE64")]
	public RealisticEngineSound_mobile()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ShiftingSound : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound res;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7B68", Offset = "0x7C7B68")]
	public float masterVolume;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip shiftingSoundClip;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource shiftingSound;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int playOnce;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xE5AF9C", Offset = "0xE5AF9C", VA = "0xE5AF9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xE5B01C", Offset = "0xE5B01C", VA = "0xE5B01C")]
	private void Update()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xE5B10C", Offset = "0xE5B10C", VA = "0xE5B10C")]
	private void CreateShiftSound()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xE5B230", Offset = "0xE5B230", VA = "0xE5B230")]
	public ShiftingSound()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ShiftingSoundRandom : MonoBehaviour
{
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5688", Offset = "0x7C5688")]
	private sealed class <WaitForStart>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShiftingSoundRandom <>4__this;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0xE5B83C", Offset = "0xE5B83C", VA = "0xE5B83C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001438")]
			[Address(RVA = "0xE5B8A4", Offset = "0xE5B8A4", VA = "0xE5B8A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xE5B718", Offset = "0xE5B718", VA = "0xE5B718")]
		[DebuggerHidden]
		public <WaitForStart>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xE5B754", Offset = "0xE5B754", VA = "0xE5B754", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xE5B758", Offset = "0xE5B758", VA = "0xE5B758", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xE5B844", Offset = "0xE5B844", VA = "0xE5B844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound res;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7B84", Offset = "0x7C7B84")]
	public float masterVolume;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] shiftingSoundClips;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource shiftingSound;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int playOnce;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xE5B240", Offset = "0xE5B240", VA = "0xE5B240")]
	private void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xE5B34C", Offset = "0xE5B34C", VA = "0xE5B34C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xE5B400", Offset = "0xE5B400", VA = "0xE5B400")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xE5B49C", Offset = "0xE5B49C", VA = "0xE5B49C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xE5B42C", Offset = "0xE5B42C", VA = "0xE5B42C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFA5C", Offset = "0x7CFA5C")]
	private IEnumerator WaitForStart()
	{
		return null;
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xE5B58C", Offset = "0xE5B58C", VA = "0xE5B58C")]
	private void CreateShiftSound()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xE5B744", Offset = "0xE5B744", VA = "0xE5B744")]
	public ShiftingSoundRandom()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ShiftingSound_mobile : MonoBehaviour
{
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound_mobile res;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7BA0", Offset = "0x7C7BA0")]
	public float masterVolume;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip shiftingSoundClip;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource shiftingSound;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int playOnce;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xE5B8AC", Offset = "0xE5B8AC", VA = "0xE5B8AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xE5B92C", Offset = "0xE5B92C", VA = "0xE5B92C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xE5B9E0", Offset = "0xE5B9E0", VA = "0xE5B9E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xE5BAE4", Offset = "0xE5BAE4", VA = "0xE5BAE4")]
	private void CreateShiftSound()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xE5BC08", Offset = "0xE5BC08", VA = "0xE5BC08")]
	public ShiftingSound_mobile()
	{
	}
}
[Token(Token = "0x20000CA")]
public class SuperCharger : MonoBehaviour
{
	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound res;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7BBC", Offset = "0x7C7BBC")]
	public float masterVolume;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip chargerOnLoopClip;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip chargerOffLoopClip;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve chargerVolCurve;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve chargerPitchCurve;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource chargerOnLoop;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource chargerOffLoop;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float clipsValue;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xE622A8", Offset = "0xE622A8", VA = "0xE622A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xE62328", Offset = "0xE62328", VA = "0xE62328")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xE6232C", Offset = "0xE6232C", VA = "0xE6232C")]
	private void DestroyAll()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xE62438", Offset = "0xE62438", VA = "0xE62438")]
	private void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xE626B8", Offset = "0xE626B8", VA = "0xE626B8")]
	private void CreateChargerOn()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xE62854", Offset = "0xE62854", VA = "0xE62854")]
	private void CreateChargerOff()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xE629F0", Offset = "0xE629F0", VA = "0xE629F0")]
	public SuperCharger()
	{
	}
}
[Token(Token = "0x20000CB")]
public class SuperCharger_mobile : MonoBehaviour
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound_mobile res;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7BD8", Offset = "0x7C7BD8")]
	public float masterVolume;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip chargerOnLoopClip;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip chargerOffLoopClip;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve chargerVolCurve;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve chargerPitchCurve;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource chargerOnLoop;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource chargerOffLoop;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float clipsValue;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xE62A00", Offset = "0xE62A00", VA = "0xE62A00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xE62A80", Offset = "0xE62A80", VA = "0xE62A80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xE62A84", Offset = "0xE62A84", VA = "0xE62A84")]
	private void DestroyAll()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xE62B90", Offset = "0xE62B90", VA = "0xE62B90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xE62DE4", Offset = "0xE62DE4", VA = "0xE62DE4")]
	private void CreateChargerOn()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xE62F80", Offset = "0xE62F80", VA = "0xE62F80")]
	private void CreateChargerOff()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xE6311C", Offset = "0xE6311C", VA = "0xE6311C")]
	public SuperCharger_mobile()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TurboCharger : MonoBehaviour
{
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5698", Offset = "0x7C5698")]
	private sealed class <WaitForStart>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TurboCharger <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600143C")]
			[Address(RVA = "0xE6C97C", Offset = "0xE6C97C", VA = "0xE6C97C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0xE6C9E4", Offset = "0xE6C9E4", VA = "0xE6C9E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xE6C84C", Offset = "0xE6C84C", VA = "0xE6C84C")]
		[DebuggerHidden]
		public <WaitForStart>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xE6C894", Offset = "0xE6C894", VA = "0xE6C894", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xE6C898", Offset = "0xE6C898", VA = "0xE6C898", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xE6C984", Offset = "0xE6C984", VA = "0xE6C984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound res;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float clipsValue;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7BF4", Offset = "0x7C7BF4")]
	public float masterVolume;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip turboLoopClip;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip maxRpmLoopClip;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve chargerVolCurve;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve chargerPitchCurve;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7C10", Offset = "0x7C7C10")]
	public float longShotTreshold;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] longShotClips;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] shortShotClips;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve oneShotVolCurve;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve oneShotPitchCurve;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource turboLoop;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource oneShot;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource maxTurboLoop;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int oneShotController;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xE6BCE8", Offset = "0xE6BCE8", VA = "0xE6BCE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xE6BE10", Offset = "0xE6BE10", VA = "0xE6BE10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xE6BF78", Offset = "0xE6BF78", VA = "0xE6BF78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xE6BE14", Offset = "0xE6BE14", VA = "0xE6BE14")]
	private void DestroyAll()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xE6C014", Offset = "0xE6C014", VA = "0xE6C014")]
	private void Update()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xE6BFA4", Offset = "0xE6BFA4", VA = "0xE6BFA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFAC0", Offset = "0x7CFAC0")]
	private IEnumerator WaitForStart()
	{
		return null;
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xE6C388", Offset = "0xE6C388", VA = "0xE6C388")]
	private void CreateTurboLoop()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xE6C6C0", Offset = "0xE6C6C0", VA = "0xE6C6C0")]
	private void CreateOneShot()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xE6C524", Offset = "0xE6C524", VA = "0xE6C524")]
	private void CreateMaxTurboLoop()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xE6C878", Offset = "0xE6C878", VA = "0xE6C878")]
	public TurboCharger()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TurboCharger_mobile : MonoBehaviour
{
	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C56A8", Offset = "0x7C56A8")]
	private sealed class <WaitForStart>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TurboCharger_mobile <>4__this;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0xE6D660", Offset = "0xE6D660", VA = "0xE6D660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001444")]
			[Address(RVA = "0xE6D6C8", Offset = "0xE6D6C8", VA = "0xE6D6C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xE6D530", Offset = "0xE6D530", VA = "0xE6D530")]
		[DebuggerHidden]
		public <WaitForStart>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xE6D578", Offset = "0xE6D578", VA = "0xE6D578", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xE6D57C", Offset = "0xE6D57C", VA = "0xE6D57C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xE6D668", Offset = "0xE6D668", VA = "0xE6D668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RealisticEngineSound_mobile res;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float clipsValue;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7C2C", Offset = "0x7C7C2C")]
	public float masterVolume;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip turboLoopClip;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip maxRpmLoopClip;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve chargerVolCurve;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve chargerPitchCurve;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7C48", Offset = "0x7C7C48")]
	public float longShotTreshold;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip longShotClip;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip shortShotClip;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve oneShotVolCurve;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve oneShotPitchCurve;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource turboLoop;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource oneShot;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource maxTurboLoop;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int oneShotController;

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xE6C9EC", Offset = "0xE6C9EC", VA = "0xE6C9EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xE6CA6C", Offset = "0xE6CA6C", VA = "0xE6CA6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xE6CA70", Offset = "0xE6CA70", VA = "0xE6CA70")]
	private void DestroyAll()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xE6CBD4", Offset = "0xE6CBD4", VA = "0xE6CBD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xE6CC70", Offset = "0xE6CC70", VA = "0xE6CC70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xE6CC00", Offset = "0xE6CC00", VA = "0xE6CC00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFB24", Offset = "0x7CFB24")]
	private IEnumerator WaitForStart()
	{
		return null;
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xE6D04C", Offset = "0xE6D04C", VA = "0xE6D04C")]
	private void CreateTurboLoop()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xE6D384", Offset = "0xE6D384", VA = "0xE6D384")]
	private void CreateOneShot()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xE6D1E8", Offset = "0xE6D1E8", VA = "0xE6D1E8")]
	private void CreateMaxTurboLoop()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xE6D55C", Offset = "0xE6D55C", VA = "0xE6D55C")]
	public TurboCharger_mobile()
	{
	}
}
[Token(Token = "0x20000CE")]
public class FollowHeading : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C7C64", Offset = "0x7C7C64")]
	public float heading;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VehicleController m_vehicle;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x9AF70C", Offset = "0x9AF70C", VA = "0x9AF70C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x9AF764", Offset = "0x9AF764", VA = "0x9AF764")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x9AF834", Offset = "0x9AF834", VA = "0x9AF834")]
	public FollowHeading()
	{
	}
}
[Token(Token = "0x20000CF")]
public class VehicleNitro : MonoBehaviour
{
	[Token(Token = "0x200032A")]
	public enum Mode
	{
		[Token(Token = "0x400113D")]
		Acceleration,
		[Token(Token = "0x400113E")]
		Impulse
	}

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode mode;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float value;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxVelocity;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode key;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xE6EBD0", Offset = "0xE6EBD0", VA = "0xE6EBD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xE6EC28", Offset = "0xE6EC28", VA = "0xE6EC28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xE6ED14", Offset = "0xE6ED14", VA = "0xE6ED14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xE6EDFC", Offset = "0xE6EDFC", VA = "0xE6EDFC")]
	public VehicleNitro()
	{
	}
}
[Token(Token = "0x20000D0")]
public class CarInstantiator : MonoBehaviour
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_cars;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] PointsArr;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject platform;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject points;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool start;

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x9675A8", Offset = "0x9675A8", VA = "0x9675A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x967600", Offset = "0x967600", VA = "0x967600")]
	public void InstantiateCars(GameObject platform)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x9679E8", Offset = "0x9679E8", VA = "0x9679E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x9679EC", Offset = "0x9679EC", VA = "0x9679EC")]
	public CarInstantiator()
	{
	}
}
[Token(Token = "0x20000D1")]
public class InfinitePlatformScript : MonoBehaviour
{
	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_platforms;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_distanceBetweenPlatforms;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_maxPlatformsAtStart;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_player;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int offset;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] m_instantiatedPlatforms;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nextIndexofPlatformtoActive;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_zPosofNextPlatform;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_previousIndexofPlatformtoActive;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_zPosofPreviousPlatform;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_firstActivePlatform;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int m_lastActivePlatform;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CarInstantiator m_carInstantiator;

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x9B397C", Offset = "0x9B397C", VA = "0x9B397C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x9B3C00", Offset = "0x9B3C00", VA = "0x9B3C00")]
	private void Update()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x9B3E7C", Offset = "0x9B3E7C", VA = "0x9B3E7C")]
	public void NextPlatformActive()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x9B3FA8", Offset = "0x9B3FA8", VA = "0x9B3FA8")]
	public void PreviousPlatformActive()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x9B40A4", Offset = "0x9B40A4", VA = "0x9B40A4")]
	public InfinitePlatformScript()
	{
	}
}
[Token(Token = "0x20000D2")]
public class InstantiatedCarScript : MonoBehaviour
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float speed;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject m_player;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool move;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x9B4110", Offset = "0x9B4110", VA = "0x9B4110")]
	private void Start()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x9B4194", Offset = "0x9B4194", VA = "0x9B4194")]
	private void Update()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x9B4244", Offset = "0x9B4244", VA = "0x9B4244")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x9B4390", Offset = "0x9B4390", VA = "0x9B4390")]
	public InstantiatedCarScript()
	{
	}
}
[Token(Token = "0x20000D3")]
public class AutoCarInstruction : MonoBehaviour
{
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C56B8", Offset = "0x7C56B8")]
	private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoCarInstruction <>4__this;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0x95E708", Offset = "0x95E708", VA = "0x95E708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0x95E770", Offset = "0x95E770", VA = "0x95E770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x95DF88", Offset = "0x95DF88", VA = "0x95DF88")]
		[DebuggerHidden]
		public <Start>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x95E658", Offset = "0x95E658", VA = "0x95E658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x95E65C", Offset = "0x95E65C", VA = "0x95E65C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x95E710", Offset = "0x95E710", VA = "0x95E710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteeringWheelController m_steerScript;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VehicleStandardInput m_inputScript;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CarPowerButtonScript m_powerButton;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject steerInstruction;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject powerButtonInstruction;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject accelerateInstruction;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string seasonName;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int instructionLearnt;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LevelHandler m_levelHandler;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int step;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isAccelerate;

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x95DE48", Offset = "0x95DE48", VA = "0x95DE48")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x95DEA0", Offset = "0x95DEA0", VA = "0x95DEA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x95DF18", Offset = "0x95DF18", VA = "0x95DF18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFB88", Offset = "0x7CFB88")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x95DFB4", Offset = "0x95DFB4", VA = "0x95DFB4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x95DFB8", Offset = "0x95DFB8", VA = "0x95DFB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x95E0E0", Offset = "0x95E0E0", VA = "0x95E0E0")]
	private void PowerButtonInstruction()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x95E1FC", Offset = "0x95E1FC", VA = "0x95E1FC")]
	public void Steer()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x95E254", Offset = "0x95E254", VA = "0x95E254")]
	private void SteerInstruction()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x95E374", Offset = "0x95E374", VA = "0x95E374")]
	public void AccelerateButton()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x95E3CC", Offset = "0x95E3CC", VA = "0x95E3CC")]
	private void AccelerationInstruction()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x95E088", Offset = "0x95E088", VA = "0x95E088")]
	public void Finish()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x95E4F4", Offset = "0x95E4F4", VA = "0x95E4F4")]
	private void FinishInstruction()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x95E600", Offset = "0x95E600", VA = "0x95E600")]
	public AutoCarInstruction()
	{
	}
}
[Token(Token = "0x20000D4")]
public class CarMirrorUpDownScript : MonoBehaviour
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playSound;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] m_ambience;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minY;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxY;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minX;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxX;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isXInvert;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isDown;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool isUp;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float speedFactor;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float yPos;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float XPos;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float outsideVolume;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource m_ambianceAudio;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x9679FC", Offset = "0x9679FC", VA = "0x9679FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x967C88", Offset = "0x967C88", VA = "0x967C88")]
	public void DownButtonDown()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x967C94", Offset = "0x967C94", VA = "0x967C94")]
	public void DownButtonUp()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x967C9C", Offset = "0x967C9C", VA = "0x967C9C")]
	public void UpButtonDown()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x967CDC", Offset = "0x967CDC", VA = "0x967CDC")]
	public void UpButtonUp()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x967CE4", Offset = "0x967CE4", VA = "0x967CE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x968058", Offset = "0x968058", VA = "0x968058")]
	public CarMirrorUpDownScript()
	{
	}
}
[Token(Token = "0x20000D5")]
public class CarPowerButtonScript : MonoBehaviour
{
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C56C8", Offset = "0x7C56C8")]
	private sealed class <StartCar>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CarPowerButtonScript <>4__this;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600144E")]
			[Address(RVA = "0x969860", Offset = "0x969860", VA = "0x969860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001450")]
			[Address(RVA = "0x9698C8", Offset = "0x9698C8", VA = "0x9698C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x968DE0", Offset = "0x968DE0", VA = "0x968DE0")]
		[DebuggerHidden]
		public <StartCar>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x96967C", Offset = "0x96967C", VA = "0x96967C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x969680", Offset = "0x969680", VA = "0x969680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x969868", Offset = "0x969868", VA = "0x969868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_spotLights;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject carAudio;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VehicleStandardInput m_carInput;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer m_textRenderer;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_buttonGlow;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material m_defaultMat;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource m_carStartAudio;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VehicleGearController m_gearController;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CarGameOverScript m_carGameOverScript;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator carGuideScreen;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool buttonDownOnly;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool buttonDoublePress;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ButtonDownDistance;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float DefaultYPos;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject btnVisual;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent OnButtonDown;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UnityEvent OnButtonGet;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent OnButtonUp;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent OnResetButton;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isButtonDown;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool isDoublePressDown;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool isCarStart;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_time;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float timer;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool cantDown;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x968A54", Offset = "0x968A54", VA = "0x968A54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x968A58", Offset = "0x968A58", VA = "0x968A58")]
	public void ResetButton()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x968BEC", Offset = "0x968BEC", VA = "0x968BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x968B28", Offset = "0x968B28", VA = "0x968B28")]
	public void Reset()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x968C8C", Offset = "0x968C8C", VA = "0x968C8C")]
	public void StartCarButton()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x968D70", Offset = "0x968D70", VA = "0x968D70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFBEC", Offset = "0x7CFBEC")]
	public IEnumerator StartCar()
	{
		return null;
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x968E0C", Offset = "0x968E0C", VA = "0x968E0C")]
	public void CarStop()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x968F3C", Offset = "0x968F3C", VA = "0x968F3C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x96937C", Offset = "0x96937C", VA = "0x96937C")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x96944C", Offset = "0x96944C", VA = "0x96944C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x96948C", Offset = "0x96948C", VA = "0x96948C")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x969660", Offset = "0x969660", VA = "0x969660")]
	public CarPowerButtonScript()
	{
	}
}
[Token(Token = "0x20000D6")]
public class InstructionScript : MonoBehaviour
{
	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteeringWheelController m_steerScript;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VehicleGearController m_gearScript;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VehicleHandBreakController m_handBrakeScript;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VehicleStandardInput m_inputScript;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoxCollider m_powerButton;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoxCollider m_windowUpButton;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoxCollider m_windowDownButton;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VRPhysicalButton m_musicButton;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject steerInstruction;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject powerButtonInstruction;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject gearInstruction;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject gearPracticeInstruction;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject handbrakeInstruction;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject musicInstruction;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject windowInstruction;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject accelerateInstruction;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject parkingInstruction;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LevelHandler m_levelHandler;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int instructionLearnt;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int steps;

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x9B43EC", Offset = "0x9B43EC", VA = "0x9B43EC")]
	public void ResetData()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x9B4524", Offset = "0x9B4524", VA = "0x9B4524")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x9B4598", Offset = "0x9B4598", VA = "0x9B4598")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x9B46C0", Offset = "0x9B46C0", VA = "0x9B46C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x9B47A0", Offset = "0x9B47A0", VA = "0x9B47A0")]
	public void WindowInstruction()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x9B47F8", Offset = "0x9B47F8", VA = "0x9B47F8")]
	public void WindowUpDownInstruction()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x9B4958", Offset = "0x9B4958", VA = "0x9B4958")]
	public void HandBrake()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x9B49B0", Offset = "0x9B49B0", VA = "0x9B49B0")]
	private void HandBrakeInstruction()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x9B4668", Offset = "0x9B4668", VA = "0x9B4668")]
	public void PowerButton()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x9B49B4", Offset = "0x9B49B4", VA = "0x9B49B4")]
	private void PowerButtonInstruction()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x9B4B14", Offset = "0x9B4B14", VA = "0x9B4B14")]
	public void Gear()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x9B4B6C", Offset = "0x9B4B6C", VA = "0x9B4B6C")]
	private void GearInstruction()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x9B4CCC", Offset = "0x9B4CCC", VA = "0x9B4CCC")]
	public void GearPractice()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x9B4D24", Offset = "0x9B4D24", VA = "0x9B4D24")]
	private void GearPracticeInstruction()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x9B4E84", Offset = "0x9B4E84", VA = "0x9B4E84")]
	public void Steer()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x9B4EF4", Offset = "0x9B4EF4", VA = "0x9B4EF4")]
	private void SteerInstruction()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x9B5054", Offset = "0x9B5054", VA = "0x9B5054")]
	public void AccelerateButton()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x9B50AC", Offset = "0x9B50AC", VA = "0x9B50AC")]
	private void AccelerationInstruction()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x9B520C", Offset = "0x9B520C", VA = "0x9B520C")]
	public void ParkingInstruction()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x9B5364", Offset = "0x9B5364", VA = "0x9B5364")]
	public void MusicButton()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x9B53BC", Offset = "0x9B53BC", VA = "0x9B53BC")]
	private void MusicInstruction()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x9B551C", Offset = "0x9B551C", VA = "0x9B551C")]
	public void Finish()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x9B5574", Offset = "0x9B5574", VA = "0x9B5574")]
	private void FinishInstruction()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x9B56C4", Offset = "0x9B56C4", VA = "0x9B56C4")]
	public InstructionScript()
	{
	}
}
[Token(Token = "0x20000D7")]
public class RadioScript : MonoBehaviour
{
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] m_audioClips;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip m_firstAudio;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer m_playPauseRenderer;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_whiteMat;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_redMat;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource m_audioSource;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_audioIndex;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isPlaying;

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xE762C4", Offset = "0xE762C4", VA = "0xE762C4")]
	public void Awake()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xE76354", Offset = "0xE76354", VA = "0xE76354")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xE763E8", Offset = "0xE763E8", VA = "0xE763E8")]
	public void ResetButton()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xE76484", Offset = "0xE76484", VA = "0xE76484")]
	public void NextMusic()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xE765C0", Offset = "0xE765C0", VA = "0xE765C0")]
	public void PreviousMusic()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xE7670C", Offset = "0xE7670C", VA = "0xE7670C")]
	public void PlayPauseBTN()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xE767FC", Offset = "0xE767FC", VA = "0xE767FC")]
	public RadioScript()
	{
	}
}
[Token(Token = "0x20000D8")]
public class VRPhysicalButton : MonoBehaviour
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool buttonDownOnly;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool buttonDoublePress;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ButtonDownDistance;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DefaultYPos;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject btnVisual;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnButtonDown;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnButtonGet;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnButtonUp;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnResetButton;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isButtonDown;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isDoublePressDown;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float m_time;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timer;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xE6D6D0", Offset = "0xE6D6D0", VA = "0xE6D6D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xE6D6D4", Offset = "0xE6D6D4", VA = "0xE6D6D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xE6D6D8", Offset = "0xE6D6D8", VA = "0xE6D6D8")]
	public void ResetButton()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xE6D7A8", Offset = "0xE6D7A8", VA = "0xE6D7A8")]
	public void ButtonDown()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xE6D910", Offset = "0xE6D910", VA = "0xE6D910")]
	public void ButtonUp()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xE6DA08", Offset = "0xE6DA08", VA = "0xE6DA08")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xE6DED0", Offset = "0xE6DED0", VA = "0xE6DED0")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xE6DFA0", Offset = "0xE6DFA0", VA = "0xE6DFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xE6DFE0", Offset = "0xE6DFE0", VA = "0xE6DFE0")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xE6E1B0", Offset = "0xE6E1B0", VA = "0xE6E1B0")]
	public VRPhysicalButton()
	{
	}
}
[Token(Token = "0x20000D9")]
public class VibrationManager : MonoBehaviour
{
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VibrationManager m_instance;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xE6EE18", Offset = "0xE6EE18", VA = "0xE6EE18")]
	private void Start()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xE6EF18", Offset = "0xE6EF18", VA = "0xE6EF18")]
	public void TriggerVibration(AudioClip vibrationAudio, OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xE6DE28", Offset = "0xE6DE28", VA = "0xE6DE28")]
	public void StartVibration(float magnitude, OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xE6F014", Offset = "0xE6F014", VA = "0xE6F014")]
	private void EndVibration()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xE6F094", Offset = "0xE6F094", VA = "0xE6F094")]
	public VibrationManager()
	{
	}
}
[Token(Token = "0x20000DA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C3EB8", Offset = "0x7C3EB8")]
public class Bezier : MonoBehaviour
{
	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] controlPoints;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int curveCount;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int layerOrder;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int SEGMENT_COUNT;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x95EF80", Offset = "0x95EF80", VA = "0x95EF80")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x95F03C", Offset = "0x95F03C", VA = "0x95F03C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x95F040", Offset = "0x95F040", VA = "0x95F040")]
	private void DrawCurve()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x95F258", Offset = "0x95F258", VA = "0x95F258")]
	private Vector3 CalculateCubicBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x95F420", Offset = "0x95F420", VA = "0x95F420")]
	public Bezier()
	{
	}
}
[Token(Token = "0x20000DB")]
public class ColliderBehaviour : MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DrawRays;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isRedSignalOn;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_isDesideTurn;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] m_bazierPath;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ControlPoints[] m_points;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int curveCount;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int SEGMENT_COUNT;

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x96E7D0", Offset = "0x96E7D0", VA = "0x96E7D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x96E7DC", Offset = "0x96E7DC", VA = "0x96E7DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x96E7E0", Offset = "0x96E7E0", VA = "0x96E7E0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x96EDCC", Offset = "0x96EDCC", VA = "0x96EDCC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x96EF70", Offset = "0x96EF70", VA = "0x96EF70")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x96E97C", Offset = "0x96E97C", VA = "0x96E97C")]
	private Vector3[] BazierPath(Transform[] controlPoints)
	{
		return null;
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x96F390", Offset = "0x96F390", VA = "0x96F390")]
	private void DrawCurve(Transform[] controlPoints)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x96F29C", Offset = "0x96F29C", VA = "0x96F29C")]
	private Vector3 CalculateLinearBezierPoint(float t, Vector3 p0, Vector3 p1)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x96F13C", Offset = "0x96F13C", VA = "0x96F13C")]
	private Vector3 CalculateQuadraticBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x96EF74", Offset = "0x96EF74", VA = "0x96EF74")]
	private Vector3 CalculateCubicBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x96F520", Offset = "0x96F520", VA = "0x96F520")]
	public ColliderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DC")]
public class ControlPoints
{
	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform[] m_points;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x96F530", Offset = "0x96F530", VA = "0x96F530")]
	public ControlPoints()
	{
	}
}
[Token(Token = "0x20000DD")]
public class VehicleAIControl : MonoBehaviour
{
	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_frontSensorLength;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isCarstop;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] m_targetPos;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_posCount;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float oldspeed;

	[Token(Token = "0x1700002E")]
	public int PosCount
	{
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xE6E654", Offset = "0xE6E654", VA = "0xE6E654")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xE6E65C", Offset = "0xE6E65C", VA = "0xE6E65C")]
		set
		{
		}
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xE6E664", Offset = "0xE6E664", VA = "0xE6E664")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xE6E670", Offset = "0xE6E670", VA = "0xE6E670")]
	public void OnStopCar()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xE6E680", Offset = "0xE6E680", VA = "0xE6E680")]
	public void OnStartCar()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xE6E690", Offset = "0xE6E690", VA = "0xE6E690")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xE6E98C", Offset = "0xE6E98C", VA = "0xE6E98C")]
	private void FrontSensors()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xE6EBC0", Offset = "0xE6EBC0", VA = "0xE6EBC0")]
	public VehicleAIControl()
	{
	}
}
[Token(Token = "0x20000DE")]
public class CarGameOverScript : MonoBehaviour
{
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C56D8", Offset = "0x7C56D8")]
	private sealed class <FadeInOut>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup canvasgrp;

		[Token(Token = "0x1700014C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x966B24", Offset = "0x966B24", VA = "0x966B24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x966B8C", Offset = "0x966B8C", VA = "0x966B8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x961DBC", Offset = "0x961DBC", VA = "0x961DBC")]
		[DebuggerHidden]
		public <FadeInOut>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x9668D8", Offset = "0x9668D8", VA = "0x9668D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x9668DC", Offset = "0x9668DC", VA = "0x9668DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x966B2C", Offset = "0x966B2C", VA = "0x966B2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C56E8", Offset = "0x7C56E8")]
	private sealed class <GameWinStar>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CarGameOverScript <>4__this;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int stars;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0x966D84", Offset = "0x966D84", VA = "0x966D84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600145C")]
			[Address(RVA = "0x966DEC", Offset = "0x966DEC", VA = "0x966DEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x962788", Offset = "0x962788", VA = "0x962788")]
		[DebuggerHidden]
		public <GameWinStar>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x966B94", Offset = "0x966B94", VA = "0x966B94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x966B98", Offset = "0x966B98", VA = "0x966B98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x966D8C", Offset = "0x966D8C", VA = "0x966D8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C56F8", Offset = "0x7C56F8")]
	private sealed class <MissionCountDown>d__95 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int delay;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CarGameOverScript <>4__this;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Text <name>5__2;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001460")]
			[Address(RVA = "0x967530", Offset = "0x967530", VA = "0x967530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0x967598", Offset = "0x967598", VA = "0x967598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x966318", Offset = "0x966318", VA = "0x966318")]
		[DebuggerHidden]
		public <MissionCountDown>d__95(int <>1__state)
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x966DF4", Offset = "0x966DF4", VA = "0x966DF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x966DF8", Offset = "0x966DF8", VA = "0x966DF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x967538", Offset = "0x967538", VA = "0x967538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inCity;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool inMission;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Cars m_car;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int lives;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int totalStars;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float secondsElapsed;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoxCollider m_powerButton;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool dontHaveGears;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_parkingcanvas;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject m_pauseScreen;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject m_cityPauseScreen;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject m_missionPauseScreen;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject m_cityTakeMissionScreen;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject m_cityMissionNotEligible;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject m_cityMissionfailedScreen;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject m_cityMissionSuccessScreen;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject m_cityWelcomeScreen;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject m_cityCountDownScreen;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject m_policeCharacter;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject m_businessCharacter;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject m_timerScreen;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject m_collectableScreen;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject m_gameOverScreen;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Text m_loseDifficulty;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject m_winScreen;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject m_winStarObject;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject m_levelCountScreen;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject m_handSteerScreen;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject m_joystickSteerScreen;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject m_seasonCompletionScreen;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public GameObject m_liftHandbrakeScreen;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject m_OvrCamera;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject m_pointerVisual;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject[] m_winStars;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private VehicleStandardInput m_inputScript;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private VehicleController m_vehicleController;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private CityLevelHandler m_missionHandler;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private LevelManager m_levelManager;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameSaver m_gameSaver;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private LevelHandler m_levelHandler;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SceneTransition m_sceneTransition;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public CarPowerButtonScript m_powerScript;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float m_hitTimer;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool isCarParked;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private MissionName m_mission;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public bool inMissionStartBox;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float missionTime;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool missionStarted;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float collectableCount;

	[Token(Token = "0x1700002F")]
	public bool IsCarParked
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x960B18", Offset = "0x960B18", VA = "0x960B18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x960B20", Offset = "0x960B20", VA = "0x960B20")]
		set
		{
		}
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x960B2C", Offset = "0x960B2C", VA = "0x960B2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x961418", Offset = "0x961418", VA = "0x961418")]
	private void ResetScreen()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x961540", Offset = "0x961540", VA = "0x961540")]
	public void StartLevel()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x961654", Offset = "0x961654", VA = "0x961654")]
	public void CarStart()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x96197C", Offset = "0x96197C", VA = "0x96197C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x96190C", Offset = "0x96190C", VA = "0x96190C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFC50", Offset = "0x7CFC50")]
	private IEnumerator FadeInOut(CanvasGroup canvasgrp)
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x961DE8", Offset = "0x961DE8", VA = "0x961DE8")]
	public void LevelCompletedAnalytics(int star)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x9620B8", Offset = "0x9620B8", VA = "0x9620B8")]
	public void LevelFailedAnalytics()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x962350", Offset = "0x962350", VA = "0x962350")]
	public void GameWin()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x962708", Offset = "0x962708", VA = "0x962708")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFCB4", Offset = "0x7CFCB4")]
	private IEnumerator GameWinStar(int stars)
	{
		return null;
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x962648", Offset = "0x962648", VA = "0x962648")]
	private void StopVehicleMovement()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x9627B4", Offset = "0x9627B4", VA = "0x9627B4")]
	private void StartVehicleMovement()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x96283C", Offset = "0x96283C", VA = "0x96283C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x961B08", Offset = "0x961B08", VA = "0x961B08")]
	public void PauseButton()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x962CD8", Offset = "0x962CD8", VA = "0x962CD8")]
	public void ResumeButton()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x962FA4", Offset = "0x962FA4", VA = "0x962FA4")]
	public void HomeButton()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x963018", Offset = "0x963018", VA = "0x963018")]
	public void RetryButton()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x9630B4", Offset = "0x9630B4", VA = "0x9630B4")]
	public void Retry()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x963158", Offset = "0x963158", VA = "0x963158")]
	public void NextButton()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x9632D8", Offset = "0x9632D8", VA = "0x9632D8")]
	public void NextSeason()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x963360", Offset = "0x963360", VA = "0x963360")]
	public void Next()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x961CF0", Offset = "0x961CF0", VA = "0x961CF0")]
	public void ControlButton()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x961C40", Offset = "0x961C40", VA = "0x961C40")]
	public void RecenterButton()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x963460", Offset = "0x963460", VA = "0x963460")]
	public void ExitButton()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x962E28", Offset = "0x962E28", VA = "0x962E28")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x963468", Offset = "0x963468", VA = "0x963468")]
	public void TakeMission(bool eligible, MissionName mission, string car)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x963E30", Offset = "0x963E30", VA = "0x963E30")]
	public void StartMission(bool transition = false)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x964364", Offset = "0x964364", VA = "0x964364")]
	private void MissionStartTransition()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x9644A8", Offset = "0x9644A8", VA = "0x9644A8")]
	public void ReloadScene()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x964504", Offset = "0x964504", VA = "0x964504")]
	public void RetryMission()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x9646D4", Offset = "0x9646D4", VA = "0x9646D4")]
	public void RetryMissioncall()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x964850", Offset = "0x964850", VA = "0x964850")]
	public void MissionAbort()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x964AF0", Offset = "0x964AF0", VA = "0x964AF0")]
	private void MissionAbortCall()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x964FAC", Offset = "0x964FAC", VA = "0x964FAC")]
	private void MissionAbortCallTransition()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x9651EC", Offset = "0x9651EC", VA = "0x9651EC")]
	public void NotTakeMission()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x965228", Offset = "0x965228", VA = "0x965228")]
	public void MissionCompletedScreen()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x965508", Offset = "0x965508", VA = "0x965508")]
	public void MissionAnalytics(string str)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x9655D0", Offset = "0x9655D0", VA = "0x9655D0")]
	public void MissioncompletedOk()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x9658F0", Offset = "0x9658F0", VA = "0x9658F0")]
	private void MissionCompletedTransition()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x9657D4", Offset = "0x9657D4", VA = "0x9657D4")]
	private void MissionCompleted()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x965B84", Offset = "0x965B84", VA = "0x965B84")]
	public void MissionFailed()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x965CF8", Offset = "0x965CF8", VA = "0x965CF8")]
	public void MissionFailedTimer()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x965E20", Offset = "0x965E20", VA = "0x965E20")]
	private void MissionfailedNoTransition()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x965F58", Offset = "0x965F58", VA = "0x965F58")]
	private void MissionfailedCall()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x964058", Offset = "0x964058", VA = "0x964058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFD18", Offset = "0x7CFD18")]
	public IEnumerator MissionCountDown(int delay)
	{
		return null;
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x966344", Offset = "0x966344", VA = "0x966344")]
	public void addCollectable()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x966510", Offset = "0x966510", VA = "0x966510")]
	public void StartMissionAudio()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x964BD4", Offset = "0x964BD4", VA = "0x964BD4")]
	public void StopCityLevelMusic()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x966728", Offset = "0x966728", VA = "0x966728")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x9668C0", Offset = "0x9668C0", VA = "0x9668C0")]
	public CarGameOverScript()
	{
	}
}
[Token(Token = "0x20000DF")]
public enum Cars
{
	[Token(Token = "0x40005E3")]
	HATCHBACK,
	[Token(Token = "0x40005E4")]
	SEDAN,
	[Token(Token = "0x40005E5")]
	SUV,
	[Token(Token = "0x40005E6")]
	F1CAR,
	[Token(Token = "0x40005E7")]
	TRUCK
}
[Token(Token = "0x20000E0")]
public class CityLevelHandler : MonoBehaviour
{
	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public levels[] m_levels;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] m_taxiMissions;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] checkpointAudios;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] collectAudios;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] parkingAudios;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] taxiAudios;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int levelsIndex;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int taxiIndex;

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x96E3F8", Offset = "0x96E3F8", VA = "0x96E3F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x9640D8", Offset = "0x9640D8", VA = "0x9640D8")]
	public void StartLevel(int level)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x964D48", Offset = "0x964D48", VA = "0x964D48")]
	public void Endlevel()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x96548C", Offset = "0x96548C", VA = "0x96548C")]
	public void TaxiMissionCompleted()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x96E594", Offset = "0x96E594", VA = "0x96E594")]
	public CityLevelHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E1")]
public class levels
{
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MissionType m_missionType;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject levelObjects;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] disableObjects;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] EnableObjects;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform levelStartPos;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform levelEndPos;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool missionStartTransition;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool missionEndTransition;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool isEndAtStartPos;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string levelName;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string levelInfo;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string levelSmallInfo;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isTimer;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float timerDuration;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool iscollectable;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float collectableItems;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] collectableItem;

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xE6FB8C", Offset = "0xE6FB8C", VA = "0xE6FB8C")]
	public levels()
	{
	}
}
[Token(Token = "0x20000E2")]
public enum MissionName
{
	[Token(Token = "0x4000602")]
	none,
	[Token(Token = "0x4000603")]
	constructionSite,
	[Token(Token = "0x4000604")]
	shipMission,
	[Token(Token = "0x4000605")]
	policeBadges,
	[Token(Token = "0x4000606")]
	onBuilding1,
	[Token(Token = "0x4000607")]
	onBuilding2,
	[Token(Token = "0x4000608")]
	linkinMission,
	[Token(Token = "0x4000609")]
	BankParking,
	[Token(Token = "0x400060A")]
	MuseumParking,
	[Token(Token = "0x400060B")]
	libraryParking,
	[Token(Token = "0x400060C")]
	OnBuildingCollect,
	[Token(Token = "0x400060D")]
	TaxiMission1,
	[Token(Token = "0x400060E")]
	TaxiMission2,
	[Token(Token = "0x400060F")]
	TaxiMission3,
	[Token(Token = "0x4000610")]
	TaxiMission4,
	[Token(Token = "0x4000611")]
	TaxiMission5,
	[Token(Token = "0x4000612")]
	TaxiMission6,
	[Token(Token = "0x4000613")]
	AlleyCheckPointRace,
	[Token(Token = "0x4000614")]
	ShipCheckpointRace
}
[Token(Token = "0x20000E3")]
public enum MissionType
{
	[Token(Token = "0x4000616")]
	Collectable,
	[Token(Token = "0x4000617")]
	CheckPoint,
	[Token(Token = "0x4000618")]
	Parking,
	[Token(Token = "0x4000619")]
	Taxi
}
[Token(Token = "0x20000E4")]
public class CollectableMission : MonoBehaviour
{
	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_noSound;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CollectNext;

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x96E5A4", Offset = "0x96E5A4", VA = "0x96E5A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x96E63C", Offset = "0x96E63C", VA = "0x96E63C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x96E7C8", Offset = "0x96E7C8", VA = "0x96E7C8")]
	public CollectableMission()
	{
	}
}
[Token(Token = "0x20000E5")]
public class MissionFailedScript : MonoBehaviour
{
	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Reload;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x947530", Offset = "0x947530", VA = "0x947530")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x947678", Offset = "0x947678", VA = "0x947678")]
	public MissionFailedScript()
	{
	}
}
[Token(Token = "0x20000E6")]
public class MissionStartScript : MonoBehaviour
{
	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool allCarMission;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Cars m_carRequired;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MissionName mission;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MissionType missionType;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject parkingBox;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isCarInside;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x947680", Offset = "0x947680", VA = "0x947680")]
	public void ResetMission()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x947774", Offset = "0x947774", VA = "0x947774")]
	public void FalseMission()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x94786C", Offset = "0x94786C", VA = "0x94786C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x948030", Offset = "0x948030", VA = "0x948030")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x948174", Offset = "0x948174", VA = "0x948174")]
	public MissionStartScript()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E7")]
public class GameData
{
	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool[] season1Levels;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool[] season2Levels;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool[] season3Levels;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool[] season4Levels;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] seasonArray;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] season1LevelStars;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] season2LevelStars;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] season3LevelStars;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] season4LevelStars;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] CarsUnLocked;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int totalGameStars;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int totalGameCoins;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isGameStartedForTheFirstTime;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x9AF98C", Offset = "0x9AF98C", VA = "0x9AF98C")]
	public void SetSeason1Levels(bool[] season1Levels)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x9AF994", Offset = "0x9AF994", VA = "0x9AF994")]
	public bool[] GetSeason1Levels()
	{
		return null;
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x9AF99C", Offset = "0x9AF99C", VA = "0x9AF99C")]
	public void SetSeason2Levels(bool[] season2Levels)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x9AF9A4", Offset = "0x9AF9A4", VA = "0x9AF9A4")]
	public bool[] GetSeason2Levels()
	{
		return null;
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x9AF9AC", Offset = "0x9AF9AC", VA = "0x9AF9AC")]
	public void SetSeason3Levels(bool[] season3Levels)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x9AF9B4", Offset = "0x9AF9B4", VA = "0x9AF9B4")]
	public bool[] GetSeason3Levels()
	{
		return null;
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x9AF9BC", Offset = "0x9AF9BC", VA = "0x9AF9BC")]
	public void SetSeason4Levels(bool[] season4Levels)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x9AF9C4", Offset = "0x9AF9C4", VA = "0x9AF9C4")]
	public bool[] GetSeason4Levels()
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x9AF9CC", Offset = "0x9AF9CC", VA = "0x9AF9CC")]
	public void SetSeason1LevelStars(int[] season1Stars)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x9AF9D4", Offset = "0x9AF9D4", VA = "0x9AF9D4")]
	public int[] GetSeason1LevelStars()
	{
		return null;
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x9AF9DC", Offset = "0x9AF9DC", VA = "0x9AF9DC")]
	public void SetSeason2LevelStars(int[] season2Stars)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x9AF9E4", Offset = "0x9AF9E4", VA = "0x9AF9E4")]
	public int[] GetSeason2LevelStars()
	{
		return null;
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x9AF9EC", Offset = "0x9AF9EC", VA = "0x9AF9EC")]
	public void SetSeason3LevelStars(int[] season3Stars)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x9AF9F4", Offset = "0x9AF9F4", VA = "0x9AF9F4")]
	public int[] GetSeason3LevelStars()
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x9AF9FC", Offset = "0x9AF9FC", VA = "0x9AF9FC")]
	public void SetSeason4LevelStars(int[] season4Stars)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x9AFA04", Offset = "0x9AFA04", VA = "0x9AFA04")]
	public int[] GetSeason4LevelStars()
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x9AFA0C", Offset = "0x9AFA0C", VA = "0x9AFA0C")]
	public void SetSeasonArray(bool[] seasonArray)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x9AFA14", Offset = "0x9AFA14", VA = "0x9AFA14")]
	public bool[] GetSeasonArray()
	{
		return null;
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x9AFA1C", Offset = "0x9AFA1C", VA = "0x9AFA1C")]
	public void SetTotalGameStars(int totalGameStars)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x9AFA24", Offset = "0x9AFA24", VA = "0x9AFA24")]
	public int GetTotalGameStars()
	{
		return default(int);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x9AFA2C", Offset = "0x9AFA2C", VA = "0x9AFA2C")]
	public void SetTotalGameCoins(int totalGameCoins)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x9AFA34", Offset = "0x9AFA34", VA = "0x9AFA34")]
	public int GetTotalGameCoins()
	{
		return default(int);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x9AFA3C", Offset = "0x9AFA3C", VA = "0x9AFA3C")]
	public void SetIsGameStartedForTheFirstTime(bool isGameStartedForTheFirstTime)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x9AFA48", Offset = "0x9AFA48", VA = "0x9AFA48")]
	public bool GetisGameStartedForTheFirstTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x9AFA50", Offset = "0x9AFA50", VA = "0x9AFA50")]
	public void SetCarsUnlocked(bool[] carsUnlocked)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x9AFA58", Offset = "0x9AFA58", VA = "0x9AFA58")]
	public bool[] GetCarsUnlocked()
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x9AFA60", Offset = "0x9AFA60", VA = "0x9AFA60")]
	public GameData()
	{
	}
}
[Token(Token = "0x20000E8")]
public class GameSaver : MonoBehaviour
{
	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameSaver m_instance;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameData gameData;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool[] season1Levels;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool[] season2Levels;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool[] season3Levels;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool[] season4Levels;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool[] seasonArray;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public int[] season1LevelStars;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public int[] season2LevelStars;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public int[] season3LevelStars;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public int[] season4LevelStars;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public bool[] carsUnlocked;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int totalGameStars;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int totalgameCoins;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[HideInInspector]
	public readonly int starsNeededForSeason2;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	[HideInInspector]
	public readonly int starsNeededForSeason3;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[HideInInspector]
	public readonly int starsNeededForSeason4;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isGameStartedForTheFirstTime;

	[Token(Token = "0x17000030")]
	public int TotalGameStars
	{
		[Token(Token = "0x6000518")]
		[Address(RVA = "0x9AFA68", Offset = "0x9AFA68", VA = "0x9AFA68")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000031")]
	public int TotalgameCoins
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0x9AFA70", Offset = "0x9AFA70", VA = "0x9AFA70")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600051A")]
		[Address(RVA = "0x9AFA78", Offset = "0x9AFA78", VA = "0x9AFA78")]
		set
		{
		}
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x9AFA80", Offset = "0x9AFA80", VA = "0x9AFA80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x9AFB10", Offset = "0x9AFB10", VA = "0x9AFB10")]
	private void Singleton()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x9AFC24", Offset = "0x9AFC24", VA = "0x9AFC24")]
	private void InitializeGameData()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x9B0750", Offset = "0x9B0750", VA = "0x9B0750")]
	public void SaveGameData()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x9B04DC", Offset = "0x9B04DC", VA = "0x9B04DC")]
	public void LoadGameData()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x9B0C38", Offset = "0x9B0C38", VA = "0x9B0C38")]
	public void BuyCars(int carIndex, int coin)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x9B0C98", Offset = "0x9B0C98", VA = "0x9B0C98")]
	public void Save(int level, string selectedSeason, int stars, int rewardCoins)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x9B0A48", Offset = "0x9B0A48", VA = "0x9B0A48")]
	public int StarsInlevel(string i)
	{
		return default(int);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x9B121C", Offset = "0x9B121C", VA = "0x9B121C")]
	public GameSaver()
	{
	}
}
[Token(Token = "0x20000E9")]
public class IndexFingerRule : MonoBehaviour
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LeftFingerCollider;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RightFingerCollider;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x9B37DC", Offset = "0x9B37DC", VA = "0x9B37DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x9B3820", Offset = "0x9B3820", VA = "0x9B3820")]
	private void Update()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x9B3974", Offset = "0x9B3974", VA = "0x9B3974")]
	public IndexFingerRule()
	{
	}
}
[Token(Token = "0x20000EA")]
public class LevelHandler : MonoBehaviour
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelHandler m_instance;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool cityMode;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cityPos;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject needHatchbackCar;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LevelManager m_levelManager;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameSaver m_gameSaver;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_currentLevel;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_carName;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject m_LevelParent;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject[] m_gameLevels;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject m_car;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameCars[] m_gameCars;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3[] m_NormalCarParkingBoxScale;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3[] m_sedanCarParkingBoxScale;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3[] m_SUVParkingBoxScale;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3[] m_f1CarParkingBoxScale;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3[] m_TruckParkingBoxScale;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float f1CarHeight;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float normalCarHeight;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float sedanCarHeight;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float suvCarHeight;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x9B5C88", Offset = "0x9B5C88", VA = "0x9B5C88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x9B5D3C", Offset = "0x9B5D3C", VA = "0x9B5D3C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x9B5EEC", Offset = "0x9B5EEC", VA = "0x9B5EEC")]
	public void StartGame()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x9B6508", Offset = "0x9B6508", VA = "0x9B6508")]
	public void NextLevel()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x9B6530", Offset = "0x9B6530", VA = "0x9B6530")]
	public LevelHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EB")]
public class GameCars
{
	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject carPrefab;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x9AF984", Offset = "0x9AF984", VA = "0x9AF984")]
	public GameCars()
	{
	}
}
[Token(Token = "0x20000EC")]
public class LevelLocker : MonoBehaviour
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameSaver m_gameSaver;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StarLocker m_starLocker;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public GameObject[] m_levelStarHolders;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] m_levelPadlocks;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text m_season1StarsNeeded;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text m_season2StarsNeeded;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text m_season3StarsNeeded;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text m_season2Stars1;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text m_season3Stars1;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text m_season2Stars2;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text m_season3Stars2;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text m_lvlSeasonText;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool[] season1Levels;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool[] season2Levels;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool[] season3Levels;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool[] season4Levels;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool[] seasonArray;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int totalStars;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int totalCoins;

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x9B6594", Offset = "0x9B6594", VA = "0x9B6594")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x9B6638", Offset = "0x9B6638", VA = "0x9B6638")]
	private void Start()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x9B69BC", Offset = "0x9B69BC", VA = "0x9B69BC")]
	public void CheckWhichLevelsAreUnlocked(string selectSeason)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x9B66E0", Offset = "0x9B66E0", VA = "0x9B66E0")]
	public void CheckWhichSeasonAreUnlocked()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x9B6598", Offset = "0x9B6598", VA = "0x9B6598")]
	private void DeactivatePadlocksAndStarsHolder()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x9B6678", Offset = "0x9B6678", VA = "0x9B6678")]
	private void GetLevels()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x9B66B8", Offset = "0x9B66B8", VA = "0x9B66B8")]
	private void GetTotalCoinstars()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x9B6E74", Offset = "0x9B6E74", VA = "0x9B6E74")]
	public bool[] GetPuzzleLevels(string selectSeason)
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x9B6FAC", Offset = "0x9B6FAC", VA = "0x9B6FAC")]
	public LevelLocker()
	{
	}
}
[Token(Token = "0x20000ED")]
public class LevelManager : MonoBehaviour
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameState m_gameState;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelManager m_instance;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_seasonName;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_level;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_carName;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x93F660", Offset = "0x93F660", VA = "0x93F660")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x93F664", Offset = "0x93F664", VA = "0x93F664")]
	private void Singleton()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x93F778", Offset = "0x93F778", VA = "0x93F778")]
	public void LoadLevel()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x93F784", Offset = "0x93F784", VA = "0x93F784")]
	public LevelManager()
	{
	}
}
[Token(Token = "0x20000EE")]
public class StarLocker : MonoBehaviour
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameSaver m_gameSaver;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LevelLocker m_levelLocker;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] m_level1Stars;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] m_level2Stars;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] m_level3Stars;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] m_level4Stars;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject[] m_level5Stars;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject[] m_level6Stars;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject[] m_level7Stars;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject[] m_level8Stars;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject[] m_level9Stars;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] m_level10Stars;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject[] m_level11Stars;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject[] m_level12Stars;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject[] m_level13Stars;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject[] m_level14Stars;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] m_level15Stars;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int[] season1LevelStars;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int[] season2LevelStars;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int[] season3LevelStars;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int[] season4LevelStars;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xE60B80", Offset = "0xE60B80", VA = "0xE60B80")]
	private void Awake()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xE60B84", Offset = "0xE60B84", VA = "0xE60B84")]
	private void Start()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xE60B88", Offset = "0xE60B88", VA = "0xE60B88")]
	public void GetStarReferance()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xE61434", Offset = "0xE61434", VA = "0xE61434")]
	public int StarsInlevel(int i)
	{
		return default(int);
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xE615E8", Offset = "0xE615E8", VA = "0xE615E8")]
	public void ActivateStars(int level, string selectedSeason)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xE61788", Offset = "0xE61788", VA = "0xE61788")]
	public void ActivateLevelStars(int level, int looper)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xE61C14", Offset = "0xE61C14", VA = "0xE61C14")]
	public void DeactivateStars()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xE615B0", Offset = "0xE615B0", VA = "0xE615B0")]
	public void GetStars()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xE61EBC", Offset = "0xE61EBC", VA = "0xE61EBC")]
	public StarLocker()
	{
	}
}
[Token(Token = "0x20000EF")]
public class CarSelectionScript : MonoBehaviour
{
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5708", Offset = "0x7C5708")]
	private sealed class <DisplayCars>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CarSelectionScript <>4__this;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x96C1E0", Offset = "0x96C1E0", VA = "0x96C1E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x96C248", Offset = "0x96C248", VA = "0x96C248", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x96AC38", Offset = "0x96AC38", VA = "0x96AC38")]
		[DebuggerHidden]
		public <DisplayCars>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x96BDE4", Offset = "0x96BDE4", VA = "0x96BDE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x96BDE8", Offset = "0x96BDE8", VA = "0x96BDE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x96C1E8", Offset = "0x96C1E8", VA = "0x96C1E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5718", Offset = "0x7C5718")]
	private sealed class <RotateCar>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool forward;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CarSelectionScript <>4__this;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <angle>5__2;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0x96C7CC", Offset = "0x96C7CC", VA = "0x96C7CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600146E")]
			[Address(RVA = "0x96C834", Offset = "0x96C834", VA = "0x96C834", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x96BD90", Offset = "0x96BD90", VA = "0x96BD90")]
		[DebuggerHidden]
		public <RotateCar>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x96C250", Offset = "0x96C250", VA = "0x96C250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x96C254", Offset = "0x96C254", VA = "0x96C254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x96C7D4", Offset = "0x96C7D4", VA = "0x96C7D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_carsScreen;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_displayCar;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_carSpotLight;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_nextButton;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_backButton;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_playButton;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_lockButton;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_cityNotAvailableButton;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_cityPlayButton;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_cityLockButton;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CarInfo[] m_menucars;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int carIndex;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_nextCarNotification;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_exoticCarNotification;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m_carUnlockConfetti;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro m_exoticCarText;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro m_congoText;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject m_levelStarGM;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private TextMeshPro m_levelStars;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject m_levelCompletedStarGM;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private TextMeshPro m_levelCompletedStars;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private TextMeshPro m_carNameText;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private TextMeshPro m_starsNeededText;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private TextMeshPro m_unlockCarText;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_starNeededSprite;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private GameObject m_seasonCompletionNextText;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject m_seasonCompletionScreen;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private TextMeshPro m_seasonCompletionstarNeededText;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject m_nextCarText;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject m_levelstarNeeded;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private TextMeshPro m_levelstarNeededText;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject m_carNamePlate;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private TextMeshPro m_carnameText;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameSaver m_gameSaver;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int displayCars;

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x9698D0", Offset = "0x9698D0", VA = "0x9698D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x969B40", Offset = "0x969B40", VA = "0x969B40")]
	public void DisplayCarsButton()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x96ABC8", Offset = "0x96ABC8", VA = "0x96ABC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFD7C", Offset = "0x7CFD7C")]
	public IEnumerator DisplayCars()
	{
		return null;
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x96A380", Offset = "0x96A380", VA = "0x96A380")]
	public void UnlockLevelHandler()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x96AC64", Offset = "0x96AC64", VA = "0x96AC64")]
	private void Disablecars()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x96AC68", Offset = "0x96AC68", VA = "0x96AC68")]
	public void NextCarButton()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x96B548", Offset = "0x96B548", VA = "0x96B548")]
	public void PreviousCarButton()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x96B4C4", Offset = "0x96B4C4", VA = "0x96B4C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFDE0", Offset = "0x7CFDE0")]
	public IEnumerator RotateCar(bool forward)
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x96BDBC", Offset = "0x96BDBC", VA = "0x96BDBC")]
	public void ConfettiDisable()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x96BDDC", Offset = "0x96BDDC", VA = "0x96BDDC")]
	public CarSelectionScript()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F0")]
public class CarInfo
{
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject CarPrefab;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string info;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int starNeeded;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string unlockText;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int angle;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string seasonName;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool exoticCar;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool commingSoon;

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x9675A0", Offset = "0x9675A0", VA = "0x9675A0")]
	public CarInfo()
	{
	}
}
[Token(Token = "0x20000F1")]
public class GetMaterials : MonoBehaviour
{
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5728", Offset = "0x7C5728")]
	private sealed class <StartTutorial>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetMaterials <>4__this;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001472")]
			[Address(RVA = "0x9B28C4", Offset = "0x9B28C4", VA = "0x9B28C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0x9B292C", Offset = "0x9B292C", VA = "0x9B292C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x9B1D48", Offset = "0x9B1D48", VA = "0x9B1D48")]
		[DebuggerHidden]
		public <StartTutorial>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x9B27AC", Offset = "0x9B27AC", VA = "0x9B27AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x9B27B0", Offset = "0x9B27B0", VA = "0x9B27B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x9B28CC", Offset = "0x9B28CC", VA = "0x9B28CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5738", Offset = "0x7C5738")]
	private sealed class <BlinkColor>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetMaterials <>4__this;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material mat;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <progress>5__2;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <increment>5__3;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001478")]
			[Address(RVA = "0x9B2464", Offset = "0x9B2464", VA = "0x9B2464", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600147A")]
			[Address(RVA = "0x9B24CC", Offset = "0x9B24CC", VA = "0x9B24CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x9B21D8", Offset = "0x9B21D8", VA = "0x9B21D8")]
		[DebuggerHidden]
		public <BlinkColor>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x9B2244", Offset = "0x9B2244", VA = "0x9B2244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x9B2248", Offset = "0x9B2248", VA = "0x9B2248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x9B246C", Offset = "0x9B246C", VA = "0x9B246C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5748", Offset = "0x7C5748")]
	private sealed class <BlinkColor>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetMaterials <>4__this;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material mat1;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material mat2;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <progress>5__2;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <increment>5__3;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__4;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0x9B273C", Offset = "0x9B273C", VA = "0x9B273C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x9B27A4", Offset = "0x9B27A4", VA = "0x9B27A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x9B2204", Offset = "0x9B2204", VA = "0x9B2204")]
		[DebuggerHidden]
		public <BlinkColor>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x9B24D4", Offset = "0x9B24D4", VA = "0x9B24D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x9B24D8", Offset = "0x9B24D8", VA = "0x9B24D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x9B2744", Offset = "0x9B2744", VA = "0x9B2744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_controllerAnim;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_backButton;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material m_homeButton;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material m_touchButton;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material m_triggerButton;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_steeringScreen;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_driveScreen;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_breakScreen;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_reverseScreen;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_backScreen;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool canDrive;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool canBreak;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool canReverse;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color m_defaultColor;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color m_heilightedColor;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_duration;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float smoothness;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color currentColor;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private VehicleStandardInputTutorial m_tutorialScript;

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x9B1910", Offset = "0x9B1910", VA = "0x9B1910")]
	private void Start()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x9B1A2C", Offset = "0x9B1A2C", VA = "0x9B1A2C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x9B1B0C", Offset = "0x9B1B0C", VA = "0x9B1B0C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x9B1CD8", Offset = "0x9B1CD8", VA = "0x9B1CD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFE44", Offset = "0x7CFE44")]
	private IEnumerator StartTutorial()
	{
		return null;
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x9B1D74", Offset = "0x9B1D74", VA = "0x9B1D74")]
	public void Steering()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x9B1DA8", Offset = "0x9B1DA8", VA = "0x9B1DA8")]
	public void ReverseButton()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x9B1EE4", Offset = "0x9B1EE4", VA = "0x9B1EE4")]
	public void BackButton()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x9B2000", Offset = "0x9B2000", VA = "0x9B2000")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x9B204C", Offset = "0x9B204C", VA = "0x9B204C")]
	public void BreakButton()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x9B2104", Offset = "0x9B2104", VA = "0x9B2104")]
	public void DriveButton()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x9B2178", Offset = "0x9B2178", VA = "0x9B2178")]
	public void SteerButton()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x9B1F84", Offset = "0x9B1F84", VA = "0x9B1F84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFEA8", Offset = "0x7CFEA8")]
	private IEnumerator BlinkColor(Material mat)
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x9B1E60", Offset = "0x9B1E60", VA = "0x9B1E60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFF0C", Offset = "0x7CFF0C")]
	private IEnumerator BlinkColor(Material mat1, Material mat2)
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x9B2230", Offset = "0x9B2230", VA = "0x9B2230")]
	public GetMaterials()
	{
	}
}
[Token(Token = "0x20000F2")]
public enum GameState
{
	[Token(Token = "0x40006C8")]
	CityMode,
	[Token(Token = "0x40006C9")]
	ParkingMode
}
[Token(Token = "0x20000F3")]
public class MainMenuHandler : MonoBehaviour
{
	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameState m_gameState;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_confetti;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_releaseNote;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_firstDrivehandSelectionScreen;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_mainMenuScreen;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_parkCitySelectionScreen;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_carSelectionScreen;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_6DOFKeybindingScreen;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_joystickKeybindingScreen;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_levelSelection;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_settingScreen;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_exoticCarSeasonScreen;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_cityLockButton;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_cityUnlockButton;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SpriteRenderer m_leftDrive;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SpriteRenderer m_rightDrive;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SpriteRenderer m_control1;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SpriteRenderer m_control2;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color controlSelectionColor;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpriteRenderer m_easy;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SpriteRenderer m_normal;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SpriteRenderer m_difficult;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro m_easyInfo;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CarSelectionScript m_carSelection;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LevelLocker m_levelLocker;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LevelManager m_levelManager;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SceneTransition m_sceneTransition;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool[] m_level;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x945D20", Offset = "0x945D20", VA = "0x945D20")]
	private void ResetScreens()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x945E04", Offset = "0x945E04", VA = "0x945E04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x945E08", Offset = "0x945E08", VA = "0x945E08")]
	private void Start()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x946000", Offset = "0x946000", VA = "0x946000")]
	public void StartGame()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x946078", Offset = "0x946078", VA = "0x946078")]
	public void MenuStartButton()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x94614C", Offset = "0x94614C", VA = "0x94614C")]
	public void ParkingSelectionButton()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x94624C", Offset = "0x94624C", VA = "0x94624C")]
	public void CitySelectionButton()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x946378", Offset = "0x946378", VA = "0x946378")]
	public void CarCityPlayButton()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x9464D4", Offset = "0x9464D4", VA = "0x9464D4")]
	public void CarPlayButton()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x9466A8", Offset = "0x9466A8", VA = "0x9466A8")]
	public void SeasonSelectionButton(string seasonName)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x946748", Offset = "0x946748", VA = "0x946748")]
	public void LevelSelection(int i)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x946814", Offset = "0x946814", VA = "0x946814")]
	public void SettingButton()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x946BE0", Offset = "0x946BE0", VA = "0x946BE0")]
	public void DriveModeChange(int i)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x946D2C", Offset = "0x946D2C", VA = "0x946D2C")]
	public void KeyBindingScreen()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x946AE8", Offset = "0x946AE8", VA = "0x946AE8")]
	public void ControlSelectionButton(int i)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x9468E8", Offset = "0x9468E8", VA = "0x9468E8")]
	public void DifficultySelectionButton(int i)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x946DB4", Offset = "0x946DB4", VA = "0x946DB4")]
	public void ExitButton()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x946DD8", Offset = "0x946DD8", VA = "0x946DD8")]
	public MainMenuHandler()
	{
	}
}
[Token(Token = "0x20000F4")]
public class MirrorDetectionScript : MonoBehaviour
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_centercam;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_leftcam;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_rightcam;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool StartMirror;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int cam;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x946EDC", Offset = "0x946EDC", VA = "0x946EDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x946FAC", Offset = "0x946FAC", VA = "0x946FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x946FB4", Offset = "0x946FB4", VA = "0x946FB4")]
	private void StartMirrorFunc()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x947070", Offset = "0x947070", VA = "0x947070")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x9471F0", Offset = "0x9471F0", VA = "0x9471F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x94731C", Offset = "0x94731C", VA = "0x94731C")]
	private void OnTriggerStay1(Collider other)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x947528", Offset = "0x947528", VA = "0x947528")]
	public MirrorDetectionScript()
	{
	}
}
[Token(Token = "0x20000F5")]
public class ArrowUpDownScript : MonoBehaviour
{
	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_maxUp;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_maxDown;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float t;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isMovingUp;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_finalDownPosition;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_finalUpPosition;

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x95DB04", Offset = "0x95DB04", VA = "0x95DB04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x95DC38", Offset = "0x95DC38", VA = "0x95DC38")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x95DE30", Offset = "0x95DE30", VA = "0x95DE30")]
	public ArrowUpDownScript()
	{
	}
}
[Token(Token = "0x20000F6")]
public class CarParkingColliders : MonoBehaviour
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onEnter;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool inParkingBox;

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x964670", Offset = "0x964670", VA = "0x964670")]
	public void ResetAnimator()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x963458", Offset = "0x963458", VA = "0x963458")]
	public void ResetBox()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x96806C", Offset = "0x96806C", VA = "0x96806C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x9681E8", Offset = "0x9681E8", VA = "0x9681E8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x968348", Offset = "0x968348", VA = "0x968348")]
	public CarParkingColliders()
	{
	}
}
[Token(Token = "0x20000F7")]
public class CarPointEnterTragetBox : MonoBehaviour
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool inCity;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_Pointarrow;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CarGameOverScript m_carScreensHandler;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InstructionScript Instruction;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material m_LineMat;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material m_LineEnterMat;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int TotalPoints;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject[] m_lines;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public int PointsInsideCollider;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isEnter;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isCarParked;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x968350", Offset = "0x968350", VA = "0x968350")]
	private void Start()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x9683F8", Offset = "0x9683F8", VA = "0x9683F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x968438", Offset = "0x968438", VA = "0x968438")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x968530", Offset = "0x968530", VA = "0x968530")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x968714", Offset = "0x968714", VA = "0x968714")]
	private void Update()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x9688F0", Offset = "0x9688F0", VA = "0x9688F0")]
	private void MissionCompleted()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x968A44", Offset = "0x968A44", VA = "0x968A44")]
	public CarPointEnterTragetBox()
	{
	}
}
[Token(Token = "0x20000F8")]
public class ParkingProximitySensor : MonoBehaviour
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LayerMask layermask;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public float m_sensorNumber;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool RaycastStraight;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_rayLength;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float[] m_horizontalRayAngles;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float[] m_distanceRange;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_distance;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool isHit;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_region;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool drawrays;

	[Token(Token = "0x17000032")]
	public float ObjectRegion
	{
		[Token(Token = "0x6000584")]
		[Address(RVA = "0xF52858", Offset = "0xF52858", VA = "0xF52858")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xF52860", Offset = "0xF52860", VA = "0xF52860")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xF53260", Offset = "0xF53260", VA = "0xF53260")]
	private void Update()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xF52870", Offset = "0xF52870", VA = "0xF52870")]
	private void StraightRaycast()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xF52D84", Offset = "0xF52D84", VA = "0xF52D84")]
	private void AngledRaycast()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xF5329C", Offset = "0xF5329C", VA = "0xF5329C")]
	private void DetectRegion()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xF53540", Offset = "0xF53540", VA = "0xF53540")]
	public ParkingProximitySensor()
	{
	}
}
[Token(Token = "0x20000F9")]
public class ParkingSensorHandler : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DrawRays;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParkingProximitySensor[] m_sensors;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource[] m_sensorBeep;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image[] m_sensorSlits;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color m_slipDefaultcolor;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color m_slipHitcolor;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_region;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentRegion;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xF5355C", Offset = "0xF5355C", VA = "0xF5355C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xF53644", Offset = "0xF53644", VA = "0xF53644")]
	private void Start()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xF536B4", Offset = "0xF536B4", VA = "0xF536B4")]
	private void BeepSound()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xF536F0", Offset = "0xF536F0", VA = "0xF536F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xF53930", Offset = "0xF53930", VA = "0xF53930")]
	public ParkingSensorHandler()
	{
	}
}
[Token(Token = "0x20000FA")]
public class SoundManager : MonoBehaviour
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoundManager m_instance;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip m_winSound;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip m_howerClip;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip m_crashClip;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip m_cornerPointClip;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip m_hornSound;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip m_trophyCollectSound;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip m_checkPointSound;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioClip m_taxiPickupSound;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip m_countdownSound;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip m_startSound;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource m_audioSource;

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xE607F4", Offset = "0xE607F4", VA = "0xE607F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xE60854", Offset = "0xE60854", VA = "0xE60854")]
	private void Singleton()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xE60968", Offset = "0xE60968", VA = "0xE60968")]
	public void HowerButton()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xE60994", Offset = "0xE60994", VA = "0xE60994")]
	public void CrashSound()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xE609BC", Offset = "0xE609BC", VA = "0xE609BC")]
	public void CarCornerPointSound()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xE609E4", Offset = "0xE609E4", VA = "0xE609E4")]
	public void WinSound()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xE60A0C", Offset = "0xE60A0C", VA = "0xE60A0C")]
	public void CarHornSound()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xE60A9C", Offset = "0xE60A9C", VA = "0xE60A9C")]
	public void TrophyCollectSound()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xE60AC8", Offset = "0xE60AC8", VA = "0xE60AC8")]
	public void CheckPointSound()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xE60AF4", Offset = "0xE60AF4", VA = "0xE60AF4")]
	public void TaxiPickupSound()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xE60B20", Offset = "0xE60B20", VA = "0xE60B20")]
	public void RaceCountDownSound()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xE60B4C", Offset = "0xE60B4C", VA = "0xE60B4C")]
	public void StartSound()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xE60B78", Offset = "0xE60B78", VA = "0xE60B78")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x20000FB")]
public class TestScript : MonoBehaviour
{
	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameSaver m_gamesaver;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MainMenuHandler m_menuHandler;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject confetti;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip m_clip;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource m_source;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int i;

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xE671F0", Offset = "0xE671F0", VA = "0xE671F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xE672B0", Offset = "0xE672B0", VA = "0xE672B0")]
	public void CrackGame()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xE676A8", Offset = "0xE676A8", VA = "0xE676A8")]
	private void DestroyConfetti()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xE67354", Offset = "0xE67354", VA = "0xE67354")]
	public void Unlock()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xE676C8", Offset = "0xE676C8", VA = "0xE676C8")]
	public TestScript()
	{
	}
}
[Token(Token = "0x20000FC")]
public class AnimEventHandler : MonoBehaviour
{
	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text m_cointext;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameSaver m_gameSaver;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x95D778", Offset = "0x95D778", VA = "0x95D778")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x95D7EC", Offset = "0x95D7EC", VA = "0x95D7EC")]
	private void start()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x95D848", Offset = "0x95D848", VA = "0x95D848")]
	public void UpdateCoin()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x95D8A4", Offset = "0x95D8A4", VA = "0x95D8A4")]
	public AnimEventHandler()
	{
	}
}
[Token(Token = "0x20000FD")]
public class CameraBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera cam;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text info;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider slider;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x96061C", Offset = "0x96061C", VA = "0x96061C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x960674", Offset = "0x960674", VA = "0x960674")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x96073C", Offset = "0x96073C", VA = "0x96073C")]
	public void changeFOV(float f)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x960764", Offset = "0x960764", VA = "0x960764")]
	public CameraBehaviour()
	{
	}
}
[Token(Token = "0x20000FE")]
public class CameraSkipRender : MonoBehaviour
{
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool skipFirstFrame;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int skipFrames;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currSkippedFrame;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cam;

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x960A30", Offset = "0x960A30", VA = "0x960A30")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x960A98", Offset = "0x960A98", VA = "0x960A98")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x960AE8", Offset = "0x960AE8", VA = "0x960AE8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x960B08", Offset = "0x960B08", VA = "0x960B08")]
	public CameraSkipRender()
	{
	}
}
[Token(Token = "0x20000FF")]
public class CarTabletScript : MonoBehaviour
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer m_tablet;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas m_car;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CarParkingColliders[] m_carColliders;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_maxUp;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_maxDown;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float t;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool tabletUp;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool tabletDown;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool tabletMovingUp;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	private bool tabletMovingDown;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool invokeDown;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_finalDownPosition;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_finalUpPosition;

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x96C9B4", Offset = "0x96C9B4", VA = "0x96C9B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x96CB18", Offset = "0x96CB18", VA = "0x96CB18")]
	public void ResetTab()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x96CBA4", Offset = "0x96CBA4", VA = "0x96CBA4")]
	public void TabletUp()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x96CC28", Offset = "0x96CC28", VA = "0x96CC28")]
	public void TabletDown()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x96CD4C", Offset = "0x96CD4C", VA = "0x96CD4C")]
	public void TabletMoveDown()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x96CDDC", Offset = "0x96CDDC", VA = "0x96CDDC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x96D0A0", Offset = "0x96D0A0", VA = "0x96D0A0")]
	public CarTabletScript()
	{
	}
}
[Token(Token = "0x2000100")]
public class HUDFPS : MonoBehaviour
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float updateInterval;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text fpsText;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float accum;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int frames;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeleft;

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x9B3054", Offset = "0x9B3054", VA = "0x9B3054")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x9B3060", Offset = "0x9B3060", VA = "0x9B3060")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x9B316C", Offset = "0x9B316C", VA = "0x9B316C")]
	public HUDFPS()
	{
	}
}
[Token(Token = "0x2000101")]
public class LookAtScript : MonoBehaviour
{
	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x9431CC", Offset = "0x9431CC", VA = "0x9431CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x943370", Offset = "0x943370", VA = "0x943370")]
	public LookAtScript()
	{
	}
}
[Token(Token = "0x2000102")]
public class MenuBGMusicScript : MonoBehaviour
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] m_clips;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource m_audioSource;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x946DE0", Offset = "0x946DE0", VA = "0x946DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x946ED0", Offset = "0x946ED0", VA = "0x946ED0")]
	public void LevelCompletedAnalytics()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x946ED4", Offset = "0x946ED4", VA = "0x946ED4")]
	public MenuBGMusicScript()
	{
	}
}
[Token(Token = "0x2000103")]
public class AppEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x95D8AC", Offset = "0x95D8AC", VA = "0x95D8AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x95DA38", Offset = "0x95DA38", VA = "0x95DA38")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x95DAFC", Offset = "0x95DAFC", VA = "0x95DAFC")]
	public AppEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000104")]
public class CheckControllerDetection : MonoBehaviour
{
	[Token(Token = "0x2000335")]
	private enum ControllerType
	{
		[Token(Token = "0x400116F")]
		GearVR,
		[Token(Token = "0x4001170")]
		Go,
		[Token(Token = "0x4001171")]
		QuestAndRiftS,
		[Token(Token = "0x4001172")]
		Rift
	}

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_modelGearVrController;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_modelOculusGoController;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_modelOculusTouchQuestAndRiftSLeftController;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_modelOculusTouchQuestAndRiftSRightController;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_modelOculusTouchRiftLeftController;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_modelOculusTouchRiftRightController;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OVRInput.Controller m_controller;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private ControllerType activeControllerType;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_prevControllerConnected;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_prevControllerConnectedCached;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x96DF68", Offset = "0x96DF68", VA = "0x96DF68")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x96E1A4", Offset = "0x96E1A4", VA = "0x96E1A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x96E3E8", Offset = "0x96E3E8", VA = "0x96E3E8")]
	public CheckControllerDetection()
	{
	}
}
[Token(Token = "0x2000105")]
public class DetectControllerName : MonoBehaviour
{
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_isOculusGo;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_oculusGo;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_oculusGear;

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x994CF4", Offset = "0x994CF4", VA = "0x994CF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x994D98", Offset = "0x994D98", VA = "0x994D98")]
	public DetectControllerName()
	{
	}
}
[Token(Token = "0x2000106")]
public class FoveatRendering : MonoBehaviour
{
	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x9AF83C", Offset = "0x9AF83C", VA = "0x9AF83C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x9AF8A0", Offset = "0x9AF8A0", VA = "0x9AF8A0")]
	public FoveatRendering()
	{
	}
}
[Token(Token = "0x2000107")]
public class FoveatedRendering : MonoBehaviour
{
	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool SetCPULevel;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UniversalRenderPipelineAsset m_URP;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int cpuLevel;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public OVRManager.FixedFoveatedRenderingLevel m_foveatedLevel;

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x9AF8A8", Offset = "0x9AF8A8", VA = "0x9AF8A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x9AF974", Offset = "0x9AF974", VA = "0x9AF974")]
	public FoveatedRendering()
	{
	}
}
[Token(Token = "0x2000108")]
public class PhysicalLoadingButtonScript : MonoBehaviour
{
	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool transition;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isInteractable;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isButtonDown;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float LoadingTime;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer m_loadingSprite;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float loadingSpriteHeight;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnButtonClick;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timer;

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xE71950", Offset = "0xE71950", VA = "0xE71950")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xE719D0", Offset = "0xE719D0", VA = "0xE719D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xE71A44", Offset = "0xE71A44", VA = "0xE71A44")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xE71BF8", Offset = "0xE71BF8", VA = "0xE71BF8")]
	private void EndVibration()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xE71C78", Offset = "0xE71C78", VA = "0xE71C78")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xE71D80", Offset = "0xE71D80", VA = "0xE71D80")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xE71EA8", Offset = "0xE71EA8", VA = "0xE71EA8")]
	public PhysicalLoadingButtonScript()
	{
	}
}
[Token(Token = "0x2000109")]
public class PointerEnterSound : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
{
	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xE72240", Offset = "0xE72240", VA = "0xE72240", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xE7229C", Offset = "0xE7229C", VA = "0xE7229C")]
	public PointerEnterSound()
	{
	}
}
[Token(Token = "0x200010A")]
public class RotateAround : MonoBehaviour
{
	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 m_rotationPerSecond;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_defaultRotation;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xE8028C", Offset = "0xE8028C", VA = "0xE8028C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xE80364", Offset = "0xE80364", VA = "0xE80364")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xE8043C", Offset = "0xE8043C", VA = "0xE8043C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xE804F8", Offset = "0xE804F8", VA = "0xE804F8")]
	public RotateAround()
	{
	}
}
[Token(Token = "0x200010B")]
public class SceneTransition : MonoBehaviour
{
	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5758", Offset = "0x7C5758")]
	private sealed class <LevelFadeInOut>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneTransition <>4__this;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action OnComplete;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001484")]
			[Address(RVA = "0xE5A96C", Offset = "0xE5A96C", VA = "0xE5A96C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0xE5A9D4", Offset = "0xE5A9D4", VA = "0xE5A9D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xE5A800", Offset = "0xE5A800", VA = "0xE5A800")]
		[DebuggerHidden]
		public <LevelFadeInOut>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xE5A834", Offset = "0xE5A834", VA = "0xE5A834", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xE5A838", Offset = "0xE5A838", VA = "0xE5A838", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xE5A974", Offset = "0xE5A974", VA = "0xE5A974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator m_anim;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string sceneName;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isSceneSame;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneTransition m_instance;

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xE5A688", Offset = "0xE5A688", VA = "0xE5A688")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xE5A6F4", Offset = "0xE5A6F4", VA = "0xE5A6F4")]
	public void StartFadeIn(string str)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xE5A76C", Offset = "0xE5A76C", VA = "0xE5A76C")]
	public void AfterFadeIN()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xE5A784", Offset = "0xE5A784", VA = "0xE5A784")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFF70", Offset = "0x7CFF70")]
	public IEnumerator LevelFadeInOut(Action OnComplete)
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xE5A82C", Offset = "0xE5A82C", VA = "0xE5A82C")]
	public SceneTransition()
	{
	}
}
[Token(Token = "0x200010C")]
public class SideMirrorMovementHandler : MonoBehaviour
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider x;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider y;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text joystickVal;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text rot;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minXAngle;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxXAngle;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minZAngle;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxZAngle;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float tiltAngle;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float tiltAroundX;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float tiltAroundY;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xE5C500", Offset = "0xE5C500", VA = "0xE5C500")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xE5C590", Offset = "0xE5C590", VA = "0xE5C590")]
	public void ChangeX(float f)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xE5C6AC", Offset = "0xE5C6AC", VA = "0xE5C6AC")]
	public void ChangeY(float f)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xE5C7E4", Offset = "0xE5C7E4", VA = "0xE5C7E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xE5CAE0", Offset = "0xE5CAE0", VA = "0xE5CAE0")]
	public SideMirrorMovementHandler()
	{
	}
}
[Token(Token = "0x200010D")]
public class TimerScript : MonoBehaviour
{
	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5768", Offset = "0x7C5768")]
	private sealed class <soundTransitionDown>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0xE6834C", Offset = "0xE6834C", VA = "0xE6834C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xE683B4", Offset = "0xE683B4", VA = "0xE683B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xE680FC", Offset = "0xE680FC", VA = "0xE680FC")]
		[DebuggerHidden]
		public <soundTransitionDown>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xE681C4", Offset = "0xE681C4", VA = "0xE681C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xE681C8", Offset = "0xE681C8", VA = "0xE681C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xE68354", Offset = "0xE68354", VA = "0xE68354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5778", Offset = "0x7C5778")]
	private sealed class <soundTransitionUp>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RadioScript <radio>5__2;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <volume>5__3;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0xE68564", Offset = "0xE68564", VA = "0xE68564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0xE685CC", Offset = "0xE685CC", VA = "0xE685CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xE68188", Offset = "0xE68188", VA = "0xE68188")]
		[DebuggerHidden]
		public <soundTransitionUp>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xE683BC", Offset = "0xE683BC", VA = "0xE683BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xE683C0", Offset = "0xE683C0", VA = "0xE683C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xE6856C", Offset = "0xE6856C", VA = "0xE6856C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lowOnTimePercentage;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_timer;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text m_timerText;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image m_radialImg;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isTimerOn;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_time;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip m_clockSound;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource m_audiosource;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool soundOn;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float lowTimeValue;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool gameOver;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xE676D0", Offset = "0xE676D0", VA = "0xE676D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xE6774C", Offset = "0xE6774C", VA = "0xE6774C")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xE67828", Offset = "0xE67828", VA = "0xE67828")]
	public void ResetDisplay()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xE67AA4", Offset = "0xE67AA4", VA = "0xE67AA4")]
	public void PauseTimer()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xE67AC8", Offset = "0xE67AC8", VA = "0xE67AC8")]
	public void ResumeTimer()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xE67AD4", Offset = "0xE67AD4", VA = "0xE67AD4")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xE67BA8", Offset = "0xE67BA8", VA = "0xE67BA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xE6809C", Offset = "0xE6809C", VA = "0xE6809C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7CFFD4", Offset = "0x7CFFD4")]
	public IEnumerator soundTransitionDown()
	{
		return null;
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xE68128", Offset = "0xE68128", VA = "0xE68128")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0038", Offset = "0x7D0038")]
	public IEnumerator soundTransitionUp()
	{
		return null;
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xE681B4", Offset = "0xE681B4", VA = "0xE681B4")]
	public TimerScript()
	{
	}
}
[Token(Token = "0x200010E")]
public class CameraInputDemo : MonoBehaviour
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string infoText;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private splineMove myMove;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x96076C", Offset = "0x96076C", VA = "0x96076C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x9607F0", Offset = "0x9607F0", VA = "0x9607F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x960868", Offset = "0x960868", VA = "0x960868")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x9609D0", Offset = "0x9609D0", VA = "0x9609D0")]
	public void ShowInformation(string text)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x9609D8", Offset = "0x9609D8", VA = "0x9609D8")]
	public CameraInputDemo()
	{
	}
}
[Token(Token = "0x200010F")]
public class EventReceiver : MonoBehaviour
{
	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5788", Offset = "0x7C5788")]
	private sealed class <SetDestinationRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventReceiver <>4__this;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object target;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NavMeshAgent <agent>5__2;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private navMove <myMove>5__3;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <remain>5__4;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001496")]
			[Address(RVA = "0x9AF69C", Offset = "0x9AF69C", VA = "0x9AF69C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001498")]
			[Address(RVA = "0x9AF704", Offset = "0x9AF704", VA = "0x9AF704", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x9AF1DC", Offset = "0x9AF1DC", VA = "0x9AF1DC")]
		[DebuggerHidden]
		public <SetDestinationRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x9AF440", Offset = "0x9AF440", VA = "0x9AF440", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x9AF444", Offset = "0x9AF444", VA = "0x9AF444", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x9AF6A4", Offset = "0x9AF6A4", VA = "0x9AF6A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5798", Offset = "0x7C5798")]
	private sealed class <ActivateForTimeRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object target;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <tar>5__2;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x9AF3D0", Offset = "0x9AF3D0", VA = "0x9AF3D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600149E")]
			[Address(RVA = "0x9AF438", Offset = "0x9AF438", VA = "0x9AF438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x9AF2A4", Offset = "0x9AF2A4", VA = "0x9AF2A4")]
		[DebuggerHidden]
		public <ActivateForTimeRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x9AF2D8", Offset = "0x9AF2D8", VA = "0x9AF2D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x9AF2DC", Offset = "0x9AF2DC", VA = "0x9AF2DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x9AF3D8", Offset = "0x9AF3D8", VA = "0x9AF3D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x9AF058", Offset = "0x9AF058", VA = "0x9AF058")]
	public void MyMethod()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x9AF05C", Offset = "0x9AF05C", VA = "0x9AF05C")]
	public void PrintText(string text)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x9AF0C4", Offset = "0x9AF0C4", VA = "0x9AF0C4")]
	public void RotateSprite(float newRot)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x9AF134", Offset = "0x9AF134", VA = "0x9AF134")]
	public void SetDestination(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x9AF160", Offset = "0x9AF160", VA = "0x9AF160")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D009C", Offset = "0x7D009C")]
	private IEnumerator SetDestinationRoutine(UnityEngine.Object target)
	{
		return null;
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x9AF208", Offset = "0x9AF208", VA = "0x9AF208")]
	public void ActivateForTime(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x9AF234", Offset = "0x9AF234", VA = "0x9AF234")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0100", Offset = "0x7D0100")]
	private IEnumerator ActivateForTimeRoutine(UnityEngine.Object target)
	{
		return null;
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x9AF2D0", Offset = "0x9AF2D0", VA = "0x9AF2D0")]
	public EventReceiver()
	{
	}
}
[Token(Token = "0x2000110")]
public class PathInputDemo : MonoBehaviour
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedMultiplier;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float progress;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private splineMove move;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xE71374", Offset = "0xE71374", VA = "0xE71374")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xE7166C", Offset = "0xE7166C", VA = "0xE7166C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xE71874", Offset = "0xE71874", VA = "0xE71874")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xE71940", Offset = "0xE71940", VA = "0xE71940")]
	public PathInputDemo()
	{
	}
}
[Token(Token = "0x2000111")]
public class RapidInputDemo : MonoBehaviour
{
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C57A8", Offset = "0x7C57A8")]
	private sealed class <SlowDown>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RapidInputDemo <>4__this;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <rate>5__3;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <speed>5__4;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0xE77028", Offset = "0xE77028", VA = "0xE77028", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0xE77090", Offset = "0xE77090", VA = "0xE77090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xE76D50", Offset = "0xE76D50", VA = "0xE76D50")]
		[DebuggerHidden]
		public <SlowDown>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xE76D98", Offset = "0xE76D98", VA = "0xE76D98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xE76D9C", Offset = "0xE76D9C", VA = "0xE76D9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xE77030", Offset = "0xE77030", VA = "0xE77030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh speedDisplay;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh timeDisplay;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float topSpeed;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float addSpeed;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delay;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float slowTime;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minPitch;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxPitch;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private splineMove move;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentSpeed;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeCounter;

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xE76804", Offset = "0xE76804", VA = "0xE76804")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xE76938", Offset = "0xE76938", VA = "0xE76938")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xE76CE0", Offset = "0xE76CE0", VA = "0xE76CE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0164", Offset = "0x7D0164")]
	private IEnumerator SlowDown()
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xE76D7C", Offset = "0xE76D7C", VA = "0xE76D7C")]
	public RapidInputDemo()
	{
	}
}
[Token(Token = "0x2000112")]
public class RotationHelper : MonoBehaviour
{
	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rotation;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xE80500", Offset = "0xE80500", VA = "0xE80500")]
	private void Start()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xE805C0", Offset = "0xE805C0", VA = "0xE805C0")]
	public RotationHelper()
	{
	}
}
[Token(Token = "0x2000113")]
public class RuntimeDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200033C")]
	public class ExampleClass1
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject walkerPrefab;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject pathPrefab;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool done;

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xE819B0", Offset = "0xE819B0", VA = "0xE819B0")]
		public ExampleClass1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200033D")]
	public class ExampleClass2
	{
		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pathName1;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string pathName2;

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xE819B8", Offset = "0xE819B8", VA = "0xE819B8")]
		public ExampleClass2()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200033E")]
	public class ExampleClass3
	{
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xE819C0", Offset = "0xE819C0", VA = "0xE819C0")]
		public ExampleClass3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200033F")]
	public class ExampleClass4
	{
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xE819C8", Offset = "0xE819C8", VA = "0xE819C8")]
		public ExampleClass4()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000340")]
	public class ExampleClass5
	{
		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xE819D0", Offset = "0xE819D0", VA = "0xE819D0")]
		public ExampleClass5()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000341")]
	public class ExampleClass6
	{
		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool done;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xE819D8", Offset = "0xE819D8", VA = "0xE819D8")]
		public ExampleClass6()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000342")]
	public class ExampleClass7
	{
		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool done;

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xE819E0", Offset = "0xE819E0", VA = "0xE819E0")]
		public ExampleClass7()
		{
		}
	}

	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C57B8", Offset = "0x7C57B8")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventReceiver receiver;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RuntimeDemo <>4__this;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xE8196C", Offset = "0xE8196C", VA = "0xE8196C")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xE8197C", Offset = "0xE8197C", VA = "0xE8197C")]
		internal void <DrawExample6>b__0()
		{
		}
	}

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExampleClass1 example1;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExampleClass2 example2;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExampleClass3 example3;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExampleClass4 example4;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExampleClass5 example5;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ExampleClass6 example6;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ExampleClass6 example7;

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xE805C8", Offset = "0xE805C8", VA = "0xE805C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xE80614", Offset = "0xE80614", VA = "0xE80614")]
	private void DrawExample1()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xE80A0C", Offset = "0xE80A0C", VA = "0xE80A0C")]
	private void DrawExample2()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xE80BF8", Offset = "0xE80BF8", VA = "0xE80BF8")]
	private void DrawExample3()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xE80E4C", Offset = "0xE80E4C", VA = "0xE80E4C")]
	private void DrawExample4()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xE81030", Offset = "0xE81030", VA = "0xE81030")]
	private void DrawExample5()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xE8117C", Offset = "0xE8117C", VA = "0xE8117C")]
	private void DrawExample6()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xE81380", Offset = "0xE81380", VA = "0xE81380")]
	private void DrawExample7()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xE81974", Offset = "0xE81974", VA = "0xE81974")]
	public RuntimeDemo()
	{
	}
}
[Token(Token = "0x2000114")]
public class ShowcaseGUI : MonoBehaviour
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ShowcaseGUI instance;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int levels;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xE5BC18", Offset = "0xE5BC18", VA = "0xE5BC18")]
	private void Start()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xE5C01C", Offset = "0xE5C01C", VA = "0xE5C01C")]
	private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xE5BD60", Offset = "0xE5BD60", VA = "0xE5BD60")]
	private void ActivateSurroundings()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xE5C020", Offset = "0xE5C020", VA = "0xE5C020")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xE5C4F0", Offset = "0xE5C4F0", VA = "0xE5C4F0")]
	public ShowcaseGUI()
	{
	}
}
[Token(Token = "0x2000115")]
public class RedLightStatus : MonoBehaviour
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color red;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color yellow;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color green;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture redTex;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture yellowTex;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture greenTex;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer m_renderer;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int lightGroupId;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Intersection intersection;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject light;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xE7CFF4", Offset = "0xE7CFF4", VA = "0xE7CFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xE7D154", Offset = "0xE7D154", VA = "0xE7D154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xE7CFF8", Offset = "0xE7CFF8", VA = "0xE7CFF8")]
	private void SetTrafficLightColor()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xE7D158", Offset = "0xE7D158", VA = "0xE7D158")]
	public RedLightStatus()
	{
	}
}
[Token(Token = "0x2000116")]
public class NonPhysicsVehicle : MonoBehaviour
{
	[Token(Token = "0x6000613")]
	[Address(RVA = "0x94CC28", Offset = "0x94CC28", VA = "0x94CC28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x94CC2C", Offset = "0x94CC2C", VA = "0x94CC2C")]
	public void MovePath()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x94CC30", Offset = "0x94CC30", VA = "0x94CC30")]
	public NonPhysicsVehicle()
	{
	}
}
[Token(Token = "0x2000117")]
public class TriggerVehicle : MonoBehaviour
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public splineMove m_truck;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool start;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xE6BBD0", Offset = "0xE6BBD0", VA = "0xE6BBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xE6BBD4", Offset = "0xE6BBD4", VA = "0xE6BBD4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xE6BCE0", Offset = "0xE6BCE0", VA = "0xE6BCE0")]
	public TriggerVehicle()
	{
	}
}
namespace TrafficSimulation
{
	[Token(Token = "0x2000118")]
	public class CarAI : MonoBehaviour
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Pathid;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] concidingPathid;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RotateAround[] m_wheels;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C820C", Offset = "0x7C820C")]
		public int waypointThresh;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8244", Offset = "0x7C8244")]
		public Transform raycastAnchor;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float raycastLength;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int raySpacing;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int raysNumber;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C827C", Offset = "0x7C827C")]
		public float minTopSpeed;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float maxTopSpeed;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool hasToStop;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool hasToGo;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int curWp;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public int curSeg;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float initialTopSpeed;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private splineMove m_splineMove;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float carSpeed;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool hornSound;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool carStop;

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xE685D4", Offset = "0xE685D4", VA = "0xE685D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xE686E4", Offset = "0xE686E4", VA = "0xE686E4")]
		private void Update()
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xE68714", Offset = "0xE68714", VA = "0xE68714")]
		private void WaypointChecker()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xE68718", Offset = "0xE68718", VA = "0xE68718")]
		private float GetCarSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xE6902C", Offset = "0xE6902C", VA = "0xE6902C")]
		public void StopCar()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xE69038", Offset = "0xE69038", VA = "0xE69038")]
		public void StartCar()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0xE69040", Offset = "0xE69040", VA = "0xE69040")]
		private void MoveVehicle(float _topSpeed)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xE68CA8", Offset = "0xE68CA8", VA = "0xE68CA8")]
		private void CastRay(Vector3 anchor, float angle, Vector3 dir, float length, out CarAI outCarAI, out bool player, out float outHitDistance)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xE69044", Offset = "0xE69044", VA = "0xE69044")]
		private int GetNextSegmentId()
		{
			return default(int);
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xE68FCC", Offset = "0xE68FCC", VA = "0xE68FCC")]
		private bool IsOnSameLane(int otherCar)
		{
			return default(bool);
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xE6904C", Offset = "0xE6904C", VA = "0xE6904C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xE690B4", Offset = "0xE690B4", VA = "0xE690B4")]
		public CarAI()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public enum IntersectionType
	{
		[Token(Token = "0x40007B2")]
		STOP,
		[Token(Token = "0x40007B3")]
		TRAFFIC_LIGHT
	}
	[Token(Token = "0x200011A")]
	public class Intersection : MonoBehaviour
	{
		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntersectionType intersectionType;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int id;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Segment> prioritySegments;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> vehiclesInIntersection;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lightsDuration;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float orangeLightDuration;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<int> lightsNbr1;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<int> lightsNbr2;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isYellow;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> vehiclesQueue;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int curLightRed;

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xE690D8", Offset = "0xE690D8", VA = "0xE690D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xE69198", Offset = "0xE69198", VA = "0xE69198")]
		private void SwitchLights()
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xE6921C", Offset = "0xE6921C", VA = "0xE6921C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xE694B8", Offset = "0xE694B8", VA = "0xE694B8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xE6930C", Offset = "0xE6930C", VA = "0xE6930C")]
		private void TriggerStop(GameObject vehicle)
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xE695A4", Offset = "0xE695A4", VA = "0xE695A4")]
		private void ExitStop(GameObject vehicle)
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xE693F4", Offset = "0xE693F4", VA = "0xE693F4")]
		private void TriggerLight(GameObject vehicle)
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xE696BC", Offset = "0xE696BC", VA = "0xE696BC")]
		private void ExitLight(GameObject vehicle)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xE69734", Offset = "0xE69734", VA = "0xE69734")]
		private bool IsRedLightSegment(int vehicleSegment)
		{
			return default(bool);
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xE6998C", Offset = "0xE6998C", VA = "0xE6998C")]
		private void MoveVehiclesQueue()
		{
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xE69B78", Offset = "0xE69B78", VA = "0xE69B78")]
		public Intersection()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class Segment : MonoBehaviour
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Segment> nextSegments;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int id;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<Waypoint> waypoints;

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xE69B94", Offset = "0xE69B94", VA = "0xE69B94")]
		public bool IsOnSegment(Vector3 p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xE69E24", Offset = "0xE69E24", VA = "0xE69E24")]
		public Segment()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class TrafficSystem : MonoBehaviour
	{
		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool hideGuizmos;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float segDetectThresh;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArrowDraw arrowDrawType;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int arrowCount;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float arrowDistance;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float arrowSizeWaypoint;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float arrowSizeIntersection;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float waypointSize;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Segment> segments;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Intersection> intersections;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Segment curSegment;

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xE69E2C", Offset = "0xE69E2C", VA = "0xE69E2C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xE6AB3C", Offset = "0xE6AB3C", VA = "0xE6AB3C")]
		public List<Waypoint> GetAllWaypoints()
		{
			return null;
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xE6AC80", Offset = "0xE6AC80", VA = "0xE6AC80")]
		public TrafficSystem()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public enum ArrowDraw
	{
		[Token(Token = "0x40007CE")]
		FixedCount,
		[Token(Token = "0x40007CF")]
		ByLength,
		[Token(Token = "0x40007D0")]
		Off
	}
	[Token(Token = "0x200011E")]
	public class VehiclePhysics : MonoBehaviour
	{
		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C82F4", Offset = "0x7C82F4")]
		public List<WheelCollider> WheelColliders;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C832C", Offset = "0x7C832C")]
		public List<WheelCollider> MotorWheels;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8364", Offset = "0x7C8364")]
		public List<WheelCollider> BrakeWheels;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C839C", Offset = "0x7C839C")]
		public List<WheelCollider> SteeringWheels;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C83D4", Offset = "0x7C83D4")]
		public List<GameObject> WheelMeshes;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C840C", Offset = "0x7C840C")]
		public float MaximumSteerAngle;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8444", Offset = "0x7C8444")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8444", Offset = "0x7C8444")]
		public float SteerHelper;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8498", Offset = "0x7C8498")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8498", Offset = "0x7C8498")]
		public float TractionControl;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C84EC", Offset = "0x7C84EC")]
		public float FullTorqueOverAllWheels;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8524", Offset = "0x7C8524")]
		public float ReverseTorque;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C855C", Offset = "0x7C855C")]
		public float Downforce;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float Topspeed;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C85A4", Offset = "0x7C85A4")]
		public float SlipLimit;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C85DC", Offset = "0x7C85DC")]
		public float BrakeTorque;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody body;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float oldRotation;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float currentTorque;

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xE6AD38", Offset = "0xE6AD38", VA = "0xE6AD38")]
		public void Move(float steering, float acceleration, float brake)
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xE6B134", Offset = "0xE6B134", VA = "0xE6B134")]
		private void Start()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xE6B18C", Offset = "0xE6B18C", VA = "0xE6B18C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xE6AE40", Offset = "0xE6AE40", VA = "0xE6AE40")]
		private void ApplyDrive(float acceleration, float brake)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xE6B190", Offset = "0xE6B190", VA = "0xE6B190")]
		private void ApplySteeringAngle(float steeringAngle)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xE6B2A0", Offset = "0xE6B2A0", VA = "0xE6B2A0")]
		private void ApplyDownforce()
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xE6B3C4", Offset = "0xE6B3C4", VA = "0xE6B3C4")]
		private void ApplyTractionControl()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xE6B4C8", Offset = "0xE6B4C8", VA = "0xE6B4C8")]
		private void ApplySteerHelper()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xE6B014", Offset = "0xE6B014", VA = "0xE6B014")]
		private void CapSpeed()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xE6B7D4", Offset = "0xE6B7D4", VA = "0xE6B7D4")]
		public VehiclePhysics()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class Waypoint : MonoBehaviour
	{
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public int id;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Segment segment;

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xE6B8D0", Offset = "0xE6B8D0", VA = "0xE6B8D0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xE6B9D4", Offset = "0xE6B9D4", VA = "0xE6B9D4")]
		public void Refresh(int newId, Segment newSegment)
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xE6BAD8", Offset = "0xE6BAD8", VA = "0xE6BAD8")]
		public void RemoveCollider()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xE6BBC8", Offset = "0xE6BBC8", VA = "0xE6BBC8")]
		public Waypoint()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000120")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x2000344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C57C8", Offset = "0x7C57C8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x60014AE")]
			[Address(RVA = "0x96FC4C", Offset = "0x96FC4C", VA = "0x96FC4C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60014AF")]
			[Address(RVA = "0x97040C", Offset = "0x97040C", VA = "0x97040C")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60014B0")]
			[Address(RVA = "0x970428", Offset = "0x970428", VA = "0x970428")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C57D8", Offset = "0x7C57D8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400119E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x60014B1")]
			[Address(RVA = "0x96FD90", Offset = "0x96FD90", VA = "0x96FD90")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60014B2")]
			[Address(RVA = "0x970444", Offset = "0x970444", VA = "0x970444")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60014B3")]
			[Address(RVA = "0x970460", Offset = "0x970460", VA = "0x970460")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000346")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C57E8", Offset = "0x7C57E8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string floatName;

			[Token(Token = "0x60014B4")]
			[Address(RVA = "0x96FED8", Offset = "0x96FED8", VA = "0x96FED8")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60014B5")]
			[Address(RVA = "0x97047C", Offset = "0x97047C", VA = "0x97047C")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60014B6")]
			[Address(RVA = "0x9704BC", Offset = "0x9704BC", VA = "0x9704BC")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x96FAE8", Offset = "0x96FAE8", VA = "0x96FAE8")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x96FC54", Offset = "0x96FC54", VA = "0x96FC54")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x96FD98", Offset = "0x96FD98", VA = "0x96FD98")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x96FEE0", Offset = "0x96FEE0", VA = "0x96FEE0")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x96FF58", Offset = "0x96FF58", VA = "0x96FF58")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x96FFD0", Offset = "0x96FFD0", VA = "0x96FFD0")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x970038", Offset = "0x970038", VA = "0x970038")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x9700C0", Offset = "0x9700C0", VA = "0x9700C0")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x970128", Offset = "0x970128", VA = "0x970128")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x970190", Offset = "0x970190", VA = "0x970190")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x9701F8", Offset = "0x9701F8", VA = "0x9701F8")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x970260", Offset = "0x970260", VA = "0x970260")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x9702D0", Offset = "0x9702D0", VA = "0x9702D0")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x97033C", Offset = "0x97033C", VA = "0x97033C")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x9703A4", Offset = "0x9703A4", VA = "0x9703A4")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000121")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C57F8", Offset = "0x7C57F8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60014B7")]
			[Address(RVA = "0x970650", Offset = "0x970650", VA = "0x970650")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x9719EC", Offset = "0x9719EC", VA = "0x9719EC")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5808", Offset = "0x7C5808")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40011A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x9707E0", Offset = "0x9707E0", VA = "0x9707E0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x971B28", Offset = "0x971B28", VA = "0x971B28")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5818", Offset = "0x7C5818")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60014BB")]
			[Address(RVA = "0x970970", Offset = "0x970970", VA = "0x970970")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60014BC")]
			[Address(RVA = "0x971B44", Offset = "0x971B44", VA = "0x971B44")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5828", Offset = "0x7C5828")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60014BD")]
			[Address(RVA = "0x970B00", Offset = "0x970B00", VA = "0x970B00")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x971B60", Offset = "0x971B60", VA = "0x971B60")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5838", Offset = "0x7C5838")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60014BF")]
			[Address(RVA = "0x970C74", Offset = "0x970C74", VA = "0x970C74")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x971B7C", Offset = "0x971B7C", VA = "0x971B7C")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5848", Offset = "0x7C5848")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40011A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x970E60", Offset = "0x970E60", VA = "0x970E60")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x971B98", Offset = "0x971B98", VA = "0x971B98")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5858", Offset = "0x7C5858")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x9712DC", Offset = "0x9712DC", VA = "0x9712DC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x971BB4", Offset = "0x971BB4", VA = "0x971BB4")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x971BD0", Offset = "0x971BD0", VA = "0x971BD0")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x971C04", Offset = "0x971C04", VA = "0x971C04")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x971C20", Offset = "0x971C20", VA = "0x971C20")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x971C3C", Offset = "0x971C3C", VA = "0x971C3C")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5868", Offset = "0x7C5868")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x9714D0", Offset = "0x9714D0", VA = "0x9714D0")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x971CFC", Offset = "0x971CFC", VA = "0x971CFC")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5878", Offset = "0x7C5878")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x60014CB")]
			[Address(RVA = "0x9716D8", Offset = "0x9716D8", VA = "0x9716D8")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x971D18", Offset = "0x971D18", VA = "0x971D18")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x971D34", Offset = "0x971D34", VA = "0x971D34")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5888", Offset = "0x7C5888")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x971858", Offset = "0x971858", VA = "0x971858")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x971E38", Offset = "0x971E38", VA = "0x971E38")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000351")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5898", Offset = "0x7C5898")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x9719E4", Offset = "0x9719E4", VA = "0x9719E4")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x971A08", Offset = "0x971A08", VA = "0x971A08")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x971A24", Offset = "0x971A24", VA = "0x971A24")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x9704E0", Offset = "0x9704E0", VA = "0x9704E0")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x970658", Offset = "0x970658", VA = "0x970658")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x9707E8", Offset = "0x9707E8", VA = "0x9707E8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x970978", Offset = "0x970978", VA = "0x970978")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x970B08", Offset = "0x970B08", VA = "0x970B08")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x970C7C", Offset = "0x970C7C", VA = "0x970C7C")]
		public static TweenerCore<Quaternion, Vector3, QuaternionOptions> DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x970E68", Offset = "0x970E68", VA = "0x970E68")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x9712E4", Offset = "0x9712E4", VA = "0x9712E4")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x9714D8", Offset = "0x9714D8", VA = "0x9714D8")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x9716E0", Offset = "0x9716E0", VA = "0x9716E0")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x971860", Offset = "0x971860", VA = "0x971860")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x2000122")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x2000352")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C58A8", Offset = "0x7C58A8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x98B004", Offset = "0x98B004", VA = "0x98B004")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60014D4")]
			[Address(RVA = "0x98B00C", Offset = "0x98B00C", VA = "0x98B00C")]
			internal Vector2 <DOMove>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000353")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C58B8", Offset = "0x7C58B8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x98B028", Offset = "0x98B028", VA = "0x98B028")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x98B030", Offset = "0x98B030", VA = "0x98B030")]
			internal Vector2 <DOMoveX>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C58C8", Offset = "0x7C58C8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x98B04C", Offset = "0x98B04C", VA = "0x98B04C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x98B054", Offset = "0x98B054", VA = "0x98B054")]
			internal Vector2 <DOMoveY>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000355")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C58D8", Offset = "0x7C58D8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40011B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x98B070", Offset = "0x98B070", VA = "0x98B070")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x98B078", Offset = "0x98B078", VA = "0x98B078")]
			internal float <DORotate>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C58E8", Offset = "0x7C58E8")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40011B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x40011BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x40011BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x40011BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Tween yTween;

			[Token(Token = "0x60014DB")]
			[Address(RVA = "0x98B094", Offset = "0x98B094", VA = "0x98B094")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x98B09C", Offset = "0x98B09C", VA = "0x98B09C")]
			internal Vector2 <DOJump>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x98B0B8", Offset = "0x98B0B8", VA = "0x98B0B8")]
			internal void <DOJump>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x98B0D4", Offset = "0x98B0D4", VA = "0x98B0D4")]
			internal void <DOJump>b__2()
			{
			}

			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x98B108", Offset = "0x98B108", VA = "0x98B108")]
			internal Vector2 <DOJump>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x98B124", Offset = "0x98B124", VA = "0x98B124")]
			internal void <DOJump>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x60014E1")]
			[Address(RVA = "0x98B140", Offset = "0x98B140", VA = "0x98B140")]
			internal void <DOJump>b__5()
			{
			}
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x971E54", Offset = "0x971E54", VA = "0x971E54")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x971FBC", Offset = "0x971FBC", VA = "0x971FBC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x972130", Offset = "0x972130", VA = "0x972130")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x9722A4", Offset = "0x9722A4", VA = "0x9722A4")]
		public static TweenerCore<float, float, FloatOptions> DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x9723E4", Offset = "0x9723E4", VA = "0x9723E4")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000123")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x2000357")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C58F8", Offset = "0x7C58F8")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40011BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x98B3CC", Offset = "0x98B3CC", VA = "0x98B3CC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x98B8DC", Offset = "0x98B8DC", VA = "0x98B8DC")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x98B8F8", Offset = "0x98B8F8", VA = "0x98B8F8")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5908", Offset = "0x7C5908")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x98B510", Offset = "0x98B510", VA = "0x98B510")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x98B914", Offset = "0x98B914", VA = "0x98B914")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x98B930", Offset = "0x98B930", VA = "0x98B930")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000359")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5918", Offset = "0x7C5918")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer target;

			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x98B8D4", Offset = "0x98B8D4", VA = "0x98B8D4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x98B94C", Offset = "0x98B94C", VA = "0x98B94C")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x98B958", Offset = "0x98B958", VA = "0x98B958")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x98B268", Offset = "0x98B268", VA = "0x98B268")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x98B3D4", Offset = "0x98B3D4", VA = "0x98B3D4")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x98B518", Offset = "0x98B518", VA = "0x98B518")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x98B6F0", Offset = "0x98B6F0", VA = "0x98B6F0")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000124")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x200035A")]
		public static class Utils
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x990840", Offset = "0x990840", VA = "0x990840")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5928", Offset = "0x7C5928")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup target;

			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x98BB40", Offset = "0x98BB40", VA = "0x98BB40")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x98F6FC", Offset = "0x98F6FC", VA = "0x98F6FC")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x98F718", Offset = "0x98F718", VA = "0x98F718")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5938", Offset = "0x7C5938")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x98BCAC", Offset = "0x98BCAC", VA = "0x98BCAC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x98F96C", Offset = "0x98F96C", VA = "0x98F96C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x98F990", Offset = "0x98F990", VA = "0x98F990")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5948", Offset = "0x7C5948")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x98BDF0", Offset = "0x98BDF0", VA = "0x98BDF0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x98FFF8", Offset = "0x98FFF8", VA = "0x98FFF8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x99001C", Offset = "0x99001C", VA = "0x99001C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5958", Offset = "0x7C5958")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x98BF5C", Offset = "0x98BF5C", VA = "0x98BF5C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x60014F6")]
			[Address(RVA = "0x9904E4", Offset = "0x9904E4", VA = "0x9904E4")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x990508", Offset = "0x990508", VA = "0x990508")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5968", Offset = "0x7C5968")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x98C0A0", Offset = "0x98C0A0", VA = "0x98C0A0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x99052C", Offset = "0x99052C", VA = "0x99052C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x990550", Offset = "0x990550", VA = "0x990550")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5978", Offset = "0x7C5978")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x98C208", Offset = "0x98C208", VA = "0x98C208")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x990574", Offset = "0x990574", VA = "0x990574")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x990590", Offset = "0x990590", VA = "0x990590")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5988", Offset = "0x7C5988")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x98C54C", Offset = "0x98C54C", VA = "0x98C54C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x9905AC", Offset = "0x9905AC", VA = "0x9905AC")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001500")]
			[Address(RVA = "0x99062C", Offset = "0x99062C", VA = "0x99062C")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5998", Offset = "0x7C5998")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6001501")]
			[Address(RVA = "0x98C6B0", Offset = "0x98C6B0", VA = "0x98C6B0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001502")]
			[Address(RVA = "0x990688", Offset = "0x990688", VA = "0x990688")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001503")]
			[Address(RVA = "0x990708", Offset = "0x990708", VA = "0x990708")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C59A8", Offset = "0x7C59A8")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6001504")]
			[Address(RVA = "0x98C814", Offset = "0x98C814", VA = "0x98C814")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001505")]
			[Address(RVA = "0x990764", Offset = "0x990764", VA = "0x990764")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001506")]
			[Address(RVA = "0x9907E4", Offset = "0x9907E4", VA = "0x9907E4")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C59B8", Offset = "0x7C59B8")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6001507")]
			[Address(RVA = "0x98C980", Offset = "0x98C980", VA = "0x98C980")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001508")]
			[Address(RVA = "0x98F734", Offset = "0x98F734", VA = "0x98F734")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001509")]
			[Address(RVA = "0x98F754", Offset = "0x98F754", VA = "0x98F754")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C59C8", Offset = "0x7C59C8")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x600150A")]
			[Address(RVA = "0x98CAC4", Offset = "0x98CAC4", VA = "0x98CAC4")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600150B")]
			[Address(RVA = "0x98F770", Offset = "0x98F770", VA = "0x98F770")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600150C")]
			[Address(RVA = "0x98F790", Offset = "0x98F790", VA = "0x98F790")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000366")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C59D8", Offset = "0x7C59D8")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x600150D")]
			[Address(RVA = "0x98CC18", Offset = "0x98CC18", VA = "0x98CC18")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600150E")]
			[Address(RVA = "0x98F7AC", Offset = "0x98F7AC", VA = "0x98F7AC")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600150F")]
			[Address(RVA = "0x98F7C8", Offset = "0x98F7C8", VA = "0x98F7C8")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000367")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C59E8", Offset = "0x7C59E8")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001510")]
			[Address(RVA = "0x98CD7C", Offset = "0x98CD7C", VA = "0x98CD7C")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001511")]
			[Address(RVA = "0x98F7E4", Offset = "0x98F7E4", VA = "0x98F7E4")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001512")]
			[Address(RVA = "0x98F800", Offset = "0x98F800", VA = "0x98F800")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C59F8", Offset = "0x7C59F8")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001513")]
			[Address(RVA = "0x98CEF4", Offset = "0x98CEF4", VA = "0x98CEF4")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001514")]
			[Address(RVA = "0x98F81C", Offset = "0x98F81C", VA = "0x98F81C")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001515")]
			[Address(RVA = "0x98F838", Offset = "0x98F838", VA = "0x98F838")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A08", Offset = "0x7C5A08")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001516")]
			[Address(RVA = "0x98D06C", Offset = "0x98D06C", VA = "0x98D06C")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001517")]
			[Address(RVA = "0x98F854", Offset = "0x98F854", VA = "0x98F854")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001518")]
			[Address(RVA = "0x98F870", Offset = "0x98F870", VA = "0x98F870")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200036A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A18", Offset = "0x7C5A18")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001519")]
			[Address(RVA = "0x98D1D8", Offset = "0x98D1D8", VA = "0x98D1D8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600151A")]
			[Address(RVA = "0x98F88C", Offset = "0x98F88C", VA = "0x98F88C")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600151B")]
			[Address(RVA = "0x98F8A8", Offset = "0x98F8A8", VA = "0x98F8A8")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A28", Offset = "0x7C5A28")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600151C")]
			[Address(RVA = "0x98D35C", Offset = "0x98D35C", VA = "0x98D35C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x600151D")]
			[Address(RVA = "0x98F8C4", Offset = "0x98F8C4", VA = "0x98F8C4")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600151E")]
			[Address(RVA = "0x98F8E0", Offset = "0x98F8E0", VA = "0x98F8E0")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200036C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A38", Offset = "0x7C5A38")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600151F")]
			[Address(RVA = "0x98D4E0", Offset = "0x98D4E0", VA = "0x98D4E0")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001520")]
			[Address(RVA = "0x98F8FC", Offset = "0x98F8FC", VA = "0x98F8FC")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001521")]
			[Address(RVA = "0x98F918", Offset = "0x98F918", VA = "0x98F918")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200036D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A48", Offset = "0x7C5A48")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001522")]
			[Address(RVA = "0x98D664", Offset = "0x98D664", VA = "0x98D664")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001523")]
			[Address(RVA = "0x98F934", Offset = "0x98F934", VA = "0x98F934")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001524")]
			[Address(RVA = "0x98F950", Offset = "0x98F950", VA = "0x98F950")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200036E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A58", Offset = "0x7C5A58")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001525")]
			[Address(RVA = "0x98D7C8", Offset = "0x98D7C8", VA = "0x98D7C8")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001526")]
			[Address(RVA = "0x98F9B4", Offset = "0x98F9B4", VA = "0x98F9B4")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001527")]
			[Address(RVA = "0x98F9D0", Offset = "0x98F9D0", VA = "0x98F9D0")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200036F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A68", Offset = "0x7C5A68")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001528")]
			[Address(RVA = "0x98D92C", Offset = "0x98D92C", VA = "0x98D92C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001529")]
			[Address(RVA = "0x98F9EC", Offset = "0x98F9EC", VA = "0x98F9EC")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600152A")]
			[Address(RVA = "0x98FA08", Offset = "0x98FA08", VA = "0x98FA08")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A78", Offset = "0x7C5A78")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600152B")]
			[Address(RVA = "0x98DA80", Offset = "0x98DA80", VA = "0x98DA80")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x600152C")]
			[Address(RVA = "0x98FA24", Offset = "0x98FA24", VA = "0x98FA24")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600152D")]
			[Address(RVA = "0x98FA40", Offset = "0x98FA40", VA = "0x98FA40")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A88", Offset = "0x7C5A88")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600152E")]
			[Address(RVA = "0x98DBEC", Offset = "0x98DBEC", VA = "0x98DBEC")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x600152F")]
			[Address(RVA = "0x98FA5C", Offset = "0x98FA5C", VA = "0x98FA5C")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001530")]
			[Address(RVA = "0x98FA78", Offset = "0x98FA78", VA = "0x98FA78")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5A98", Offset = "0x7C5A98")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001531")]
			[Address(RVA = "0x98DD58", Offset = "0x98DD58", VA = "0x98DD58")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001532")]
			[Address(RVA = "0x98FA94", Offset = "0x98FA94", VA = "0x98FA94")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001533")]
			[Address(RVA = "0x98FAB0", Offset = "0x98FAB0", VA = "0x98FAB0")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000373")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5AA8", Offset = "0x7C5AA8")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40011DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001534")]
			[Address(RVA = "0x98DEBC", Offset = "0x98DEBC", VA = "0x98DEBC")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001535")]
			[Address(RVA = "0x98FACC", Offset = "0x98FACC", VA = "0x98FACC")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001536")]
			[Address(RVA = "0x98FAE8", Offset = "0x98FAE8", VA = "0x98FAE8")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5AB8", Offset = "0x7C5AB8")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40011DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6001537")]
			[Address(RVA = "0x98E074", Offset = "0x98E074", VA = "0x98E074")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001538")]
			[Address(RVA = "0x98FB04", Offset = "0x98FB04", VA = "0x98FB04")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001539")]
			[Address(RVA = "0x98FB94", Offset = "0x98FB94", VA = "0x98FB94")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000375")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5AC8", Offset = "0x7C5AC8")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40011DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600153A")]
			[Address(RVA = "0x98E1FC", Offset = "0x98E1FC", VA = "0x98E1FC")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600153B")]
			[Address(RVA = "0x98FC38", Offset = "0x98FC38", VA = "0x98FC38")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600153C")]
			[Address(RVA = "0x98FCC8", Offset = "0x98FCC8", VA = "0x98FCC8")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000376")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5AD8", Offset = "0x7C5AD8")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x40011DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600153D")]
			[Address(RVA = "0x98E3D0", Offset = "0x98E3D0", VA = "0x98E3D0")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x600153E")]
			[Address(RVA = "0x98FD6C", Offset = "0x98FD6C", VA = "0x98FD6C")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600153F")]
			[Address(RVA = "0x98FDFC", Offset = "0x98FDFC", VA = "0x98FDFC")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000377")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5AE8", Offset = "0x7C5AE8")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x40011DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x40011E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x40011E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x40011E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x40011E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x40011E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x6001540")]
			[Address(RVA = "0x98E754", Offset = "0x98E754", VA = "0x98E754")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001541")]
			[Address(RVA = "0x98FEA0", Offset = "0x98FEA0", VA = "0x98FEA0")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001542")]
			[Address(RVA = "0x98FEBC", Offset = "0x98FEBC", VA = "0x98FEBC")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x6001543")]
			[Address(RVA = "0x98FED8", Offset = "0x98FED8", VA = "0x98FED8")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x6001544")]
			[Address(RVA = "0x98FF0C", Offset = "0x98FF0C", VA = "0x98FF0C")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001545")]
			[Address(RVA = "0x98FF28", Offset = "0x98FF28", VA = "0x98FF28")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6001546")]
			[Address(RVA = "0x98FF44", Offset = "0x98FF44", VA = "0x98FF44")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x2000378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5AF8", Offset = "0x7C5AF8")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x40011E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6001547")]
			[Address(RVA = "0x98E8AC", Offset = "0x98E8AC", VA = "0x98E8AC")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x6001548")]
			[Address(RVA = "0x990040", Offset = "0x990040", VA = "0x990040")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001549")]
			[Address(RVA = "0x9900B0", Offset = "0x9900B0", VA = "0x9900B0")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000379")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B08", Offset = "0x7C5B08")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40011E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x600154A")]
			[Address(RVA = "0x98E9F4", Offset = "0x98E9F4", VA = "0x98E9F4")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600154B")]
			[Address(RVA = "0x9900FC", Offset = "0x9900FC", VA = "0x9900FC")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600154C")]
			[Address(RVA = "0x990118", Offset = "0x990118", VA = "0x990118")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B18", Offset = "0x7C5B18")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x40011E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x600154D")]
			[Address(RVA = "0x98EB3C", Offset = "0x98EB3C", VA = "0x98EB3C")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x600154E")]
			[Address(RVA = "0x990134", Offset = "0x990134", VA = "0x990134")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600154F")]
			[Address(RVA = "0x990150", Offset = "0x990150", VA = "0x990150")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B28", Offset = "0x7C5B28")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40011E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x6001550")]
			[Address(RVA = "0x98EC90", Offset = "0x98EC90", VA = "0x98EC90")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001551")]
			[Address(RVA = "0x99016C", Offset = "0x99016C", VA = "0x99016C")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001552")]
			[Address(RVA = "0x990190", Offset = "0x990190", VA = "0x990190")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B38", Offset = "0x7C5B38")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x40011E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001553")]
			[Address(RVA = "0x98EDFC", Offset = "0x98EDFC", VA = "0x98EDFC")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001554")]
			[Address(RVA = "0x9901B4", Offset = "0x9901B4", VA = "0x9901B4")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001555")]
			[Address(RVA = "0x9901D8", Offset = "0x9901D8", VA = "0x9901D8")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B48", Offset = "0x7C5B48")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x40011EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001556")]
			[Address(RVA = "0x98EF40", Offset = "0x98EF40", VA = "0x98EF40")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6001557")]
			[Address(RVA = "0x9901FC", Offset = "0x9901FC", VA = "0x9901FC")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001558")]
			[Address(RVA = "0x990220", Offset = "0x990220", VA = "0x990220")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B58", Offset = "0x7C5B58")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x40011EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6001559")]
			[Address(RVA = "0x98F118", Offset = "0x98F118", VA = "0x98F118")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x600155A")]
			[Address(RVA = "0x990244", Offset = "0x990244", VA = "0x990244")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x600155B")]
			[Address(RVA = "0x990268", Offset = "0x990268", VA = "0x990268")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B68", Offset = "0x7C5B68")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x40011EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x600155C")]
			[Address(RVA = "0x98F30C", Offset = "0x98F30C", VA = "0x98F30C")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x600155D")]
			[Address(RVA = "0x99028C", Offset = "0x99028C", VA = "0x99028C")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600155E")]
			[Address(RVA = "0x990298", Offset = "0x990298", VA = "0x990298")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B78", Offset = "0x7C5B78")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x600155F")]
			[Address(RVA = "0x98F500", Offset = "0x98F500", VA = "0x98F500")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6001560")]
			[Address(RVA = "0x990354", Offset = "0x990354", VA = "0x990354")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001561")]
			[Address(RVA = "0x990360", Offset = "0x990360", VA = "0x990360")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B88", Offset = "0x7C5B88")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x6001562")]
			[Address(RVA = "0x98F6F4", Offset = "0x98F6F4", VA = "0x98F6F4")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6001563")]
			[Address(RVA = "0x99041C", Offset = "0x99041C", VA = "0x99041C")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6001564")]
			[Address(RVA = "0x990428", Offset = "0x990428", VA = "0x990428")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x98BA04", Offset = "0x98BA04", VA = "0x98BA04")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x98BB48", Offset = "0x98BB48", VA = "0x98BB48")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x98BCB4", Offset = "0x98BCB4", VA = "0x98BCB4")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x98BDF8", Offset = "0x98BDF8", VA = "0x98BDF8")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x98BF64", Offset = "0x98BF64", VA = "0x98BF64")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x98C0A8", Offset = "0x98C0A8", VA = "0x98C0A8")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x98C210", Offset = "0x98C210", VA = "0x98C210")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x98C3F0", Offset = "0x98C3F0", VA = "0x98C3F0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x98C554", Offset = "0x98C554", VA = "0x98C554")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0x98C6B8", Offset = "0x98C6B8", VA = "0x98C6B8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x98C81C", Offset = "0x98C81C", VA = "0x98C81C")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x98C988", Offset = "0x98C988", VA = "0x98C988")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x98CACC", Offset = "0x98CACC", VA = "0x98CACC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x98CC20", Offset = "0x98CC20", VA = "0x98CC20")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x98CD84", Offset = "0x98CD84", VA = "0x98CD84")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x98CEFC", Offset = "0x98CEFC", VA = "0x98CEFC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x98D074", Offset = "0x98D074", VA = "0x98D074")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x98D1E0", Offset = "0x98D1E0", VA = "0x98D1E0")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x98D364", Offset = "0x98D364", VA = "0x98D364")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x98D4E8", Offset = "0x98D4E8", VA = "0x98D4E8")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x98D66C", Offset = "0x98D66C", VA = "0x98D66C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x98D7D0", Offset = "0x98D7D0", VA = "0x98D7D0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x98D934", Offset = "0x98D934", VA = "0x98D934")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x98DA88", Offset = "0x98DA88", VA = "0x98DA88")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x98DBF4", Offset = "0x98DBF4", VA = "0x98DBF4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x98DD60", Offset = "0x98DD60", VA = "0x98DD60")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x98DEC4", Offset = "0x98DEC4", VA = "0x98DEC4")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x98E07C", Offset = "0x98E07C", VA = "0x98E07C")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x98E204", Offset = "0x98E204", VA = "0x98E204")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x98E3D8", Offset = "0x98E3D8", VA = "0x98E3D8")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x98E75C", Offset = "0x98E75C", VA = "0x98E75C")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x98E8B4", Offset = "0x98E8B4", VA = "0x98E8B4")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x98E9FC", Offset = "0x98E9FC", VA = "0x98E9FC")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x98EB44", Offset = "0x98EB44", VA = "0x98EB44")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x98EC98", Offset = "0x98EC98", VA = "0x98EC98")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x98EE04", Offset = "0x98EE04", VA = "0x98EE04")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x98EF48", Offset = "0x98EF48", VA = "0x98EF48")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x98F120", Offset = "0x98F120", VA = "0x98F120")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x98F314", Offset = "0x98F314", VA = "0x98F314")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x98F508", Offset = "0x98F508", VA = "0x98F508")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000125")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5B98", Offset = "0x7C5B98")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x6001565")]
			[Address(RVA = "0x991548", Offset = "0x991548", VA = "0x991548")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001566")]
			[Address(RVA = "0x991718", Offset = "0x991718", VA = "0x991718")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001567")]
			[Address(RVA = "0x99173C", Offset = "0x99173C", VA = "0x99173C")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5BA8", Offset = "0x7C5BA8")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x6001568")]
			[Address(RVA = "0x991710", Offset = "0x991710", VA = "0x991710")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6001569")]
			[Address(RVA = "0x991760", Offset = "0x991760", VA = "0x991760")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600156A")]
			[Address(RVA = "0x991784", Offset = "0x991784", VA = "0x991784")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x990AEC", Offset = "0x990AEC", VA = "0x990AEC")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x990CC8", Offset = "0x990CC8", VA = "0x990CC8")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x990EB8", Offset = "0x990EB8", VA = "0x990EB8")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x990F80", Offset = "0x990F80", VA = "0x990F80")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x991048", Offset = "0x991048", VA = "0x991048")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x991110", Offset = "0x991110", VA = "0x991110")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x9911E8", Offset = "0x9911E8", VA = "0x9911E8")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x9912C0", Offset = "0x9912C0", VA = "0x9912C0")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x991388", Offset = "0x991388", VA = "0x991388")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x991550", Offset = "0x991550", VA = "0x991550")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000126")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x2000384")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000168")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600156B")]
				[Address(RVA = "0x96F828", Offset = "0x96F828", VA = "0x96F828", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600156C")]
			[Address(RVA = "0x96F85C", Offset = "0x96F85C", VA = "0x96F85C")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000385")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x40011F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000169")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600156D")]
				[Address(RVA = "0x96F9F8", Offset = "0x96F9F8", VA = "0x96F9F8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600156E")]
			[Address(RVA = "0x96FA5C", Offset = "0x96FA5C", VA = "0x96FA5C")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000386")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x40011F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700016A")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600156F")]
				[Address(RVA = "0x96F910", Offset = "0x96F910", VA = "0x96F910", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001570")]
			[Address(RVA = "0x96F92C", Offset = "0x96F92C", VA = "0x96F92C")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000387")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x40011F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x40011FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x1700016B")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001571")]
				[Address(RVA = "0x96F888", Offset = "0x96F888", VA = "0x96F888", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001572")]
			[Address(RVA = "0x96F8D4", Offset = "0x96F8D4", VA = "0x96F8D4")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000388")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x40011FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x40011FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x1700016C")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001573")]
				[Address(RVA = "0x96F958", Offset = "0x96F958", VA = "0x96F958", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001574")]
			[Address(RVA = "0x96F9BC", Offset = "0x96F9BC", VA = "0x96F9BC")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000389")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x40011FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700016D")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6001575")]
				[Address(RVA = "0x96FA88", Offset = "0x96FA88", VA = "0x96FA88", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001576")]
			[Address(RVA = "0x96FABC", Offset = "0x96FABC", VA = "0x96FABC")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x2000127")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x200038A")]
		public static class Physics
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x9918EC", Offset = "0x9918EC", VA = "0x9918EC")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6001578")]
			[Address(RVA = "0x9919F4", Offset = "0x9919F4", VA = "0x9919F4")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6001579")]
			[Address(RVA = "0x991A84", Offset = "0x991A84", VA = "0x991A84")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x600157A")]
			[Address(RVA = "0x991B14", Offset = "0x991B14", VA = "0x991B14")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x9917A8", Offset = "0x9917A8", VA = "0x9917A8")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x99184C", Offset = "0x99184C", VA = "0x99184C")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
namespace SWS
{
	[Token(Token = "0x2000128")]
	public class EventCollisionTrigger : MonoBehaviour
	{
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onTrigger;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool onCollision;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent myEvent;

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xE8314C", Offset = "0xE8314C", VA = "0xE8314C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xE83174", Offset = "0xE83174", VA = "0xE83174")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xE8319C", Offset = "0xE8319C", VA = "0xE8319C")]
		public void ApplyForce(int power)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xE833F4", Offset = "0xE833F4", VA = "0xE833F4")]
		public EventCollisionTrigger()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class MoveAnimator : MonoBehaviour
	{
		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private splineMove sMove;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NavMeshAgent nAgent;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lastRotY;

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xE83404", Offset = "0xE83404", VA = "0xE83404")]
		private void Start()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xE834C0", Offset = "0xE834C0", VA = "0xE834C0")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xE8375C", Offset = "0xE8375C", VA = "0xE8375C")]
		public MoveAnimator()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class PathIndicator : MonoBehaviour
	{
		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5BB8", Offset = "0x7C5BB8")]
		private sealed class <EmitParticles>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathIndicator <>4__this;

			[Token(Token = "0x1700016E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600157E")]
				[Address(RVA = "0xE839F0", Offset = "0xE839F0", VA = "0xE839F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001580")]
				[Address(RVA = "0xE83A58", Offset = "0xE83A58", VA = "0xE83A58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600157B")]
			[Address(RVA = "0xE83840", Offset = "0xE83840", VA = "0xE83840")]
			[DebuggerHidden]
			public <EmitParticles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600157C")]
			[Address(RVA = "0xE83874", Offset = "0xE83874", VA = "0xE83874", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600157D")]
			[Address(RVA = "0xE83878", Offset = "0xE83878", VA = "0xE83878", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600157F")]
			[Address(RVA = "0xE839F8", Offset = "0xE839F8", VA = "0xE839F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float modRotation;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem pSys;

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xE83764", Offset = "0xE83764", VA = "0xE83764")]
		private void Start()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xE837D0", Offset = "0xE837D0", VA = "0xE837D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0738", Offset = "0x7D0738")]
		private IEnumerator EmitParticles()
		{
			return null;
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xE8386C", Offset = "0xE8386C", VA = "0xE8386C")]
		public PathIndicator()
		{
		}
	}
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C3F7C", Offset = "0x7C3F7C")]
	public class PathRenderer : MonoBehaviour
	{
		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5BC8", Offset = "0x7C5BC8")]
		private sealed class <StartRenderer>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathRenderer <>4__this;

			[Token(Token = "0x17000170")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001584")]
				[Address(RVA = "0xE84D38", Offset = "0xE84D38", VA = "0xE84D38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000171")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001586")]
				[Address(RVA = "0xE84DA0", Offset = "0xE84DA0", VA = "0xE84DA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001581")]
			[Address(RVA = "0xE844DC", Offset = "0xE844DC", VA = "0xE844DC")]
			[DebuggerHidden]
			public <StartRenderer>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001582")]
			[Address(RVA = "0xE84CBC", Offset = "0xE84CBC", VA = "0xE84CBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001583")]
			[Address(RVA = "0xE84CC0", Offset = "0xE84CC0", VA = "0xE84CC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001585")]
			[Address(RVA = "0xE84D40", Offset = "0xE84D40", VA = "0xE84D40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onUpdate;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spacing;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PathManager path;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer line;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] points;

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xE843A8", Offset = "0xE843A8", VA = "0xE843A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xE8446C", Offset = "0xE8446C", VA = "0xE8446C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D079C", Offset = "0x7D079C")]
		private IEnumerator StartRenderer()
		{
			return null;
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xE84508", Offset = "0xE84508", VA = "0xE84508")]
		private void Render()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xE846C4", Offset = "0xE846C4", VA = "0xE846C4")]
		private void DrawCurved()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xE847D8", Offset = "0xE847D8", VA = "0xE847D8")]
		private void DrawLinear()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xE84CA8", Offset = "0xE84CA8", VA = "0xE84CA8")]
		public PathRenderer()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class BezierPathManager : PathManager
	{
		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3[] pathPoints;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<BezierPoint> bPoints;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showHandles;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool connectHandles;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color color3;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float pathDetail;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool customDetail;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<float> segmentDetail;

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xE819E8", Offset = "0xE819E8", VA = "0xE819E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xE821E0", Offset = "0xE821E0", VA = "0xE821E0", Slot = "4")]
		public override void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xE8249C", Offset = "0xE8249C", VA = "0xE8249C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xE8299C", Offset = "0xE8299C", VA = "0xE8299C", Slot = "6")]
		public override Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xE82A98", Offset = "0xE82A98", VA = "0xE82A98", Slot = "9")]
		public override int GetWaypointCount()
		{
			return default(int);
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xE82AE8", Offset = "0xE82AE8", VA = "0xE82AE8", Slot = "7")]
		public override Transform GetWaypoint(int index)
		{
			return null;
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xE82B68", Offset = "0xE82B68", VA = "0xE82B68", Slot = "8")]
		public override int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xE81EA8", Offset = "0xE81EA8", VA = "0xE81EA8")]
		public void CalculatePath()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xE82C70", Offset = "0xE82C70", VA = "0xE82C70")]
		private List<Vector3> GetPoints(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float detail)
		{
			return null;
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xE82F38", Offset = "0xE82F38", VA = "0xE82F38")]
		public BezierPathManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012D")]
	public class BezierPoint
	{
		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform wp;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] cp;

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xE8243C", Offset = "0xE8243C", VA = "0xE8243C")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class PathManager : MonoBehaviour
	{
		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] waypoints;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool drawCurved;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool drawDirection;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color color1;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color2;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 size;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float radius;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool skipCustomNames;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject replaceObject;

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xE83A60", Offset = "0xE83A60", VA = "0xE83A60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xE83AD8", Offset = "0xE83AD8", VA = "0xE83AD8")]
		public void Create([Optional] Transform parent)
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xE83DE8", Offset = "0xE83DE8", VA = "0xE83DE8", Slot = "4")]
		public virtual void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xE83EF0", Offset = "0xE83EF0", VA = "0xE83EF0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xE841FC", Offset = "0xE841FC", VA = "0xE841FC", Slot = "5")]
		public virtual float GetHandleSize(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xE84204", Offset = "0xE84204", VA = "0xE84204", Slot = "6")]
		public virtual Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xE84348", Offset = "0xE84348", VA = "0xE84348", Slot = "7")]
		public virtual Transform GetWaypoint(int index)
		{
			return null;
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xE84384", Offset = "0xE84384", VA = "0xE84384", Slot = "8")]
		public virtual int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xE8438C", Offset = "0xE8438C", VA = "0xE8438C", Slot = "9")]
		public virtual int GetWaypointCount()
		{
			return default(int);
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xE83030", Offset = "0xE83030", VA = "0xE83030")]
		public PathManager()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class WaypointManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5BD8", Offset = "0x7C5BD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, PathManager>, bool> <>9__5_0;

			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<string, PathManager>, string> <>9__5_1;

			[Token(Token = "0x6001588")]
			[Address(RVA = "0xE85778", Offset = "0xE85778", VA = "0xE85778")]
			public <>c()
			{
			}

			[Token(Token = "0x6001589")]
			[Address(RVA = "0xE85780", Offset = "0xE85780", VA = "0xE85780")]
			internal bool <CleanUp>b__5_0(KeyValuePair<string, PathManager> p)
			{
				return default(bool);
			}

			[Token(Token = "0x600158A")]
			[Address(RVA = "0xE857EC", Offset = "0xE857EC", VA = "0xE857EC")]
			internal string <CleanUp>b__5_1(KeyValuePair<string, PathManager> p)
			{
				return null;
			}
		}

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode placementKey;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode viewPlacementKey;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<string, PathManager> Paths;

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xE84DA8", Offset = "0xE84DA8", VA = "0xE84DA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xE81A84", Offset = "0xE81A84", VA = "0xE81A84")]
		public static void AddPath(GameObject path)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xE84E14", Offset = "0xE84E14", VA = "0xE84E14")]
		public static void CleanUp()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xE8507C", Offset = "0xE8507C", VA = "0xE8507C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xE82908", Offset = "0xE82908", VA = "0xE82908")]
		public static void DrawStraight(Vector3[] waypoints)
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xE8280C", Offset = "0xE8280C", VA = "0xE8280C")]
		public static void DrawCurved(Vector3[] pathPoints)
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xE850F8", Offset = "0xE850F8", VA = "0xE850F8")]
		public static Vector3[] GetCurved(Vector3[] waypoints)
		{
			return null;
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xE8487C", Offset = "0xE8487C", VA = "0xE8487C")]
		public static Vector3 GetPoint(Vector3[] gizmoPoints, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xE8528C", Offset = "0xE8528C", VA = "0xE8528C")]
		public static float GetPathLength(Vector3[] waypoints)
		{
			return default(float);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xE853B8", Offset = "0xE853B8", VA = "0xE853B8")]
		public static List<Vector3> SmoothCurve(List<Vector3> pathToCurve, int interpolations)
		{
			return null;
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xE8568C", Offset = "0xE8568C", VA = "0xE8568C")]
		public WaypointManager()
		{
		}
	}
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C3FE0", Offset = "0x7C3FE0")]
	public class navMove : MonoBehaviour
	{
		[Token(Token = "0x200038E")]
		public enum LoopType
		{
			[Token(Token = "0x4001208")]
			none,
			[Token(Token = "0x4001209")]
			loop,
			[Token(Token = "0x400120A")]
			pingPong,
			[Token(Token = "0x400120B")]
			random
		}

		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5BE8", Offset = "0x7C5BE8")]
		private sealed class <Move>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x17000172")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600158E")]
				[Address(RVA = "0xE86658", Offset = "0xE86658", VA = "0xE86658", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000173")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001590")]
				[Address(RVA = "0xE866C0", Offset = "0xE866C0", VA = "0xE866C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600158B")]
			[Address(RVA = "0xE85B50", Offset = "0xE85B50", VA = "0xE85B50")]
			[DebuggerHidden]
			public <Move>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600158C")]
			[Address(RVA = "0xE864F8", Offset = "0xE864F8", VA = "0xE864F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600158D")]
			[Address(RVA = "0xE864FC", Offset = "0xE864FC", VA = "0xE864FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600158F")]
			[Address(RVA = "0xE86660", Offset = "0xE86660", VA = "0xE86660", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5BF8", Offset = "0x7C5BF8")]
		private sealed class <NextWaypoint>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400120F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x17000174")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001594")]
				[Address(RVA = "0xE869F4", Offset = "0xE869F4", VA = "0xE869F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000175")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001596")]
				[Address(RVA = "0xE86A5C", Offset = "0xE86A5C", VA = "0xE86A5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001591")]
			[Address(RVA = "0xE85BEC", Offset = "0xE85BEC", VA = "0xE85BEC")]
			[DebuggerHidden]
			public <NextWaypoint>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001592")]
			[Address(RVA = "0xE866C8", Offset = "0xE866C8", VA = "0xE866C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001593")]
			[Address(RVA = "0xE866CC", Offset = "0xE866CC", VA = "0xE866CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001595")]
			[Address(RVA = "0xE869FC", Offset = "0xE869FC", VA = "0xE869FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C08", Offset = "0x7C5C08")]
		private sealed class <WaitForDestination>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x4001215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <remain>5__2;

			[Token(Token = "0x17000176")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600159A")]
				[Address(RVA = "0xE86F08", Offset = "0xE86F08", VA = "0xE86F08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000177")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600159C")]
				[Address(RVA = "0xE86F70", Offset = "0xE86F70", VA = "0xE86F70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001597")]
			[Address(RVA = "0xE85C88", Offset = "0xE85C88", VA = "0xE85C88")]
			[DebuggerHidden]
			public <WaitForDestination>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001598")]
			[Address(RVA = "0xE86D58", Offset = "0xE86D58", VA = "0xE86D58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001599")]
			[Address(RVA = "0xE86D5C", Offset = "0xE86D5C", VA = "0xE86D5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600159B")]
			[Address(RVA = "0xE86F10", Offset = "0xE86F10", VA = "0xE86F10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C18", Offset = "0x7C5C18")]
		private sealed class <ReachedEnd>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x17000178")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015A0")]
				[Address(RVA = "0xE86BC4", Offset = "0xE86BC4", VA = "0xE86BC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000179")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015A2")]
				[Address(RVA = "0xE86C2C", Offset = "0xE86C2C", VA = "0xE86C2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600159D")]
			[Address(RVA = "0xE85E0C", Offset = "0xE85E0C", VA = "0xE85E0C")]
			[DebuggerHidden]
			public <ReachedEnd>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600159E")]
			[Address(RVA = "0xE86A64", Offset = "0xE86A64", VA = "0xE86A64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600159F")]
			[Address(RVA = "0xE86A68", Offset = "0xE86A68", VA = "0xE86A68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015A1")]
			[Address(RVA = "0xE86BCC", Offset = "0xE86BCC", VA = "0xE86BCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C28", Offset = "0x7C5C28")]
		private sealed class <Wait>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400121A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400121B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x400121C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public navMove <>4__this;

			[Token(Token = "0x1700017A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015A6")]
				[Address(RVA = "0xE86CE8", Offset = "0xE86CE8", VA = "0xE86CE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015A8")]
				[Address(RVA = "0xE86D50", Offset = "0xE86D50", VA = "0xE86D50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015A3")]
			[Address(RVA = "0xE86258", Offset = "0xE86258", VA = "0xE86258")]
			[DebuggerHidden]
			public <Wait>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60015A4")]
			[Address(RVA = "0xE86C34", Offset = "0xE86C34", VA = "0xE86C34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015A5")]
			[Address(RVA = "0xE86C38", Offset = "0xE86C38", VA = "0xE86C38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015A7")]
			[Address(RVA = "0xE86CF0", Offset = "0xE86CF0", VA = "0xE86CF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool updateRotation;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LoopType loopType;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Transform[] waypoints;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool repeat;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshAgent agent;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private System.Random rand;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int rndIndex;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine waitRoutine;

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xE85830", Offset = "0xE85830", VA = "0xE85830")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xE85888", Offset = "0xE85888", VA = "0xE85888")]
		private void Start()
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xE85898", Offset = "0xE85898", VA = "0xE85898")]
		public void StartMove()
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xE85AE0", Offset = "0xE85AE0", VA = "0xE85AE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0800", Offset = "0x7D0800")]
		private IEnumerator Move()
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xE85B7C", Offset = "0xE85B7C", VA = "0xE85B7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0864", Offset = "0x7D0864")]
		private IEnumerator NextWaypoint()
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xE85C18", Offset = "0xE85C18", VA = "0xE85C18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D08C8", Offset = "0x7D08C8")]
		private IEnumerator WaitForDestination()
		{
			return null;
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xE85CB4", Offset = "0xE85CB4", VA = "0xE85CB4")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xE85D9C", Offset = "0xE85D9C", VA = "0xE85D9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D092C", Offset = "0x7D092C")]
		private IEnumerator ReachedEnd()
		{
			return null;
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xE85E38", Offset = "0xE85E38", VA = "0xE85E38")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xE860B4", Offset = "0xE860B4", VA = "0xE860B4")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xE8615C", Offset = "0xE8615C", VA = "0xE8615C")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xE861D8", Offset = "0xE861D8", VA = "0xE861D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0990", Offset = "0x7D0990")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xE86284", Offset = "0xE86284", VA = "0xE86284")]
		public void Resume()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xE862CC", Offset = "0xE862CC", VA = "0xE862CC")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xE86338", Offset = "0xE86338", VA = "0xE86338")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xE8339C", Offset = "0xE8339C", VA = "0xE8339C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xE86364", Offset = "0xE86364", VA = "0xE86364")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xE86444", Offset = "0xE86444", VA = "0xE86444")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xE86460", Offset = "0xE86460", VA = "0xE86460")]
		public navMove()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class splineMove : MonoBehaviour
	{
		[Token(Token = "0x2000394")]
		public enum LocalType
		{
			[Token(Token = "0x400121E")]
			none,
			[Token(Token = "0x400121F")]
			toPath,
			[Token(Token = "0x4001220")]
			toObject
		}

		[Token(Token = "0x2000395")]
		public enum TimeValue
		{
			[Token(Token = "0x4001222")]
			time,
			[Token(Token = "0x4001223")]
			speed
		}

		[Token(Token = "0x2000396")]
		public enum LoopType
		{
			[Token(Token = "0x4001225")]
			none,
			[Token(Token = "0x4001226")]
			loop,
			[Token(Token = "0x4001227")]
			pingPong,
			[Token(Token = "0x4001228")]
			random,
			[Token(Token = "0x4001229")]
			yoyo
		}

		[Token(Token = "0x2000397")]
		public enum RotationType
		{
			[Token(Token = "0x400122B")]
			none,
			[Token(Token = "0x400122C")]
			all
		}

		[Token(Token = "0x2000398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C38", Offset = "0x7C5C38")]
		private sealed class <Wait>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x4001230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public splineMove <>4__this;

			[Token(Token = "0x1700017C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015AC")]
				[Address(RVA = "0xE5A618", Offset = "0xE5A618", VA = "0xE5A618", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015AE")]
				[Address(RVA = "0xE5A680", Offset = "0xE5A680", VA = "0xE5A680", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015A9")]
			[Address(RVA = "0xE5A534", Offset = "0xE5A534", VA = "0xE5A534")]
			[DebuggerHidden]
			public <Wait>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x60015AA")]
			[Address(RVA = "0xE5A560", Offset = "0xE5A560", VA = "0xE5A560", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xE5A564", Offset = "0xE5A564", VA = "0xE5A564", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015AD")]
			[Address(RVA = "0xE5A620", Offset = "0xE5A620", VA = "0xE5A620", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalType localType;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lookAhead;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sizeToAdd;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TimeValue timeValue;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float speed;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve animEaseType;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LoopType loopType;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Vector3[] waypoints;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PathType pathType;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public PathMode pathMode;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Ease easeType;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public AxisConstraint lockPosition;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AxisConstraint lockRotation;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public RotationType waypointRotation;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform rotationTarget;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Tweener tween;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] wpPos;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float originSpeed;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion originRot;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private System.Random rand;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int[] rndArray;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine waitRoutine;

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xE86F78", Offset = "0xE86F78", VA = "0xE86F78")]
		private void Start()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xE71404", Offset = "0xE71404", VA = "0xE71404")]
		public void StartMove()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xE86F88", Offset = "0xE86F88", VA = "0xE86F88")]
		private void Initialize(int startAt = 0)
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xE87270", Offset = "0xE87270", VA = "0xE87270")]
		private void CreateTween()
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xE879F8", Offset = "0xE879F8", VA = "0xE879F8")]
		private void OnWaypointReached(int index)
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xE87A38", Offset = "0xE87A38", VA = "0xE87A38")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xE87BB8", Offset = "0xE87BB8", VA = "0xE87BB8")]
		private void OnWaypointRotation()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xE88294", Offset = "0xE88294", VA = "0xE88294")]
		private void ApplyWaypointRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xE882B0", Offset = "0xE882B0", VA = "0xE882B0")]
		private void ReachedEnd()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xE876E0", Offset = "0xE876E0", VA = "0xE876E0")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xE8798C", Offset = "0xE8798C", VA = "0xE8798C")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xE715CC", Offset = "0xE715CC", VA = "0xE715CC")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xE88344", Offset = "0xE88344", VA = "0xE88344")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D09F4", Offset = "0x7D09F4")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xE76C38", Offset = "0xE76C38", VA = "0xE76C38")]
		public void Resume()
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xE883C4", Offset = "0xE883C4", VA = "0xE883C4")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xE817A0", Offset = "0xE817A0", VA = "0xE817A0")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xE817CC", Offset = "0xE817CC", VA = "0xE817CC")]
		public void Stop()
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xE81808", Offset = "0xE81808", VA = "0xE81808")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xE76CB0", Offset = "0xE76CB0", VA = "0xE76CB0")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xE88470", Offset = "0xE88470", VA = "0xE88470")]
		public splineMove()
		{
		}
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x2000132")]
	public class UIMovement : MonoBehaviour
	{
		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_LookatCamera;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_UIElement;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_RotateWithCamera;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_FollowSpeed;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float dtime;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_DistanceFromCamera;

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xE6E1B8", Offset = "0xE6E1B8", VA = "0xE6E1B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xE6E218", Offset = "0xE6E218", VA = "0xE6E218")]
		private void DisableCameraMovement()
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xE6E220", Offset = "0xE6E220", VA = "0xE6E220")]
		private void Start()
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xE6E2F8", Offset = "0xE6E2F8", VA = "0xE6E2F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xE6E5A4", Offset = "0xE6E5A4", VA = "0xE6E5A4")]
		public UIMovement()
		{
		}
	}
}
namespace Prashant.SteeringSystem
{
	[Token(Token = "0x2000133")]
	public class SteeringControlHand : MonoBehaviour
	{
		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public GameObject SteeringWheel;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteeringWheelController WheelController;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool canSteeringWheelStick;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool canGearStick;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool canHandBreakStick;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OVRInput.Controller controller;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8704", Offset = "0x7C8704")]
		public Transform ControllerAnchors;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public VR_Controller vrController;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float RotateWhenPicked;

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xE724A4", Offset = "0xE724A4", VA = "0xE724A4")]
		[HideInInspector]
		private void Start()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xE724FC", Offset = "0xE724FC", VA = "0xE724FC")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xE725DC", Offset = "0xE725DC", VA = "0xE725DC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xE726B0", Offset = "0xE726B0", VA = "0xE726B0")]
		private void UnstickEveryThing()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xE726B4", Offset = "0xE726B4", VA = "0xE726B4")]
		public SteeringControlHand()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class SteeringWheelController : MonoBehaviour
	{
		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isRighthandDrive;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent m_handSticked;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VehicleStandardInput m_steerInput;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SteeringControlHand left;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SteeringControlHand right;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Hand m_leftHandAnim;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Hand m_rightHandAnim;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HandPoseId m_handPose;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float steeringRadius;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C874C", Offset = "0x7C874C")]
		private GameObject Hand;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool HandSticked;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform TrackedController;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float angleStickyOffset;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float wheelLastSpeed;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float INERTIA;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float MAX_ROTATION;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float WHEEL_HAPTIC_FREQUENCY;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8784", Offset = "0x7C8784")]
		public GameObject WheelBase;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C87BC", Offset = "0x7C87BC")]
		private Vector3 RelativePos;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C87F4", Offset = "0x7C87F4")]
		private float outputAngle;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip m_steeringGrabSound;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private AudioSource audioSource;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C882C", Offset = "0x7C882C")]
		private List<float> lastValues;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<float> Diffs;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<float> formulaDiffs;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<float> increment;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float offset;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float t;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isLeft;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool isRight;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		private bool isLeftSticked;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		private bool isRightSticked;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float Steerz;

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xE726BC", Offset = "0xE726BC", VA = "0xE726BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xE72890", Offset = "0xE72890", VA = "0xE72890")]
		public void OnStick(Transform TrackedController)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xE728E8", Offset = "0xE728E8", VA = "0xE728E8")]
		private void CalculateOffset()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xE72C2C", Offset = "0xE72C2C", VA = "0xE72C2C")]
		public void OnUnStick()
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xE72B54", Offset = "0xE72B54", VA = "0xE72B54")]
		private float CalculateRawAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xE72CB0", Offset = "0xE72CB0", VA = "0xE72CB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xE727A8", Offset = "0xE727A8", VA = "0xE727A8")]
		private void CreateArrays(int firstPparam)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xE734F8", Offset = "0xE734F8", VA = "0xE734F8")]
		public float hookedAngles(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xE729AC", Offset = "0xE729AC", VA = "0xE729AC")]
		public void ControllerPositionAroundSteering()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xE73944", Offset = "0xE73944", VA = "0xE73944")]
		public SteeringWheelController()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public enum MotionControlMode
	{
		[Token(Token = "0x4000869")]
		Free,
		[Token(Token = "0x400086A")]
		Controller
	}
	[Token(Token = "0x2000136")]
	public class VR_Controller : MonoBehaviour
	{
		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform steerParent;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform originalParent;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initialPosition;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion initialRotation;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MotionControlMode controlPositionMode;

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xE73A28", Offset = "0xE73A28", VA = "0xE73A28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xE73A60", Offset = "0xE73A60", VA = "0xE73A60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xE73454", Offset = "0xE73454", VA = "0xE73454")]
		public void SetPositionControlMode(MotionControlMode controlMode, Transform parent)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xE73A90", Offset = "0xE73A90", VA = "0xE73A90")]
		public VR_Controller()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class VehicleGearController : MonoBehaviour
	{
		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool cantGrab;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent m_driveGearChange;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent m_gearChange;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent m_gearPark;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent m_gearNeutral;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material m_defaultMat;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material m_redMat;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MeshRenderer m_P;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MeshRenderer m_R;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MeshRenderer m_N;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MeshRenderer m_D;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject m_snapPos;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text gearGrabText;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text tempGearText;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Text GearText;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Animator m_gearGuide;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SteeringControlHand left;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SteeringControlHand right;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Hand m_leftHandAnim;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Hand m_rightHandAnim;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public HandPoseId m_handPose;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float steeringRadius;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8864", Offset = "0x7C8864")]
		public GameObject Hand;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool HandSticked;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform TrackedController;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AudioSource m_audioSource;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int gear;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int gearTemp;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float angleStickyOffset;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float wheelLastSpeed;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float INERTIA;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float MAX_ROTATION;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float WHEEL_HAPTIC_FREQUENCY;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C889C", Offset = "0x7C889C")]
		public GameObject WheelBase;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C88D4", Offset = "0x7C88D4")]
		private Vector3 RelativePos;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C890C", Offset = "0x7C890C")]
		public float outputAngle;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8944", Offset = "0x7C8944")]
		private List<float> lastValues;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<float> Diffs;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<float> formulaDiffs;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<float> increment;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float m_break;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float offset;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float t;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool isLeft;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		private bool isRight;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
		private bool isLeftSticked;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x147")]
		private bool isRightSticked;

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xE73B40", Offset = "0xE73B40", VA = "0xE73B40")]
		private void Start()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xE73D14", Offset = "0xE73D14", VA = "0xE73D14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xE73DA8", Offset = "0xE73DA8", VA = "0xE73DA8")]
		public void OnStick(Transform TrackedController)
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xE73E0C", Offset = "0xE73E0C", VA = "0xE73E0C")]
		private void CalculateOffset()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xE740BC", Offset = "0xE740BC", VA = "0xE740BC")]
		public void OnUnStick()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xE73FE0", Offset = "0xE73FE0", VA = "0xE73FE0")]
		private float CalculateRawAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xE74140", Offset = "0xE74140", VA = "0xE74140")]
		private void Update()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xE73C2C", Offset = "0xE73C2C", VA = "0xE73C2C")]
		private void CreateArrays(int firstPparam)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xE74BDC", Offset = "0xE74BDC", VA = "0xE74BDC")]
		public float hookedAngles(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xE73ED0", Offset = "0xE73ED0", VA = "0xE73ED0")]
		public void SnapControllerPosition()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xE75028", Offset = "0xE75028", VA = "0xE75028")]
		public VehicleGearController()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class VehicleHandBreakController : MonoBehaviour
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool cantGrab;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject m_snapPos;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteeringControlHand left;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SteeringControlHand right;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Hand m_leftHandAnim;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Hand m_rightHandAnim;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HandPoseId m_handPose;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float steeringRadius;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C897C", Offset = "0x7C897C")]
		private GameObject Hand;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool HandSticked;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform TrackedController;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource m_audioSource;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int gear;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int gearTemp;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float angleStickyOffset;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float wheelLastSpeed;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float INERTIA;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float MAX_ROTATION;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float WHEEL_HAPTIC_FREQUENCY;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C89B4", Offset = "0x7C89B4")]
		public GameObject WheelBase;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C89EC", Offset = "0x7C89EC")]
		private Vector3 RelativePos;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8A24", Offset = "0x7C8A24")]
		public float outputAngle;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8A5C", Offset = "0x7C8A5C")]
		private List<float> lastValues;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<float> Diffs;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<float> formulaDiffs;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<float> increment;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UnityEvent m_HandBrakeUp;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public UnityEvent m_HandBrakeDown;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float offset;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float t;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool isLeft;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool isRight;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		private bool isLeftSticked;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
		private bool isRightSticked;

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xE75108", Offset = "0xE75108", VA = "0xE75108")]
		private void Start()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xE7533C", Offset = "0xE7533C", VA = "0xE7533C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xE753D0", Offset = "0xE753D0", VA = "0xE753D0")]
		public void OnStick(Transform TrackedController)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xE75434", Offset = "0xE75434", VA = "0xE75434")]
		private void CalculateOffset()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xE756E0", Offset = "0xE756E0", VA = "0xE756E0")]
		public void OnUnStick()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xE75608", Offset = "0xE75608", VA = "0xE75608")]
		private float CalculateRawAngle()
		{
			return default(float);
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xE75764", Offset = "0xE75764", VA = "0xE75764")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xE75254", Offset = "0xE75254", VA = "0xE75254")]
		private void CreateArrays(int firstPparam)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xE75D98", Offset = "0xE75D98", VA = "0xE75D98")]
		public float hookedAngles(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xE754F8", Offset = "0xE754F8", VA = "0xE754F8")]
		public void SnapControllerPosition()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xE761E4", Offset = "0xE761E4", VA = "0xE761E4")]
		public VehicleHandBreakController()
		{
		}
	}
}
namespace EVP
{
	[Token(Token = "0x2000139")]
	public class CameraControl : MonoBehaviour
	{
		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject exteriorSound;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject interiorSound;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject carCamera;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VehicleCameraController cameraController;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentCamera;

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x99529C", Offset = "0x99529C", VA = "0x99529C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x995310", Offset = "0x995310", VA = "0x995310")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x99546C", Offset = "0x99546C", VA = "0x99546C")]
		public CameraControl()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class EdysToRes : MonoBehaviour
	{
		[Token(Token = "0x2000399")]
		public enum ReleaseGasPedal
		{
			[Token(Token = "0x4001232")]
			True,
			[Token(Token = "0x4001233")]
			False
		}

		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C48", Offset = "0x7C5C48")]
		private sealed class <WaitForShifting>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EdysToRes <>4__this;

			[Token(Token = "0x1700017E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015B2")]
				[Address(RVA = "0x9991CC", Offset = "0x9991CC", VA = "0x9991CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015B4")]
				[Address(RVA = "0x999234", Offset = "0x999234", VA = "0x999234", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x999098", Offset = "0x999098", VA = "0x999098")]
			[DebuggerHidden]
			public <WaitForShifting>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x9990EC", Offset = "0x9990EC", VA = "0x9990EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x9990F0", Offset = "0x9990F0", VA = "0x9990F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x9991D4", Offset = "0x9991D4", VA = "0x9991D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RealisticEngineSound res;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VehicleAudio va;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VehicleController vc;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ReleaseGasPedal ReleaseGasPedalAtShifting;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float waitAtShifting;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioClip noneClip;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float lastGear;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool gearChanging;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject car;

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x998DA8", Offset = "0x998DA8", VA = "0x998DA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x998EF4", Offset = "0x998EF4", VA = "0x998EF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x999028", Offset = "0x999028", VA = "0x999028")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0A68", Offset = "0x7D0A68")]
		private IEnumerator WaitForShifting()
		{
			return null;
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x9990C4", Offset = "0x9990C4", VA = "0x9990C4")]
		public void ReleasePedalSetting()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x9990D8", Offset = "0x9990D8", VA = "0x9990D8")]
		public EdysToRes()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class EdysToResMob : MonoBehaviour
	{
		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C58", Offset = "0x7C5C58")]
		private sealed class <WaitForShifting>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EdysToResMob <>4__this;

			[Token(Token = "0x17000180")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015B8")]
				[Address(RVA = "0x999624", Offset = "0x999624", VA = "0x999624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000181")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015BA")]
				[Address(RVA = "0x99968C", Offset = "0x99968C", VA = "0x99968C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x999504", Offset = "0x999504", VA = "0x999504")]
			[DebuggerHidden]
			public <WaitForShifting>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x999544", Offset = "0x999544", VA = "0x999544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x999548", Offset = "0x999548", VA = "0x999548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x99962C", Offset = "0x99962C", VA = "0x99962C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RealisticEngineSound_mobile res_mob;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VehicleAudio va;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VehicleController vc;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioClip noneClip;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float lastGear;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool gearChanging;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject car;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float waitAtShifting;

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x99923C", Offset = "0x99923C", VA = "0x99923C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x999388", Offset = "0x999388", VA = "0x999388")]
		private void Update()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x999494", Offset = "0x999494", VA = "0x999494")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0ACC", Offset = "0x7D0ACC")]
		private IEnumerator WaitForShifting()
		{
			return null;
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x999530", Offset = "0x999530", VA = "0x999530")]
		public EdysToResMob()
		{
		}
	}
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C5044", Offset = "0x7C5044")]
	public class RigidbodyImpulse : MonoBehaviour
	{
		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float velocity;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 direction;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode key;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x9998E8", Offset = "0x9998E8", VA = "0x9998E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x999940", Offset = "0x999940", VA = "0x999940")]
		private void Update()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x999A20", Offset = "0x999A20", VA = "0x999A20")]
		public RigidbodyImpulse()
		{
		}
	}
	[Token(Token = "0x200013D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C50A8", Offset = "0x7C50A8")]
	public class RigidbodyPause : MonoBehaviour
	{
		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool pause;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode key;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_pausedState;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_velocity;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_angularVelocity;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VehicleController m_vehicle;

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x999AA8", Offset = "0x999AA8", VA = "0x999AA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x999B18", Offset = "0x999B18", VA = "0x999B18")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x999CB4", Offset = "0x999CB4", VA = "0x999CB4")]
		private void DisableWheelColliders()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x999D60", Offset = "0x999D60", VA = "0x999D60")]
		private void EnableWheelColliders()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x999E0C", Offset = "0x999E0C", VA = "0x999E0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x999E44", Offset = "0x999E44", VA = "0x999E44")]
		public RigidbodyPause()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013E")]
	public class GroundMaterial
	{
		[Token(Token = "0x200039C")]
		public enum SurfaceType
		{
			[Token(Token = "0x400123B")]
			Hard,
			[Token(Token = "0x400123C")]
			Soft
		}

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicMaterial physicMaterial;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float grip;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float drag;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TireMarksRenderer marksRenderer;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TireParticleEmitter particleEmitter;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SurfaceType surfaceType;

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x999694", Offset = "0x999694", VA = "0x999694")]
		public GroundMaterial()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class GroundMaterialManager : MonoBehaviour
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GroundMaterial[] groundMaterials;

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x9996A8", Offset = "0x9996A8", VA = "0x9996A8")]
		public GroundMaterial GetGroundMaterial(PhysicMaterial physicMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x9997B0", Offset = "0x9997B0", VA = "0x9997B0")]
		public GroundMaterialManager()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class MarkPoint
	{
		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 normal;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector4 tangent;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 posl;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 posr;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float intensity;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int lastIndex;

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x999810", Offset = "0x999810", VA = "0x999810")]
		public MarkPoint()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class TireMarksRenderer : MonoBehaviour
	{
		[Token(Token = "0x200039D")]
		public enum Mode
		{
			[Token(Token = "0x400123E")]
			PressureAndSkid,
			[Token(Token = "0x400123F")]
			PressureOnly
		}

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode mode;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8AB4", Offset = "0x7C8AB4")]
		public float pressureBoost;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8ACC", Offset = "0x7C8ACC")]
		public int maxMarks;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minDistance;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float groundOffset;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float textureOffsetY;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8AE0", Offset = "0x7C8AE0")]
		public float fadeOutRange;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material material;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_markCount;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_markArraySize;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MarkPoint[] m_markPoints;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CommonTools.BiasLerpContext m_biasCtx;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_segmentsUpdated;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_segmentCount;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_segmentArraySize;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh m_mesh;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] m_vertices;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] m_normals;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector4[] m_tangents;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Color[] m_colors;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2[] m_uvs;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int[] m_triangles;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2[] m_values;

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x99C584", Offset = "0x99C584", VA = "0x99C584")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x99CBE4", Offset = "0x99CBE4", VA = "0x99CBE4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x99CD5C", Offset = "0x99CD5C", VA = "0x99CD5C")]
		public int AddMark(Vector3 pos, Vector3 normal, float pressureRatio, float skidRatio, float width, int lastIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x99D5E8", Offset = "0x99D5E8", VA = "0x99D5E8")]
		public void Clear()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x99D264", Offset = "0x99D264", VA = "0x99D264")]
		private void AddSegment(MarkPoint first, MarkPoint second)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x99D6F8", Offset = "0x99D6F8", VA = "0x99D6F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x99D8D4", Offset = "0x99D8D4", VA = "0x99D8D4")]
		public TireMarksRenderer()
		{
		}
	}
	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C510C", Offset = "0x7C510C")]
	public class TireParticleEmitter : MonoBehaviour
	{
		[Token(Token = "0x200039E")]
		public enum Mode
		{
			[Token(Token = "0x4001241")]
			PressureAndSkid,
			[Token(Token = "0x4001242")]
			PressureAndVelocity
		}

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode mode;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float emissionRate;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8AF8", Offset = "0x7C8AF8")]
		public float emissionShuffle;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxLifetime;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minVelocity;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxVelocity;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8B10", Offset = "0x7C8B10")]
		public float tireVelocityRatio;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color Color1;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color Color2;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool randomColor;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ParticleSystem m_particles;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem.EmitParams m_emitParams;

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x99D958", Offset = "0x99D958", VA = "0x99D958")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x99D9BC", Offset = "0x99D9BC", VA = "0x99D9BC")]
		public float EmitParticle(Vector3 position, Vector3 wheelVelocity, Vector3 tireVelocity, float pressureRatio, float intensityRatio, float lastParticleTime)
		{
			return default(float);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x99DE24", Offset = "0x99DE24", VA = "0x99DE24")]
		public TireParticleEmitter()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public static class CommonTools
	{
		[Token(Token = "0x200039F")]
		public class BiasLerpContext
		{
			[Token(Token = "0x4001243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float lastBias;

			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float lastExponent;

			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x998D98", Offset = "0x998D98", VA = "0x998D98")]
			public BiasLerpContext()
			{
			}
		}

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Color> m_colors;

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x997AA8", Offset = "0x997AA8", VA = "0x997AA8")]
		static CommonTools()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x997D3C", Offset = "0x997D3C", VA = "0x997D3C")]
		public static int HexToDecimal(char ch)
		{
			return default(int);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x997D68", Offset = "0x997D68", VA = "0x997D68")]
		public static Color ParseColor(string col)
		{
			return default(Color);
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x9980F8", Offset = "0x9980F8", VA = "0x9980F8")]
		public static float ClampAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x998130", Offset = "0x998130", VA = "0x998130")]
		public static float ClampAngle360(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x998164", Offset = "0x998164", VA = "0x998164")]
		public static void DrawCrossMark(Vector3 pos, Transform trans, Color col, float length = 0.1f)
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x998454", Offset = "0x998454", VA = "0x998454")]
		public static float Lin2Log(float val)
		{
			return default(float);
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x9984E0", Offset = "0x9984E0", VA = "0x9984E0")]
		public static Vector3 Lin2Log(Vector3 val)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600074B")]
		public static T CloneObject<T>(T source)
		{
			return (T)null;
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x9985BC", Offset = "0x9985BC", VA = "0x9985BC")]
		public static float FastLerp(float from, float to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x9985CC", Offset = "0x9985CC", VA = "0x9985CC")]
		public static float LinearLerp(float x0, float y0, float x1, float y1, float x)
		{
			return default(float);
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x9985E8", Offset = "0x9985E8", VA = "0x9985E8")]
		public static float LinearLerp(Vector2 from, Vector2 to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x998688", Offset = "0x998688", VA = "0x998688")]
		public static float CubicLerp(float x0, float y0, float x1, float y1, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x9986C8", Offset = "0x9986C8", VA = "0x9986C8")]
		public static float CubicLerp(Vector2 from, Vector2 to, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x99878C", Offset = "0x99878C", VA = "0x99878C")]
		public static float TangentLerp(float x0, float y0, float x1, float y1, float a, float b, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x9987FC", Offset = "0x9987FC", VA = "0x9987FC")]
		public static float TangentLerp(Vector2 from, Vector2 to, float a, float b, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x998900", Offset = "0x998900", VA = "0x998900")]
		public static float HermiteLerp(float x0, float y0, float x1, float y1, float outTangent, float inTangent, float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x998960", Offset = "0x998960", VA = "0x998960")]
		private static float BiasWithContext(float x, float bias, BiasLerpContext context)
		{
			return default(float);
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x998A98", Offset = "0x998A98", VA = "0x998A98")]
		private static float BiasRaw(float x, float bias)
		{
			return default(float);
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x998B7C", Offset = "0x998B7C", VA = "0x998B7C")]
		public static float BiasedLerp(float x, float bias)
		{
			return default(float);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x998C84", Offset = "0x998C84", VA = "0x998C84")]
		public static float BiasedLerp(float x, float bias, BiasLerpContext context)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000144")]
	public class SceneTools : MonoBehaviour
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool slowTimeMode;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float slowTime;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode hotkeyReset;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode hotkeyTime;

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x999ED4", Offset = "0x999ED4", VA = "0x999ED4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x999ED8", Offset = "0x999ED8", VA = "0x999ED8")]
		private void Update()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x999F44", Offset = "0x999F44", VA = "0x999F44")]
		public SceneTools()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class TextureCanvas
	{
		[Token(Token = "0x20003A0")]
		public enum LineType
		{
			[Token(Token = "0x4001246")]
			Solid,
			[Token(Token = "0x4001247")]
			Dotted,
			[Token(Token = "0x4001248")]
			Dashed
		}

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Texture2D m_texture;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_pixelsWd;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_pixelsHt;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_dirty;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color32[] m_pixels;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color32[] m_buffer;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rect m_canvasRect;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_scaleX;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_scaleY;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rect m_clipArea;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_pixelsXMin;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_pixelsXMax;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_pixelsYMin;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_pixelsYMax;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color32 m_color;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_alpha;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_srcAlpha;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_dstAlpha;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8B28", Offset = "0x7C8B28")]
		private bool <alphaBlend>k__BackingField;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8B38", Offset = "0x7C8B38")]
		private LineType <lineType>k__BackingField;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8B48", Offset = "0x7C8B48")]
		private int <dotInterval>k__BackingField;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8B58", Offset = "0x7C8B58")]
		private int <dashInterval>k__BackingField;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_moveX;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_moveY;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_step;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C8B68", Offset = "0x7C8B68")]
		private int <functionResolution>k__BackingField;

		[Token(Token = "0x17000033")]
		public Rect rect
		{
			[Token(Token = "0x600075F")]
			[Address(RVA = "0x99A304", Offset = "0x99A304", VA = "0x99A304")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6000760")]
			[Address(RVA = "0x99A0CC", Offset = "0x99A0CC", VA = "0x99A0CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public Rect clipArea
		{
			[Token(Token = "0x6000761")]
			[Address(RVA = "0x99A4DC", Offset = "0x99A4DC", VA = "0x99A4DC")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6000762")]
			[Address(RVA = "0x99A310", Offset = "0x99A310", VA = "0x99A310")]
			set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public Color32 color
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0x99A720", Offset = "0x99A720", VA = "0x99A720")]
			get
			{
				return default(Color32);
			}
			[Token(Token = "0x600076A")]
			[Address(RVA = "0x99A728", Offset = "0x99A728", VA = "0x99A728")]
			set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public float alpha
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0x99A7F4", Offset = "0x99A7F4", VA = "0x99A7F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600076C")]
			[Address(RVA = "0x99A7FC", Offset = "0x99A7FC", VA = "0x99A7FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public bool alphaBlend
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x99A804", Offset = "0x99A804", VA = "0x99A804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B30", Offset = "0x7D0B30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600076E")]
			[Address(RVA = "0x99A80C", Offset = "0x99A80C", VA = "0x99A80C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B40", Offset = "0x7D0B40")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public LineType lineType
		{
			[Token(Token = "0x600076F")]
			[Address(RVA = "0x99A818", Offset = "0x99A818", VA = "0x99A818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B50", Offset = "0x7D0B50")]
			get
			{
				return default(LineType);
			}
			[Token(Token = "0x6000770")]
			[Address(RVA = "0x99A820", Offset = "0x99A820", VA = "0x99A820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B60", Offset = "0x7D0B60")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public int dotInterval
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0x99A828", Offset = "0x99A828", VA = "0x99A828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B70", Offset = "0x7D0B70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000772")]
			[Address(RVA = "0x99A830", Offset = "0x99A830", VA = "0x99A830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B80", Offset = "0x7D0B80")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public int dashInterval
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0x99A838", Offset = "0x99A838", VA = "0x99A838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0B90", Offset = "0x7D0B90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000774")]
			[Address(RVA = "0x99A840", Offset = "0x99A840", VA = "0x99A840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BA0", Offset = "0x7D0BA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public int functionResolution
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x99BDC4", Offset = "0x99BDC4", VA = "0x99BDC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BB0", Offset = "0x7D0BB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000784")]
			[Address(RVA = "0x99BDCC", Offset = "0x99BDCC", VA = "0x99BDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BC0", Offset = "0x7D0BC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public Texture2D texture
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0x99C410", Offset = "0x99C410", VA = "0x99C410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x999F64", Offset = "0x999F64", VA = "0x999F64")]
		public TextureCanvas(int pixelsWd, int pixelsHt, Rect canvasRect)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x99A148", Offset = "0x99A148", VA = "0x99A148")]
		public TextureCanvas(int pixelsWd, int pixelsHt, float canvasWd, float canvasHt)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0x99A1F8", Offset = "0x99A1F8", VA = "0x99A1F8")]
		public TextureCanvas(int pixelsWd, int pixelsHt)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x99A298", Offset = "0x99A298", VA = "0x99A298")]
		public void DestroyTexture()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x99A610", Offset = "0x99A610", VA = "0x99A610")]
		public float Pixels2CanvasX(int pixels)
		{
			return default(float);
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x99A620", Offset = "0x99A620", VA = "0x99A620")]
		public float Pixels2CanvasY(int pixels)
		{
			return default(float);
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x99A4E8", Offset = "0x99A4E8", VA = "0x99A4E8")]
		private int GetPixelX(float x)
		{
			return default(int);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x99A57C", Offset = "0x99A57C", VA = "0x99A57C")]
		private int GetPixelY(float y)
		{
			return default(int);
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x99A630", Offset = "0x99A630", VA = "0x99A630")]
		private int GetPixelWidth(float width)
		{
			return default(int);
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x99A6A8", Offset = "0x99A6A8", VA = "0x99A6A8")]
		private int GetPixelHeight(float height)
		{
			return default(int);
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x99A848", Offset = "0x99A848", VA = "0x99A848")]
		public void MoveTo(float x0, float y0)
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x99A854", Offset = "0x99A854", VA = "0x99A854")]
		public void LineTo(float x1, float y1)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x99ACA0", Offset = "0x99ACA0", VA = "0x99ACA0")]
		public void Line(float x0, float y0, float x1, float y1)
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x99ACB4", Offset = "0x99ACB4", VA = "0x99ACB4")]
		public void HorizontalLine(float y)
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x99AEC4", Offset = "0x99AEC4", VA = "0x99AEC4")]
		public void VerticalLine(float x)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x99B0CC", Offset = "0x99B0CC", VA = "0x99B0CC")]
		public void Circumference(float x, float y, float radius)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x99B480", Offset = "0x99B480", VA = "0x99B480")]
		public void Circle(float x, float y, float radius)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x99B894", Offset = "0x99B894", VA = "0x99B894")]
		public void Ellipse(float x, float y, float rx, float ry)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x99B92C", Offset = "0x99B92C", VA = "0x99B92C")]
		public void FillEllipse(float x, float y, float rx, float ry)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x99B9C4", Offset = "0x99B9C4", VA = "0x99B9C4")]
		public void Clear()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0x99BA34", Offset = "0x99BA34", VA = "0x99BA34")]
		public void Grid(float stepX, float stepY)
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x99BB10", Offset = "0x99BB10", VA = "0x99BB10")]
		public void Dot(float x, float y)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x99BC58", Offset = "0x99BC58", VA = "0x99BC58")]
		public void Cross(float x, float y, int radiusX, int radiusY)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x99BD0C", Offset = "0x99BD0C", VA = "0x99BD0C")]
		public void FillRect(float x, float y, float width, float height)
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x99BDD4", Offset = "0x99BDD4", VA = "0x99BDD4")]
		public void Function(Func<float, float> func, float x0, float x1)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x99BEE0", Offset = "0x99BEE0", VA = "0x99BEE0")]
		public void Function(Func<float, float> func)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x99BF40", Offset = "0x99BF40", VA = "0x99BF40")]
		public void SolidFunction(Func<float, float> func, float x0, float x1)
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x99C044", Offset = "0x99C044", VA = "0x99C044")]
		public void SolidFunction(Func<float, float> func)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x99C0A4", Offset = "0x99C0A4", VA = "0x99C0A4")]
		public void Save()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x99C128", Offset = "0x99C128", VA = "0x99C128")]
		public void Restore()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x99C164", Offset = "0x99C164", VA = "0x99C164")]
		public void GUIDraw(int x, int y)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x99C274", Offset = "0x99C274", VA = "0x99C274")]
		public void GUIStretchDraw(int x, int y, int width, int height)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x99C33C", Offset = "0x99C33C", VA = "0x99C33C")]
		public void GUIStretchDraw(int x, int y, int width)
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x99C220", Offset = "0x99C220", VA = "0x99C220")]
		private void ApplyChanges()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x99A000", Offset = "0x99A000", VA = "0x99A000")]
		private void SetupCanvas(int pixelsWd, int pixelsHt)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x99A730", Offset = "0x99A730", VA = "0x99A730")]
		private void SetupAlpha()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x99C434", Offset = "0x99C434", VA = "0x99C434")]
		private Color32 GetAlphaBlendedPixel(Color32 dst)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x99C504", Offset = "0x99C504", VA = "0x99C504")]
		private bool CheckForPixel()
		{
			return default(bool);
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x99BBB0", Offset = "0x99BBB0", VA = "0x99BBB0")]
		private void TexPixel(int x, int y)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x99AB08", Offset = "0x99AB08", VA = "0x99AB08")]
		private void TexLine(int x0, int y0, int x1, int y1)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x99AF00", Offset = "0x99AF00", VA = "0x99AF00")]
		private void TexSegmentV(int x, int y0, int y1)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x99AD00", Offset = "0x99AD00", VA = "0x99AD00")]
		private void TexSegmentH(int x0, int x1, int y)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x99B14C", Offset = "0x99B14C", VA = "0x99B14C")]
		private void TexEllipse(int cx, int cy, int rx, int ry)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x99B500", Offset = "0x99B500", VA = "0x99B500")]
		private void TexFillEllipse(int cx, int cy, int rx, int ry)
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class WheelAudioData
	{
		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lastDownforce;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float lastWheelBumpTime;

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x9AF048", Offset = "0x9AF048", VA = "0x9AF048")]
		public WheelAudioData()
		{
		}
	}
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C5170", Offset = "0x7C5170")]
	public class VehicleAudio : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003A1")]
		public class Engine
		{
			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource audioSource;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD5E4", Offset = "0x7CD5E4")]
			public float idleRpm;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float idlePitch;

			[Token(Token = "0x400124C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float idleVolume;

			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD5F8", Offset = "0x7CD5F8")]
			public float maxRpm;

			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxPitch;

			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float maxVolume;

			[Token(Token = "0x4001250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD60C", Offset = "0x7CD60C")]
			public float throttleRpmBoost;

			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float throttleVolumeBoost;

			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD620", Offset = "0x7CD620")]
			public float wheelsToEngineRatio;

			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int gears;

			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float gearDownRpm;

			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float gearUpRpm;

			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD634", Offset = "0x7CD634")]
			public float gearUpRpmRate;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float gearDownRpmRate;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float volumeChangeRateUp;

			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float volumeChangeRateDown;

			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x9A1728", Offset = "0x9A1728", VA = "0x9A1728")]
			public Engine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A2")]
		public class EngineExtras
		{
			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource turboAudioSource;

			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float turboMinRpm;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float turboMaxRpm;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD648", Offset = "0x7CD648")]
			public float turboMinPitch;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD660", Offset = "0x7CD660")]
			public float turboMaxPitch;

			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD678", Offset = "0x7CD678")]
			public float turboMaxVolume;

			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool turboRequiresThrottle;

			[Token(Token = "0x4001261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD690", Offset = "0x7CD690")]
			public AudioClip turboDumpClip;

			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float turboDumpMinRpm;

			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float turboDumpMinInterval;

			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float turboDumpMinThrottleTime;

			[Token(Token = "0x4001265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float turboDumpVolume;

			[Token(Token = "0x4001266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD6A4", Offset = "0x7CD6A4")]
			public AudioSource transmissionAudioSource;

			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD6B8", Offset = "0x7CD6B8")]
			public float transmissionMaxRatio;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD6D4", Offset = "0x7CD6D4")]
			public float transmissionMinPitch;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD6EC", Offset = "0x7CD6EC")]
			public float transmissionMaxPitch;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD704", Offset = "0x7CD704")]
			public float transmissionMinVolume;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD71C", Offset = "0x7CD71C")]
			public float transmissionMaxVolume;

			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x9A176C", Offset = "0x9A176C", VA = "0x9A176C")]
			public EngineExtras()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A3")]
		public class Wheels
		{
			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource skidAudioSource;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float skidMinSlip;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float skidMaxSlip;

			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD734", Offset = "0x7CD734")]
			public float skidMinPitch;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD74C", Offset = "0x7CD74C")]
			public float skidMaxPitch;

			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD764", Offset = "0x7CD764")]
			public float skidMaxVolume;

			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD77C", Offset = "0x7CD77C")]
			public AudioSource offroadAudioSource;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float offroadMinSpeed;

			[Token(Token = "0x4001274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float offroadMaxSpeed;

			[Token(Token = "0x4001275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD790", Offset = "0x7CD790")]
			public float offroadMinPitch;

			[Token(Token = "0x4001276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD7A8", Offset = "0x7CD7A8")]
			public float offroadMaxPitch;

			[Token(Token = "0x4001277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD7C0", Offset = "0x7CD7C0")]
			public float offroadMinVolume;

			[Token(Token = "0x4001278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD7D8", Offset = "0x7CD7D8")]
			public float offroadMaxVolume;

			[Token(Token = "0x4001279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD7F0", Offset = "0x7CD7F0")]
			public AudioClip bumpAudioClip;

			[Token(Token = "0x400127A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float bumpMinForceDelta;

			[Token(Token = "0x400127B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float bumpMaxForceDelta;

			[Token(Token = "0x400127C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD804", Offset = "0x7CD804")]
			public float bumpMinVolume;

			[Token(Token = "0x400127D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD81C", Offset = "0x7CD81C")]
			public float bumpMaxVolume;

			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x9A17D0", Offset = "0x9A17D0", VA = "0x9A17D0")]
			public Wheels()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A4")]
		public class Impacts
		{
			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD834", Offset = "0x7CD834")]
			public AudioClip hardImpactAudioClip;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip softImpactAudioClip;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float minSpeed;

			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float maxSpeed;

			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD848", Offset = "0x7CD848")]
			public float minPitch;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD860", Offset = "0x7CD860")]
			public float maxPitch;

			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD878", Offset = "0x7CD878")]
			public float randomPitch;

			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD890", Offset = "0x7CD890")]
			public float minVolume;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD8A8", Offset = "0x7CD8A8")]
			public float maxVolume;

			[Token(Token = "0x4001287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD8C0", Offset = "0x7CD8C0")]
			public float randomVolume;

			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x9A17B4", Offset = "0x9A17B4", VA = "0x9A17B4")]
			public Impacts()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A5")]
		public class Drags
		{
			[Token(Token = "0x4001288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource hardDragAudioSource;

			[Token(Token = "0x4001289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioSource softDragAudioSource;

			[Token(Token = "0x400128A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float minSpeed;

			[Token(Token = "0x400128B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float maxSpeed;

			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD8D8", Offset = "0x7CD8D8")]
			public float minPitch;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD8F0", Offset = "0x7CD8F0")]
			public float maxPitch;

			[Token(Token = "0x400128E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD908", Offset = "0x7CD908")]
			public float minVolume;

			[Token(Token = "0x400128F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD920", Offset = "0x7CD920")]
			public float maxVolume;

			[Token(Token = "0x4001290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7CD938", Offset = "0x7CD938")]
			public AudioClip scratchAudioClip;

			[Token(Token = "0x4001291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float scratchRandomThreshold;

			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float scratchMinSpeed;

			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float scratchMinInterval;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD94C", Offset = "0x7CD94C")]
			public float scratchMinPitch;

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD964", Offset = "0x7CD964")]
			public float scratchMaxPitch;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD97C", Offset = "0x7CD97C")]
			public float scratchMinVolume;

			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD994", Offset = "0x7CD994")]
			public float scratchMaxVolume;

			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x9A16DC", Offset = "0x9A16DC", VA = "0x9A16DC")]
			public Drags()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003A6")]
		public class Wind
		{
			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource windAudioSource;

			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float minSpeed;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float maxSpeed;

			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD9AC", Offset = "0x7CD9AC")]
			public float minPitch;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD9C4", Offset = "0x7CD9C4")]
			public float maxPitch;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD9DC", Offset = "0x7CD9DC")]
			public float maxVolume;

			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x9A1818", Offset = "0x9A1818", VA = "0x9A1818")]
			public Wind()
			{
			}
		}

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VehicleGearController m_gearScript;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VehicleHandBreakController m_handBrakeScript;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7C8B78", Offset = "0x7C8B78")]
		public AudioSource audioClipTemplate;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8BB0", Offset = "0x7C8BB0")]
		public Engine engine;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8BC4", Offset = "0x7C8BC4")]
		public EngineExtras engineExtras;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8BD8", Offset = "0x7C8BD8")]
		public Wheels wheels;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8BEC", Offset = "0x7C8BEC")]
		public Impacts impacts;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8C00", Offset = "0x7C8C00")]
		public Drags drags;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8C14", Offset = "0x7C8C14")]
		public Wind wind;

		[NonSerialized]
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float skidRatioChangeRate;

		[NonSerialized]
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float offroadSpeedChangeRate;

		[NonSerialized]
		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float offroadCutoutSpeed;

		[NonSerialized]
		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float dragCutoutSpeed;

		[NonSerialized]
		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float turboRatioChangeRate;

		[NonSerialized]
		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float wheelsRpmChangeRateLimit;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private VehicleController m_vehicle;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_engineRpm;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_engineThrottleRpm;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_engineRpmDamp;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_wheelsRpm;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_gear;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_lastGear;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_skidRatio;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_offroadSpeed;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_lastScratchTime;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_turboRatio;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_lastTurboDumpTime;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float m_lastThrottleInput;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_lastThrottlePressedTime;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private WheelAudioData[] m_audioData;

		[Token(Token = "0x1700003D")]
		public int simulatedGear
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0x99DE7C", Offset = "0x99DE7C", VA = "0x99DE7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700003E")]
		public float simulatedEngineRpm
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0x99DE84", Offset = "0x99DE84", VA = "0x99DE84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x99DE8C", Offset = "0x99DE8C", VA = "0x99DE8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x99DFA8", Offset = "0x99DFA8", VA = "0x99DFA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x99E048", Offset = "0x99E048", VA = "0x99E048")]
		private void Update()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x99F3C8", Offset = "0x99F3C8", VA = "0x99F3C8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x99F438", Offset = "0x99F438", VA = "0x99F438")]
		private void InitializeAudioData()
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x99E24C", Offset = "0x99E24C", VA = "0x99E24C")]
		private void DoEngineAudio()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x99E90C", Offset = "0x99E90C", VA = "0x99E90C")]
		private void DoEngineExtraAudio()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x99F164", Offset = "0x99F164", VA = "0x99F164")]
		private void DoTireAudio()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x99FC6C", Offset = "0x99FC6C", VA = "0x99FC6C")]
		private void DoImpactAudio()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x99EE20", Offset = "0x99EE20", VA = "0x99EE20")]
		private void DoBodyDragAudio()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x99F538", Offset = "0x99F538", VA = "0x99F538")]
		private void DoWheelBumpAudio()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x99F074", Offset = "0x99F074", VA = "0x99F074")]
		private void DoWindAudio()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x99DFAC", Offset = "0x99DFAC", VA = "0x99DFAC")]
		private void StopAllAudioSources()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x9A03BC", Offset = "0x9A03BC", VA = "0x9A03BC")]
		private void StopAudio(AudioSource audio)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x99F8D0", Offset = "0x99F8D0", VA = "0x99F8D0")]
		private void ProcessContinuousAudio(AudioSource audio, float ratio, float minPitch, float maxPitch, float minVolume, float maxVolume)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x99F6DC", Offset = "0x99F6DC", VA = "0x99F6DC")]
		private void ProcessContinuousAudioPitch(AudioSource audio, float ratio, float minPitch, float maxPitch)
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x99F800", Offset = "0x99F800", VA = "0x99F800")]
		private void ProcessVolume(AudioSource audio, float volume, float changeRateUp, float changeRateDown)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x99FA30", Offset = "0x99FA30", VA = "0x99FA30")]
		private void ProcessSpeedBasedAudio(AudioSource audio, float speed, float cutoutSpeed, float minSpeed, float maxSpeed, float cutoutPitch, float minPitch, float maxPitch, float minVolume, float maxVolume)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x9A02D8", Offset = "0x9A02D8", VA = "0x9A02D8")]
		private void ProcessWheelBumpAudio(float suspensionForceDelta, Vector3 position)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x99FA28", Offset = "0x99FA28", VA = "0x99FA28")]
		private void PlayOneTime(AudioClip clip, Vector3 position, float volume)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x99FF40", Offset = "0x99FF40", VA = "0x99FF40")]
		private void PlayOneTime(AudioClip clip, Vector3 position, float volume, float pitch)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x99DFA4", Offset = "0x99DFA4", VA = "0x99DFA4")]
		private void VerifyAudioSources()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x9A044C", Offset = "0x9A044C", VA = "0x9A044C")]
		private void VerifyAudioSource(ref AudioSource audioSource)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x9A05A4", Offset = "0x9A05A4", VA = "0x9A05A4")]
		public VehicleAudio()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class CameraMode
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode hotKey;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VehicleCameraController controller;

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x9967D0", Offset = "0x9967D0", VA = "0x9967D0", Slot = "4")]
		public virtual void SetViewConfig(VehicleViewConfig viewConfig)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x9967D4", Offset = "0x9967D4", VA = "0x9967D4", Slot = "5")]
		public virtual void Initialize(Transform self)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x9967D8", Offset = "0x9967D8", VA = "0x9967D8", Slot = "6")]
		public virtual void OnEnable(Transform self, Transform target, Vector3 targetOffset)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x9967DC", Offset = "0x9967DC", VA = "0x9967DC", Slot = "7")]
		public virtual void Reset(Transform self, Transform target, Vector3 targetOffset)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x9967E0", Offset = "0x9967E0", VA = "0x9967E0", Slot = "8")]
		public virtual void Update(Transform self, Transform target, Vector3 targetOffset, float deltaTime)
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x9967E4", Offset = "0x9967E4", VA = "0x9967E4", Slot = "9")]
		public virtual void OnDisable(Transform self, Transform target, Vector3 targetOffset)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x995C0C", Offset = "0x995C0C", VA = "0x995C0C")]
		public static float GetInputForAxis(string axisName)
		{
			return default(float);
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x995294", Offset = "0x995294", VA = "0x995294")]
		public CameraMode()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000149")]
	public class CameraAttachTo : CameraMode
	{
		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform attachTarget;

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x995164", Offset = "0x995164", VA = "0x995164", Slot = "4")]
		public override void SetViewConfig(VehicleViewConfig viewConfig)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x995180", Offset = "0x995180", VA = "0x995180", Slot = "8")]
		public override void Update(Transform self, Transform target, Vector3 targetOffset, float deltaTime)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x99528C", Offset = "0x99528C", VA = "0x99528C")]
		public CameraAttachTo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014A")]
	public class CameraSmoothFollow : CameraMode
	{
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float height;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float viewHeightRatio;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lookBehind;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8C28", Offset = "0x7C8C28")]
		public float heightDamping;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationDamping;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8C3C", Offset = "0x7C8C3C")]
		public bool followVelocity;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float velocityDamping;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VehicleController m_vehicle;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_camera;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_smoothLastPos;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_smoothVelocity;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_smoothTargetAngle;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_selfRotationAngle;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_selfHeight;

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x9970A8", Offset = "0x9970A8", VA = "0x9970A8", Slot = "4")]
		public override void SetViewConfig(VehicleViewConfig viewConfig)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x9970D4", Offset = "0x9970D4", VA = "0x9970D4", Slot = "5")]
		public override void Initialize(Transform self)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x997140", Offset = "0x997140", VA = "0x997140", Slot = "7")]
		public override void Reset(Transform self, Transform target, Vector3 targetOffset)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x9972BC", Offset = "0x9972BC", VA = "0x9972BC", Slot = "8")]
		public override void Update(Transform self, Transform target, Vector3 targetOffset, float deltaTime)
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x9979F0", Offset = "0x9979F0", VA = "0x9979F0")]
		public CameraSmoothFollow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014B")]
	public class CameraMouseOrbit : CameraMode
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8C50", Offset = "0x7C8C50")]
		public float minVerticalAngle;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxVerticalAngle;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float horizontalSpeed;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float verticalSpeed;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float orbitDamping;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8C64", Offset = "0x7C8C64")]
		public float minDistance;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxDistance;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float distanceSpeed;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float distanceDamping;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8C78", Offset = "0x7C8C78")]
		public string horizontalAxis;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string verticalAxis;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string distanceAxis;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VehicleController m_vehicle;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Camera m_camera;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_orbitX;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_orbitY;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_orbitDistance;

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x9967E8", Offset = "0x9967E8", VA = "0x9967E8", Slot = "4")]
		public override void SetViewConfig(VehicleViewConfig viewConfig)
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x996814", Offset = "0x996814", VA = "0x996814", Slot = "5")]
		public override void Initialize(Transform self)
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x996898", Offset = "0x996898", VA = "0x996898", Slot = "7")]
		public override void Reset(Transform self, Transform target, Vector3 targetOffset)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x996938", Offset = "0x996938", VA = "0x996938", Slot = "8")]
		public override void Update(Transform self, Transform target, Vector3 targetOffset, float deltaTime)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x997010", Offset = "0x997010", VA = "0x997010")]
		public CameraMouseOrbit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014C")]
	public class CameraLookAt : CameraMode
	{
		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float damping;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8C8C", Offset = "0x7C8C8C")]
		public float minFov;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxFov;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fovSpeed;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fovDamping;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string fovAxis;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8CA0", Offset = "0x7C8CA0")]
		public bool autoFov;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float targetRadius;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float targetRadiusSpeed;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8CB4", Offset = "0x7C8CB4")]
		public bool adjustNearPlane;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float nearPlaneAtMinFov;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8CC8", Offset = "0x7C8CC8")]
		public bool enableMovement;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float movementSpeed;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float movementDamping;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string forwardAxis;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string sidewaysAxis;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string verticalAxis;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Camera m_camera;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_position;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_fov;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_savedFov;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_savedNearPlane;

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x995DC0", Offset = "0x995DC0", VA = "0x995DC0", Slot = "4")]
		public override void SetViewConfig(VehicleViewConfig viewConfig)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x995DDC", Offset = "0x995DDC", VA = "0x995DDC", Slot = "5")]
		public override void Initialize(Transform self)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x995E48", Offset = "0x995E48", VA = "0x995E48", Slot = "6")]
		public override void OnEnable(Transform self, Transform target, Vector3 targetOffset)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x995F24", Offset = "0x995F24", VA = "0x995F24", Slot = "8")]
		public override void Update(Transform self, Transform target, Vector3 targetOffset, float deltaTime)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x996688", Offset = "0x996688", VA = "0x996688", Slot = "9")]
		public override void OnDisable(Transform self, Transform target, Vector3 targetOffset)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x996734", Offset = "0x996734", VA = "0x996734")]
		public CameraLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014D")]
	public class CameraFree : CameraMode
	{
		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minVerticalAngle;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxVerticalAngle;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float horizontalSpeed;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float verticalSpeed;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float damping;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8CDC", Offset = "0x7C8CDC")]
		public bool adjustFov;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minFov;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxFov;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float fovSpeed;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float fovDamping;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8CF0", Offset = "0x7C8CF0")]
		public bool adjustNearPlane;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float nearPlaneAtMinFov;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8D04", Offset = "0x7C8D04")]
		public string horizontalAxis;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string verticalAxis;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string fovAxis;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8D18", Offset = "0x7C8D18")]
		public bool enableMovement;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float movementSpeed;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float movementDamping;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string forwardAxis;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string sidewaysAxis;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string upwardsAxis;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Camera m_camera;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 m_position;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_fov;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_savedFov;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float m_savedNearPlane;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_horizontal;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_vertical;

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x995474", Offset = "0x995474", VA = "0x995474", Slot = "5")]
		public override void Initialize(Transform self)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x995530", Offset = "0x995530", VA = "0x995530", Slot = "6")]
		public override void OnEnable(Transform self, Transform target, Vector3 targetOffset)
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x995620", Offset = "0x995620", VA = "0x995620", Slot = "8")]
		public override void Update(Transform self, Transform target, Vector3 targetOffset, float deltaTime)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x995C4C", Offset = "0x995C4C", VA = "0x995C4C", Slot = "9")]
		public override void OnDisable(Transform self, Transform target, Vector3 targetOffset)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x995CF8", Offset = "0x995CF8", VA = "0x995CF8")]
		public CameraFree()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class VehicleCameraController : MonoBehaviour
	{
		[Token(Token = "0x20003A7")]
		public enum Mode
		{
			[Token(Token = "0x400129F")]
			AttachTo,
			[Token(Token = "0x40012A0")]
			SmoothFollow,
			[Token(Token = "0x40012A1")]
			MouseOrbit,
			[Token(Token = "0x40012A2")]
			LookAt,
			[Token(Token = "0x40012A3")]
			Free
		}

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode mode;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool followCenterOfMass;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool useUnscaledTime;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8D2C", Offset = "0x7C8D2C")]
		public bool cameraCollisions;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask collisionMask;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8D40", Offset = "0x7C8D40")]
		public KeyCode changeCameraKey;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C8D54", Offset = "0x7C8D54")]
		public CameraAttachTo attachTo;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C8D68", Offset = "0x7C8D68")]
		public CameraSmoothFollow smoothFollow;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C8DA0", Offset = "0x7C8DA0")]
		public CameraMouseOrbit mouseOrbit;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CameraLookAt lookAt;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CameraFree free;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_transform;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mode m_prevMode;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CameraMode[] m_cameraModes;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_prevTarget;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody m_targetRigidbody;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 m_localTargetOffset;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 m_targetOffset;

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x9A1834", Offset = "0x9A1834", VA = "0x9A1834")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x9A1D18", Offset = "0x9A1D18", VA = "0x9A1D18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x9A1D78", Offset = "0x9A1D78", VA = "0x9A1D78")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x9A1FBC", Offset = "0x9A1FBC", VA = "0x9A1FBC")]
		public void NextCameraMode()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x9A200C", Offset = "0x9A200C", VA = "0x9A200C")]
		public void ResetCamera()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x9A208C", Offset = "0x9A208C", VA = "0x9A208C")]
		public void SetViewConfig(VehicleViewConfig viewConfig)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x9A1A8C", Offset = "0x9A1A8C", VA = "0x9A1A8C")]
		private void AdquireTarget()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x9A1C48", Offset = "0x9A1C48", VA = "0x9A1C48")]
		private void ComputeTargetOffset()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x9A210C", Offset = "0x9A210C", VA = "0x9A210C")]
		public VehicleCameraController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014F")]
	public class Wheel
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WheelCollider wheelCollider;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform wheelTransform;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform caliperTransform;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool steer;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool drive;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool brake;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool handbrake;

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x9AF038", Offset = "0x9AF038", VA = "0x9AF038")]
		public Wheel()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class WheelData
	{
		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Wheel wheel;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WheelCollider collider;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform transform;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 origin;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float forceDistance;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float steerAngle;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool grounded;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WheelHit hit;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GroundMaterial groundMaterial;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float suspensionCompression;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float downforce;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 velocity;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector2 localVelocity;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector2 localRigForce;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isBraking;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float finalInput;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector2 tireSlip;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector2 tireForce;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Vector2 dragForce;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public Vector2 rawTireForce;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float angularVelocity;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float angularPosition;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public PhysicMaterial lastPhysicMaterial;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public RaycastHit rayHit;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float positionRatio;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool isWheelChildOfCaliper;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float combinedTireSlip;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float downforceRatio;

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x9A3248", Offset = "0x9A3248", VA = "0x9A3248")]
		public WheelData()
		{
		}
	}
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C51D4", Offset = "0x7C51D4")]
	public class VehicleController : MonoBehaviour
	{
		[Token(Token = "0x20003A8")]
		public enum CenterOfMassMode
		{
			[Token(Token = "0x40012A5")]
			Transform,
			[Token(Token = "0x40012A6")]
			Parametric
		}

		[Token(Token = "0x20003A9")]
		public enum BrakeMode
		{
			[Token(Token = "0x40012A8")]
			Slip,
			[Token(Token = "0x40012A9")]
			Ratio
		}

		[Token(Token = "0x20003AA")]
		public enum UpdateRate
		{
			[Token(Token = "0x40012AB")]
			OnUpdate,
			[Token(Token = "0x40012AC")]
			OnFixedUpdate,
			[Token(Token = "0x40012AD")]
			Disabled
		}

		[Token(Token = "0x20003AB")]
		public enum PositionMode
		{
			[Token(Token = "0x40012AF")]
			Accurate,
			[Token(Token = "0x40012B0")]
			Fast
		}

		[Token(Token = "0x20003AC")]
		public delegate void OnImpact();

		[Token(Token = "0x20003AD")]
		private struct VehicleFrame
		{
			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float frontPosition;

			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float rearPosition;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float baseHeight;

			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float frontWidth;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float rearWidth;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float middlePoint;
		}

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Wheel[] wheels;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8DD8", Offset = "0x7C8DD8")]
		public CenterOfMassMode centerOfMassMode;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8E10", Offset = "0x7C8E10")]
		public float centerOfMassPosition;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8E30", Offset = "0x7C8E30")]
		public float centerOfMassHeightOffset;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C8E48", Offset = "0x7C8E48")]
		public Transform centerOfMassTransform;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8E80", Offset = "0x7C8E80")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C8E80", Offset = "0x7C8E80")]
		public float maxSpeedForward;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxSpeedReverse;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8EE0", Offset = "0x7C8EE0")]
		public float tireFriction;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8EF8", Offset = "0x7C8EF8")]
		public float rollingResistance;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8F10", Offset = "0x7C8F10")]
		public float antiRoll;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8F28", Offset = "0x7C8F28")]
		public float maxSteerAngle;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8F44", Offset = "0x7C8F44")]
		public float aeroDrag;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8F5C", Offset = "0x7C8F5C")]
		public float aeroDownforce;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C8F74", Offset = "0x7C8F74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8F74", Offset = "0x7C8F74")]
		public float driveBalance;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8FC8", Offset = "0x7C8FC8")]
		public float brakeBalance;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C8FE0", Offset = "0x7C8FE0")]
		public float tireFrictionBalance;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9000", Offset = "0x7C9000")]
		public float aeroBalance;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9018", Offset = "0x7C9018")]
		public float handlingBias;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C9030", Offset = "0x7C9030")]
		public float maxDriveForce;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9068", Offset = "0x7C9068")]
		public float forceCurveShape;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float maxDriveSlip;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float driveForceToMaxSlip;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C9088", Offset = "0x7C9088")]
		public float maxBrakeForce;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float brakeForceToMaxSlip;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public BrakeMode brakeMode;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float maxBrakeSlip;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C90C0", Offset = "0x7C90C0")]
		public float maxBrakeRatio;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BrakeMode handbrakeMode;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float maxHandbrakeSlip;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C90D8", Offset = "0x7C90D8")]
		public float maxHandbrakeRatio;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C90F0", Offset = "0x7C90F0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C90F0", Offset = "0x7C90F0")]
		public bool tractionControl;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9150", Offset = "0x7C9150")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C9150", Offset = "0x7C9150")]
		public float tractionControlRatio;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C91A4", Offset = "0x7C91A4")]
		public bool brakeAssist;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C91DC", Offset = "0x7C91DC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C91DC", Offset = "0x7C91DC")]
		public float brakeAssistRatio;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C9230", Offset = "0x7C9230")]
		public bool steeringLimit;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9268", Offset = "0x7C9268")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C9268", Offset = "0x7C9268")]
		public float steeringLimitRatio;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool steeringAssist;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C92BC", Offset = "0x7C92BC")]
		public float steeringAssistRatio;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C92D4", Offset = "0x7C92D4")]
		public float steerInput;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C92EC", Offset = "0x7C92EC")]
		public float throttleInput;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9304", Offset = "0x7C9304")]
		public float tempThrottleInput;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C931C", Offset = "0x7C931C")]
		public float brakeInput;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9334", Offset = "0x7C9334")]
		public float handbrakeInput;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C934C", Offset = "0x7C934C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C934C", Offset = "0x7C934C")]
		public UpdateRate wheelUpdateRate;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public PositionMode wheelPositionMode;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C93AC", Offset = "0x7C93AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C93AC", Offset = "0x7C93AC")]
		public float sleepVelocity;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float defaultGroundGrip;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float defaultGroundDrag;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C9400", Offset = "0x7C9400")]
		public bool disallowRuntimeChanges;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		public bool disableSteerAngleCorrection;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7C9438", Offset = "0x7C9438")]
		public bool showCollisionGizmos;

		[NonSerialized]
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE7")]
		public bool processContacts;

		[NonSerialized]
		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float impactThreeshold;

		[NonSerialized]
		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float impactInterval;

		[NonSerialized]
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float impactIntervalRandom;

		[NonSerialized]
		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float impactMinSpeed;

		[NonSerialized]
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool computeExtendedTireData;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public OnImpact onImpact;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VehicleController current;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float RpmToW;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float WToRpm;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9470", Offset = "0x7C9470")]
		private bool <invertVisualWheelSpinDirection>k__BackingField;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Transform m_transform;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private GroundMaterialManager m_groundMaterialManager;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Rigidbody m_referenceBody;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Rigidbody m_referenceCandidate;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int m_referenceCandidateCount;

		[NonSerialized]
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string debugText;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private WheelData[] m_wheelData;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float m_speed;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float m_speedAngle;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float m_steerAngle;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool m_usesHandbrake;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private CommonTools.BiasLerpContext m_forceBiasCtx;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private VehicleFrame m_vehicleFrame;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool m_paused;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool m_singleFixedStep;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		private bool m_singleUpdateStep;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private int[] m_colLayers;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private WheelFrictionCurve m_colliderFriction;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int m_sumImpactCount;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Vector3 m_sumImpactPosition;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private Vector3 m_sumImpactVelocity;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private int m_sumImpactHardness;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float m_lastImpactTime;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 m_localDragPosition;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private Vector3 m_localDragVelocity;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private int m_localDragHardness;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float m_lastStrongImpactTime;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private PhysicMaterial m_lastImpactedMaterial;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private GroundMaterial m_impactedGroundMaterial;

		[Token(Token = "0x1700003F")]
		public Vector3 localImpactPosition
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0x9A2234", Offset = "0x9A2234", VA = "0x9A2234")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000040")]
		public Vector3 localImpactVelocity
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x9A2244", Offset = "0x9A2244", VA = "0x9A2244")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000041")]
		public bool isHardImpact
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0x9A2254", Offset = "0x9A2254", VA = "0x9A2254")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000042")]
		public Vector3 localDragPosition
		{
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0x9A2264", Offset = "0x9A2264", VA = "0x9A2264")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000043")]
		public Vector3 localDragVelocity
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0x9A2274", Offset = "0x9A2274", VA = "0x9A2274")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000044")]
		public bool isHardDrag
		{
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x9A2284", Offset = "0x9A2284", VA = "0x9A2284")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000045")]
		public WheelData[] wheelData
		{
			[Token(Token = "0x60007E6")]
			[Address(RVA = "0x9A2294", Offset = "0x9A2294", VA = "0x9A2294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		public float speed
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x9A229C", Offset = "0x9A229C", VA = "0x9A229C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000047")]
		public float speedAngle
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x9A22A4", Offset = "0x9A22A4", VA = "0x9A22A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000048")]
		public float steerAngle
		{
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x9A22AC", Offset = "0x9A22AC", VA = "0x9A22AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000049")]
		public bool invertVisualWheelSpinDirection
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0x9A22B4", Offset = "0x9A22B4", VA = "0x9A22B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BD0", Offset = "0x7D0BD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007EB")]
			[Address(RVA = "0x9A22BC", Offset = "0x9A22BC", VA = "0x9A22BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0BE0", Offset = "0x7D0BE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public Transform cachedTransform
		{
			[Token(Token = "0x60007EC")]
			[Address(RVA = "0x9A22C8", Offset = "0x9A22C8", VA = "0x9A22C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		public Rigidbody cachedRigidbody
		{
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0x9A22D0", Offset = "0x9A22D0", VA = "0x9A22D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		public bool paused
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0x9A6888", Offset = "0x9A6888", VA = "0x9A6888")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0x9A6890", Offset = "0x9A6890", VA = "0x9A6890")]
			set
			{
			}
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x9A22D8", Offset = "0x9A22D8", VA = "0x9A22D8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x9A2434", Offset = "0x9A2434", VA = "0x9A2434")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x9A35DC", Offset = "0x9A35DC", VA = "0x9A35DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x9A47E0", Offset = "0x9A47E0", VA = "0x9A47E0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x9A68B8", Offset = "0x9A68B8", VA = "0x9A68B8")]
		public void SingleStep()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x9A3804", Offset = "0x9A3804", VA = "0x9A3804")]
		private void ComputeSteerAngle()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x9A39B0", Offset = "0x9A39B0", VA = "0x9A39B0")]
		private void UpdateSteering(WheelData wd)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x9A68E4", Offset = "0x9A68E4", VA = "0x9A68E4")]
		private float FixSteerAngle(WheelData wd, float inputSteerAngle)
		{
			return default(float);
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x9A4EC4", Offset = "0x9A4EC4", VA = "0x9A4EC4")]
		private void UpdateSuspension(WheelData wd)
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x9A50D4", Offset = "0x9A50D4", VA = "0x9A50D4")]
		private void UpdateLocalFrame(WheelData wd)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x9A5800", Offset = "0x9A5800", VA = "0x9A5800")]
		private void UpdateGroundMaterial(WheelData wd)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x9A5864", Offset = "0x9A5864", VA = "0x9A5864")]
		private void ComputeTireForces(WheelData wd)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x9A6018", Offset = "0x9A6018", VA = "0x9A6018")]
		private void ApplyTireForces(WheelData wd)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x9A6F60", Offset = "0x9A6F60", VA = "0x9A6F60")]
		public Vector3 GetSidewaysForceAppPoint(WheelData wd, Vector3 contactPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x9A7174", Offset = "0x9A7174", VA = "0x9A7174")]
		private static float ComputeSlipAngle(Vector2 localVelocity)
		{
			return default(float);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x9A720C", Offset = "0x9A720C", VA = "0x9A720C")]
		private static float ComputeCombinedSlip(Vector2 localVelocity, Vector2 tireSlip)
		{
			return default(float);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x9A6424", Offset = "0x9A6424", VA = "0x9A6424")]
		private void ComputeExtendedTireData(WheelData wd, float referenceDownforce)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x9A6D4C", Offset = "0x9A6D4C", VA = "0x9A6D4C")]
		private float ComputeDriveForce(float demandedForce, float maxForce, bool grounded)
		{
			return default(float);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x9A6BE4", Offset = "0x9A6BE4", VA = "0x9A6BE4")]
		private void ComputeBrakeValues(WheelData wd, BrakeMode mode, float maxSlip, float maxRatio, out float brakeSlip, out float brakeRatio)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x9A3AF0", Offset = "0x9A3AF0", VA = "0x9A3AF0")]
		private void UpdateTransform(WheelData wd, float deltaTime)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x9A6B00", Offset = "0x9A6B00", VA = "0x9A6B00")]
		private void UpdateGroundMaterialCached(PhysicMaterial colliderMaterial, ref PhysicMaterial cachedMaterial, ref GroundMaterial groundMaterial)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x9A72E0", Offset = "0x9A72E0", VA = "0x9A72E0")]
		public void ResetVehicle()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x9A2B24", Offset = "0x9A2B24", VA = "0x9A2B24")]
		private void FindColliders()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x9A3A28", Offset = "0x9A3A28", VA = "0x9A3A28")]
		private void DisableCollidersRaycast()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x9A4390", Offset = "0x9A4390", VA = "0x9A4390")]
		private void EnableCollidersRaycast()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x9A7450", Offset = "0x9A7450", VA = "0x9A7450")]
		public Vector3 RaycastOthers(Vector3 from, Vector3 to, int layerMask = -5)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x9A75C4", Offset = "0x9A75C4", VA = "0x9A75C4")]
		public float SphereRaycastOthers(Vector3 origin, Vector3 direction, float radius, float maxDistance, int layerMask = -5)
		{
			return default(float);
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x9A346C", Offset = "0x9A346C", VA = "0x9A346C")]
		private float GetWheelForceDistance(WheelCollider col)
		{
			return default(float);
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x9A3348", Offset = "0x9A3348", VA = "0x9A3348")]
		private void UpdateWheelCollider(WheelCollider col)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x9A352C", Offset = "0x9A352C", VA = "0x9A352C")]
		private void SetupWheelCollider(WheelCollider col)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x9A62E8", Offset = "0x9A62E8", VA = "0x9A62E8")]
		private void UpdateWheelSleep(WheelData wd)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x9A2CA4", Offset = "0x9A2CA4", VA = "0x9A2CA4")]
		private VehicleFrame ComputeVehicleFrame()
		{
			return default(VehicleFrame);
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x9A3014", Offset = "0x9A3014", VA = "0x9A3014")]
		private void ConfigureCenterOfMass()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x9A6F3C", Offset = "0x9A6F3C", VA = "0x9A6F3C")]
		public static float GetBalancedValue(float value, float bias, float positionRatio)
		{
			return default(float);
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x9A6C94", Offset = "0x9A6C94", VA = "0x9A6C94")]
		public static float GetRampBalancedValue(float value, float bias, float positionRatio)
		{
			return default(float);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x9A7698", Offset = "0x9A7698", VA = "0x9A7698")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x9A80E8", Offset = "0x9A80E8", VA = "0x9A80E8")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x9A7720", Offset = "0x9A7720", VA = "0x9A7720")]
		private void ProcessContacts(Collision col, bool forceImpact)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x9A64DC", Offset = "0x9A64DC", VA = "0x9A64DC")]
		private void HandleImpacts()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x9A443C", Offset = "0x9A443C", VA = "0x9A443C")]
		private void UpdateDragState(Vector3 dragPosition, Vector3 dragVelocity, int dragHardness)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x9A8308", Offset = "0x9A8308", VA = "0x9A8308")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7D0BF0", Offset = "0x7D0BF0")]
		private void AdjustWheelColliders()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x9A8414", Offset = "0x9A8414", VA = "0x9A8414")]
		private static void AdjustColliderToWheelMesh(WheelCollider wheelCollider, Transform wheelTransform)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x9A8874", Offset = "0x9A8874", VA = "0x9A8874")]
		private static Bounds GetScaledBounds(MeshFilter meshFilter)
		{
			return default(Bounds);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x9A89E0", Offset = "0x9A89E0", VA = "0x9A89E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x7D0C28", Offset = "0x7D0C28")]
		private void FromTransformToParametricCoM()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x9A8B10", Offset = "0x9A8B10", VA = "0x9A8B10")]
		public VehicleController()
		{
		}
	}
	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C5238", Offset = "0x7C5238")]
	public class VehicleDamage : MonoBehaviour
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFilter[] meshes;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshCollider[] colliders;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] nodes;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C9480", Offset = "0x7C9480")]
		public float minVelocity;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float multiplier;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C9494", Offset = "0x7C9494")]
		public float damageRadius;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxDisplacement;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxVertexFracture;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C94A8", Offset = "0x7C94A8")]
		public float nodeDamageRadius;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float maxNodeRotation;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float nodeRotationRate;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C94BC", Offset = "0x7C94BC")]
		public float vertexRepairRate;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool enableRepairKey;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public KeyCode repairKey;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private VehicleController m_vehicle;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[][] m_originalMeshes;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[][] m_originalColliders;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] m_originalNodePositions;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] m_originalNodeRotations;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_repairing;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_meshDamage;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_colliderDamage;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_nodeDamage;

		[Token(Token = "0x1700004D")]
		public bool isRepairing
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x9A8DB8", Offset = "0x9A8DB8", VA = "0x9A8DB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004E")]
		public float meshDamage
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0x9A8DC0", Offset = "0x9A8DC0", VA = "0x9A8DC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004F")]
		public float colliderDamage
		{
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x9A8DC8", Offset = "0x9A8DC8", VA = "0x9A8DC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000050")]
		public float nodeDamage
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x9A8DD0", Offset = "0x9A8DD0", VA = "0x9A8DD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x9A8DD8", Offset = "0x9A8DD8", VA = "0x9A8DD8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x9A9150", Offset = "0x9A9150", VA = "0x9A9150")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x9A9518", Offset = "0x9A9518", VA = "0x9A9518")]
		private void Update()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x9A9730", Offset = "0x9A9730", VA = "0x9A9730")]
		public void Repair()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x9A973C", Offset = "0x9A973C", VA = "0x9A973C")]
		private void ProcessImpact()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x9A9AE4", Offset = "0x9A9AE4", VA = "0x9A9AE4")]
		private float DeformMesh(Mesh mesh, Vector3[] originalMesh, Transform localTransform, Vector3 contactPoint, Vector3 contactVelocity)
		{
			return default(float);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x9AA168", Offset = "0x9AA168", VA = "0x9AA168")]
		private float DeformNode(Transform T, Vector3 originalLocalPos, Quaternion originalLocalRot, Vector3 contactPoint, Vector3 contactVelocity)
		{
			return default(float);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x9AA660", Offset = "0x9AA660", VA = "0x9AA660")]
		private Vector3 AnglesToVector(Vector3 Angles)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x9A9F08", Offset = "0x9A9F08", VA = "0x9A9F08")]
		private float DeformColliders(Vector3 contactPoint, Vector3 impactVelocity)
		{
			return default(float);
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x9A9558", Offset = "0x9A9558", VA = "0x9A9558")]
		private void ProcessRepair()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x9AA698", Offset = "0x9AA698", VA = "0x9AA698")]
		private bool RepairMesh(Mesh mesh, Vector3[] originalMesh, float repairRate, float repairedThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x9AA8A4", Offset = "0x9AA8A4", VA = "0x9AA8A4")]
		private bool RepairNode(Transform T, Vector3 originalLocalPosition, Quaternion originalLocalRotation, float repairRate, float repairedThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x9A918C", Offset = "0x9A918C", VA = "0x9A918C")]
		private void RestoreMeshes()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x9A9258", Offset = "0x9A9258", VA = "0x9A9258")]
		private void RestoreNodes()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x9A9348", Offset = "0x9A9348", VA = "0x9A9348")]
		private void RestoreColliders()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x9AAAE8", Offset = "0x9AAAE8", VA = "0x9AAAE8")]
		public VehicleDamage()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class VehicleManager : MonoBehaviour
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VehicleController[] vehicles;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int defaultVehicle;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode previousVehicleKey;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode nextVehicleKey;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode alternateNextVehicleKey;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VehicleCameraController cameraController;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool overrideVehicleComponents;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_currentVehicleIdx;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VehicleController m_currentVehicle;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VehicleStandardInput m_commonInput;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VehicleTelemetry m_commonTelemetry;

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x9AAB20", Offset = "0x9AAB20", VA = "0x9AAB20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x9AAB90", Offset = "0x9AAB90", VA = "0x9AAB90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x9AAD9C", Offset = "0x9AAD9C", VA = "0x9AAD9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x9AACB4", Offset = "0x9AACB4", VA = "0x9AACB4")]
		public void SelectVehicle(int vehicleIdx)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x9AAE00", Offset = "0x9AAE00", VA = "0x9AAE00")]
		public void SelectPreviousVehicle()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x9AAE38", Offset = "0x9AAE38", VA = "0x9AAE38")]
		public void SelectNextVehicle()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x9AAE6C", Offset = "0x9AAE6C", VA = "0x9AAE6C")]
		private void EnableVehicle(VehicleController vehicle)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x9AAC10", Offset = "0x9AAC10", VA = "0x9AAC10")]
		private void DisableVehicle(VehicleController vehicle)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x9AAF4C", Offset = "0x9AAF4C", VA = "0x9AAF4C")]
		private void SetupVehicleComponents(VehicleController vehicle, bool enabled)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x9AB250", Offset = "0x9AB250", VA = "0x9AB250")]
		public VehicleManager()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class VehicleRandomInput : MonoBehaviour
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float steerInterval;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float steerIntervalTolerance;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float steerChangeRate;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C94D0", Offset = "0x7C94D0")]
		public float steerStraightRandom;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7C94E8", Offset = "0x7C94E8")]
		public float throttleInterval;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float throttleIntervalTolerance;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float throttleChangeRate;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C94FC", Offset = "0x7C94FC")]
		public float throttleForwardRandom;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_targetSteer;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_nextSteerTime;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_targetThrottle;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_targetBrake;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextThrottleTime;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VehicleController m_vehicle;

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x9AB2D4", Offset = "0x9AB2D4", VA = "0x9AB2D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x9AB32C", Offset = "0x9AB32C", VA = "0x9AB32C")]
		private void Update()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x9AB5B8", Offset = "0x9AB5B8", VA = "0x9AB5B8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x9AB75C", Offset = "0x9AB75C", VA = "0x9AB75C")]
		public VehicleRandomInput()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class VehicleTelemetry : MonoBehaviour
	{
		[Token(Token = "0x20003AE")]
		public enum DataMode
		{
			[Token(Token = "0x40012B8")]
			TireSlipAndForce,
			[Token(Token = "0x40012B9")]
			GroundMaterial
		}

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VehicleController target;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DataMode dataMode;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font font;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode toggleKey;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool show;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool gizmos;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool gizmosAtPhysicsPos;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_telemetryText;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GUIStyle m_style;

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x9ACB4C", Offset = "0x9ACB4C", VA = "0x9ACB4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x9ACC34", Offset = "0x9ACC34", VA = "0x9ACC34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x9AD47C", Offset = "0x9AD47C", VA = "0x9AD47C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x9ACD5C", Offset = "0x9ACD5C", VA = "0x9ACD5C")]
		private string DoTelemetry()
		{
			return null;
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x9AD5A4", Offset = "0x9AD5A4", VA = "0x9AD5A4")]
		private string GetWheelTelemetry(WheelData wd, ref float suspensionForce)
		{
			return null;
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x9AD30C", Offset = "0x9AD30C", VA = "0x9AD30C")]
		private void DrawGizmos()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x9ADA84", Offset = "0x9ADA84", VA = "0x9ADA84")]
		private void DrawWheelGizmos(WheelData wd)
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x9AE128", Offset = "0x9AE128", VA = "0x9AE128")]
		public VehicleTelemetry()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class TireFxData
	{
		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TireMarksRenderer lastRenderer;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lastMarksIndex;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float marksDelta;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TireParticleEmitter lastEmitter;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lastParticleTime;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slipTime;

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x99C56C", Offset = "0x99C56C", VA = "0x99C56C")]
		public TireFxData()
		{
		}
	}
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C529C", Offset = "0x7C529C")]
	public class VehicleTireEffects : MonoBehaviour
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float tireWidth;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minSlip;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxSlip;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C9514", Offset = "0x7C9514")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9514", Offset = "0x7C9514")]
		public float intensity;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float updateInterval;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C9568", Offset = "0x7C9568")]
		public float minIntensityTime;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxIntensityTime;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float limitIntensityTime;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VehicleController m_vehicle;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TireFxData[] m_fxData;

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x9AE1B0", Offset = "0x9AE1B0", VA = "0x9AE1B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x9AE218", Offset = "0x9AE218", VA = "0x9AE218")]
		private void Update()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x9AE314", Offset = "0x9AE314", VA = "0x9AE314")]
		private void InitializeTireFxData()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x9AE414", Offset = "0x9AE414", VA = "0x9AE414")]
		private void UpdateTireMarks(WheelData wheelData, TireFxData fxData)
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x9AE774", Offset = "0x9AE774", VA = "0x9AE774")]
		private void UpdateTireParticles(WheelData wheelData, TireFxData fxData)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x9AEB50", Offset = "0x9AEB50", VA = "0x9AEB50")]
		public VehicleTireEffects()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class VehicleViewConfig : MonoBehaviour
	{
		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform lookAtPoint;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform driverView;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float viewDistance;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float viewHeight;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float viewDamping;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float viewMinDistance;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float viewMinHeight;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C95A0", Offset = "0x7C95A0")]
		private float <targetDiameter>k__BackingField;

		[Token(Token = "0x17000051")]
		public float targetDiameter
		{
			[Token(Token = "0x600084F")]
			[Address(RVA = "0x9AEBC8", Offset = "0x9AEBC8", VA = "0x9AEBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0C60", Offset = "0x7D0C60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x9AEBD0", Offset = "0x9AEBD0", VA = "0x9AEBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0C70", Offset = "0x7D0C70")]
			private set
			{
			}
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x9AEBD8", Offset = "0x9AEBD8", VA = "0x9AEBD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x9AED7C", Offset = "0x9AED7C", VA = "0x9AED7C")]
		public VehicleViewConfig()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C5300", Offset = "0x7C5300")]
	public class VehicleVisualEffects : MonoBehaviour
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C95B0", Offset = "0x7C95B0")]
		public Transform steeringWheel;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float degreesOfRotation;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C95E8", Offset = "0x7C95E8")]
		public Renderer brakesRenderer;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int brakesMaterialIndex;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material brakesOnMaterial;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material brakesOffMaterial;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VehicleController m_vehicle;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_prevBrakes;

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x9AED90", Offset = "0x9AED90", VA = "0x9AED90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x9AEDE8", Offset = "0x9AEDE8", VA = "0x9AEDE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x9AF028", Offset = "0x9AF028", VA = "0x9AF028")]
		public VehicleVisualEffects()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class VehicleStandardInput : MonoBehaviour
	{
		[Token(Token = "0x20003AF")]
		public enum ControlsTypes
		{
			[Token(Token = "0x40012BB")]
			HandSteer,
			[Token(Token = "0x40012BC")]
			JoypadSteer,
			[Token(Token = "0x40012BD")]
			gamepad
		}

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool editor;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool dontHaveGears;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_parkingSensor;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_liftHandBraketoAccelerate;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VehicleGearController m_gearScript;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VehicleHandBreakController m_handBreakScript;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject leftHandVisual;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject righthandVisual;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject leftControllerVisual;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject rightControllerVisual;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject handSteeringVisual;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject controllerSteeringVisual;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ControlsTypes m_controlTypes;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public VehicleController target;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float tempThrottle;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_doReset;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float angle;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float vert;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_brakeInput;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_finalSteerInput;

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x9AB77C", Offset = "0x9AB77C", VA = "0x9AB77C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x9AB850", Offset = "0x9AB850", VA = "0x9AB850")]
		private void Start()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x9ABA40", Offset = "0x9ABA40", VA = "0x9ABA40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x9ABBC0", Offset = "0x9ABBC0", VA = "0x9ABBC0")]
		public void changeSteerAngle(float steer)
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x9ABC68", Offset = "0x9ABC68", VA = "0x9ABC68")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x9AC43C", Offset = "0x9AC43C", VA = "0x9AC43C")]
		public VehicleStandardInput()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class VehicleStandardInputTutorial : MonoBehaviour
	{
		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool canSteer;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canforward;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canBreak;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool canReverse;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool canBack;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public VehicleController target;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text m_text;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text m_text1;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text m_text2;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text m_text3;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Animator m_controllerAnim;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_quitScreen;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quaternion controllerOrientation;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SceneTransition m_transitionScreen;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_doReset;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float angle;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float vert;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_brakeInput;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_finalSteerInput;

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x9AC444", Offset = "0x9AC444", VA = "0x9AC444")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x9AC49C", Offset = "0x9AC49C", VA = "0x9AC49C")]
		public void QuitTutorial()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x9AC528", Offset = "0x9AC528", VA = "0x9AC528")]
		private void Update()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x9AC6A4", Offset = "0x9AC6A4", VA = "0x9AC6A4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x9ACB44", Offset = "0x9ACB44", VA = "0x9ACB44")]
		public VehicleStandardInputTutorial()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200015C")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000052")]
		public bool Highlight
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0xEF3B78", Offset = "0xEF3B78", VA = "0xEF3B78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000862")]
			[Address(RVA = "0xEF3B80", Offset = "0xEF3B80", VA = "0xEF3B80")]
			set
			{
			}
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xEF3B8C", Offset = "0xEF3B8C", VA = "0xEF3B8C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xEF3D58", Offset = "0xEF3D58", VA = "0xEF3D58", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xEF3D80", Offset = "0xEF3D80", VA = "0xEF3D80", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xEF3DA8", Offset = "0xEF3DA8", VA = "0xEF3DA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xEF3C58", Offset = "0xEF3C58", VA = "0xEF3C58")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xEF3FFC", Offset = "0xEF3FFC", VA = "0xEF3FFC")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000053")]
		public bool InRange
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0xEF4764", Offset = "0xEF4764", VA = "0xEF4764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600086B")]
			[Address(RVA = "0xEF476C", Offset = "0xEF476C", VA = "0xEF476C")]
			set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public bool Targeted
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xEF48F4", Offset = "0xEF48F4", VA = "0xEF48F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600086D")]
			[Address(RVA = "0xEF48FC", Offset = "0xEF48FC", VA = "0xEF48FC")]
			set
			{
			}
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xEF4908", Offset = "0xEF4908", VA = "0xEF4908", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xEF4778", Offset = "0xEF4778", VA = "0xEF4778")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xEF4AD4", Offset = "0xEF4AD4", VA = "0xEF4AD4")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xEF4B18", Offset = "0xEF4B18", VA = "0xEF4B18")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xEF4B74", Offset = "0xEF4B74", VA = "0xEF4B74")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7C5364", Offset = "0x7C5364")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000055")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000873")]
			[Address(RVA = "0xEF4B7C", Offset = "0xEF4B7C", VA = "0xEF4B7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xEF4B84", Offset = "0xEF4B84", VA = "0xEF4B84")]
			set
			{
			}
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xEF4BA0", Offset = "0xEF4BA0", VA = "0xEF4BA0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xEF4D2C", Offset = "0xEF4D2C", VA = "0xEF4D2C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xEF56C0", Offset = "0xEF56C0", VA = "0xEF56C0", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xEF5C7C", Offset = "0xEF5C7C", VA = "0xEF5C7C", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xEF605C", Offset = "0xEF605C", VA = "0xEF605C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xEF4FF4", Offset = "0xEF4FF4", VA = "0xEF4FF4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xEF6138", Offset = "0xEF6138", VA = "0xEF6138")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xEF6570", Offset = "0xEF6570", VA = "0xEF6570", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xEF6588", Offset = "0xEF6588", VA = "0xEF6588", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xEF6590", Offset = "0xEF6590", VA = "0xEF6590")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xEF7FD8", Offset = "0xEF7FD8", VA = "0xEF7FD8")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xEF8088", Offset = "0xEF8088", VA = "0xEF8088")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xEF8134", Offset = "0xEF8134", VA = "0xEF8134")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20003B0")]
		public enum CrosshairState
		{
			[Token(Token = "0x40012BF")]
			Disabled,
			[Token(Token = "0x40012C0")]
			Enabled,
			[Token(Token = "0x40012C1")]
			Targeted
		}

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xEF813C", Offset = "0xEF813C", VA = "0xEF813C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xEF4A38", Offset = "0xEF4A38", VA = "0xEF4A38")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xEF81A4", Offset = "0xEF81A4", VA = "0xEF81A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xEF81EC", Offset = "0xEF81EC", VA = "0xEF81EC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000886")]
		[Address(RVA = "0xEFD030", Offset = "0xEFD030", VA = "0xEFD030")]
		private void Start()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xEFD0FC", Offset = "0xEFD0FC", VA = "0xEFD0FC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xEFD108", Offset = "0xEFD108", VA = "0xEFD108")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xEFD114", Offset = "0xEFD114", VA = "0xEFD114")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xEF258C", Offset = "0xEF258C", VA = "0xEF258C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xEF25E4", Offset = "0xEF25E4", VA = "0xEF25E4")]
		private void Update()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xEF2888", Offset = "0xEF2888", VA = "0xEF2888")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xEF2978", Offset = "0xEF2978", VA = "0xEF2978")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xEF25E8", Offset = "0xEF25E8", VA = "0xEF25E8")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xEF2A68", Offset = "0xEF2A68", VA = "0xEF2A68")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20003B1")]
		public enum ContactTest
		{
			[Token(Token = "0x40012C3")]
			PerpenTest,
			[Token(Token = "0x40012C4")]
			BackwardsPress
		}

		[Token(Token = "0x4000ADF")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000AE0")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000056")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xEF2B00", Offset = "0xEF2B00", VA = "0xEF2B00", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000057")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0xEF2B08", Offset = "0xEF2B08", VA = "0xEF2B08")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xEF2B14", Offset = "0xEF2B14", VA = "0xEF2B14", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xEF2C64", Offset = "0xEF2C64", VA = "0xEF2C64")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xEF2E68", Offset = "0xEF2E68", VA = "0xEF2E68")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xEF2FC8", Offset = "0xEF2FC8", VA = "0xEF2FC8")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xEF3128", Offset = "0xEF3128", VA = "0xEF3128", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xEF35EC", Offset = "0xEF35EC", VA = "0xEF35EC")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xEF3778", Offset = "0xEF3778", VA = "0xEF3778")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xEF386C", Offset = "0xEF386C", VA = "0xEF386C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xEF3998", Offset = "0xEF3998", VA = "0xEF3998")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9780", Offset = "0x7C9780")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9790", Offset = "0x7C9790")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000058")]
		public Collider Collider
		{
			[Token(Token = "0x600089B")]
			[Address(RVA = "0xEF3A84", Offset = "0xEF3A84", VA = "0xEF3A84", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0C80", Offset = "0x7D0C80")]
			get
			{
				return null;
			}
			[Token(Token = "0x600089C")]
			[Address(RVA = "0xEF3A8C", Offset = "0xEF3A8C", VA = "0xEF3A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0C90", Offset = "0x7D0C90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x600089D")]
			[Address(RVA = "0xEF3A94", Offset = "0xEF3A94", VA = "0xEF3A94", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0CA0", Offset = "0x7D0CA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600089E")]
			[Address(RVA = "0xEF3A9C", Offset = "0xEF3A9C", VA = "0xEF3A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0CB0", Offset = "0x7D0CB0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600089F")]
			[Address(RVA = "0xEF3AA4", Offset = "0xEF3AA4", VA = "0xEF3AA4", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xEF3AF4", Offset = "0xEF3AF4", VA = "0xEF3AF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xEF3B70", Offset = "0xEF3B70", VA = "0xEF3B70")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700005B")]
		Collider Collider
		{
			[Token(Token = "0x60008A2")]
			get;
		}

		[Token(Token = "0x1700005C")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60008A3")]
			get;
		}

		[Token(Token = "0x1700005D")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60008A4")]
			get;
		}
	}
	[Token(Token = "0x2000166")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xEF2DC4", Offset = "0xEF2DC4", VA = "0xEF2DC4")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000167")]
	public enum InteractionType
	{
		[Token(Token = "0x4000AF4")]
		Enter,
		[Token(Token = "0x4000AF5")]
		Stay,
		[Token(Token = "0x4000AF6")]
		Exit
	}
	[Token(Token = "0x2000168")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20003B2")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40012C6")]
			Mesh,
			[Token(Token = "0x40012C7")]
			Skeleton,
			[Token(Token = "0x40012C8")]
			Both
		}

		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C68", Offset = "0x7C5C68")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000182")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015C9")]
				[Address(RVA = "0xEF90E0", Offset = "0xEF90E0", VA = "0xEF90E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000183")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015CB")]
				[Address(RVA = "0xEF9148", Offset = "0xEF9148", VA = "0xEF9148", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xEF8BD4", Offset = "0xEF8BD4", VA = "0xEF8BD4")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xEF8EC0", Offset = "0xEF8EC0", VA = "0xEF8EC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015C8")]
			[Address(RVA = "0xEF8EC4", Offset = "0xEF8EC4", VA = "0xEF8EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xEF90E8", Offset = "0xEF90E8", VA = "0xEF90E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF7")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C97C0", Offset = "0x7C97C0")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700005E")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0xEF70D0", Offset = "0xEF70D0", VA = "0xEF70D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A7")]
			[Address(RVA = "0xEF81F4", Offset = "0xEF81F4", VA = "0xEF81F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0xEF7C5C", Offset = "0xEF7C5C", VA = "0xEF7C5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008A9")]
			[Address(RVA = "0xEF825C", Offset = "0xEF825C", VA = "0xEF825C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60008AA")]
			[Address(RVA = "0xEF82C4", Offset = "0xEF82C4", VA = "0xEF82C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AB")]
			[Address(RVA = "0xEF82FC", Offset = "0xEF82FC", VA = "0xEF82FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60008AC")]
			[Address(RVA = "0xEF8364", Offset = "0xEF8364", VA = "0xEF8364")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AD")]
			[Address(RVA = "0xEF839C", Offset = "0xEF839C", VA = "0xEF839C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0xEF8404", Offset = "0xEF8404", VA = "0xEF8404")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0xEF843C", Offset = "0xEF843C", VA = "0xEF843C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0xEF709C", Offset = "0xEF709C", VA = "0xEF709C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B1")]
			[Address(RVA = "0xEF84A4", Offset = "0xEF84A4", VA = "0xEF84A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0xEF7C28", Offset = "0xEF7C28", VA = "0xEF7C28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B3")]
			[Address(RVA = "0xEF8508", Offset = "0xEF8508", VA = "0xEF8508")]
			private set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60008B4")]
			[Address(RVA = "0xEF856C", Offset = "0xEF856C", VA = "0xEF856C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0xEF85A0", Offset = "0xEF85A0", VA = "0xEF85A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60008B6")]
			[Address(RVA = "0xEF8604", Offset = "0xEF8604", VA = "0xEF8604")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0xEF8638", Offset = "0xEF8638", VA = "0xEF8638")]
			private set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0xEF869C", Offset = "0xEF869C", VA = "0xEF869C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xEF86D0", Offset = "0xEF86D0", VA = "0xEF86D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0xEF8734", Offset = "0xEF8734", VA = "0xEF8734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0CC0", Offset = "0x7D0CC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0xEF8784", Offset = "0xEF8784", VA = "0xEF8784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0CD0", Offset = "0x7D0CD0")]
			private set
			{
			}
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xEF87D8", Offset = "0xEF87D8", VA = "0xEF87D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xEF8B4C", Offset = "0xEF8B4C", VA = "0xEF8B4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xEF8ADC", Offset = "0xEF8ADC", VA = "0xEF8ADC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0CE0", Offset = "0x7D0CE0")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xEF45B8", Offset = "0xEF45B8", VA = "0xEF45B8")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xEF8C00", Offset = "0xEF8C00", VA = "0xEF8C00")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xEF7C94", Offset = "0xEF7C94", VA = "0xEF7C94")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xEF6F0C", Offset = "0xEF6F0C", VA = "0xEF6F0C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xEF8DE0", Offset = "0xEF8DE0", VA = "0xEF8DE0")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003B4")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xEF9898", Offset = "0xEF9898", VA = "0xEF9898")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000069")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0xEF9150", Offset = "0xEF9150", VA = "0xEF9150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60008C5")]
			[Address(RVA = "0xEF9158", Offset = "0xEF9158", VA = "0xEF9158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0xEF9160", Offset = "0xEF9160", VA = "0xEF9160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60008C7")]
			[Address(RVA = "0xEF9168", Offset = "0xEF9168", VA = "0xEF9168", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0xEF9170", Offset = "0xEF9170", VA = "0xEF9170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0D44", Offset = "0x7D0D44")]
			add
			{
			}
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0xEF9214", Offset = "0xEF9214", VA = "0xEF9214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0D54", Offset = "0x7D0D54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xEF932C", Offset = "0xEF932C", VA = "0xEF932C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0D64", Offset = "0x7D0D64")]
			add
			{
			}
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0xEF93D0", Offset = "0xEF93D0", VA = "0xEF93D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0D74", Offset = "0x7D0D74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0xEF94E8", Offset = "0xEF94E8", VA = "0xEF94E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0D84", Offset = "0x7D0D84")]
			add
			{
			}
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0xEF958C", Offset = "0xEF958C", VA = "0xEF958C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0D94", Offset = "0x7D0D94")]
			remove
			{
			}
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xEF92B8", Offset = "0xEF92B8", VA = "0xEF92B8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xEF9474", Offset = "0xEF9474", VA = "0xEF9474", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xEF9630", Offset = "0xEF9630", VA = "0xEF9630", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60008D1")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xEF2C00", Offset = "0xEF2C00", VA = "0xEF2C00", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xEF976C", Offset = "0xEF976C", VA = "0xEF976C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xEF3A7C", Offset = "0xEF3A7C", VA = "0xEF3A7C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000B0F")]
		None,
		[Token(Token = "0x4000B10")]
		Proximity,
		[Token(Token = "0x4000B11")]
		Contact,
		[Token(Token = "0x4000B12")]
		Action
	}
	[Token(Token = "0x200016B")]
	public enum InteractableState
	{
		[Token(Token = "0x4000B14")]
		Default,
		[Token(Token = "0x4000B15")]
		ProximityState,
		[Token(Token = "0x4000B16")]
		ContactState,
		[Token(Token = "0x4000B17")]
		ActionState
	}
	[Token(Token = "0x200016C")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xEF36D4", Offset = "0xEF36D4", VA = "0xEF36D4")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700006D")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0xEF98E8", Offset = "0xEF98E8", VA = "0xEF98E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xEF96A4", Offset = "0xEF96A4", VA = "0xEF96A4")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xEF97D0", Offset = "0xEF97D0", VA = "0xEF97D0")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xEF9950", Offset = "0xEF9950", VA = "0xEF9950")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C78", Offset = "0x7C5C78")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000184")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015D1")]
				[Address(RVA = "0xEFA9F8", Offset = "0xEFA9F8", VA = "0xEFA9F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000185")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015D3")]
				[Address(RVA = "0xEFAA60", Offset = "0xEFAA60", VA = "0xEFAA60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015CD")]
			[Address(RVA = "0xEFA4BC", Offset = "0xEFA4BC", VA = "0xEFA4BC")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60015CE")]
			[Address(RVA = "0xEFA5E8", Offset = "0xEFA5E8", VA = "0xEFA5E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xEFA65C", Offset = "0xEFA65C", VA = "0xEFA65C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xEFA604", Offset = "0xEFA604", VA = "0xEFA604")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xEFAA00", Offset = "0xEFAA00", VA = "0xEFAA00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xEFA3B4", Offset = "0xEFA3B4", VA = "0xEFA3B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xEFA430", Offset = "0xEFA430", VA = "0xEFA430")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0DA4", Offset = "0x7D0DA4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xEFA4E8", Offset = "0xEFA4E8", VA = "0xEFA4E8")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xEFA5E0", Offset = "0xEFA5E0", VA = "0xEFA5E0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200016F")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700006E")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0xEF6948", Offset = "0xEF6948", VA = "0xEF6948")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xEF6AB0", Offset = "0xEF6AB0", VA = "0xEF6AB0")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xEFAA68", Offset = "0xEFAA68", VA = "0xEFAA68")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xEFAB14", Offset = "0xEFAB14", VA = "0xEFAB14")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xEFADDC", Offset = "0xEFADDC", VA = "0xEFADDC")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xEFAE24", Offset = "0xEFAE24", VA = "0xEFAE24")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xEFB074", Offset = "0xEFB074", VA = "0xEFB074")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xEFB1A0", Offset = "0xEFB1A0", VA = "0xEFB1A0")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C88", Offset = "0x7C5C88")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000186")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015D7")]
				[Address(RVA = "0xEF7EA4", Offset = "0xEF7EA4", VA = "0xEF7EA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000187")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015D9")]
				[Address(RVA = "0xEF7F0C", Offset = "0xEF7F0C", VA = "0xEF7F0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xEF6BCC", Offset = "0xEF6BCC", VA = "0xEF6BCC")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60015D5")]
			[Address(RVA = "0xEF78B8", Offset = "0xEF78B8", VA = "0xEF78B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xEF78BC", Offset = "0xEF78BC", VA = "0xEF78BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015D8")]
			[Address(RVA = "0xEF7EAC", Offset = "0xEF7EAC", VA = "0xEF7EAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B27")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700006F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0xEF682C", Offset = "0xEF682C", VA = "0xEF682C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000070")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0xEF6834", Offset = "0xEF6834", VA = "0xEF6834", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000071")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0xEF683C", Offset = "0xEF683C", VA = "0xEF683C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000072")]
		public override bool EnableState
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0xEF6844", Offset = "0xEF6844", VA = "0xEF6844", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0xEF6870", Offset = "0xEF6870", VA = "0xEF6870", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xEF68AC", Offset = "0xEF68AC", VA = "0xEF68AC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xEF6B5C", Offset = "0xEF6B5C", VA = "0xEF6B5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0E08", Offset = "0x7D0E08")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xEF6BF8", Offset = "0xEF6BF8", VA = "0xEF6BF8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xEF7108", Offset = "0xEF7108", VA = "0xEF7108")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xEF7380", Offset = "0xEF7380", VA = "0xEF7380")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xEF74C0", Offset = "0xEF74C0", VA = "0xEF74C0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xEF778C", Offset = "0xEF778C", VA = "0xEF778C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xEF7790", Offset = "0xEF7790", VA = "0xEF7790", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xEF7794", Offset = "0xEF7794", VA = "0xEF7794")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9850", Offset = "0x7C9850")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9860", Offset = "0x7C9860")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9870", Offset = "0x7C9870")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000073")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0xEF7F14", Offset = "0xEF7F14", VA = "0xEF7F14", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E6C", Offset = "0x7D0E6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0xEF7F1C", Offset = "0xEF7F1C", VA = "0xEF7F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E7C", Offset = "0x7D0E7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public bool EnableState
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0xEF7F24", Offset = "0xEF7F24", VA = "0xEF7F24", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0xEF7F40", Offset = "0xEF7F40", VA = "0xEF7F40", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60008F9")]
			[Address(RVA = "0xEF7F60", Offset = "0xEF7F60", VA = "0xEF7F60", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E8C", Offset = "0x7D0E8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0xEF7F68", Offset = "0xEF7F68", VA = "0xEF7F68", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0E9C", Offset = "0x7D0E9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public float SphereRadius
		{
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0xEF7F74", Offset = "0xEF7F74", VA = "0xEF7F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0EAC", Offset = "0x7D0EAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0xEF7F7C", Offset = "0xEF7F7C", VA = "0xEF7F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0EBC", Offset = "0x7D0EBC")]
			private set
			{
			}
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xEF7F84", Offset = "0xEF7F84", VA = "0xEF7F84")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xEF7FCC", Offset = "0xEF7FCC", VA = "0xEF7FCC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xEF7FD0", Offset = "0xEF7FD0", VA = "0xEF7FD0")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000172")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000B37")]
		None = 0,
		[Token(Token = "0x4000B38")]
		Ray = 1,
		[Token(Token = "0x4000B39")]
		Poke = 4,
		[Token(Token = "0x4000B3A")]
		All = -1
	}
	[Token(Token = "0x2000173")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000B3C")]
		Inactive,
		[Token(Token = "0x4000B3D")]
		PrimaryInputDown,
		[Token(Token = "0x4000B3E")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000B3F")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000174")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xEF7748", Offset = "0xEF7748", VA = "0xEF7748")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000175")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9880", Offset = "0x7C9880")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9890", Offset = "0x7C9890")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C98A0", Offset = "0x7C98A0")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000077")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000901")]
			[Address(RVA = "0xEF3990", Offset = "0xEF3990", VA = "0xEF3990")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0xEF99CC", Offset = "0xEF99CC", VA = "0xEF99CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0ECC", Offset = "0x7D0ECC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000903")]
			[Address(RVA = "0xEF99D4", Offset = "0xEF99D4", VA = "0xEF99D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0EDC", Offset = "0x7D0EDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000904")]
			get;
		}

		[Token(Token = "0x1700007A")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000905")]
			get;
		}

		[Token(Token = "0x1700007B")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000906")]
			get;
		}

		[Token(Token = "0x1700007C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000907")]
			[Address(RVA = "0xEF99E0", Offset = "0xEF99E0", VA = "0xEF99E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0EEC", Offset = "0x7D0EEC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000908")]
			[Address(RVA = "0xEF99EC", Offset = "0xEF99EC", VA = "0xEF99EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0EFC", Offset = "0x7D0EFC")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000909")]
			[Address(RVA = "0xEF99F8", Offset = "0xEF99F8", VA = "0xEF99F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0F0C", Offset = "0x7D0F0C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600090A")]
			[Address(RVA = "0xEF9A04", Offset = "0xEF9A04", VA = "0xEF9A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0F1C", Offset = "0x7D0F1C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600090F")]
			get;
			[Token(Token = "0x6000910")]
			set;
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xEF9A10", Offset = "0xEF9A10", VA = "0xEF9A10")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600090C")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600090D")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600090E")]
		public abstract void DeFocus();

		[Token(Token = "0x6000911")]
		public abstract void Initialize();

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xEF9A18", Offset = "0xEF9A18", VA = "0xEF9A18")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xEF9A68", Offset = "0xEF9A68", VA = "0xEF9A68")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xEF9AC0", Offset = "0xEF9AC0", VA = "0xEF9AC0", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xEF9D04", Offset = "0xEF9D04", VA = "0xEF9D04", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xEF77A8", Offset = "0xEF77A8", VA = "0xEF77A8")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700007F")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000917")]
			get;
		}

		[Token(Token = "0x17000080")]
		bool EnableState
		{
			[Token(Token = "0x6000919")]
			get;
			[Token(Token = "0x600091A")]
			set;
		}

		[Token(Token = "0x17000081")]
		bool ToolActivateState
		{
			[Token(Token = "0x600091B")]
			get;
			[Token(Token = "0x600091C")]
			set;
		}

		[Token(Token = "0x6000918")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000177")]
	public class PinchStateModule
	{
		[Token(Token = "0x20003B7")]
		private enum PinchState
		{
			[Token(Token = "0x40012D9")]
			None,
			[Token(Token = "0x40012DA")]
			PinchDown,
			[Token(Token = "0x40012DB")]
			PinchStay,
			[Token(Token = "0x40012DC")]
			PinchUp
		}

		[Token(Token = "0x4000B4C")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000082")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600091D")]
			[Address(RVA = "0xEFD11C", Offset = "0xEFD11C", VA = "0xEFD11C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000083")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600091E")]
			[Address(RVA = "0xEFD1A8", Offset = "0xEFD1A8", VA = "0xEFD1A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000084")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600091F")]
			[Address(RVA = "0xEFD234", Offset = "0xEFD234", VA = "0xEFD234")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xEFD2C0", Offset = "0xEFD2C0", VA = "0xEFD2C0")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xEFD2EC", Offset = "0xEFD2EC", VA = "0xEFD2EC")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000B4F")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000B50")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000B51")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000B52")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000B53")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C98C0", Offset = "0x7C98C0")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000085")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0xEFD58C", Offset = "0xEFD58C", VA = "0xEFD58C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000086")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0xEFD594", Offset = "0xEFD594", VA = "0xEFD594", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000087")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0xEFD5FC", Offset = "0xEFD5FC", VA = "0xEFD5FC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000088")]
		public override bool EnableState
		{
			[Token(Token = "0x6000925")]
			[Address(RVA = "0xEFD604", Offset = "0xEFD604", VA = "0xEFD604", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000926")]
			[Address(RVA = "0xEFD648", Offset = "0xEFD648", VA = "0xEFD648", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xEFD6BC", Offset = "0xEFD6BC", VA = "0xEFD6BC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xEFD714", Offset = "0xEFD714", VA = "0xEFD714")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xEFD7B0", Offset = "0xEFD7B0", VA = "0xEFD7B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xEFDAB0", Offset = "0xEFDAB0", VA = "0xEFDAB0")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xEFDBAC", Offset = "0xEFDBAC", VA = "0xEFDBAC", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xEFDF10", Offset = "0xEFDF10", VA = "0xEFDF10")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xEFE0B4", Offset = "0xEFE0B4", VA = "0xEFE0B4")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xEFE1DC", Offset = "0xEFE1DC", VA = "0xEFE1DC")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xEFE514", Offset = "0xEFE514", VA = "0xEFE514")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xEFE924", Offset = "0xEFE924", VA = "0xEFE924", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xEFE9F8", Offset = "0xEFE9F8", VA = "0xEFE9F8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xEFEA2C", Offset = "0xEFEA2C", VA = "0xEFEA2C")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000B5F")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000B60")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9934", Offset = "0x7C9934")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000089")]
		public bool EnableState
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0xEFD62C", Offset = "0xEFD62C", VA = "0xEFD62C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000934")]
			[Address(RVA = "0xEFD664", Offset = "0xEFD664", VA = "0xEFD664", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000935")]
			[Address(RVA = "0xEFEAE4", Offset = "0xEFEAE4", VA = "0xEFEAE4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000936")]
			[Address(RVA = "0xEFDA74", Offset = "0xEFDA74", VA = "0xEFDA74", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0xEFED14", Offset = "0xEFED14", VA = "0xEFED14", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0F2C", Offset = "0x7D0F2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000939")]
			[Address(RVA = "0xEFED1C", Offset = "0xEFED1C", VA = "0xEFED1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0F3C", Offset = "0x7D0F3C")]
			set
			{
			}
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xEFEAEC", Offset = "0xEFEAEC", VA = "0xEFEAEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xEFE958", Offset = "0xEFE958", VA = "0xEFE958", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xEFED24", Offset = "0xEFED24", VA = "0xEFED24")]
		private void Update()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xEFF050", Offset = "0xEFF050", VA = "0xEFF050")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xEFF240", Offset = "0xEFF240", VA = "0xEFF240")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700008C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0xEF65B0", Offset = "0xEF65B0", VA = "0xEF65B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600093F")]
			[Address(RVA = "0xEF65B8", Offset = "0xEF65B8", VA = "0xEF65B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0xEF6640", Offset = "0xEF6640", VA = "0xEF6640")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000941")]
			[Address(RVA = "0xEF6648", Offset = "0xEF6648", VA = "0xEF6648")]
			set
			{
			}
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xEF66B4", Offset = "0xEF66B4", VA = "0xEF66B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xEF6804", Offset = "0xEF6804", VA = "0xEF6804")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xEF6814", Offset = "0xEF6814", VA = "0xEF6814")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xEF6824", Offset = "0xEF6824", VA = "0xEF6824")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xEF40E8", Offset = "0xEF40E8", VA = "0xEF40E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xEF40EC", Offset = "0xEF40EC", VA = "0xEF40EC")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xEF416C", Offset = "0xEF416C", VA = "0xEF416C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xEF425C", Offset = "0xEF425C", VA = "0xEF425C")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xEF434C", Offset = "0xEF434C", VA = "0xEF434C")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xEF440C", Offset = "0xEF440C", VA = "0xEF440C")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xEF44FC", Offset = "0xEF44FC", VA = "0xEF44FC")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xEF4544", Offset = "0xEF4544", VA = "0xEF4544")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xEF46A0", Offset = "0xEF46A0", VA = "0xEF46A0")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xEF4710", Offset = "0xEF4710", VA = "0xEF4710")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xEF4718", Offset = "0xEF4718", VA = "0xEF4718")]
		private void Start()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xEF471C", Offset = "0xEF471C", VA = "0xEF471C")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xEF46D4", Offset = "0xEF46D4", VA = "0xEF46D4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xEF475C", Offset = "0xEF475C", VA = "0xEF475C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5C98", Offset = "0x7C5C98")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40012E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000188")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015DD")]
				[Address(RVA = "0xEFCFC0", Offset = "0xEFCFC0", VA = "0xEFCFC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000189")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015DF")]
				[Address(RVA = "0xEFD028", Offset = "0xEFD028", VA = "0xEFD028", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015DA")]
			[Address(RVA = "0xEFCCF4", Offset = "0xEFCCF4", VA = "0xEFCCF4")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xEFCDD0", Offset = "0xEFCDD0", VA = "0xEFCDD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015DC")]
			[Address(RVA = "0xEFCDD4", Offset = "0xEFCDD4", VA = "0xEFCDD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015DE")]
			[Address(RVA = "0xEFCFC8", Offset = "0xEFCFC8", VA = "0xEFCFC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B70")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000B71")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xEFC90C", Offset = "0xEFC90C", VA = "0xEFC90C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xEFC9A4", Offset = "0xEFC9A4", VA = "0xEFC9A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xEFCC30", Offset = "0xEFCC30", VA = "0xEFCC30")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xEFCBC0", Offset = "0xEFCBC0", VA = "0xEFCBC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0F4C", Offset = "0x7D0F4C")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xEFCD20", Offset = "0xEFCD20", VA = "0xEFCD20")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20003B9")]
		public enum SelectionState
		{
			[Token(Token = "0x40012E4")]
			Off,
			[Token(Token = "0x40012E5")]
			Selected,
			[Token(Token = "0x40012E6")]
			Highlighted
		}

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700008E")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0xEFF2A0", Offset = "0xEFF2A0", VA = "0xEFF2A0")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600095A")]
			[Address(RVA = "0xEFF2A8", Offset = "0xEFF2A8", VA = "0xEFF2A8")]
			set
			{
			}
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xEFF430", Offset = "0xEFF430", VA = "0xEFF430")]
		private void Awake()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xEFF5F0", Offset = "0xEFF5F0", VA = "0xEFF5F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xEFF330", Offset = "0xEFF330", VA = "0xEFF330")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xEFF6E0", Offset = "0xEFF6E0", VA = "0xEFF6E0")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20003BA")]
		public enum SegmentType
		{
			[Token(Token = "0x40012E8")]
			Straight,
			[Token(Token = "0x40012E9")]
			LeftTurn,
			[Token(Token = "0x40012EA")]
			RightTurn,
			[Token(Token = "0x40012EB")]
			Switch
		}

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000B86")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000B87")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9A14", Offset = "0x7C9A14")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700008F")]
		public float StartDistance
		{
			[Token(Token = "0x6000960")]
			[Address(RVA = "0xEFF74C", Offset = "0xEFF74C", VA = "0xEFF74C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0FB0", Offset = "0x7D0FB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000961")]
			[Address(RVA = "0xEFF754", Offset = "0xEFF754", VA = "0xEFF754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D0FC0", Offset = "0x7D0FC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public float GridSize
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0xEFF75C", Offset = "0xEFF75C", VA = "0xEFF75C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000963")]
			[Address(RVA = "0xEFF764", Offset = "0xEFF764", VA = "0xEFF764")]
			private set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public int SubDivCount
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0xEFF76C", Offset = "0xEFF76C", VA = "0xEFF76C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000965")]
			[Address(RVA = "0xEFF774", Offset = "0xEFF774", VA = "0xEFF774")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public SegmentType Type
		{
			[Token(Token = "0x6000966")]
			[Address(RVA = "0xEFF77C", Offset = "0xEFF77C", VA = "0xEFF77C")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000093")]
		public Pose EndPose
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0xEFF784", Offset = "0xEFF784", VA = "0xEFF784")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		public float Radius
		{
			[Token(Token = "0x6000968")]
			[Address(RVA = "0xEFFC18", Offset = "0xEFFC18", VA = "0xEFFC18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000095")]
		public float SegmentLength
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0xEFF7EC", Offset = "0xEFF7EC", VA = "0xEFF7EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xEFFC28", Offset = "0xEFFC28", VA = "0xEFFC28")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xEFFC40", Offset = "0xEFFC40", VA = "0xEFFC40")]
		private void Awake()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xEFF82C", Offset = "0xEFF82C", VA = "0xEFF82C")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xEFFC44", Offset = "0xEFFC44", VA = "0xEFFC44")]
		private void Update()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xEFFC48", Offset = "0xEFFC48", VA = "0xEFFC48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xEFFCB4", Offset = "0xEFFCB4", VA = "0xEFFCB4")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xF0083C", Offset = "0xF0083C", VA = "0xF0083C")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xF00B48", Offset = "0xF00B48", VA = "0xF00B48")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5CA8", Offset = "0x7C5CA8")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40012EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40012F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700018A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015E3")]
				[Address(RVA = "0xF01750", Offset = "0xF01750", VA = "0xF01750", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015E5")]
				[Address(RVA = "0xF017B8", Offset = "0xF017B8", VA = "0xF017B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015E0")]
			[Address(RVA = "0xF014C8", Offset = "0xF014C8", VA = "0xF014C8")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60015E1")]
			[Address(RVA = "0xF015A4", Offset = "0xF015A4", VA = "0xF015A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015E2")]
			[Address(RVA = "0xF015A8", Offset = "0xF015A8", VA = "0xF015A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xF01758", Offset = "0xF01758", VA = "0xF01758", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B8D")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000B8E")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xF00BEC", Offset = "0xF00BEC", VA = "0xF00BEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xF00C98", Offset = "0xF00C98", VA = "0xF00C98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xF00D4C", Offset = "0xF00D4C", VA = "0xF00D4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xF00E78", Offset = "0xF00E78", VA = "0xF00E78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xF00FE8", Offset = "0xF00FE8", VA = "0xF00FE8")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xF01184", Offset = "0xF01184", VA = "0xF01184")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xF01400", Offset = "0xF01400", VA = "0xF01400")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xF01298", Offset = "0xF01298", VA = "0xF01298")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xF012AC", Offset = "0xF012AC", VA = "0xF012AC")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xF01458", Offset = "0xF01458", VA = "0xF01458")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D0FD0", Offset = "0x7D0FD0")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xF014F4", Offset = "0xF014F4", VA = "0xF014F4")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000096")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x600097D")]
			[Address(RVA = "0xF017C0", Offset = "0xF017C0", VA = "0xF017C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xF017D0", Offset = "0xF017D0", VA = "0xF017D0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xF017D8", Offset = "0xF017D8", VA = "0xF017D8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xF01C44", Offset = "0xF01C44", VA = "0xF01C44")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000BA1")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000BA2")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9B14", Offset = "0x7C9B14")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000097")]
		public float Distance
		{
			[Token(Token = "0x6000981")]
			[Address(RVA = "0xF01D3C", Offset = "0xF01D3C", VA = "0xF01D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1034", Offset = "0x7D1034")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000982")]
			[Address(RVA = "0xF01D44", Offset = "0xF01D44", VA = "0xF01D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1044", Offset = "0x7D1044")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public float Scale
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0xF01D4C", Offset = "0xF01D4C", VA = "0xF01D4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000984")]
			[Address(RVA = "0xF01D54", Offset = "0xF01D54", VA = "0xF01D54")]
			set
			{
			}
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xF017D4", Offset = "0xF017D4", VA = "0xF017D4", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xF01D5C", Offset = "0xF01D5C", VA = "0xF01D5C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xF01820", Offset = "0xF01820", VA = "0xF01820")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xF01AF8", Offset = "0xF01AF8", VA = "0xF01AF8")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000989")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xF01CB4", Offset = "0xF01CB4", VA = "0xF01CB4")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5CB8", Offset = "0x7C5CB8")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700018C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015E9")]
				[Address(RVA = "0xF026E4", Offset = "0xF026E4", VA = "0xF026E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015EB")]
				[Address(RVA = "0xF0274C", Offset = "0xF0274C", VA = "0xF0274C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xF02328", Offset = "0xF02328", VA = "0xF02328")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xF024C0", Offset = "0xF024C0", VA = "0xF024C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015E8")]
			[Address(RVA = "0xF024C4", Offset = "0xF024C4", VA = "0xF024C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xF026EC", Offset = "0xF026EC", VA = "0xF026EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xF01F2C", Offset = "0xF01F2C", VA = "0xF01F2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xF01F78", Offset = "0xF01F78", VA = "0xF01F78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xF02084", Offset = "0xF02084", VA = "0xF02084")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xF021CC", Offset = "0xF021CC", VA = "0xF021CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xF020E0", Offset = "0xF020E0", VA = "0xF020E0")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xF022A8", Offset = "0xF022A8", VA = "0xF022A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1054", Offset = "0x7D1054")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xF02354", Offset = "0xF02354", VA = "0xF02354")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xF02400", Offset = "0xF02400", VA = "0xF02400")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0xF02460", Offset = "0xF02460", VA = "0xF02460")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20003BD")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40012FE")]
			Start,
			[Token(Token = "0x40012FF")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001300")]
			Stop
		}

		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5CC8", Offset = "0x7C5CC8")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700018E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015EF")]
				[Address(RVA = "0xF03070", Offset = "0xF03070", VA = "0xF03070", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015F1")]
				[Address(RVA = "0xF030D8", Offset = "0xF030D8", VA = "0xF030D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xF02A0C", Offset = "0xF02A0C", VA = "0xF02A0C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xF02E50", Offset = "0xF02E50", VA = "0xF02E50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xF02E54", Offset = "0xF02E54", VA = "0xF02E54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xF03078", Offset = "0xF03078", VA = "0xF03078", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BB5")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000BB6")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000BB7")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000BB8")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7C9B74", Offset = "0x7C9B74")]
		protected float _initialSpeed;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xF02754", Offset = "0xF02754", VA = "0xF02754")]
		private void Start()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xF028AC", Offset = "0xF028AC", VA = "0xF028AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xF028B8", Offset = "0xF028B8", VA = "0xF028B8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xEF4120", Offset = "0xEF4120", VA = "0xEF4120")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xF02828", Offset = "0xF02828", VA = "0xF02828")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D10B8", Offset = "0x7D10B8")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xF02A38", Offset = "0xF02A38", VA = "0xF02A38")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xF029A8", Offset = "0xF029A8", VA = "0xF029A8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xEF41A0", Offset = "0xEF41A0", VA = "0xEF41A0")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xEF4290", Offset = "0xEF4290", VA = "0xEF4290")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xF02C6C", Offset = "0xF02C6C", VA = "0xF02C6C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xF02D5C", Offset = "0xF02D5C", VA = "0xF02D5C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xEF4380", Offset = "0xEF4380", VA = "0xEF4380")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xEF4440", Offset = "0xEF4440", VA = "0xEF4440")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xEF4534", Offset = "0xEF4534", VA = "0xEF4534")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xF02DE4", Offset = "0xF02DE4", VA = "0xF02DE4")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000099")]
		public float TrackLength
		{
			[Token(Token = "0x60009A4")]
			[Address(RVA = "0xF030E0", Offset = "0xF030E0", VA = "0xF030E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0xF030E8", Offset = "0xF030E8", VA = "0xF030E8")]
			private set
			{
			}
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xF030F0", Offset = "0xF030F0", VA = "0xF030F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xF01DDC", Offset = "0xF01DDC", VA = "0xF01DDC")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xF030F4", Offset = "0xF030F4", VA = "0xF030F4")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xF032EC", Offset = "0xF032EC", VA = "0xF032EC")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xF03408", Offset = "0xF03408", VA = "0xF03408")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class Pose
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xEFD470", Offset = "0xEFD470", VA = "0xEFD470")]
		public Pose()
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xEFD51C", Offset = "0xEFD51C", VA = "0xEFD51C")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5CD8", Offset = "0x7C5CD8")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000190")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015F5")]
				[Address(RVA = "0xF039EC", Offset = "0xF039EC", VA = "0xF039EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000191")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015F7")]
				[Address(RVA = "0xF03A54", Offset = "0xF03A54", VA = "0xF03A54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xF036B0", Offset = "0xF036B0", VA = "0xF036B0")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60015F3")]
			[Address(RVA = "0xF03810", Offset = "0xF03810", VA = "0xF03810", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015F4")]
			[Address(RVA = "0xF03814", Offset = "0xF03814", VA = "0xF03814", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015F6")]
			[Address(RVA = "0xF039F4", Offset = "0xF039F4", VA = "0xF039F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5CE8", Offset = "0x7C5CE8")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000192")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015FB")]
				[Address(RVA = "0xF03B28", Offset = "0xF03B28", VA = "0xF03B28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000193")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015FD")]
				[Address(RVA = "0xF03B90", Offset = "0xF03B90", VA = "0xF03B90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015F8")]
			[Address(RVA = "0xF03770", Offset = "0xF03770", VA = "0xF03770")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xF03A5C", Offset = "0xF03A5C", VA = "0xF03A5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xF03A60", Offset = "0xF03A60", VA = "0xF03A60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015FC")]
			[Address(RVA = "0xF03B30", Offset = "0xF03B30", VA = "0xF03B30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BDB")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C9D5C", Offset = "0x7C9D5C")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700009A")]
		public bool IsMoving
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xF03424", Offset = "0xF03424", VA = "0xF03424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D111C", Offset = "0x7D111C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0xF0342C", Offset = "0xF0342C", VA = "0xF0342C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D112C", Offset = "0x7D112C")]
			private set
			{
			}
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xF03438", Offset = "0xF03438", VA = "0xF03438")]
		private void Start()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xF03474", Offset = "0xF03474", VA = "0xF03474")]
		private void Update()
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xF035C8", Offset = "0xF035C8", VA = "0xF035C8")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xF03630", Offset = "0xF03630", VA = "0xF03630")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D113C", Offset = "0x7D113C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xF036DC", Offset = "0xF036DC", VA = "0xF036DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D11A0", Offset = "0x7D11A0")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xF0379C", Offset = "0xF0379C", VA = "0xF0379C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xF03808", Offset = "0xF03808", VA = "0xF03808")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xF03B98", Offset = "0xF03B98", VA = "0xF03B98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xF03C00", Offset = "0xF03C00", VA = "0xF03C00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xF03CB8", Offset = "0xF03CB8", VA = "0xF03CB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xF03DB8", Offset = "0xF03DB8", VA = "0xF03DB8")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xF03E34", Offset = "0xF03E34", VA = "0xF03E34")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xF03F10", Offset = "0xF03F10", VA = "0xF03F10")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000BEC")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000BED")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000BEE")]
		EUDT_None,
		[Token(Token = "0x4000BEF")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200018A")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5CF8", Offset = "0x7C5CF8")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000194")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001601")]
				[Address(RVA = "0xEFC89C", Offset = "0xEFC89C", VA = "0xEFC89C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000195")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001603")]
				[Address(RVA = "0xEFC904", Offset = "0xEFC904", VA = "0xEFC904", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015FE")]
			[Address(RVA = "0xEFBF18", Offset = "0xEFBF18", VA = "0xEFBF18")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60015FF")]
			[Address(RVA = "0xEFC650", Offset = "0xEFC650", VA = "0xEFC650", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001600")]
			[Address(RVA = "0xEFC654", Offset = "0xEFC654", VA = "0xEFC654", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001602")]
			[Address(RVA = "0xEFC8A4", Offset = "0xEFC8A4", VA = "0xEFC8A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000BF1")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000BF2")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000BF3")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C9D9C", Offset = "0x7C9D9C")]
		public GameObject mainCamera;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7C9DD4", Offset = "0x7C9DD4")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xEFB260", Offset = "0xEFB260", VA = "0xEFB260")]
		private void Start()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xEFBA40", Offset = "0xEFBA40", VA = "0xEFBA40")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xEFBB80", Offset = "0xEFBB80", VA = "0xEFBB80")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xEFBCA8", Offset = "0xEFBCA8", VA = "0xEFBCA8")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xEFBDD0", Offset = "0xEFBDD0", VA = "0xEFBDD0")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xEFBB54", Offset = "0xEFBB54", VA = "0xEFBB54")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xEFBEA8", Offset = "0xEFBEA8", VA = "0xEFBEA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1204", Offset = "0x7D1204")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xEFBF44", Offset = "0xEFBF44", VA = "0xEFBF44")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xEFB5CC", Offset = "0xEFB5CC", VA = "0xEFB5CC")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xEFC06C", Offset = "0xEFC06C", VA = "0xEFC06C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xEFBF78", Offset = "0xEFBF78", VA = "0xEFBF78")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xEFC408", Offset = "0xEFC408", VA = "0xEFC408")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xEFC4E4", Offset = "0xEFC4E4", VA = "0xEFC4E4")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xEFC560", Offset = "0xEFC560", VA = "0xEFC560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1268", Offset = "0x7D1268")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xEFC5B0", Offset = "0xEFC5B0", VA = "0xEFC5B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1278", Offset = "0x7D1278")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xEFC600", Offset = "0xEFC600", VA = "0xEFC600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1288", Offset = "0x7D1288")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200018B")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5D08", Offset = "0x7C5D08")]
		private sealed class <>c
		{
			[Token(Token = "0x4001319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400131A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__33_0;

			[Token(Token = "0x6001605")]
			[Address(RVA = "0xB5AF34", Offset = "0xB5AF34", VA = "0xB5AF34")]
			public <>c()
			{
			}

			[Token(Token = "0x6001606")]
			[Address(RVA = "0xB5AF3C", Offset = "0xB5AF3C", VA = "0xB5AF3C")]
			internal bool <Start>b__33_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text m_isGrabText;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text m_isGrabStateText;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isGrabbed;

		[Token(Token = "0x4000C0B")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000C0C")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000C0D")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000C0E")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000C0F")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000C10")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000C11")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000C12")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000C13")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000C14")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000C15")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_isPointing;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_pointBlend;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HandPoseId handPose;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x1700009B")]
		public bool IsGrabbed
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0xB5A2F0", Offset = "0xB5A2F0", VA = "0xB5A2F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0xB5A2F8", Offset = "0xB5A2F8", VA = "0xB5A2F8")]
			set
			{
			}
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xB5A304", Offset = "0xB5A304", VA = "0xB5A304")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xB5A308", Offset = "0xB5A308", VA = "0xB5A308")]
		private void Start()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xB5A710", Offset = "0xB5A710", VA = "0xB5A710")]
		private void Update()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xB5A7C0", Offset = "0xB5A7C0", VA = "0xB5A7C0")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xB5AAE8", Offset = "0xB5AAE8", VA = "0xB5AAE8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xB5AC50", Offset = "0xB5AC50", VA = "0xB5AC50")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xB5AD9C", Offset = "0xB5AD9C", VA = "0xB5AD9C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xB5A85C", Offset = "0xB5A85C", VA = "0xB5A85C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xB5A8FC", Offset = "0xB5A8FC", VA = "0xB5A8FC")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xB5A564", Offset = "0xB5A564", VA = "0xB5A564")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xB5AEB8", Offset = "0xB5AEB8", VA = "0xB5AEB8")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000C28")]
		Default,
		[Token(Token = "0x4000C29")]
		Generic,
		[Token(Token = "0x4000C2A")]
		PingPongBall,
		[Token(Token = "0x4000C2B")]
		Controller,
		[Token(Token = "0x4000C2C")]
		steering,
		[Token(Token = "0x4000C2D")]
		Gear,
		[Token(Token = "0x4000C2E")]
		HandBrake
	}
	[Token(Token = "0x200018D")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700009C")]
		public bool AllowPointing
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0xB5AF68", Offset = "0xB5AF68", VA = "0xB5AF68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009D")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0xB5AF70", Offset = "0xB5AF70", VA = "0xB5AF70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009E")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0xB5AF78", Offset = "0xB5AF78", VA = "0xB5AF78")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xB5AF80", Offset = "0xB5AF80", VA = "0xB5AF80")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xB5AF88", Offset = "0xB5AF88", VA = "0xB5AF88")]
		private void Update()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xB5B1FC", Offset = "0xB5B1FC", VA = "0xB5B1FC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xB5B258", Offset = "0xB5B258", VA = "0xB5B258")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xB5B29C", Offset = "0xB5B29C", VA = "0xB5B29C")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200018F")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000C36")]
		TRIANGLES,
		[Token(Token = "0x4000C37")]
		QUADS
	}
	[Token(Token = "0x2000190")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000C39")]
		ABSORPTION,
		[Token(Token = "0x4000C3A")]
		TRANSMISSION,
		[Token(Token = "0x4000C3B")]
		SCATTERING
	}
	[Token(Token = "0x2000191")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000192")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x139F724", Offset = "0x139F724", VA = "0x139F724")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x139F80C", Offset = "0x139F80C", VA = "0x139F80C")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x139F914", Offset = "0x139F914", VA = "0x139F914")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x139FA1C", Offset = "0x139FA1C", VA = "0x139FA1C")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x139FA6C", Offset = "0x139FA6C", VA = "0x139FA6C", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public enum AbuseReportType
	{
		[Token(Token = "0x4000C42")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C9E8C", Offset = "0x7C9E8C")]
		Unknown,
		[Token(Token = "0x4000C43")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C9EC4", Offset = "0x7C9EC4")]
		Object,
		[Token(Token = "0x4000C44")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C9EFC", Offset = "0x7C9EFC")]
		User
	}
	[Token(Token = "0x2000194")]
	public enum AchievementType
	{
		[Token(Token = "0x4000C46")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C9F34", Offset = "0x7C9F34")]
		Unknown,
		[Token(Token = "0x4000C47")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C9F6C", Offset = "0x7C9F6C")]
		Simple,
		[Token(Token = "0x4000C48")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C9FA4", Offset = "0x7C9FA4")]
		Bitfield,
		[Token(Token = "0x4000C49")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7C9FDC", Offset = "0x7C9FDC")]
		Count
	}
	[Token(Token = "0x2000195")]
	public class AndroidPlatform
	{
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x13A0CBC", Offset = "0x13A0CBC", VA = "0x13A0CBC")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x13A0E08", Offset = "0x13A0E08", VA = "0x13A0E08")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x13A0F88", Offset = "0x13A0F88", VA = "0x13A0F88")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x13A14B0", Offset = "0x13A14B0", VA = "0x13A14B0")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x13A1598", Offset = "0x13A1598", VA = "0x13A1598")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x13A1258", Offset = "0x13A1258", VA = "0x13A1258")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x13A16BC", Offset = "0x13A16BC", VA = "0x13A16BC", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class CAPI
	{
		[Token(Token = "0x20003C3")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x400131F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x6001607")]
			[Address(RVA = "0x858C64", Offset = "0x858C64", VA = "0x858C64")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x6001608")]
			[Address(RVA = "0x858C7C", Offset = "0x858C7C", VA = "0x858C7C")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6001609")]
			[Address(RVA = "0x858C98", Offset = "0x858C98", VA = "0x858C98")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x20003C4")]
		public struct ovrNetSyncVec3
		{
			[Token(Token = "0x4001320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4001321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4001322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float z;
		}

		[Token(Token = "0x20003C5")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x600160A")]
			[Address(RVA = "0x858D64", Offset = "0x858D64", VA = "0x858D64")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x20003C6")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x4001327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x400132A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x20003C7")]
		public struct OculusInitParams
		{
			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7C5D18", Offset = "0x7C5D18")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x4000C4B")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x4000C4D")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x13A2DA4", Offset = "0x13A2DA4", VA = "0x13A2DA4")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x13A2F64", Offset = "0x13A2F64", VA = "0x13A2F64")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x13A3410", Offset = "0x13A3410", VA = "0x13A3410")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x13A34CC", Offset = "0x13A34CC", VA = "0x13A34CC")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x13A37D4", Offset = "0x13A37D4", VA = "0x13A37D4")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x13A38EC", Offset = "0x13A38EC", VA = "0x13A38EC")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x13A3978", Offset = "0x13A3978", VA = "0x13A3978")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x13A39E8", Offset = "0x13A39E8", VA = "0x13A39E8")]
		public static ulong DateTimeToNative(DateTime dt)
		{
			return default(ulong);
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x13A3AE4", Offset = "0x13A3AE4", VA = "0x13A3AE4")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x13A3BC8", Offset = "0x13A3BC8", VA = "0x13A3BC8")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x13A3C6C", Offset = "0x13A3C6C", VA = "0x13A3C6C")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x13A0D6C", Offset = "0x13A0D6C", VA = "0x13A0D6C")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x13A3DDC", Offset = "0x13A3DDC", VA = "0x13A3DDC")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x13A0EF0", Offset = "0x13A0EF0", VA = "0x13A0EF0")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x13A3E5C", Offset = "0x13A3E5C", VA = "0x13A3E5C")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x13A3F08", Offset = "0x13A3F08", VA = "0x13A3F08")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x13A3FE0", Offset = "0x13A3FE0", VA = "0x13A3FE0")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x13A408C", Offset = "0x13A408C", VA = "0x13A408C")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x13A4138", Offset = "0x13A4138", VA = "0x13A4138")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x13A41E0", Offset = "0x13A41E0", VA = "0x13A41E0")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x13A427C", Offset = "0x13A427C", VA = "0x13A427C")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x13A42DC", Offset = "0x13A42DC", VA = "0x13A42DC")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x13A4350", Offset = "0x13A4350", VA = "0x13A4350")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x13A43C4", Offset = "0x13A43C4", VA = "0x13A43C4")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x13A4444", Offset = "0x13A4444", VA = "0x13A4444")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x13A44B8", Offset = "0x13A44B8", VA = "0x13A44B8")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x13A4538", Offset = "0x13A4538", VA = "0x13A4538")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x13A45AC", Offset = "0x13A45AC", VA = "0x13A45AC")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x13A462C", Offset = "0x13A462C", VA = "0x13A462C")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x13A46CC", Offset = "0x13A46CC", VA = "0x13A46CC")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x13A4740", Offset = "0x13A4740", VA = "0x13A4740")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x13A47C0", Offset = "0x13A47C0", VA = "0x13A47C0")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x13A4840", Offset = "0x13A4840", VA = "0x13A4840")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x13A48C0", Offset = "0x13A48C0", VA = "0x13A48C0")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x13A0A9C", Offset = "0x13A0A9C", VA = "0x13A0A9C")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x13A4930", Offset = "0x13A4930", VA = "0x13A4930")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x13A49A0", Offset = "0x13A49A0", VA = "0x13A49A0")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x13A4A24", Offset = "0x13A4A24", VA = "0x13A4A24")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x13A4AB8", Offset = "0x13A4AB8", VA = "0x13A4AB8")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x13A4DBC", Offset = "0x13A4DBC", VA = "0x13A4DBC")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x13A13C4", Offset = "0x13A13C4", VA = "0x13A13C4")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x13A4E5C", Offset = "0x13A4E5C", VA = "0x13A4E5C")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x13A4F50", Offset = "0x13A4F50", VA = "0x13A4F50")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x13A50AC", Offset = "0x13A50AC", VA = "0x13A50AC")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x13A5154", Offset = "0x13A5154", VA = "0x13A5154")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x13A51D0", Offset = "0x13A51D0", VA = "0x13A51D0")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x13A5238", Offset = "0x13A5238", VA = "0x13A5238")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x13A52B8", Offset = "0x13A52B8", VA = "0x13A52B8")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x13A5358", Offset = "0x13A5358", VA = "0x13A5358")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x13A53F8", Offset = "0x13A53F8", VA = "0x13A53F8")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedFloatPCM(long connection_id, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x13A5498", Offset = "0x13A5498", VA = "0x13A5498")]
		public static extern UIntPtr ovr_NetSync_GetAmbisonicInterleavedInt16PCM(long connection_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x13A5538", Offset = "0x13A5538", VA = "0x13A5538")]
		public static extern bool ovr_NetSync_GetListenerPosition(long connection_id, ulong sessionId, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x13A55D8", Offset = "0x13A55D8", VA = "0x13A55D8")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamFloatPCM(long connection_id, ulong sessionId, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x13A5688", Offset = "0x13A5688", VA = "0x13A5688")]
		public static extern UIntPtr ovr_NetSync_GetMonostreamInt16PCM(long connection_id, ulong session_id, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x13A5738", Offset = "0x13A5738", VA = "0x13A5738")]
		public static extern UIntPtr ovr_NetSync_GetPcmBufferMaxSamples();

		[PreserveSig]
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x13A57AC", Offset = "0x13A57AC", VA = "0x13A57AC")]
		public static extern void ovr_NetSync_SetListenerPosition(long connection_id, ref ovrNetSyncVec3 position);

		[PreserveSig]
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x13A583C", Offset = "0x13A583C", VA = "0x13A583C")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x13A58BC", Offset = "0x13A58BC", VA = "0x13A58BC")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x13A5938", Offset = "0x13A5938", VA = "0x13A5938")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x13A59B8", Offset = "0x13A59B8", VA = "0x13A59B8")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x13A5A28", Offset = "0x13A5A28", VA = "0x13A5A28")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x13A5AA8", Offset = "0x13A5AA8", VA = "0x13A5AA8")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x13A5B30", Offset = "0x13A5B30", VA = "0x13A5B30")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x13A5BB0", Offset = "0x13A5BB0", VA = "0x13A5BB0")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x13A5C24", Offset = "0x13A5C24", VA = "0x13A5C24")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x13A5CDC", Offset = "0x13A5CDC", VA = "0x13A5CDC")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x13A5D84", Offset = "0x13A5D84", VA = "0x13A5D84")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x13A5DF8", Offset = "0x13A5DF8", VA = "0x13A5DF8")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x13A5E6C", Offset = "0x13A5E6C", VA = "0x13A5E6C")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x13A5EE8", Offset = "0x13A5EE8", VA = "0x13A5EE8")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x13A5F5C", Offset = "0x13A5F5C", VA = "0x13A5F5C")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x13A5FDC", Offset = "0x13A5FDC", VA = "0x13A5FDC")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x13A605C", Offset = "0x13A605C", VA = "0x13A605C")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x13A60DC", Offset = "0x13A60DC", VA = "0x13A60DC")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x13A6150", Offset = "0x13A6150", VA = "0x13A6150")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x13A61F0", Offset = "0x13A61F0", VA = "0x13A61F0")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x13A6290", Offset = "0x13A6290", VA = "0x13A6290")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x13A6310", Offset = "0x13A6310", VA = "0x13A6310")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x13A63C8", Offset = "0x13A63C8", VA = "0x13A63C8")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x13A6480", Offset = "0x13A6480", VA = "0x13A6480")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x13A6500", Offset = "0x13A6500", VA = "0x13A6500")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x13A6580", Offset = "0x13A6580", VA = "0x13A6580")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x13A6610", Offset = "0x13A6610", VA = "0x13A6610")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x13A6684", Offset = "0x13A6684", VA = "0x13A6684")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x13A66F8", Offset = "0x13A66F8", VA = "0x13A66F8")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x13A6778", Offset = "0x13A6778", VA = "0x13A6778")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x13A67F8", Offset = "0x13A67F8", VA = "0x13A67F8")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x13A6878", Offset = "0x13A6878", VA = "0x13A6878")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x13A68F8", Offset = "0x13A68F8", VA = "0x13A68F8")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x139FCC0", Offset = "0x139FCC0", VA = "0x139FCC0")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x13A6978", Offset = "0x13A6978", VA = "0x13A6978")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x139FE98", Offset = "0x139FE98", VA = "0x139FE98")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x13A6A08", Offset = "0x13A6A08", VA = "0x13A6A08")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x13A0074", Offset = "0x13A0074", VA = "0x13A0074")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x13A01F0", Offset = "0x13A01F0", VA = "0x13A01F0")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x13A0390", Offset = "0x13A0390", VA = "0x13A0390")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x13A0610", Offset = "0x13A0610", VA = "0x13A0610")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x13A087C", Offset = "0x13A087C", VA = "0x13A087C")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x13A6A98", Offset = "0x13A6A98", VA = "0x13A6A98")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x13A6B18", Offset = "0x13A6B18", VA = "0x13A6B18")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x13A6BA8", Offset = "0x13A6BA8", VA = "0x13A6BA8")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x13A1098", Offset = "0x13A1098", VA = "0x13A1098")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x13A12A8", Offset = "0x13A12A8", VA = "0x13A12A8")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x13A6C1C", Offset = "0x13A6C1C", VA = "0x13A6C1C")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x13A6C90", Offset = "0x13A6C90", VA = "0x13A6C90")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x13A6D04", Offset = "0x13A6D04", VA = "0x13A6D04")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x13A6DAC", Offset = "0x13A6DAC", VA = "0x13A6DAC")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x13A1908", Offset = "0x13A1908", VA = "0x13A1908")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x13A1AA0", Offset = "0x13A1AA0", VA = "0x13A1AA0")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x13A1C38", Offset = "0x13A1C38", VA = "0x13A1C38")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x13A6E2C", Offset = "0x13A6E2C", VA = "0x13A6E2C")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x13A1DF8", Offset = "0x13A1DF8", VA = "0x13A1DF8")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x13A1F90", Offset = "0x13A1F90", VA = "0x13A1F90")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x13A2128", Offset = "0x13A2128", VA = "0x13A2128")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x13A6EAC", Offset = "0x13A6EAC", VA = "0x13A6EAC")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x13A22E8", Offset = "0x13A22E8", VA = "0x13A22E8")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x13A2480", Offset = "0x13A2480", VA = "0x13A2480")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x13A2618", Offset = "0x13A2618", VA = "0x13A2618")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x13A6F2C", Offset = "0x13A6F2C", VA = "0x13A6F2C")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x13A27C8", Offset = "0x13A27C8", VA = "0x13A27C8")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x13A2954", Offset = "0x13A2954", VA = "0x13A2954")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x13A2AEC", Offset = "0x13A2AEC", VA = "0x13A2AEC")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x13A2C84", Offset = "0x13A2C84", VA = "0x13A2C84")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x13A6FAC", Offset = "0x13A6FAC", VA = "0x13A6FAC")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x13A702C", Offset = "0x13A702C", VA = "0x13A702C")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x13A7100", Offset = "0x13A7100", VA = "0x13A7100")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x13A7190", Offset = "0x13A7190", VA = "0x13A7190")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x13A7240", Offset = "0x13A7240", VA = "0x13A7240")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x13A72E0", Offset = "0x13A72E0", VA = "0x13A72E0")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x13A7390", Offset = "0x13A7390", VA = "0x13A7390")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x13A7464", Offset = "0x13A7464", VA = "0x13A7464")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x13A74F4", Offset = "0x13A74F4", VA = "0x13A74F4")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x13A75C8", Offset = "0x13A75C8", VA = "0x13A75C8")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x13A7658", Offset = "0x13A7658", VA = "0x13A7658")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x13A7700", Offset = "0x13A7700", VA = "0x13A7700")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x13A7780", Offset = "0x13A7780", VA = "0x13A7780")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x13A7854", Offset = "0x13A7854", VA = "0x13A7854")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x13A78E4", Offset = "0x13A78E4", VA = "0x13A78E4")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x13A798C", Offset = "0x13A798C", VA = "0x13A798C")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x13A7A0C", Offset = "0x13A7A0C", VA = "0x13A7A0C")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x13A7AE0", Offset = "0x13A7AE0", VA = "0x13A7AE0")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x13A7B70", Offset = "0x13A7B70", VA = "0x13A7B70")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x13A7C64", Offset = "0x13A7C64", VA = "0x13A7C64")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x13A7CFC", Offset = "0x13A7CFC", VA = "0x13A7CFC")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x13A7DF0", Offset = "0x13A7DF0", VA = "0x13A7DF0")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x13A7E88", Offset = "0x13A7E88", VA = "0x13A7E88")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x13A7FA4", Offset = "0x13A7FA4", VA = "0x13A7FA4")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x13A806C", Offset = "0x13A806C", VA = "0x13A806C")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x13A80E0", Offset = "0x13A80E0", VA = "0x13A80E0")]
		public static extern ulong ovr_Colocation_GetCurrentMapUuid();

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x13A8154", Offset = "0x13A8154", VA = "0x13A8154")]
		public static ulong ovr_Colocation_RequestMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x13A81FC", Offset = "0x13A81FC", VA = "0x13A81FC")]
		private static extern ulong ovr_Colocation_RequestMap_Native(IntPtr uuid);

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x13A827C", Offset = "0x13A827C", VA = "0x13A827C")]
		public static ulong ovr_Colocation_ShareMap(string uuid)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x13A8324", Offset = "0x13A8324", VA = "0x13A8324")]
		private static extern ulong ovr_Colocation_ShareMap_Native(IntPtr uuid);

		[PreserveSig]
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x13A83A4", Offset = "0x13A83A4", VA = "0x13A83A4")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x13A8418", Offset = "0x13A8418", VA = "0x13A8418")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x13A84C0", Offset = "0x13A84C0", VA = "0x13A84C0")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x13A8540", Offset = "0x13A8540", VA = "0x13A8540")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x13A85E8", Offset = "0x13A85E8", VA = "0x13A85E8")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x13A8664", Offset = "0x13A8664", VA = "0x13A8664")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x13A870C", Offset = "0x13A870C", VA = "0x13A870C")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x13A878C", Offset = "0x13A878C", VA = "0x13A878C")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x13A8860", Offset = "0x13A8860", VA = "0x13A8860")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x13A88F0", Offset = "0x13A88F0", VA = "0x13A88F0")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x13A8A4C", Offset = "0x13A8A4C", VA = "0x13A8A4C")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x13A8BD8", Offset = "0x13A8BD8", VA = "0x13A8BD8")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x13A8C80", Offset = "0x13A8C80", VA = "0x13A8C80")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x13A8D00", Offset = "0x13A8D00", VA = "0x13A8D00")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x13A8DA8", Offset = "0x13A8DA8", VA = "0x13A8DA8")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x13A8E28", Offset = "0x13A8E28", VA = "0x13A8E28")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x13A8F7C", Offset = "0x13A8F7C", VA = "0x13A8F7C")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[PreserveSig]
		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x13A8FF0", Offset = "0x13A8FF0", VA = "0x13A8FF0")]
		public static extern ulong ovr_IAP_GetViewerPurchasesDurableCache();

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x13A9064", Offset = "0x13A9064", VA = "0x13A9064")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x13A910C", Offset = "0x13A910C", VA = "0x13A910C")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x13A918C", Offset = "0x13A918C", VA = "0x13A918C")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x13A9200", Offset = "0x13A9200", VA = "0x13A9200")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x13A92A8", Offset = "0x13A92A8", VA = "0x13A92A8")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x13A9328", Offset = "0x13A9328", VA = "0x13A9328")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x13A93F8", Offset = "0x13A93F8", VA = "0x13A93F8")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x13A94A0", Offset = "0x13A94A0", VA = "0x13A94A0")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x13A9560", Offset = "0x13A9560", VA = "0x13A9560")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x13A95F8", Offset = "0x13A95F8", VA = "0x13A95F8")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x13A9678", Offset = "0x13A9678", VA = "0x13A9678")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x13A96F8", Offset = "0x13A96F8", VA = "0x13A96F8")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x13A97D0", Offset = "0x13A97D0", VA = "0x13A97D0")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x13A9888", Offset = "0x13A9888", VA = "0x13A9888")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x13A98FC", Offset = "0x13A98FC", VA = "0x13A98FC")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x13A99A4", Offset = "0x13A99A4", VA = "0x13A99A4")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x13A9A24", Offset = "0x13A9A24", VA = "0x13A9A24")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x13A9A98", Offset = "0x13A9A98", VA = "0x13A9A98")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x13A9B0C", Offset = "0x13A9B0C", VA = "0x13A9B0C")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x13A9B80", Offset = "0x13A9B80", VA = "0x13A9B80")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x13A9C10", Offset = "0x13A9C10", VA = "0x13A9C10")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x13A9C84", Offset = "0x13A9C84", VA = "0x13A9C84")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x13A9CF8", Offset = "0x13A9CF8", VA = "0x13A9CF8")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x13A9D78", Offset = "0x13A9D78", VA = "0x13A9D78")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x13A9DF8", Offset = "0x13A9DF8", VA = "0x13A9DF8")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x13A9EB0", Offset = "0x13A9EB0", VA = "0x13A9EB0")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x13A9F40", Offset = "0x13A9F40", VA = "0x13A9F40")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x13A9FF8", Offset = "0x13A9FF8", VA = "0x13A9FF8")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x13AA088", Offset = "0x13AA088", VA = "0x13AA088")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x13AA15C", Offset = "0x13AA15C", VA = "0x13AA15C")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x13AA1EC", Offset = "0x13AA1EC", VA = "0x13AA1EC")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x13AA260", Offset = "0x13AA260", VA = "0x13AA260")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x13AA330", Offset = "0x13AA330", VA = "0x13AA330")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x13AA3D8", Offset = "0x13AA3D8", VA = "0x13AA3D8")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x13AA490", Offset = "0x13AA490", VA = "0x13AA490")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x13AA520", Offset = "0x13AA520", VA = "0x13AA520")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x13AA5E0", Offset = "0x13AA5E0", VA = "0x13AA5E0")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x13AA678", Offset = "0x13AA678", VA = "0x13AA678")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x13AA730", Offset = "0x13AA730", VA = "0x13AA730")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x13AA7C0", Offset = "0x13AA7C0", VA = "0x13AA7C0")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x13AA878", Offset = "0x13AA878", VA = "0x13AA878")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x13AA908", Offset = "0x13AA908", VA = "0x13AA908")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x13AA9C0", Offset = "0x13AA9C0", VA = "0x13AA9C0")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x13AAA50", Offset = "0x13AAA50", VA = "0x13AAA50")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x13AAAE0", Offset = "0x13AAAE0", VA = "0x13AAAE0")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x13AAB70", Offset = "0x13AAB70", VA = "0x13AAB70")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x13AABE4", Offset = "0x13AABE4", VA = "0x13AABE4")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x13AACA4", Offset = "0x13AACA4", VA = "0x13AACA4")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x13AAD3C", Offset = "0x13AAD3C", VA = "0x13AAD3C")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x13AADCC", Offset = "0x13AADCC", VA = "0x13AADCC")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x13AAE80", Offset = "0x13AAE80", VA = "0x13AAE80")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x13AAFDC", Offset = "0x13AAFDC", VA = "0x13AAFDC")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x13AB05C", Offset = "0x13AB05C", VA = "0x13AB05C")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x13AB138", Offset = "0x13AB138", VA = "0x13AB138")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x13AB1D0", Offset = "0x13AB1D0", VA = "0x13AB1D0")]
		public static extern ulong ovr_NetSync_Connect(IntPtr connect_options);

		[PreserveSig]
		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x13AB250", Offset = "0x13AB250", VA = "0x13AB250")]
		public static extern ulong ovr_NetSync_Disconnect(long connection_id);

		[PreserveSig]
		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x13AB2D0", Offset = "0x13AB2D0", VA = "0x13AB2D0")]
		public static extern ulong ovr_NetSync_GetSessions(long connection_id);

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x13AB350", Offset = "0x13AB350", VA = "0x13AB350")]
		public static ulong ovr_NetSync_SetVoipGroup(long connection_id, string group_id)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x13AB40C", Offset = "0x13AB40C", VA = "0x13AB40C")]
		private static extern ulong ovr_NetSync_SetVoipGroup_Native(long connection_id, IntPtr group_id);

		[PreserveSig]
		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x13AB49C", Offset = "0x13AB49C", VA = "0x13AB49C")]
		public static extern ulong ovr_NetSync_SetVoipMicSource(long connection_id, NetSyncVoipMicSource mic_source);

		[PreserveSig]
		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x13AB52C", Offset = "0x13AB52C", VA = "0x13AB52C")]
		public static extern ulong ovr_NetSync_SetVoipSessionMuted(long connection_id, ulong session_id, bool muted);

		[PreserveSig]
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x13AB5C4", Offset = "0x13AB5C4", VA = "0x13AB5C4")]
		public static extern ulong ovr_NetSync_SetVoipStreamMode(long connection_id, ulong sessionId, NetSyncVoipStreamMode streamMode);

		[PreserveSig]
		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x13AB65C", Offset = "0x13AB65C", VA = "0x13AB65C")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x13AB6D0", Offset = "0x13AB6D0", VA = "0x13AB6D0")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x13AB750", Offset = "0x13AB750", VA = "0x13AB750")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x13AB7C4", Offset = "0x13AB7C4", VA = "0x13AB7C4")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x13AB854", Offset = "0x13AB854", VA = "0x13AB854")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x13AB8D4", Offset = "0x13AB8D4", VA = "0x13AB8D4")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x13AB948", Offset = "0x13AB948", VA = "0x13AB948")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x13AB9C8", Offset = "0x13AB9C8", VA = "0x13AB9C8")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x13ABA54", Offset = "0x13ABA54", VA = "0x13ABA54")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x13ABAD4", Offset = "0x13ABAD4", VA = "0x13ABAD4")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x13ABB54", Offset = "0x13ABB54", VA = "0x13ABB54")]
		public static extern ulong ovr_RichPresence_Clear();

		[PreserveSig]
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x13ABBC8", Offset = "0x13ABBC8", VA = "0x13ABBC8")]
		public static extern ulong ovr_RichPresence_GetDestinations();

		[PreserveSig]
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x13ABC3C", Offset = "0x13ABC3C", VA = "0x13ABC3C")]
		public static extern ulong ovr_RichPresence_Set(IntPtr richPresenceOptions);

		[PreserveSig]
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x13ABCBC", Offset = "0x13ABCBC", VA = "0x13ABCBC")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x13ABD54", Offset = "0x13ABD54", VA = "0x13ABD54")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x13ABDEC", Offset = "0x13ABDEC", VA = "0x13ABDEC")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x13ABE6C", Offset = "0x13ABE6C", VA = "0x13ABE6C")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x13ABEE0", Offset = "0x13ABEE0", VA = "0x13ABEE0")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x13ABF60", Offset = "0x13ABF60", VA = "0x13ABF60")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x13ABFD4", Offset = "0x13ABFD4", VA = "0x13ABFD4")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x13AC054", Offset = "0x13AC054", VA = "0x13AC054")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x13AC0C8", Offset = "0x13AC0C8", VA = "0x13AC0C8")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x13AC148", Offset = "0x13AC148", VA = "0x13AC148")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x13AC204", Offset = "0x13AC204", VA = "0x13AC204")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x13AC294", Offset = "0x13AC294", VA = "0x13AC294")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x13AC324", Offset = "0x13AC324", VA = "0x13AC324")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x13AC3B4", Offset = "0x13AC3B4", VA = "0x13AC3B4")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x13AC448", Offset = "0x13AC448", VA = "0x13AC448")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x13AC4C8", Offset = "0x13AC4C8", VA = "0x13AC4C8")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x13AC548", Offset = "0x13AC548", VA = "0x13AC548")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x13AC604", Offset = "0x13AC604", VA = "0x13AC604")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x13AC694", Offset = "0x13AC694", VA = "0x13AC694")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x13AC748", Offset = "0x13AC748", VA = "0x13AC748")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x13AC8A0", Offset = "0x13AC8A0", VA = "0x13AC8A0")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x13AC930", Offset = "0x13AC930", VA = "0x13AC930")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x13AC9C0", Offset = "0x13AC9C0", VA = "0x13AC9C0")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x13ACA50", Offset = "0x13ACA50", VA = "0x13ACA50")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x13ACAD0", Offset = "0x13ACAD0", VA = "0x13ACAD0")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x13ACB50", Offset = "0x13ACB50", VA = "0x13ACB50")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x13ACBF8", Offset = "0x13ACBF8", VA = "0x13ACBF8")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x13ACC78", Offset = "0x13ACC78", VA = "0x13ACC78")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x13ACCF8", Offset = "0x13ACCF8", VA = "0x13ACCF8")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x13ACD6C", Offset = "0x13ACD6C", VA = "0x13ACD6C")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x13ACDEC", Offset = "0x13ACDEC", VA = "0x13ACDEC")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x13ACE60", Offset = "0x13ACE60", VA = "0x13ACE60")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x13ACED4", Offset = "0x13ACED4", VA = "0x13ACED4")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x13ACF48", Offset = "0x13ACF48", VA = "0x13ACF48")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x13ACFC8", Offset = "0x13ACFC8", VA = "0x13ACFC8")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x13AD048", Offset = "0x13AD048", VA = "0x13AD048")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x13AD0BC", Offset = "0x13AD0BC", VA = "0x13AD0BC")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x13AD130", Offset = "0x13AD130", VA = "0x13AD130")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x13AD1B0", Offset = "0x13AD1B0", VA = "0x13AD1B0")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x13AD230", Offset = "0x13AD230", VA = "0x13AD230")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x13AD2B0", Offset = "0x13AD2B0", VA = "0x13AD2B0")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x13AD330", Offset = "0x13AD330", VA = "0x13AD330")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x13AD3C0", Offset = "0x13AD3C0", VA = "0x13AD3C0")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x13AD440", Offset = "0x13AD440", VA = "0x13AD440")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x13AD4B4", Offset = "0x13AD4B4", VA = "0x13AD4B4")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x13AD528", Offset = "0x13AD528", VA = "0x13AD528")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x13AD59C", Offset = "0x13AD59C", VA = "0x13AD59C")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x13AD610", Offset = "0x13AD610", VA = "0x13AD610")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x13AD6CC", Offset = "0x13AD6CC", VA = "0x13AD6CC")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x13AD75C", Offset = "0x13AD75C", VA = "0x13AD75C")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x13AD820", Offset = "0x13AD820", VA = "0x13AD820")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x13AD8B8", Offset = "0x13AD8B8", VA = "0x13AD8B8")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x13AD978", Offset = "0x13AD978", VA = "0x13AD978")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x13ADA18", Offset = "0x13ADA18", VA = "0x13ADA18")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x13ADA98", Offset = "0x13ADA98", VA = "0x13ADA98")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x13ADB00", Offset = "0x13ADB00", VA = "0x13ADB00")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x13ADB80", Offset = "0x13ADB80", VA = "0x13ADB80")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x13ADC00", Offset = "0x13ADC00", VA = "0x13ADC00")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x13ADC68", Offset = "0x13ADC68", VA = "0x13ADC68")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x13ADCE8", Offset = "0x13ADCE8", VA = "0x13ADCE8")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x13ADD68", Offset = "0x13ADD68", VA = "0x13ADD68")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x13ADDE8", Offset = "0x13ADDE8", VA = "0x13ADDE8")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x13ADE78", Offset = "0x13ADE78", VA = "0x13ADE78")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x13ADEE0", Offset = "0x13ADEE0", VA = "0x13ADEE0")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x13ADF60", Offset = "0x13ADF60", VA = "0x13ADF60")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x13ADFE0", Offset = "0x13ADFE0", VA = "0x13ADFE0")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x13AE068", Offset = "0x13AE068", VA = "0x13AE068")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x13AE0D0", Offset = "0x13AE0D0", VA = "0x13AE0D0")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x13AE150", Offset = "0x13AE150", VA = "0x13AE150")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x13AE1D0", Offset = "0x13AE1D0", VA = "0x13AE1D0")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x13AE258", Offset = "0x13AE258", VA = "0x13AE258")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x13AE2C0", Offset = "0x13AE2C0", VA = "0x13AE2C0")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x13AE340", Offset = "0x13AE340", VA = "0x13AE340")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x13AE3A8", Offset = "0x13AE3A8", VA = "0x13AE3A8")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x13AE428", Offset = "0x13AE428", VA = "0x13AE428")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x13AE4B8", Offset = "0x13AE4B8", VA = "0x13AE4B8")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x13AE520", Offset = "0x13AE520", VA = "0x13AE520")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x13AE5A0", Offset = "0x13AE5A0", VA = "0x13AE5A0")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x13AE620", Offset = "0x13AE620", VA = "0x13AE620")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x13AE6A8", Offset = "0x13AE6A8", VA = "0x13AE6A8")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x13AE730", Offset = "0x13AE730", VA = "0x13AE730")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x13AE798", Offset = "0x13AE798", VA = "0x13AE798")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x13AE818", Offset = "0x13AE818", VA = "0x13AE818")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x13AE898", Offset = "0x13AE898", VA = "0x13AE898")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x13AE918", Offset = "0x13AE918", VA = "0x13AE918")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x13AE980", Offset = "0x13AE980", VA = "0x13AE980")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x13AEA00", Offset = "0x13AEA00", VA = "0x13AEA00")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x13AEA80", Offset = "0x13AEA80", VA = "0x13AEA80")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x13AEAE8", Offset = "0x13AEAE8", VA = "0x13AEAE8")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x13AEB68", Offset = "0x13AEB68", VA = "0x13AEB68")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x13AEBE8", Offset = "0x13AEBE8", VA = "0x13AEBE8")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x13AEC50", Offset = "0x13AEC50", VA = "0x13AEC50")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x13AECD0", Offset = "0x13AECD0", VA = "0x13AECD0")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x13AED38", Offset = "0x13AED38", VA = "0x13AED38")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x13AEDB8", Offset = "0x13AEDB8", VA = "0x13AEDB8")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x13AEE20", Offset = "0x13AEE20", VA = "0x13AEE20")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x13AEEA0", Offset = "0x13AEEA0", VA = "0x13AEEA0")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x13AEF08", Offset = "0x13AEF08", VA = "0x13AEF08")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x13AEF88", Offset = "0x13AEF88", VA = "0x13AEF88")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x13AF008", Offset = "0x13AF008", VA = "0x13AF008")]
		public static string ovr_AssetDetails_GetMetadata(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x13AF070", Offset = "0x13AF070", VA = "0x13AF070")]
		private static extern IntPtr ovr_AssetDetails_GetMetadata_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x13AF0F0", Offset = "0x13AF0F0", VA = "0x13AF0F0")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x13AF180", Offset = "0x13AF180", VA = "0x13AF180")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x13AF200", Offset = "0x13AF200", VA = "0x13AF200")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x13AF280", Offset = "0x13AF280", VA = "0x13AF280")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x13AF300", Offset = "0x13AF300", VA = "0x13AF300")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x13AF368", Offset = "0x13AF368", VA = "0x13AF368")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x13AF3E8", Offset = "0x13AF3E8", VA = "0x13AF3E8")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x13AF470", Offset = "0x13AF470", VA = "0x13AF470")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x13AF4F0", Offset = "0x13AF4F0", VA = "0x13AF4F0")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x13AF570", Offset = "0x13AF570", VA = "0x13AF570")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x13AF5D8", Offset = "0x13AF5D8", VA = "0x13AF5D8")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x13AF658", Offset = "0x13AF658", VA = "0x13AF658")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x13AF6E0", Offset = "0x13AF6E0", VA = "0x13AF6E0")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x13AF760", Offset = "0x13AF760", VA = "0x13AF760")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x13AF7C8", Offset = "0x13AF7C8", VA = "0x13AF7C8")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x13AF848", Offset = "0x13AF848", VA = "0x13AF848")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x13AF8C8", Offset = "0x13AF8C8", VA = "0x13AF8C8")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x13AF948", Offset = "0x13AF948", VA = "0x13AF948")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x13AF9C8", Offset = "0x13AF9C8", VA = "0x13AF9C8")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x13AFA48", Offset = "0x13AFA48", VA = "0x13AFA48")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x13AFAD0", Offset = "0x13AFAD0", VA = "0x13AFAD0")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x13AFB50", Offset = "0x13AFB50", VA = "0x13AFB50")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x13AFBD0", Offset = "0x13AFBD0", VA = "0x13AFBD0")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x13AFC38", Offset = "0x13AFC38", VA = "0x13AFC38")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x13AFCB8", Offset = "0x13AFCB8", VA = "0x13AFCB8")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x13AFD38", Offset = "0x13AFD38", VA = "0x13AFD38")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x13AFDB8", Offset = "0x13AFDB8", VA = "0x13AFDB8")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x13AFE20", Offset = "0x13AFE20", VA = "0x13AFE20")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x13AFEA0", Offset = "0x13AFEA0", VA = "0x13AFEA0")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x13AFF30", Offset = "0x13AFF30", VA = "0x13AFF30")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x13AFFB0", Offset = "0x13AFFB0", VA = "0x13AFFB0")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x13B0018", Offset = "0x13B0018", VA = "0x13B0018")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x13B0098", Offset = "0x13B0098", VA = "0x13B0098")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x13B0118", Offset = "0x13B0118", VA = "0x13B0118")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x13B0198", Offset = "0x13B0198", VA = "0x13B0198")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x13B0200", Offset = "0x13B0200", VA = "0x13B0200")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x13B0280", Offset = "0x13B0280", VA = "0x13B0280")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x13B037C", Offset = "0x13B037C", VA = "0x13B037C")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x13B02FC", Offset = "0x13B02FC", VA = "0x13B02FC")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x13B03FC", Offset = "0x13B03FC", VA = "0x13B03FC")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x13B0464", Offset = "0x13B0464", VA = "0x13B0464")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x13B04E4", Offset = "0x13B04E4", VA = "0x13B04E4")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x13B054C", Offset = "0x13B054C", VA = "0x13B054C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x13B05CC", Offset = "0x13B05CC", VA = "0x13B05CC")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x13B064C", Offset = "0x13B064C", VA = "0x13B064C")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x13B06CC", Offset = "0x13B06CC", VA = "0x13B06CC")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x13B0734", Offset = "0x13B0734", VA = "0x13B0734")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x13B07B4", Offset = "0x13B07B4", VA = "0x13B07B4")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x13B081C", Offset = "0x13B081C", VA = "0x13B081C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x13B089C", Offset = "0x13B089C", VA = "0x13B089C")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x13B091C", Offset = "0x13B091C", VA = "0x13B091C")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x13B099C", Offset = "0x13B099C", VA = "0x13B099C")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x13B0A04", Offset = "0x13B0A04", VA = "0x13B0A04")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x13B0A84", Offset = "0x13B0A84", VA = "0x13B0A84")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x13B0B14", Offset = "0x13B0B14", VA = "0x13B0B14")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x13B0B7C", Offset = "0x13B0B7C", VA = "0x13B0B7C")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x13B0BFC", Offset = "0x13B0BFC", VA = "0x13B0BFC")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x13B0C7C", Offset = "0x13B0C7C", VA = "0x13B0C7C")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x13B0D04", Offset = "0x13B0D04", VA = "0x13B0D04")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x13B0D6C", Offset = "0x13B0D6C", VA = "0x13B0D6C")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x13B0DEC", Offset = "0x13B0DEC", VA = "0x13B0DEC")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x13B0E54", Offset = "0x13B0E54", VA = "0x13B0E54")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x13B0ED4", Offset = "0x13B0ED4", VA = "0x13B0ED4")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x13B0F54", Offset = "0x13B0F54", VA = "0x13B0F54")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x13B0FBC", Offset = "0x13B0FBC", VA = "0x13B0FBC")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x13B103C", Offset = "0x13B103C", VA = "0x13B103C")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x13B10F8", Offset = "0x13B10F8", VA = "0x13B10F8")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x13A369C", Offset = "0x13A369C", VA = "0x13A369C")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x13B1188", Offset = "0x13B1188", VA = "0x13B1188")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x13A361C", Offset = "0x13A361C", VA = "0x13A361C")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x13A3714", Offset = "0x13A3714", VA = "0x13A3714")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x13B1218", Offset = "0x13B1218", VA = "0x13B1218")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x13B12A8", Offset = "0x13B12A8", VA = "0x13B12A8")]
		public static string ovr_Destination_GetApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x13B1310", Offset = "0x13B1310", VA = "0x13B1310")]
		private static extern IntPtr ovr_Destination_GetApiName_Native(IntPtr obj);

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x13B1390", Offset = "0x13B1390", VA = "0x13B1390")]
		public static string ovr_Destination_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x13B13F8", Offset = "0x13B13F8", VA = "0x13B13F8")]
		private static extern IntPtr ovr_Destination_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x13B1478", Offset = "0x13B1478", VA = "0x13B1478")]
		public static string ovr_Destination_GetDisplayName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x13B14E0", Offset = "0x13B14E0", VA = "0x13B14E0")]
		private static extern IntPtr ovr_Destination_GetDisplayName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x13B1560", Offset = "0x13B1560", VA = "0x13B1560")]
		public static extern IntPtr ovr_DestinationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x13B15F0", Offset = "0x13B15F0", VA = "0x13B15F0")]
		public static string ovr_DestinationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x13B1658", Offset = "0x13B1658", VA = "0x13B1658")]
		private static extern IntPtr ovr_DestinationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x13B16D8", Offset = "0x13B16D8", VA = "0x13B16D8")]
		public static extern UIntPtr ovr_DestinationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x13B1758", Offset = "0x13B1758", VA = "0x13B1758")]
		public static extern bool ovr_DestinationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x13B17E0", Offset = "0x13B17E0", VA = "0x13B17E0")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x13B185C", Offset = "0x13B185C", VA = "0x13B185C")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x13B18C4", Offset = "0x13B18C4", VA = "0x13B18C4")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x13B1944", Offset = "0x13B1944", VA = "0x13B1944")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x13B19C4", Offset = "0x13B19C4", VA = "0x13B19C4")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x13B1A2C", Offset = "0x13B1A2C", VA = "0x13B1A2C")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x13B1AAC", Offset = "0x13B1AAC", VA = "0x13B1AAC")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x13B1B2C", Offset = "0x13B1B2C", VA = "0x13B1B2C")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x13B1BAC", Offset = "0x13B1BAC", VA = "0x13B1BAC")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x13B1C2C", Offset = "0x13B1C2C", VA = "0x13B1C2C")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x13B1CB4", Offset = "0x13B1CB4", VA = "0x13B1CB4")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x13B1D1C", Offset = "0x13B1D1C", VA = "0x13B1D1C")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x13B1D9C", Offset = "0x13B1D9C", VA = "0x13B1D9C")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x13B1E04", Offset = "0x13B1E04", VA = "0x13B1E04")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x13B1E84", Offset = "0x13B1E84", VA = "0x13B1E84")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x13B1EEC", Offset = "0x13B1EEC", VA = "0x13B1EEC")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x13B1F6C", Offset = "0x13B1F6C", VA = "0x13B1F6C")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x13B1FEC", Offset = "0x13B1FEC", VA = "0x13B1FEC")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x13B2054", Offset = "0x13B2054", VA = "0x13B2054")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x13B20D4", Offset = "0x13B20D4", VA = "0x13B20D4")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x13B2164", Offset = "0x13B2164", VA = "0x13B2164")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x13B21E4", Offset = "0x13B21E4", VA = "0x13B21E4")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x13B224C", Offset = "0x13B224C", VA = "0x13B224C")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x13B22CC", Offset = "0x13B22CC", VA = "0x13B22CC")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x13B2334", Offset = "0x13B2334", VA = "0x13B2334")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x13B23B4", Offset = "0x13B23B4", VA = "0x13B23B4")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x13B241C", Offset = "0x13B241C", VA = "0x13B241C")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x13B249C", Offset = "0x13B249C", VA = "0x13B249C")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x13B2524", Offset = "0x13B2524", VA = "0x13B2524")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x13B25AC", Offset = "0x13B25AC", VA = "0x13B25AC")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x13B2614", Offset = "0x13B2614", VA = "0x13B2614")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x13B2694", Offset = "0x13B2694", VA = "0x13B2694")]
		public static string ovr_LaunchDetails_GetDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x13B26FC", Offset = "0x13B26FC", VA = "0x13B26FC")]
		private static extern IntPtr ovr_LaunchDetails_GetDestinationApiName_Native(IntPtr obj);

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x13B277C", Offset = "0x13B277C", VA = "0x13B277C")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x13B27E4", Offset = "0x13B27E4", VA = "0x13B27E4")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x13B2864", Offset = "0x13B2864", VA = "0x13B2864")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x13B28E4", Offset = "0x13B28E4", VA = "0x13B28E4")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x13B2964", Offset = "0x13B2964", VA = "0x13B2964")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x13B29E4", Offset = "0x13B29E4", VA = "0x13B29E4")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x13B2A6C", Offset = "0x13B2A6C", VA = "0x13B2A6C")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x13B2AF4", Offset = "0x13B2AF4", VA = "0x13B2AF4")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x13B2B7C", Offset = "0x13B2B7C", VA = "0x13B2B7C")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x13B2BFC", Offset = "0x13B2BFC", VA = "0x13B2BFC")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x13B2C84", Offset = "0x13B2C84", VA = "0x13B2C84")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x13B2D0C", Offset = "0x13B2D0C", VA = "0x13B2D0C")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x13B2E08", Offset = "0x13B2E08", VA = "0x13B2E08")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x13B2D88", Offset = "0x13B2D88", VA = "0x13B2D88")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x13B2E88", Offset = "0x13B2E88", VA = "0x13B2E88")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x13B2F08", Offset = "0x13B2F08", VA = "0x13B2F08")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x13B2F88", Offset = "0x13B2F88", VA = "0x13B2F88")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x13B2FF0", Offset = "0x13B2FF0", VA = "0x13B2FF0")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x13B3070", Offset = "0x13B3070", VA = "0x13B3070")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x13B30F0", Offset = "0x13B30F0", VA = "0x13B30F0")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x13B3180", Offset = "0x13B3180", VA = "0x13B3180")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x13B31E8", Offset = "0x13B31E8", VA = "0x13B31E8")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x13B3268", Offset = "0x13B3268", VA = "0x13B3268")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x13B32D0", Offset = "0x13B32D0", VA = "0x13B32D0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x13B3350", Offset = "0x13B3350", VA = "0x13B3350")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x13B33D0", Offset = "0x13B33D0", VA = "0x13B33D0")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x13B3450", Offset = "0x13B3450", VA = "0x13B3450")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x13B34D8", Offset = "0x13B34D8", VA = "0x13B34D8")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x13B3560", Offset = "0x13B3560", VA = "0x13B3560")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x13B35E8", Offset = "0x13B35E8", VA = "0x13B35E8")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x13B3650", Offset = "0x13B3650", VA = "0x13B3650")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x13B36D0", Offset = "0x13B36D0", VA = "0x13B36D0")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x13B3750", Offset = "0x13B3750", VA = "0x13B3750")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x13B37B8", Offset = "0x13B37B8", VA = "0x13B37B8")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x13B3838", Offset = "0x13B3838", VA = "0x13B3838")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x13B38C8", Offset = "0x13B38C8", VA = "0x13B38C8")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x13B3948", Offset = "0x13B3948", VA = "0x13B3948")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x13B39D0", Offset = "0x13B39D0", VA = "0x13B39D0")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x13B3A50", Offset = "0x13B3A50", VA = "0x13B3A50")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x13B3AD8", Offset = "0x13B3AD8", VA = "0x13B3AD8")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x13B3B60", Offset = "0x13B3B60", VA = "0x13B3B60")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x13B3BE8", Offset = "0x13B3BE8", VA = "0x13B3BE8")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x13B3C68", Offset = "0x13B3C68", VA = "0x13B3C68")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x13B3CF0", Offset = "0x13B3CF0", VA = "0x13B3CF0")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x13B3D70", Offset = "0x13B3D70", VA = "0x13B3D70")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x13B3DF0", Offset = "0x13B3DF0", VA = "0x13B3DF0")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x13B3E58", Offset = "0x13B3E58", VA = "0x13B3E58")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x13B3ED8", Offset = "0x13B3ED8", VA = "0x13B3ED8")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x13B3F58", Offset = "0x13B3F58", VA = "0x13B3F58")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x13B3FD8", Offset = "0x13B3FD8", VA = "0x13B3FD8")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x13B4060", Offset = "0x13B4060", VA = "0x13B4060")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x13B40E0", Offset = "0x13B40E0", VA = "0x13B40E0")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x13B4160", Offset = "0x13B4160", VA = "0x13B4160")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x13B41E0", Offset = "0x13B41E0", VA = "0x13B41E0")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x13B4248", Offset = "0x13B4248", VA = "0x13B4248")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x13B42C8", Offset = "0x13B42C8", VA = "0x13B42C8")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x13B4358", Offset = "0x13B4358", VA = "0x13B4358")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x13B43D8", Offset = "0x13B43D8", VA = "0x13B43D8")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x13B4458", Offset = "0x13B4458", VA = "0x13B4458")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x13B44D8", Offset = "0x13B44D8", VA = "0x13B44D8")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x13B4540", Offset = "0x13B4540", VA = "0x13B4540")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x13B45C0", Offset = "0x13B45C0", VA = "0x13B45C0")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x13B4640", Offset = "0x13B4640", VA = "0x13B4640")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x13B46D0", Offset = "0x13B46D0", VA = "0x13B46D0")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x13B4738", Offset = "0x13B4738", VA = "0x13B4738")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x13B47B8", Offset = "0x13B47B8", VA = "0x13B47B8")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x13B4838", Offset = "0x13B4838", VA = "0x13B4838")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x13B48C0", Offset = "0x13B48C0", VA = "0x13B48C0")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x13B4940", Offset = "0x13B4940", VA = "0x13B4940")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x13B49C0", Offset = "0x13B49C0", VA = "0x13B49C0")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x13B4A40", Offset = "0x13B4A40", VA = "0x13B4A40")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x13B4AC0", Offset = "0x13B4AC0", VA = "0x13B4AC0")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x13B4B28", Offset = "0x13B4B28", VA = "0x13B4B28")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x13B4BA8", Offset = "0x13B4BA8", VA = "0x13B4BA8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x13B4C28", Offset = "0x13B4C28", VA = "0x13B4C28")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x13B4C90", Offset = "0x13B4C90", VA = "0x13B4C90")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x13B4D10", Offset = "0x13B4D10", VA = "0x13B4D10")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x13B4D90", Offset = "0x13B4D90", VA = "0x13B4D90")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x13B4E10", Offset = "0x13B4E10", VA = "0x13B4E10")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x13B4EA0", Offset = "0x13B4EA0", VA = "0x13B4EA0")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x13B4F20", Offset = "0x13B4F20", VA = "0x13B4F20")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x13B4FA0", Offset = "0x13B4FA0", VA = "0x13B4FA0")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x13B5020", Offset = "0x13B5020", VA = "0x13B5020")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x13B50B0", Offset = "0x13B50B0", VA = "0x13B50B0")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x13B5130", Offset = "0x13B5130", VA = "0x13B5130")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x13B51B0", Offset = "0x13B51B0", VA = "0x13B51B0")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x13B5230", Offset = "0x13B5230", VA = "0x13B5230")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x13B5298", Offset = "0x13B5298", VA = "0x13B5298")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x13B5318", Offset = "0x13B5318", VA = "0x13B5318")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x13B5398", Offset = "0x13B5398", VA = "0x13B5398")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x13B5418", Offset = "0x13B5418", VA = "0x13B5418")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x13B54A0", Offset = "0x13B54A0", VA = "0x13B54A0")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x13B5530", Offset = "0x13B5530", VA = "0x13B5530")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x13B55B0", Offset = "0x13B55B0", VA = "0x13B55B0")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x13B5630", Offset = "0x13B5630", VA = "0x13B5630")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x13B56B0", Offset = "0x13B56B0", VA = "0x13B56B0")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x13B5730", Offset = "0x13B5730", VA = "0x13B5730")]
		public static extern double ovr_MatchmakingStats_GetSkillMean(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x13B57B0", Offset = "0x13B57B0", VA = "0x13B57B0")]
		public static extern double ovr_MatchmakingStats_GetSkillStandardDeviation(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x13B5830", Offset = "0x13B5830", VA = "0x13B5830")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x13B58B0", Offset = "0x13B58B0", VA = "0x13B58B0")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x13B5930", Offset = "0x13B5930", VA = "0x13B5930")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x13B59B0", Offset = "0x13B59B0", VA = "0x13B59B0")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x13B5A30", Offset = "0x13B5A30", VA = "0x13B5A30")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x13B5AB0", Offset = "0x13B5AB0", VA = "0x13B5AB0")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x13B5B30", Offset = "0x13B5B30", VA = "0x13B5B30")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x13B5BB0", Offset = "0x13B5BB0", VA = "0x13B5BB0")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x13B5C30", Offset = "0x13B5C30", VA = "0x13B5C30")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x13B5CB0", Offset = "0x13B5CB0", VA = "0x13B5CB0")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x13B5D30", Offset = "0x13B5D30", VA = "0x13B5D30")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x13B5DB0", Offset = "0x13B5DB0", VA = "0x13B5DB0")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x13B5E30", Offset = "0x13B5E30", VA = "0x13B5E30")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x13B5EB0", Offset = "0x13B5EB0", VA = "0x13B5EB0")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x13B5F30", Offset = "0x13B5F30", VA = "0x13B5F30")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x13B5FB0", Offset = "0x13B5FB0", VA = "0x13B5FB0")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x13B6030", Offset = "0x13B6030", VA = "0x13B6030")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x13B60B0", Offset = "0x13B60B0", VA = "0x13B60B0")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x13B6130", Offset = "0x13B6130", VA = "0x13B6130")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x13B61B0", Offset = "0x13B61B0", VA = "0x13B61B0")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x13B6230", Offset = "0x13B6230", VA = "0x13B6230")]
		public static extern IntPtr ovr_Message_GetDestinationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x13B62B0", Offset = "0x13B62B0", VA = "0x13B62B0")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x13B6330", Offset = "0x13B6330", VA = "0x13B6330")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x13B63B0", Offset = "0x13B63B0", VA = "0x13B63B0")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x13B6430", Offset = "0x13B6430", VA = "0x13B6430")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x13B64B0", Offset = "0x13B64B0", VA = "0x13B64B0")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x13B6530", Offset = "0x13B6530", VA = "0x13B6530")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x13B65B0", Offset = "0x13B65B0", VA = "0x13B65B0")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x13B6630", Offset = "0x13B6630", VA = "0x13B6630")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x13B66B0", Offset = "0x13B66B0", VA = "0x13B66B0")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x13B6730", Offset = "0x13B6730", VA = "0x13B6730")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x13B67B0", Offset = "0x13B67B0", VA = "0x13B67B0")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x13B6830", Offset = "0x13B6830", VA = "0x13B6830")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x13B68B0", Offset = "0x13B68B0", VA = "0x13B68B0")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x13B6930", Offset = "0x13B6930", VA = "0x13B6930")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x13B69B0", Offset = "0x13B69B0", VA = "0x13B69B0")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x13B6A30", Offset = "0x13B6A30", VA = "0x13B6A30")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x13B6AB0", Offset = "0x13B6AB0", VA = "0x13B6AB0")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x13B6B30", Offset = "0x13B6B30", VA = "0x13B6B30")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x13B6BB0", Offset = "0x13B6BB0", VA = "0x13B6BB0")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x13B6C30", Offset = "0x13B6C30", VA = "0x13B6C30")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x13B6CB0", Offset = "0x13B6CB0", VA = "0x13B6CB0")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x13B6D30", Offset = "0x13B6D30", VA = "0x13B6D30")]
		public static extern IntPtr ovr_Message_GetNetSyncConnection(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x13B6DB0", Offset = "0x13B6DB0", VA = "0x13B6DB0")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x13B6E30", Offset = "0x13B6E30", VA = "0x13B6E30")]
		public static extern IntPtr ovr_Message_GetNetSyncSessionsChangedNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x13B6EB0", Offset = "0x13B6EB0", VA = "0x13B6EB0")]
		public static extern IntPtr ovr_Message_GetNetSyncSetSessionPropertyResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x13B6F30", Offset = "0x13B6F30", VA = "0x13B6F30")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x13B6FB0", Offset = "0x13B6FB0", VA = "0x13B6FB0")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x13B7030", Offset = "0x13B7030", VA = "0x13B7030")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x13B70B0", Offset = "0x13B70B0", VA = "0x13B70B0")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x13B7130", Offset = "0x13B7130", VA = "0x13B7130")]
		public static extern IntPtr ovr_Message_GetPartyUpdateNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x13B71B0", Offset = "0x13B71B0", VA = "0x13B71B0")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x13B7230", Offset = "0x13B7230", VA = "0x13B7230")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x13B72B0", Offset = "0x13B72B0", VA = "0x13B72B0")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x13B7330", Offset = "0x13B7330", VA = "0x13B7330")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x13B73B0", Offset = "0x13B73B0", VA = "0x13B73B0")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x13B7430", Offset = "0x13B7430", VA = "0x13B7430")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x13B74B0", Offset = "0x13B74B0", VA = "0x13B74B0")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x13B7530", Offset = "0x13B7530", VA = "0x13B7530")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x13B75B0", Offset = "0x13B75B0", VA = "0x13B75B0")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x13B7630", Offset = "0x13B7630", VA = "0x13B7630")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x13B76B0", Offset = "0x13B76B0", VA = "0x13B76B0")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x13B7730", Offset = "0x13B7730", VA = "0x13B7730")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x13B77B0", Offset = "0x13B77B0", VA = "0x13B77B0")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x13B7830", Offset = "0x13B7830", VA = "0x13B7830")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x13B7898", Offset = "0x13B7898", VA = "0x13B7898")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x13B7918", Offset = "0x13B7918", VA = "0x13B7918")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x13B7998", Offset = "0x13B7998", VA = "0x13B7998")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x13B7A18", Offset = "0x13B7A18", VA = "0x13B7A18")]
		public static extern Message.MessageType ovr_Message_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x13B7A98", Offset = "0x13B7A98", VA = "0x13B7A98")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x13B7B18", Offset = "0x13B7B18", VA = "0x13B7B18")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x13B7B98", Offset = "0x13B7B98", VA = "0x13B7B98")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x13B7C18", Offset = "0x13B7C18", VA = "0x13B7C18")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x13B7C98", Offset = "0x13B7C98", VA = "0x13B7C98")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x13B7D18", Offset = "0x13B7D18", VA = "0x13B7D18")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x13B7DA0", Offset = "0x13B7DA0", VA = "0x13B7DA0")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x13B7E20", Offset = "0x13B7E20", VA = "0x13B7E20")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x13B7EA0", Offset = "0x13B7EA0", VA = "0x13B7EA0")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x13B7F40", Offset = "0x13B7F40", VA = "0x13B7F40")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x13B7FE0", Offset = "0x13B7FE0", VA = "0x13B7FE0")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x13B8080", Offset = "0x13B8080", VA = "0x13B8080")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x13B8110", Offset = "0x13B8110", VA = "0x13B8110")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x13B8190", Offset = "0x13B8190", VA = "0x13B8190")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x13B8210", Offset = "0x13B8210", VA = "0x13B8210")]
		public static extern long ovr_NetSyncConnection_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x13B8290", Offset = "0x13B8290", VA = "0x13B8290")]
		public static extern NetSyncDisconnectReason ovr_NetSyncConnection_GetDisconnectReason(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x13B8310", Offset = "0x13B8310", VA = "0x13B8310")]
		public static extern ulong ovr_NetSyncConnection_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x13B8390", Offset = "0x13B8390", VA = "0x13B8390")]
		public static extern NetSyncConnectionStatus ovr_NetSyncConnection_GetStatus(IntPtr obj);

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x13B8410", Offset = "0x13B8410", VA = "0x13B8410")]
		public static string ovr_NetSyncConnection_GetZoneId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x13B8478", Offset = "0x13B8478", VA = "0x13B8478")]
		private static extern IntPtr ovr_NetSyncConnection_GetZoneId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x13B84F8", Offset = "0x13B84F8", VA = "0x13B84F8")]
		public static extern long ovr_NetSyncSession_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x13B8578", Offset = "0x13B8578", VA = "0x13B8578")]
		public static extern bool ovr_NetSyncSession_GetMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x13B8600", Offset = "0x13B8600", VA = "0x13B8600")]
		public static extern ulong ovr_NetSyncSession_GetSessionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x13B8680", Offset = "0x13B8680", VA = "0x13B8680")]
		public static extern ulong ovr_NetSyncSession_GetUserId(IntPtr obj);

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x13B8700", Offset = "0x13B8700", VA = "0x13B8700")]
		public static string ovr_NetSyncSession_GetVoipGroup(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x13B8768", Offset = "0x13B8768", VA = "0x13B8768")]
		private static extern IntPtr ovr_NetSyncSession_GetVoipGroup_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x13B87E8", Offset = "0x13B87E8", VA = "0x13B87E8")]
		public static extern IntPtr ovr_NetSyncSessionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x13B8878", Offset = "0x13B8878", VA = "0x13B8878")]
		public static extern UIntPtr ovr_NetSyncSessionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x13B88F8", Offset = "0x13B88F8", VA = "0x13B88F8")]
		public static extern long ovr_NetSyncSessionsChangedNotification_GetConnectionId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x13B8978", Offset = "0x13B8978", VA = "0x13B8978")]
		public static extern IntPtr ovr_NetSyncSessionsChangedNotification_GetSessions(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x13B89F8", Offset = "0x13B89F8", VA = "0x13B89F8")]
		public static extern IntPtr ovr_NetSyncSetSessionPropertyResult_GetSession(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x13B8A78", Offset = "0x13B8A78", VA = "0x13B8A78")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x13B8AF8", Offset = "0x13B8AF8", VA = "0x13B8AF8")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x13B8B78", Offset = "0x13B8B78", VA = "0x13B8B78")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x13B8BF8", Offset = "0x13B8BF8", VA = "0x13B8BF8")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x13B8C78", Offset = "0x13B8C78", VA = "0x13B8C78")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x13B8CF8", Offset = "0x13B8CF8", VA = "0x13B8CF8")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x13B8D78", Offset = "0x13B8D78", VA = "0x13B8D78")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x13B8DF8", Offset = "0x13B8DF8", VA = "0x13B8DF8")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x13B8E78", Offset = "0x13B8E78", VA = "0x13B8E78")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x13B8EF8", Offset = "0x13B8EF8", VA = "0x13B8EF8")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x13B8F78", Offset = "0x13B8F78", VA = "0x13B8F78")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x13B8FF8", Offset = "0x13B8FF8", VA = "0x13B8FF8")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x13B9074", Offset = "0x13B9074", VA = "0x13B9074")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x13B90F4", Offset = "0x13B90F4", VA = "0x13B90F4")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x13B9170", Offset = "0x13B9170", VA = "0x13B9170")]
		public static extern PartyUpdateAction ovr_PartyUpdateNotification_GetAction(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x13B91F0", Offset = "0x13B91F0", VA = "0x13B91F0")]
		public static extern ulong ovr_PartyUpdateNotification_GetPartyId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x13B9270", Offset = "0x13B9270", VA = "0x13B9270")]
		public static extern ulong ovr_PartyUpdateNotification_GetSenderId(IntPtr obj);

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x13B92F0", Offset = "0x13B92F0", VA = "0x13B92F0")]
		public static string ovr_PartyUpdateNotification_GetUpdateTimestamp(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x13B9358", Offset = "0x13B9358", VA = "0x13B9358")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUpdateTimestamp_Native(IntPtr obj);

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x13B93D8", Offset = "0x13B93D8", VA = "0x13B93D8")]
		public static string ovr_PartyUpdateNotification_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x13B9440", Offset = "0x13B9440", VA = "0x13B9440")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x13B94C0", Offset = "0x13B94C0", VA = "0x13B94C0")]
		public static extern ulong ovr_PartyUpdateNotification_GetUserId(IntPtr obj);

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x13B9540", Offset = "0x13B9540", VA = "0x13B9540")]
		public static string ovr_PartyUpdateNotification_GetUserName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x13B95A8", Offset = "0x13B95A8", VA = "0x13B95A8")]
		private static extern IntPtr ovr_PartyUpdateNotification_GetUserName_Native(IntPtr obj);

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x13B9628", Offset = "0x13B9628", VA = "0x13B9628")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x13B9690", Offset = "0x13B9690", VA = "0x13B9690")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x13B9710", Offset = "0x13B9710", VA = "0x13B9710")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x13B97A0", Offset = "0x13B97A0", VA = "0x13B97A0")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x13B9820", Offset = "0x13B9820", VA = "0x13B9820")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x13B98A0", Offset = "0x13B98A0", VA = "0x13B98A0")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x13B9920", Offset = "0x13B9920", VA = "0x13B9920")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x13B99A8", Offset = "0x13B99A8", VA = "0x13B99A8")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x13B9A28", Offset = "0x13B9A28", VA = "0x13B9A28")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x13B9AA8", Offset = "0x13B9AA8", VA = "0x13B9AA8")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x13B9B10", Offset = "0x13B9B10", VA = "0x13B9B10")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x13B9B90", Offset = "0x13B9B90", VA = "0x13B9B90")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x13B9BF8", Offset = "0x13B9BF8", VA = "0x13B9BF8")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x13B9C78", Offset = "0x13B9C78", VA = "0x13B9C78")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x13B9CE0", Offset = "0x13B9CE0", VA = "0x13B9CE0")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x13B9D60", Offset = "0x13B9D60", VA = "0x13B9D60")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x13B9DC8", Offset = "0x13B9DC8", VA = "0x13B9DC8")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x13B9E48", Offset = "0x13B9E48", VA = "0x13B9E48")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x13B9EB0", Offset = "0x13B9EB0", VA = "0x13B9EB0")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x13B9F30", Offset = "0x13B9F30", VA = "0x13B9F30")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x13B9F98", Offset = "0x13B9F98", VA = "0x13B9F98")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x13BA018", Offset = "0x13BA018", VA = "0x13BA018")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x13BA0A8", Offset = "0x13BA0A8", VA = "0x13BA0A8")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x13BA110", Offset = "0x13BA110", VA = "0x13BA110")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x13BA190", Offset = "0x13BA190", VA = "0x13BA190")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x13BA210", Offset = "0x13BA210", VA = "0x13BA210")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x13BA298", Offset = "0x13BA298", VA = "0x13BA298")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x13BA300", Offset = "0x13BA300", VA = "0x13BA300")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x13BA380", Offset = "0x13BA380", VA = "0x13BA380")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x13BA3E8", Offset = "0x13BA3E8", VA = "0x13BA3E8")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x13BA468", Offset = "0x13BA468", VA = "0x13BA468")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x13BA4E8", Offset = "0x13BA4E8", VA = "0x13BA4E8")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x13BA550", Offset = "0x13BA550", VA = "0x13BA550")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x13BA5D0", Offset = "0x13BA5D0", VA = "0x13BA5D0")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x13BA660", Offset = "0x13BA660", VA = "0x13BA660")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x13BA6C8", Offset = "0x13BA6C8", VA = "0x13BA6C8")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x13BA748", Offset = "0x13BA748", VA = "0x13BA748")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x13BA7C8", Offset = "0x13BA7C8", VA = "0x13BA7C8")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x13BA850", Offset = "0x13BA850", VA = "0x13BA850")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x13BA8D0", Offset = "0x13BA8D0", VA = "0x13BA8D0")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x13BA950", Offset = "0x13BA950", VA = "0x13BA950")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x13BA9B8", Offset = "0x13BA9B8", VA = "0x13BA9B8")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x13BAA38", Offset = "0x13BAA38", VA = "0x13BAA38")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x13BAAB8", Offset = "0x13BAAB8", VA = "0x13BAAB8")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x13BAB38", Offset = "0x13BAB38", VA = "0x13BAB38")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x13BABC0", Offset = "0x13BABC0", VA = "0x13BABC0")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x13BAC40", Offset = "0x13BAC40", VA = "0x13BAC40")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x13BACC0", Offset = "0x13BACC0", VA = "0x13BACC0")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x13BAD40", Offset = "0x13BAD40", VA = "0x13BAD40")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x13BADC0", Offset = "0x13BADC0", VA = "0x13BADC0")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x13BAE28", Offset = "0x13BAE28", VA = "0x13BAE28")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x13BAEA8", Offset = "0x13BAEA8", VA = "0x13BAEA8")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x13BAF24", Offset = "0x13BAF24", VA = "0x13BAF24")]
		public static extern IntPtr ovr_Room_GetTeams(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x13BAFA0", Offset = "0x13BAFA0", VA = "0x13BAFA0")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x13BB020", Offset = "0x13BB020", VA = "0x13BB020")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x13BB09C", Offset = "0x13BB09C", VA = "0x13BB09C")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x13BB11C", Offset = "0x13BB11C", VA = "0x13BB11C")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x13BB1AC", Offset = "0x13BB1AC", VA = "0x13BB1AC")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x13BB214", Offset = "0x13BB214", VA = "0x13BB214")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x13BB294", Offset = "0x13BB294", VA = "0x13BB294")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x13BB314", Offset = "0x13BB314", VA = "0x13BB314")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x13BB39C", Offset = "0x13BB39C", VA = "0x13BB39C")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x13BB41C", Offset = "0x13BB41C", VA = "0x13BB41C")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x13BB49C", Offset = "0x13BB49C", VA = "0x13BB49C")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x13BB51C", Offset = "0x13BB51C", VA = "0x13BB51C")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x13BB584", Offset = "0x13BB584", VA = "0x13BB584")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x13BB604", Offset = "0x13BB604", VA = "0x13BB604")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x13BB694", Offset = "0x13BB694", VA = "0x13BB694")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x13BB6FC", Offset = "0x13BB6FC", VA = "0x13BB6FC")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x13BB77C", Offset = "0x13BB77C", VA = "0x13BB77C")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x13BB7FC", Offset = "0x13BB7FC", VA = "0x13BB7FC")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x13BB884", Offset = "0x13BB884", VA = "0x13BB884")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x13BB904", Offset = "0x13BB904", VA = "0x13BB904")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x13BB984", Offset = "0x13BB984", VA = "0x13BB984")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x13BBA14", Offset = "0x13BBA14", VA = "0x13BBA14")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x13BBA94", Offset = "0x13BBA94", VA = "0x13BBA94")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x13BBB14", Offset = "0x13BBB14", VA = "0x13BBB14")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x13BBB9C", Offset = "0x13BBB9C", VA = "0x13BBB9C")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x13BBC1C", Offset = "0x13BBC1C", VA = "0x13BBC1C")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x13BBC9C", Offset = "0x13BBC9C", VA = "0x13BBC9C")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x13BBD1C", Offset = "0x13BBD1C", VA = "0x13BBD1C")]
		public static extern IntPtr ovr_Team_GetAssignedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x13BBD9C", Offset = "0x13BBD9C", VA = "0x13BBD9C")]
		public static extern int ovr_Team_GetMaxUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x13BBE1C", Offset = "0x13BBE1C", VA = "0x13BBE1C")]
		public static extern int ovr_Team_GetMinUsers(IntPtr obj);

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x13BBE9C", Offset = "0x13BBE9C", VA = "0x13BBE9C")]
		public static string ovr_Team_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x13BBF04", Offset = "0x13BBF04", VA = "0x13BBF04")]
		private static extern IntPtr ovr_Team_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x13BBF84", Offset = "0x13BBF84", VA = "0x13BBF84")]
		public static extern IntPtr ovr_TeamArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x13BC014", Offset = "0x13BC014", VA = "0x13BC014")]
		public static extern UIntPtr ovr_TeamArray_GetSize(IntPtr obj);

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x13BC094", Offset = "0x13BC094", VA = "0x13BC094")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x13BC0FC", Offset = "0x13BC0FC", VA = "0x13BC0FC")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x13BC17C", Offset = "0x13BC17C", VA = "0x13BC17C")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x13BC1FC", Offset = "0x13BC1FC", VA = "0x13BC1FC")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x13BC27C", Offset = "0x13BC27C", VA = "0x13BC27C")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x13BC2E4", Offset = "0x13BC2E4", VA = "0x13BC2E4")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x13BC364", Offset = "0x13BC364", VA = "0x13BC364")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x13BC3E4", Offset = "0x13BC3E4", VA = "0x13BC3E4")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x13BC44C", Offset = "0x13BC44C", VA = "0x13BC44C")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x13BC4CC", Offset = "0x13BC4CC", VA = "0x13BC4CC")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x13BC54C", Offset = "0x13BC54C", VA = "0x13BC54C")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x13BC5CC", Offset = "0x13BC5CC", VA = "0x13BC5CC")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x13BC634", Offset = "0x13BC634", VA = "0x13BC634")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x13BC6B4", Offset = "0x13BC6B4", VA = "0x13BC6B4")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x13BC734", Offset = "0x13BC734", VA = "0x13BC734")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x13BC7B4", Offset = "0x13BC7B4", VA = "0x13BC7B4")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x13BC844", Offset = "0x13BC844", VA = "0x13BC844")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x13BC8C4", Offset = "0x13BC8C4", VA = "0x13BC8C4")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x13BC944", Offset = "0x13BC944", VA = "0x13BC944")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x13BC9AC", Offset = "0x13BC9AC", VA = "0x13BC9AC")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x13BCA2C", Offset = "0x13BCA2C", VA = "0x13BCA2C")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x13BCA94", Offset = "0x13BCA94", VA = "0x13BCA94")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x13BCB14", Offset = "0x13BCB14", VA = "0x13BCB14")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x13BCB7C", Offset = "0x13BCB7C", VA = "0x13BCB7C")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x13BCBFC", Offset = "0x13BCBFC", VA = "0x13BCBFC")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x13BCC64", Offset = "0x13BCC64", VA = "0x13BCC64")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x13BCCE4", Offset = "0x13BCCE4", VA = "0x13BCCE4")]
		public static string ovr_User_GetPresenceDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x13BCD4C", Offset = "0x13BCD4C", VA = "0x13BCD4C")]
		private static extern IntPtr ovr_User_GetPresenceDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x13BCDCC", Offset = "0x13BCDCC", VA = "0x13BCDCC")]
		public static string ovr_User_GetPresenceDestinationApiName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x13BCE34", Offset = "0x13BCE34", VA = "0x13BCE34")]
		private static extern IntPtr ovr_User_GetPresenceDestinationApiName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x13BCEB4", Offset = "0x13BCEB4", VA = "0x13BCEB4")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x13BCF34", Offset = "0x13BCF34", VA = "0x13BCF34")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x13BCF9C", Offset = "0x13BCF9C", VA = "0x13BCF9C")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x13BD01C", Offset = "0x13BD01C", VA = "0x13BD01C")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x13BD09C", Offset = "0x13BD09C", VA = "0x13BD09C")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x13BD11C", Offset = "0x13BD11C", VA = "0x13BD11C")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x13BD1AC", Offset = "0x13BD1AC", VA = "0x13BD1AC")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x13BD214", Offset = "0x13BD214", VA = "0x13BD214")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x13BD294", Offset = "0x13BD294", VA = "0x13BD294")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x13BD314", Offset = "0x13BD314", VA = "0x13BD314")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x13BD39C", Offset = "0x13BD39C", VA = "0x13BD39C")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x13BD42C", Offset = "0x13BD42C", VA = "0x13BD42C")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x13BD494", Offset = "0x13BD494", VA = "0x13BD494")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x13BD514", Offset = "0x13BD514", VA = "0x13BD514")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x13BD594", Offset = "0x13BD594", VA = "0x13BD594")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x13BD61C", Offset = "0x13BD61C", VA = "0x13BD61C")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x13BD684", Offset = "0x13BD684", VA = "0x13BD684")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x13BD704", Offset = "0x13BD704", VA = "0x13BD704")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x13BD78C", Offset = "0x13BD78C", VA = "0x13BD78C")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x13BD80C", Offset = "0x13BD80C", VA = "0x13BD80C")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x13BD8AC", Offset = "0x13BD8AC", VA = "0x13BD8AC")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x13BD94C", Offset = "0x13BD94C", VA = "0x13BD94C")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x13BD9EC", Offset = "0x13BD9EC", VA = "0x13BD9EC")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x13BDA8C", Offset = "0x13BDA8C", VA = "0x13BDA8C")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x139F798", Offset = "0x139F798", VA = "0x139F798")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x139FB20", Offset = "0x139FB20", VA = "0x139FB20")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x139F884", Offset = "0x139F884", VA = "0x139F884")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x139F98C", Offset = "0x139F98C", VA = "0x139F98C")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x13A1524", Offset = "0x13A1524", VA = "0x13A1524")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x13A1770", Offset = "0x13A1770", VA = "0x13A1770")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x13A1610", Offset = "0x13A1610", VA = "0x13A1610")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x13BDB0C", Offset = "0x13BDB0C", VA = "0x13BDB0C")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x13BDB9C", Offset = "0x13BDB9C", VA = "0x13BDB9C")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x13BDC10", Offset = "0x13BDC10", VA = "0x13BDC10")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x13BDC90", Offset = "0x13BDC90", VA = "0x13BDC90")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x13BDD5C", Offset = "0x13BDD5C", VA = "0x13BDD5C")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x13BDDF4", Offset = "0x13BDDF4", VA = "0x13BDDF4")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x13BDE74", Offset = "0x13BDE74", VA = "0x13BDE74")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x13BDF04", Offset = "0x13BDF04", VA = "0x13BDF04")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x13BDF94", Offset = "0x13BDF94", VA = "0x13BDF94")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x13BE024", Offset = "0x13BE024", VA = "0x13BE024")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x13BE0A4", Offset = "0x13BE0A4", VA = "0x13BE0A4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x13BE158", Offset = "0x13BE158", VA = "0x13BE158")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x13BE1F0", Offset = "0x13BE1F0", VA = "0x13BE1F0")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x13BE2AC", Offset = "0x13BE2AC", VA = "0x13BE2AC")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x13BE34C", Offset = "0x13BE34C", VA = "0x13BE34C")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x13BE418", Offset = "0x13BE418", VA = "0x13BE418")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x13BE4B0", Offset = "0x13BE4B0", VA = "0x13BE4B0")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x13BE530", Offset = "0x13BE530", VA = "0x13BE530")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x13BE5C0", Offset = "0x13BE5C0", VA = "0x13BE5C0")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x13BE66C", Offset = "0x13BE66C", VA = "0x13BE66C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x13BE6FC", Offset = "0x13BE6FC", VA = "0x13BE6FC")]
		public static extern IntPtr ovr_NetSyncOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x13BE770", Offset = "0x13BE770", VA = "0x13BE770")]
		public static extern void ovr_NetSyncOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x13BE7F0", Offset = "0x13BE7F0", VA = "0x13BE7F0")]
		public static void ovr_NetSyncOptions_SetVoipGroup(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x13BE89C", Offset = "0x13BE89C", VA = "0x13BE89C")]
		private static extern void ovr_NetSyncOptions_SetVoipGroup_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x13BE92C", Offset = "0x13BE92C", VA = "0x13BE92C")]
		public static extern void ovr_NetSyncOptions_SetVoipStreamDefault(IntPtr handle, NetSyncVoipStreamMode value);

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x13BE9BC", Offset = "0x13BE9BC", VA = "0x13BE9BC")]
		public static void ovr_NetSyncOptions_SetZoneId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x13BEA68", Offset = "0x13BEA68", VA = "0x13BEA68")]
		private static extern void ovr_NetSyncOptions_SetZoneId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x13BEAF8", Offset = "0x13BEAF8", VA = "0x13BEAF8")]
		public static extern IntPtr ovr_RichPresenceOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x13BEB6C", Offset = "0x13BEB6C", VA = "0x13BEB6C")]
		public static extern void ovr_RichPresenceOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x13BEBEC", Offset = "0x13BEBEC", VA = "0x13BEBEC")]
		public static void ovr_RichPresenceOptions_SetApiName(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x13BEC98", Offset = "0x13BEC98", VA = "0x13BEC98")]
		private static extern void ovr_RichPresenceOptions_SetApiName_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x13BED28", Offset = "0x13BED28", VA = "0x13BED28")]
		public static void ovr_RichPresenceOptions_SetArgsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x13BEDF4", Offset = "0x13BEDF4", VA = "0x13BEDF4")]
		private static extern void ovr_RichPresenceOptions_SetArgsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x13BEE8C", Offset = "0x13BEE8C", VA = "0x13BEE8C")]
		public static extern void ovr_RichPresenceOptions_ClearArgs(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x13BEF0C", Offset = "0x13BEF0C", VA = "0x13BEF0C")]
		public static extern void ovr_RichPresenceOptions_SetCurrentCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x13BEF9C", Offset = "0x13BEF9C", VA = "0x13BEF9C")]
		public static void ovr_RichPresenceOptions_SetDeeplinkMessageOverride(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x13BF048", Offset = "0x13BF048", VA = "0x13BF048")]
		private static extern void ovr_RichPresenceOptions_SetDeeplinkMessageOverride_Native(IntPtr handle, IntPtr value);

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x13BF0D8", Offset = "0x13BF0D8", VA = "0x13BF0D8")]
		public static void ovr_RichPresenceOptions_SetEndTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x13BF154", Offset = "0x13BF154", VA = "0x13BF154")]
		private static extern void ovr_RichPresenceOptions_SetEndTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x13BF1E4", Offset = "0x13BF1E4", VA = "0x13BF1E4")]
		public static extern void ovr_RichPresenceOptions_SetExtraContext(IntPtr handle, RichPresenceExtraContext value);

		[PreserveSig]
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x13BF274", Offset = "0x13BF274", VA = "0x13BF274")]
		public static extern void ovr_RichPresenceOptions_SetIsIdle(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x13BF304", Offset = "0x13BF304", VA = "0x13BF304")]
		public static extern void ovr_RichPresenceOptions_SetIsJoinable(IntPtr handle, bool value);

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x13BF394", Offset = "0x13BF394", VA = "0x13BF394")]
		public static void ovr_RichPresenceOptions_SetJoinableId(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x13BF440", Offset = "0x13BF440", VA = "0x13BF440")]
		private static extern void ovr_RichPresenceOptions_SetJoinableId_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x13BF4D0", Offset = "0x13BF4D0", VA = "0x13BF4D0")]
		public static extern void ovr_RichPresenceOptions_SetMaxCapacity(IntPtr handle, uint value);

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x13BF560", Offset = "0x13BF560", VA = "0x13BF560")]
		public static void ovr_RichPresenceOptions_SetStartTime(IntPtr handle, DateTime value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x13BF5DC", Offset = "0x13BF5DC", VA = "0x13BF5DC")]
		private static extern void ovr_RichPresenceOptions_SetStartTime_Native(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x13BF66C", Offset = "0x13BF66C", VA = "0x13BF66C")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x13BF6E0", Offset = "0x13BF6E0", VA = "0x13BF6E0")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x13BF760", Offset = "0x13BF760", VA = "0x13BF760")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x13BF82C", Offset = "0x13BF82C", VA = "0x13BF82C")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x13BF8C4", Offset = "0x13BF8C4", VA = "0x13BF8C4")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x13BF944", Offset = "0x13BF944", VA = "0x13BF944")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x13BF9D4", Offset = "0x13BF9D4", VA = "0x13BF9D4")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x13BFA64", Offset = "0x13BFA64", VA = "0x13BFA64")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x13BFAF4", Offset = "0x13BFAF4", VA = "0x13BFAF4")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x13BFB84", Offset = "0x13BFB84", VA = "0x13BFB84")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x13BFC14", Offset = "0x13BFC14", VA = "0x13BFC14")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x13BFCA4", Offset = "0x13BFCA4", VA = "0x13BFCA4")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x13BFD18", Offset = "0x13BFD18", VA = "0x13BFD18")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x13BFD98", Offset = "0x13BFD98", VA = "0x13BFD98")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x13BFE28", Offset = "0x13BFE28", VA = "0x13BFE28")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x13BFEB8", Offset = "0x13BFEB8", VA = "0x13BFEB8")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x13BFF38", Offset = "0x13BFF38", VA = "0x13BFF38")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x13BFFC8", Offset = "0x13BFFC8", VA = "0x13BFFC8")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x13C003C", Offset = "0x13C003C", VA = "0x13C003C")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x13C00BC", Offset = "0x13C00BC", VA = "0x13C00BC")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x13C014C", Offset = "0x13C014C", VA = "0x13C014C")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x13C01DC", Offset = "0x13C01DC", VA = "0x13C01DC")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public static class Callback
	{
		[Token(Token = "0x20003C9")]
		private class RequestCallback
		{
			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Message.Callback messageCallback;

			[Token(Token = "0x600160F")]
			[Address(RVA = "0xE12AA0", Offset = "0xE12AA0", VA = "0xE12AA0")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6001610")]
			[Address(RVA = "0xE12304", Offset = "0xE12304", VA = "0xE12304")]
			public RequestCallback(Message.Callback callback)
			{
			}

			[Token(Token = "0x6001611")]
			[Address(RVA = "0xE12AA8", Offset = "0xE12AA8", VA = "0xE12AA8", Slot = "4")]
			public virtual void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x20003CA")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Message<T>.Callback callback;

			[Token(Token = "0x6001612")]
			public RequestCallback(Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6001613")]
			public override void HandleMessage(Message msg)
			{
			}
		}

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<ulong, Request> requestIDsToRequests;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hasRegisteredRoomInviteNotificationHandler;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<Message> pendingRoomInviteNotifications;

		[Token(Token = "0x6000D74")]
		internal static void SetNotificationCallback<T>(Message.MessageType type, Message<T>.Callback callback)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xE1220C", Offset = "0xE1220C", VA = "0xE1220C")]
		internal static void SetNotificationCallback(Message.MessageType type, Message.Callback callback)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xE12330", Offset = "0xE12330", VA = "0xE12330")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xE12400", Offset = "0xE12400", VA = "0xE12400")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xE1271C", Offset = "0xE1271C", VA = "0xE1271C")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xE127B4", Offset = "0xE127B4", VA = "0xE127B4")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xE12850", Offset = "0xE12850", VA = "0xE12850")]
		private static void FlushRoomInviteNotificationQueue()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xE12570", Offset = "0xE12570", VA = "0xE12570")]
		internal static void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[PreserveSig]
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xE12E70", Offset = "0xE12E70", VA = "0xE12E70")]
		private static extern void ovr_UnityResetTestPlatform();

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xE12EE0", Offset = "0xE12EE0", VA = "0xE12EE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xE12FDC", Offset = "0xE12FDC", VA = "0xE12FDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xE13068", Offset = "0xE13068", VA = "0xE13068")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xE1306C", Offset = "0xE1306C", VA = "0xE1306C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xE130C8", Offset = "0xE130C8", VA = "0xE130C8")]
		public CallbackRunner()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x4000C54")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA014", Offset = "0x7CA014")]
		Unknown,
		[Token(Token = "0x4000C55")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA04C", Offset = "0x7CA04C")]
		InSync,
		[Token(Token = "0x4000C56")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA084", Offset = "0x7CA084")]
		NeedsDownload,
		[Token(Token = "0x4000C57")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA0BC", Offset = "0x7CA0BC")]
		RemoteDownloading,
		[Token(Token = "0x4000C58")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA0F4", Offset = "0x7CA0F4")]
		NeedsUpload,
		[Token(Token = "0x4000C59")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA12C", Offset = "0x7CA12C")]
		LocalUploading,
		[Token(Token = "0x4000C5A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA164", Offset = "0x7CA164")]
		InConflict
	}
	[Token(Token = "0x200019B")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4000C5C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA19C", Offset = "0x7CA19C")]
		Unknown,
		[Token(Token = "0x4000C5D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA1D4", Offset = "0x7CA1D4")]
		Ok,
		[Token(Token = "0x4000C5E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA20C", Offset = "0x7CA20C")]
		BetterVersionStored,
		[Token(Token = "0x4000C5F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA244", Offset = "0x7CA244")]
		ManualMergeRequired
	}
	[Token(Token = "0x200019C")]
	public interface IMicrophone
	{
		[Token(Token = "0x6000D83")]
		void Start();

		[Token(Token = "0x6000D84")]
		void Stop();

		[Token(Token = "0x6000D85")]
		float[] Update();
	}
	[Token(Token = "0x200019D")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6000D86")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6000D87")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6000D88")]
		void Update();

		[Token(Token = "0x6000D89")]
		int PeekSizeElements();
	}
	[Token(Token = "0x200019E")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x4000C61")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA27C", Offset = "0x7CA27C")]
		String,
		[Token(Token = "0x4000C62")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA2B4", Offset = "0x7CA2B4")]
		Int,
		[Token(Token = "0x4000C63")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA2EC", Offset = "0x7CA2EC")]
		Double,
		[Token(Token = "0x4000C64")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA324", Offset = "0x7CA324")]
		Unknown
	}
	[Token(Token = "0x200019F")]
	public enum LaunchType
	{
		[Token(Token = "0x4000C66")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA35C", Offset = "0x7CA35C")]
		Unknown,
		[Token(Token = "0x4000C67")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA394", Offset = "0x7CA394")]
		Normal,
		[Token(Token = "0x4000C68")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA3CC", Offset = "0x7CA3CC")]
		Invite,
		[Token(Token = "0x4000C69")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA404", Offset = "0x7CA404")]
		Coordinated,
		[Token(Token = "0x4000C6A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA43C", Offset = "0x7CA43C")]
		Deeplink
	}
	[Token(Token = "0x20001A0")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4000C6C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA474", Offset = "0x7CA474")]
		None,
		[Token(Token = "0x4000C6D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA4AC", Offset = "0x7CA4AC")]
		Friends,
		[Token(Token = "0x4000C6E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA4E4", Offset = "0x7CA4E4")]
		Unknown
	}
	[Token(Token = "0x20001A1")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x4000C70")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA51C", Offset = "0x7CA51C")]
		Top,
		[Token(Token = "0x4000C71")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA554", Offset = "0x7CA554")]
		CenteredOnViewer,
		[Token(Token = "0x4000C72")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA58C", Offset = "0x7CA58C")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x4000C73")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA5C4", Offset = "0x7CA5C4")]
		Unknown
	}
	[Token(Token = "0x20001A2")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x4000C75")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA5FC", Offset = "0x7CA5FC")]
		Unknown,
		[Token(Token = "0x4000C76")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA634", Offset = "0x7CA634")]
		Public,
		[Token(Token = "0x4000C77")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA66C", Offset = "0x7CA66C")]
		Friends,
		[Token(Token = "0x4000C78")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA6A4", Offset = "0x7CA6A4")]
		OnlyMe
	}
	[Token(Token = "0x20001A3")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4000C7A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA6DC", Offset = "0x7CA6DC")]
		Unknown,
		[Token(Token = "0x4000C7B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA714", Offset = "0x7CA714")]
		MicrophoneOn,
		[Token(Token = "0x4000C7C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA74C", Offset = "0x7CA74C")]
		MicrophoneOff
	}
	[Token(Token = "0x20001A4")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4000C7E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA784", Offset = "0x7CA784")]
		Success = 1,
		[Token(Token = "0x4000C7F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA7BC", Offset = "0x7CA7BC")]
		Unknown = 0,
		[Token(Token = "0x4000C80")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA7F4", Offset = "0x7CA7F4")]
		NoPackageSet = -1,
		[Token(Token = "0x4000C81")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA82C", Offset = "0x7CA82C")]
		NoFbConnect = -2,
		[Token(Token = "0x4000C82")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA864", Offset = "0x7CA864")]
		NoSessionId = -3,
		[Token(Token = "0x4000C83")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA89C", Offset = "0x7CA89C")]
		MissingParameters = -4
	}
	[Token(Token = "0x20001A5")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x4000C85")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA8D4", Offset = "0x7CA8D4")]
		Required,
		[Token(Token = "0x4000C86")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA90C", Offset = "0x7CA90C")]
		High,
		[Token(Token = "0x4000C87")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA944", Offset = "0x7CA944")]
		Medium,
		[Token(Token = "0x4000C88")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA97C", Offset = "0x7CA97C")]
		Low,
		[Token(Token = "0x4000C89")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA9B4", Offset = "0x7CA9B4")]
		Unknown
	}
	[Token(Token = "0x20001A6")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xE17604", Offset = "0xE17604", VA = "0xE17604")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xE1767C", Offset = "0xE1767C", VA = "0xE1767C")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xE17700", Offset = "0xE17700", VA = "0xE17700")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xE1776C", Offset = "0xE1776C", VA = "0xE1776C")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xE177E8", Offset = "0xE177E8", VA = "0xE177E8")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xE17864", Offset = "0xE17864", VA = "0xE17864")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xE178E0", Offset = "0xE178E0", VA = "0xE178E0")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xE1794C", Offset = "0xE1794C", VA = "0xE1794C")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xE179D0", Offset = "0xE179D0", VA = "0xE179D0")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xE17A5C", Offset = "0xE17A5C", VA = "0xE17A5C")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xE17AE0", Offset = "0xE17AE0", VA = "0xE17AE0")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xE17B4C", Offset = "0xE17B4C", VA = "0xE17B4C")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xE17BC8", Offset = "0xE17BC8", VA = "0xE17BC8")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xE16598", Offset = "0xE16598", VA = "0xE16598")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xE17C44", Offset = "0xE17C44", VA = "0xE17C44", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4000C8C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CA9EC", Offset = "0x7CA9EC")]
		Unknown,
		[Token(Token = "0x4000C8D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAA24", Offset = "0x7CAA24")]
		Trailing,
		[Token(Token = "0x4000C8E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAA5C", Offset = "0x7CAA5C")]
		Swingy
	}
	[Token(Token = "0x20001A8")]
	public enum MediaContentType
	{
		[Token(Token = "0x4000C90")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAA94", Offset = "0x7CAA94")]
		Unknown,
		[Token(Token = "0x4000C91")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAACC", Offset = "0x7CAACC")]
		Photo
	}
	[Token(Token = "0x20001A9")]
	public abstract class Message<T> : Message
	{
		[Token(Token = "0x20003CB")]
		public new delegate void Callback(Message<T> message);

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x1700009F")]
		public T Data
		{
			[Token(Token = "0x6000D9A")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000D99")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000D9B")]
		protected abstract T GetDataFromMessage(IntPtr c_message);
	}
	[Token(Token = "0x20001AA")]
	public class Message
	{
		[Token(Token = "0x20003CC")]
		public delegate void Callback(Message message);

		[Token(Token = "0x20003CD")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4001333")]
			Unknown = 0u,
			[Token(Token = "0x4001334")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4001335")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4001336")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4001337")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x4001338")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x4001339")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400133A")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x400133B")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400133C")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x400133D")]
			ApplicationLifecycle_GetRegisteredPIDs = 82169698u,
			[Token(Token = "0x400133E")]
			ApplicationLifecycle_GetSessionKey = 984570141u,
			[Token(Token = "0x400133F")]
			ApplicationLifecycle_RegisterSessionKey = 1303818232u,
			[Token(Token = "0x4001340")]
			Application_GetVersion = 1751583246u,
			[Token(Token = "0x4001341")]
			Application_LaunchOtherApp = 1424151032u,
			[Token(Token = "0x4001342")]
			AssetFile_Delete = 1834842246u,
			[Token(Token = "0x4001343")]
			AssetFile_DeleteById = 1525206354u,
			[Token(Token = "0x4001344")]
			AssetFile_DeleteByName = 1108001231u,
			[Token(Token = "0x4001345")]
			AssetFile_Download = 289710021u,
			[Token(Token = "0x4001346")]
			AssetFile_DownloadById = 755009938u,
			[Token(Token = "0x4001347")]
			AssetFile_DownloadByName = 1664536314u,
			[Token(Token = "0x4001348")]
			AssetFile_DownloadCancel = 134927303u,
			[Token(Token = "0x4001349")]
			AssetFile_DownloadCancelById = 1365611796u,
			[Token(Token = "0x400134A")]
			AssetFile_DownloadCancelByName = 1147858170u,
			[Token(Token = "0x400134B")]
			AssetFile_GetList = 1258057588u,
			[Token(Token = "0x400134C")]
			AssetFile_Status = 47394656u,
			[Token(Token = "0x400134D")]
			AssetFile_StatusById = 1570069816u,
			[Token(Token = "0x400134E")]
			AssetFile_StatusByName = 1104140880u,
			[Token(Token = "0x400134F")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4001350")]
			CloudStorage_Delete = 685393261u,
			[Token(Token = "0x4001351")]
			CloudStorage_GetNextCloudStorageMetadataArrayPage = 1544004335u,
			[Token(Token = "0x4001352")]
			CloudStorage_Load = 1082420033u,
			[Token(Token = "0x4001353")]
			CloudStorage_LoadBucketMetadata = 1931977997u,
			[Token(Token = "0x4001354")]
			CloudStorage_LoadConflictMetadata = 1146770162u,
			[Token(Token = "0x4001355")]
			CloudStorage_LoadHandle = 845863478u,
			[Token(Token = "0x4001356")]
			CloudStorage_LoadMetadata = 65446546u,
			[Token(Token = "0x4001357")]
			CloudStorage_ResolveKeepLocal = 811109637u,
			[Token(Token = "0x4001358")]
			CloudStorage_ResolveKeepRemote = 1965400838u,
			[Token(Token = "0x4001359")]
			CloudStorage_Save = 1270570030u,
			[Token(Token = "0x400135A")]
			Entitlement_GetIsViewerEntitled = 409688241u,
			[Token(Token = "0x400135B")]
			IAP_ConsumePurchase = 532378329u,
			[Token(Token = "0x400135C")]
			IAP_GetNextProductArrayPage = 467225263u,
			[Token(Token = "0x400135D")]
			IAP_GetNextPurchaseArrayPage = 1196886677u,
			[Token(Token = "0x400135E")]
			IAP_GetProductsBySKU = 2124073717u,
			[Token(Token = "0x400135F")]
			IAP_GetViewerPurchases = 974095385u,
			[Token(Token = "0x4001360")]
			IAP_GetViewerPurchasesDurableCache = 1666817579u,
			[Token(Token = "0x4001361")]
			IAP_LaunchCheckoutFlow = 1067126029u,
			[Token(Token = "0x4001362")]
			LanguagePack_GetCurrent = 529592533u,
			[Token(Token = "0x4001363")]
			LanguagePack_SetCurrent = 1531952096u,
			[Token(Token = "0x4001364")]
			Leaderboard_GetEntries = 1572030284u,
			[Token(Token = "0x4001365")]
			Leaderboard_GetEntriesAfterRank = 406293487u,
			[Token(Token = "0x4001366")]
			Leaderboard_GetNextEntries = 1310751961u,
			[Token(Token = "0x4001367")]
			Leaderboard_GetPreviousEntries = 1224858304u,
			[Token(Token = "0x4001368")]
			Leaderboard_WriteEntry = 293587198u,
			[Token(Token = "0x4001369")]
			Livestreaming_GetStatus = 1218079125u,
			[Token(Token = "0x400136A")]
			Livestreaming_PauseStream = 916223619u,
			[Token(Token = "0x400136B")]
			Livestreaming_ResumeStream = 575827343u,
			[Token(Token = "0x400136C")]
			Matchmaking_Browse = 509948616u,
			[Token(Token = "0x400136D")]
			Matchmaking_Browse2 = 1715641947u,
			[Token(Token = "0x400136E")]
			Matchmaking_Cancel = 543705519u,
			[Token(Token = "0x400136F")]
			Matchmaking_Cancel2 = 285117908u,
			[Token(Token = "0x4001370")]
			Matchmaking_CreateAndEnqueueRoom = 1615617480u,
			[Token(Token = "0x4001371")]
			Matchmaking_CreateAndEnqueueRoom2 = 693889755u,
			[Token(Token = "0x4001372")]
			Matchmaking_CreateRoom = 54203178u,
			[Token(Token = "0x4001373")]
			Matchmaking_CreateRoom2 = 1231922052u,
			[Token(Token = "0x4001374")]
			Matchmaking_Enqueue = 1086418033u,
			[Token(Token = "0x4001375")]
			Matchmaking_Enqueue2 = 303174325u,
			[Token(Token = "0x4001376")]
			Matchmaking_EnqueueRoom = 1888108644u,
			[Token(Token = "0x4001377")]
			Matchmaking_EnqueueRoom2 = 1428741028u,
			[Token(Token = "0x4001378")]
			Matchmaking_GetAdminSnapshot = 1008820116u,
			[Token(Token = "0x4001379")]
			Matchmaking_GetStats = 1123849272u,
			[Token(Token = "0x400137A")]
			Matchmaking_JoinRoom = 1295177725u,
			[Token(Token = "0x400137B")]
			Matchmaking_ReportResultInsecure = 439800205u,
			[Token(Token = "0x400137C")]
			Matchmaking_StartMatch = 1154746693u,
			[Token(Token = "0x400137D")]
			Media_ShareToFacebook = 14912239u,
			[Token(Token = "0x400137E")]
			Notification_GetNextRoomInviteNotificationArrayPage = 102890359u,
			[Token(Token = "0x400137F")]
			Notification_GetRoomInvites = 1871801234u,
			[Token(Token = "0x4001380")]
			Notification_MarkAsRead = 1903319523u,
			[Token(Token = "0x4001381")]
			Party_GetCurrent = 1200830304u,
			[Token(Token = "0x4001382")]
			RichPresence_Clear = 1471632051u,
			[Token(Token = "0x4001383")]
			RichPresence_GetDestinations = 1483681044u,
			[Token(Token = "0x4001384")]
			RichPresence_GetNextDestinationArrayPage = 1731624773u,
			[Token(Token = "0x4001385")]
			RichPresence_Set = 1007973641u,
			[Token(Token = "0x4001386")]
			Room_CreateAndJoinPrivate = 1977017207u,
			[Token(Token = "0x4001387")]
			Room_CreateAndJoinPrivate2 = 1513775683u,
			[Token(Token = "0x4001388")]
			Room_Get = 1704628152u,
			[Token(Token = "0x4001389")]
			Room_GetCurrent = 161916164u,
			[Token(Token = "0x400138A")]
			Room_GetCurrentForUser = 234887141u,
			[Token(Token = "0x400138B")]
			Room_GetInvitableUsers = 506615698u,
			[Token(Token = "0x400138C")]
			Room_GetInvitableUsers2 = 1330899120u,
			[Token(Token = "0x400138D")]
			Room_GetModeratedRooms = 159645047u,
			[Token(Token = "0x400138E")]
			Room_GetNextRoomArrayPage = 1317239238u,
			[Token(Token = "0x400138F")]
			Room_InviteUser = 1093266451u,
			[Token(Token = "0x4001390")]
			Room_Join = 382373641u,
			[Token(Token = "0x4001391")]
			Room_Join2 = 1303059522u,
			[Token(Token = "0x4001392")]
			Room_KickUser = 1233344310u,
			[Token(Token = "0x4001393")]
			Room_LaunchInvitableUserFlow = 843047539u,
			[Token(Token = "0x4001394")]
			Room_Leave = 1916281973u,
			[Token(Token = "0x4001395")]
			Room_SetDescription = 809796911u,
			[Token(Token = "0x4001396")]
			Room_UpdateDataStore = 40779816u,
			[Token(Token = "0x4001397")]
			Room_UpdateMembershipLockStatus = 923514796u,
			[Token(Token = "0x4001398")]
			Room_UpdateOwner = 850803997u,
			[Token(Token = "0x4001399")]
			Room_UpdatePrivateRoomJoinPolicy = 289473179u,
			[Token(Token = "0x400139A")]
			User_Get = 1808768583u,
			[Token(Token = "0x400139B")]
			User_GetAccessToken = 111696574u,
			[Token(Token = "0x400139C")]
			User_GetLoggedInUser = 1131361373u,
			[Token(Token = "0x400139D")]
			User_GetLoggedInUserFriends = 1484532365u,
			[Token(Token = "0x400139E")]
			User_GetLoggedInUserFriendsAndRooms = 1585908615u,
			[Token(Token = "0x400139F")]
			User_GetLoggedInUserRecentlyMetUsersAndRooms = 694139440u,
			[Token(Token = "0x40013A0")]
			User_GetNextUserAndRoomArrayPage = 2143146719u,
			[Token(Token = "0x40013A1")]
			User_GetNextUserArrayPage = 645723971u,
			[Token(Token = "0x40013A2")]
			User_GetOrgScopedID = 418426907u,
			[Token(Token = "0x40013A3")]
			User_GetSdkAccounts = 1733454467u,
			[Token(Token = "0x40013A4")]
			User_GetUserProof = 578880643u,
			[Token(Token = "0x40013A5")]
			User_LaunchFriendRequestFlow = 151303576u,
			[Token(Token = "0x40013A6")]
			User_LaunchProfile = 171537047u,
			[Token(Token = "0x40013A7")]
			Voip_SetSystemVoipSuppressed = 1161808298u,
			[Token(Token = "0x40013A8")]
			Notification_ApplicationLifecycle_LaunchIntentChanged = 78859427u,
			[Token(Token = "0x40013A9")]
			Notification_AssetFile_DownloadUpdate = 803015885u,
			[Token(Token = "0x40013AA")]
			Notification_Cal_FinalizeApplication = 1963741337u,
			[Token(Token = "0x40013AB")]
			Notification_Cal_ProposeApplication = 779375093u,
			[Token(Token = "0x40013AC")]
			Notification_HTTP_Transfer = 2111073839u,
			[Token(Token = "0x40013AD")]
			Notification_Livestreaming_StatusChange = 575101294u,
			[Token(Token = "0x40013AE")]
			Notification_Matchmaking_MatchFound = 197393623u,
			[Token(Token = "0x40013AF")]
			Notification_NetSync_ConnectionStatusChanged = 120882378u,
			[Token(Token = "0x40013B0")]
			Notification_NetSync_SessionsChanged = 947814198u,
			[Token(Token = "0x40013B1")]
			Notification_Networking_ConnectionStateChange = 1577243802u,
			[Token(Token = "0x40013B2")]
			Notification_Networking_PeerConnectRequest = 1295114959u,
			[Token(Token = "0x40013B3")]
			Notification_Networking_PingResult = 1360343058u,
			[Token(Token = "0x40013B4")]
			Notification_Party_PartyUpdate = 487688882u,
			[Token(Token = "0x40013B5")]
			Notification_Room_InviteAccepted = 1829794225u,
			[Token(Token = "0x40013B6")]
			Notification_Room_InviteReceived = 1783209300u,
			[Token(Token = "0x40013B7")]
			Notification_Room_RoomUpdate = 1626094639u,
			[Token(Token = "0x40013B8")]
			Notification_Voip_ConnectRequest = 908343318u,
			[Token(Token = "0x40013B9")]
			Notification_Voip_StateChange = 888120928u,
			[Token(Token = "0x40013BA")]
			Notification_Voip_SystemVoipState = 1490179237u,
			[Token(Token = "0x40013BB")]
			Platform_InitializeWithAccessToken = 896085803u,
			[Token(Token = "0x40013BC")]
			Platform_InitializeStandaloneOculus = 1375260172u,
			[Token(Token = "0x40013BD")]
			Platform_InitializeAndroidAsynchronous = 450037684u,
			[Token(Token = "0x40013BE")]
			Platform_InitializeWindowsAsynchronous = 1839708815u
		}

		[Token(Token = "0x20003CE")]
		internal delegate Message ExtraMessageTypesHandler(IntPtr messageHandle, MessageType message_type);

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong requestID;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CAB04", Offset = "0x7CAB04")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170000A0")]
		public MessageType Type
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xE180B0", Offset = "0xE180B0", VA = "0xE180B0")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170000A1")]
		public bool IsError
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xE180B8", Offset = "0xE180B8", VA = "0xE180B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		public ulong RequestID
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xE180C8", Offset = "0xE180C8", VA = "0xE180C8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000A3")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0xE1B528", Offset = "0xE1B528", VA = "0xE1B528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D12A8", Offset = "0x7D12A8")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0xE1B4D4", Offset = "0xE1B4D4", VA = "0xE1B4D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1298", Offset = "0x7D1298")]
			set
			{
			}
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xE17E30", Offset = "0xE17E30", VA = "0xE17E30")]
		public Message(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xE180A8", Offset = "0xE180A8", VA = "0xE180A8", Slot = "1")]
		~Message()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xE180D0", Offset = "0xE180D0", VA = "0xE180D0", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xE180D8", Offset = "0xE180D8", VA = "0xE180D8", Slot = "5")]
		public virtual PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xE180E0", Offset = "0xE180E0", VA = "0xE180E0", Slot = "6")]
		public virtual NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xE180E8", Offset = "0xE180E8", VA = "0xE180E8", Slot = "7")]
		public virtual HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xE180F0", Offset = "0xE180F0", VA = "0xE180F0", Slot = "8")]
		public virtual PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xE180F8", Offset = "0xE180F8", VA = "0xE180F8", Slot = "9")]
		public virtual AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xE18100", Offset = "0xE18100", VA = "0xE18100", Slot = "10")]
		public virtual AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xE18108", Offset = "0xE18108", VA = "0xE18108", Slot = "11")]
		public virtual AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xE18110", Offset = "0xE18110", VA = "0xE18110", Slot = "12")]
		public virtual AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xE18118", Offset = "0xE18118", VA = "0xE18118", Slot = "13")]
		public virtual ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xE18120", Offset = "0xE18120", VA = "0xE18120", Slot = "14")]
		public virtual AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xE18128", Offset = "0xE18128", VA = "0xE18128", Slot = "15")]
		public virtual AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xE18130", Offset = "0xE18130", VA = "0xE18130", Slot = "16")]
		public virtual AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xE18138", Offset = "0xE18138", VA = "0xE18138", Slot = "17")]
		public virtual AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xE18140", Offset = "0xE18140", VA = "0xE18140", Slot = "18")]
		public virtual AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xE18148", Offset = "0xE18148", VA = "0xE18148", Slot = "19")]
		public virtual AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xE18150", Offset = "0xE18150", VA = "0xE18150", Slot = "20")]
		public virtual CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xE18158", Offset = "0xE18158", VA = "0xE18158", Slot = "21")]
		public virtual CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xE18160", Offset = "0xE18160", VA = "0xE18160", Slot = "22")]
		public virtual CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xE18168", Offset = "0xE18168", VA = "0xE18168", Slot = "23")]
		public virtual CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xE18170", Offset = "0xE18170", VA = "0xE18170", Slot = "24")]
		public virtual CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xE18178", Offset = "0xE18178", VA = "0xE18178", Slot = "25")]
		public virtual CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xE18180", Offset = "0xE18180", VA = "0xE18180", Slot = "26")]
		public virtual CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xE18188", Offset = "0xE18188", VA = "0xE18188", Slot = "27")]
		public virtual CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xE18190", Offset = "0xE18190", VA = "0xE18190", Slot = "28")]
		public virtual DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xE18198", Offset = "0xE18198", VA = "0xE18198", Slot = "29")]
		public virtual InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xE181A0", Offset = "0xE181A0", VA = "0xE181A0", Slot = "30")]
		public virtual LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xE181A8", Offset = "0xE181A8", VA = "0xE181A8", Slot = "31")]
		public virtual LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xE181B0", Offset = "0xE181B0", VA = "0xE181B0", Slot = "32")]
		public virtual LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xE181B8", Offset = "0xE181B8", VA = "0xE181B8", Slot = "33")]
		public virtual LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xE181C0", Offset = "0xE181C0", VA = "0xE181C0", Slot = "34")]
		public virtual bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xE181C8", Offset = "0xE181C8", VA = "0xE181C8", Slot = "35")]
		public virtual LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xE181D0", Offset = "0xE181D0", VA = "0xE181D0", Slot = "36")]
		public virtual LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xE181D8", Offset = "0xE181D8", VA = "0xE181D8", Slot = "37")]
		public virtual LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xE181E0", Offset = "0xE181E0", VA = "0xE181E0", Slot = "38")]
		public virtual LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xE181E8", Offset = "0xE181E8", VA = "0xE181E8", Slot = "39")]
		public virtual LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xE181F0", Offset = "0xE181F0", VA = "0xE181F0", Slot = "40")]
		public virtual LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xE181F8", Offset = "0xE181F8", VA = "0xE181F8", Slot = "41")]
		public virtual MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xE18200", Offset = "0xE18200", VA = "0xE18200", Slot = "42")]
		public virtual MatchmakingBrowseResult GetMatchmakingBrowseResult()
		{
			return null;
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xE18208", Offset = "0xE18208", VA = "0xE18208", Slot = "43")]
		public virtual MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xE18210", Offset = "0xE18210", VA = "0xE18210", Slot = "44")]
		public virtual MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xE18218", Offset = "0xE18218", VA = "0xE18218", Slot = "45")]
		public virtual MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xE18220", Offset = "0xE18220", VA = "0xE18220", Slot = "46")]
		public virtual NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xE18228", Offset = "0xE18228", VA = "0xE18228", Slot = "47")]
		public virtual NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xE18230", Offset = "0xE18230", VA = "0xE18230", Slot = "48")]
		public virtual NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xE18238", Offset = "0xE18238", VA = "0xE18238", Slot = "49")]
		public virtual NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xE18240", Offset = "0xE18240", VA = "0xE18240", Slot = "50")]
		public virtual OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xE18248", Offset = "0xE18248", VA = "0xE18248", Slot = "51")]
		public virtual Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xE18250", Offset = "0xE18250", VA = "0xE18250", Slot = "52")]
		public virtual PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xE18258", Offset = "0xE18258", VA = "0xE18258", Slot = "53")]
		public virtual PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xE18260", Offset = "0xE18260", VA = "0xE18260", Slot = "54")]
		public virtual PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xE18268", Offset = "0xE18268", VA = "0xE18268", Slot = "55")]
		public virtual ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xE18270", Offset = "0xE18270", VA = "0xE18270", Slot = "56")]
		public virtual Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xE18278", Offset = "0xE18278", VA = "0xE18278", Slot = "57")]
		public virtual PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xE18280", Offset = "0xE18280", VA = "0xE18280", Slot = "58")]
		public virtual Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xE18288", Offset = "0xE18288", VA = "0xE18288", Slot = "59")]
		public virtual RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xE18290", Offset = "0xE18290", VA = "0xE18290", Slot = "60")]
		public virtual RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xE18298", Offset = "0xE18298", VA = "0xE18298", Slot = "61")]
		public virtual RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xE182A0", Offset = "0xE182A0", VA = "0xE182A0", Slot = "62")]
		public virtual SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xE182A8", Offset = "0xE182A8", VA = "0xE182A8", Slot = "63")]
		public virtual ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xE182B0", Offset = "0xE182B0", VA = "0xE182B0", Slot = "64")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xE182B8", Offset = "0xE182B8", VA = "0xE182B8", Slot = "65")]
		public virtual SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xE182C0", Offset = "0xE182C0", VA = "0xE182C0", Slot = "66")]
		public virtual SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xE182C8", Offset = "0xE182C8", VA = "0xE182C8", Slot = "67")]
		public virtual User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xE182D0", Offset = "0xE182D0", VA = "0xE182D0", Slot = "68")]
		public virtual UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xE182D8", Offset = "0xE182D8", VA = "0xE182D8", Slot = "69")]
		public virtual UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xE182E0", Offset = "0xE182E0", VA = "0xE182E0", Slot = "70")]
		public virtual UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xE182E8", Offset = "0xE182E8", VA = "0xE182E8", Slot = "71")]
		public virtual UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xE182F0", Offset = "0xE182F0", VA = "0xE182F0")]
		internal static Message ParseMessageHandle(IntPtr messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xE1247C", Offset = "0xE1247C", VA = "0xE1247C")]
		public static Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20001AB")]
	public class MessageWithAbuseReportRecording : Message<AbuseReportRecording>
	{
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xE1B904", Offset = "0xE1B904", VA = "0xE1B904")]
		public MessageWithAbuseReportRecording(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xE1B964", Offset = "0xE1B964", VA = "0xE1B964", Slot = "9")]
		public override AbuseReportRecording GetAbuseReportRecording()
		{
			return null;
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xE1B9A8", Offset = "0xE1B9A8", VA = "0xE1B9A8", Slot = "72")]
		protected override AbuseReportRecording GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AC")]
	public class MessageWithAchievementDefinitions : Message<AchievementDefinitionList>
	{
		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xE19844", Offset = "0xE19844", VA = "0xE19844")]
		public MessageWithAchievementDefinitions(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xE1BACC", Offset = "0xE1BACC", VA = "0xE1BACC", Slot = "10")]
		public override AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xE1BB10", Offset = "0xE1BB10", VA = "0xE1BB10", Slot = "72")]
		protected override AchievementDefinitionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AD")]
	public class MessageWithAchievementProgressList : Message<AchievementProgressList>
	{
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xE198A4", Offset = "0xE198A4", VA = "0xE198A4")]
		public MessageWithAchievementProgressList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xE1BDAC", Offset = "0xE1BDAC", VA = "0xE1BDAC", Slot = "11")]
		public override AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xE1BDF0", Offset = "0xE1BDF0", VA = "0xE1BDF0", Slot = "72")]
		protected override AchievementProgressList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AE")]
	public class MessageWithAchievementUpdate : Message<AchievementUpdate>
	{
		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xE19904", Offset = "0xE19904", VA = "0xE19904")]
		public MessageWithAchievementUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xE1C08C", Offset = "0xE1C08C", VA = "0xE1C08C", Slot = "12")]
		public override AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xE1C0D0", Offset = "0xE1C0D0", VA = "0xE1C0D0", Slot = "72")]
		protected override AchievementUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AF")]
	public class MessageWithApplicationVersion : Message<ApplicationVersion>
	{
		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xE19964", Offset = "0xE19964", VA = "0xE19964")]
		public MessageWithApplicationVersion(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xE1C208", Offset = "0xE1C208", VA = "0xE1C208", Slot = "13")]
		public override ApplicationVersion GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xE1C24C", Offset = "0xE1C24C", VA = "0xE1C24C", Slot = "72")]
		protected override ApplicationVersion GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B0")]
	public class MessageWithAssetDetails : Message<AssetDetails>
	{
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xE199C4", Offset = "0xE199C4", VA = "0xE199C4")]
		public MessageWithAssetDetails(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xE1C3A0", Offset = "0xE1C3A0", VA = "0xE1C3A0", Slot = "14")]
		public override AssetDetails GetAssetDetails()
		{
			return null;
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xE1C3E4", Offset = "0xE1C3E4", VA = "0xE1C3E4", Slot = "72")]
		protected override AssetDetails GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B1")]
	public class MessageWithAssetDetailsList : Message<AssetDetailsList>
	{
		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xE19A24", Offset = "0xE19A24", VA = "0xE19A24")]
		public MessageWithAssetDetailsList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xE1C5D0", Offset = "0xE1C5D0", VA = "0xE1C5D0", Slot = "15")]
		public override AssetDetailsList GetAssetDetailsList()
		{
			return null;
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xE1C614", Offset = "0xE1C614", VA = "0xE1C614", Slot = "72")]
		protected override AssetDetailsList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B2")]
	public class MessageWithAssetFileDeleteResult : Message<AssetFileDeleteResult>
	{
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xE19A84", Offset = "0xE19A84", VA = "0xE19A84")]
		public MessageWithAssetFileDeleteResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xE1C880", Offset = "0xE1C880", VA = "0xE1C880", Slot = "16")]
		public override AssetFileDeleteResult GetAssetFileDeleteResult()
		{
			return null;
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xE1C8C4", Offset = "0xE1C8C4", VA = "0xE1C8C4", Slot = "72")]
		protected override AssetFileDeleteResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B3")]
	public class MessageWithAssetFileDownloadCancelResult : Message<AssetFileDownloadCancelResult>
	{
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xE19AE4", Offset = "0xE19AE4", VA = "0xE19AE4")]
		public MessageWithAssetFileDownloadCancelResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xE1CA1C", Offset = "0xE1CA1C", VA = "0xE1CA1C", Slot = "17")]
		public override AssetFileDownloadCancelResult GetAssetFileDownloadCancelResult()
		{
			return null;
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xE1CA60", Offset = "0xE1CA60", VA = "0xE1CA60", Slot = "72")]
		protected override AssetFileDownloadCancelResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B4")]
	public class MessageWithAssetFileDownloadResult : Message<AssetFileDownloadResult>
	{
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xE19B44", Offset = "0xE19B44", VA = "0xE19B44")]
		public MessageWithAssetFileDownloadResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xE1CBB8", Offset = "0xE1CBB8", VA = "0xE1CBB8", Slot = "18")]
		public override AssetFileDownloadResult GetAssetFileDownloadResult()
		{
			return null;
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xE1CBFC", Offset = "0xE1CBFC", VA = "0xE1CBFC", Slot = "72")]
		protected override AssetFileDownloadResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B5")]
	public class MessageWithAssetFileDownloadUpdate : Message<AssetFileDownloadUpdate>
	{
		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xE19BA4", Offset = "0xE19BA4", VA = "0xE19BA4")]
		public MessageWithAssetFileDownloadUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xE1CD30", Offset = "0xE1CD30", VA = "0xE1CD30", Slot = "19")]
		public override AssetFileDownloadUpdate GetAssetFileDownloadUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xE1CD74", Offset = "0xE1CD74", VA = "0xE1CD74", Slot = "72")]
		protected override AssetFileDownloadUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B6")]
	public class MessageWithCalApplicationFinalized : Message<CalApplicationFinalized>
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xE19C04", Offset = "0xE19C04", VA = "0xE19C04")]
		public MessageWithCalApplicationFinalized(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xE1CEDC", Offset = "0xE1CEDC", VA = "0xE1CEDC", Slot = "20")]
		public override CalApplicationFinalized GetCalApplicationFinalized()
		{
			return null;
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xE1CF20", Offset = "0xE1CF20", VA = "0xE1CF20", Slot = "72")]
		protected override CalApplicationFinalized GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B7")]
	public class MessageWithCalApplicationProposed : Message<CalApplicationProposed>
	{
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xE19C64", Offset = "0xE19C64", VA = "0xE19C64")]
		public MessageWithCalApplicationProposed(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xE1D064", Offset = "0xE1D064", VA = "0xE1D064", Slot = "21")]
		public override CalApplicationProposed GetCalApplicationProposed()
		{
			return null;
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xE1D0A8", Offset = "0xE1D0A8", VA = "0xE1D0A8", Slot = "72")]
		protected override CalApplicationProposed GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B8")]
	public class MessageWithCalApplicationSuggestionList : Message<CalApplicationSuggestionList>
	{
		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xE1D1CC", Offset = "0xE1D1CC", VA = "0xE1D1CC")]
		public MessageWithCalApplicationSuggestionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xE1D22C", Offset = "0xE1D22C", VA = "0xE1D22C", Slot = "22")]
		public override CalApplicationSuggestionList GetCalApplicationSuggestionList()
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xE1D270", Offset = "0xE1D270", VA = "0xE1D270", Slot = "72")]
		protected override CalApplicationSuggestionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001B9")]
	public class MessageWithCloudStorageConflictMetadata : Message<CloudStorageConflictMetadata>
	{
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xE19CC4", Offset = "0xE19CC4", VA = "0xE19CC4")]
		public MessageWithCloudStorageConflictMetadata(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xE1D4DC", Offset = "0xE1D4DC", VA = "0xE1D4DC", Slot = "23")]
		public override CloudStorageConflictMetadata GetCloudStorageConflictMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xE1D520", Offset = "0xE1D520", VA = "0xE1D520", Slot = "72")]
		protected override CloudStorageConflictMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BA")]
	public class MessageWithCloudStorageData : Message<CloudStorageData>
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xE19D24", Offset = "0xE19D24", VA = "0xE19D24")]
		public MessageWithCloudStorageData(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xE1D69C", Offset = "0xE1D69C", VA = "0xE1D69C", Slot = "24")]
		public override CloudStorageData GetCloudStorageData()
		{
			return null;
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xE1D6E0", Offset = "0xE1D6E0", VA = "0xE1D6E0", Slot = "72")]
		protected override CloudStorageData GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BB")]
	public class MessageWithCloudStorageMetadataUnderLocal : Message<CloudStorageMetadata>
	{
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xE19D84", Offset = "0xE19D84", VA = "0xE19D84")]
		public MessageWithCloudStorageMetadataUnderLocal(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xE1DB14", Offset = "0xE1DB14", VA = "0xE1DB14", Slot = "25")]
		public override CloudStorageMetadata GetCloudStorageMetadata()
		{
			return null;
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xE1DB58", Offset = "0xE1DB58", VA = "0xE1DB58", Slot = "72")]
		protected override CloudStorageMetadata GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BC")]
	public class MessageWithCloudStorageMetadataList : Message<CloudStorageMetadataList>
	{
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xE19DE4", Offset = "0xE19DE4", VA = "0xE19DE4")]
		public MessageWithCloudStorageMetadataList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xE1D834", Offset = "0xE1D834", VA = "0xE1D834", Slot = "26")]
		public override CloudStorageMetadataList GetCloudStorageMetadataList()
		{
			return null;
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xE1D878", Offset = "0xE1D878", VA = "0xE1D878", Slot = "72")]
		protected override CloudStorageMetadataList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BD")]
	public class MessageWithCloudStorageUpdateResponse : Message<CloudStorageUpdateResponse>
	{
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xE19E44", Offset = "0xE19E44", VA = "0xE19E44")]
		public MessageWithCloudStorageUpdateResponse(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xE1DCEC", Offset = "0xE1DCEC", VA = "0xE1DCEC", Slot = "27")]
		public override CloudStorageUpdateResponse GetCloudStorageUpdateResponse()
		{
			return null;
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xE1DD30", Offset = "0xE1DD30", VA = "0xE1DD30", Slot = "72")]
		protected override CloudStorageUpdateResponse GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BE")]
	public class MessageWithDestinationList : Message<DestinationList>
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xE19EA4", Offset = "0xE19EA4", VA = "0xE19EA4")]
		public MessageWithDestinationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xE1DE84", Offset = "0xE1DE84", VA = "0xE1DE84", Slot = "28")]
		public override DestinationList GetDestinationList()
		{
			return null;
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xE1DEC8", Offset = "0xE1DEC8", VA = "0xE1DEC8", Slot = "72")]
		protected override DestinationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BF")]
	public class MessageWithInstalledApplicationList : Message<InstalledApplicationList>
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xE1E38C", Offset = "0xE1E38C", VA = "0xE1E38C")]
		public MessageWithInstalledApplicationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xE1E3EC", Offset = "0xE1E3EC", VA = "0xE1E3EC", Slot = "29")]
		public override InstalledApplicationList GetInstalledApplicationList()
		{
			return null;
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xE1E430", Offset = "0xE1E430", VA = "0xE1E430", Slot = "72")]
		protected override InstalledApplicationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C0")]
	public class MessageWithLaunchBlockFlowResult : Message<LaunchBlockFlowResult>
	{
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xE1E69C", Offset = "0xE1E69C", VA = "0xE1E69C")]
		public MessageWithLaunchBlockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xE1E6FC", Offset = "0xE1E6FC", VA = "0xE1E6FC", Slot = "30")]
		public override LaunchBlockFlowResult GetLaunchBlockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xE1E740", Offset = "0xE1E740", VA = "0xE1E740", Slot = "72")]
		protected override LaunchBlockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C1")]
	public class MessageWithLaunchFriendRequestFlowResult : Message<LaunchFriendRequestFlowResult>
	{
		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xE19F04", Offset = "0xE19F04", VA = "0xE19F04")]
		public MessageWithLaunchFriendRequestFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xE1E87C", Offset = "0xE1E87C", VA = "0xE1E87C", Slot = "31")]
		public override LaunchFriendRequestFlowResult GetLaunchFriendRequestFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xE1E8C0", Offset = "0xE1E8C0", VA = "0xE1E8C0", Slot = "72")]
		protected override LaunchFriendRequestFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C2")]
	public class MessageWithLaunchReportFlowResult : Message<LaunchReportFlowResult>
	{
		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xE1E9FC", Offset = "0xE1E9FC", VA = "0xE1E9FC")]
		public MessageWithLaunchReportFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xE1EA5C", Offset = "0xE1EA5C", VA = "0xE1EA5C", Slot = "32")]
		public override LaunchReportFlowResult GetLaunchReportFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xE1EAA0", Offset = "0xE1EAA0", VA = "0xE1EAA0", Slot = "72")]
		protected override LaunchReportFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C3")]
	public class MessageWithLaunchUnblockFlowResult : Message<LaunchUnblockFlowResult>
	{
		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xE1EBD8", Offset = "0xE1EBD8", VA = "0xE1EBD8")]
		public MessageWithLaunchUnblockFlowResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xE1EC38", Offset = "0xE1EC38", VA = "0xE1EC38", Slot = "33")]
		public override LaunchUnblockFlowResult GetLaunchUnblockFlowResult()
		{
			return null;
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xE1EC7C", Offset = "0xE1EC7C", VA = "0xE1EC7C", Slot = "72")]
		protected override LaunchUnblockFlowResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C4")]
	public class MessageWithLeaderboardEntryList : Message<LeaderboardEntryList>
	{
		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xE19F64", Offset = "0xE19F64", VA = "0xE19F64")]
		public MessageWithLeaderboardEntryList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xE1EE74", Offset = "0xE1EE74", VA = "0xE1EE74", Slot = "35")]
		public override LeaderboardEntryList GetLeaderboardEntryList()
		{
			return null;
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xE1EEB8", Offset = "0xE1EEB8", VA = "0xE1EEB8", Slot = "72")]
		protected override LeaderboardEntryList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C5")]
	public class MessageWithLinkedAccountList : Message<LinkedAccountList>
	{
		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xE1F174", Offset = "0xE1F174", VA = "0xE1F174")]
		public MessageWithLinkedAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xE1F1D4", Offset = "0xE1F1D4", VA = "0xE1F1D4", Slot = "36")]
		public override LinkedAccountList GetLinkedAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xE1F218", Offset = "0xE1F218", VA = "0xE1F218", Slot = "72")]
		protected override LinkedAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C6")]
	public class MessageWithLivestreamingApplicationStatus : Message<LivestreamingApplicationStatus>
	{
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xE1F484", Offset = "0xE1F484", VA = "0xE1F484")]
		public MessageWithLivestreamingApplicationStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xE1F4E4", Offset = "0xE1F4E4", VA = "0xE1F4E4", Slot = "37")]
		public override LivestreamingApplicationStatus GetLivestreamingApplicationStatus()
		{
			return null;
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xE1F528", Offset = "0xE1F528", VA = "0xE1F528", Slot = "72")]
		protected override LivestreamingApplicationStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C7")]
	public class MessageWithLivestreamingStartResult : Message<LivestreamingStartResult>
	{
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xE1F650", Offset = "0xE1F650", VA = "0xE1F650")]
		public MessageWithLivestreamingStartResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xE1F6B0", Offset = "0xE1F6B0", VA = "0xE1F6B0", Slot = "38")]
		public override LivestreamingStartResult GetLivestreamingStartResult()
		{
			return null;
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xE1F6F4", Offset = "0xE1F6F4", VA = "0xE1F6F4", Slot = "72")]
		protected override LivestreamingStartResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C8")]
	public class MessageWithLivestreamingStatus : Message<LivestreamingStatus>
	{
		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xE1A024", Offset = "0xE1A024", VA = "0xE1A024")]
		public MessageWithLivestreamingStatus(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xE1F818", Offset = "0xE1F818", VA = "0xE1F818", Slot = "39")]
		public override LivestreamingStatus GetLivestreamingStatus()
		{
			return null;
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xE1F85C", Offset = "0xE1F85C", VA = "0xE1F85C", Slot = "72")]
		protected override LivestreamingStatus GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001C9")]
	public class MessageWithLivestreamingVideoStats : Message<LivestreamingVideoStats>
	{
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xE1F9D0", Offset = "0xE1F9D0", VA = "0xE1F9D0")]
		public MessageWithLivestreamingVideoStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xE1FA30", Offset = "0xE1FA30", VA = "0xE1FA30", Slot = "40")]
		public override LivestreamingVideoStats GetLivestreamingVideoStats()
		{
			return null;
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xE1FA74", Offset = "0xE1FA74", VA = "0xE1FA74", Slot = "72")]
		protected override LivestreamingVideoStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CA")]
	public class MessageWithMatchmakingAdminSnapshot : Message<MatchmakingAdminSnapshot>
	{
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xE1A084", Offset = "0xE1A084", VA = "0xE1A084")]
		public MessageWithMatchmakingAdminSnapshot(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xE1FBB8", Offset = "0xE1FBB8", VA = "0xE1FBB8", Slot = "41")]
		public override MatchmakingAdminSnapshot GetMatchmakingAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xE1FBFC", Offset = "0xE1FBFC", VA = "0xE1FBFC", Slot = "72")]
		protected override MatchmakingAdminSnapshot GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CB")]
	public class MessageWithMatchmakingEnqueueResult : Message<MatchmakingEnqueueResult>
	{
		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xE1A144", Offset = "0xE1A144", VA = "0xE1A144")]
		public MessageWithMatchmakingEnqueueResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xE1FF70", Offset = "0xE1FF70", VA = "0xE1FF70", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xE1FFB4", Offset = "0xE1FFB4", VA = "0xE1FFB4", Slot = "72")]
		protected override MatchmakingEnqueueResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CC")]
	public class MessageWithMatchmakingEnqueueResultAndRoom : Message<MatchmakingEnqueueResultAndRoom>
	{
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xE1A1A4", Offset = "0xE1A1A4", VA = "0xE1A1A4")]
		public MessageWithMatchmakingEnqueueResultAndRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xE201A0", Offset = "0xE201A0", VA = "0xE201A0", Slot = "44")]
		public override MatchmakingEnqueueResultAndRoom GetMatchmakingEnqueueResultAndRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xE201E4", Offset = "0xE201E4", VA = "0xE201E4", Slot = "72")]
		protected override MatchmakingEnqueueResultAndRoom GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CD")]
	public class MessageWithMatchmakingStatsUnderMatchmakingStats : Message<MatchmakingStats>
	{
		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xE1A204", Offset = "0xE1A204", VA = "0xE1A204")]
		public MessageWithMatchmakingStatsUnderMatchmakingStats(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xE207A4", Offset = "0xE207A4", VA = "0xE207A4", Slot = "45")]
		public override MatchmakingStats GetMatchmakingStats()
		{
			return null;
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xE207E8", Offset = "0xE207E8", VA = "0xE207E8", Slot = "72")]
		protected override MatchmakingStats GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CE")]
	public class MessageWithNetSyncConnection : Message<NetSyncConnection>
	{
		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xE1A264", Offset = "0xE1A264", VA = "0xE1A264")]
		public MessageWithNetSyncConnection(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xE2095C", Offset = "0xE2095C", VA = "0xE2095C", Slot = "46")]
		public override NetSyncConnection GetNetSyncConnection()
		{
			return null;
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xE209A0", Offset = "0xE209A0", VA = "0xE209A0", Slot = "72")]
		protected override NetSyncConnection GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001CF")]
	public class MessageWithNetSyncSessionList : Message<NetSyncSessionList>
	{
		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xE20B04", Offset = "0xE20B04", VA = "0xE20B04")]
		public MessageWithNetSyncSessionList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xE20B64", Offset = "0xE20B64", VA = "0xE20B64", Slot = "47")]
		public override NetSyncSessionList GetNetSyncSessionList()
		{
			return null;
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xE20BA8", Offset = "0xE20BA8", VA = "0xE20BA8", Slot = "72")]
		protected override NetSyncSessionList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D0")]
	public class MessageWithNetSyncSessionsChangedNotification : Message<NetSyncSessionsChangedNotification>
	{
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xE1A2C4", Offset = "0xE1A2C4", VA = "0xE1A2C4")]
		public MessageWithNetSyncSessionsChangedNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xE20E14", Offset = "0xE20E14", VA = "0xE20E14", Slot = "48")]
		public override NetSyncSessionsChangedNotification GetNetSyncSessionsChangedNotification()
		{
			return null;
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xE20E58", Offset = "0xE20E58", VA = "0xE20E58", Slot = "72")]
		protected override NetSyncSessionsChangedNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D1")]
	public class MessageWithNetSyncSetSessionPropertyResult : Message<NetSyncSetSessionPropertyResult>
	{
		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xE20FB0", Offset = "0xE20FB0", VA = "0xE20FB0")]
		public MessageWithNetSyncSetSessionPropertyResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xE21010", Offset = "0xE21010", VA = "0xE21010", Slot = "49")]
		public override NetSyncSetSessionPropertyResult GetNetSyncSetSessionPropertyResult()
		{
			return null;
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xE21054", Offset = "0xE21054", VA = "0xE21054", Slot = "72")]
		protected override NetSyncSetSessionPropertyResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D2")]
	public class MessageWithOrgScopedID : Message<OrgScopedID>
	{
		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xE1A324", Offset = "0xE1A324", VA = "0xE1A324")]
		public MessageWithOrgScopedID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xE212DC", Offset = "0xE212DC", VA = "0xE212DC", Slot = "50")]
		public override OrgScopedID GetOrgScopedID()
		{
			return null;
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xE21320", Offset = "0xE21320", VA = "0xE21320", Slot = "72")]
		protected override OrgScopedID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D3")]
	public class MessageWithParty : Message<Party>
	{
		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xE21444", Offset = "0xE21444", VA = "0xE21444")]
		public MessageWithParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xE214A4", Offset = "0xE214A4", VA = "0xE214A4", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xE214E8", Offset = "0xE214E8", VA = "0xE214E8", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D4")]
	public class MessageWithPartyUnderCurrentParty : Message<Party>
	{
		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xE1A384", Offset = "0xE1A384", VA = "0xE1A384")]
		public MessageWithPartyUnderCurrentParty(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xE2197C", Offset = "0xE2197C", VA = "0xE2197C", Slot = "51")]
		public override Party GetParty()
		{
			return null;
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xE219C0", Offset = "0xE219C0", VA = "0xE219C0", Slot = "72")]
		protected override Party GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D5")]
	public class MessageWithPartyID : Message<PartyID>
	{
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xE217B4", Offset = "0xE217B4", VA = "0xE217B4")]
		public MessageWithPartyID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xE21814", Offset = "0xE21814", VA = "0xE21814", Slot = "52")]
		public override PartyID GetPartyID()
		{
			return null;
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xE21858", Offset = "0xE21858", VA = "0xE21858", Slot = "72")]
		protected override PartyID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D6")]
	public class MessageWithPartyUpdateNotification : Message<PartyUpdateNotification>
	{
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xE1A3E4", Offset = "0xE1A3E4", VA = "0xE1A3E4")]
		public MessageWithPartyUpdateNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xE21A5C", Offset = "0xE21A5C", VA = "0xE21A5C", Slot = "53")]
		public override PartyUpdateNotification GetPartyUpdateNotification()
		{
			return null;
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xE21AA0", Offset = "0xE21AA0", VA = "0xE21AA0", Slot = "72")]
		protected override PartyUpdateNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D7")]
	public class MessageWithPidList : Message<PidList>
	{
		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xE1A444", Offset = "0xE1A444", VA = "0xE1A444")]
		public MessageWithPidList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xE21C24", Offset = "0xE21C24", VA = "0xE21C24", Slot = "54")]
		public override PidList GetPidList()
		{
			return null;
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xE21C68", Offset = "0xE21C68", VA = "0xE21C68", Slot = "72")]
		protected override PidList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D8")]
	public class MessageWithProductList : Message<ProductList>
	{
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xE1A4A4", Offset = "0xE1A4A4", VA = "0xE1A4A4")]
		public MessageWithProductList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xE221DC", Offset = "0xE221DC", VA = "0xE221DC", Slot = "55")]
		public override ProductList GetProductList()
		{
			return null;
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xE22220", Offset = "0xE22220", VA = "0xE22220", Slot = "72")]
		protected override ProductList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D9")]
	public class MessageWithPurchase : Message<Purchase>
	{
		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xE1A504", Offset = "0xE1A504", VA = "0xE1A504")]
		public MessageWithPurchase(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xE224BC", Offset = "0xE224BC", VA = "0xE224BC", Slot = "56")]
		public override Purchase GetPurchase()
		{
			return null;
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xE22500", Offset = "0xE22500", VA = "0xE22500", Slot = "72")]
		protected override Purchase GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DA")]
	public class MessageWithPurchaseList : Message<PurchaseList>
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xE1A564", Offset = "0xE1A564", VA = "0xE1A564")]
		public MessageWithPurchaseList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xE22654", Offset = "0xE22654", VA = "0xE22654", Slot = "57")]
		public override PurchaseList GetPurchaseList()
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xE22698", Offset = "0xE22698", VA = "0xE22698", Slot = "72")]
		protected override PurchaseList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DB")]
	public class MessageWithRoom : Message<Room>
	{
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xE1A5C4", Offset = "0xE1A5C4", VA = "0xE1A5C4")]
		public MessageWithRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xE22934", Offset = "0xE22934", VA = "0xE22934", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xE22978", Offset = "0xE22978", VA = "0xE22978", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DC")]
	public class MessageWithRoomUnderCurrentRoom : Message<Room>
	{
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xE1A624", Offset = "0xE1A624", VA = "0xE1A624")]
		public MessageWithRoomUnderCurrentRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xE2316C", Offset = "0xE2316C", VA = "0xE2316C", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xE231B0", Offset = "0xE231B0", VA = "0xE231B0", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DD")]
	public class MessageWithRoomUnderViewerRoom : Message<Room>
	{
		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xE1A684", Offset = "0xE1A684", VA = "0xE1A684")]
		public MessageWithRoomUnderViewerRoom(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xE2324C", Offset = "0xE2324C", VA = "0xE2324C", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xE23290", Offset = "0xE23290", VA = "0xE23290", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DE")]
	public class MessageWithRoomList : Message<RoomList>
	{
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xE1A6E4", Offset = "0xE1A6E4", VA = "0xE1A6E4")]
		public MessageWithRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xE22E8C", Offset = "0xE22E8C", VA = "0xE22E8C", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xE22ED0", Offset = "0xE22ED0", VA = "0xE22ED0", Slot = "72")]
		protected override RoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DF")]
	public class MessageWithRoomInviteNotification : Message<RoomInviteNotification>
	{
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xE1A744", Offset = "0xE1A744", VA = "0xE1A744")]
		public MessageWithRoomInviteNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xE22A14", Offset = "0xE22A14", VA = "0xE22A14", Slot = "59")]
		public override RoomInviteNotification GetRoomInviteNotification()
		{
			return null;
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xE22A58", Offset = "0xE22A58", VA = "0xE22A58", Slot = "72")]
		protected override RoomInviteNotification GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E0")]
	public class MessageWithRoomInviteNotificationList : Message<RoomInviteNotificationList>
	{
		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xE1A7A4", Offset = "0xE1A7A4", VA = "0xE1A7A4")]
		public MessageWithRoomInviteNotificationList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xE22BAC", Offset = "0xE22BAC", VA = "0xE22BAC", Slot = "60")]
		public override RoomInviteNotificationList GetRoomInviteNotificationList()
		{
			return null;
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xE22BF0", Offset = "0xE22BF0", VA = "0xE22BF0", Slot = "72")]
		protected override RoomInviteNotificationList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E1")]
	public class MessageWithSdkAccountList : Message<SdkAccountList>
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xE1A804", Offset = "0xE1A804", VA = "0xE1A804")]
		public MessageWithSdkAccountList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xE2332C", Offset = "0xE2332C", VA = "0xE2332C", Slot = "62")]
		public override SdkAccountList GetSdkAccountList()
		{
			return null;
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xE23370", Offset = "0xE23370", VA = "0xE23370", Slot = "72")]
		protected override SdkAccountList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E2")]
	public class MessageWithShareMediaResult : Message<ShareMediaResult>
	{
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xE1A864", Offset = "0xE1A864", VA = "0xE1A864")]
		public MessageWithShareMediaResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xE235DC", Offset = "0xE235DC", VA = "0xE235DC", Slot = "63")]
		public override ShareMediaResult GetShareMediaResult()
		{
			return null;
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xE23620", Offset = "0xE23620", VA = "0xE23620", Slot = "72")]
		protected override ShareMediaResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E3")]
	public class MessageWithString : Message<string>
	{
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xE1A8C4", Offset = "0xE1A8C4", VA = "0xE1A8C4")]
		public MessageWithString(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xE23744", Offset = "0xE23744", VA = "0xE23744", Slot = "64")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xE23788", Offset = "0xE23788", VA = "0xE23788", Slot = "72")]
		protected override string GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E4")]
	public class MessageWithSystemPermission : Message<SystemPermission>
	{
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xE237F0", Offset = "0xE237F0", VA = "0xE237F0")]
		public MessageWithSystemPermission(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xE23850", Offset = "0xE23850", VA = "0xE23850", Slot = "65")]
		public override SystemPermission GetSystemPermission()
		{
			return null;
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xE23894", Offset = "0xE23894", VA = "0xE23894", Slot = "72")]
		protected override SystemPermission GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E5")]
	public class MessageWithSystemVoipState : Message<SystemVoipState>
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xE1A924", Offset = "0xE1A924", VA = "0xE1A924")]
		public MessageWithSystemVoipState(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xE239CC", Offset = "0xE239CC", VA = "0xE239CC", Slot = "66")]
		public override SystemVoipState GetSystemVoipState()
		{
			return null;
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xE23A10", Offset = "0xE23A10", VA = "0xE23A10", Slot = "72")]
		protected override SystemVoipState GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E6")]
	public class MessageWithUser : Message<User>
	{
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xE1A984", Offset = "0xE1A984", VA = "0xE1A984")]
		public MessageWithUser(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xE23B44", Offset = "0xE23B44", VA = "0xE23B44", Slot = "67")]
		public override User GetUser()
		{
			return null;
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xE23B88", Offset = "0xE23B88", VA = "0xE23B88", Slot = "72")]
		protected override User GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E7")]
	public class MessageWithUserAndRoomList : Message<UserAndRoomList>
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xE1A9E4", Offset = "0xE1A9E4", VA = "0xE1A9E4")]
		public MessageWithUserAndRoomList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xE23D2C", Offset = "0xE23D2C", VA = "0xE23D2C", Slot = "68")]
		public override UserAndRoomList GetUserAndRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xE23D70", Offset = "0xE23D70", VA = "0xE23D70", Slot = "72")]
		protected override UserAndRoomList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E8")]
	public class MessageWithUserList : Message<UserList>
	{
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xE1AA44", Offset = "0xE1AA44", VA = "0xE1AA44")]
		public MessageWithUserList(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xE2400C", Offset = "0xE2400C", VA = "0xE2400C", Slot = "69")]
		public override UserList GetUserList()
		{
			return null;
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xE24050", Offset = "0xE24050", VA = "0xE24050", Slot = "72")]
		protected override UserList GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E9")]
	public class MessageWithUserProof : Message<UserProof>
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE1AAA4", Offset = "0xE1AAA4", VA = "0xE1AAA4")]
		public MessageWithUserProof(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xE242EC", Offset = "0xE242EC", VA = "0xE242EC", Slot = "70")]
		public override UserProof GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xE24330", Offset = "0xE24330", VA = "0xE24330", Slot = "72")]
		protected override UserProof GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EA")]
	public class MessageWithUserReportID : Message<UserReportID>
	{
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xE24454", Offset = "0xE24454", VA = "0xE24454")]
		public MessageWithUserReportID(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE244B4", Offset = "0xE244B4", VA = "0xE244B4", Slot = "71")]
		public override UserReportID GetUserReportID()
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xE244F8", Offset = "0xE244F8", VA = "0xE244F8", Slot = "72")]
		protected override UserReportID GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EB")]
	public class MessageWithNetworkingPeer : Message<NetworkingPeer>
	{
		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE1AB04", Offset = "0xE1AB04", VA = "0xE1AB04")]
		public MessageWithNetworkingPeer(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE2119C", Offset = "0xE2119C", VA = "0xE2119C", Slot = "6")]
		public override NetworkingPeer GetNetworkingPeer()
		{
			return null;
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xE211E0", Offset = "0xE211E0", VA = "0xE211E0", Slot = "72")]
		protected override NetworkingPeer GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EC")]
	public class MessageWithPingResult : Message<PingResult>
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xE1AB64", Offset = "0xE1AB64", VA = "0xE1AB64")]
		public MessageWithPingResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xE21ED4", Offset = "0xE21ED4", VA = "0xE21ED4", Slot = "5")]
		public override PingResult GetPingResult()
		{
			return null;
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xE21F18", Offset = "0xE21F18", VA = "0xE21F18", Slot = "72")]
		protected override PingResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001ED")]
	public class MessageWithLeaderboardDidUpdate : Message<bool>
	{
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xE19FC4", Offset = "0xE19FC4", VA = "0xE19FC4")]
		public MessageWithLeaderboardDidUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xE1EDB8", Offset = "0xE1EDB8", VA = "0xE1EDB8", Slot = "34")]
		public override bool GetLeaderboardDidUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xE1EDFC", Offset = "0xE1EDFC", VA = "0xE1EDFC", Slot = "72")]
		protected override bool GetDataFromMessage(IntPtr c_message)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001EE")]
	public class MessageWithMatchmakingNotification : Message<Room>
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xE1ABC4", Offset = "0xE1ABC4", VA = "0xE1ABC4")]
		public MessageWithMatchmakingNotification(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xE20360", Offset = "0xE20360", VA = "0xE20360", Slot = "58")]
		public override Room GetRoom()
		{
			return null;
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xE203A4", Offset = "0xE203A4", VA = "0xE203A4", Slot = "72")]
		protected override Room GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EF")]
	public class MessageWithMatchmakingBrowseResult : Message<MatchmakingBrowseResult>
	{
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xE1A0E4", Offset = "0xE1A0E4", VA = "0xE1A0E4")]
		public MessageWithMatchmakingBrowseResult(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xE1FD54", Offset = "0xE1FD54", VA = "0xE1FD54", Slot = "43")]
		public override MatchmakingEnqueueResult GetMatchmakingEnqueueResult()
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xE1FDA4", Offset = "0xE1FDA4", VA = "0xE1FDA4", Slot = "61")]
		public override RoomList GetRoomList()
		{
			return null;
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xE1FDF4", Offset = "0xE1FDF4", VA = "0xE1FDF4", Slot = "72")]
		protected override MatchmakingBrowseResult GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F0")]
	public class MessageWithHttpTransferUpdate : Message<HttpTransferUpdate>
	{
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xE1AC24", Offset = "0xE1AC24", VA = "0xE1AC24")]
		public MessageWithHttpTransferUpdate(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xE1E164", Offset = "0xE1E164", VA = "0xE1E164", Slot = "7")]
		public override HttpTransferUpdate GetHttpTransferUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xE1E1A8", Offset = "0xE1E1A8", VA = "0xE1E1A8", Slot = "72")]
		protected override HttpTransferUpdate GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F1")]
	public class MessageWithPlatformInitialize : Message<PlatformInitialize>
	{
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xE1AC84", Offset = "0xE1AC84", VA = "0xE1AC84")]
		public MessageWithPlatformInitialize(IntPtr c_message)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xE22074", Offset = "0xE22074", VA = "0xE22074", Slot = "8")]
		public override PlatformInitialize GetPlatformInitialize()
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xE220B8", Offset = "0xE220B8", VA = "0xE220B8", Slot = "72")]
		protected override PlatformInitialize GetDataFromMessage(IntPtr c_message)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F2")]
	public enum NetSyncConnectionStatus
	{
		[Token(Token = "0x4000C98")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAB14", Offset = "0x7CAB14")]
		Unknown,
		[Token(Token = "0x4000C99")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAB4C", Offset = "0x7CAB4C")]
		Connecting,
		[Token(Token = "0x4000C9A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAB84", Offset = "0x7CAB84")]
		Disconnected,
		[Token(Token = "0x4000C9B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CABBC", Offset = "0x7CABBC")]
		Connected
	}
	[Token(Token = "0x20001F3")]
	public enum NetSyncDisconnectReason
	{
		[Token(Token = "0x4000C9D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CABF4", Offset = "0x7CABF4")]
		Unknown,
		[Token(Token = "0x4000C9E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAC2C", Offset = "0x7CAC2C")]
		LocalTerminated,
		[Token(Token = "0x4000C9F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAC64", Offset = "0x7CAC64")]
		ServerTerminated,
		[Token(Token = "0x4000CA0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAC9C", Offset = "0x7CAC9C")]
		Failed,
		[Token(Token = "0x4000CA1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CACD4", Offset = "0x7CACD4")]
		Lost
	}
	[Token(Token = "0x20001F4")]
	public class NetSyncOptions
	{
		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xE266F4", Offset = "0xE266F4", VA = "0xE266F4")]
		public NetSyncOptions()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xE2676C", Offset = "0xE2676C", VA = "0xE2676C")]
		public void SetVoipGroup(string value)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xE267E8", Offset = "0xE267E8", VA = "0xE267E8")]
		public void SetVoipStreamDefault(NetSyncVoipStreamMode value)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xE26864", Offset = "0xE26864", VA = "0xE26864")]
		public void SetZoneId(string value)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xE268E0", Offset = "0xE268E0", VA = "0xE268E0")]
		public static explicit operator IntPtr(NetSyncOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xE26930", Offset = "0xE26930", VA = "0xE26930", Slot = "1")]
		~NetSyncOptions()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public enum NetSyncVoipMicSource
	{
		[Token(Token = "0x4000CA4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAD0C", Offset = "0x7CAD0C")]
		Unknown,
		[Token(Token = "0x4000CA5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAD44", Offset = "0x7CAD44")]
		None,
		[Token(Token = "0x4000CA6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAD7C", Offset = "0x7CAD7C")]
		Internal
	}
	[Token(Token = "0x20001F6")]
	public enum NetSyncVoipStreamMode
	{
		[Token(Token = "0x4000CA8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CADB4", Offset = "0x7CADB4")]
		Unknown,
		[Token(Token = "0x4000CA9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CADEC", Offset = "0x7CADEC")]
		Ambisonic,
		[Token(Token = "0x4000CAA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAE24", Offset = "0x7CAE24")]
		Mono
	}
	[Token(Token = "0x20001F7")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x170000A4")]
		public ulong SenderID
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0xE26ED8", Offset = "0xE26ED8", VA = "0xE26ED8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000A5")]
		public ulong Size
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0xE26F44", Offset = "0xE26F44", VA = "0xE26F44")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000A6")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xE26F4C", Offset = "0xE26F4C", VA = "0xE26F4C")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xE25AD4", Offset = "0xE25AD4", VA = "0xE25AD4")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xE26D84", Offset = "0xE26D84", VA = "0xE26D84")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xE26FB8", Offset = "0xE26FB8", VA = "0xE26FB8", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xE27020", Offset = "0xE27020", VA = "0xE27020", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public enum PartyUpdateAction
	{
		[Token(Token = "0x4000CAE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAE5C", Offset = "0x7CAE5C")]
		Unknown,
		[Token(Token = "0x4000CAF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAE94", Offset = "0x7CAE94")]
		Join,
		[Token(Token = "0x4000CB0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAECC", Offset = "0x7CAECC")]
		Leave,
		[Token(Token = "0x4000CB1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAF04", Offset = "0x7CAF04")]
		Invite,
		[Token(Token = "0x4000CB2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAF3C", Offset = "0x7CAF3C")]
		Uninvite
	}
	[Token(Token = "0x20001F9")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x4000CB4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAF74", Offset = "0x7CAF74")]
		Unknown,
		[Token(Token = "0x4000CB5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAFAC", Offset = "0x7CAFAC")]
		Connected,
		[Token(Token = "0x4000CB6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CAFE4", Offset = "0x7CAFE4")]
		Timeout,
		[Token(Token = "0x4000CB7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB01C", Offset = "0x7CB01C")]
		Closed
	}
	[Token(Token = "0x20001FA")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4000CB9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB054", Offset = "0x7CB054")]
		Unknown,
		[Token(Token = "0x4000CBA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB08C", Offset = "0x7CB08C")]
		Granted,
		[Token(Token = "0x4000CBB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB0C4", Offset = "0x7CB0C4")]
		Denied,
		[Token(Token = "0x4000CBC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB0FC", Offset = "0x7CB0FC")]
		Blocked
	}
	[Token(Token = "0x20001FB")]
	public enum PermissionType
	{
		[Token(Token = "0x4000CBE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB134", Offset = "0x7CB134")]
		Unknown,
		[Token(Token = "0x4000CBF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB16C", Offset = "0x7CB16C")]
		Microphone,
		[Token(Token = "0x4000CC0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB1A4", Offset = "0x7CB1A4")]
		WriteExternalStorage
	}
	[Token(Token = "0x20001FC")]
	public sealed class Core
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xE13DF0", Offset = "0xE13DF0", VA = "0xE13DF0")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xE13E58", Offset = "0xE13E58", VA = "0xE13E58")]
		internal static void ForceInitialized()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xE13EC4", Offset = "0xE13EC4", VA = "0xE13EC4")]
		private static string getAppID([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xE140A8", Offset = "0xE140A8", VA = "0xE140A8")]
		public static Request<PlatformInitialize> AsyncInitialize([Optional] string appId)
		{
			return null;
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xE1435C", Offset = "0xE1435C", VA = "0xE1435C")]
		public static void Initialize([Optional] string appId)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xE1405C", Offset = "0xE1405C", VA = "0xE1405C")]
		private static string GetAppIDFromConfig()
		{
			return null;
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xE14674", Offset = "0xE14674", VA = "0xE14674")]
		public Core()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public static class ApplicationLifecycle
	{
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x13A1338", Offset = "0x13A1338", VA = "0x13A1338")]
		public static LaunchDetails GetLaunchDetails()
		{
			return null;
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x13A1438", Offset = "0x13A1438", VA = "0x13A1438")]
		public static void SetLaunchIntentChangedNotificationCallback(Message<string>.Callback callback)
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public static class Rooms
	{
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xE28AC4", Offset = "0xE28AC4", VA = "0xE28AC4")]
		public static Request<Room> UpdateDataStore(ulong roomID, Dictionary<string, string> data)
		{
			return null;
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xE28D20", Offset = "0xE28D20", VA = "0xE28D20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7D12B8", Offset = "0x7D12B8")]
		public static void SetRoomInviteNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xE28D9C", Offset = "0xE28D9C", VA = "0xE28D9C")]
		public static Request<Room> CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xE28ED0", Offset = "0xE28ED0", VA = "0xE28ED0")]
		public static Request<Room> CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xE29030", Offset = "0xE29030", VA = "0xE29030")]
		public static Request<Room> Get(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xE2914C", Offset = "0xE2914C", VA = "0xE2914C")]
		public static Request<Room> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xE29258", Offset = "0xE29258", VA = "0xE29258")]
		public static Request<Room> GetCurrentForUser(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE29374", Offset = "0xE29374", VA = "0xE29374")]
		public static Request<UserList> GetInvitableUsers()
		{
			return null;
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE29480", Offset = "0xE29480", VA = "0xE29480")]
		public static Request<UserList> GetInvitableUsers2([Optional] RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xE295C8", Offset = "0xE295C8", VA = "0xE295C8")]
		public static Request<RoomList> GetModeratedRooms()
		{
			return null;
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xE296D4", Offset = "0xE296D4", VA = "0xE296D4")]
		public static Request<Room> InviteUser(ulong roomID, string inviteToken)
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xE297F8", Offset = "0xE297F8", VA = "0xE297F8")]
		public static Request<Room> Join(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xE2991C", Offset = "0xE2991C", VA = "0xE2991C")]
		public static Request<Room> Join2(ulong roomID, RoomOptions roomOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xE29A6C", Offset = "0xE29A6C", VA = "0xE29A6C")]
		public static Request<Room> KickUser(ulong roomID, ulong userID, int kickDurationSeconds)
		{
			return null;
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xE29BA0", Offset = "0xE29BA0", VA = "0xE29BA0")]
		public static Request LaunchInvitableUserFlow(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xE29CB4", Offset = "0xE29CB4", VA = "0xE29CB4")]
		public static Request<Room> Leave(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xE29DD0", Offset = "0xE29DD0", VA = "0xE29DD0")]
		public static Request<Room> SetDescription(ulong roomID, string description)
		{
			return null;
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xE29EF4", Offset = "0xE29EF4", VA = "0xE29EF4")]
		public static Request<Room> UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus)
		{
			return null;
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xE2A018", Offset = "0xE2A018", VA = "0xE2A018")]
		public static Request UpdateOwner(ulong roomID, ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xE2A134", Offset = "0xE2A134", VA = "0xE2A134")]
		public static Request<Room> UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy)
		{
			return null;
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xE28D24", Offset = "0xE28D24", VA = "0xE28D24")]
		public static void SetRoomInviteAcceptedNotificationCallback(Message<string>.Callback callback)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xE2A258", Offset = "0xE2A258", VA = "0xE2A258")]
		public static void SetRoomInviteReceivedNotificationCallback(Message<RoomInviteNotification>.Callback callback)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xE2A2D0", Offset = "0xE2A2D0", VA = "0xE2A2D0")]
		public static void SetUpdateNotificationCallback(Message<Room>.Callback callback)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xE2A348", Offset = "0xE2A348", VA = "0xE2A348")]
		public static Request<RoomList> GetNextRoomListPage(RoomList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20001FF")]
	public static class Matchmaking
	{
		[Token(Token = "0x20003CF")]
		public class CustomQuery
		{
			[Token(Token = "0x20003F6")]
			public struct Criterion
			{
				[Token(Token = "0x4001464")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string key;

				[Token(Token = "0x4001465")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public MatchmakingCriterionImportance importance;

				[Token(Token = "0x4001466")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Dictionary<string, object> parameters;

				[Token(Token = "0x6001668")]
				[Address(RVA = "0x858E00", Offset = "0x858E00", VA = "0x858E00")]
				public Criterion(string key_, MatchmakingCriterionImportance importance_)
				{
				}
			}

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> data;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Criterion[] criteria;

			[Token(Token = "0x6001620")]
			[Address(RVA = "0xE16110", Offset = "0xE16110", VA = "0xE16110")]
			public IntPtr ToUnmanaged()
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6001621")]
			[Address(RVA = "0xE175EC", Offset = "0xE175EC", VA = "0xE175EC")]
			public CustomQuery()
			{
			}
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xE15C4C", Offset = "0xE15C4C", VA = "0xE15C4C")]
		public static Request ReportResultsInsecure(ulong roomID, Dictionary<string, int> data)
		{
			return null;
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xE15EA8", Offset = "0xE15EA8", VA = "0xE15EA8")]
		public static Request<MatchmakingStats> GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach = MatchmakingStatApproach.Trailing)
		{
			return null;
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xE15FDC", Offset = "0xE15FDC", VA = "0xE15FDC")]
		public static Request<MatchmakingBrowseResult> Browse(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xE16448", Offset = "0xE16448", VA = "0xE16448")]
		public static Request<MatchmakingBrowseResult> Browse2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xE165E8", Offset = "0xE165E8", VA = "0xE165E8")]
		public static Request Cancel(string pool, string requestHash)
		{
			return null;
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xE16704", Offset = "0xE16704", VA = "0xE16704")]
		public static Request Cancel()
		{
			return null;
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xE16808", Offset = "0xE16808", VA = "0xE16808")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates = false, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xE16954", Offset = "0xE16954", VA = "0xE16954")]
		public static Request<MatchmakingEnqueueResultAndRoom> CreateAndEnqueueRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xE16AA4", Offset = "0xE16AA4", VA = "0xE16AA4")]
		public static Request<Room> CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xE16BD8", Offset = "0xE16BD8", VA = "0xE16BD8")]
		public static Request<Room> CreateRoom2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xE16D28", Offset = "0xE16D28", VA = "0xE16D28")]
		public static Request<MatchmakingEnqueueResult> Enqueue(string pool, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xE16E5C", Offset = "0xE16E5C", VA = "0xE16E5C")]
		public static Request<MatchmakingEnqueueResult> Enqueue2(string pool, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xE16FAC", Offset = "0xE16FAC", VA = "0xE16FAC")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom(ulong roomID, [Optional] CustomQuery customQueryData)
		{
			return null;
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xE170E0", Offset = "0xE170E0", VA = "0xE170E0")]
		public static Request<MatchmakingEnqueueResult> EnqueueRoom2(ulong roomID, [Optional] MatchmakingOptions matchmakingOptions)
		{
			return null;
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xE17230", Offset = "0xE17230", VA = "0xE17230")]
		public static Request<MatchmakingAdminSnapshot> GetAdminSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xE1733C", Offset = "0xE1733C", VA = "0xE1733C")]
		public static Request<Room> JoinRoom(ulong roomID, bool subscribeToUpdates = false)
		{
			return null;
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xE17460", Offset = "0xE17460", VA = "0xE17460")]
		public static Request StartMatch(ulong roomID)
		{
			return null;
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xE17574", Offset = "0xE17574", VA = "0xE17574")]
		public static void SetMatchFoundNotificationCallback(Message<Room>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000200")]
	public static class Net
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xE259C4", Offset = "0xE259C4", VA = "0xE259C4")]
		public static Packet ReadPacket()
		{
			return null;
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xE25B94", Offset = "0xE25B94", VA = "0xE25B94")]
		public static bool SendPacket(ulong userID, byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xE25CE0", Offset = "0xE25CE0", VA = "0xE25CE0")]
		public static void Connect(ulong userID)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xE25DCC", Offset = "0xE25DCC", VA = "0xE25DCC")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xE25EB8", Offset = "0xE25EB8", VA = "0xE25EB8")]
		public static void Close(ulong userID)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xE25FA4", Offset = "0xE25FA4", VA = "0xE25FA4")]
		public static bool IsConnected(ulong userID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xE26094", Offset = "0xE26094", VA = "0xE26094")]
		public static bool SendPacketToCurrentRoom(byte[] bytes, SendPolicy policy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xE261CC", Offset = "0xE261CC", VA = "0xE261CC")]
		public static bool AcceptForCurrentRoom()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xE262A8", Offset = "0xE262A8", VA = "0xE262A8")]
		public static void CloseForCurrentRoom()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xE26380", Offset = "0xE26380", VA = "0xE26380")]
		public static Request<PingResult> Ping(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xE2649C", Offset = "0xE2649C", VA = "0xE2649C")]
		public static void SetConnectionStateChangedCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xE26514", Offset = "0xE26514", VA = "0xE26514")]
		public static void SetPeerConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xE2658C", Offset = "0xE2658C", VA = "0xE2658C")]
		public static void SetPingResultNotificationCallback(Message<PingResult>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000201")]
	public static class Leaderboards
	{
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xE15290", Offset = "0xE15290", VA = "0xE15290")]
		public static Request<LeaderboardEntryList> GetNextEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xE153C0", Offset = "0xE153C0", VA = "0xE153C0")]
		public static Request<LeaderboardEntryList> GetPreviousEntries(LeaderboardEntryList list)
		{
			return null;
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xE154F0", Offset = "0xE154F0", VA = "0xE154F0")]
		public static Request<LeaderboardEntryList> GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return null;
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xE1562C", Offset = "0xE1562C", VA = "0xE1562C")]
		public static Request<LeaderboardEntryList> GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return null;
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xE15760", Offset = "0xE15760", VA = "0xE15760")]
		public static Request<bool> WriteEntry(string leaderboardName, long score, [Optional] byte[] extraData, bool forceUpdate = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000202")]
	public static class Voip
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xEF013C", Offset = "0xEF013C", VA = "0xEF013C")]
		public static void Start(ulong userID)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xEF0228", Offset = "0xEF0228", VA = "0xEF0228")]
		public static void Accept(ulong userID)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xEF0314", Offset = "0xEF0314", VA = "0xEF0314")]
		public static void Stop(ulong userID)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xEF0400", Offset = "0xEF0400", VA = "0xEF0400")]
		public static void SetMicrophoneFilterCallback(CAPI.FilterCallback callback)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xEF0524", Offset = "0xEF0524", VA = "0xEF0524")]
		public static void SetMicrophoneMuted(VoipMuteState state)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xEF0610", Offset = "0xEF0610", VA = "0xEF0610")]
		public static VoipMuteState GetSystemVoipMicrophoneMuted()
		{
			return default(VoipMuteState);
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xEF06EC", Offset = "0xEF06EC", VA = "0xEF06EC")]
		public static SystemVoipStatus GetSystemVoipStatus()
		{
			return default(SystemVoipStatus);
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xEF07C8", Offset = "0xEF07C8", VA = "0xEF07C8")]
		public static VoipDtxState GetIsConnectionUsingDtx(ulong peerID)
		{
			return default(VoipDtxState);
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xEF08B8", Offset = "0xEF08B8", VA = "0xEF08B8")]
		public static VoipBitrate GetLocalBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xEF09A8", Offset = "0xEF09A8", VA = "0xEF09A8")]
		public static VoipBitrate GetRemoteBitrate(ulong peerID)
		{
			return default(VoipBitrate);
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xEF0A98", Offset = "0xEF0A98", VA = "0xEF0A98")]
		public static void SetNewConnectionOptions(VoipOptions voipOptions)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xEF0C00", Offset = "0xEF0C00", VA = "0xEF0C00")]
		public static Request<SystemVoipState> SetSystemVoipSuppressed(bool suppressed)
		{
			return null;
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xEF0D1C", Offset = "0xEF0D1C", VA = "0xEF0D1C")]
		public static void SetVoipConnectRequestCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xEF0D94", Offset = "0xEF0D94", VA = "0xEF0D94")]
		public static void SetVoipStateChangeCallback(Message<NetworkingPeer>.Callback callback)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xEF0E0C", Offset = "0xEF0E0C", VA = "0xEF0E0C")]
		public static void SetSystemVoipStateNotificationCallback(Message<SystemVoipState>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000203")]
	public static class Achievements
	{
		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x139FBA0", Offset = "0x139FBA0", VA = "0x139FBA0")]
		public static Request<AchievementUpdate> AddCount(string name, ulong count)
		{
			return null;
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x139FD78", Offset = "0x139FD78", VA = "0x139FD78")]
		public static Request<AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x139FF6C", Offset = "0x139FF6C", VA = "0x139FF6C")]
		public static Request<AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x13A00E8", Offset = "0x13A00E8", VA = "0x13A00E8")]
		public static Request<AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x13A0264", Offset = "0x13A0264", VA = "0x13A0264")]
		public static Request<AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x13A04E4", Offset = "0x13A04E4", VA = "0x13A04E4")]
		public static Request<AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x13A0764", Offset = "0x13A0764", VA = "0x13A0764")]
		public static Request<AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x13A0924", Offset = "0x13A0924", VA = "0x13A0924")]
		public static Request<AchievementDefinitionList> GetNextAchievementDefinitionListPage(AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x13A0B44", Offset = "0x13A0B44", VA = "0x13A0B44")]
		public static Request<AchievementProgressList> GetNextAchievementProgressListPage(AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000204")]
	public static class Application
	{
		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x13A0F90", Offset = "0x13A0F90", VA = "0x13A0F90")]
		public static Request<ApplicationVersion> GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x13A110C", Offset = "0x13A110C", VA = "0x13A110C")]
		public static Request<string> LaunchOtherApp(ulong appID, [Optional] ApplicationOptions deeplink_options)
		{
			return null;
		}
	}
	[Token(Token = "0x2000205")]
	public static class AssetFile
	{
		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x13A17F0", Offset = "0x13A17F0", VA = "0x13A17F0")]
		public static Request<AssetFileDeleteResult> Delete(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x13A1988", Offset = "0x13A1988", VA = "0x13A1988")]
		public static Request<AssetFileDeleteResult> DeleteById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x13A1B20", Offset = "0x13A1B20", VA = "0x13A1B20")]
		public static Request<AssetFileDeleteResult> DeleteByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x13A1CE0", Offset = "0x13A1CE0", VA = "0x13A1CE0")]
		public static Request<AssetFileDownloadResult> Download(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x13A1E78", Offset = "0x13A1E78", VA = "0x13A1E78")]
		public static Request<AssetFileDownloadResult> DownloadById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x13A2010", Offset = "0x13A2010", VA = "0x13A2010")]
		public static Request<AssetFileDownloadResult> DownloadByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x13A21D0", Offset = "0x13A21D0", VA = "0x13A21D0")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancel(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x13A2368", Offset = "0x13A2368", VA = "0x13A2368")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x13A2500", Offset = "0x13A2500", VA = "0x13A2500")]
		public static Request<AssetFileDownloadCancelResult> DownloadCancelByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x13A26C0", Offset = "0x13A26C0", VA = "0x13A26C0")]
		public static Request<AssetDetailsList> GetList()
		{
			return null;
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x13A283C", Offset = "0x13A283C", VA = "0x13A283C")]
		public static Request<AssetDetails> Status(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x13A29D4", Offset = "0x13A29D4", VA = "0x13A29D4")]
		public static Request<AssetDetails> StatusById(ulong assetFileID)
		{
			return null;
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x13A2B6C", Offset = "0x13A2B6C", VA = "0x13A2B6C")]
		public static Request<AssetDetails> StatusByName(string assetFileName)
		{
			return null;
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x13A2D2C", Offset = "0x13A2D2C", VA = "0x13A2D2C")]
		public static void SetDownloadUpdateNotificationCallback(Message<AssetFileDownloadUpdate>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000206")]
	public static class Avatar
	{
	}
	[Token(Token = "0x2000207")]
	public static class Cal
	{
	}
	[Token(Token = "0x2000208")]
	public static class CloudStorage
	{
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xE130D8", Offset = "0xE130D8", VA = "0xE130D8")]
		public static Request<CloudStorageUpdateResponse> Delete(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xE131FC", Offset = "0xE131FC", VA = "0xE131FC")]
		public static Request<CloudStorageData> Load(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xE13320", Offset = "0xE13320", VA = "0xE13320")]
		public static Request<CloudStorageMetadataList> LoadBucketMetadata(string bucket)
		{
			return null;
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xE1343C", Offset = "0xE1343C", VA = "0xE1343C")]
		public static Request<CloudStorageConflictMetadata> LoadConflictMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xE13560", Offset = "0xE13560", VA = "0xE13560")]
		public static Request<CloudStorageData> LoadHandle(string handle)
		{
			return null;
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xE1367C", Offset = "0xE1367C", VA = "0xE1367C")]
		public static Request<CloudStorageMetadata> LoadMetadata(string bucket, string key)
		{
			return null;
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xE137A0", Offset = "0xE137A0", VA = "0xE137A0")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xE138D4", Offset = "0xE138D4", VA = "0xE138D4")]
		public static Request<CloudStorageUpdateResponse> ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return null;
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xE13A08", Offset = "0xE13A08", VA = "0xE13A08")]
		public static Request<CloudStorageUpdateResponse> Save(string bucket, string key, byte[] data, long counter, string extraData)
		{
			return null;
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xE13B68", Offset = "0xE13B68", VA = "0xE13B68")]
		public static Request<CloudStorageMetadataList> GetNextCloudStorageMetadataListPage(CloudStorageMetadataList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000209")]
	public static class CloudStorage2
	{
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xE13CE4", Offset = "0xE13CE4", VA = "0xE13CE4")]
		public static Request<string> GetUserDirectoryPath()
		{
			return null;
		}
	}
	[Token(Token = "0x200020A")]
	public static class Colocation
	{
	}
	[Token(Token = "0x200020B")]
	public static class Entitlements
	{
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xE14680", Offset = "0xE14680", VA = "0xE14680")]
		public static Request IsUserEntitledToApplication()
		{
			return null;
		}
	}
	[Token(Token = "0x200020C")]
	public static class GraphAPI
	{
	}
	[Token(Token = "0x200020D")]
	public static class HTTP
	{
	}
	[Token(Token = "0x200020E")]
	public static class IAP
	{
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xE147B0", Offset = "0xE147B0", VA = "0xE147B0")]
		public static Request ConsumePurchase(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xE148C4", Offset = "0xE148C4", VA = "0xE148C4")]
		public static Request<ProductList> GetProductsBySKU(string[] skus)
		{
			return null;
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xE149F4", Offset = "0xE149F4", VA = "0xE149F4")]
		public static Request<PurchaseList> GetViewerPurchases()
		{
			return null;
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xE14B00", Offset = "0xE14B00", VA = "0xE14B00")]
		public static Request<PurchaseList> GetViewerPurchasesDurableCache()
		{
			return null;
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xE14C0C", Offset = "0xE14C0C", VA = "0xE14C0C")]
		public static Request<Purchase> LaunchCheckoutFlow(string sku)
		{
			return null;
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xE14D70", Offset = "0xE14D70", VA = "0xE14D70")]
		public static Request<ProductList> GetNextProductListPage(ProductList list)
		{
			return null;
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xE14EEC", Offset = "0xE14EEC", VA = "0xE14EEC")]
		public static Request<PurchaseList> GetNextPurchaseListPage(PurchaseList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200020F")]
	public static class LanguagePack
	{
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xE15068", Offset = "0xE15068", VA = "0xE15068")]
		public static Request<AssetDetails> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xE15174", Offset = "0xE15174", VA = "0xE15174")]
		public static Request<AssetFileDownloadResult> SetCurrent(string tag)
		{
			return null;
		}
	}
	[Token(Token = "0x2000210")]
	public static class Livestreaming
	{
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xE158B0", Offset = "0xE158B0", VA = "0xE158B0")]
		public static Request<LivestreamingStatus> GetStatus()
		{
			return null;
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xE159BC", Offset = "0xE159BC", VA = "0xE159BC")]
		public static Request<LivestreamingStatus> PauseStream()
		{
			return null;
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xE15AC8", Offset = "0xE15AC8", VA = "0xE15AC8")]
		public static Request<LivestreamingStatus> ResumeStream()
		{
			return null;
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xE15BD4", Offset = "0xE15BD4", VA = "0xE15BD4")]
		public static void SetStatusUpdateNotificationCallback(Message<LivestreamingStatus>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000211")]
	public static class Media
	{
		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xE17CFC", Offset = "0xE17CFC", VA = "0xE17CFC")]
		public static Request<ShareMediaResult> ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000212")]
	public static class NetSync
	{
		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xE26604", Offset = "0xE26604", VA = "0xE26604")]
		public static void SetConnectionStatusChangedNotificationCallback(Message<NetSyncConnection>.Callback callback)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xE2667C", Offset = "0xE2667C", VA = "0xE2667C")]
		public static void SetSessionsChangedNotificationCallback(Message<NetSyncSessionsChangedNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000213")]
	public static class Notifications
	{
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xE269E8", Offset = "0xE269E8", VA = "0xE269E8")]
		public static Request<RoomInviteNotificationList> GetRoomInviteNotifications()
		{
			return null;
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xE26AF4", Offset = "0xE26AF4", VA = "0xE26AF4")]
		public static Request MarkAsRead(ulong notificationID)
		{
			return null;
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xE26C08", Offset = "0xE26C08", VA = "0xE26C08")]
		public static Request<RoomInviteNotificationList> GetNextRoomInviteNotificationListPage(RoomInviteNotificationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000214")]
	public static class Parties
	{
		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xE270B8", Offset = "0xE270B8", VA = "0xE270B8")]
		public static Request<Party> GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xE271C4", Offset = "0xE271C4", VA = "0xE271C4")]
		public static void SetPartyUpdateNotificationCallback(Message<PartyUpdateNotification>.Callback callback)
		{
		}
	}
	[Token(Token = "0x2000215")]
	public static class RichPresence
	{
		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xE27958", Offset = "0xE27958", VA = "0xE27958")]
		public static Request Clear()
		{
			return null;
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xE27A5C", Offset = "0xE27A5C", VA = "0xE27A5C")]
		public static Request<DestinationList> GetDestinations()
		{
			return null;
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xE27B68", Offset = "0xE27B68", VA = "0xE27B68")]
		public static Request Set(RichPresenceOptions richPresenceOptions)
		{
			return null;
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xE27CF8", Offset = "0xE27CF8", VA = "0xE27CF8")]
		public static Request<DestinationList> GetNextDestinationListPage(DestinationList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000216")]
	public static class Users
	{
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xF85B7C", Offset = "0xF85B7C", VA = "0xF85B7C")]
		public static Request<User> Get(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xF9BA28", Offset = "0xF9BA28", VA = "0xF9BA28")]
		public static Request<string> GetAccessToken()
		{
			return null;
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xF85A70", Offset = "0xF85A70", VA = "0xF85A70")]
		public static Request<User> GetLoggedInUser()
		{
			return null;
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xF85C98", Offset = "0xF85C98", VA = "0xF85C98")]
		public static Request<UserList> GetLoggedInUserFriends()
		{
			return null;
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xF9BB34", Offset = "0xF9BB34", VA = "0xF9BB34")]
		public static Request<UserAndRoomList> GetLoggedInUserFriendsAndRooms()
		{
			return null;
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xF9BC40", Offset = "0xF9BC40", VA = "0xF9BC40")]
		public static Request<UserAndRoomList> GetLoggedInUserRecentlyMetUsersAndRooms([Optional] UserOptions userOptions)
		{
			return null;
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xF9BD88", Offset = "0xF9BD88", VA = "0xF9BD88")]
		public static Request<OrgScopedID> GetOrgScopedID(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xF9BEA4", Offset = "0xF9BEA4", VA = "0xF9BEA4")]
		public static Request<SdkAccountList> GetSdkAccounts()
		{
			return null;
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xF85964", Offset = "0xF85964", VA = "0xF85964")]
		public static Request<UserProof> GetUserProof()
		{
			return null;
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xF9BFB0", Offset = "0xF9BFB0", VA = "0xF9BFB0")]
		public static Request<LaunchFriendRequestFlowResult> LaunchFriendRequestFlow(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xF9C0CC", Offset = "0xF9C0CC", VA = "0xF9C0CC")]
		public static Request LaunchProfile(ulong userID)
		{
			return null;
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xF9C1E0", Offset = "0xF9C1E0", VA = "0xF9C1E0")]
		public static Request<UserAndRoomList> GetNextUserAndRoomListPage(UserAndRoomList list)
		{
			return null;
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xF9C35C", Offset = "0xF9C35C", VA = "0xF9C35C")]
		public static Request<UserList> GetNextUserListPage(UserList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000217")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x4000CC4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB1DC", Offset = "0x7CB1DC")]
		Success = 0,
		[Token(Token = "0x4000CC5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB214", Offset = "0x7CB214")]
		Uninitialized = -1,
		[Token(Token = "0x4000CC6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB24C", Offset = "0x7CB24C")]
		PreLoaded = -2,
		[Token(Token = "0x4000CC7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB284", Offset = "0x7CB284")]
		FileInvalid = -3,
		[Token(Token = "0x4000CC8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB2BC", Offset = "0x7CB2BC")]
		SignatureInvalid = -4,
		[Token(Token = "0x4000CC9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB2F4", Offset = "0x7CB2F4")]
		UnableToVerify = -5,
		[Token(Token = "0x4000CCA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB32C", Offset = "0x7CB32C")]
		VersionMismatch = -6,
		[Token(Token = "0x4000CCB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB364", Offset = "0x7CB364")]
		Unknown = -7,
		[Token(Token = "0x4000CCC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB39C", Offset = "0x7CB39C")]
		InvalidCredentials = -8,
		[Token(Token = "0x4000CCD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB3D4", Offset = "0x7CB3D4")]
		NotEntitled = -9
	}
	[Token(Token = "0x2000218")]
	public static class PlatformInternal
	{
		[Token(Token = "0x20003D0")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x40013C2")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x40013C3")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x40013C4")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x40013C5")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x40013C6")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x40013C7")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x40013C8")]
			Colocation_GetCurrentMapUuid = 878018226u,
			[Token(Token = "0x40013C9")]
			Colocation_RequestMap = 840263277u,
			[Token(Token = "0x40013CA")]
			Colocation_ShareMap = 409847005u,
			[Token(Token = "0x40013CB")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x40013CC")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x40013CD")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x40013CE")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x40013CF")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x40013D0")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x40013D1")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x40013D2")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x40013D3")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x40013D4")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x40013D5")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x40013D6")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x40013D7")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x40013D8")]
			NetSync_Connect = 1684899167u,
			[Token(Token = "0x40013D9")]
			NetSync_Disconnect = 359268021u,
			[Token(Token = "0x40013DA")]
			NetSync_GetSessions = 1859521077u,
			[Token(Token = "0x40013DB")]
			NetSync_SetVoipGroup = 1477614734u,
			[Token(Token = "0x40013DC")]
			NetSync_SetVoipMicSource = 855832432u,
			[Token(Token = "0x40013DD")]
			NetSync_SetVoipSessionMuted = 1434844938u,
			[Token(Token = "0x40013DE")]
			NetSync_SetVoipStreamMode = 1742839095u,
			[Token(Token = "0x40013DF")]
			Party_Create = 450042703u,
			[Token(Token = "0x40013E0")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x40013E1")]
			Party_Get = 1586058173u,
			[Token(Token = "0x40013E2")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x40013E3")]
			Party_Invite = 901104867u,
			[Token(Token = "0x40013E4")]
			Party_Join = 1744993395u,
			[Token(Token = "0x40013E5")]
			Party_Leave = 848430801u,
			[Token(Token = "0x40013E6")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x40013E7")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x40013E8")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x40013E9")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x40013EA")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x40013EB")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x40013EC")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x40013ED")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x40013EE")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x40013EF")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x40013F0")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x40013F1")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x40013F2")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x40013F3")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x40013F4")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x40013F5")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x40013F6")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x40013F7")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x20003D1")]
		public static class HTTP
		{
			[Token(Token = "0x6001622")]
			[Address(RVA = "0xE273CC", Offset = "0xE273CC", VA = "0xE273CC")]
			public static void SetHttpTransferUpdateCallback(Message<HttpTransferUpdate>.Callback callback)
			{
			}
		}

		[Token(Token = "0x20003D2")]
		public static class Users
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0xE27444", Offset = "0xE27444", VA = "0xE27444")]
			public static Request<LinkedAccountList> GetLinkedAccounts(ServiceProvider[] providers)
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xE2723C", Offset = "0xE2723C", VA = "0xE2723C")]
		public static void CrashApplication()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xE1ACE4", Offset = "0xE1ACE4", VA = "0xE1ACE4")]
		internal static Message ParseMessageHandle(IntPtr messageHandle, Message.MessageType messageType)
		{
			return null;
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xE2729C", Offset = "0xE2729C", VA = "0xE2729C")]
		public static Request<PlatformInitialize> InitializeStandaloneAsync(ulong appID, string accessToken)
		{
			return null;
		}
	}
	[Token(Token = "0x2000219")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x170000A7")]
		public static string AppID
		{
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0xE14654", Offset = "0xE14654", VA = "0xE14654")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0xE276FC", Offset = "0xE276FC", VA = "0xE276FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public static string MobileAppID
		{
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xE14634", Offset = "0xE14634", VA = "0xE14634")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0xE27728", Offset = "0xE27728", VA = "0xE27728")]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0xE1433C", Offset = "0xE1433C", VA = "0xE1433C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xE27754", Offset = "0xE27754", VA = "0xE27754")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0xE275E8", Offset = "0xE275E8", VA = "0xE275E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xE27784", Offset = "0xE27784", VA = "0xE27784")]
			set
			{
			}
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xE277D8", Offset = "0xE277D8", VA = "0xE277D8")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public sealed class Request<T> : Request
	{
		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Message<T>.Callback callback_;

		[Token(Token = "0x6000F78")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000F79")]
		public Request<T> OnComplete(Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000F7A")]
		public override void HandleMessage(Message msg)
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class Request
	{
		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Message.Callback callback_;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CB43C", Offset = "0x7CB43C")]
		private ulong <RequestID>k__BackingField;

		[Token(Token = "0x170000AB")]
		public ulong RequestID
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0xE27838", Offset = "0xE27838", VA = "0xE27838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D12F0", Offset = "0x7D12F0")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xE27840", Offset = "0xE27840", VA = "0xE27840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1300", Offset = "0x7D1300")]
			set
			{
			}
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xE14784", Offset = "0xE14784", VA = "0xE14784")]
		public Request(ulong requestID)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xE27848", Offset = "0xE27848", VA = "0xE27848")]
		public Request OnComplete(Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xE278C4", Offset = "0xE278C4", VA = "0xE278C4", Slot = "4")]
		public virtual void HandleMessage(Message msg)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xE12FE4", Offset = "0xE12FE4", VA = "0xE12FE4")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x200021C")]
	public enum RichPresenceExtraContext
	{
		[Token(Token = "0x4000CD6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB44C", Offset = "0x7CB44C")]
		Unknown,
		[Token(Token = "0x4000CD7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB484", Offset = "0x7CB484")]
		None,
		[Token(Token = "0x4000CD8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB4BC", Offset = "0x7CB4BC")]
		CurrentCapacity,
		[Token(Token = "0x4000CD9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB4F4", Offset = "0x7CB4F4")]
		StartedAgo,
		[Token(Token = "0x4000CDA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB52C", Offset = "0x7CB52C")]
		EndingIn,
		[Token(Token = "0x4000CDB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB564", Offset = "0x7CB564")]
		LookingForAMatch
	}
	[Token(Token = "0x200021D")]
	public class RichPresenceOptions
	{
		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xE27E74", Offset = "0xE27E74", VA = "0xE27E74")]
		public RichPresenceOptions()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xE27EEC", Offset = "0xE27EEC", VA = "0xE27EEC")]
		public void SetApiName(string value)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xE27F68", Offset = "0xE27F68", VA = "0xE27F68")]
		public void SetArgs(string key, string value)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xE27FEC", Offset = "0xE27FEC", VA = "0xE27FEC")]
		public void ClearArgs()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xE28058", Offset = "0xE28058", VA = "0xE28058")]
		public void SetCurrentCapacity(uint value)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xE280D4", Offset = "0xE280D4", VA = "0xE280D4")]
		public void SetDeeplinkMessageOverride(string value)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xE28150", Offset = "0xE28150", VA = "0xE28150")]
		public void SetEndTime(DateTime value)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xE281CC", Offset = "0xE281CC", VA = "0xE281CC")]
		public void SetExtraContext(RichPresenceExtraContext value)
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xE28248", Offset = "0xE28248", VA = "0xE28248")]
		public void SetIsIdle(bool value)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xE282C4", Offset = "0xE282C4", VA = "0xE282C4")]
		public void SetIsJoinable(bool value)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xE28340", Offset = "0xE28340", VA = "0xE28340")]
		public void SetJoinableId(string value)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xE283BC", Offset = "0xE283BC", VA = "0xE283BC")]
		public void SetMaxCapacity(uint value)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xE28438", Offset = "0xE28438", VA = "0xE28438")]
		public void SetStartTime(DateTime value)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xE27CA8", Offset = "0xE27CA8", VA = "0xE27CA8")]
		public static explicit operator IntPtr(RichPresenceOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xE284B4", Offset = "0xE284B4", VA = "0xE284B4", Slot = "1")]
		~RichPresenceOptions()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x4000CDE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB59C", Offset = "0x7CB59C")]
		None,
		[Token(Token = "0x4000CDF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB5D4", Offset = "0x7CB5D4")]
		Everyone,
		[Token(Token = "0x4000CE0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB60C", Offset = "0x7CB60C")]
		FriendsOfMembers,
		[Token(Token = "0x4000CE1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB644", Offset = "0x7CB644")]
		FriendsOfOwner,
		[Token(Token = "0x4000CE2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB67C", Offset = "0x7CB67C")]
		InvitedUsers,
		[Token(Token = "0x4000CE3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB6B4", Offset = "0x7CB6B4")]
		Unknown
	}
	[Token(Token = "0x200021F")]
	public enum RoomJoinability
	{
		[Token(Token = "0x4000CE5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB6EC", Offset = "0x7CB6EC")]
		Unknown,
		[Token(Token = "0x4000CE6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB724", Offset = "0x7CB724")]
		AreIn,
		[Token(Token = "0x4000CE7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB75C", Offset = "0x7CB75C")]
		AreKicked,
		[Token(Token = "0x4000CE8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB794", Offset = "0x7CB794")]
		CanJoin,
		[Token(Token = "0x4000CE9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB7CC", Offset = "0x7CB7CC")]
		IsFull,
		[Token(Token = "0x4000CEA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB804", Offset = "0x7CB804")]
		NoViewer,
		[Token(Token = "0x4000CEB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB83C", Offset = "0x7CB83C")]
		PolicyPrevents
	}
	[Token(Token = "0x2000220")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x4000CED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB874", Offset = "0x7CB874")]
		Unknown,
		[Token(Token = "0x4000CEE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB8AC", Offset = "0x7CB8AC")]
		Lock,
		[Token(Token = "0x4000CEF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB8E4", Offset = "0x7CB8E4")]
		Unlock
	}
	[Token(Token = "0x2000221")]
	public class RoomOptions
	{
		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xE2856C", Offset = "0xE2856C", VA = "0xE2856C")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xE285E4", Offset = "0xE285E4", VA = "0xE285E4")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xE28668", Offset = "0xE28668", VA = "0xE28668")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xE286D4", Offset = "0xE286D4", VA = "0xE286D4")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xE28750", Offset = "0xE28750", VA = "0xE28750")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xE287CC", Offset = "0xE287CC", VA = "0xE287CC")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xE28848", Offset = "0xE28848", VA = "0xE28848")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xE288C4", Offset = "0xE288C4", VA = "0xE288C4")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xE28940", Offset = "0xE28940", VA = "0xE28940")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xE289BC", Offset = "0xE289BC", VA = "0xE289BC")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xE28A0C", Offset = "0xE28A0C", VA = "0xE28A0C", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public enum RoomType
	{
		[Token(Token = "0x4000CF2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB91C", Offset = "0x7CB91C")]
		Unknown,
		[Token(Token = "0x4000CF3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB954", Offset = "0x7CB954")]
		Matchmaking,
		[Token(Token = "0x4000CF4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB98C", Offset = "0x7CB98C")]
		Moderated,
		[Token(Token = "0x4000CF5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB9C4", Offset = "0x7CB9C4")]
		Private,
		[Token(Token = "0x4000CF6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CB9FC", Offset = "0x7CB9FC")]
		Solo
	}
	[Token(Token = "0x2000223")]
	public enum SdkAccountType
	{
		[Token(Token = "0x4000CF8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBA34", Offset = "0x7CBA34")]
		Unknown,
		[Token(Token = "0x4000CF9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBA6C", Offset = "0x7CBA6C")]
		Oculus,
		[Token(Token = "0x4000CFA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBAA4", Offset = "0x7CBAA4")]
		FacebookGameroom
	}
	[Token(Token = "0x2000224")]
	public enum SendPolicy
	{
		[Token(Token = "0x4000CFC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBADC", Offset = "0x7CBADC")]
		Unreliable,
		[Token(Token = "0x4000CFD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBB14", Offset = "0x7CBB14")]
		Reliable,
		[Token(Token = "0x4000CFE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBB4C", Offset = "0x7CBB4C")]
		Unknown
	}
	[Token(Token = "0x2000225")]
	public enum ServiceProvider
	{
		[Token(Token = "0x4000D00")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBB84", Offset = "0x7CBB84")]
		Unknown,
		[Token(Token = "0x4000D01")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBBBC", Offset = "0x7CBBBC")]
		Dropbox,
		[Token(Token = "0x4000D02")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBBF4", Offset = "0x7CBBF4")]
		Facebook,
		[Token(Token = "0x4000D03")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBC2C", Offset = "0x7CBC2C")]
		Google,
		[Token(Token = "0x4000D04")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBC64", Offset = "0x7CBC64")]
		Instagram,
		[Token(Token = "0x4000D05")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBC9C", Offset = "0x7CBC9C")]
		RemoteMedia
	}
	[Token(Token = "0x2000226")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x4000D07")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBCD4", Offset = "0x7CBCD4")]
		Unknown,
		[Token(Token = "0x4000D08")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBD0C", Offset = "0x7CBD0C")]
		Shared,
		[Token(Token = "0x4000D09")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBD44", Offset = "0x7CBD44")]
		Canceled
	}
	[Token(Token = "0x2000227")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7C5D2C", Offset = "0x7C5D2C")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xF9B080", Offset = "0xF9B080", VA = "0xF9B080")]
		public Request<PlatformInitialize> InitializeInEditor()
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xF9B1C0", Offset = "0xF9B1C0", VA = "0xF9B1C0")]
		public Request<PlatformInitialize> AsyncInitialize(ulong appID, string accessToken)
		{
			return null;
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xF9B284", Offset = "0xF9B284", VA = "0xF9B284")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x170000AC")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0xF9B5C4", Offset = "0xF9B5C4", VA = "0xF9B5C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0xF9B614", Offset = "0xF9B614", VA = "0xF9B614")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xF9B618", Offset = "0xF9B618", VA = "0xF9B618")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0xF9B668", Offset = "0xF9B668", VA = "0xF9B668")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0xF9B66C", Offset = "0xF9B66C", VA = "0xF9B66C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xF9B6BC", Offset = "0xF9B6BC", VA = "0xF9B6BC")]
			set
			{
			}
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xF9B6C0", Offset = "0xF9B6C0", VA = "0xF9B6C0")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x4000D0B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBD7C", Offset = "0x7CBD7C")]
		Unknown,
		[Token(Token = "0x4000D0C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBDB4", Offset = "0x7CBDB4")]
		Unavailable,
		[Token(Token = "0x4000D0D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBDEC", Offset = "0x7CBDEC")]
		Suppressed,
		[Token(Token = "0x4000D0E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBE24", Offset = "0x7CBE24")]
		Active
	}
	[Token(Token = "0x200022A")]
	public enum TimeWindow
	{
		[Token(Token = "0x4000D10")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBE5C", Offset = "0x7CBE5C")]
		Unknown,
		[Token(Token = "0x4000D11")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBE94", Offset = "0x7CBE94")]
		OneHour,
		[Token(Token = "0x4000D12")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBECC", Offset = "0x7CBECC")]
		OneDay,
		[Token(Token = "0x4000D13")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBF04", Offset = "0x7CBF04")]
		OneWeek,
		[Token(Token = "0x4000D14")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBF3C", Offset = "0x7CBF3C")]
		ThirtyDays,
		[Token(Token = "0x4000D15")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBF74", Offset = "0x7CBF74")]
		NinetyDays
	}
	[Token(Token = "0x200022B")]
	public class UserOptions
	{
		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xF9B6C8", Offset = "0xF9B6C8", VA = "0xF9B6C8")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xF9B740", Offset = "0xF9B740", VA = "0xF9B740")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xF9B7BC", Offset = "0xF9B7BC", VA = "0xF9B7BC")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xF9B838", Offset = "0xF9B838", VA = "0xF9B838")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xF9B8A4", Offset = "0xF9B8A4", VA = "0xF9B8A4")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xF9B920", Offset = "0xF9B920", VA = "0xF9B920")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xF9B970", Offset = "0xF9B970", VA = "0xF9B970", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public enum UserOrdering
	{
		[Token(Token = "0x4000D18")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBFAC", Offset = "0x7CBFAC")]
		Unknown,
		[Token(Token = "0x4000D19")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CBFE4", Offset = "0x7CBFE4")]
		None,
		[Token(Token = "0x4000D1A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC01C", Offset = "0x7CC01C")]
		PresenceAlphabetical
	}
	[Token(Token = "0x200022D")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x4000D1C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC054", Offset = "0x7CC054")]
		Unknown,
		[Token(Token = "0x4000D1D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC08C", Offset = "0x7CC08C")]
		Online,
		[Token(Token = "0x4000D1E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC0C4", Offset = "0x7CC0C4")]
		Offline
	}
	[Token(Token = "0x200022E")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x20003D4")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x6001628")]
			[Address(RVA = "0xEF1620", Offset = "0xEF1620", VA = "0xEF1620")]
			private void Awake()
			{
			}

			[Token(Token = "0x6001629")]
			[Address(RVA = "0xEF16D8", Offset = "0xEF16D8", VA = "0xEF16D8")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x600162A")]
			[Address(RVA = "0xEF1BA0", Offset = "0xEF1BA0", VA = "0xEF1BA0")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x170000AF")]
		public ulong senderID
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xEF0E84", Offset = "0xEF0E84", VA = "0xEF0E84")]
			set
			{
			}
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xEF0F48", Offset = "0xEF0F48", VA = "0xEF0F48")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xEF0F4C", Offset = "0xEF0F4C", VA = "0xEF0F4C")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xEF0F88", Offset = "0xEF0F88", VA = "0xEF0F88")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xEF1230", Offset = "0xEF1230", VA = "0xEF1230")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xEF124C", Offset = "0xEF124C", VA = "0xEF124C", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xEF12B4", Offset = "0xEF12B4", VA = "0xEF12B4")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xEF133C", Offset = "0xEF133C", VA = "0xEF133C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xEF1614", Offset = "0xEF1614", VA = "0xEF1614")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public enum VoipBitrate
	{
		[Token(Token = "0x4000D26")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC0FC", Offset = "0x7CC0FC")]
		Unknown,
		[Token(Token = "0x4000D27")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC134", Offset = "0x7CC134")]
		B16000,
		[Token(Token = "0x4000D28")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC16C", Offset = "0x7CC16C")]
		B24000,
		[Token(Token = "0x4000D29")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC1A4", Offset = "0x7CC1A4")]
		B32000,
		[Token(Token = "0x4000D2A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC1DC", Offset = "0x7CC1DC")]
		B64000,
		[Token(Token = "0x4000D2B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC214", Offset = "0x7CC214")]
		B96000,
		[Token(Token = "0x4000D2C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC24C", Offset = "0x7CC24C")]
		B128000
	}
	[Token(Token = "0x2000230")]
	public enum VoipDtxState
	{
		[Token(Token = "0x4000D2E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC284", Offset = "0x7CC284")]
		Unknown,
		[Token(Token = "0x4000D2F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC2BC", Offset = "0x7CC2BC")]
		Enabled,
		[Token(Token = "0x4000D30")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC2F4", Offset = "0x7CC2F4")]
		Disabled
	}
	[Token(Token = "0x2000231")]
	public enum VoipMuteState
	{
		[Token(Token = "0x4000D32")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC32C", Offset = "0x7CC32C")]
		Unknown,
		[Token(Token = "0x4000D33")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC364", Offset = "0x7CC364")]
		Muted,
		[Token(Token = "0x4000D34")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC39C", Offset = "0x7CC39C")]
		Unmuted
	}
	[Token(Token = "0x2000232")]
	public class VoipOptions
	{
		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xEF1BA8", Offset = "0xEF1BA8", VA = "0xEF1BA8")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xEF1C20", Offset = "0xEF1C20", VA = "0xEF1C20")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xEF1C9C", Offset = "0xEF1C9C", VA = "0xEF1C9C")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xEF0BB0", Offset = "0xEF0BB0", VA = "0xEF0BB0")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xEF1D18", Offset = "0xEF1D18", VA = "0xEF1D18", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xEF1DD0", Offset = "0xEF1DD0", VA = "0xEF1DD0", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xEF1E90", Offset = "0xEF1E90", VA = "0xEF1E90", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xEF1E98", Offset = "0xEF1E98", VA = "0xEF1E98", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xEF1F38", Offset = "0xEF1F38", VA = "0xEF1F38", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xEF12AC", Offset = "0xEF12AC", VA = "0xEF12AC")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x4000D38")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC3D4", Offset = "0x7CC3D4")]
		Unknown,
		[Token(Token = "0x4000D39")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC40C", Offset = "0x7CC40C")]
		HZ24000,
		[Token(Token = "0x4000D3A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC444", Offset = "0x7CC444")]
		HZ44100,
		[Token(Token = "0x4000D3B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x7CC47C", Offset = "0x7CC47C")]
		HZ48000
	}
	[Token(Token = "0x2000235")]
	public class WindowsPlatform
	{
		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7C5D40", Offset = "0x7C5D40")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xEF1F3C", Offset = "0xEF1F3C", VA = "0xEF1F3C")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xEF2014", Offset = "0xEF2014", VA = "0xEF2014")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xEF2054", Offset = "0xEF2054", VA = "0xEF2054")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xEF2138", Offset = "0xEF2138", VA = "0xEF2138")]
		public Request<PlatformInitialize> AsyncInitialize(string appId)
		{
			return null;
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xEF224C", Offset = "0xEF224C", VA = "0xEF224C")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x2000236")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xE1BA44", Offset = "0xE1BA44", VA = "0xE1BA44")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class AchievementDefinition
	{
		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BitfieldLength;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong Target;

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xE24630", Offset = "0xE24630", VA = "0xE24630")]
		public AchievementDefinition(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class AchievementDefinitionList : DeserializableList<AchievementDefinition>
	{
		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xE1BBAC", Offset = "0xE1BBAC", VA = "0xE1BBAC")]
		public AchievementDefinitionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class AchievementProgress
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong Count;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xE246E8", Offset = "0xE246E8", VA = "0xE246E8")]
		public AchievementProgress(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class AchievementProgressList : DeserializableList<AchievementProgress>
	{
		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xE1BE8C", Offset = "0xE1BE8C", VA = "0xE1BE8C")]
		public AchievementProgressList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class AchievementUpdate
	{
		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xE1C16C", Offset = "0xE1C16C", VA = "0xE1C16C")]
		public AchievementUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class ApplicationVersion
	{
		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xE1C2E8", Offset = "0xE1C2E8", VA = "0xE1C2E8")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class AssetDetails
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC4B4", Offset = "0x7CC4B4")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string Metadata;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xE1C480", Offset = "0xE1C480", VA = "0xE1C480")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class AssetDetailsList : DeserializableList<AssetDetails>
	{
		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xE1C6B0", Offset = "0xE1C6B0", VA = "0xE1C6B0")]
		public AssetDetailsList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xE1C960", Offset = "0xE1C960", VA = "0xE1C960")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xE1CAFC", Offset = "0xE1CAFC", VA = "0xE1CAFC")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xE1CC98", Offset = "0xE1CC98", VA = "0xE1CC98")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xE1CE10", Offset = "0xE1CE10", VA = "0xE1CE10")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xE1CFBC", Offset = "0xE1CFBC", VA = "0xE1CFBC")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xE1D144", Offset = "0xE1D144", VA = "0xE1D144")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xE2485C", Offset = "0xE2485C", VA = "0xE2485C")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class CalApplicationSuggestionList : DeserializableList<CalApplicationSuggestion>
	{
		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xE1D30C", Offset = "0xE1D30C", VA = "0xE1D30C")]
		public CalApplicationSuggestionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xE1D5BC", Offset = "0xE1D5BC", VA = "0xE1D5BC")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class CloudStorageData
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xE1D77C", Offset = "0xE1D77C", VA = "0xE1D77C")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xE1DBF4", Offset = "0xE1DBF4", VA = "0xE1DBF4")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class CloudStorageMetadataList : DeserializableList<CloudStorageMetadata>
	{
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xE1D914", Offset = "0xE1D914", VA = "0xE1D914")]
		public CloudStorageMetadataList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xE1DDCC", Offset = "0xE1DDCC", VA = "0xE1DDCC")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7C53D8", Offset = "0x7C53D8")]
	public class DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> _Data;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _NextUrl;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string _PreviousUrl;

		[Token(Token = "0x170000B0")]
		public int Count
		{
			[Token(Token = "0x6000FDB")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B1")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000FDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B2")]
		public T Item
		{
			[Token(Token = "0x6000FDE")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000FDF")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7D2D90", Offset = "0x7D2D90")]
		public List<T> Data
		{
			[Token(Token = "0x6000FEA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000FEB")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B5")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000FEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B6")]
		public string NextUrl
		{
			[Token(Token = "0x6000FED")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000FEE")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDD")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE0")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000FE1")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000FE2")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE3")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000FE4")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000FE6")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE7")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000FE8")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6000FE9")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FEF")]
		public DeserializableList()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class Destination
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApiName;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DisplayName;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xE248F4", Offset = "0xE248F4", VA = "0xE248F4")]
		public Destination(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class DestinationList : DeserializableList<Destination>
	{
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xE1DF64", Offset = "0xE1DF64", VA = "0xE1DF64")]
		public DestinationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class Error
	{
		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xE18068", Offset = "0xE18068", VA = "0xE18068")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xE1E244", Offset = "0xE1E244", VA = "0xE1E244")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class InstalledApplication
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xE2499C", Offset = "0xE2499C", VA = "0xE2499C")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class InstalledApplicationList : DeserializableList<InstalledApplication>
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xE1E4CC", Offset = "0xE1E4CC", VA = "0xE1E4CC")]
		public InstalledApplicationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xE247B4", Offset = "0xE247B4", VA = "0xE247B4")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xE1E7DC", Offset = "0xE1E7DC", VA = "0xE1E7DC")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class LaunchDetails
	{
		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string DestinationApiName;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchSource;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC4EC", Offset = "0x7CC4EC")]
		public readonly UserList Users;

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xE24A64", Offset = "0xE24A64", VA = "0xE24A64")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xE1E95C", Offset = "0xE1E95C", VA = "0xE1E95C")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xE1EB3C", Offset = "0xE1EB3C", VA = "0xE1EB3C")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xE1ED18", Offset = "0xE1ED18", VA = "0xE1ED18")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xE24B84", Offset = "0xE24B84", VA = "0xE24B84")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class LeaderboardEntryList : DeserializableList<LeaderboardEntry>
	{
		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong TotalCount;

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xE1EF54", Offset = "0xE1EF54", VA = "0xE1EF54")]
		public LeaderboardEntryList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class LinkedAccount
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xE24C70", Offset = "0xE24C70", VA = "0xE24C70")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class LinkedAccountList : DeserializableList<LinkedAccount>
	{
		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xE1F2B4", Offset = "0xE1F2B4", VA = "0xE1F2B4")]
		public LinkedAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xE1F5C4", Offset = "0xE1F5C4", VA = "0xE1F5C4")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xE1F790", Offset = "0xE1F790", VA = "0xE1F790")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xE1F8F8", Offset = "0xE1F8F8", VA = "0xE1F8F8")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xE1FB10", Offset = "0xE1FB10", VA = "0xE1FB10")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshotCandidateList Candidates;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xE1FC98", Offset = "0xE1FC98", VA = "0xE1FC98")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xE24EE8", Offset = "0xE24EE8", VA = "0xE24EE8")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class MatchmakingAdminSnapshotCandidateList : DeserializableList<MatchmakingAdminSnapshotCandidate>
	{
		[Token(Token = "0x6001006")]
		[Address(RVA = "0xE24D18", Offset = "0xE24D18", VA = "0xE24D18")]
		public MatchmakingAdminSnapshotCandidateList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly RoomList Rooms;

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xE1FE90", Offset = "0xE1FE90", VA = "0xE1FE90")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC524", Offset = "0x7CC524")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xE20050", Offset = "0xE20050", VA = "0xE20050")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xE20280", Offset = "0xE20280", VA = "0xE20280")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC55C", Offset = "0x7CC55C")]
		public readonly User User;

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xE24FB4", Offset = "0xE24FB4", VA = "0xE24FB4")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class MatchmakingEnqueuedUserList : DeserializableList<MatchmakingEnqueuedUser>
	{
		[Token(Token = "0x600100B")]
		[Address(RVA = "0xE2509C", Offset = "0xE2509C", VA = "0xE2509C")]
		public MatchmakingEnqueuedUserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class MatchmakingStats
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double SkillMean;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double SkillStandardDeviation;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly uint WinCount;

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xE20884", Offset = "0xE20884", VA = "0xE20884")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class NetSyncConnection
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncDisconnectReason DisconnectReason;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly NetSyncConnectionStatus Status;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string ZoneId;

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xE20A3C", Offset = "0xE20A3C", VA = "0xE20A3C")]
		public NetSyncConnection(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class NetSyncSession
	{
		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool Muted;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SessionId;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong UserId;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VoipGroup;

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xE2526C", Offset = "0xE2526C", VA = "0xE2526C")]
		public NetSyncSession(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class NetSyncSessionList : DeserializableList<NetSyncSession>
	{
		[Token(Token = "0x600100F")]
		[Address(RVA = "0xE20C44", Offset = "0xE20C44", VA = "0xE20C44")]
		public NetSyncSessionList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class NetSyncSessionsChangedNotification
	{
		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly long ConnectionId;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly NetSyncSessionList Sessions;

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xE20EF4", Offset = "0xE20EF4", VA = "0xE20EF4")]
		public NetSyncSessionsChangedNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class NetSyncSetSessionPropertyResult
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly NetSyncSession Session;

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xE210F0", Offset = "0xE210F0", VA = "0xE210F0")]
		public NetSyncSetSessionPropertyResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC594", Offset = "0x7CC594")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC5A4", Offset = "0x7CC5A4")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170000B8")]
		public ulong ID
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0xE25338", Offset = "0xE25338", VA = "0xE25338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1310", Offset = "0x7D1310")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001014")]
			[Address(RVA = "0xE25340", Offset = "0xE25340", VA = "0xE25340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1320", Offset = "0x7D1320")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0xE25348", Offset = "0xE25348", VA = "0xE25348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1330", Offset = "0x7D1330")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6001016")]
			[Address(RVA = "0xE25350", Offset = "0xE25350", VA = "0xE25350")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1340", Offset = "0x7D1340")]
			private set
			{
			}
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xE212A0", Offset = "0xE212A0", VA = "0xE212A0")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class OrgScopedID
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xE213BC", Offset = "0xE213BC", VA = "0xE213BC")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class Party
	{
		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC5B4", Offset = "0x7CC5B4")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC5EC", Offset = "0x7CC5EC")]
		public readonly User Leader;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC624", Offset = "0x7CC624")]
		public readonly Room Room;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC65C", Offset = "0x7CC65C")]
		public readonly UserList Users;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xE21584", Offset = "0xE21584", VA = "0xE21584")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class PartyID
	{
		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xE218F4", Offset = "0xE218F4", VA = "0xE218F4")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class PartyUpdateNotification
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PartyUpdateAction Action;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong PartyId;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderId;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string UpdateTimestamp;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string UserAlias;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong UserId;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UserName;

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xE21B3C", Offset = "0xE21B3C", VA = "0xE21B3C")]
		public PartyUpdateNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class Pid
	{
		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xE25358", Offset = "0xE25358", VA = "0xE25358")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class PidList : DeserializableList<Pid>
	{
		[Token(Token = "0x600101C")]
		[Address(RVA = "0xE21D04", Offset = "0xE21D04", VA = "0xE21D04")]
		public PidList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class PingResult
	{
		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CC694", Offset = "0x7CC694")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170000BA")]
		public ulong ID
		{
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xE253E0", Offset = "0xE253E0", VA = "0xE253E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1350", Offset = "0x7D1350")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xE253E8", Offset = "0xE253E8", VA = "0xE253E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1360", Offset = "0x7D1360")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6001020")]
			[Address(RVA = "0xE253F0", Offset = "0xE253F0", VA = "0xE253F0")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000BC")]
		public bool IsTimeout
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0xE25458", Offset = "0xE25458", VA = "0xE25458")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xE22034", Offset = "0xE22034", VA = "0xE22034")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class PlatformInitialize
	{
		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xE22154", Offset = "0xE22154", VA = "0xE22154")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class Product
	{
		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xE254A4", Offset = "0xE254A4", VA = "0xE254A4")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class ProductList : DeserializableList<Product>
	{
		[Token(Token = "0x6001024")]
		[Address(RVA = "0xE222BC", Offset = "0xE222BC", VA = "0xE222BC")]
		public ProductList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class Purchase
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xE2259C", Offset = "0xE2259C", VA = "0xE2259C")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class PurchaseList : DeserializableList<Purchase>
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0xE22734", Offset = "0xE22734", VA = "0xE22734")]
		public PurchaseList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class Room
	{
		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly UserList InvitedUsersOptional;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC6A4", Offset = "0x7CC6A4")]
		public readonly UserList InvitedUsers;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly MatchmakingEnqueuedUserList MatchedUsersOptional;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC6DC", Offset = "0x7CC6DC")]
		public readonly MatchmakingEnqueuedUserList MatchedUsers;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public readonly uint MaxUsers;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public readonly string Name;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public readonly User OwnerOptional;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC714", Offset = "0x7CC714")]
		public readonly User Owner;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly TeamList TeamsOptional;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC74C", Offset = "0x7CC74C")]
		public readonly TeamList Teams;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public readonly RoomType Type;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly UserList UsersOptional;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC784", Offset = "0x7CC784")]
		public readonly UserList Users;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly uint Version;

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xE20440", Offset = "0xE20440", VA = "0xE20440")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class RoomList : DeserializableList<Room>
	{
		[Token(Token = "0x6001028")]
		[Address(RVA = "0xE22F6C", Offset = "0xE22F6C", VA = "0xE22F6C")]
		public RoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xE22AF4", Offset = "0xE22AF4", VA = "0xE22AF4")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class RoomInviteNotificationList : DeserializableList<RoomInviteNotification>
	{
		[Token(Token = "0x600102A")]
		[Address(RVA = "0xE22C8C", Offset = "0xE22C8C", VA = "0xE22C8C")]
		public RoomInviteNotificationList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class SdkAccount
	{
		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xE2572C", Offset = "0xE2572C", VA = "0xE2572C")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class SdkAccountList : DeserializableList<SdkAccount>
	{
		[Token(Token = "0x600102C")]
		[Address(RVA = "0xE2340C", Offset = "0xE2340C", VA = "0xE2340C")]
		public SdkAccountList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xE236BC", Offset = "0xE236BC", VA = "0xE236BC")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class SystemPermission
	{
		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xE23930", Offset = "0xE23930", VA = "0xE23930")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class SystemVoipState
	{
		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xE23AAC", Offset = "0xE23AAC", VA = "0xE23AAC")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class Team
	{
		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserList AssignedUsers;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int MaxUsers;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly int MinUsers;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xE257C4", Offset = "0xE257C4", VA = "0xE257C4")]
		public Team(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class TeamList : DeserializableList<Team>
	{
		[Token(Token = "0x6001031")]
		[Address(RVA = "0xE2555C", Offset = "0xE2555C", VA = "0xE2555C")]
		public TeamList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class User
	{
		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string PresenceDeeplinkMessage;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string PresenceDestinationApiName;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xE23C24", Offset = "0xE23C24", VA = "0xE23C24")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class UserList : DeserializableList<User>
	{
		[Token(Token = "0x6001033")]
		[Address(RVA = "0xE240EC", Offset = "0xE240EC", VA = "0xE240EC")]
		public UserList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class UserAndRoom
	{
		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7CC7BC", Offset = "0x7CC7BC")]
		public readonly Room Room;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xE258A0", Offset = "0xE258A0", VA = "0xE258A0")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class UserAndRoomList : DeserializableList<UserAndRoom>
	{
		[Token(Token = "0x6001035")]
		[Address(RVA = "0xE23E0C", Offset = "0xE23E0C", VA = "0xE23E0C")]
		public UserAndRoomList(IntPtr a)
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class UserProof
	{
		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xE243CC", Offset = "0xE243CC", VA = "0xE243CC")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class UserReportID
	{
		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xE24594", Offset = "0xE24594", VA = "0xE24594")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x200028D")]
	public class P2PManager
	{
		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x170000BD")]
		public bool Connected
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0xF97184", Offset = "0xF97184", VA = "0xF97184")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BE")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0xF9773C", Offset = "0xF9773C", VA = "0xF9773C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xF96E8C", Offset = "0xF96E8C", VA = "0xF96E8C")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xF96FE4", Offset = "0xF96FE4", VA = "0xF96FE4")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xF97150", Offset = "0xF97150", VA = "0xF97150")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xF97194", Offset = "0xF97194", VA = "0xF97194")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xF97310", Offset = "0xF97310", VA = "0xF97310")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xF97780", Offset = "0xF97780", VA = "0xF97780")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xF97928", Offset = "0xF97928", VA = "0xF97928")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xF979D0", Offset = "0xF979D0", VA = "0xF979D0")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20003D6")]
		public enum State
		{
			[Token(Token = "0x40013FB")]
			INITIALIZING,
			[Token(Token = "0x40013FC")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x40013FD")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x40013FE")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x40013FF")]
			HANGUP
		}

		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5D54", Offset = "0x7C5D54")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x600162F")]
			[Address(RVA = "0xF99884", Offset = "0xF99884", VA = "0xF99884")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001630")]
			[Address(RVA = "0xF99898", Offset = "0xF99898", VA = "0xF99898")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x170000BF")]
		public static State CurrentState
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xF98C50", Offset = "0xF98C50", VA = "0xF98C50")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170000C0")]
		public static ulong MyID
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0xF97078", Offset = "0xF97078", VA = "0xF97078")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000C1")]
		public static string MyOculusID
		{
			[Token(Token = "0x600104C")]
			[Address(RVA = "0xF98CC4", Offset = "0xF98CC4", VA = "0xF98CC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xF97E64", Offset = "0xF97E64", VA = "0xF97E64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xF980A0", Offset = "0xF980A0", VA = "0xF980A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xF9877C", Offset = "0xF9877C", VA = "0xF9877C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xF98814", Offset = "0xF98814", VA = "0xF98814")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xF989B0", Offset = "0xF989B0", VA = "0xF989B0")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xF98AD8", Offset = "0xF98AD8", VA = "0xF98AD8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xF98904", Offset = "0xF98904", VA = "0xF98904")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xF98DD8", Offset = "0xF98DD8", VA = "0xF98DD8")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xF98F10", Offset = "0xF98F10", VA = "0xF98F10")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xF98F28", Offset = "0xF98F28", VA = "0xF98F28")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xF98F30", Offset = "0xF98F30", VA = "0xF98F30")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xF9829C", Offset = "0xF9829C", VA = "0xF9829C")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xF974FC", Offset = "0xF974FC", VA = "0xF974FC")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xF991C0", Offset = "0xF991C0", VA = "0xF991C0")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xF9988C", Offset = "0xF9988C", VA = "0xF9988C")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class RoomManager
	{
		[Token(Token = "0x20003D8")]
		public struct Invite
		{
			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x6001631")]
			[Address(RVA = "0x85DC28", Offset = "0x85DC28", VA = "0x85DC28")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User m_remoteUser;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x170000C2")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0xF990D4", Offset = "0xF990D4", VA = "0xF990D4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000C3")]
		public string RemoteOculusID
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0xF99900", Offset = "0xF99900", VA = "0xF99900")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0xF97F20", Offset = "0xF97F20", VA = "0xF97F20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xF985EC", Offset = "0xF985EC", VA = "0xF985EC")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xF99964", Offset = "0xF99964", VA = "0xF99964")]
		private void LaunchedFromAcceptingInviteCallback(Message<string> msg)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xF98AB0", Offset = "0xF98AB0", VA = "0xF98AB0")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xF98E5C", Offset = "0xF98E5C", VA = "0xF98E5C")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xF99A94", Offset = "0xF99A94", VA = "0xF99A94")]
		private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xF99BB4", Offset = "0xF99BB4", VA = "0xF99BB4")]
		private void OnLaunchInviteWorkflowComplete(Message msg)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xF97F60", Offset = "0xF97F60", VA = "0xF97F60")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xF99C3C", Offset = "0xF99C3C", VA = "0xF99C3C")]
		private void GetRoomInviteNotificationsCallback(Message msg_untyped)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xF9A00C", Offset = "0xF9A00C", VA = "0xF9A00C")]
		private void GetRoomInfoCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xF99020", Offset = "0xF99020", VA = "0xF99020")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xF9A190", Offset = "0xF9A190", VA = "0xF9A190")]
		private void JoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xF9A614", Offset = "0xF9A614", VA = "0xF9A614")]
		private void RoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xF98B2C", Offset = "0xF98B2C", VA = "0xF98B2C")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xF9AB10", Offset = "0xF9AB10", VA = "0xF9AB10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xF9AD10", Offset = "0xF9AD10", VA = "0xF9AD10")]
		public VREyeRaycaster()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class VoipManager
	{
		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x170000C5")]
		public bool Connected
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xF991B0", Offset = "0xF991B0", VA = "0xF991B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xF986B4", Offset = "0xF986B4", VA = "0xF986B4")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xF990EC", Offset = "0xF990EC", VA = "0xF990EC")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xF98BA4", Offset = "0xF98BA4", VA = "0xF98BA4")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xF9AD18", Offset = "0xF9AD18", VA = "0xF9AD18")]
		private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xF9AE94", Offset = "0xF9AE94", VA = "0xF9AE94")]
		private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x2000292")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x600106F")]
		[Address(RVA = "0xF8D34C", Offset = "0xF8D34C", VA = "0xF8D34C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xF8D628", Offset = "0xF8D628", VA = "0xF8D628")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class AchievementsManager
	{
		[Token(Token = "0x4000E50")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x170000C6")]
		public bool LikesToWin
		{
			[Token(Token = "0x6001071")]
			[Address(RVA = "0xF8D69C", Offset = "0xF8D69C", VA = "0xF8D69C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xF8D6A4", Offset = "0xF8D6A4", VA = "0xF8D6A4")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xF8D7B4", Offset = "0xF8D7B4", VA = "0xF8D7B4")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xF8D810", Offset = "0xF8D810", VA = "0xF8D810")]
		public AchievementsManager()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xF8D818", Offset = "0xF8D818", VA = "0xF8D818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1370", Offset = "0x7D1370")]
		private void <CheckForAchievmentUpdates>b__4_0(Message<AchievementProgressList> msg)
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6001076")]
		[Address(RVA = "0xF8DA60", Offset = "0xF8DA60", VA = "0xF8DA60")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6001077")]
		[Address(RVA = "0xF8DA68", Offset = "0xF8DA68", VA = "0xF8DA68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xF8DCDC", Offset = "0xF8DCDC", VA = "0xF8DCDC")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x20003D9")]
		private enum BasketPhase
		{
			[Token(Token = "0x4001404")]
			NONE,
			[Token(Token = "0x4001405")]
			TOP,
			[Token(Token = "0x4001406")]
			BOTH,
			[Token(Token = "0x4001407")]
			BOTTOM
		}

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x170000C7")]
		public Player Player
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xF8DCE4", Offset = "0xF8DCE4", VA = "0xF8DCE4")]
			set
			{
			}
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xF8DCEC", Offset = "0xF8DCEC", VA = "0xF8DCEC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xF8DDCC", Offset = "0xF8DDCC", VA = "0xF8DDCC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xF8DF84", Offset = "0xF8DF84", VA = "0xF8DF84")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x4000E54")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xF8DF8C", Offset = "0xF8DF8C", VA = "0xF8DF8C")]
		private void Start()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xF8E028", Offset = "0xF8E028", VA = "0xF8E028")]
		private void Update()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xF8E164", Offset = "0xF8E164", VA = "0xF8E164")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x4000E59")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x170000C8")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0xF8E200", Offset = "0xF8E200", VA = "0xF8E200")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xF8E20C", Offset = "0xF8E20C", VA = "0xF8E20C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0xF8E218", Offset = "0xF8E218", VA = "0xF8E218")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001083")]
			[Address(RVA = "0xF8E224", Offset = "0xF8E224", VA = "0xF8E224")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0xF8E230", Offset = "0xF8E230", VA = "0xF8E230")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001085")]
			[Address(RVA = "0xF8E23C", Offset = "0xF8E23C", VA = "0xF8E23C")]
			set
			{
			}
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xF8E248", Offset = "0xF8E248", VA = "0xF8E248")]
		private void Start()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xF8E3D8", Offset = "0xF8E3D8", VA = "0xF8E3D8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xF8E704", Offset = "0xF8E704", VA = "0xF8E704")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class LeaderboardManager
	{
		[Token(Token = "0x20003DA")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x20003DB")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x4000E5D")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x4000E5E")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x4000E5F")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x4000E60")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x170000CB")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0xF8E998", Offset = "0xF8E998", VA = "0xF8E998")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0xF8F190", Offset = "0xF8F190", VA = "0xF8F190")]
			set
			{
			}
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xF8E718", Offset = "0xF8E718", VA = "0xF8E718")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xF8E780", Offset = "0xF8E780", VA = "0xF8E780")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xF8E9A0", Offset = "0xF8E9A0", VA = "0xF8E9A0")]
		private void MostWinsGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xF8E88C", Offset = "0xF8E88C", VA = "0xF8E88C")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xF8F198", Offset = "0xF8F198", VA = "0xF8F198")]
		private void HighestScoreGetEntriesCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xF8F8DC", Offset = "0xF8F8DC", VA = "0xF8F8DC")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xF8F990", Offset = "0xF8F990", VA = "0xF8F990")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x170000CD")]
		public override uint Score
		{
			[Token(Token = "0x6001092")]
			[Address(RVA = "0xF8FA18", Offset = "0xF8FA18", VA = "0xF8FA18", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xF8FCF8", Offset = "0xF8FCF8", VA = "0xF8FCF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xF8FE78", Offset = "0xF8FE78", VA = "0xF8FE78")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x20003DC")]
		private enum State
		{
			[Token(Token = "0x4001409")]
			UNKNOWN,
			[Token(Token = "0x400140A")]
			NONE,
			[Token(Token = "0x400140B")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x400140C")]
			PRACTICING,
			[Token(Token = "0x400140D")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x400140E")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x400140F")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4001410")]
			PLAYING_MATCH,
			[Token(Token = "0x4001411")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x170000CE")]
		public float MatchStartTime
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0xF9066C", Offset = "0xF9066C", VA = "0xF9066C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001098")]
			[Address(RVA = "0xF9068C", Offset = "0xF9068C", VA = "0xF9068C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xF8FE7C", Offset = "0xF8FE7C", VA = "0xF8FE7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xF903A4", Offset = "0xF903A4", VA = "0xF903A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xF900DC", Offset = "0xF900DC", VA = "0xF900DC")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xF903C8", Offset = "0xF903C8", VA = "0xF903C8")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xF9046C", Offset = "0xF9046C", VA = "0xF9046C")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xF90694", Offset = "0xF90694", VA = "0xF90694")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xF90908", Offset = "0xF90908", VA = "0xF90908")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xF90FD0", Offset = "0xF90FD0", VA = "0xF90FD0")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xF90740", Offset = "0xF90740", VA = "0xF90740")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xF90A08", Offset = "0xF90A08", VA = "0xF90A08")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xF91274", Offset = "0xF91274", VA = "0xF91274")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xF9128C", Offset = "0xF9128C", VA = "0xF9128C")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xF9143C", Offset = "0xF9143C", VA = "0xF9143C")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xF91450", Offset = "0xF91450", VA = "0xF91450")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xF91554", Offset = "0xF91554", VA = "0xF91554")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xF91AA8", Offset = "0xF91AA8", VA = "0xF91AA8")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xF90B8C", Offset = "0xF90B8C", VA = "0xF90B8C")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xF910D8", Offset = "0xF910D8", VA = "0xF910D8")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xF920B0", Offset = "0xF920B0", VA = "0xF920B0")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class MatchmakingManager
	{
		[Token(Token = "0x20003DD")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x20003DE")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x4000E79")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x170000CF")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0xF92204", Offset = "0xF92204", VA = "0xF92204")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60010AC")]
			[Address(RVA = "0xF9220C", Offset = "0xF9220C", VA = "0xF9220C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xF92214", Offset = "0xF92214", VA = "0xF92214")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xF9221C", Offset = "0xF9221C", VA = "0xF9221C")]
			set
			{
			}
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xF9211C", Offset = "0xF9211C", VA = "0xF9211C")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xF9135C", Offset = "0xF9135C", VA = "0xF9135C")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xF92224", Offset = "0xF92224", VA = "0xF92224")]
		private void MatchmakingEnqueueCallback(Message msg)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xF92568", Offset = "0xF92568", VA = "0xF92568")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xF92638", Offset = "0xF92638", VA = "0xF92638")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xF92E70", Offset = "0xF92E70", VA = "0xF92E70")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xF90EA0", Offset = "0xF90EA0", VA = "0xF90EA0")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xF91414", Offset = "0xF91414", VA = "0xF91414")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class P2PManager
	{
		[Token(Token = "0x20003DF")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x6001642")]
			[Address(RVA = "0xF94714", Offset = "0xF94714", VA = "0xF94714")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x20003E0")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x4000E80")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x4000E81")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000E82")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x4000E83")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x4000E84")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000E85")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x4000E86")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x4000E87")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x4000E88")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x4000E89")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x4000E8A")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x4000E8B")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x170000D1")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xF95080", Offset = "0xF95080", VA = "0xF95080")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0xF95088", Offset = "0xF95088", VA = "0xF95088")]
			set
			{
			}
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xF934FC", Offset = "0xF934FC", VA = "0xF934FC")]
		public P2PManager()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xF93674", Offset = "0xF93674", VA = "0xF93674")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xF92CC0", Offset = "0xF92CC0", VA = "0xF92CC0")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xF932A4", Offset = "0xF932A4", VA = "0xF932A4")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xF94784", Offset = "0xF94784", VA = "0xF94784")]
		private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xF9494C", Offset = "0xF9494C", VA = "0xF9494C")]
		private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xF94B9C", Offset = "0xF94B9C", VA = "0xF94B9C")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xF93870", Offset = "0xF93870", VA = "0xF93870")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xF94FD8", Offset = "0xF94FD8", VA = "0xF94FD8")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xF94E1C", Offset = "0xF94E1C", VA = "0xF94E1C")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xF93E50", Offset = "0xF93E50", VA = "0xF93E50")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xF95338", Offset = "0xF95338", VA = "0xF95338")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xF93EAC", Offset = "0xF93EAC", VA = "0xF93EAC")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xF8FDE0", Offset = "0xF8FDE0", VA = "0xF8FDE0")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xF957A0", Offset = "0xF957A0", VA = "0xF957A0")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xF943C4", Offset = "0xF943C4", VA = "0xF943C4")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xF93FE8", Offset = "0xF93FE8", VA = "0xF93FE8")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xF8FB80", Offset = "0xF8FB80", VA = "0xF8FB80")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xF9431C", Offset = "0xF9431C", VA = "0xF9431C")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xF95530", Offset = "0xF95530", VA = "0xF95530")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xF95580", Offset = "0xF95580", VA = "0xF95580")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xF95EA0", Offset = "0xF95EA0", VA = "0xF95EA0")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xF94CE8", Offset = "0xF94CE8", VA = "0xF94CE8")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xF94D90", Offset = "0xF94D90", VA = "0xF94D90")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xF95304", Offset = "0xF95304", VA = "0xF95304")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xF95890", Offset = "0xF95890", VA = "0xF95890")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xF95998", Offset = "0xF95998", VA = "0xF95998")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xF95D70", Offset = "0xF95D70", VA = "0xF95D70")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xF95E10", Offset = "0xF95E10", VA = "0xF95E10")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xF95848", Offset = "0xF95848", VA = "0xF95848")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xF9594C", Offset = "0xF9594C", VA = "0xF9594C")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200029E")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x170000D2")]
		public Vector3 velocity
		{
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0xF95930", Offset = "0xF95930", VA = "0xF95930")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xF95FC4", Offset = "0xF95FC4", VA = "0xF95FC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xF9581C", Offset = "0xF9581C", VA = "0xF9581C")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xF95C04", Offset = "0xF95C04", VA = "0xF95C04")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xF9602C", Offset = "0xF9602C", VA = "0xF9602C")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xF96168", Offset = "0xF96168", VA = "0xF96168")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xF962B0", Offset = "0xF962B0", VA = "0xF962B0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xF962D8", Offset = "0xF962D8", VA = "0xF962D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xF96318", Offset = "0xF96318", VA = "0xF96318")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x170000D3")]
		public bool SendUpdates
		{
			[Token(Token = "0x60010E0")]
			[Address(RVA = "0xF96320", Offset = "0xF96320", VA = "0xF96320")]
			set
			{
			}
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xF9632C", Offset = "0xF9632C", VA = "0xF9632C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xF96394", Offset = "0xF96394", VA = "0xF96394")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xF96470", Offset = "0xF96470", VA = "0xF96470")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xF955D8", Offset = "0xF955D8", VA = "0xF955D8")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xF9652C", Offset = "0xF9652C", VA = "0xF9652C")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x20003E1")]
		public enum State
		{
			[Token(Token = "0x4001418")]
			INITIALIZING,
			[Token(Token = "0x4001419")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x400141A")]
			MATCH_TRANSITION,
			[Token(Token = "0x400141B")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x400141C")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x170000D4")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0xF8FFF4", Offset = "0xF8FFF4", VA = "0xF8FFF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		public static P2PManager P2P
		{
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0xF8FB24", Offset = "0xF8FB24", VA = "0xF8FB24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x60010F0")]
			[Address(RVA = "0xF90080", Offset = "0xF90080", VA = "0xF90080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x60010F1")]
			[Address(RVA = "0xF92054", Offset = "0xF92054", VA = "0xF92054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		public static State CurrentState
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0xF8DF28", Offset = "0xF8DF28", VA = "0xF8DF28")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170000D9")]
		public static ulong MyID
		{
			[Token(Token = "0x60010F3")]
			[Address(RVA = "0xF8ED34", Offset = "0xF8ED34", VA = "0xF8ED34")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000DA")]
		public static string MyOculusID
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0xF90F1C", Offset = "0xF90F1C", VA = "0xF90F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xF96534", Offset = "0xF96534", VA = "0xF96534")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xF96568", Offset = "0xF96568", VA = "0xF96568")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xF96724", Offset = "0xF96724", VA = "0xF96724")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xF967BC", Offset = "0xF967BC", VA = "0xF967BC")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xF9688C", Offset = "0xF9688C", VA = "0xF9688C")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xF931F8", Offset = "0xF931F8", VA = "0xF931F8")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xF96934", Offset = "0xF96934", VA = "0xF96934")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xF9693C", Offset = "0xF9693C", VA = "0xF9693C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xF90858", Offset = "0xF90858", VA = "0xF90858")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xF96970", Offset = "0xF96970", VA = "0xF96970")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x4000E9E")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x4000E9F")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x4000EA0")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x170000DB")]
		public virtual uint Score
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xF96978", Offset = "0xF96978", VA = "0xF96978", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xF8FA60", Offset = "0xF8FA60", VA = "0xF8FA60", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xF96980", Offset = "0xF96980", VA = "0xF96980")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		protected bool HasBall
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0xF8D3B0", Offset = "0xF8D3B0", VA = "0xF8D3B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xF96988", Offset = "0xF96988", VA = "0xF96988")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xF95A24", Offset = "0xF95A24", VA = "0xF95A24")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xF8D5AC", Offset = "0xF8D5AC", VA = "0xF8D5AC")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xF8D420", Offset = "0xF8D420", VA = "0xF8D420")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xF96A3C", Offset = "0xF96A3C", VA = "0xF96A3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xF8D62C", Offset = "0xF8D62C", VA = "0xF8D62C")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x170000DE")]
		public Player Player
		{
			[Token(Token = "0x6001101")]
			[Address(RVA = "0xF91FFC", Offset = "0xF91FFC", VA = "0xF91FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public Text NameText
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0xF96B68", Offset = "0xF96B68", VA = "0xF96B68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xF96B70", Offset = "0xF96B70", VA = "0xF96B70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001104")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xF96C5C", Offset = "0xF96C5C", VA = "0xF96C5C")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x170000E0")]
		public User User
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0xF96C64", Offset = "0xF96C64", VA = "0xF96C64")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public ulong ID
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0xF946F8", Offset = "0xF946F8", VA = "0xF946F8")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000E2")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0xF96C6C", Offset = "0xF96C6C", VA = "0xF96C6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xF96C74", Offset = "0xF96C74", VA = "0xF96C74")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public override uint Score
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0xF96C7C", Offset = "0xF96C7C", VA = "0xF96C7C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xF95E9C", Offset = "0xF95E9C", VA = "0xF95E9C")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xF96C80", Offset = "0xF96C80", VA = "0xF96C80")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xF96C84", Offset = "0xF96C84", VA = "0xF96C84")]
		private void Update()
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xF96E84", Offset = "0xF96E84", VA = "0xF96E84")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x20002A5")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CC954", Offset = "0x7CC954")]
		public int x;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CC994", Offset = "0x7CC994")]
		public int y;

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xF8820C", Offset = "0xF8820C", VA = "0xF8820C")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xF88214", Offset = "0xF88214", VA = "0xF88214")]
		private void Update()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xF88B04", Offset = "0xF88B04", VA = "0xF88B04")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x20003E2")]
		private struct PositionInfo
		{
			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4000EB8")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x4000EB9")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4000EBA")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xF88B0C", Offset = "0xF88B0C", VA = "0xF88B0C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xF88CE0", Offset = "0xF88CE0", VA = "0xF88CE0")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xF88DD4", Offset = "0xF88DD4", VA = "0xF88DD4")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xF88E98", Offset = "0xF88E98", VA = "0xF88E98")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xF88F5C", Offset = "0xF88F5C", VA = "0xF88F5C")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xF89514", Offset = "0xF89514", VA = "0xF89514")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xF895F4", Offset = "0xF895F4", VA = "0xF895F4")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xF897B4", Offset = "0xF897B4", VA = "0xF897B4")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xF89150", Offset = "0xF89150", VA = "0xF89150")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xF898F0", Offset = "0xF898F0", VA = "0xF898F0")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xF892C4", Offset = "0xF892C4", VA = "0xF892C4")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xF8992C", Offset = "0xF8992C", VA = "0xF8992C")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x20003E3")]
		private enum GameState
		{
			[Token(Token = "0x4001421")]
			None,
			[Token(Token = "0x4001422")]
			PracticingMyTurn,
			[Token(Token = "0x4001423")]
			PracticingAiTurn,
			[Token(Token = "0x4001424")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4001425")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xF89A00", Offset = "0xF89A00", VA = "0xF89A00")]
		private void Start()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xF89B5C", Offset = "0xF89B5C", VA = "0xF89B5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xF89A28", Offset = "0xF89A28", VA = "0xF89A28")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xF89F84", Offset = "0xF89F84", VA = "0xF89F84")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xF89B60", Offset = "0xF89B60", VA = "0xF89B60")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xF8A6C0", Offset = "0xF8A6C0", VA = "0xF8A6C0")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xF8A21C", Offset = "0xF8A21C", VA = "0xF8A21C")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xF8A7E8", Offset = "0xF8A7E8", VA = "0xF8A7E8")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xF8A848", Offset = "0xF8A848", VA = "0xF8A848")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xF8A8EC", Offset = "0xF8A8EC", VA = "0xF8A8EC")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xF8A900", Offset = "0xF8A900", VA = "0xF8A900")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xF887B4", Offset = "0xF887B4", VA = "0xF887B4")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xF887AC", Offset = "0xF887AC", VA = "0xF887AC")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xF887BC", Offset = "0xF887BC", VA = "0xF887BC")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xF88A38", Offset = "0xF88A38", VA = "0xF88A38")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xF8A42C", Offset = "0xF8A42C", VA = "0xF8A42C")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xF8A538", Offset = "0xF8A538", VA = "0xF8A538")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xF8AB80", Offset = "0xF8AB80", VA = "0xF8AB80")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xF8AB88", Offset = "0xF8AB88", VA = "0xF8AB88")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xF89A30", Offset = "0xF89A30", VA = "0xF89A30")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xF89C18", Offset = "0xF89C18", VA = "0xF89C18")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xF8ACDC", Offset = "0xF8ACDC", VA = "0xF8ACDC")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x20003E4")]
		public enum Piece
		{
			[Token(Token = "0x4001427")]
			A,
			[Token(Token = "0x4001428")]
			B,
			[Token(Token = "0x4001429")]
			PowerBall
		}

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x170000E4")]
		public Piece Type
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0xF8AD40", Offset = "0xF8AD40", VA = "0xF8AD40")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x170000E5")]
		public BoardPosition Position
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0xF8AD48", Offset = "0xF8AD48", VA = "0xF8AD48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001136")]
			[Address(RVA = "0xF8AD50", Offset = "0xF8AD50", VA = "0xF8AD50")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public GameObject Prefab
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0xF8A7BC", Offset = "0xF8A7BC", VA = "0xF8A7BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xF8A8C4", Offset = "0xF8A8C4", VA = "0xF8A8C4")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xF8AD58", Offset = "0xF8AD58", VA = "0xF8AD58")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x4000ED9")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xF8AD60", Offset = "0xF8AD60", VA = "0xF8AD60")]
		private void Start()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xF8AD84", Offset = "0xF8AD84", VA = "0xF8AD84")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xF8AF3C", Offset = "0xF8AF3C", VA = "0xF8AF3C")]
		private void GetProductsBySKUCallback(Message<ProductList> msg)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xF8AE94", Offset = "0xF8AE94", VA = "0xF8AE94")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xF8B3EC", Offset = "0xF8B3EC", VA = "0xF8B3EC")]
		private void GetViewerPurchasesCallback(Message<PurchaseList> msg)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xF8B7E0", Offset = "0xF8B7E0", VA = "0xF8B7E0")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xF8B894", Offset = "0xF8B894", VA = "0xF8B894")]
		private void LaunchCheckoutFlowCallback(Message<Purchase> msg)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xF8B97C", Offset = "0xF8B97C", VA = "0xF8B97C")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x20003E5")]
		private enum MatchRoomState
		{
			[Token(Token = "0x400142B")]
			None,
			[Token(Token = "0x400142C")]
			Queued,
			[Token(Token = "0x400142D")]
			Configuring,
			[Token(Token = "0x400142E")]
			MyTurn,
			[Token(Token = "0x400142F")]
			RemoteTurn
		}

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x4000EDD")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x4000EE1")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xF8B984", Offset = "0xF8B984", VA = "0xF8B984")]
		private void Start()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xF8BBCC", Offset = "0xF8BBCC", VA = "0xF8BBCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xF8BCF4", Offset = "0xF8BCF4", VA = "0xF8BCF4")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xF8A068", Offset = "0xF8A068", VA = "0xF8A068")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xF8BDB0", Offset = "0xF8BDB0", VA = "0xF8BDB0")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xF8BA44", Offset = "0xF8BA44", VA = "0xF8BA44")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xF8BDEC", Offset = "0xF8BDEC", VA = "0xF8BDEC")]
		private void MatchmakingEnqueueCallback(Message untyped_msg)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xF8C07C", Offset = "0xF8C07C", VA = "0xF8C07C")]
		private void MatchFoundCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xF8C1CC", Offset = "0xF8C1CC", VA = "0xF8C1CC")]
		private void MatchmakingJoinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xF8C960", Offset = "0xF8C960", VA = "0xF8C960")]
		private void MatchmakingRoomUpdateCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xF8C484", Offset = "0xF8C484", VA = "0xF8C484")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xF8CCD8", Offset = "0xF8CCD8", VA = "0xF8CCD8")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xF8A95C", Offset = "0xF8A95C", VA = "0xF8A95C")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xF8CEC0", Offset = "0xF8CEC0", VA = "0xF8CEC0")]
		private void UpdateDataStoreCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xF8CC90", Offset = "0xF8CC90", VA = "0xF8CC90")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xF8CEF4", Offset = "0xF8CEF4", VA = "0xF8CEF4")]
		private void GenericErrorCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xF8CFB8", Offset = "0xF8CFB8", VA = "0xF8CFB8")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x170000E7")]
		public static ulong MyID
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0xF8BD0C", Offset = "0xF8BD0C", VA = "0xF8BD0C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000E8")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0xF8AC28", Offset = "0xF8AC28", VA = "0xF8AC28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xF8CFC0", Offset = "0xF8CFC0", VA = "0xF8CFC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xF8D100", Offset = "0xF8D100", VA = "0xF8D100")]
		private void Start()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xF8D198", Offset = "0xF8D198", VA = "0xF8D198")]
		private void IsEntitledCallback(Message msg)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xF8D268", Offset = "0xF8D268", VA = "0xF8D268")]
		private void GetLoggedInUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xF8B340", Offset = "0xF8B340", VA = "0xF8B340")]
		public static void TerminateWithError(Message msg)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xF8D344", Offset = "0xF8D344", VA = "0xF8D344")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.SimplePlatformSample
{
	[Token(Token = "0x20002AD")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xF83A5C", Offset = "0xF83A5C", VA = "0xF83A5C")]
		private void Start()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xF83B64", Offset = "0xF83B64", VA = "0xF83B64")]
		private void Update()
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xF83C28", Offset = "0xF83C28", VA = "0xF83C28")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xF857F0", Offset = "0xF857F0", VA = "0xF857F0")]
		private void getLeaderboardEntries(string leaderboardName)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xF856D8", Offset = "0xF856D8", VA = "0xF856D8")]
		private void writeLeaderboardEntry(string leaderboardName, string value)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xF85620", Offset = "0xF85620", VA = "0xF85620")]
		private void addFieldsAchievement(string achievementName, string fields)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xF8553C", Offset = "0xF8553C", VA = "0xF8553C")]
		private void addCountAchievement(string achievementName, string count)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xF8548C", Offset = "0xF8548C", VA = "0xF8548C")]
		private void unlockAchievement(string achievementName)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xF85384", Offset = "0xF85384", VA = "0xF85384")]
		private void getAchievementProgress(string achievementName)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xF8527C", Offset = "0xF8527C", VA = "0xF8527C")]
		private void getAchievementDefinition(string achievementName)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xF83ACC", Offset = "0xF83ACC", VA = "0xF83ACC")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xF851C4", Offset = "0xF851C4", VA = "0xF851C4")]
		private void getUserNonce()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xF843F8", Offset = "0xF843F8", VA = "0xF843F8")]
		private void createAndJoinPrivateRoom(string joinPolicy, string maxUsers)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xF84504", Offset = "0xF84504", VA = "0xF84504")]
		private void getCurrentRoom()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xF845C0", Offset = "0xF845C0", VA = "0xF845C0")]
		private void getRoom(string roomID)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xF846BC", Offset = "0xF846BC", VA = "0xF846BC")]
		private void joinRoom(string roomID)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xF847BC", Offset = "0xF847BC", VA = "0xF847BC")]
		private void leaveRoom(string roomID)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xF848B8", Offset = "0xF848B8", VA = "0xF848B8")]
		private void kickUser(string roomID, string userID)
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xF849E4", Offset = "0xF849E4", VA = "0xF849E4")]
		private void getLoggedInUser()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xF84A9C", Offset = "0xF84A9C", VA = "0xF84A9C")]
		private void getUser(string userID)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xF84B94", Offset = "0xF84B94", VA = "0xF84B94")]
		private void getLoggedInFriends()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xF84C4C", Offset = "0xF84C4C", VA = "0xF84C4C")]
		private void getInvitableUsers()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xF84D08", Offset = "0xF84D08", VA = "0xF84D08")]
		private void inviteUser(string roomID, string inviteToken)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xF84E1C", Offset = "0xF84E1C", VA = "0xF84E1C")]
		private void setRoomDescription(string roomID, string description)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xF84F30", Offset = "0xF84F30", VA = "0xF84F30")]
		private void updateRoomDataStore(string roomID, string key, string value)
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xF858AC", Offset = "0xF858AC", VA = "0xF858AC")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xF85DA4", Offset = "0xF85DA4", VA = "0xF85DA4")]
		private void outputRoomDetails(Room room)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xF862D4", Offset = "0xF862D4", VA = "0xF862D4")]
		private void outputUserArray(UserList users)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xF867D8", Offset = "0xF867D8", VA = "0xF867D8")]
		private void userProofCallback(Message<UserProof> msg)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xF868B0", Offset = "0xF868B0", VA = "0xF868B0")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xF86930", Offset = "0xF86930", VA = "0xF86930")]
		private void leaderboardGetCallback(Message<LeaderboardEntryList> msg)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xF86EC4", Offset = "0xF86EC4", VA = "0xF86EC4")]
		private void leaderboardWriteCallback(Message msg)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xF86FE4", Offset = "0xF86FE4", VA = "0xF86FE4")]
		private void achievementFieldsCallback(Message msg)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xF870A0", Offset = "0xF870A0", VA = "0xF870A0")]
		private void achievementCountCallback(Message msg)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xF8715C", Offset = "0xF8715C", VA = "0xF8715C")]
		private void achievementUnlockCallback(Message msg)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xF87218", Offset = "0xF87218", VA = "0xF87218")]
		private void achievementProgressCallback(Message<AchievementProgressList> msg)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xF87590", Offset = "0xF87590", VA = "0xF87590")]
		private void achievementDefinitionCallback(Message<AchievementDefinitionList> msg)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xF87980", Offset = "0xF87980", VA = "0xF87980")]
		private void createAndJoinPrivateRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xF87A58", Offset = "0xF87A58", VA = "0xF87A58")]
		private void getCurrentRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xF87B30", Offset = "0xF87B30", VA = "0xF87B30")]
		private void joinRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xF87C08", Offset = "0xF87C08", VA = "0xF87C08")]
		private void leaveRoomCallback(Message<Room> msg)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xF87CE0", Offset = "0xF87CE0", VA = "0xF87CE0")]
		private void getUserCallback(Message<User> msg)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xF87F98", Offset = "0xF87F98", VA = "0xF87F98")]
		private void getFriendsCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xF88070", Offset = "0xF88070", VA = "0xF88070")]
		private void getInvitableUsersCallback(Message<UserList> msg)
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xF88148", Offset = "0xF88148", VA = "0xF88148")]
		private void inviteUserCallback(Message msg)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xF88204", Offset = "0xF88204", VA = "0xF88204")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x20002AE")]
	internal enum states
	{
		[Token(Token = "0x4000EE8")]
		NOT_INIT,
		[Token(Token = "0x4000EE9")]
		IDLE,
		[Token(Token = "0x4000EEA")]
		REQUEST_FIND,
		[Token(Token = "0x4000EEB")]
		FINDING_ROOM,
		[Token(Token = "0x4000EEC")]
		REQUEST_CREATE,
		[Token(Token = "0x4000EED")]
		REQUEST_JOIN,
		[Token(Token = "0x4000EEE")]
		REQUEST_LEAVE,
		[Token(Token = "0x4000EEF")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x4000EF0")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x20002AF")]
	public static class Constants
	{
		[Token(Token = "0x4000EF1")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x4000EF2")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4000EF3")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x20002B0")]
	public class chatPacket
	{
		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCB84", Offset = "0x7CCB84")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7CCB94", Offset = "0x7CCB94")]
		private string <textString>k__BackingField;

		[Token(Token = "0x170000E9")]
		public int packetID
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0xF834A0", Offset = "0xF834A0", VA = "0xF834A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1380", Offset = "0x7D1380")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xF834A8", Offset = "0xF834A8", VA = "0xF834A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D1390", Offset = "0x7D1390")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public string textString
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0xF834B0", Offset = "0xF834B0", VA = "0xF834B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D13A0", Offset = "0x7D13A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118C")]
			[Address(RVA = "0xF834B8", Offset = "0xF834B8", VA = "0xF834B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D13B0", Offset = "0x7D13B0")]
			set
			{
			}
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xF834C0", Offset = "0xF834C0", VA = "0xF834C0")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xF837C4", Offset = "0xF837C4", VA = "0xF837C4")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xF83A54", Offset = "0xF83A54", VA = "0xF83A54")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xE2ABF4", Offset = "0xE2ABF4", VA = "0xE2ABF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xE2AD64", Offset = "0xE2AD64", VA = "0xE2AD64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xE2AE2C", Offset = "0xE2AE2C", VA = "0xE2AE2C")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xE2C0F4", Offset = "0xE2C0F4", VA = "0xE2C0F4")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xE2ACE0", Offset = "0xE2ACE0", VA = "0xE2ACE0")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xE2C1AC", Offset = "0xE2C1AC", VA = "0xE2C1AC")]
		private void getEntitlementCallback(Message msg)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xE2C298", Offset = "0xE2C298", VA = "0xE2C298")]
		private void init(Message<User> msg)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xE2B314", Offset = "0xE2B314", VA = "0xE2B314")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xE2C3B8", Offset = "0xE2C3B8", VA = "0xE2C3B8")]
		private void createRoomResponse(Message<MatchmakingEnqueueResultAndRoom> msg)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xE2B490", Offset = "0xE2B490", VA = "0xE2B490")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xE2B824", Offset = "0xE2B824", VA = "0xE2B824")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xE2B998", Offset = "0xE2B998", VA = "0xE2B998")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xE2C4EC", Offset = "0xE2C4EC", VA = "0xE2C4EC")]
		private void foundMatch(Message<Room> msg)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xE2C624", Offset = "0xE2C624", VA = "0xE2C624")]
		private void joinRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xE2B6B0", Offset = "0xE2B6B0", VA = "0xE2B6B0")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xE2C908", Offset = "0xE2C908", VA = "0xE2C908")]
		private void searchingStarted(Message msg)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xE2C9D8", Offset = "0xE2C9D8", VA = "0xE2C9D8")]
		private void updateRoom(Message<Room> msg)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xE2BC30", Offset = "0xE2BC30", VA = "0xE2BC30")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xE2B188", Offset = "0xE2B188", VA = "0xE2B188")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xE2BD2C", Offset = "0xE2BD2C", VA = "0xE2BD2C")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xE2CD30", Offset = "0xE2CD30", VA = "0xE2CD30")]
		private void leaveRoomResponse(Message<Room> msg)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xE2BE54", Offset = "0xE2BE54", VA = "0xE2BE54")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xE2CE04", Offset = "0xE2CE04", VA = "0xE2CE04")]
		private void startRatedMatchResponse(Message msg)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xE2BF48", Offset = "0xE2BF48", VA = "0xE2BF48")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xE2CED4", Offset = "0xE2CED4", VA = "0xE2CED4")]
		private void reportResultsResponse(Message msg)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xE2CF90", Offset = "0xE2CF90", VA = "0xE2CF90")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x20002B2")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000013")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0xE2A4C4", Offset = "0xE2A4C4", VA = "0xE2A4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D13C0", Offset = "0x7D13C0")]
			add
			{
			}
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0xE2A578", Offset = "0xE2A578", VA = "0xE2A578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D13D0", Offset = "0x7D13D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x60011AC")]
			[Address(RVA = "0xE2A62C", Offset = "0xE2A62C", VA = "0xE2A62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D13E0", Offset = "0x7D13E0")]
			add
			{
			}
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xE2A6E4", Offset = "0xE2A6E4", VA = "0xE2A6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7D13F0", Offset = "0x7D13F0")]
			remove
			{
			}
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xE2A79C", Offset = "0xE2A79C", VA = "0xE2A79C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xE2ABC4", Offset = "0xE2ABC4", VA = "0xE2ABC4")]
		private void EntitlementCheckCallback(Message msg)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xE2A948", Offset = "0xE2A948", VA = "0xE2A948")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xE2ABE4", Offset = "0xE2ABE4", VA = "0xE2ABE4")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20002B3")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000F00")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000F01")]
		public const string Tab = "    ";

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xB5B854", Offset = "0xB5B854", VA = "0xB5B854")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D1400", Offset = "0x7D1400")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D1400", Offset = "0x7D1400")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xB5B8DC", Offset = "0xB5B8DC", VA = "0xB5B8DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D1460", Offset = "0x7D1460")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D1460", Offset = "0x7D1460")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xB5B974", Offset = "0xB5B974", VA = "0xB5B974")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D14C0", Offset = "0x7D14C0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D14C0", Offset = "0x7D14C0")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xB5B9FC", Offset = "0xB5B9FC", VA = "0xB5B9FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D1520", Offset = "0x7D1520")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D1520", Offset = "0x7D1520")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xB5BA84", Offset = "0xB5BA84", VA = "0xB5BA84")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D1580", Offset = "0x7D1580")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x7D1580", Offset = "0x7D1580")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class CAPI
	{
		[Token(Token = "0x20003E6")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20003E7")]
		public enum Result
		{
			[Token(Token = "0x4001431")]
			Success = 0,
			[Token(Token = "0x4001432")]
			Failure = -1000,
			[Token(Token = "0x4001433")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001434")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001435")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001436")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001437")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001438")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001439")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20003E8")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x600164B")]
			[Address(RVA = "0x139F5D0", Offset = "0x139F5D0", VA = "0x139F5D0")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000F02")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000F0A")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xB5BB84", Offset = "0xB5BB84", VA = "0xB5BB84")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xB5BC14", Offset = "0xB5BC14", VA = "0xB5BC14")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xB5BDD0", Offset = "0xB5BDD0", VA = "0xB5BDD0")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xB5BEB0", Offset = "0xB5BEB0", VA = "0xB5BEB0")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xB5BF20", Offset = "0xB5BF20", VA = "0xB5BF20")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xB5BF94", Offset = "0xB5BF94", VA = "0xB5BF94")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xB5C014", Offset = "0xB5C014", VA = "0xB5C014")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xB5C12C", Offset = "0xB5C12C", VA = "0xB5C12C")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xB5C1AC", Offset = "0xB5C1AC", VA = "0xB5C1AC")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xB5C2C4", Offset = "0xB5C2C4", VA = "0xB5C2C4")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xB5C344", Offset = "0xB5C344", VA = "0xB5C344")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xB5C3C4", Offset = "0xB5C3C4", VA = "0xB5C3C4")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xB5C444", Offset = "0xB5C444", VA = "0xB5C444")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xB5C4C4", Offset = "0xB5C4C4", VA = "0xB5C4C4")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xB5C554", Offset = "0xB5C554", VA = "0xB5C554")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xB5C5E4", Offset = "0xB5C5E4", VA = "0xB5C5E4")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xB5C674", Offset = "0xB5C674", VA = "0xB5C674")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xB5C6F4", Offset = "0xB5C6F4", VA = "0xB5C6F4")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xB5C774", Offset = "0xB5C774", VA = "0xB5C774")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xB5C804", Offset = "0xB5C804", VA = "0xB5C804")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xB5C894", Offset = "0xB5C894", VA = "0xB5C894")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xB5C924", Offset = "0xB5C924", VA = "0xB5C924")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xB5C9A4", Offset = "0xB5C9A4", VA = "0xB5C9A4")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xB5CA44", Offset = "0xB5CA44", VA = "0xB5CA44")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xB5CAC4", Offset = "0xB5CAC4", VA = "0xB5CAC4")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xB5CB64", Offset = "0xB5CB64", VA = "0xB5CB64")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xB5CC24", Offset = "0xB5CC24", VA = "0xB5CC24")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xB5CCF4", Offset = "0xB5CCF4", VA = "0xB5CCF4")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xB5CD84", Offset = "0xB5CD84", VA = "0xB5CD84")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xB5CE14", Offset = "0xB5CE14", VA = "0xB5CE14")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xB5CEA4", Offset = "0xB5CEA4", VA = "0xB5CEA4")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xB5CF34", Offset = "0xB5CF34", VA = "0xB5CF34")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xB5CFC4", Offset = "0xB5CFC4", VA = "0xB5CFC4")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xB5D044", Offset = "0xB5D044", VA = "0xB5D044")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xB5D164", Offset = "0xB5D164", VA = "0xB5D164")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xB5D0D4", Offset = "0xB5D0D4", VA = "0xB5D0D4")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xB5D358", Offset = "0xB5D358", VA = "0xB5D358")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xB5D490", Offset = "0xB5D490", VA = "0xB5D490")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011DD")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xB5D510", Offset = "0xB5D510", VA = "0xB5D510")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xB5D780", Offset = "0xB5D780", VA = "0xB5D780")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xB5D800", Offset = "0xB5D800", VA = "0xB5D800")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xB5D938", Offset = "0xB5D938", VA = "0xB5D938")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xB5D9B8", Offset = "0xB5D9B8", VA = "0xB5D9B8")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xB5DAF0", Offset = "0xB5DAF0", VA = "0xB5DAF0")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xB5DB70", Offset = "0xB5DB70", VA = "0xB5DB70")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xB5DCA8", Offset = "0xB5DCA8", VA = "0xB5DCA8")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xB5DD28", Offset = "0xB5DD28", VA = "0xB5DD28")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xB5DE60", Offset = "0xB5DE60", VA = "0xB5DE60")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xB5DEE0", Offset = "0xB5DEE0", VA = "0xB5DEE0")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xB5DF60", Offset = "0xB5DF60", VA = "0xB5DF60")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xB5DFF8", Offset = "0xB5DFF8", VA = "0xB5DFF8")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xB5E078", Offset = "0xB5E078", VA = "0xB5E078")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xB5E224", Offset = "0xB5E224", VA = "0xB5E224")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xB5E350", Offset = "0xB5E350", VA = "0xB5E350")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xB5E1A4", Offset = "0xB5E1A4", VA = "0xB5E1A4")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xB5E3D0", Offset = "0xB5E3D0", VA = "0xB5E3D0")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xB5E450", Offset = "0xB5E450", VA = "0xB5E450")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xB5E4E0", Offset = "0xB5E4E0", VA = "0xB5E4E0")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xB5E560", Offset = "0xB5E560", VA = "0xB5E560")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xB5E5F0", Offset = "0xB5E5F0", VA = "0xB5E5F0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xB5E670", Offset = "0xB5E670", VA = "0xB5E670")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xB5E6F0", Offset = "0xB5E6F0", VA = "0xB5E6F0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xB5E92C", Offset = "0xB5E92C", VA = "0xB5E92C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xB5E9BC", Offset = "0xB5E9BC", VA = "0xB5E9BC")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xB5EBA8", Offset = "0xB5EBA8", VA = "0xB5EBA8")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xB5EC40", Offset = "0xB5EC40", VA = "0xB5EC40")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xB5ED64", Offset = "0xB5ED64", VA = "0xB5ED64")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xB5EDE4", Offset = "0xB5EDE4", VA = "0xB5EDE4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xB5EE64", Offset = "0xB5EE64", VA = "0xB5EE64")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xB5EF8C", Offset = "0xB5EF8C", VA = "0xB5EF8C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xB5F00C", Offset = "0xB5F00C", VA = "0xB5F00C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xB5F134", Offset = "0xB5F134", VA = "0xB5F134")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001200")]
		[Address(RVA = "0xB5F1B4", Offset = "0xB5F1B4", VA = "0xB5F1B4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001201")]
		[Address(RVA = "0xB5F244", Offset = "0xB5F244", VA = "0xB5F244")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001202")]
		[Address(RVA = "0xB5F2D4", Offset = "0xB5F2D4", VA = "0xB5F2D4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001203")]
		[Address(RVA = "0xB5F364", Offset = "0xB5F364", VA = "0xB5F364")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001204")]
		[Address(RVA = "0xB5F3E4", Offset = "0xB5F3E4", VA = "0xB5F3E4")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001205")]
		[Address(RVA = "0xB5F46C", Offset = "0xB5F46C", VA = "0xB5F46C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001206")]
		[Address(RVA = "0xB5F4F4", Offset = "0xB5F4F4", VA = "0xB5F4F4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001207")]
		[Address(RVA = "0xB5F574", Offset = "0xB5F574", VA = "0xB5F574")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001208")]
		[Address(RVA = "0xB5F5F4", Offset = "0xB5F5F4", VA = "0xB5F5F4")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001209")]
		[Address(RVA = "0xB5F6A8", Offset = "0xB5F6A8", VA = "0xB5F6A8")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600120A")]
		[Address(RVA = "0xB5F738", Offset = "0xB5F738", VA = "0xB5F738")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600120B")]
		[Address(RVA = "0xB5F7C8", Offset = "0xB5F7C8", VA = "0xB5F7C8")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600120C")]
		[Address(RVA = "0xB5F848", Offset = "0xB5F848", VA = "0xB5F848")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600120D")]
		[Address(RVA = "0xB5F8C8", Offset = "0xB5F8C8", VA = "0xB5F8C8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600120E")]
		[Address(RVA = "0xB5F948", Offset = "0xB5F948", VA = "0xB5F948")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x600120F")]
		[Address(RVA = "0xB5F9E0", Offset = "0xB5F9E0", VA = "0xB5F9E0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001210")]
		[Address(RVA = "0xB5FA70", Offset = "0xB5FA70", VA = "0xB5FA70")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001211")]
		[Address(RVA = "0xB5FB00", Offset = "0xB5FB00", VA = "0xB5FB00")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001212")]
		[Address(RVA = "0xB5FB90", Offset = "0xB5FB90", VA = "0xB5FB90")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001213")]
		[Address(RVA = "0xB5FC28", Offset = "0xB5FC28", VA = "0xB5FC28")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001214")]
		[Address(RVA = "0xB5FCC0", Offset = "0xB5FCC0", VA = "0xB5FCC0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001215")]
		[Address(RVA = "0xB5FD40", Offset = "0xB5FD40", VA = "0xB5FD40")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xB5FDC0", Offset = "0xB5FDC0", VA = "0xB5FDC0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001217")]
		[Address(RVA = "0xB5FEE8", Offset = "0xB5FEE8", VA = "0xB5FEE8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xB5FF68", Offset = "0xB5FF68", VA = "0xB5FF68")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001219")]
		[Address(RVA = "0xB60090", Offset = "0xB60090", VA = "0xB60090")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xB60110", Offset = "0xB60110", VA = "0xB60110")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600121B")]
		[Address(RVA = "0xB60238", Offset = "0xB60238", VA = "0xB60238")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xB602B8", Offset = "0xB602B8", VA = "0xB602B8")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xB60460", Offset = "0xB60460", VA = "0xB60460")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600121E")]
		[Address(RVA = "0xB606FC", Offset = "0xB606FC", VA = "0xB606FC")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600121F")]
		[Address(RVA = "0xB603E0", Offset = "0xB603E0", VA = "0xB603E0")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001220")]
		[Address(RVA = "0xB6078C", Offset = "0xB6078C", VA = "0xB6078C")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001221")]
		[Address(RVA = "0xB6080C", Offset = "0xB6080C", VA = "0xB6080C")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001222")]
		[Address(RVA = "0xB6089C", Offset = "0xB6089C", VA = "0xB6089C")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001223")]
		[Address(RVA = "0xB6092C", Offset = "0xB6092C", VA = "0xB6092C")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001224")]
		[Address(RVA = "0xB609BC", Offset = "0xB609BC", VA = "0xB609BC")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001225")]
		[Address(RVA = "0xB60A5C", Offset = "0xB60A5C", VA = "0xB60A5C")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001226")]
		[Address(RVA = "0xB60AFC", Offset = "0xB60AFC", VA = "0xB60AFC")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001227")]
		[Address(RVA = "0xB60B9C", Offset = "0xB60B9C", VA = "0xB60B9C")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001228")]
		[Address(RVA = "0xB60C1C", Offset = "0xB60C1C", VA = "0xB60C1C")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001229")]
		[Address(RVA = "0xB60C9C", Offset = "0xB60C9C", VA = "0xB60C9C")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600122A")]
		[Address(RVA = "0xB60D1C", Offset = "0xB60D1C", VA = "0xB60D1C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600122B")]
		[Address(RVA = "0xB60D9C", Offset = "0xB60D9C", VA = "0xB60D9C")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600122C")]
		[Address(RVA = "0xB60E1C", Offset = "0xB60E1C", VA = "0xB60E1C")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600122D")]
		[Address(RVA = "0xB60F44", Offset = "0xB60F44", VA = "0xB60F44")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600122E")]
		[Address(RVA = "0xB60FDC", Offset = "0xB60FDC", VA = "0xB60FDC")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xB6105C", Offset = "0xB6105C", VA = "0xB6105C")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xB610C0", Offset = "0xB610C0", VA = "0xB610C0")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001231")]
		[Address(RVA = "0xB611DC", Offset = "0xB611DC", VA = "0xB611DC")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xB6126C", Offset = "0xB6126C", VA = "0xB6126C")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001233")]
		[Address(RVA = "0xB613B0", Offset = "0xB613B0", VA = "0xB613B0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001234")]
		[Address(RVA = "0xB61440", Offset = "0xB61440", VA = "0xB61440")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xB614E0", Offset = "0xB614E0", VA = "0xB614E0")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001236")]
		[Address(RVA = "0xB61878", Offset = "0xB61878", VA = "0xB61878")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001237")]
		[Address(RVA = "0xB618F8", Offset = "0xB618F8", VA = "0xB618F8")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xB61990", Offset = "0xB61990", VA = "0xB61990")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001239")]
		[Address(RVA = "0xB62158", Offset = "0xB62158", VA = "0xB62158")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x600123A")]
		[Address(RVA = "0xB621D8", Offset = "0xB621D8", VA = "0xB621D8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xB5BB1C", Offset = "0xB5BB1C", VA = "0xB5BB1C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7D15E0", Offset = "0x7D15E0")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600123C")]
		[Address(RVA = "0xB62270", Offset = "0xB62270", VA = "0xB62270")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600123D")]
		[Address(RVA = "0xB622F4", Offset = "0xB622F4", VA = "0xB622F4")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600123E")]
		[Address(RVA = "0xB62374", Offset = "0xB62374", VA = "0xB62374")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x600123F")]
		[Address(RVA = "0xB623F4", Offset = "0xB623F4", VA = "0xB623F4")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xB62474", Offset = "0xB62474", VA = "0xB62474")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001241")]
		[Address(RVA = "0xB62E54", Offset = "0xB62E54", VA = "0xB62E54")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xB62ED4", Offset = "0xB62ED4", VA = "0xB62ED4")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001243")]
		[Address(RVA = "0xB632C0", Offset = "0xB632C0", VA = "0xB632C0")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xB63230", Offset = "0xB63230", VA = "0xB63230")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xB63334", Offset = "0xB63334", VA = "0xB63334")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20002B5")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x7CCBC4", Offset = "0x7CCBC4")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xB52BCC", Offset = "0xB52BCC", VA = "0xB52BCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xB52BD0", Offset = "0xB52BD0", VA = "0xB52BD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xB52C90", Offset = "0xB52C90", VA = "0xB52C90")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCC10", Offset = "0x7CCC10")]
		public bool autoRetrigger;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7CCC48", Offset = "0x7CCC48")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCC6C", Offset = "0x7CCC6C")]
		public Transform[] playPositions;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xB49F10", Offset = "0xB49F10", VA = "0xB49F10")]
		private void Awake()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xB4A094", Offset = "0xB4A094", VA = "0xB4A094")]
		private void Update()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xB4A270", Offset = "0xB4A270", VA = "0xB4A270")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xB4A0F4", Offset = "0xB4A0F4", VA = "0xB4A0F4")]
		public void Play()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xB4A3B0", Offset = "0xB4A3B0", VA = "0xB4A3B0")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xB4A524", Offset = "0xB4A524", VA = "0xB4A524")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000F19")]
		Default,
		[Token(Token = "0x4000F1A")]
		Preload,
		[Token(Token = "0x4000F1B")]
		ManualPreload
	}
	[Token(Token = "0x20002B8")]
	public enum Fade
	{
		[Token(Token = "0x4000F1D")]
		In,
		[Token(Token = "0x4000F1E")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20002B9")]
	public class SoundGroup
	{
		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CCCA4", Offset = "0x7CCCA4")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xB52AAC", Offset = "0xB52AAC", VA = "0xB52AAC")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xB52B40", Offset = "0xB52B40", VA = "0xB52B40")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xB51518", Offset = "0xB51518", VA = "0xB51518")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xB51658", Offset = "0xB51658", VA = "0xB51658")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xB52110", Offset = "0xB52110", VA = "0xB52110")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002BA")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20003E9")]
		public enum Fade
		{
			[Token(Token = "0x400143C")]
			In,
			[Token(Token = "0x400143D")]
			Out
		}

		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5D64", Offset = "0x7C5D64")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x600164D")]
			[Address(RVA = "0xB4E638", Offset = "0xB4E638", VA = "0xB4E638")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x600164E")]
			[Address(RVA = "0xB50FD4", Offset = "0xB50FD4", VA = "0xB50FD4")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5D74", Offset = "0x7C5D74")]
		private sealed class <>c
		{
			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6001650")]
			[Address(RVA = "0xB50F3C", Offset = "0xB50F3C", VA = "0xB50F3C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001651")]
			[Address(RVA = "0xB50F44", Offset = "0xB50F44", VA = "0xB50F44")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCCD0", Offset = "0x7CCCD0")]
		public bool makePersistent;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCD08", Offset = "0x7CCD08")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCD40", Offset = "0x7CCD40")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCD78", Offset = "0x7CCD78")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCDB0", Offset = "0x7CCDB0")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCDE8", Offset = "0x7CCDE8")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCE20", Offset = "0x7CCE20")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCE58", Offset = "0x7CCE58")]
		public bool verboseLogging;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCE90", Offset = "0x7CCE90")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCEC8", Offset = "0x7CCEC8")]
		public float volumeSoundFX;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCF00", Offset = "0x7CCF00")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000EB")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xB4A5E4", Offset = "0xB4A5E4", VA = "0xB4A5E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xB4A6C4", Offset = "0xB4A6C4", VA = "0xB4A6C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xB4A72C", Offset = "0xB4A72C", VA = "0xB4A72C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EE")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xB4A7A0", Offset = "0xB4A7A0", VA = "0xB4A7A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000EF")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xB4A814", Offset = "0xB4A814", VA = "0xB4A814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xB4A888", Offset = "0xB4A888", VA = "0xB4A888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xB4A8FC", Offset = "0xB4A8FC", VA = "0xB4A8FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xB4C64C", Offset = "0xB4C64C", VA = "0xB4C64C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xB4A970", Offset = "0xB4A970", VA = "0xB4A970")]
		private void Awake()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xB4AB98", Offset = "0xB4AB98", VA = "0xB4AB98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xB4A974", Offset = "0xB4A974", VA = "0xB4A974")]
		private void Init()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xB4B7C4", Offset = "0xB4B7C4", VA = "0xB4B7C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xB4ACF0", Offset = "0xB4ACF0", VA = "0xB4ACF0")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xB4BDE8", Offset = "0xB4BDE8", VA = "0xB4BDE8")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xB4BF68", Offset = "0xB4BF68", VA = "0xB4BF68")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xB4C104", Offset = "0xB4C104", VA = "0xB4C104")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xB4C204", Offset = "0xB4C204", VA = "0xB4C204")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xB4C294", Offset = "0xB4C294", VA = "0xB4C294")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xB4B13C", Offset = "0xB4B13C", VA = "0xB4B13C")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xB4B7C8", Offset = "0xB4B7C8", VA = "0xB4B7C8")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xB4C8CC", Offset = "0xB4C8CC", VA = "0xB4C8CC")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xB4C9D0", Offset = "0xB4C9D0", VA = "0xB4C9D0")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xB4CAD8", Offset = "0xB4CAD8", VA = "0xB4CAD8")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xB4C794", Offset = "0xB4C794", VA = "0xB4C794")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xB4CC44", Offset = "0xB4CC44", VA = "0xB4CC44")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xB4CD98", Offset = "0xB4CD98", VA = "0xB4CD98")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xB4CF48", Offset = "0xB4CF48", VA = "0xB4CF48")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xB4A300", Offset = "0xB4A300", VA = "0xB4A300")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xB4A474", Offset = "0xB4A474", VA = "0xB4A474")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xB4D0F4", Offset = "0xB4D0F4", VA = "0xB4D0F4")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xB4D1C0", Offset = "0xB4D1C0", VA = "0xB4D1C0")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xB4D254", Offset = "0xB4D254", VA = "0xB4D254")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xB4D318", Offset = "0xB4D318", VA = "0xB4D318")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xB4D3BC", Offset = "0xB4D3BC", VA = "0xB4D3BC")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xB4D49C", Offset = "0xB4D49C", VA = "0xB4D49C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xB4DF80", Offset = "0xB4DF80", VA = "0xB4DF80")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xB4E640", Offset = "0xB4E640", VA = "0xB4E640")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xB4E820", Offset = "0xB4E820", VA = "0xB4E820")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xB4F564", Offset = "0xB4F564", VA = "0xB4F564")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xB4D6A4", Offset = "0xB4D6A4", VA = "0xB4D6A4")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xB4F684", Offset = "0xB4F684", VA = "0xB4F684")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xB4F768", Offset = "0xB4F768", VA = "0xB4F768")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xB4F858", Offset = "0xB4F858", VA = "0xB4F858")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xB4FC10", Offset = "0xB4FC10", VA = "0xB4FC10")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xB4FE0C", Offset = "0xB4FE0C", VA = "0xB4FE0C")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xB4FF28", Offset = "0xB4FF28", VA = "0xB4FF28")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xB500F0", Offset = "0xB500F0", VA = "0xB500F0")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xB501C8", Offset = "0xB501C8", VA = "0xB501C8")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xB502FC", Offset = "0xB502FC", VA = "0xB502FC")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xB506E8", Offset = "0xB506E8", VA = "0xB506E8")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000F46")]
		None = -1,
		[Token(Token = "0x4000F47")]
		Reserved,
		[Token(Token = "0x4000F48")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20002BC")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xB510D0", Offset = "0xB510D0", VA = "0xB510D0")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xB51074", Offset = "0xB51074", VA = "0xB51074")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20003EC")]
		public enum FadeState
		{
			[Token(Token = "0x4001442")]
			Null,
			[Token(Token = "0x4001443")]
			FadingIn,
			[Token(Token = "0x4001444")]
			FadingOut,
			[Token(Token = "0x4001445")]
			Ducking
		}

		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5D84", Offset = "0x7C5D84")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000196")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001655")]
				[Address(RVA = "0xB51B1C", Offset = "0xB51B1C", VA = "0xB51B1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000197")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001657")]
				[Address(RVA = "0xB51B84", Offset = "0xB51B84", VA = "0xB51B84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001652")]
			[Address(RVA = "0xB517FC", Offset = "0xB517FC", VA = "0xB517FC")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001653")]
			[Address(RVA = "0xB51A2C", Offset = "0xB51A2C", VA = "0xB51A2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001654")]
			[Address(RVA = "0xB51A30", Offset = "0xB51A30", VA = "0xB51A30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001656")]
			[Address(RVA = "0xB51B24", Offset = "0xB51B24", VA = "0xB51B24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5D94", Offset = "0x7C5D94")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000198")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600165B")]
				[Address(RVA = "0xB51FD0", Offset = "0xB51FD0", VA = "0xB51FD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000199")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600165D")]
				[Address(RVA = "0xB52038", Offset = "0xB52038", VA = "0xB52038", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001658")]
			[Address(RVA = "0xB519BC", Offset = "0xB519BC", VA = "0xB519BC")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001659")]
			[Address(RVA = "0xB51E64", Offset = "0xB51E64", VA = "0xB51E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600165A")]
			[Address(RVA = "0xB51E68", Offset = "0xB51E68", VA = "0xB51E68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600165C")]
			[Address(RVA = "0xB51FD8", Offset = "0xB51FD8", VA = "0xB51FD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7C5DA4", Offset = "0x7C5DA4")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700019A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001661")]
				[Address(RVA = "0xB51DF4", Offset = "0xB51DF4", VA = "0xB51DF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001663")]
				[Address(RVA = "0xB51E5C", Offset = "0xB51E5C", VA = "0xB51E5C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600165E")]
			[Address(RVA = "0xB519E8", Offset = "0xB519E8", VA = "0xB519E8")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x600165F")]
			[Address(RVA = "0xB51B8C", Offset = "0xB51B8C", VA = "0xB51B8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001660")]
			[Address(RVA = "0xB51B90", Offset = "0xB51B90", VA = "0xB51B90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001662")]
			[Address(RVA = "0xB51DFC", Offset = "0xB51DFC", VA = "0xB51DFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000F3")]
		public float volume
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0xB4F548", Offset = "0xB4F548", VA = "0xB4F548")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600128B")]
			[Address(RVA = "0xB51170", Offset = "0xB51170", VA = "0xB51170")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public float pitch
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0xB5118C", Offset = "0xB5118C", VA = "0xB5118C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600128D")]
			[Address(RVA = "0xB511A8", Offset = "0xB511A8", VA = "0xB511A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public AudioClip clip
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0xB511C4", Offset = "0xB511C4", VA = "0xB511C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600128F")]
			[Address(RVA = "0xB511E0", Offset = "0xB511E0", VA = "0xB511E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public float time
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0xB511FC", Offset = "0xB511FC", VA = "0xB511FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001291")]
			[Address(RVA = "0xB4D480", Offset = "0xB4D480", VA = "0xB4D480")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public float length
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0xB51218", Offset = "0xB51218", VA = "0xB51218")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F8")]
		public bool loop
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0xB512D0", Offset = "0xB512D0", VA = "0xB512D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xB512EC", Offset = "0xB512EC", VA = "0xB512EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public bool mute
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0xB5130C", Offset = "0xB5130C", VA = "0xB5130C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001296")]
			[Address(RVA = "0xB51328", Offset = "0xB51328", VA = "0xB51328")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0xB51348", Offset = "0xB51348", VA = "0xB51348")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001298")]
			[Address(RVA = "0xB51364", Offset = "0xB51364", VA = "0xB51364")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public bool isPlaying
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0xB51380", Offset = "0xB51380", VA = "0xB51380")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xB5139C", Offset = "0xB5139C", VA = "0xB5139C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xB4F534", Offset = "0xB4F534", VA = "0xB4F534")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xB515A8", Offset = "0xB515A8", VA = "0xB515A8")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xB4F850", Offset = "0xB4F850", VA = "0xB4F850")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xB515B0", Offset = "0xB515B0", VA = "0xB515B0")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xB515B8", Offset = "0xB515B8", VA = "0xB515B8")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xB50048", Offset = "0xB50048", VA = "0xB50048")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xB4C860", Offset = "0xB4C860", VA = "0xB4C860")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xB515C0", Offset = "0xB515C0", VA = "0xB515C0")]
		public void Play()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xB51620", Offset = "0xB51620", VA = "0xB51620")]
		public void Pause()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xB4C6B4", Offset = "0xB4C6B4", VA = "0xB4C6B4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xB516E8", Offset = "0xB516E8", VA = "0xB516E8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xB4FB14", Offset = "0xB4FB14", VA = "0xB4FB14")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xB4FD54", Offset = "0xB4FD54", VA = "0xB4FD54")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xB4CC04", Offset = "0xB4CC04", VA = "0xB4CC04")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xB51740", Offset = "0xB51740", VA = "0xB51740")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xB5176C", Offset = "0xB5176C", VA = "0xB5176C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D1644", Offset = "0x7D1644")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xB51828", Offset = "0xB51828", VA = "0xB51828")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xB4D000", Offset = "0xB4D000", VA = "0xB4D000")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xB4D07C", Offset = "0xB4D07C", VA = "0xB4D07C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xB4CEB0", Offset = "0xB4CEB0", VA = "0xB4CEB0")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xB4CCFC", Offset = "0xB4CCFC", VA = "0xB4CCFC")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xB51890", Offset = "0xB51890", VA = "0xB51890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D16A8", Offset = "0x7D16A8")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xB51914", Offset = "0xB51914", VA = "0xB51914")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7D170C", Offset = "0x7D170C")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xB51A14", Offset = "0xB51A14", VA = "0xB51A14")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000F5F")]
		Random,
		[Token(Token = "0x4000F60")]
		Sequential
	}
	[Token(Token = "0x20002C0")]
	public enum FreqHint
	{
		[Token(Token = "0x4000F62")]
		None,
		[Token(Token = "0x4000F63")]
		Wide,
		[Token(Token = "0x4000F64")]
		Narrow
	}
	[Token(Token = "0x20002C1")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000F66")]
		VeryLow = -2,
		[Token(Token = "0x4000F67")]
		Low,
		[Token(Token = "0x4000F68")]
		Default,
		[Token(Token = "0x4000F69")]
		High,
		[Token(Token = "0x4000F6A")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20002C2")]
	public class OSPProps
	{
		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CCFE8", Offset = "0x7CCFE8")]
		public bool enableSpatialization;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD020", Offset = "0x7CD020")]
		public bool useFastOverride;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD058", Offset = "0x7CD058")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD058", Offset = "0x7CD058")]
		public float gain;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD0AC", Offset = "0x7CD0AC")]
		public bool enableInvSquare;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD0E4", Offset = "0x7CD0E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD0E4", Offset = "0x7CD0E4")]
		public float volumetric;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD13C", Offset = "0x7CD13C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7CD13C", Offset = "0x7CD13C")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xB510E0", Offset = "0xB510E0", VA = "0xB510E0")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C3")]
	public class SoundFX
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD19C", Offset = "0x7CD19C")]
		public string name;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD1D4", Offset = "0x7CD1D4")]
		public SoundFXNext playback;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD20C", Offset = "0x7CD20C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD20C", Offset = "0x7CD20C")]
		public float volume;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD260", Offset = "0x7CD260")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7CD260", Offset = "0x7CD260")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD2BC", Offset = "0x7CD2BC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7CD2BC", Offset = "0x7CD2BC")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD31C", Offset = "0x7CD31C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD354", Offset = "0x7CD354")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD38C", Offset = "0x7CD38C")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD3C4", Offset = "0x7CD3C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD3C4", Offset = "0x7CD3C4")]
		public float spread;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD41C", Offset = "0x7CD41C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7CD41C", Offset = "0x7CD41C")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD470", Offset = "0x7CD470")]
		public SoundPriority priority;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD4A8", Offset = "0x7CD4A8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x7CD4A8", Offset = "0x7CD4A8")]
		public Vector2 delay;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD504", Offset = "0x7CD504")]
		public bool looping;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7CD53C", Offset = "0x7CD53C")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000FC")]
		public int Length
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xB52040", Offset = "0xB52040", VA = "0xB52040")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000FD")]
		public bool IsValid
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xB5205C", Offset = "0xB5205C", VA = "0xB5205C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FE")]
		public SoundGroup Group
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xB52100", Offset = "0xB52100", VA = "0xB52100")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0xB52108", Offset = "0xB52108", VA = "0xB52108")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xB4F43C", Offset = "0xB4F43C", VA = "0xB4F43C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000100")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0xB4F470", Offset = "0xB4F470", VA = "0xB4F470")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xB509F0", Offset = "0xB509F0", VA = "0xB509F0")]
		public SoundFX()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xB4F36C", Offset = "0xB4F36C", VA = "0xB4F36C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xB4F494", Offset = "0xB4F494", VA = "0xB4F494")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xB4F448", Offset = "0xB4F448", VA = "0xB4F448")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xB52130", Offset = "0xB52130", VA = "0xB52130")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xB4F488", Offset = "0xB4F488", VA = "0xB4F488")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xB5222C", Offset = "0xB5222C", VA = "0xB5222C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xB52308", Offset = "0xB52308", VA = "0xB52308")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xB5241C", Offset = "0xB5241C", VA = "0xB5241C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xB524A8", Offset = "0xB524A8", VA = "0xB524A8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xB5253C", Offset = "0xB5253C", VA = "0xB5253C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xB525C8", Offset = "0xB525C8", VA = "0xB525C8")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xB52654", Offset = "0xB52654", VA = "0xB52654")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C4")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x17000101")]
		public SoundFX soundFX
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0xB526CC", Offset = "0xB526CC", VA = "0xB526CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		public string name
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xB527C0", Offset = "0xB527C0", VA = "0xB527C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xB527C8", Offset = "0xB527C8", VA = "0xB527C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public int Length
		{
			[Token(Token = "0x60012CB")]
			[Address(RVA = "0xB527D0", Offset = "0xB527D0", VA = "0xB527D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000104")]
		public bool IsValid
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0xB52814", Offset = "0xB52814", VA = "0xB52814")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xB526FC", Offset = "0xB526FC", VA = "0xB526FC")]
		private void Init()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xB5284C", Offset = "0xB5284C", VA = "0xB5284C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xB52884", Offset = "0xB52884", VA = "0xB52884")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xB528C4", Offset = "0xB528C4", VA = "0xB528C4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xB4A280", Offset = "0xB4A280", VA = "0xB4A280")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xB5290C", Offset = "0xB5290C", VA = "0xB5290C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xB5294C", Offset = "0xB5294C", VA = "0xB5294C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xB5299C", Offset = "0xB5299C", VA = "0xB5299C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xB529D4", Offset = "0xB529D4", VA = "0xB529D4")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xB52A14", Offset = "0xB52A14", VA = "0xB52A14")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xB52A4C", Offset = "0xB52A4C", VA = "0xB52A4C")]
		public SoundFXRef()
		{
		}
	}
}
