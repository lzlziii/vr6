using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net.Security;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Cryptography.X509Certificates;
using System.Xml;
using DG.Tweening.Core;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class RespawnStone : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip sfxActivation;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isDynamicFogOn;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color planeColor;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color fogColor;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fogDensity;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator animationController;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isActive;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xC8339C", Offset = "0xC8339C", VA = "0xC8339C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xC835A0", Offset = "0xC835A0", VA = "0xC835A0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xC837BC", Offset = "0xC837BC", VA = "0xC837BC")]
	public void ActivateStone()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xC8382C", Offset = "0xC8382C", VA = "0xC8382C")]
	public void DeactivateStone()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xC83898", Offset = "0xC83898", VA = "0xC83898")]
	public RespawnStone()
	{
	}
}
[Token(Token = "0x2000003")]
public class Trigger_TowerBlocker : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip soundFX;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string wallJumpHintLocKey;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xF0FB80", Offset = "0xF0FB80", VA = "0xF0FB80")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xF0FE54", Offset = "0xF0FE54", VA = "0xF0FE54")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xF0FFC8", Offset = "0xF0FFC8", VA = "0xF0FFC8")]
	public Trigger_TowerBlocker()
	{
	}
}
[Serializable]
[Token(Token = "0x2000004")]
public class DataSlot
{
	[Token(Token = "0x2000172")]
	public enum GameDifficultyENUM
	{
		[Token(Token = "0x4000B80")]
		HARD,
		[Token(Token = "0x4000B81")]
		NORMAL,
		[Token(Token = "0x4000B82")]
		EASY
	}

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DateTime lastSaveDateTime;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int versionID;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameDifficultyENUM gameDifficulty;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool[] lifeCrystals;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool[] tablets;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool[] hooks;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "OptionalFieldAttribute", RVA = "0x62C30C", Offset = "0x62C30C")]
	public bool[] trophiesUnlocked;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[] currentCheckPoints;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameLogicScript.LevelID currentLevel;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int currentHook;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int crystalsCarried;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool hasFinishedTutorial;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameStats gameStats;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xB3F48C", Offset = "0xB3F48C", VA = "0xB3F48C")]
	public DataSlot()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xB3F810", Offset = "0xB3F810", VA = "0xB3F810")]
	public void UpdateTrophyArraySizeIfRequired()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xB3F814", Offset = "0xB3F814", VA = "0xB3F814")]
	public void UpdateArraySizesIfRequired()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB3F7A4", Offset = "0xB3F7A4", VA = "0xB3F7A4")]
	public void setLastSaveDateTimeToNow()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB3FB84", Offset = "0xB3FB84", VA = "0xB3FB84")]
	public string getLastSaveDateTimeLocaleString()
	{
		return null;
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xB3FC48", Offset = "0xB3FC48", VA = "0xB3FC48")]
	public int tabletsCount()
	{
		return default(int);
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xB3FCE0", Offset = "0xB3FCE0", VA = "0xB3FCE0")]
	public int tabletsCount(GameLogicScript.LevelID _LevelID)
	{
		return default(int);
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xB3FDD8", Offset = "0xB3FDD8", VA = "0xB3FDD8")]
	public int lifeCrystalsCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xB3FE70", Offset = "0xB3FE70", VA = "0xB3FE70")]
	public int lifeCrystalsCount(GameLogicScript.LevelID _LevelID)
	{
		return default(int);
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xB3FF28", Offset = "0xB3FF28", VA = "0xB3FF28")]
	public int hooksCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xB3FFC0", Offset = "0xB3FFC0", VA = "0xB3FFC0")]
	public int tabletsTotal()
	{
		return default(int);
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xB3FFC8", Offset = "0xB3FFC8", VA = "0xB3FFC8")]
	public int lifeCrystalsTotal()
	{
		return default(int);
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xB3FFD0", Offset = "0xB3FFD0", VA = "0xB3FFD0")]
	public int hooksTotal()
	{
		return default(int);
	}
}
[Token(Token = "0x2000005")]
public class GameLogicScript : MonoBehaviour
{
	[Token(Token = "0x2000173")]
	public enum VRModes
	{
		[Token(Token = "0x4000B84")]
		Undefined = -1,
		[Token(Token = "0x4000B85")]
		RegularScreen,
		[Token(Token = "0x4000B86")]
		Oculus,
		[Token(Token = "0x4000B87")]
		Vive,
		[Token(Token = "0x4000B88")]
		PSVR
	}

	[Token(Token = "0x2000174")]
	public enum StoreBuildEnum
	{
		[Token(Token = "0x4000B8A")]
		Undefined = -1,
		[Token(Token = "0x4000B8B")]
		Steam,
		[Token(Token = "0x4000B8C")]
		Oculus,
		[Token(Token = "0x4000B8D")]
		OculusGearVR,
		[Token(Token = "0x4000B8E")]
		Viveport,
		[Token(Token = "0x4000B8F")]
		Humble,
		[Token(Token = "0x4000B90")]
		GOG,
		[Token(Token = "0x4000B91")]
		Sony,
		[Token(Token = "0x4000B92")]
		OculusQuest
	}

	[Token(Token = "0x2000175")]
	public enum HMDEnum
	{
		[Token(Token = "0x4000B94")]
		Undefined = -1,
		[Token(Token = "0x4000B95")]
		Vive,
		[Token(Token = "0x4000B96")]
		OculusRift,
		[Token(Token = "0x4000B97")]
		WindowsMR,
		[Token(Token = "0x4000B98")]
		OculusQuest
	}

	[Token(Token = "0x2000176")]
	public enum AudioMixerSnapshotsEnum
	{
		[Token(Token = "0x4000B9A")]
		Game,
		[Token(Token = "0x4000B9B")]
		GameReverbHall,
		[Token(Token = "0x4000B9C")]
		GameReverbRoom,
		[Token(Token = "0x4000B9D")]
		Menu
	}

	[Token(Token = "0x2000177")]
	public enum MixerGroups
	{
		[Token(Token = "0x4000B9F")]
		Default,
		[Token(Token = "0x4000BA0")]
		Footsteps,
		[Token(Token = "0x4000BA1")]
		Fanfare
	}

	[Token(Token = "0x2000178")]
	public enum LevelID
	{
		[Token(Token = "0x4000BA3")]
		Tutorial,
		[Token(Token = "0x4000BA4")]
		Hub,
		[Token(Token = "0x4000BA5")]
		Jungle,
		[Token(Token = "0x4000BA6")]
		City,
		[Token(Token = "0x4000BA7")]
		Sky,
		[Token(Token = "0x4000BA8")]
		Start,
		[Token(Token = "0x4000BA9")]
		JungleChallengeOne,
		[Token(Token = "0x4000BAA")]
		JungleChallengeTwo,
		[Token(Token = "0x4000BAB")]
		JungleChallengeThree,
		[Token(Token = "0x4000BAC")]
		CityChallengeOne,
		[Token(Token = "0x4000BAD")]
		CityChallengeTwo,
		[Token(Token = "0x4000BAE")]
		CityChallengeThree,
		[Token(Token = "0x4000BAF")]
		SkyChallengeOne,
		[Token(Token = "0x4000BB0")]
		SkyChallengeTwo,
		[Token(Token = "0x4000BB1")]
		SkyChallengeThree,
		[Token(Token = "0x4000BB2")]
		FinalChallenge,
		[Token(Token = "0x4000BB3")]
		Flower,
		[Token(Token = "0x4000BB4")]
		Intro
	}

	[Token(Token = "0x2000179")]
	public enum HookID
	{
		[Token(Token = "0x4000BB6")]
		StartingHook,
		[Token(Token = "0x4000BB7")]
		AlphaHook
	}

	[Token(Token = "0x200017A")]
	public enum EndGameStepEnum
	{
		[Token(Token = "0x4000BB9")]
		NONE = -1,
		[Token(Token = "0x4000BBA")]
		FINAL_CRYSTAL,
		[Token(Token = "0x4000BBB")]
		COMPANY,
		[Token(Token = "0x4000BBC")]
		PRODUCER,
		[Token(Token = "0x4000BBD")]
		CREATIVE_DIRECTOR,
		[Token(Token = "0x4000BBE")]
		MUSIC_SOUND,
		[Token(Token = "0x4000BBF")]
		LEVEL_DESIGN,
		[Token(Token = "0x4000BC0")]
		STORY,
		[Token(Token = "0x4000BC1")]
		CONCEPT_ART,
		[Token(Token = "0x4000BC2")]
		MODELS,
		[Token(Token = "0x4000BC3")]
		ART,
		[Token(Token = "0x4000BC4")]
		PS4,
		[Token(Token = "0x4000BC5")]
		THANKS,
		[Token(Token = "0x4000BC6")]
		BACKERS,
		[Token(Token = "0x4000BC7")]
		FINAL,
		[Token(Token = "0x4000BC8")]
		FLOWER
	}

	[Token(Token = "0x200017B")]
	public enum SpeedRunTimerRunningEnum
	{
		[Token(Token = "0x4000BCA")]
		NO,
		[Token(Token = "0x4000BCB")]
		YES,
		[Token(Token = "0x4000BCC")]
		ENDED
	}

	[Token(Token = "0x4000018")]
	public const string gameVersion = "1.4.2";

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameLogicScript gameLogic;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pointAudioInstance;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject pointAudioStatic;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AudioMixerSnapshotsEnum currentAudioMixerSnapshot;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundAmbientScript ambientSound;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup[] outputGroups;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AudioMixerGroup[] outputGroupsStatic;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string playerControllerName;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Game_Controller gameController;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject pauseMenuInstance;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PauseMenu pauseMenu;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isPaused;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float SeatedHeightOffset;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static VRModes vrMode;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static HMDEnum vrHMD;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static StoreBuildEnum storeBuild;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool isLoadActive;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool levelLoading;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public EndGameStepEnum EndGameStep;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int currentSaveSlot;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public DataSlot dataSlot;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float gameStartTime;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource respawnWarningSound;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] notes;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float respawnButtonTimer;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool ignoreRespawnOnButtonUp;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float PauseMenuButtonPressTime;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string[] GameDifficultyLocKeys;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static bool commandLineLock;

	[NonSerialized]
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SpeedRunTimerRunningEnum speedRunTimerRunning;

	[NonSerialized]
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float speedRunTime_StartTimeStamp;

	[NonSerialized]
	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float speedRunTime_EndTimeStamp;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float speedRunTime;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xB47F24", Offset = "0xB47F24", VA = "0xB47F24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xB485C8", Offset = "0xB485C8", VA = "0xB485C8")]
	private static bool CommandLineExists(string CommandLineParameter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xB48664", Offset = "0xB48664", VA = "0xB48664")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xB48AF8", Offset = "0xB48AF8", VA = "0xB48AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xB4909C", Offset = "0xB4909C", VA = "0xB4909C")]
	public void PickUpTablet(int tabletID)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xB493D0", Offset = "0xB493D0", VA = "0xB493D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xB49AD8", Offset = "0xB49AD8", VA = "0xB49AD8")]
	public int GetStartingPositionID(GameObject _target)
	{
		return default(int);
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xB49C1C", Offset = "0xB49C1C", VA = "0xB49C1C")]
	public void StartGame(DataSlot.GameDifficultyENUM gameDifficulty = DataSlot.GameDifficultyENUM.NORMAL, bool startNewGame = false)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xB49FD8", Offset = "0xB49FD8", VA = "0xB49FD8")]
	public void ResetSaveGameSlot(int saveSlot)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xB4674C", Offset = "0xB4674C", VA = "0xB4674C")]
	public void TeleportToLevel(string _level, bool SkipSave = false)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xB4A144", Offset = "0xB4A144", VA = "0xB4A144")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xB4A1E0", Offset = "0xB4A1E0", VA = "0xB4A1E0")]
	public string GetCurrentLevel()
	{
		return null;
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xB4A290", Offset = "0xB4A290", VA = "0xB4A290")]
	public static GameObject PlayClipAtPoint(AudioClip _clip, MixerGroups _outputGroup, Vector3 _position, float _volume, float _maxDistance = 50f, float _spatialBlend = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xB48D20", Offset = "0xB48D20", VA = "0xB48D20")]
	public void PauseGame(string _PauseMenuCanvasName = "PauseMenu_Paused")
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xB4A5B4", Offset = "0xB4A5B4", VA = "0xB4A5B4")]
	public void AdjustPauseMenuPosition()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xB49820", Offset = "0xB49820", VA = "0xB49820")]
	public void TeleportToHub()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB4AD6C", Offset = "0xB4AD6C", VA = "0xB4AD6C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xB4B104", Offset = "0xB4B104", VA = "0xB4B104")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB2EAA0", Offset = "0xB2EAA0", VA = "0xB2EAA0")]
	public static void RecenterTracking()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB4B184", Offset = "0xB4B184", VA = "0xB4B184")]
	public static void SetTrackingUniverse()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB4B4E4", Offset = "0xB4B4E4", VA = "0xB4B4E4")]
	public static float GetPlayerEyeHeight()
	{
		return default(float);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB4B5A0", Offset = "0xB4B5A0", VA = "0xB4B5A0")]
	public static float GetPlayerEyeDepth()
	{
		return default(float);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB48210", Offset = "0xB48210", VA = "0xB48210")]
	public static VRModes GetVRMode()
	{
		return default(VRModes);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xB4B65C", Offset = "0xB4B65C", VA = "0xB4B65C")]
	public static bool isVR()
	{
		return default(bool);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB4ACCC", Offset = "0xB4ACCC", VA = "0xB4ACCC")]
	public static bool isRegularScreen()
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB4B664", Offset = "0xB4B664", VA = "0xB4B664")]
	public string GetLocalizedDifficultyString(DataSlot.GameDifficultyENUM difficulty)
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xB32590", Offset = "0xB32590", VA = "0xB32590")]
	public void Save()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xB49FDC", Offset = "0xB49FDC", VA = "0xB49FDC")]
	public void Delete(int saveSlot)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xB49DDC", Offset = "0xB49DDC", VA = "0xB49DDC")]
	public void Load()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xB4BA78", Offset = "0xB4BA78", VA = "0xB4BA78")]
	private DataSlot LoadSaveSlot(int saveSlot, bool doPostLoad = true)
	{
		return null;
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xB4B7D4", Offset = "0xB4B7D4", VA = "0xB4B7D4")]
	public string GetSaveSlotPath(int saveSlot)
	{
		return null;
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xB4B8EC", Offset = "0xB4B8EC", VA = "0xB4B8EC")]
	public bool GameSlotExists(int saveSlot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xB4C348", Offset = "0xB4C348", VA = "0xB4C348")]
	public string GetSaveSlotInfo(int saveSlot)
	{
		return null;
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xB4B864", Offset = "0xB4B864", VA = "0xB4B864")]
	public static string GetSaveSlotName(int saveSlot)
	{
		return null;
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xB4CA90", Offset = "0xB4CA90", VA = "0xB4CA90")]
	private DataSlot CopyDataSlot(DataSlot dataSlot)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xB4CC04", Offset = "0xB4CC04", VA = "0xB4CC04")]
	public void StartSpeedRunTimer(float _time)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xB4CC14", Offset = "0xB4CC14", VA = "0xB4CC14")]
	public void EndSpeedRunTimer(float _time)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xB4CC2C", Offset = "0xB4CC2C", VA = "0xB4CC2C")]
	public string GetSpeedRunTime()
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB4CC38", Offset = "0xB4CC38", VA = "0xB4CC38")]
	public void ResetSpeedRunTimer()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB4CC44", Offset = "0xB4CC44", VA = "0xB4CC44")]
	public string GetSpeedRun_TimeFormated(float _time)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB4CC70", Offset = "0xB4CC70", VA = "0xB4CC70")]
	public float GetSpeedRun_Time(float _time)
	{
		return default(float);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB4CC98", Offset = "0xB4CC98", VA = "0xB4CC98")]
	public GameLogicScript()
	{
	}
}
[Token(Token = "0x2000006")]
public class LevelManager : MonoBehaviour
{
	[Token(Token = "0x200017C")]
	public enum LevelTypeEnum
	{
		[Token(Token = "0x4000BCE")]
		START,
		[Token(Token = "0x4000BCF")]
		HUB,
		[Token(Token = "0x4000BD0")]
		WORLD,
		[Token(Token = "0x4000BD1")]
		CHALLENGE,
		[Token(Token = "0x4000BD2")]
		PLAYGROUND,
		[Token(Token = "0x4000BD3")]
		TUTORIAL,
		[Token(Token = "0x4000BD4")]
		INTRO
	}

	[Token(Token = "0x200017D")]
	public enum FadingModeEnum
	{
		[Token(Token = "0x4000BD6")]
		NONE,
		[Token(Token = "0x4000BD7")]
		FADE_IN,
		[Token(Token = "0x4000BD8")]
		FADE_OUT,
		[Token(Token = "0x4000BD9")]
		FADE_TELEPORT_IN,
		[Token(Token = "0x4000BDA")]
		FADE_TELEPORT_OUT
	}

	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BE24", Offset = "0x62BE24")]
	private sealed class <FadeToNextScene>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0xAF0C4C", Offset = "0xAF0C4C", VA = "0xAF0C4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0xAF0CBC", Offset = "0xAF0CBC", VA = "0xAF0CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xAEFDDC", Offset = "0xAEFDDC", VA = "0xAEFDDC")]
		[DebuggerHidden]
		public <FadeToNextScene>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xAF0B3C", Offset = "0xAF0B3C", VA = "0xAF0B3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xAF0B40", Offset = "0xAF0B40", VA = "0xAF0B40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xAF0C54", Offset = "0xAF0C54", VA = "0xAF0C54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C31C", Offset = "0x62C31C")]
	public GameObject gameLogicInstance;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C354", Offset = "0x62C354")]
	public GameObject characterRegularInstance;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject characterOculusInstance;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject character;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlaygroundManager playgroundManager;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpeedRunResults speedRunResults;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C38C", Offset = "0x62C38C")]
	public LevelTypeEnum levelType;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameLogicScript.LevelID levelID;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C3C4", Offset = "0x62C3C4")]
	public GameObject[] tabletReferences;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] energyCrystalReferences;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] levelSpecificObjects;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] StartingPositions;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject normalMode;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioMixerSnapshot defaultSnapshot;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EndGameCredits endGameCredits;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C3FC", Offset = "0x62C3FC")]
	public Shader fadeShader;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material fadeMaterial;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public FadingModeEnum fadingMode;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C434", Offset = "0x62C434")]
	[HideInInspector]
	public bool isVR;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C480", Offset = "0x62C480")]
	public GameObject timerCanvasInstance;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public TimerCanvasController timerCanvasController;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C4C8", Offset = "0x62C4C8")]
	public AudioMixer AudioMixerMain;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C500", Offset = "0x62C500")]
	[HideInInspector]
	public Resolution[] resolutions;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public string[] qualityLevels;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimationCurve FadeInCurve;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AnimationCurve FadeOutCurve;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameLogicScript gameLogic;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float fadeAlpha;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float fadeInRate;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float fadeOutRate;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string nextLevel;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xAEDF68", Offset = "0xAEDF68", VA = "0xAEDF68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xAEEB28", Offset = "0xAEEB28", VA = "0xAEEB28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xAEF9FC", Offset = "0xAEF9FC", VA = "0xAEF9FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xAEFD3C", Offset = "0xAEFD3C", VA = "0xAEFD3C")]
	public void LoadNewLevel(string _level)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xAEFB4C", Offset = "0xAEFB4C", VA = "0xAEFB4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x630EE8", Offset = "0x630EE8")]
	private IEnumerator FadeToNextScene(string _level)
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xAEFBAC", Offset = "0xAEFBAC", VA = "0xAEFBAC")]
	public void ApplicationLoadLevel(string _level)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xAEFE08", Offset = "0xAEFE08", VA = "0xAEFE08")]
	public void setFadeOutPlaneAlpha(float _alpha)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xAEFEAC", Offset = "0xAEFEAC", VA = "0xAEFEAC")]
	public void setFadeOutPlaneVisible(bool _visible)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xAEF0A0", Offset = "0xAEF0A0", VA = "0xAEF0A0")]
	private void Start_Intro()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xAEF2DC", Offset = "0xAEF2DC", VA = "0xAEF2DC")]
	private void Start_Tutorial()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xAEF768", Offset = "0xAEF768", VA = "0xAEF768")]
	private void Start_Hub()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xAEF904", Offset = "0xAEF904", VA = "0xAEF904")]
	private void Start_CitySky()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xAEFF14", Offset = "0xAEFF14", VA = "0xAEFF14")]
	public int GetStartingPositionID(GameObject _target)
	{
		return default(int);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xAF0004", Offset = "0xAF0004", VA = "0xAF0004")]
	private void Start_Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xAF0304", Offset = "0xAF0304", VA = "0xAF0304")]
	private void StartGameAnalytics()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xAF04C0", Offset = "0xAF04C0", VA = "0xAF04C0")]
	public void SetVolumeMaster(float _Volume)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xAF05CC", Offset = "0xAF05CC", VA = "0xAF05CC")]
	public void SetVolumeSoundFX(float _Volume)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xAF064C", Offset = "0xAF064C", VA = "0xAF064C")]
	public void SetVolumeMusic(float _Volume)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xAF06CC", Offset = "0xAF06CC", VA = "0xAF06CC")]
	public void SetVolumeAmbience(float _Volume)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xAF074C", Offset = "0xAF074C", VA = "0xAF074C")]
	public void SetVolumeNarration(float _Volume)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xAF0540", Offset = "0xAF0540", VA = "0xAF0540")]
	private float ConvertSingleToDecibles(float _Volume)
	{
		return default(float);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xAF07CC", Offset = "0xAF07CC", VA = "0xAF07CC")]
	public void UpdateAudioVolumes()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xAF088C", Offset = "0xAF088C", VA = "0xAF088C")]
	public void UpdateVideoSettings()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xAF0B1C", Offset = "0xAF0B1C", VA = "0xAF0B1C")]
	public LevelManager()
	{
	}
}
[Token(Token = "0x2000007")]
public class LODSystem2 : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lodHigh;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lodLow;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lod0Distance;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform eyeMiddle;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isLODHigh;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xAECDFC", Offset = "0xAECDFC", VA = "0xAECDFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xAECEC0", Offset = "0xAECEC0", VA = "0xAECEC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xAED0EC", Offset = "0xAED0EC", VA = "0xAED0EC")]
	public LODSystem2()
	{
	}
}
[Token(Token = "0x2000008")]
public class Murals : MonoBehaviour
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] murals;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameLogicScript.LevelID levelID;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xB00CD4", Offset = "0xB00CD4", VA = "0xB00CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xB00DE4", Offset = "0xB00DE4", VA = "0xB00DE4")]
	public Murals()
	{
	}
}
[Token(Token = "0x2000009")]
public class Note_FollowHead : Text_FollowHead
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float destroyTimerEnd;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string localizedFontAssetKey;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB01484", Offset = "0xB01484", VA = "0xB01484")]
	public void SetNoteText(Transform parent, Transform _eyeMiddle, string updateText, float timeToDisplay = 6f, float scale = 1f)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB01AB8", Offset = "0xB01AB8", VA = "0xB01AB8", Slot = "4")]
	public override void OnAwake()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xB01B5C", Offset = "0xB01B5C", VA = "0xB01B5C", Slot = "5")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xB01B60", Offset = "0xB01B60", VA = "0xB01B60", Slot = "6")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xB01C08", Offset = "0xB01C08", VA = "0xB01C08")]
	public Note_FollowHead()
	{
	}
}
[Token(Token = "0x200000A")]
public class PlayerInputScript : MonoBehaviour
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Game_Controller gameController;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gameLogicInstance;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isTouchingGround;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isJumping;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool isEditing;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool isGrappling;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isGrappling2;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool isInElevator;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool isRegularScreenMode;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool isGravityShift;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float movementSliding;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 gravity;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fxDustInstance;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject fxSandInstance;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float grapplingDrag;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector2 leftStick;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public LayerMask physicsLayerNoRope;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string currentWalkingMaterial;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C55C", Offset = "0x62C55C")]
	public AudioClip[] landingSoundsPath;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] landingSoundsGrass;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip[] landingSoundsForestGround;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip[] landingSoundsRock;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip[] landingSoundsLeaves;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip[] landingSoundsSand;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip[] landingSoundsWood;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip[] landingSoundsMetal;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip[] characterTeleport;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject currentRespawnStone;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float accelerationMaxWalking;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float accelerationMaxRope;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float accelerationMaxSwing;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float movementSpeedMax;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float lastHeightCoordinate;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int orbCount;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] HUDItems;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C594", Offset = "0x62C594")]
	public GameObject confortFloor1;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject confortFloor2;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float autoRespawnTimer;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool isAutoRespawn;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip autoRespawnSFX;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioSource autoRespawnSource;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform forwardDirectionMarker;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform forwardDirectionMarkerHandController;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform leftHandController;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Transform eyeMiddle;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform trackingSpace;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject quad;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject fxFullScreen;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SoundFootstepsScript soundFootsteps;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool isRespawnDirectionOriginal;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C5CC", Offset = "0x62C5CC")]
	public Player_CrossHair player_CrossHair;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C604", Offset = "0x62C604")]
	public Rigidbody rigidBody;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C63C", Offset = "0x62C63C")]
	public Transform SubtitlePosition;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Transform NotePosition;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float movementForceOnGround;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float movementForceOnAir;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float currentMovementForce;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float dragOnAir;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 movementDirection;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector2 controllerTurning;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float previousVelocity;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float landingSoundTimer;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float previousDropVelocity;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 previousVelocityVector;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float controllerTurningTimer;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float controllerTurningTarget;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float mouseLookSensitivity;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private LevelManager levelManager;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private GameObject note_FollowHead;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private GameObject subtitles_FollowHead;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float noRopesCooldown;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB8DC80", Offset = "0xB8DC80", VA = "0xB8DC80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB8DDF0", Offset = "0xB8DDF0", VA = "0xB8DDF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB8E218", Offset = "0xB8E218", VA = "0xB8E218")]
	private void Update()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB8E750", Offset = "0xB8E750", VA = "0xB8E750")]
	public void InstanceNote(string message, float destroyTimer = 6f)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB9080C", Offset = "0xB9080C", VA = "0xB9080C")]
	public void InstanceNoteBottom(string message, float destroyTimer = 6f, float scale = 1f)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xB90B34", Offset = "0xB90B34", VA = "0xB90B34")]
	public void InstanceSubtitles(EventSubtitlesSequence eventSubtitlesSequence)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xB87AB0", Offset = "0xB87AB0", VA = "0xB87AB0")]
	public void EnableHudDisplay(Options.StaticCueTypeEnum _Option_VR_Cage)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xB897B8", Offset = "0xB897B8", VA = "0xB897B8")]
	public void EnableComfortTurning(bool Enabled)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xB8E1A0", Offset = "0xB8E1A0", VA = "0xB8E1A0")]
	public void Enable3DInput(bool _Enabled)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xB90EFC", Offset = "0xB90EFC", VA = "0xB90EFC")]
	private void UpdateHookAngles(float force_angle)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xB91014", Offset = "0xB91014", VA = "0xB91014")]
	private void SetController(Player_MasterRope _targetRope, bool _isActive)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xB8798C", Offset = "0xB8798C", VA = "0xB8798C")]
	public void EnableCrossHair(bool CrossHairOn = true)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xB89698", Offset = "0xB89698", VA = "0xB89698")]
	public void EnableAdvancedRope()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xB91324", Offset = "0xB91324", VA = "0xB91324")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xB91858", Offset = "0xB91858", VA = "0xB91858")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xB901AC", Offset = "0xB901AC", VA = "0xB901AC")]
	private void UpdateLandingSound()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xB91C70", Offset = "0xB91C70", VA = "0xB91C70")]
	public void SetCharacterRotation(float _rotation)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xB8EA64", Offset = "0xB8EA64", VA = "0xB8EA64")]
	private void UpdateControllerTurning()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xB8ED50", Offset = "0xB8ED50", VA = "0xB8ED50")]
	private void UpdatePlayerForwardDirTransform()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xB8EF90", Offset = "0xB8EF90", VA = "0xB8EF90")]
	private void UpdateIsTouchingGround()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB9124C", Offset = "0xB9124C", VA = "0xB9124C")]
	public void Teleport()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB92030", Offset = "0xB92030", VA = "0xB92030")]
	public void SetRespawnStone(GameObject _stone)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB92380", Offset = "0xB92380", VA = "0xB92380")]
	public void Respawn()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xB927E8", Offset = "0xB927E8", VA = "0xB927E8")]
	public void MoveCharacter(Transform _SpawnPoint, bool _ResetRotation = false)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xB929F0", Offset = "0xB929F0", VA = "0xB929F0")]
	public void ResetRotationToTarget(Transform _target)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB92B18", Offset = "0xB92B18", VA = "0xB92B18")]
	public void RestartChallengeLevel()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB90674", Offset = "0xB90674", VA = "0xB90674")]
	private void UpdateAutoRespawn()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB92CB8", Offset = "0xB92CB8", VA = "0xB92CB8")]
	public PlayerInputScript()
	{
	}
}
[Token(Token = "0x200000B")]
public class SoundAmbientScript : MonoBehaviour
{
	[Token(Token = "0x200017F")]
	public enum AmbientEnums
	{
		[Token(Token = "0x4000BDE")]
		Wind,
		[Token(Token = "0x4000BDF")]
		Indoors,
		[Token(Token = "0x4000BE0")]
		City,
		[Token(Token = "0x4000BE1")]
		Sky
	}

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float masterVolume;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeSpeed;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentAmbient;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int targetAmbient;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isFirstLayer;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] ambients;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource[] ambientLayers;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xC973F4", Offset = "0xC973F4", VA = "0xC973F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xC97454", Offset = "0xC97454", VA = "0xC97454")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xC978EC", Offset = "0xC978EC", VA = "0xC978EC")]
	public void ChangeAmbient(int _ambientID)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xC97B80", Offset = "0xC97B80", VA = "0xC97B80")]
	public SoundAmbientScript()
	{
	}
}
[Token(Token = "0x200000C")]
public class SoundMusicScript : MonoBehaviour
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float masterVolume;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeSpeed;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] songs;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isFirstLayer;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int currentSong;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int targetSong;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource[] musicLayers;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xC985D0", Offset = "0xC985D0", VA = "0xC985D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xC98630", Offset = "0xC98630", VA = "0xC98630")]
	private void Update()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xC98AC8", Offset = "0xC98AC8", VA = "0xC98AC8")]
	public void PlayAreaMusic(int _musicID, bool _Loop = true)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xC98E10", Offset = "0xC98E10", VA = "0xC98E10")]
	public void SetVolume(float volume)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xC98EA8", Offset = "0xC98EA8", VA = "0xC98EA8")]
	public SoundMusicScript()
	{
	}
}
[Token(Token = "0x200000D")]
public class Subtitles_FollowHead : Text_FollowHead
{
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EventSubtitlesSequence eventSubtitlesSequence;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int subtitleNumber;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float subtitleTimer;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerInputScript playerInputScript;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string localizedFontAssetKey;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xF030FC", Offset = "0xF030FC", VA = "0xF030FC")]
	public void SetEventSubtitlesSequence(Transform _eyeMiddle, EventSubtitlesSequence setSventSubtitlesSequence, Vector3 position, float textVerticalOffset = -2.5f)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xF03848", Offset = "0xF03848", VA = "0xF03848", Slot = "4")]
	public override void OnAwake()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xF038AC", Offset = "0xF038AC", VA = "0xF038AC", Slot = "5")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xF038B0", Offset = "0xF038B0", VA = "0xF038B0", Slot = "6")]
	public override void OnUpdate()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xF03B0C", Offset = "0xF03B0C", VA = "0xF03B0C")]
	public Subtitles_FollowHead()
	{
	}
}
[Token(Token = "0x200000E")]
public abstract class Text_FollowHead : MonoBehaviour
{
	[Token(Token = "0x2000180")]
	protected enum PositionMode
	{
		[Token(Token = "0x4000BE3")]
		FollowGaze,
		[Token(Token = "0x4000BE4")]
		FixedPosition,
		[Token(Token = "0x4000BE5")]
		FaceDirection
	}

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected PositionMode positionMode;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Transform eyeMiddle;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro text;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C674", Offset = "0x62C674")]
	public float MaxTextDistance;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MinTextDistance;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Scale;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float IntersectionHorizontalSpacing;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float IntersectionVerticalSpacing;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float IntersectionVerticalOffset;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float fadeInTime;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool visible;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int RaycastLayerMask;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Ray[] TextRaycasts;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] LastIntersectionPositions;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] ItersectionPointInRange;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] HistoryBuffer;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int HistoryBufferIdx;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float ClosestDistance;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool FirstFrame;

	[Token(Token = "0x600008D")]
	public abstract void OnAwake();

	[Token(Token = "0x600008E")]
	public abstract void OnStart();

	[Token(Token = "0x600008F")]
	public abstract void OnUpdate();

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xF08D78", Offset = "0xF08D78", VA = "0xF08D78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xF08E90", Offset = "0xF08E90", VA = "0xF08E90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xF08E9C", Offset = "0xF08E9C", VA = "0xF08E9C")]
	private void SetVisible(bool b)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xF08F8C", Offset = "0xF08F8C", VA = "0xF08F8C")]
	private void UpdatePauseMenuVisibility()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xF08F90", Offset = "0xF08F90", VA = "0xF08F90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xF095FC", Offset = "0xF095FC", VA = "0xF095FC")]
	private float GetClosestIntersection()
	{
		return default(float);
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xF0993C", Offset = "0xF0993C", VA = "0xF0993C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xF03B10", Offset = "0xF03B10", VA = "0xF03B10")]
	protected Text_FollowHead()
	{
	}
}
[Token(Token = "0x200000F")]
public class Input_3DHook_Targeting : MonoBehaviour
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animController;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask rayMask;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Player_CrossHair crossHair;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform input3DCrossHair;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform hook;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 currentSize;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer cachedRenderer;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xAEA694", Offset = "0xAEA694", VA = "0xAEA694")]
	private void Start()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xAEA6FC", Offset = "0xAEA6FC", VA = "0xAEA6FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xAEB00C", Offset = "0xAEB00C", VA = "0xAEB00C")]
	public Input_3DHook_Targeting()
	{
	}
}
[Token(Token = "0x2000010")]
public class MasterRope_Hook : MonoBehaviour
{
	[Token(Token = "0x2000181")]
	private delegate void DynamicUpdate();

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C6AC", Offset = "0x62C6AC")]
	public GameObject fxSparkInstance;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fxDustInstance;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fxSandInstance;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject fxGreenInstance;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fxWoodInstance;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fxLeafInstance;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C6E4", Offset = "0x62C6E4")]
	public AudioClip[] sfxHitRock;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] sfxHitMetal;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] sfxHitLeaves;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] sfxHitWood;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] sfxHitSand;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] sfxHitForestGround;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip[] sfxHitGrass;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip[] sfxHitPath;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip[] sfxRetract;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip[] sfxLaunchLong;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip[] sfxLaunchShort;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip[] sfxReturned;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C71C", Offset = "0x62C71C")]
	public GameObject hookGFX;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C754", Offset = "0x62C754")]
	public AudioSource sourceLaunch;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource sourceRetract;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C78C", Offset = "0x62C78C")]
	public Transform movingTarget;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C7C4", Offset = "0x62C7C4")]
	public Rigidbody rigidBody;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private DynamicUpdate dynamicUpdate;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Player_MasterRope playerMasterRope;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform previousMarker;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float returnSpeed;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float maxDistance;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isNoConnect;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int bounceCount;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Game_Controller gameController;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xAF7434", Offset = "0xAF7434", VA = "0xAF7434")]
	public void Initialize(Player_MasterRope _playerMasterRope, Transform _previousMarker, bool _isTrigger, float _ropeLength)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xAF76D4", Offset = "0xAF76D4", VA = "0xAF76D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xAF7B00", Offset = "0xAF7B00", VA = "0xAF7B00")]
	private void UpdateDrawOn()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xAF7B8C", Offset = "0xAF7B8C", VA = "0xAF7B8C")]
	private void UpdateFlyingAway()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xAF7F2C", Offset = "0xAF7F2C", VA = "0xAF7F2C")]
	private void UpdateConnected()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xAF7F30", Offset = "0xAF7F30", VA = "0xAF7F30")]
	private void UpdateConnectedToMoving()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xAF8000", Offset = "0xAF8000", VA = "0xAF8000")]
	private void UpdateReturning()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xAF7CB4", Offset = "0xAF7CB4", VA = "0xAF7CB4")]
	public void Return()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xAF8460", Offset = "0xAF8460", VA = "0xAF8460")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xAFA6A4", Offset = "0xAFA6A4", VA = "0xAFA6A4")]
	private void CreateHookHitSparks(Collision _collision)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xAF9E30", Offset = "0xAF9E30", VA = "0xAF9E30")]
	private void CreateDust(Collision _collision, GameObject _gfx, float _minSize, float _maxSize, bool _isDistance = true, [Optional] GameObject _pieceGFX)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xAFA9F0", Offset = "0xAFA9F0", VA = "0xAFA9F0")]
	public bool IsAttached()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xAFAA1C", Offset = "0xAFAA1C", VA = "0xAFAA1C")]
	public MasterRope_Hook()
	{
	}
}
[Token(Token = "0x2000011")]
public class MasterRope_RopePiece : MonoBehaviour
{
	[Token(Token = "0x2000182")]
	private delegate void DynamicUpdate();

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DynamicUpdate dynamicUpdate;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform previousTarget;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform nextTarget;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform returnTarget;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float returnSpeed;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xAFAA64", Offset = "0xAFAA64", VA = "0xAFAA64")]
	public void Initialize(Transform _previousTarget, Transform _nextTarget, Transform _returnTarget)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xAFAB3C", Offset = "0xAFAB3C", VA = "0xAFAB3C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xAFAF68", Offset = "0xAFAF68", VA = "0xAFAF68")]
	private void Update_Pull()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xAFB13C", Offset = "0xAFB13C", VA = "0xAFB13C")]
	private void UpdateReturning()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xAFB3D8", Offset = "0xAFB3D8", VA = "0xAFB3D8")]
	public void Return()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xAFB53C", Offset = "0xAFB53C", VA = "0xAFB53C")]
	public MasterRope_RopePiece()
	{
	}
}
[Token(Token = "0x2000012")]
public class MasterRope_RopePieceBall : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform target;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xAFB584", Offset = "0xAFB584", VA = "0xAFB584")]
	public void Initialize(Transform _target)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xAFB58C", Offset = "0xAFB58C", VA = "0xAFB58C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xAFB60C", Offset = "0xAFB60C", VA = "0xAFB60C")]
	public MasterRope_RopePieceBall()
	{
	}
}
[Token(Token = "0x2000013")]
public class MasterRope_RopePieceCylinder : MonoBehaviour
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform startTarget;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform endTarget;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody character;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 offset;

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xAFB614", Offset = "0xAFB614", VA = "0xAFB614")]
	public void Initialize(Transform _start, Transform _end, Rigidbody _character, Vector3 _offset)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xAFB770", Offset = "0xAFB770", VA = "0xAFB770")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xAFBC54", Offset = "0xAFBC54", VA = "0xAFBC54")]
	public MasterRope_RopePieceCylinder()
	{
	}
}
[Token(Token = "0x2000014")]
public interface Player_AbilityInterface
{
	[Token(Token = "0x60000B4")]
	void updateControls(bool _button);
}
[Token(Token = "0x2000015")]
public class Player_JumpScript : MonoBehaviour, Player_AbilityInterface
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerInputScript playerInputScript;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] characterJump;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform eyeMiddle;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float jumpForce;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float jumpTime;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool jumpMode;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool walljumpMode;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool isButtonPressed;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool isButtonLocked;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float fxTimer;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float wallJumpTime;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 wallJumpDirection;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isAbilityButton;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject dustFXHue;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xB96B74", Offset = "0xB96B74", VA = "0xB96B74", Slot = "4")]
	public void updateControls(bool _button)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xB96B80", Offset = "0xB96B80", VA = "0xB96B80")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xB96C1C", Offset = "0xB96C1C", VA = "0xB96C1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xB97320", Offset = "0xB97320", VA = "0xB97320")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB97140", Offset = "0xB97140", VA = "0xB97140")]
	private void UpdateWalljump()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB97688", Offset = "0xB97688", VA = "0xB97688")]
	private Vector3 FindWall()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB980F0", Offset = "0xB980F0", VA = "0xB980F0")]
	public Player_JumpScript()
	{
	}
}
[Token(Token = "0x2000016")]
public class Player_MasterRope : MonoBehaviour
{
	[Token(Token = "0x2000183")]
	private delegate void DynamicUpdate();

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerInputScript playerInputScript;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hookInstance;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hookLongInstance;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ropeInstance;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ropeCylinderInstance;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ropeBallInstance;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isAttached;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool isLeft;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float ropeLength;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C7FC", Offset = "0x62C7FC")]
	public Transform handAnchor;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform eyeMarker;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform ropeStartMarker;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform ropeMiddleMarker;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C834", Offset = "0x62C834")]
	public Transform input3DRopeStartMarker;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform RopeStart_ViveWand;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform RopeStart_OculusTouch;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform RopeStart_MRMotionController;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C86C", Offset = "0x62C86C")]
	public GameObject input3DControllerHook;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject Hook_ViveWand;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject Hook_OculusTouch;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Hook_MRMotionController;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool is3DInputDetected;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Player_MasterRope otherPlayer_MasterRope;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool is3DInputMode;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C8A4", Offset = "0x62C8A4")]
	public Transform ropeStartMarkerStored;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 ropeStartOffset;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private DynamicUpdate dynamicUpdate;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private DynamicUpdate dynamicFixedUpdate;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Game_Controller gameController;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject hook;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private MasterRope_Hook hookScript;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject[] ropePieces;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject[] ropeCylinder;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject ropeCylinderPlayer;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool isLocked;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool isTrigger;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float ropeSwingRadius;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float ropeSwingRadiusMin;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float dragTimer;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Rigidbody grabbedTarget;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float hookDeadzone;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float inputPower;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB980F8", Offset = "0xB980F8", VA = "0xB980F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xB980FC", Offset = "0xB980FC", VA = "0xB980FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xB982CC", Offset = "0xB982CC", VA = "0xB982CC")]
	public void GetHooksForHMD()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xB9838C", Offset = "0xB9838C", VA = "0xB9838C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xB984A4", Offset = "0xB984A4", VA = "0xB984A4")]
	private void Update_Ready()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xB98A00", Offset = "0xB98A00", VA = "0xB98A00")]
	private void Update_Launched()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xB98BCC", Offset = "0xB98BCC", VA = "0xB98BCC")]
	private void Update_Returning()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xB98BD0", Offset = "0xB98BD0", VA = "0xB98BD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xB98C74", Offset = "0xB98C74", VA = "0xB98C74")]
	private void FixedUpdate_DirectPull()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xB98FF0", Offset = "0xB98FF0", VA = "0xB98FF0")]
	private void FixedUpdate_Pull()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xB99504", Offset = "0xB99504", VA = "0xB99504")]
	private void FixedUpdate_Swing()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB99B50", Offset = "0xB99B50", VA = "0xB99B50")]
	private void FixedUpdate_MixedRope()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB9A86C", Offset = "0xB9A86C", VA = "0xB9A86C")]
	private void FixedUpdate_MixedPull()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xB9B658", Offset = "0xB9B658", VA = "0xB9B658")]
	private void FixedUpdate_Grabbing()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xB9BCEC", Offset = "0xB9BCEC", VA = "0xB9BCEC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB98560", Offset = "0xB98560", VA = "0xB98560")]
	private void RopeLaunch(bool _isTrigger)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB98AB4", Offset = "0xB98AB4", VA = "0xB98AB4")]
	private void Return()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB9BE98", Offset = "0xB9BE98", VA = "0xB9BE98")]
	public void AttachRope(Rigidbody _target, Vector3 _position, [Optional] Rigidbody _grabbedTarget)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB91D80", Offset = "0xB91D80", VA = "0xB91D80")]
	public void ReturnRope()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB9C164", Offset = "0xB9C164", VA = "0xB9C164")]
	public bool GetIf3DControllerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xB91168", Offset = "0xB91168", VA = "0xB91168")]
	public void TrackedCrosshair(bool _isActive)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xB8985C", Offset = "0xB8985C", VA = "0xB8985C")]
	public void SetHookAngle(float hook_angle)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xB9C208", Offset = "0xB9C208", VA = "0xB9C208")]
	public Player_MasterRope()
	{
	}
}
[Token(Token = "0x2000017")]
public class Game_Controller : MonoBehaviour
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float inputStrafe;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float inputWalk;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float inputTurn;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool inputQuickTurn;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool inputExtendRope;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool inputJump;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool inputStopRopes;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool inputUse;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C8DC", Offset = "0x62C8DC")]
	public LayoutHelp layoutHelp_Left;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayoutHelp layoutHelp_Right;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xB4D3D0", Offset = "0xB4D3D0", VA = "0xB4D3D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xB4D48C", Offset = "0xB4D48C", VA = "0xB4D48C")]
	public void Update3DInputEnabled()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xB4D57C", Offset = "0xB4D57C", VA = "0xB4D57C")]
	public void UpdateLayoutHelp_Pico(string categoryName)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xB4DFFC", Offset = "0xB4DFFC", VA = "0xB4DFFC")]
	public Game_Controller()
	{
	}
}
[Token(Token = "0x2000018")]
public static class Player
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float deadZone;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float triggerDeadZone;

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB81038", Offset = "0xB81038", VA = "0xB81038")]
	public static bool GetButtonA()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xB8C9AC", Offset = "0xB8C9AC", VA = "0xB8C9AC")]
	public static bool GetButtonDownB()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB8CA14", Offset = "0xB8CA14", VA = "0xB8CA14")]
	public static bool GetButtonUpB()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB8CA7C", Offset = "0xB8CA7C", VA = "0xB8CA7C")]
	public static bool GetButtonB()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB810A0", Offset = "0xB810A0", VA = "0xB810A0")]
	public static bool GetButtonY()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB8CAE4", Offset = "0xB8CAE4", VA = "0xB8CAE4")]
	public static bool GetButtonUpY()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB8CB4C", Offset = "0xB8CB4C", VA = "0xB8CB4C")]
	public static bool GetButtonX()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB8CBB4", Offset = "0xB8CBB4", VA = "0xB8CBB4")]
	public static bool GetButtonDownX()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB8CC1C", Offset = "0xB8CC1C", VA = "0xB8CC1C")]
	public static bool GetButtonUpX()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB8CC84", Offset = "0xB8CC84", VA = "0xB8CC84")]
	public static bool GetButtonDownMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB83E34", Offset = "0xB83E34", VA = "0xB83E34")]
	public static bool GetButtonUpMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB8CD28", Offset = "0xB8CD28", VA = "0xB8CD28")]
	public static bool GetButtonMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB8CDCC", Offset = "0xB8CDCC", VA = "0xB8CDCC")]
	public static Vector2 GetLeftThumbstick()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB8CE34", Offset = "0xB8CE34", VA = "0xB8CE34")]
	public static Vector2 GetRightThumbstick()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB8CE9C", Offset = "0xB8CE9C", VA = "0xB8CE9C")]
	public static bool GetLeftTriggerButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB8CF04", Offset = "0xB8CF04", VA = "0xB8CF04")]
	public static bool GetRightTriggerButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB8CF6C", Offset = "0xB8CF6C", VA = "0xB8CF6C")]
	public static bool GetLeftGripButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB8CFD4", Offset = "0xB8CFD4", VA = "0xB8CFD4")]
	public static bool GetRightGripButton()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB8D03C", Offset = "0xB8D03C", VA = "0xB8D03C")]
	public static float GetLeftTriggerAnalogue()
	{
		return default(float);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB8D0A4", Offset = "0xB8D0A4", VA = "0xB8D0A4")]
	public static float GetRightTriggerAnalogue()
	{
		return default(float);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB8D10C", Offset = "0xB8D10C", VA = "0xB8D10C")]
	public static float GetLeftGripAnalogue()
	{
		return default(float);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB8D174", Offset = "0xB8D174", VA = "0xB8D174")]
	public static float GetRightGripAnalogue()
	{
		return default(float);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB81210", Offset = "0xB81210", VA = "0xB81210")]
	public static bool GetMenuSelect()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB83ED8", Offset = "0xB83ED8", VA = "0xB83ED8")]
	public static bool GetMenuBack()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB84690", Offset = "0xB84690", VA = "0xB84690")]
	public static bool GetJump()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB8D1DC", Offset = "0xB8D1DC", VA = "0xB8D1DC")]
	public static bool GetRespawn()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB8D238", Offset = "0xB8D238", VA = "0xB8D238")]
	public static bool GetRespawnButtonDown()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB8D294", Offset = "0xB8D294", VA = "0xB8D294")]
	public static bool GetRespawnButtonUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB8143C", Offset = "0xB8143C", VA = "0xB8143C")]
	public static bool GetResetSaveSlot()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB8D2F0", Offset = "0xB8D2F0", VA = "0xB8D2F0")]
	public static bool GetExtendLeftHook()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB8D34C", Offset = "0xB8D34C", VA = "0xB8D34C")]
	public static bool GetExtendRightHook()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB8D3A8", Offset = "0xB8D3A8", VA = "0xB8D3A8")]
	public static bool GetStopBothRopes()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB8D404", Offset = "0xB8D404", VA = "0xB8D404")]
	public static bool GetExtendBothRopes()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB80EB4", Offset = "0xB80EB4", VA = "0xB80EB4")]
	public static float GetWalk()
	{
		return default(float);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB80F78", Offset = "0xB80F78", VA = "0xB80F78")]
	public static float GetStrafe()
	{
		return default(float);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB8D460", Offset = "0xB8D460", VA = "0xB8D460")]
	public static float GetTurn()
	{
		return default(float);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB8D520", Offset = "0xB8D520", VA = "0xB8D520")]
	public static bool TestEndGame()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB8D528", Offset = "0xB8D528", VA = "0xB8D528")]
	public static bool AreBothTouchControllersConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB8D684", Offset = "0xB8D684", VA = "0xB8D684")]
	public static bool IsEitherTouchControllerConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB8D5B4", Offset = "0xB8D5B4", VA = "0xB8D5B4")]
	public static bool IsLeftTouchConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB8D61C", Offset = "0xB8D61C", VA = "0xB8D61C")]
	public static bool IsRightTouchConnected()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000019")]
public class Player_CrossHair : MonoBehaviour
{
	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform crossHair;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject crossHairGameObject;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float activeDistance;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float addedDistance;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask rayMask;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform eyeMiddle;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 size;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color onColor;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color offColor;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 currentSize;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PlayerInputScript inputScript;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer cachedRenderer;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xB94360", Offset = "0xB94360", VA = "0xB94360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB943C8", Offset = "0xB943C8", VA = "0xB943C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB94A38", Offset = "0xB94A38", VA = "0xB94A38")]
	public Player_CrossHair()
	{
	}
}
[Token(Token = "0x200001A")]
public class Player_DeactivateQuad : MonoBehaviour
{
	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerInputScript playerInput;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LevelManager levelManager;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB94A40", Offset = "0xB94A40", VA = "0xB94A40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB94A50", Offset = "0xB94A50", VA = "0xB94A50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB94DA4", Offset = "0xB94DA4", VA = "0xB94DA4")]
	public Player_DeactivateQuad()
	{
	}
}
[Token(Token = "0x200001B")]
public class PlayerHeadCollision : MonoBehaviour
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB8DBB4", Offset = "0xB8DBB4", VA = "0xB8DBB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB8DC70", Offset = "0xB8DC70", VA = "0xB8DC70")]
	public PlayerHeadCollision()
	{
	}
}
[Token(Token = "0x200001C")]
public class SoundFootstepsScript : MonoBehaviour
{
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject character;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] stepSoundsPath;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] stepSoundsGrass;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] stepSoundsLeaves;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] stepSoundsForestGround;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] stepSoundsSand;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] stepSoundsWood;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] stepSoundsRock;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] stepSoundsMetal;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] slidingSounds;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 lastStep;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 movingPlatformVelocity;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Rigidbody characterRigidBody;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlayerInputScript playerInput;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float stepDistance;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float distanceMultiplierMin;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xC97B88", Offset = "0xC97B88", VA = "0xC97B88")]
	private void Start()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xC97C6C", Offset = "0xC97C6C", VA = "0xC97C6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xC985C8", Offset = "0xC985C8", VA = "0xC985C8")]
	public SoundFootstepsScript()
	{
	}
}
[Token(Token = "0x200001D")]
public class SpeedSoundScript : MonoBehaviour
{
	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject character;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody characterRigidBody;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource[] speedWinds;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] soundVolumeTarget;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] volumeMaxDelta;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float speedMax;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float speedMaxToScale;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xC99078", Offset = "0xC99078", VA = "0xC99078")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xC99178", Offset = "0xC99178", VA = "0xC99178")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xC994E4", Offset = "0xC994E4", VA = "0xC994E4")]
	public SpeedSoundScript()
	{
	}
}
[Token(Token = "0x200001E")]
public class CustomController_OculusTouch : MonoBehaviour
{
	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB39FCC", Offset = "0xB39FCC", VA = "0xB39FCC")]
	public CustomController_OculusTouch()
	{
	}
}
[Token(Token = "0x200001F")]
public class EndGameCredits : MonoBehaviour
{
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelManager levelManager;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject credits_Rock;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform player_Position;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject text_Panel;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text credits_Text;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject logos_Panel;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] transforms;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioMixerSnapshot creditsSnapshot;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioMixerSnapshot gameSnapshot;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C914", Offset = "0x62C914")]
	public GameObject tablets_Unlock_GameObject;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject difficulty_Easy_Reward;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject difficulty_Normal_Reward;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject difficulty_Hard_Reward;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string localizedFontAssetKey;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SoundMusicScript musicManager;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float transitionTimer;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float skyTransitionDelay;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float transitionDelay;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float flowerTransitionDelay;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool changingScene;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB44358", Offset = "0xB44358", VA = "0xB44358")]
	private void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB44408", Offset = "0xB44408", VA = "0xB44408")]
	private void Update()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB446E0", Offset = "0xB446E0", VA = "0xB446E0")]
	public void EndGame_Start()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB44500", Offset = "0xB44500", VA = "0xB44500")]
	private void doTeleport()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB44A7C", Offset = "0xB44A7C", VA = "0xB44A7C")]
	public void resumeTeleportFromChangeScene()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB44F98", Offset = "0xB44F98", VA = "0xB44F98")]
	public void MoveCreditsCanvas(bool _ResetRotation = false)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB45A7C", Offset = "0xB45A7C", VA = "0xB45A7C")]
	private string GetCreditsText()
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB44934", Offset = "0xB44934", VA = "0xB44934")]
	public void EndGame_End()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB44A4C", Offset = "0xB44A4C", VA = "0xB44A4C")]
	public void FadeCameraOut()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB469CC", Offset = "0xB469CC", VA = "0xB469CC")]
	public void FadeCameraIn()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB469FC", Offset = "0xB469FC", VA = "0xB469FC")]
	public EndGameCredits()
	{
	}
}
[Token(Token = "0x2000020")]
public class FX_Dust : MonoBehaviour
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float currentSize;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float scaling;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 movement;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 rotation;

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB46DAC", Offset = "0xB46DAC", VA = "0xB46DAC")]
	public void Initialize(float _size, float _scaling, Vector3 _movement, Vector3 _rotation, float _hue = 1f)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB46F74", Offset = "0xB46F74", VA = "0xB46F74")]
	private void Update()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB4716C", Offset = "0xB4716C", VA = "0xB4716C")]
	public FX_Dust()
	{
	}
}
[Token(Token = "0x2000021")]
public class FX_FinalBeam : MonoBehaviour
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color beamColor;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float characterDistance;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxAlpha;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform character;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xB47174", Offset = "0xB47174", VA = "0xB47174")]
	private void Start()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB47288", Offset = "0xB47288", VA = "0xB47288")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB47488", Offset = "0xB47488", VA = "0xB47488")]
	public FX_FinalBeam()
	{
	}
}
[Token(Token = "0x2000022")]
public class FX_PortalBeam : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color beamColor;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceFromBeam;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform character;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB474A0", Offset = "0xB474A0", VA = "0xB474A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB475C8", Offset = "0xB475C8", VA = "0xB475C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB47758", Offset = "0xB47758", VA = "0xB47758")]
	public FX_PortalBeam()
	{
	}
}
[Token(Token = "0x2000023")]
public class FX_SandStormPlane : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float offsetSpeed;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2 textureOffset;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB47760", Offset = "0xB47760", VA = "0xB47760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB477CC", Offset = "0xB477CC", VA = "0xB477CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB47878", Offset = "0xB47878", VA = "0xB47878")]
	public FX_SandStormPlane()
	{
	}
}
[Token(Token = "0x2000024")]
public class FX_Spark : MonoBehaviour
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeLeft;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Color startColor;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color endColor;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color lerpColor;

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB47880", Offset = "0xB47880", VA = "0xB47880")]
	public void Initialize(float _timeLeft)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB478C0", Offset = "0xB478C0", VA = "0xB478C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB47A0C", Offset = "0xB47A0C", VA = "0xB47A0C")]
	public FX_Spark()
	{
	}
}
[Token(Token = "0x2000025")]
public class Object_DestroyStillFX : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timer;

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xD8C4AC", Offset = "0xD8C4AC", VA = "0xD8C4AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xD8C5CC", Offset = "0xD8C5CC", VA = "0xD8C5CC")]
	public Object_DestroyStillFX()
	{
	}
}
[Token(Token = "0x2000026")]
public class VRScreenFade : MonoBehaviour
{
	[Token(Token = "0x600012C")]
	[Address(RVA = "0xF11354", Offset = "0xF11354", VA = "0xF11354")]
	private void Awake()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xF11358", Offset = "0xF11358", VA = "0xF11358")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xF1135C", Offset = "0xF1135C", VA = "0xF1135C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xF11360", Offset = "0xF11360", VA = "0xF11360")]
	private void OnCustomPostRender()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xF113F8", Offset = "0xF113F8", VA = "0xF113F8")]
	public VRScreenFade()
	{
	}
}
[Token(Token = "0x2000027")]
public class LayoutHelp : MonoBehaviour
{
	[Token(Token = "0x2000184")]
	public enum HelpTextLocation
	{
		[Token(Token = "0x4000BE7")]
		UP,
		[Token(Token = "0x4000BE8")]
		LEFT,
		[Token(Token = "0x4000BE9")]
		DOWN,
		[Token(Token = "0x4000BEA")]
		RIGHT,
		[Token(Token = "0x4000BEB")]
		FIRST_BUTTON,
		[Token(Token = "0x4000BEC")]
		SECOND_BUTTON,
		[Token(Token = "0x4000BED")]
		TRIGGER,
		[Token(Token = "0x4000BEE")]
		SQUEEZE,
		[Token(Token = "0x4000BEF")]
		START,
		[Token(Token = "0x4000BF0")]
		CROSS,
		[Token(Token = "0x4000BF1")]
		SQUARE,
		[Token(Token = "0x4000BF2")]
		TRIANGLE,
		[Token(Token = "0x4000BF3")]
		CIRCLE,
		[Token(Token = "0x4000BF4")]
		MIDDLE
	}

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C94C", Offset = "0x62C94C")]
	public GameObject helpNode_Up;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject helpNode_Left;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject helpNode_Down;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpNode_Right;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject helpNode_FirstButton;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject helpNode_SecondButton;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject helpNode_Trigger;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject helpNode_Squeeze;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject helpNode_Start;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject helpNode_Cross;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject helpNode_Square;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject helpNode_Triangle;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject helpNode_Circle;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject helpNode_Middle;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C984", Offset = "0x62C984")]
	public Text text_Up;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text text_Left;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text text_Down;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text text_Right;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text text_FirstButton;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text text_SecondButton;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text text_Trigger;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text text_Squeeze;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text text_Start;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text text_Cross;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text text_Square;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text text_Triangle;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text text_Circle;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text text_Middle;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string localizedFontKey;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xAEDAC8", Offset = "0xAEDAC8", VA = "0xAEDAC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xAEDD14", Offset = "0xAEDD14", VA = "0xAEDD14")]
	public void SetHelpText(HelpTextLocation helpTextLocation, [Optional] string helpText)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xAEDF18", Offset = "0xAEDF18", VA = "0xAEDF18")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xAEDE1C", Offset = "0xAEDE1C", VA = "0xAEDE1C")]
	private void ConfigureNode(GameObject go, Text txt, string str)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xAEDF54", Offset = "0xAEDF54", VA = "0xAEDF54")]
	public LayoutHelp()
	{
	}
}
[Token(Token = "0x2000028")]
public class Checkpoint : MonoBehaviour
{
	[Token(Token = "0x2000185")]
	public abstract class CheckpointTrigger : MonoBehaviour
	{
		[Token(Token = "0x6000A35")]
		public abstract void OnPreTriggerEnter();

		[Token(Token = "0x6000A36")]
		public abstract void OnPostTriggerEnter();

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xB32F4C", Offset = "0xB32F4C", VA = "0xB32F4C")]
		protected CheckpointTrigger()
		{
		}
	}

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animationController;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider triggerCollider;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject beam;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject particlesFX;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource soundFX;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip inactiveLoopSFX;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip activeLoopSFX;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip activationSFX;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Renderer rendererMaterial;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color DeactivatedColor;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color ActivatedColor;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MeshCollider ActivatedCollider;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshCollider DeactivatedCollider;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform spawnpoint;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool isPortalExit;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CheckpointTrigger checkPointTrigger;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isPoweringUp;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float poweringUpValue;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float poweringUpMultiplier;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isBeginning;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool isTriggerEnterActive;

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB31D30", Offset = "0xB31D30", VA = "0xB31D30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xB31DB0", Offset = "0xB31DB0", VA = "0xB31DB0")]
	private void PostBeginning()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xB31DB8", Offset = "0xB31DB8", VA = "0xB31DB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xB31EF4", Offset = "0xB31EF4", VA = "0xB31EF4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xB32780", Offset = "0xB32780", VA = "0xB32780")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xB32A44", Offset = "0xB32A44", VA = "0xB32A44")]
	public void Activate()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xB32BC8", Offset = "0xB32BC8", VA = "0xB32BC8")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xB32D94", Offset = "0xB32D94", VA = "0xB32D94")]
	private void PlayActiveLoop()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xB32F30", Offset = "0xB32F30", VA = "0xB32F30")]
	public Checkpoint()
	{
	}
}
[Token(Token = "0x2000029")]
public class Interactive_Hologram : MonoBehaviour
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C9BC", Offset = "0x62C9BC")]
	public GameObject Hologram_Screen_GameObject;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Hologram_Particles_GameObject;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Hologram_Beams_GameObject;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Hologram_Orb_GameObject;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Hologram_Subtitles_GameObject;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62C9F4", Offset = "0x62C9F4")]
	public SubtitlePart[] Hologram_Subtitles;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro Hologram_Subtitles_TextMesh;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CA2C", Offset = "0x62CA2C")]
	public Renderer Hologram_Screen_Renderer;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CA64", Offset = "0x62CA64")]
	public AudioSource Hologram_Sound_AudioSource;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource Hologram_Narration_AudioSource;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CA9C", Offset = "0x62CA9C")]
	public Texture[] Hologram_Animation_Textures;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float Hologram_Change_First_Frame_Interval;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float Hologram_Change_Interval;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float Hologram_Change_Last_Frame_Interval;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string localizedFontAssetKey;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool Hologram_Active;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int Hologram_Frame;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float Hologram_Change_Timer;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool Hologram_Phase_Active;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float Hologram_Phase;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int Hologram_Subtitle_Frame;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float hologramTimer;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xAEB078", Offset = "0xAEB078", VA = "0xAEB078")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xAEB138", Offset = "0xAEB138", VA = "0xAEB138")]
	private void Start()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xAEB308", Offset = "0xAEB308", VA = "0xAEB308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xAEB75C", Offset = "0xAEB75C", VA = "0xAEB75C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xAEBB88", Offset = "0xAEBB88", VA = "0xAEBB88")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xAEB7F0", Offset = "0xAEB7F0", VA = "0xAEB7F0")]
	private void EnableHologram(bool _Enabled)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xAEBC1C", Offset = "0xAEBC1C", VA = "0xAEBC1C")]
	public Interactive_Hologram()
	{
	}
}
[Token(Token = "0x200002A")]
public class Player_Buddy : MonoBehaviour
{
	[Token(Token = "0x2000186")]
	private delegate void DynamicUpdate();

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movePower;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animationController;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LensFlare lensFlare;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bodyBone;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DynamicUpdate isAttached;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DynamicUpdate dynamicFixedUpdate;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Game_Controller gameController;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool buttonLock;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform character;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform eyeMiddle;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 moveDirection;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 offset;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform receiver;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float targetAngle;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xB92CC8", Offset = "0xB92CC8", VA = "0xB92CC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xB92E58", Offset = "0xB92E58", VA = "0xB92E58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xB92FA0", Offset = "0xB92FA0", VA = "0xB92FA0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xB933CC", Offset = "0xB933CC", VA = "0xB933CC")]
	private void FixedUpdate_NoTarget()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xB93B38", Offset = "0xB93B38", VA = "0xB93B38")]
	private void FixedUpdate_MoveToTarget()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xB940EC", Offset = "0xB940EC", VA = "0xB940EC")]
	private void FixedUpdate_Attached()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xB93DF8", Offset = "0xB93DF8", VA = "0xB93DF8")]
	private bool CheckReceivers()
	{
		return default(bool);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xB94224", Offset = "0xB94224", VA = "0xB94224")]
	public void AddReceiver(Transform _receiver)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xB9422C", Offset = "0xB9422C", VA = "0xB9422C")]
	public void RemoveReceiver()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xB9429C", Offset = "0xB9429C", VA = "0xB9429C")]
	public Player_Buddy()
	{
	}
}
[Token(Token = "0x200002B")]
public class Player_IMP : MonoBehaviour
{
	[Token(Token = "0x2000187")]
	private delegate void DynamicUpdate();

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movePower;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animationController;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform bodyBone;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform forwardDirectionMarker;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject HackingHoloScreen;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask rayMaskGUI;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DynamicUpdate dynamicFixedUpdate;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Game_Controller gameController;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool buttonLock;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform eyeMiddle;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 moveDirection;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 offset;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform receiver;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform target;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timer;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isRaycastGUI;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int hashIdleIMP;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float attachTimer;

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xB94EFC", Offset = "0xB94EFC", VA = "0xB94EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xB95040", Offset = "0xB95040", VA = "0xB95040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xB95190", Offset = "0xB95190", VA = "0xB95190")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xB955BC", Offset = "0xB955BC", VA = "0xB955BC")]
	private void FixedUpdate_NoTarget()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xB95E24", Offset = "0xB95E24", VA = "0xB95E24")]
	private void FixedUpdate_PointToTarget()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xB96238", Offset = "0xB96238", VA = "0xB96238")]
	private void FixedUpdate_MoveToTarget()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xB966B8", Offset = "0xB966B8", VA = "0xB966B8")]
	private void FixedUpdate_Attached()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xB95C3C", Offset = "0xB95C3C", VA = "0xB95C3C")]
	private void LookAt(Vector3 _position)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xB9698C", Offset = "0xB9698C", VA = "0xB9698C")]
	private void returnToNoTarget()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xB96A24", Offset = "0xB96A24", VA = "0xB96A24")]
	public void AddReceiver(Transform _receiver)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xB96A2C", Offset = "0xB96A2C", VA = "0xB96A2C")]
	public void RemoveReceiver()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xB96A9C", Offset = "0xB96A9C", VA = "0xB96A9C")]
	public Player_IMP()
	{
	}
}
[Token(Token = "0x200002C")]
public class Player_SpeedRunTimerTrigger : MonoBehaviour
{
	[Token(Token = "0x2000188")]
	public enum SpeedRunTriggerTypeEnum
	{
		[Token(Token = "0x4000BF6")]
		START,
		[Token(Token = "0x4000BF7")]
		CHECKPOINT,
		[Token(Token = "0x4000BF8")]
		END
	}

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpeedRunTriggerTypeEnum speedRunTriggerType;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int CheckPointIndex;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpeedRunResults speedRunResults;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject resetTimerRespawnObject;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CAD4", Offset = "0x62CAD4")]
	public LevelManager levelManager;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CB0C", Offset = "0x62CB0C")]
	public GameObject ChallengeCompleteFX;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ChallengeCompleteParticlesBurst;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CB44", Offset = "0x62CB44")]
	public AudioSource startRunSound;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource endRunSound;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource endRunPersonalBestSound;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xC8064C", Offset = "0xC8064C", VA = "0xC8064C")]
	private void Start()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xC806FC", Offset = "0xC806FC", VA = "0xC806FC")]
	private void ChallengeCompleted()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xC80ED8", Offset = "0xC80ED8", VA = "0xC80ED8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xC81A14", Offset = "0xC81A14", VA = "0xC81A14")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xC81C90", Offset = "0xC81C90", VA = "0xC81C90")]
	public Player_SpeedRunTimerTrigger()
	{
	}
}
[Token(Token = "0x200002D")]
public class Player_UseTrigger : MonoBehaviour
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player_IMP buddy;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xC81C98", Offset = "0xC81C98", VA = "0xC81C98")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xC81C9C", Offset = "0xC81C9C", VA = "0xC81C9C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xC81D40", Offset = "0xC81D40", VA = "0xC81D40")]
	public Player_UseTrigger()
	{
	}
}
[Token(Token = "0x200002E")]
public class Language
{
	[Token(Token = "0x2000189")]
	public enum LanguageEnum
	{
		[Token(Token = "0x4000BFA")]
		English_UK,
		[Token(Token = "0x4000BFB")]
		English_US,
		[Token(Token = "0x4000BFC")]
		Czech,
		[Token(Token = "0x4000BFD")]
		Danish,
		[Token(Token = "0x4000BFE")]
		Dutch,
		[Token(Token = "0x4000BFF")]
		Finnish,
		[Token(Token = "0x4000C00")]
		French,
		[Token(Token = "0x4000C01")]
		German,
		[Token(Token = "0x4000C02")]
		Hungarian,
		[Token(Token = "0x4000C03")]
		Italian,
		[Token(Token = "0x4000C04")]
		Polish,
		[Token(Token = "0x4000C05")]
		Russian,
		[Token(Token = "0x4000C06")]
		Spanish,
		[Token(Token = "0x4000C07")]
		Swedish,
		[Token(Token = "0x4000C08")]
		Bulgarian,
		[Token(Token = "0x4000C09")]
		Turkish,
		[Token(Token = "0x4000C0A")]
		Norwegian,
		[Token(Token = "0x4000C0B")]
		Portuguese
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xAED0F4", Offset = "0xAED0F4", VA = "0xAED0F4")]
	public Language()
	{
	}
}
[Token(Token = "0x200002F")]
public class LeaderboardTypeTrigger : MonoBehaviour
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpeedRunResults speedRunResults;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpeedRunResults.LeaderboardType leaderboardType;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xAEDF5C", Offset = "0xAEDF5C", VA = "0xAEDF5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xAEDF60", Offset = "0xAEDF60", VA = "0xAEDF60")]
	public LeaderboardTypeTrigger()
	{
	}
}
[Token(Token = "0x2000030")]
public class Boss_FootMarker : MonoBehaviour
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousPos;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xB2F484", Offset = "0xB2F484", VA = "0xB2F484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xB2F4C4", Offset = "0xB2F4C4", VA = "0xB2F4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xB2F53C", Offset = "0xB2F53C", VA = "0xB2F53C")]
	public Boss_FootMarker()
	{
	}
}
[Token(Token = "0x2000031")]
public class Boss_One_Move : MonoBehaviour
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] steps;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource sound;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FootParticle;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftFoot;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightFoot;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxVolume;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator anim;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xB2F544", Offset = "0xB2F544", VA = "0xB2F544")]
	private void Start()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xB2F548", Offset = "0xB2F548", VA = "0xB2F548")]
	private void Update()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xB2F54C", Offset = "0xB2F54C", VA = "0xB2F54C")]
	public void FootFallL()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xB2F778", Offset = "0xB2F778", VA = "0xB2F778")]
	public void FootFallR()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xB2F9A4", Offset = "0xB2F9A4", VA = "0xB2F9A4")]
	public Boss_One_Move()
	{
	}
}
[Token(Token = "0x2000032")]
public class BaseControllerDiagramBase : MonoBehaviour
{
	[Token(Token = "0x600016F")]
	[Address(RVA = "0xB2E998", Offset = "0xB2E998", VA = "0xB2E998", Slot = "4")]
	public virtual void UpdateControllerHelp(int ControllerID)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xB2E99C", Offset = "0xB2E99C", VA = "0xB2E99C")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xB2E9D8", Offset = "0xB2E9D8", VA = "0xB2E9D8")]
	public BaseControllerDiagramBase()
	{
	}
}
[Token(Token = "0x2000033")]
public class ControllerDiagram_Oculus : BaseControllerDiagramBase
{
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CB7C", Offset = "0x62CB7C")]
	public GameObject leftJoyUp_GameObject;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftJoyRight_GameObject;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftJoyDown_GameObject;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftJoyLeft_GameObject;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject leftXButton_GameObject;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftYButton_GameObject;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject leftTrigger_GameObject;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftSqueeze_GameObject;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject leftStart_GameObject;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CBB4", Offset = "0x62CBB4")]
	public Text leftJoyUp_Help_Text;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text leftJoyRight_Help_Text;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text leftJoyDown_Help_Text;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text leftJoyLeft_Help_Text;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text leftXButton_Help_Text;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text leftYButton_Help_Text;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text leftTrigger_Help_Text;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text leftSqueeze_Help_Text;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text leftStart_Help_Text;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CBEC", Offset = "0x62CBEC")]
	public GameObject rightJoyUp_GameObject;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject rightJoyRight_GameObject;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rightJoyDown_GameObject;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject rightJoyLeft_GameObject;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject rightAButton_GameObject;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject rightBButton_GameObject;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject rightTrigger_GameObject;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject rightSqueeze_GameObject;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject rightStart_GameObject;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CC24", Offset = "0x62CC24")]
	public Text rightJoyUp_Help_Text;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text rightJoyRight_Help_Text;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text rightJoyDown_Help_Text;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text rightJoyLeft_Help_Text;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text rightAButton_Help_Text;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text rightBButton_Help_Text;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text rightTrigger_Help_Text;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text rightSqueeze_Help_Text;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text rightStart_Help_Text;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xB33270", Offset = "0xB33270", VA = "0xB33270", Slot = "4")]
	public override void UpdateControllerHelp(int ControllerID)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xB343E0", Offset = "0xB343E0", VA = "0xB343E0")]
	public ControllerDiagram_Oculus()
	{
	}
}
[Token(Token = "0x2000034")]
public class ControllerDiagram_Pico : BaseControllerDiagramBase
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CC5C", Offset = "0x62CC5C")]
	public GameObject leftJoyUp_GameObject;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftJoyRight_GameObject;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftJoyDown_GameObject;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftJoyLeft_GameObject;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject leftXButton_GameObject;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftYButton_GameObject;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject leftTrigger_GameObject;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftSqueeze_GameObject;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject leftStart_GameObject;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CC94", Offset = "0x62CC94")]
	public Text leftJoyUp_Help_Text;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text leftJoyRight_Help_Text;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text leftJoyDown_Help_Text;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text leftJoyLeft_Help_Text;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text leftXButton_Help_Text;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text leftYButton_Help_Text;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text leftTrigger_Help_Text;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text leftSqueeze_Help_Text;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text leftStart_Help_Text;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CCCC", Offset = "0x62CCCC")]
	public GameObject rightJoyUp_GameObject;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject rightJoyRight_GameObject;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rightJoyDown_GameObject;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject rightJoyLeft_GameObject;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject rightAButton_GameObject;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject rightBButton_GameObject;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject rightTrigger_GameObject;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject rightSqueeze_GameObject;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject rightStart_GameObject;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CD04", Offset = "0x62CD04")]
	public Text rightJoyUp_Help_Text;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text rightJoyRight_Help_Text;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text rightJoyDown_Help_Text;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text rightJoyLeft_Help_Text;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text rightAButton_Help_Text;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text rightBButton_Help_Text;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text rightTrigger_Help_Text;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text rightSqueeze_Help_Text;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text rightStart_Help_Text;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xB343E8", Offset = "0xB343E8", VA = "0xB343E8", Slot = "4")]
	public override void UpdateControllerHelp(int ControllerID)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xB35558", Offset = "0xB35558", VA = "0xB35558")]
	public ControllerDiagram_Pico()
	{
	}
}
[Token(Token = "0x2000035")]
public class ControllerDiagram_Playstation : BaseControllerDiagramBase
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CD3C", Offset = "0x62CD3C")]
	public GameObject leftJoyUp_GameObject;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftJoyRight_GameObject;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftJoyDown_GameObject;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftJoyLeft_GameObject;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CD74", Offset = "0x62CD74")]
	public Text leftJoyUp_Help_Text;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text leftJoyRight_Help_Text;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text leftJoyDown_Help_Text;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text leftJoyLeft_Help_Text;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CDAC", Offset = "0x62CDAC")]
	public GameObject leftDPadUp_GameObject;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject leftDPadRight_GameObject;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject leftDPadDown_GameObject;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject leftDPadLeft_GameObject;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CDE4", Offset = "0x62CDE4")]
	public Text leftDPadUp_Help_Text;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text leftDPadRight_Help_Text;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text leftDPadDown_Help_Text;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text leftDPadLeft_Help_Text;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CE1C", Offset = "0x62CE1C")]
	public GameObject rightJoyUp_GameObject;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject rightJoyRight_GameObject;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject rightJoyDown_GameObject;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject rightJoyLeft_GameObject;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CE54", Offset = "0x62CE54")]
	public Text rightJoyUp_Help_Text;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text rightJoyRight_Help_Text;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text rightJoyDown_Help_Text;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text rightJoyLeft_Help_Text;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CE8C", Offset = "0x62CE8C")]
	public GameObject shareButton_GameObject;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject optionsButton_GameObject;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject psButton_GameObject;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject padButton_GameObject;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CEC4", Offset = "0x62CEC4")]
	public Text shareButton_Help_Text;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text optionsButton_Help_Text;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text psButton_Help_Text;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text padButton_Help_Text;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CEFC", Offset = "0x62CEFC")]
	public GameObject topButton_GameObject;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject rightButton_GameObject;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject bottomButton_GameObject;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject leftButton_GameObject;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CF34", Offset = "0x62CF34")]
	public Text topButton_Help_Text;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text rightButton_Help_Text;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Text bottomButtonn_Help_Text;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Text leftButton_Help_Text;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CF6C", Offset = "0x62CF6C")]
	public GameObject leftTrigger_GameObject;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject leftBumper_GameObject;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject rightTrigger_GameObject;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject rightBumper_GameObject;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CFA4", Offset = "0x62CFA4")]
	public Text leftTrigger_Help_Text;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Text leftBumper_Help_Text;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Text rightTrigger_Help_Text;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Text rightBumper_Help_Text;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xB35560", Offset = "0xB35560", VA = "0xB35560", Slot = "4")]
	public override void UpdateControllerHelp(int ControllerID)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xB364B0", Offset = "0xB364B0", VA = "0xB364B0")]
	public ControllerDiagram_Playstation()
	{
	}
}
[Token(Token = "0x2000036")]
public class ControllerDiagram_Vive : BaseControllerDiagramBase
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62CFDC", Offset = "0x62CFDC")]
	public GameObject leftPadUp_GameObject;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftPadRight_GameObject;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftPadDown_GameObject;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftPadLeft_GameObject;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject leftHomeButton_GameObject;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftSystemButton_GameObject;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject leftTrigger_GameObject;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftSqueeze_GameObject;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D014", Offset = "0x62D014")]
	public Text leftPadUp_Help_Text;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text leftPadRight_Help_Text;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text leftPadDown_Help_Text;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text leftPadLeft_Help_Text;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text leftHomeButton_Help_Text;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text leftSystemButton_Help_Text;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text leftTrigger_Help_Text;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text leftSqueeze_Help_Text;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D04C", Offset = "0x62D04C")]
	public GameObject rightPadUp_GameObject;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject rightPadRight_GameObject;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject rightPadDown_GameObject;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject rightPadLeft_GameObject;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rightHomeButton_GameObject;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject rightSystemButton_GameObject;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject rightTrigger_GameObject;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject rightSqueeze_GameObject;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D084", Offset = "0x62D084")]
	public Text rightPadUp_Help_Text;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text rightPadRight_Help_Text;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text rightPadDown_Help_Text;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text rightPadLeft_Help_Text;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text rightHomeButton_Help_Text;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text rightSystemButton_Help_Text;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text rightTrigger_Help_Text;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text rightSqueeze_Help_Text;

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xB364B8", Offset = "0xB364B8", VA = "0xB364B8", Slot = "4")]
	public override void UpdateControllerHelp(int ControllerID)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xB376D0", Offset = "0xB376D0", VA = "0xB376D0")]
	public ControllerDiagram_Vive()
	{
	}
}
[Token(Token = "0x2000037")]
public class ControllerDiagram_WindowsMRMotion : BaseControllerDiagramBase
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D0BC", Offset = "0x62D0BC")]
	public GameObject leftJoyUp_GameObject;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftJoyRight_GameObject;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftJoyDown_GameObject;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftJoyLeft_GameObject;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject leftJoyButton_GameObject;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftPadButton_GameObject;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject leftTrigger_GameObject;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftSqueeze_GameObject;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject leftMenuButton_GameObject;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D0F4", Offset = "0x62D0F4")]
	public Text leftJoyUp_Help_Text;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text leftJoyRight_Help_Text;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text leftJoyDown_Help_Text;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text leftJoyLeft_Help_Text;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text leftJoyButton_Help_Text;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text leftPadButton_Help_Text;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text leftTrigger_Help_Text;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text leftSqueeze_Help_Text;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text leftMenuButton_Help_Text;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D12C", Offset = "0x62D12C")]
	public GameObject rightJoyUp_GameObject;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject rightJoyRight_GameObject;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rightJoyDown_GameObject;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject rightJoyLeft_GameObject;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject rightJoyButton_GameObject;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject rightPadButton_GameObject;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject rightTrigger_GameObject;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject rightSqueeze_GameObject;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject rightMenuButton_GameObject;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D164", Offset = "0x62D164")]
	public Text rightJoyUp_Help_Text;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text rightJoyRight_Help_Text;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text rightJoyDown_Help_Text;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text rightJoyLeft_Help_Text;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Text rightJoyButton_Help_Text;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Text rightPadButton_Help_Text;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Text rightTrigger_Help_Text;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Text rightSqueeze_Help_Text;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text rightMenuButton_Help_Text;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xB376D8", Offset = "0xB376D8", VA = "0xB376D8", Slot = "4")]
	public override void UpdateControllerHelp(int ControllerID)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xB39008", Offset = "0xB39008", VA = "0xB39008")]
	public ControllerDiagram_WindowsMRMotion()
	{
	}
}
[Token(Token = "0x2000038")]
public class ControllerDiagram_Xbox : BaseControllerDiagramBase
{
	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D19C", Offset = "0x62D19C")]
	public GameObject leftJoyUp_GameObject;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftJoyRight_GameObject;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leftJoyDown_GameObject;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftJoyLeft_GameObject;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D1D4", Offset = "0x62D1D4")]
	public Text leftJoyUp_Help_Text;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text leftJoyRight_Help_Text;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text leftJoyDown_Help_Text;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text leftJoyLeft_Help_Text;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D20C", Offset = "0x62D20C")]
	public GameObject leftDPadUp_GameObject;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject leftDPadRight_GameObject;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject leftDPadDown_GameObject;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject leftDPadLeft_GameObject;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D244", Offset = "0x62D244")]
	public Text leftDPadUp_Help_Text;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text leftDPadRight_Help_Text;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text leftDPadDown_Help_Text;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text leftDPadLeft_Help_Text;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D27C", Offset = "0x62D27C")]
	public GameObject rightJoyUp_GameObject;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject rightJoyRight_GameObject;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject rightJoyDown_GameObject;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject rightJoyLeft_GameObject;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D2B4", Offset = "0x62D2B4")]
	public Text rightJoyUp_Help_Text;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text rightJoyRight_Help_Text;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text rightJoyDown_Help_Text;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text rightJoyLeft_Help_Text;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D2EC", Offset = "0x62D2EC")]
	public GameObject backButton_GameObject;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject startButton_GameObject;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject xBoxButton_GameObject;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D324", Offset = "0x62D324")]
	public Text backButton_Help_Text;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text startButton_Help_Text;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text xBoxButton_Help_Text;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D35C", Offset = "0x62D35C")]
	public GameObject topButton_GameObject;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject rightButton_GameObject;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject bottomButton_GameObject;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject leftButton_GameObject;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D394", Offset = "0x62D394")]
	public Text topButton_Help_Text;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Text rightButton_Help_Text;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Text bottomButtonn_Help_Text;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Text leftButton_Help_Text;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D3CC", Offset = "0x62D3CC")]
	public GameObject leftTrigger_GameObject;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject leftBumper_GameObject;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject rightTrigger_GameObject;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject rightBumper_GameObject;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D404", Offset = "0x62D404")]
	public Text leftTrigger_Help_Text;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Text leftBumper_Help_Text;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Text rightTrigger_Help_Text;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Text rightBumper_Help_Text;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xB39010", Offset = "0xB39010", VA = "0xB39010", Slot = "4")]
	public override void UpdateControllerHelp(int ControllerID)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xB39FC4", Offset = "0xB39FC4", VA = "0xB39FC4")]
	public ControllerDiagram_Xbox()
	{
	}
}
[Token(Token = "0x2000039")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BE34", Offset = "0x62BE34")]
	private sealed class <ChangeRewiredStateDelayed>d__239 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0xB8C934", Offset = "0xB8C934", VA = "0xB8C934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xB8C9A4", Offset = "0xB8C9A4", VA = "0xB8C9A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xB8751C", Offset = "0xB8751C", VA = "0xB8751C")]
		[DebuggerHidden]
		public <ChangeRewiredStateDelayed>d__239(int <>1__state)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xB8C890", Offset = "0xB8C890", VA = "0xB8C890", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xB8C894", Offset = "0xB8C894", VA = "0xB8C894", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xB8C93C", Offset = "0xB8C93C", VA = "0xB8C93C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BE44", Offset = "0x62BE44")]
	private sealed class <>c
	{
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static RemoteCertificateValidationCallback <>9__270_0;

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xB8C880", Offset = "0xB8C880", VA = "0xB8C880")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xB8C888", Offset = "0xB8C888", VA = "0xB8C888")]
		internal bool <SubmitFeedbackDirectToJira>b__270_0(object o, X509Certificate certificate, X509Chain chain, SslPolicyErrors errors)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D43C", Offset = "0x62D43C")]
	public GameObject PauseMenu_Disclaimer;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PauseMenu_Main;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject PauseMenu_Paused;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject PauseMenu_Options;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject PauseMenu_Options_Game;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject PauseMenu_Options_Audio;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject PauseMenu_Options_Video;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject PauseMenu_Options_Video_VR;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject PauseMenu_Options_Control;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject PauseMenu_Options_Controller_Layout;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject PauseMenu_Options_VR;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject PauseMenu_QuitGame;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject PauseMenu_QuitToMain;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject PauseMenu_ReturnToHub;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject PauseMenu_LoadGame;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject PauseMenu_Difficulty;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject PauseMenu_Comfort_Turning;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject PauseMenu_Comfort_Controller;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject PauseMenu_Comfort_Controller_Vive;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject PauseMenu_Comfort_Cage;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject PauseMenu_Controller_Type;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject PauseMenu_Statistics;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject PauseMenu_Credits;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject PauseMenu_Loading;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject PauseMenu_Feedback;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject PauseMenu_Feedback_Thanks;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject PauseMenu_ResetSaveSlot;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D474", Offset = "0x62D474")]
	public GameObject Paused_BottomReturnToHubPanel;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject SeatedOptionPanel;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject Joystick_Panel;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject CustomController_Panel;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject HookOptionPanel;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D4AC", Offset = "0x62D4AC")]
	public ControllerDiagram_Oculus controllerDiagram_Oculus;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D4E4", Offset = "0x62D4E4")]
	public GameObject PauseMenu_Disclaimer_First_Selected;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject PauseMenu_Main_First_Selected;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject PauseMenu_Paused_First_Selected;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject PauseMenu_QuitGame_First_Selected;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject PauseMenu_QuitToMain_First_Selected;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject PauseMenu_ReturnToHub_First_Selected;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject PauseMenu_LoadGame_First_Selected;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject PauseMenu_Difficulty_First_Selected;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject PauseMenu_Comfort_Turning_On_Selected;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject PauseMenu_Comfort_Turning_Off_Selected;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject PauseMenu_Comfort_Controller_Beginner_Selected;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject PauseMenu_Comfort_Controller_Normal_Selected;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject PauseMenu_Comfort_Controller_Vive_Beginner_Selected;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject PauseMenu_Comfort_Controller_Vive_Normal_Selected;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject PauseMenu_Comfort_Controller_Vive_Advanced_Selected;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject PauseMenu_Comfort_Cage_Solid_Selected;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject PauseMenu_Comfort_Cage_Transparent_Selected;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject PauseMenu_Comfort_Cage_Off_Selected;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject PauseMenu_Statistics_First_Selected;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject PauseMenu_Options_First_Selected;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject PauseMenu_Controller_Layout_First_Selected;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject PauseMenu_Options_Game_First_Selected;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject PauseMenu_Options_Audio_First_Selected;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject PauseMenu_Options_Video_First_Selected;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject PauseMenu_Options_Video_VR_First_Selected;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject PauseMenu_Options_Control_First_Selected;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject PauseMenu_Options_Control_Apply_Selected;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject PauseMenu_Options_Controller_Layout_First_Selected;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject PauseMenu_Options_Controller_Layout_Vive_First_Selected;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject PauseMenu_Options_Controller_Type_Controller_Selected;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject PauseMenu_Options_Controller_Type_3D_Input_Selected;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject PauseMenu_Options_VR_First_Selected;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject PauseMenu_Feedback_NameText_Selected;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject PauseMenu_Feedback_EmailText_Selected;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public GameObject PauseMenu_Feedback_FeedbackText_Selected;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject PauseMenu_Feedback_Submit_Selected;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject PauseMenu_Feedback_Thanks_First_Selected;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject PauseMenu_Credits_First_Selected;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject PauseMenu_ResetSaveSlot_First_Selected;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject PauseMenu_ResetSaveSlot_1_Selected;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject PauseMenu_ResetSaveSlot_2_Selected;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject PauseMenu_ResetSaveSlot_3_Selected;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject PauseMenu_ReturnToHubOption;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D51C", Offset = "0x62D51C")]
	public GameObject PauseMenu_Options_Button_GameOptions;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject PauseMenu_Options_Button_AudioOptions;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject PauseMenu_Options_Button_VideoOptions;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject PauseMenu_Options_Button_ControlOptions;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject PauseMenu_Options_Button_VirtualRealityOptions;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject PauseMenu_Paused_Button_Statistics;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject PauseMenu_Paused_Button_Feedback;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject PauseMenu_Paused_Button_ToggleVR;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public GameObject PauseMenu_Paused_Button_Quit;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public GameObject PauseMenu_Main_Button_Options;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public GameObject PauseMenu_Paused_Button_Options;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public GameObject PauseMenu_Paused_Button_StartWizard;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public GameObject PauseMenu_Main_Button_Credits;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public GameObject PauseMenu_Main_Button_ToggleVR;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public GameObject PauseMenu_Main_Button_Quit;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public GameObject PauseMenu_Paused_Button_Controller_Layout;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D554", Offset = "0x62D554")]
	public GameObject ControllerTypeDiagramXbox;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public GameObject ControllerTypeDiagramPlaystation;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public GameObject ControllerTypeCustomVive;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public GameObject ControllerTypeCustomTouch;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public GameObject ControllerTypeCustomMove;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject ControllerTypeCustomMRMotionController;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public GameObject ControllerType_CustomController_Panel;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public Text ControllerTypeInfoText;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D58C", Offset = "0x62D58C")]
	public AudioMixerSnapshot Game_AudioMixerSnapshot;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public AudioMixerSnapshot GameReverbRoom_AudioMixerSnapshot;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public AudioMixerSnapshot GameReverbHall_AudioMixerSnapshot;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public AudioMixerSnapshot Menu_AudioMixerSnapshot;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D5C4", Offset = "0x62D5C4")]
	public Slider VolumeSlider_Master;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public Slider VolumeSlider_Sound;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public Slider VolumeSlider_Music;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public Slider VolumeSlider_Ambiance;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public Slider VolumeSlider_Narration;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public Slider Slider_HookAngle;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public Slider VibrationStrength_Slider;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public Slider VerticalSensitivity_Slider;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D5FC", Offset = "0x62D5FC")]
	public Text Warning_Label;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public Text Intensity_Label;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public Text Recomendation_Text;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public Text FeedbackTitleText;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public InputField FeedbackName;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public InputField FeedbackEmail;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public InputField FeedbackText;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public Text DeleteSlotText;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public Text ResetLabelText;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public Text LoadSlot_1_Info_Text;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public Text LoadSlot_2_Info_Text;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public Text LoadSlot_3_Info_Text;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public Text GameVersionText;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public Text StatisticsText;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public Text LeaderboardText;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public Text ReturnToHubText;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public Text ReturnToHubLabelText;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public Text ReturnToHubButtonText;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public Text Button_Contoller_Layout_Text;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public Text JoystickLayout_Description_Text;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public Text CustomContollerLayout_Description_Text;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public Text CustomControllerLayout_Label;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public Text HookAngle_Label;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public Text KeyboardLayout_Label;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public Text VibrationStrength_Label;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public Text CreditsOther_Label;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public Text Input_Enabled_Label;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public Text Button_Controller_Text;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public Text Button_3D_Input_Text;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D634", Offset = "0x62D634")]
	public AudioSource AudioSource_MenuApply;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public AudioSource AudioSource_MenuSelect;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public AudioSource AudioSource_MenuCancel;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D66C", Offset = "0x62D66C")]
	public Dropdown Option_Game_ShowLevelTimer;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public Dropdown Option_Video_Resolution;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public Dropdown Option_Video_Anti_Aliasing;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public Dropdown Option_Video_Shadows;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public Dropdown Option_Video_VSync;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public Dropdown Option_Video_VR_Anti_Aliasing;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public Dropdown Option_Video_VR_Shadows;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public Dropdown Option_Controllers_JoyStickLayout;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public Dropdown Option_Controllers_KeyboardLayout;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public Dropdown Option_Controllers_CustomControllerLayout;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public Dropdown Option_VR_Cage;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public Dropdown Option_VR_MovementStyle_Dropdown;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D6A4", Offset = "0x62D6A4")]
	public Toggle Option_Controllers_ShowControllerHelp;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public Toggle Option_Control_Vibration;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public Toggle Option_Control_LimitVerticalTurn;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public Toggle Option_Game_ShowLevelTimer_Toggle;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D6DC", Offset = "0x62D6DC")]
	public Button Control_Controller_Layout_Button;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public Button PauseMenu_Button_3D_Input;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D714", Offset = "0x62D714")]
	public Text[] NonVROnlyText;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public Selectable[] NonVROnlyInteractables;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	private GameLogicScript.VRModes LastVrMode;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public TextMeshProUGUI[] NonVROnlyOptionHints;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62D74C", Offset = "0x62D74C")]
	public Text PSVR_Option_ControllerLayout_Text;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public Button PSVR_Option_ControllerLayout_Button;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public Text PSVR_Option_KeyboardLayout_Text;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public Dropdown PSVR_Option_KeyboardLayout_Dropdown;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public Text PSVR_PauseMenu_Control_VerticalSensitivity_Label;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public Slider PSVR_PauseMenu_Control_VerticalSensitivity_Slider;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	public Slider PSVR_PauseMenu_Control_HorizontalSensitivity_Slider;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public Text PSVR_PauseMenu_Control_VibrationStrength_Label;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	public Slider PSVR_PauseMenu_Control_VibrationStrength_Slider;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public Toggle PSVR_PauseMenu_Control_Disable_Turning;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	public Toggle PSVR_PauseMenu_Control_Disable_Strafing;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public Button PSVR_PauseMenu_Control_Disable_Apply;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	public Button PSVR_PauseMenu_Control_Disable_Reset;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public Button PSVR_PauseMenu_Control_Disable_Cancel;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	public GameObject[] PSVR_PauseMenu_Control_ObjectsToDisable;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	public string localizedDefaultFontKey;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	private float nextKeyMoveDelayTime;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5CC")]
	private float nextKeyDelayTime;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	private float nextKeySliderDelayTime;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D4")]
	private float nextKeyTime;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	private Selectable selectableGameObject;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	private int skipcount;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	private string ReturnFromOptionsCanvasName;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	private string CurrentPauseMenuName;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	private string LastPauseMenuName;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	private int newGameDifficulty;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x604")]
	private int loadGameSlot;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
	private bool startNewGame;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x609")]
	private bool inGamePauseMenu;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	private EventSystem eventSystem;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	private float Controller_MenuMove_Deadzone;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61C")]
	private float VolumeSliderStep;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	private float HookSliderStep;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x624")]
	private Vector3 originalJoystickPanelPosition;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	private Vector3 originalJoystickPanelLocalPosition;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	private string currentSelectedGameObjectName;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
	private bool MoveLocked;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	private Game_Controller gameController;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
	private LevelManager levelManager;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	private bool prev3dInputAvailable;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x661")]
	private bool alwaysShowControllerTypeScreen;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
	private PlayerInputScript playerInputScript;

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xB7D0D8", Offset = "0xB7D0D8", VA = "0xB7D0D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xB7D248", Offset = "0xB7D248", VA = "0xB7D248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xB7ED74", Offset = "0xB7ED74", VA = "0xB7ED74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xB7ED78", Offset = "0xB7ED78", VA = "0xB7ED78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xB8140C", Offset = "0xB8140C", VA = "0xB8140C")]
	private void resetNextKeyDownDelayTime()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xB811D8", Offset = "0xB811D8", VA = "0xB811D8")]
	private void resetNextKeyMoveDelayTime()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xB846EC", Offset = "0xB846EC", VA = "0xB846EC")]
	private void ReturnToWizardStart()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xB83F40", Offset = "0xB83F40", VA = "0xB83F40")]
	public void MenuCancel()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xB81208", Offset = "0xB81208", VA = "0xB81208")]
	private bool SelectCorrectToggle(string _ToggleName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xB84B8C", Offset = "0xB84B8C", VA = "0xB84B8C")]
	public void ApplyComfortTurning(bool ComfortTurningOn)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xB84C9C", Offset = "0xB84C9C", VA = "0xB84C9C")]
	public void ApplyComfortController(int ComfortController)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xB84DE0", Offset = "0xB84DE0", VA = "0xB84DE0")]
	public void ApplyControllerType(bool option_VR_3DInput_Enabled)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xB84C0C", Offset = "0xB84C0C", VA = "0xB84C0C")]
	private void SwitchToComfortPage()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xB84FC4", Offset = "0xB84FC4", VA = "0xB84FC4")]
	private void SwitchToControllerType()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xB85070", Offset = "0xB85070", VA = "0xB85070")]
	public void ApplyComfortCage(int ComfortCage)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xB84EE4", Offset = "0xB84EE4", VA = "0xB84EE4")]
	private void StartNewGameFromVRComfort()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xB85360", Offset = "0xB85360", VA = "0xB85360")]
	public void SetLoadGameSlot(int gameSlot)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xB85504", Offset = "0xB85504", VA = "0xB85504")]
	private bool ShowControllerType()
	{
		return default(bool);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xB854B4", Offset = "0xB854B4", VA = "0xB854B4")]
	public void StartWizard()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xB851FC", Offset = "0xB851FC", VA = "0xB851FC")]
	public void LoadGameSlot(int gameSlot)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xB85584", Offset = "0xB85584", VA = "0xB85584")]
	public void SetNewGameDifficulty(int gameDifficulty)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xB85160", Offset = "0xB85160", VA = "0xB85160")]
	public void StartNewGameSlot(int gameDifficulty)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xB85624", Offset = "0xB85624", VA = "0xB85624")]
	public void ResetGameSlot()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xB856D0", Offset = "0xB856D0", VA = "0xB856D0")]
	public void CloseResetGameSlot()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xB85720", Offset = "0xB85720", VA = "0xB85720")]
	public void SwitchToVideoOptions()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xB857B8", Offset = "0xB857B8", VA = "0xB857B8")]
	public void QuitToMainMenu()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xB81498", Offset = "0xB81498", VA = "0xB81498")]
	public void SwitchPauseMenuCanvas(string _PauseMenuCanvasName = "PauseMenu_Paused")
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xB86938", Offset = "0xB86938", VA = "0xB86938")]
	private void PrepareControllerTypeCanvas()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xB7D434", Offset = "0xB7D434", VA = "0xB7D434")]
	private bool is3DInputAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xB86DEC", Offset = "0xB86DEC", VA = "0xB86DEC")]
	private string GetCustomLayoutDescription(int index)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xB86F14", Offset = "0xB86F14", VA = "0xB86F14")]
	public void PositionPauseMenu()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xB874A0", Offset = "0xB874A0", VA = "0xB874A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x630F4C", Offset = "0x630F4C")]
	private IEnumerator ChangeRewiredStateDelayed(float delay, string categoryName)
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xB87548", Offset = "0xB87548", VA = "0xB87548")]
	public void ShowPauseMenu(bool showPauseMenu, string _PauseMenuCanvasName = "PauseMenu_Paused")
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xB87DA0", Offset = "0xB87DA0", VA = "0xB87DA0")]
	public void SetHookVisibility(bool show)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xB84A60", Offset = "0xB84A60", VA = "0xB84A60")]
	public void HidePauseMenu()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xB87E2C", Offset = "0xB87E2C", VA = "0xB87E2C")]
	public void AcceptDisclaimer()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xB87E7C", Offset = "0xB87E7C", VA = "0xB87E7C")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xB87E84", Offset = "0xB87E84", VA = "0xB87E84")]
	public void Respawn()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xB87F00", Offset = "0xB87F00", VA = "0xB87F00")]
	public void TeleportToHub()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB84968", Offset = "0xB84968", VA = "0xB84968")]
	private void SetSelectedGameObject(GameObject _MenuGameObject)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB85B4C", Offset = "0xB85B4C", VA = "0xB85B4C")]
	public void SetDefaultMenuItem(string _PauseMenuCanvasName)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xB87FDC", Offset = "0xB87FDC", VA = "0xB87FDC")]
	private string CleanFeedbackText(string feedbackText)
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xB880D8", Offset = "0xB880D8", VA = "0xB880D8")]
	public void SubmitFeedback()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xB859E4", Offset = "0xB859E4", VA = "0xB859E4")]
	private void EmptyFeedbackFields()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xB8599C", Offset = "0xB8599C", VA = "0xB8599C")]
	private string GetFeedbackLocation()
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xB85920", Offset = "0xB85920", VA = "0xB85920")]
	private string GetFeedbackLevel()
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xB847C8", Offset = "0xB847C8", VA = "0xB847C8")]
	public void ReturnFromOptions()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xB880DC", Offset = "0xB880DC", VA = "0xB880DC")]
	public void ResetOptions(string _OptionsMenu)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xB84880", Offset = "0xB84880", VA = "0xB84880")]
	public void CancelOptions(string _OptionsMenu)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xB8815C", Offset = "0xB8815C", VA = "0xB8815C")]
	public void ApplyOptions(string _OptionsMenu)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xB8949C", Offset = "0xB8949C", VA = "0xB8949C")]
	public void ApplyPauseMenu_Options_Game()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xB8960C", Offset = "0xB8960C", VA = "0xB8960C")]
	public void ApplyPauseMenu_Options_Controllers()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xB84E7C", Offset = "0xB84E7C", VA = "0xB84E7C")]
	private void Update3DInputEnabled()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xB7D760", Offset = "0xB7D760", VA = "0xB7D760")]
	public void ApplyPauseMenu_Options_VR()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xB896A0", Offset = "0xB896A0", VA = "0xB896A0")]
	private void UpdateHookAngles(float force_angle)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xB7D8D4", Offset = "0xB7D8D4", VA = "0xB7D8D4")]
	public void SetCanvasOptions(string _OptionsMenu)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xB89A58", Offset = "0xB89A58", VA = "0xB89A58")]
	public void UpdateCustomControllerLayoutHelp()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xB89AE4", Offset = "0xB89AE4", VA = "0xB89AE4")]
	private string ResToString(Resolution res)
	{
		return null;
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xB7D4A4", Offset = "0xB7D4A4", VA = "0xB7D4A4")]
	private void initSliderCallbacks()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xB81108", Offset = "0xB81108", VA = "0xB81108")]
	private void selectButton(GameObject _ButtonGameObject, bool _PlaySound = true)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xB81278", Offset = "0xB81278", VA = "0xB81278")]
	private bool SendSubmitEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xB89B98", Offset = "0xB89B98", VA = "0xB89B98")]
	private string CleanTextForJSON(string InputSting)
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xB89C6C", Offset = "0xB89C6C", VA = "0xB89C6C")]
	private bool SubmitFeedbackDirectToJira(string Summary, string Description)
	{
		return default(bool);
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xB80DFC", Offset = "0xB80DFC", VA = "0xB80DFC")]
	private void LiveUpdateCurrentCanvas()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xB8ABB8", Offset = "0xB8ABB8", VA = "0xB8ABB8")]
	private void LiveUpdate_PauseMenu_Controller_Type()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xB8AE00", Offset = "0xB8AE00", VA = "0xB8AE00")]
	private void LiveUpdate_PauseMenu_Options_Controller_Layout()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xB8AEAC", Offset = "0xB8AEAC", VA = "0xB8AEAC")]
	private void ReplaceQuitButtonOnMainMenu(bool vr_toggle_available)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xB8B20C", Offset = "0xB8B20C", VA = "0xB8B20C")]
	private void SwapVideoAndVRButtons()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xB8B5EC", Offset = "0xB8B5EC", VA = "0xB8B5EC")]
	private void RemoveFeedbackButton(bool vr_toggle_available)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xB8B940", Offset = "0xB8B940", VA = "0xB8B940")]
	private void AdjustControlMenu()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xB8C17C", Offset = "0xB8C17C", VA = "0xB8C17C")]
	private string GetDeleteSlotText()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xB8C1C4", Offset = "0xB8C1C4", VA = "0xB8C1C4")]
	private void MakePS4MenuAdjustments()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xB8C258", Offset = "0xB8C258", VA = "0xB8C258")]
	private void MakePS4MenuPerFrameAdjustments()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xB8C520", Offset = "0xB8C520", VA = "0xB8C520")]
	public PauseMenu()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xB8C5EC", Offset = "0xB8C5EC", VA = "0xB8C5EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630FB0", Offset = "0x630FB0")]
	private void <initSliderCallbacks>b__266_0(float <p0>)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB8C650", Offset = "0xB8C650", VA = "0xB8C650")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630FC0", Offset = "0x630FC0")]
	private void <initSliderCallbacks>b__266_1(float <p0>)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xB8C6B4", Offset = "0xB8C6B4", VA = "0xB8C6B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630FD0", Offset = "0x630FD0")]
	private void <initSliderCallbacks>b__266_2(float <p0>)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB8C718", Offset = "0xB8C718", VA = "0xB8C718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630FE0", Offset = "0x630FE0")]
	private void <initSliderCallbacks>b__266_3(float <p0>)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB8C77C", Offset = "0xB8C77C", VA = "0xB8C77C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630FF0", Offset = "0x630FF0")]
	private void <initSliderCallbacks>b__266_4(float <p0>)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB8C7E0", Offset = "0xB8C7E0", VA = "0xB8C7E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631000", Offset = "0x631000")]
	private void <initSliderCallbacks>b__266_5(float <p0>)
	{
	}
}
[Token(Token = "0x200003A")]
public class GameState
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisclaimerShown;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB4CEC4", Offset = "0xB4CEC4", VA = "0xB4CEC4")]
	public GameState()
	{
	}
}
[Token(Token = "0x200003B")]
public class Options
{
	[Token(Token = "0x200018C")]
	public enum JoyStickLayoutEnum
	{
		[Token(Token = "0x4000C12")]
		JOYSTICK_LAYOUT_DEFAULT,
		[Token(Token = "0x4000C13")]
		JOYSTICK_LAYOUT_ALTERNATIVE
	}

	[Token(Token = "0x200018D")]
	public enum KeyboardLayoutEnum
	{
		[Token(Token = "0x4000C15")]
		KEYBOARD_LAYOUT_DEFAULT,
		[Token(Token = "0x4000C16")]
		KEYBOARD_LAYOUT_ALTERNATIVE
	}

	[Token(Token = "0x200018E")]
	public enum CustomControllerLayoutEnum
	{
		[Token(Token = "0x4000C18")]
		CUSTOM_LAYOUT_NORMAL,
		[Token(Token = "0x4000C19")]
		CUSTOM_LAYOUT_EXPERT,
		[Token(Token = "0x4000C1A")]
		CUSTOM_LAYOUT_BEGINNER,
		[Token(Token = "0x4000C1B")]
		CUSTOM_LAYOUT_ADVANCED,
		[Token(Token = "0x4000C1C")]
		CUSTOM_LAYOUT_ROPE_CONTROL
	}

	[Token(Token = "0x200018F")]
	public enum StaticCueTypeEnum
	{
		[Token(Token = "0x4000C1E")]
		NONE = -1,
		[Token(Token = "0x4000C1F")]
		ORB,
		[Token(Token = "0x4000C20")]
		TRANSPARENT,
		[Token(Token = "0x4000C21")]
		SOLID_CAGE
	}

	[Token(Token = "0x2000190")]
	public enum LevelTimerShownEnum
	{
		[Token(Token = "0x4000C23")]
		OFF,
		[Token(Token = "0x4000C24")]
		ON,
		[Token(Token = "0x4000C25")]
		CHALLENGE_ONLY,
		[Token(Token = "0x4000C26")]
		WORLDS_ONLY
	}

	[Token(Token = "0x2000191")]
	public enum AntiAliasingEnum
	{
		[Token(Token = "0x4000C28")]
		DISABLED,
		[Token(Token = "0x4000C29")]
		MULTI_SAMPLING_X2,
		[Token(Token = "0x4000C2A")]
		MULTI_SAMPLING_X4,
		[Token(Token = "0x4000C2B")]
		MULTI_SAMPLING_X8
	}

	[Token(Token = "0x2000192")]
	public enum ShadowsEnum
	{
		[Token(Token = "0x4000C2D")]
		DISABLED,
		[Token(Token = "0x4000C2E")]
		HARD_ONLY,
		[Token(Token = "0x4000C2F")]
		HARD_AND_SOFT
	}

	[Token(Token = "0x2000193")]
	public enum VSyncEnum
	{
		[Token(Token = "0x4000C31")]
		DISABLED,
		[Token(Token = "0x4000C32")]
		EVERY_V_BLANK,
		[Token(Token = "0x4000C33")]
		EVERY_SECOND_V_BLANK
	}

	[Token(Token = "0x2000194")]
	public enum MontionControllerEnum
	{
		[Token(Token = "0x4000C35")]
		DISABLED,
		[Token(Token = "0x4000C36")]
		FORCE_DYNAMICS,
		[Token(Token = "0x4000C37")]
		WIZDISH
	}

	[Token(Token = "0x2000195")]
	public enum MovementStyleEnum
	{
		[Token(Token = "0x4000C39")]
		DEFAULT,
		[Token(Token = "0x4000C3A")]
		DECOUPLED_HEAD,
		[Token(Token = "0x4000C3B")]
		DECOUPLED_HEAD_SIMPLE
	}

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Language.LanguageEnum Option_Game_GameLanguage;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool Option_Game_Crosshair;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool Option_Game_AdvancedRope;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public static bool Option_Game_SceneFade;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
	public static bool Option_Game_ShowGameTimer;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Option_Game_ShowSubtitles;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static LevelTimerShownEnum Option_Game_ShowLevelTimer;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool Option_Game_ShowCharacterPosition;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float Option_Audio_MasterVolume;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float Option_Audio_SoundVolume;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float Option_Audio_MusicVolume;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float Option_Audio_AmbientVolume;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static float Option_Audio_NarrationVolume;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool Option_Audio_Spatialized;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int Option_Video_Resolution;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool Option_Video_FullScreen;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int Option_Video_Quality;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static AntiAliasingEnum Option_Video_Anti_Aliasing;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static ShadowsEnum Option_Video_Shadows;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static VSyncEnum Option_Video_VSync;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static JoyStickLayoutEnum Option_Controllers_JoyStickLayout;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static KeyboardLayoutEnum Option_Controllers_KeyboardLayout;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static CustomControllerLayoutEnum Option_Controllers_CustomControllerLayout;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float Option_Controllers_VerticalSensitivity;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float Option_Controllers_HorizontalSensitivity;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static bool Option_Controllers_ShowControllerHelp;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public static bool Option_Controllers_VerticalInverted;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public static bool Option_Controllers_HorizontalInverted;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public static bool Option_Controllers_LimitVerticalTurn;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static bool Option_Controllers_VibrationOn;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static float Option_Controllers_VibrationStrength;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static bool Option_Control_DisableControllerTurning;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public static bool Option_Control_DisableControllerStrafing;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static MontionControllerEnum Option_Control_MotionController;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static bool Option_VR_Seated;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static StaticCueTypeEnum Option_VR_Cage;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static bool Option_VR_StandingMarker;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public static bool Option_VR_3DInput_Enabled;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	public static bool Option_VR_LookMenuSupport;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	public static bool Option_VR_ComfortTurning;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static float Option_VR_HookAngle;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static MovementStyleEnum Option_VR_MovementStyle;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string Option_Feedback_Name;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string Option_Feedback_Email;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xD04D04", Offset = "0xD04D04", VA = "0xD04D04")]
	private static string GetOptionsFilename()
	{
		return null;
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xD050D4", Offset = "0xD050D4", VA = "0xD050D4")]
	private static string GetOptionsFilePath()
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xD0515C", Offset = "0xD0515C", VA = "0xD0515C")]
	public static JoyStickLayoutEnum SetDefault_Option_Controllers_JoyStickLayout()
	{
		return default(JoyStickLayoutEnum);
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xD05164", Offset = "0xD05164", VA = "0xD05164")]
	public static CustomControllerLayoutEnum SetDefault_Option_Controllers_CustomControllersLayout()
	{
		return default(CustomControllerLayoutEnum);
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xD05230", Offset = "0xD05230", VA = "0xD05230")]
	public static bool SetDefault_Option_VR_Seated()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xD052D4", Offset = "0xD052D4", VA = "0xD052D4")]
	public static StaticCueTypeEnum SetDefault_Option_VR_Cage()
	{
		return default(StaticCueTypeEnum);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD052DC", Offset = "0xD052DC", VA = "0xD052DC")]
	public static bool SetDefault_Option_Controllers_LimitVerticalTurn()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD0534C", Offset = "0xD0534C", VA = "0xD0534C")]
	public static bool SetDefault_Option_Control_DisableControllerTurning()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xD05354", Offset = "0xD05354", VA = "0xD05354")]
	public static bool SetDefault_Option_Control_DisableControllerStrafing()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xD0535C", Offset = "0xD0535C", VA = "0xD0535C")]
	public static MontionControllerEnum SetDefault_Option_Control_MotionController()
	{
		return default(MontionControllerEnum);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xD05404", Offset = "0xD05404", VA = "0xD05404")]
	private static bool CommandLineExists(string CommandLineParameter)
	{
		return default(bool);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xD054A0", Offset = "0xD054A0", VA = "0xD054A0")]
	public static bool SetDefault_Option_VR_StandingMarker()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xD054A8", Offset = "0xD054A8", VA = "0xD054A8")]
	public static bool SetDefault_Option_3DInput_Enabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xD05578", Offset = "0xD05578", VA = "0xD05578")]
	public static bool Platform_3DInput_Enabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xD05618", Offset = "0xD05618", VA = "0xD05618")]
	public static bool SetDefault_Option_Game_Crosshair()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xD05620", Offset = "0xD05620", VA = "0xD05620")]
	public static bool SetDefault_Option_VR_ComfortTurning()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xD05680", Offset = "0xD05680", VA = "0xD05680")]
	public static float SetDefault_Option_VR_HookAngle()
	{
		return default(float);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xD05760", Offset = "0xD05760", VA = "0xD05760")]
	public static bool SetDefault_Option_Sound_Spatialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xD057C0", Offset = "0xD057C0", VA = "0xD057C0")]
	public static void ResetOptions(string _OptionsMenu)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xD05C40", Offset = "0xD05C40", VA = "0xD05C40")]
	public static void SaveOptions()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD06690", Offset = "0xD06690", VA = "0xD06690")]
	public static void LoadOptions()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xD07374", Offset = "0xD07374", VA = "0xD07374")]
	public Options()
	{
	}
}
[Serializable]
[Token(Token = "0x200003C")]
public class SerializeOptionsClass
{
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Options.AntiAliasingEnum _Option_Video_Anti_Aliasing;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D784", Offset = "0x62D784")]
	private Language.LanguageEnum <Option_Game_GameLanguage>k__BackingField;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D794", Offset = "0x62D794")]
	private bool <Option_Game_Crosshair>k__BackingField;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D7A4", Offset = "0x62D7A4")]
	private bool <Option_Game_AdvancedRope>k__BackingField;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D7B4", Offset = "0x62D7B4")]
	private bool <Option_Game_ShowGameTimer>k__BackingField;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D7C4", Offset = "0x62D7C4")]
	private Options.LevelTimerShownEnum <Option_Game_ShowLevelTimer>k__BackingField;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D7D4", Offset = "0x62D7D4")]
	private bool <Option_Game_ShowSubtitles>k__BackingField;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D7E4", Offset = "0x62D7E4")]
	private float <Option_Audio_MasterVolume>k__BackingField;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D7F4", Offset = "0x62D7F4")]
	private float <Option_Audio_SoundVolume>k__BackingField;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D804", Offset = "0x62D804")]
	private float <Option_Audio_MusicVolume>k__BackingField;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D814", Offset = "0x62D814")]
	private float <Option_Audio_AmbientVolume>k__BackingField;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D824", Offset = "0x62D824")]
	private float <Option_Audio_NarrationVolume>k__BackingField;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D834", Offset = "0x62D834")]
	private bool <Option_Audio_Spatialized>k__BackingField;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D844", Offset = "0x62D844")]
	private int <Option_Video_Resolution>k__BackingField;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D854", Offset = "0x62D854")]
	private bool <Option_Video_FullScreen>k__BackingField;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D864", Offset = "0x62D864")]
	private int <Option_Video_Quality>k__BackingField;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D874", Offset = "0x62D874")]
	private Options.AntiAliasingEnum <Option_Video_Anti_Aliasing>k__BackingField;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D884", Offset = "0x62D884")]
	private Options.ShadowsEnum <Option_Video_Shadows>k__BackingField;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D894", Offset = "0x62D894")]
	private Options.VSyncEnum <Option_Video_VSync>k__BackingField;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D8A4", Offset = "0x62D8A4")]
	private Options.JoyStickLayoutEnum <Option_Controllers_JoyStickLayout>k__BackingField;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D8B4", Offset = "0x62D8B4")]
	private Options.KeyboardLayoutEnum <Option_Controllers_KeyboardLayout>k__BackingField;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D8C4", Offset = "0x62D8C4")]
	private Options.CustomControllerLayoutEnum <Option_Controllers_CustomControllerLayout>k__BackingField;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D8D4", Offset = "0x62D8D4")]
	private float <Option_Controllers_VerticalSensitivity>k__BackingField;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D8E4", Offset = "0x62D8E4")]
	private float <Option_Controllers_HorizontalSensitivity>k__BackingField;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D8F4", Offset = "0x62D8F4")]
	private bool <Option_Controllers_ShowControllerHelp>k__BackingField;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D904", Offset = "0x62D904")]
	private bool <Option_Controllers_VerticalInverted>k__BackingField;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D914", Offset = "0x62D914")]
	private bool <Option_Controllers_HorizontalInverted>k__BackingField;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D924", Offset = "0x62D924")]
	private bool <Option_Controllers_LimitVerticalTurn>k__BackingField;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D934", Offset = "0x62D934")]
	private bool <Option_Controllers_VibrationOn>k__BackingField;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D944", Offset = "0x62D944")]
	private float <Option_Controllers_VibrationStrength>k__BackingField;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D954", Offset = "0x62D954")]
	private bool <Option_Control_DisableControllerTurning>k__BackingField;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D964", Offset = "0x62D964")]
	private bool <Option_Control_DisableControllerStrafing>k__BackingField;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D974", Offset = "0x62D974")]
	private Options.MontionControllerEnum <Option_Control_MotionController>k__BackingField;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D984", Offset = "0x62D984")]
	private bool <Option_VR_Seated>k__BackingField;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D994", Offset = "0x62D994")]
	private Options.StaticCueTypeEnum <Option_VR_Cage>k__BackingField;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D9A4", Offset = "0x62D9A4")]
	private bool <Option_VR_StandingMarker>k__BackingField;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D9B4", Offset = "0x62D9B4")]
	private bool <Option_VR_3DInput_Enabled>k__BackingField;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D9C4", Offset = "0x62D9C4")]
	private bool <Option_VR_LookMenuSupport>k__BackingField;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D9D4", Offset = "0x62D9D4")]
	private bool <Option_VR_ComfortTurning>k__BackingField;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D9E4", Offset = "0x62D9E4")]
	private float <Option_VR_HookAngle>k__BackingField;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62D9F4", Offset = "0x62D9F4")]
	private Options.MovementStyleEnum <Option_VR_MovementStyle>k__BackingField;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DA04", Offset = "0x62DA04")]
	private string <Option_Feedback_Name>k__BackingField;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62DA14", Offset = "0x62DA14")]
	private string <Option_Feedback_Email>k__BackingField;

	[Token(Token = "0x17000001")]
	public Language.LanguageEnum Option_Game_GameLanguage
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xC85CE0", Offset = "0xC85CE0", VA = "0xC85CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631010", Offset = "0x631010")]
		get
		{
			return default(Language.LanguageEnum);
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xC85CE8", Offset = "0xC85CE8", VA = "0xC85CE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631020", Offset = "0x631020")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public bool Option_Game_Crosshair
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xC85CF0", Offset = "0xC85CF0", VA = "0xC85CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631030", Offset = "0x631030")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xC85CF8", Offset = "0xC85CF8", VA = "0xC85CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631040", Offset = "0x631040")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public bool Option_Game_AdvancedRope
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xC85D04", Offset = "0xC85D04", VA = "0xC85D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631050", Offset = "0x631050")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xC85D0C", Offset = "0xC85D0C", VA = "0xC85D0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631060", Offset = "0x631060")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public bool Option_Game_ShowGameTimer
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xC85D18", Offset = "0xC85D18", VA = "0xC85D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631070", Offset = "0x631070")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xC85D20", Offset = "0xC85D20", VA = "0xC85D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631080", Offset = "0x631080")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public Options.LevelTimerShownEnum Option_Game_ShowLevelTimer
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xC85D2C", Offset = "0xC85D2C", VA = "0xC85D2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631090", Offset = "0x631090")]
		get
		{
			return default(Options.LevelTimerShownEnum);
		}
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xC85D34", Offset = "0xC85D34", VA = "0xC85D34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6310A0", Offset = "0x6310A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public bool Option_Game_ShowSubtitles
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xC85D3C", Offset = "0xC85D3C", VA = "0xC85D3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6310B0", Offset = "0x6310B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xC85D44", Offset = "0xC85D44", VA = "0xC85D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6310C0", Offset = "0x6310C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public float Option_Audio_MasterVolume
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xC85D50", Offset = "0xC85D50", VA = "0xC85D50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6310D0", Offset = "0x6310D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xC85D58", Offset = "0xC85D58", VA = "0xC85D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6310E0", Offset = "0x6310E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public float Option_Audio_SoundVolume
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xC85D60", Offset = "0xC85D60", VA = "0xC85D60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6310F0", Offset = "0x6310F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xC85D68", Offset = "0xC85D68", VA = "0xC85D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631100", Offset = "0x631100")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public float Option_Audio_MusicVolume
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xC85D70", Offset = "0xC85D70", VA = "0xC85D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631110", Offset = "0x631110")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xC85D78", Offset = "0xC85D78", VA = "0xC85D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631120", Offset = "0x631120")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public float Option_Audio_AmbientVolume
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xC85D80", Offset = "0xC85D80", VA = "0xC85D80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631130", Offset = "0x631130")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xC85D88", Offset = "0xC85D88", VA = "0xC85D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631140", Offset = "0x631140")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public float Option_Audio_NarrationVolume
	{
		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xC85D90", Offset = "0xC85D90", VA = "0xC85D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631150", Offset = "0x631150")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xC85D98", Offset = "0xC85D98", VA = "0xC85D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631160", Offset = "0x631160")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public bool Option_Audio_Spatialized
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xC85DA0", Offset = "0xC85DA0", VA = "0xC85DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631170", Offset = "0x631170")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xC85DA8", Offset = "0xC85DA8", VA = "0xC85DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631180", Offset = "0x631180")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public int Option_Video_Resolution
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xC85DB4", Offset = "0xC85DB4", VA = "0xC85DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631190", Offset = "0x631190")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000201")]
		[Address(RVA = "0xC85DBC", Offset = "0xC85DBC", VA = "0xC85DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6311A0", Offset = "0x6311A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public bool Option_Video_FullScreen
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0xC85DC4", Offset = "0xC85DC4", VA = "0xC85DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6311B0", Offset = "0x6311B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0xC85DCC", Offset = "0xC85DCC", VA = "0xC85DCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6311C0", Offset = "0x6311C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public int Option_Video_Quality
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0xC85DD8", Offset = "0xC85DD8", VA = "0xC85DD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6311D0", Offset = "0x6311D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000205")]
		[Address(RVA = "0xC85DE0", Offset = "0xC85DE0", VA = "0xC85DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6311E0", Offset = "0x6311E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Options.AntiAliasingEnum Option_Video_Anti_Aliasing
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0xC85DE8", Offset = "0xC85DE8", VA = "0xC85DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6311F0", Offset = "0x6311F0")]
		get
		{
			return default(Options.AntiAliasingEnum);
		}
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xC85DF0", Offset = "0xC85DF0", VA = "0xC85DF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631200", Offset = "0x631200")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public Options.ShadowsEnum Option_Video_Shadows
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xC85DF8", Offset = "0xC85DF8", VA = "0xC85DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631210", Offset = "0x631210")]
		get
		{
			return default(Options.ShadowsEnum);
		}
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xC85E00", Offset = "0xC85E00", VA = "0xC85E00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631220", Offset = "0x631220")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public Options.VSyncEnum Option_Video_VSync
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0xC85E08", Offset = "0xC85E08", VA = "0xC85E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631230", Offset = "0x631230")]
		get
		{
			return default(Options.VSyncEnum);
		}
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xC85E10", Offset = "0xC85E10", VA = "0xC85E10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631240", Offset = "0x631240")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Options.JoyStickLayoutEnum Option_Controllers_JoyStickLayout
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xC85E18", Offset = "0xC85E18", VA = "0xC85E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631250", Offset = "0x631250")]
		get
		{
			return default(Options.JoyStickLayoutEnum);
		}
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xC85E20", Offset = "0xC85E20", VA = "0xC85E20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631260", Offset = "0x631260")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Options.KeyboardLayoutEnum Option_Controllers_KeyboardLayout
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0xC85E28", Offset = "0xC85E28", VA = "0xC85E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631270", Offset = "0x631270")]
		get
		{
			return default(Options.KeyboardLayoutEnum);
		}
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xC85E30", Offset = "0xC85E30", VA = "0xC85E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631280", Offset = "0x631280")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public Options.CustomControllerLayoutEnum Option_Controllers_CustomControllerLayout
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xC85E38", Offset = "0xC85E38", VA = "0xC85E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631290", Offset = "0x631290")]
		get
		{
			return default(Options.CustomControllerLayoutEnum);
		}
		[Token(Token = "0x6000211")]
		[Address(RVA = "0xC85E40", Offset = "0xC85E40", VA = "0xC85E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6312A0", Offset = "0x6312A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public float Option_Controllers_VerticalSensitivity
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0xC85E48", Offset = "0xC85E48", VA = "0xC85E48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6312B0", Offset = "0x6312B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0xC85E50", Offset = "0xC85E50", VA = "0xC85E50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6312C0", Offset = "0x6312C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public float Option_Controllers_HorizontalSensitivity
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xC85E58", Offset = "0xC85E58", VA = "0xC85E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6312D0", Offset = "0x6312D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xC85E60", Offset = "0xC85E60", VA = "0xC85E60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6312E0", Offset = "0x6312E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public bool Option_Controllers_ShowControllerHelp
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0xC85E68", Offset = "0xC85E68", VA = "0xC85E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6312F0", Offset = "0x6312F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000217")]
		[Address(RVA = "0xC85E70", Offset = "0xC85E70", VA = "0xC85E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631300", Offset = "0x631300")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool Option_Controllers_VerticalInverted
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xC85E7C", Offset = "0xC85E7C", VA = "0xC85E7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631310", Offset = "0x631310")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xC85E84", Offset = "0xC85E84", VA = "0xC85E84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631320", Offset = "0x631320")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public bool Option_Controllers_HorizontalInverted
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xC85E90", Offset = "0xC85E90", VA = "0xC85E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631330", Offset = "0x631330")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xC85E98", Offset = "0xC85E98", VA = "0xC85E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631340", Offset = "0x631340")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public bool Option_Controllers_LimitVerticalTurn
	{
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xC85EA4", Offset = "0xC85EA4", VA = "0xC85EA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631350", Offset = "0x631350")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600021D")]
		[Address(RVA = "0xC85EAC", Offset = "0xC85EAC", VA = "0xC85EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631360", Offset = "0x631360")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public bool Option_Controllers_VibrationOn
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0xC85EB8", Offset = "0xC85EB8", VA = "0xC85EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631370", Offset = "0x631370")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0xC85EC0", Offset = "0xC85EC0", VA = "0xC85EC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631380", Offset = "0x631380")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public float Option_Controllers_VibrationStrength
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0xC85ECC", Offset = "0xC85ECC", VA = "0xC85ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631390", Offset = "0x631390")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0xC85ED4", Offset = "0xC85ED4", VA = "0xC85ED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6313A0", Offset = "0x6313A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public bool Option_Control_DisableControllerTurning
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0xC85EDC", Offset = "0xC85EDC", VA = "0xC85EDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6313B0", Offset = "0x6313B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000223")]
		[Address(RVA = "0xC85EE4", Offset = "0xC85EE4", VA = "0xC85EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6313C0", Offset = "0x6313C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public bool Option_Control_DisableControllerStrafing
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xC85EF0", Offset = "0xC85EF0", VA = "0xC85EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6313D0", Offset = "0x6313D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xC85EF8", Offset = "0xC85EF8", VA = "0xC85EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6313E0", Offset = "0x6313E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public Options.MontionControllerEnum Option_Control_MotionController
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xC85F04", Offset = "0xC85F04", VA = "0xC85F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6313F0", Offset = "0x6313F0")]
		get
		{
			return default(Options.MontionControllerEnum);
		}
		[Token(Token = "0x6000227")]
		[Address(RVA = "0xC85F0C", Offset = "0xC85F0C", VA = "0xC85F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631400", Offset = "0x631400")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public bool Option_VR_Seated
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0xC85F14", Offset = "0xC85F14", VA = "0xC85F14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631410", Offset = "0x631410")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000229")]
		[Address(RVA = "0xC85F1C", Offset = "0xC85F1C", VA = "0xC85F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631420", Offset = "0x631420")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public Options.StaticCueTypeEnum Option_VR_Cage
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0xC85F28", Offset = "0xC85F28", VA = "0xC85F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631430", Offset = "0x631430")]
		get
		{
			return default(Options.StaticCueTypeEnum);
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0xC85F30", Offset = "0xC85F30", VA = "0xC85F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631440", Offset = "0x631440")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public bool Option_VR_StandingMarker
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0xC85F38", Offset = "0xC85F38", VA = "0xC85F38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631450", Offset = "0x631450")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600022D")]
		[Address(RVA = "0xC85F40", Offset = "0xC85F40", VA = "0xC85F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631460", Offset = "0x631460")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public bool Option_VR_3DInput_Enabled
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xC85F4C", Offset = "0xC85F4C", VA = "0xC85F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631470", Offset = "0x631470")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0xC85F54", Offset = "0xC85F54", VA = "0xC85F54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631480", Offset = "0x631480")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public bool Option_VR_LookMenuSupport
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0xC85F60", Offset = "0xC85F60", VA = "0xC85F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631490", Offset = "0x631490")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000231")]
		[Address(RVA = "0xC85F68", Offset = "0xC85F68", VA = "0xC85F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6314A0", Offset = "0x6314A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public bool Option_VR_ComfortTurning
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0xC85F74", Offset = "0xC85F74", VA = "0xC85F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6314B0", Offset = "0x6314B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000233")]
		[Address(RVA = "0xC85F7C", Offset = "0xC85F7C", VA = "0xC85F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6314C0", Offset = "0x6314C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public float Option_VR_HookAngle
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0xC85F88", Offset = "0xC85F88", VA = "0xC85F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6314D0", Offset = "0x6314D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000235")]
		[Address(RVA = "0xC85F90", Offset = "0xC85F90", VA = "0xC85F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6314E0", Offset = "0x6314E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public Options.MovementStyleEnum Option_VR_MovementStyle
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0xC85F98", Offset = "0xC85F98", VA = "0xC85F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6314F0", Offset = "0x6314F0")]
		get
		{
			return default(Options.MovementStyleEnum);
		}
		[Token(Token = "0x6000237")]
		[Address(RVA = "0xC85FA0", Offset = "0xC85FA0", VA = "0xC85FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631500", Offset = "0x631500")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public string Option_Feedback_Name
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0xC85FA8", Offset = "0xC85FA8", VA = "0xC85FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631510", Offset = "0x631510")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000239")]
		[Address(RVA = "0xC85FB0", Offset = "0xC85FB0", VA = "0xC85FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631520", Offset = "0x631520")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public string Option_Feedback_Email
	{
		[Token(Token = "0x600023A")]
		[Address(RVA = "0xC85FB8", Offset = "0xC85FB8", VA = "0xC85FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631530", Offset = "0x631530")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023B")]
		[Address(RVA = "0xC85FC0", Offset = "0xC85FC0", VA = "0xC85FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631540", Offset = "0x631540")]
		set
		{
		}
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xC85CD8", Offset = "0xC85CD8", VA = "0xC85CD8")]
	public SerializeOptionsClass()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xC85FC8", Offset = "0xC85FC8", VA = "0xC85FC8")]
	[OnDeserializing]
	internal void SetDefaults(StreamingContext sc)
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
public class GameStats
{
	[Token(Token = "0x2000196")]
	public enum SpeedRunTimerRunningEnum
	{
		[Token(Token = "0x4000C3D")]
		NO,
		[Token(Token = "0x4000C3E")]
		YES,
		[Token(Token = "0x4000C3F")]
		ENDED
	}

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float totalGamePlayedTime;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelTimers levelTimers;

	[NonSerialized]
	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float totalGameTime_StartTimeStamp;

	[NonSerialized]
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float totalLevelTime_StartTimeStamp;

	[NonSerialized]
	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedRunTime_StartTimeStamp;

	[NonSerialized]
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speedRunTime_EndTimeStamp;

	[NonSerialized]
	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float totalGameSession_StartTimeStamp;

	[NonSerialized]
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameLogicScript.LevelID currentLevelID;

	[NonSerialized]
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpeedRunTimerRunningEnum speedRunTimerRunning;

	[NonSerialized]
	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] checkpointTimes;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xB3F714", Offset = "0xB3F714", VA = "0xB3F714")]
	public GameStats()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xB4A1A0", Offset = "0xB4A1A0", VA = "0xB4A1A0")]
	public void StartTotalLevelTimer()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xB4CEEC", Offset = "0xB4CEEC", VA = "0xB4CEEC")]
	public float GetTotalGameTime(float _time)
	{
		return default(float);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xB4CF00", Offset = "0xB4CF00", VA = "0xB4CF00")]
	public string GetTotalGameTimeFormated(float _time)
	{
		return null;
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xB4CF18", Offset = "0xB4CF18", VA = "0xB4CF18")]
	public void SetTotalGamePlayedTime(float _time)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xB4CF34", Offset = "0xB4CF34", VA = "0xB4CF34")]
	public void ResetTotalGameTime_StartTimeStamp(float _time)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xB4CF3C", Offset = "0xB4CF3C", VA = "0xB4CF3C")]
	public float GetTotalLevelTime(float _time)
	{
		return default(float);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xB4CF9C", Offset = "0xB4CF9C", VA = "0xB4CF9C")]
	public string GetTotalLevelTimeFormated(float _time)
	{
		return null;
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xB4CFB4", Offset = "0xB4CFB4", VA = "0xB4CFB4")]
	public void SetTotalLevelPlayedTime(float _time)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xB4D018", Offset = "0xB4D018", VA = "0xB4D018")]
	public void ResetTotalLevelTime_StartTimeStamp(float _time)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xB4D020", Offset = "0xB4D020", VA = "0xB4D020")]
	public float GetTotalSessionTime(float _time)
	{
		return default(float);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xB4D02C", Offset = "0xB4D02C", VA = "0xB4D02C")]
	public string GetTotalSession_TimeFormated(float _time)
	{
		return null;
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xB4CEE4", Offset = "0xB4CEE4", VA = "0xB4CEE4")]
	public void ResetTotalSessionTime_StartTimeStamp(float _time)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xB4D03C", Offset = "0xB4D03C", VA = "0xB4D03C")]
	public void StartSpeedRunTimer(float _time)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xB4D0AC", Offset = "0xB4D0AC", VA = "0xB4D0AC")]
	public bool CheckpointSpeedRunTimer(int checkPointIndex, float _time)
	{
		return default(bool);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xB4D160", Offset = "0xB4D160", VA = "0xB4D160")]
	public void EndSpeedRunTimer(float _time)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xB4CED0", Offset = "0xB4CED0", VA = "0xB4CED0")]
	public void ResetSpeedRunTimer()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xB4D1CC", Offset = "0xB4D1CC", VA = "0xB4D1CC")]
	public float GetSpeedRun_Time(float _time)
	{
		return default(float);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xB4D1F4", Offset = "0xB4D1F4", VA = "0xB4D1F4")]
	public string GetSpeedRun_TimeFormated(float _time)
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xB4CEDC", Offset = "0xB4CEDC", VA = "0xB4CEDC")]
	public void ResetSpeedRunTime_StartTimeStamp(float _time)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xB4D184", Offset = "0xB4D184", VA = "0xB4D184")]
	public void SetSpeedRunTime(float _time)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xB4D220", Offset = "0xB4D220", VA = "0xB4D220")]
	public void SetSpeedRunTimeForLevel(GameLogicScript.LevelID level, float _time)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xB4D268", Offset = "0xB4D268", VA = "0xB4D268")]
	public float GetSpeedRunPersonalBestTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xB4D2A0", Offset = "0xB4D2A0", VA = "0xB4D2A0")]
	public float GetSpeedRunPersonalBestTimeForLevel(GameLogicScript.LevelID level)
	{
		return default(float);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xB4D2D8", Offset = "0xB4D2D8", VA = "0xB4D2D8")]
	public string GetSpeedRunPersonalBestTime_TimeFormated()
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xB4D178", Offset = "0xB4D178", VA = "0xB4D178")]
	public float GetSpeedRunTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xB4D318", Offset = "0xB4D318", VA = "0xB4D318")]
	public string GetLastSpeedRunTime_TimeFormated()
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xB4D358", Offset = "0xB4D358", VA = "0xB4D358")]
	public float GetLastSpeedRunTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xB4D390", Offset = "0xB4D390", VA = "0xB4D390")]
	public string GetPreviousSpeedRunTime_TimeFormated()
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xB4B728", Offset = "0xB4B728", VA = "0xB4B728")]
	public void preSave()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xB4C30C", Offset = "0xB4C30C", VA = "0xB4C30C")]
	public void postLoad()
	{
	}
}
[Serializable]
[Token(Token = "0x200003E")]
public class LevelTime
{
	[Token(Token = "0x600025C")]
	[Address(RVA = "0xAF0CC4", Offset = "0xAF0CC4", VA = "0xAF0CC4")]
	public LevelTime()
	{
	}
}
[Serializable]
[Token(Token = "0x200003F")]
public class LevelTimer
{
	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameLogicScript.LevelID levelID;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float totalLevelPlayedTime;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lastSpeedRunTime;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float previousSpeedRunTime;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float personalBestSpeedRunTime;

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xAF0CCC", Offset = "0xAF0CCC", VA = "0xAF0CCC")]
	public LevelTimer(GameLogicScript.LevelID _levelID)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xAF0CF8", Offset = "0xAF0CF8", VA = "0xAF0CF8")]
	public void SetTotalLevelPlayedTime(float _totalLevelPlayedTime)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xAF0D00", Offset = "0xAF0D00", VA = "0xAF0D00")]
	public float GetTotalLevelPlayedTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xAF0D08", Offset = "0xAF0D08", VA = "0xAF0D08")]
	public void SetSpeedRunTime(float _SpeedRunTime)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xAF0D30", Offset = "0xAF0D30", VA = "0xAF0D30")]
	public float GetLastSpeedRunTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xAF0D38", Offset = "0xAF0D38", VA = "0xAF0D38")]
	public float GetPersonalBestSpeedRunTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xAF0D40", Offset = "0xAF0D40", VA = "0xAF0D40")]
	public float GetPreviousSpeedRunTime()
	{
		return default(float);
	}
}
[Serializable]
[Token(Token = "0x2000040")]
public class LevelTimers
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LevelTimer[] levelTimers;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xAF0D48", Offset = "0xAF0D48", VA = "0xAF0D48")]
	public LevelTimers()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xAF167C", Offset = "0xAF167C", VA = "0xAF167C")]
	private int GetLevelID(GameLogicScript.LevelID _LevelID)
	{
		return default(int);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xAF169C", Offset = "0xAF169C", VA = "0xAF169C")]
	public void SetTotalLevelPlayedTime(GameLogicScript.LevelID _LevelID, float _totalLevelPlayedTime)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xAF1720", Offset = "0xAF1720", VA = "0xAF1720")]
	public float GetTotalLevelPlayedTime(GameLogicScript.LevelID _LevelID)
	{
		return default(float);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xAF1988", Offset = "0xAF1988", VA = "0xAF1988")]
	public void SetSpeedRunTime(GameLogicScript.LevelID _LevelID, float _SpeedRunTime)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xAF1A2C", Offset = "0xAF1A2C", VA = "0xAF1A2C")]
	public float GetPersonalBestSpeedRunTime(GameLogicScript.LevelID _LevelID)
	{
		return default(float);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xAF1AA4", Offset = "0xAF1AA4", VA = "0xAF1AA4")]
	public float GetLastSpeedRunTime(GameLogicScript.LevelID _LevelID)
	{
		return default(float);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xAF1B1C", Offset = "0xAF1B1C", VA = "0xAF1B1C")]
	public float GetPreviousSpeedRunTime(GameLogicScript.LevelID _LevelID)
	{
		return default(float);
	}
}
[Token(Token = "0x2000041")]
public class SpeedRunResults : MonoBehaviour
{
	[Token(Token = "0x2000197")]
	public enum LeaderboardType
	{
		[Token(Token = "0x4000C41")]
		FRIENDS,
		[Token(Token = "0x4000C42")]
		LOCAL,
		[Token(Token = "0x4000C43")]
		GLOBAL
	}

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DA24", Offset = "0x62DA24")]
	public Text Start_PersonalBest_Time;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text Start_LastRun_Time;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Start_PreviousRun_Time;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DA5C", Offset = "0x62DA5C")]
	public Text End_PersonalBest_Time;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text End_LastRun_Time;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text End_PreviousRun_Time;

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xC98EB0", Offset = "0xC98EB0", VA = "0xC98EB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xC99068", Offset = "0xC99068", VA = "0xC99068")]
	private void Start()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xC9906C", Offset = "0xC9906C", VA = "0xC9906C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xC80BAC", Offset = "0xC80BAC", VA = "0xC80BAC")]
	public void UpdateResultsBoard()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xC98EB4", Offset = "0xC98EB4", VA = "0xC98EB4")]
	public void EmptyResultsBoard()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xC81938", Offset = "0xC81938", VA = "0xC81938")]
	public void ResetSpeedRunTimerAndResultsBoard()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xC99070", Offset = "0xC99070", VA = "0xC99070")]
	public SpeedRunResults()
	{
	}
}
[Token(Token = "0x2000042")]
public class TimerCanvasController : MonoBehaviour
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GameTimerObject;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LevelTimerObject;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text GameTimerText;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text GameCharacterPositionText;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text LevelTimerText;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LevelManager levelManager;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xF09BE4", Offset = "0xF09BE4", VA = "0xF09BE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xF09D24", Offset = "0xF09D24", VA = "0xF09D24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xF0A54C", Offset = "0xF0A54C", VA = "0xF0A54C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xF0A5E0", Offset = "0xF0A5E0", VA = "0xF0A5E0")]
	private void UpdateTotalGameTimeText(float _time)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xF0A840", Offset = "0xF0A840", VA = "0xF0A840")]
	private void UpdateCharacterPositionText()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xF0A6BC", Offset = "0xF0A6BC", VA = "0xF0A6BC")]
	private void UpdateTotalLevelTimeText(float _time)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xF0A21C", Offset = "0xF0A21C", VA = "0xF0A21C")]
	public void EnableHudDisplayItems()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xF0A99C", Offset = "0xF0A99C", VA = "0xF0A99C")]
	public TimerCanvasController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000043")]
public class EventSubtitlesSequence : MonoBehaviour
{
	[Token(Token = "0x2000198")]
	public enum EnabledLogicENUM
	{
		[Token(Token = "0x4000C45")]
		None,
		[Token(Token = "0x4000C46")]
		Tutorial,
		[Token(Token = "0x4000C47")]
		FirstCrystal,
		[Token(Token = "0x4000C48")]
		CrystalIntoMachine,
		[Token(Token = "0x4000C49")]
		CollectingFirstTablet,
		[Token(Token = "0x4000C4A")]
		GameEnd
	}

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DA94", Offset = "0x62DA94")]
	public AudioSource narration_AudioSource;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DACC", Offset = "0x62DACC")]
	public SubtitlePart[] eventSubtitles;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnabledLogicENUM enabledLogic;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool triggered;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xB46A1C", Offset = "0xB46A1C", VA = "0xB46A1C")]
	public void Play()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xB46B4C", Offset = "0xB46B4C", VA = "0xB46B4C")]
	private bool isEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xB46D0C", Offset = "0xB46D0C", VA = "0xB46D0C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xB46DA4", Offset = "0xB46DA4", VA = "0xB46DA4")]
	public EventSubtitlesSequence()
	{
	}
}
[Serializable]
[Token(Token = "0x2000044")]
public class HologramSequence : MonoBehaviour
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62DB04", Offset = "0x62DB04")]
	public float displaySeconds;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62DB1C", Offset = "0x62DB1C")]
	public float phaseInTime;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62DB34", Offset = "0x62DB34")]
	public float phaseOutTime;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Multiline]
	public string subtitleText;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer holgramMaterial;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xAEA628", Offset = "0xAEA628", VA = "0xAEA628")]
	public HologramSequence()
	{
	}
}
[Token(Token = "0x2000045")]
public class IntroHologramsSequencer : MonoBehaviour
{
	[Token(Token = "0x2000199")]
	private enum HologramStatusENUM
	{
		[Token(Token = "0x4000C4C")]
		START,
		[Token(Token = "0x4000C4D")]
		PLAYING,
		[Token(Token = "0x4000C4E")]
		END,
		[Token(Token = "0x4000C4F")]
		DONE
	}

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DB5C", Offset = "0x62DB5C")]
	public AudioSource introsequenceAudioSource;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DB94", Offset = "0x62DB94")]
	public AudioSource skipIntroWarningSound;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DBCC", Offset = "0x62DBCC")]
	public HologramSequence[] hologramSequence;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DC04", Offset = "0x62DC04")]
	public GameObject subtitleGameObject;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro subtitleTextMesh;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DC3C", Offset = "0x62DC3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62DC3C", Offset = "0x62DC3C")]
	public float startTimeDelay;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62DC90", Offset = "0x62DC90")]
	public float endTimeDelay;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string localizedFontAssetKey;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float skipIntroButtonTimer;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int currentHologram;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float hologramTimer;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float hologramStartTime;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HologramStatusENUM hologramStatus;

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xAEBC38", Offset = "0xAEBC38", VA = "0xAEBC38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xAEC0A8", Offset = "0xAEC0A8", VA = "0xAEC0A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xAEC28C", Offset = "0xAEC28C", VA = "0xAEC28C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xAEBD38", Offset = "0xAEBD38", VA = "0xAEBD38")]
	private void changeHologram(int hologramIndex)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xAEBFCC", Offset = "0xAEBFCC", VA = "0xAEBFCC")]
	private void SetPhaseTransition(int hologramIndex, float phaseValue)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xAEC8E8", Offset = "0xAEC8E8", VA = "0xAEC8E8")]
	public IntroHologramsSequencer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000046")]
public class SubtitlePart
{
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62DCA8", Offset = "0x62DCA8")]
	public float displaySeconds;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Multiline]
	public string subtitleText;

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xF03078", Offset = "0xF03078", VA = "0xF03078")]
	public SubtitlePart(string _subtitleText, float _displaySeconds)
	{
	}
}
[Token(Token = "0x2000047")]
public static class StringHelper
{
	[Token(Token = "0x6000287")]
	[Address(RVA = "0xC998B0", Offset = "0xC998B0", VA = "0xC998B0")]
	public static string GetTimeFormated(float timeFloat)
	{
		return null;
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xC99C5C", Offset = "0xC99C5C", VA = "0xC99C5C")]
	public static string GetTimeFullFormated(float timeFloat, bool includeMilliseconds = false)
	{
		return null;
	}
}
[Token(Token = "0x2000048")]
public class AutoRespawnVolume : MonoBehaviour
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerInputScript character;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xB2E81C", Offset = "0xB2E81C", VA = "0xB2E81C")]
	private void Start()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xB2E8C4", Offset = "0xB2E8C4", VA = "0xB2E8C4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xB2E988", Offset = "0xB2E988", VA = "0xB2E988")]
	public AutoRespawnVolume()
	{
	}
}
[Token(Token = "0x2000049")]
public class BeginningCameraReset : MonoBehaviour
{
	[Token(Token = "0x600028C")]
	[Address(RVA = "0xB2E9E0", Offset = "0xB2E9E0", VA = "0xB2E9E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xB2EBD0", Offset = "0xB2EBD0", VA = "0xB2EBD0")]
	public BeginningCameraReset()
	{
	}
}
[Token(Token = "0x200004A")]
public class BridgeController : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator bridgeAnimator;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject parent;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bridgeStatic;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] machines;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xB2F9AC", Offset = "0xB2F9AC", VA = "0xB2F9AC")]
	public void Activate(bool _isSkipAnimation)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xB2FA3C", Offset = "0xB2FA3C", VA = "0xB2FA3C")]
	public void SwapToStatic()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xB2FAC8", Offset = "0xB2FAC8", VA = "0xB2FAC8")]
	public BridgeController()
	{
	}
}
[Token(Token = "0x200004B")]
public class LifeCrystalReturned : MonoBehaviour
{
	[Token(Token = "0x200019A")]
	private delegate void DynamicUpdate();

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger_MachineController machineController;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waitBeforeActivate;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int crystalID;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int crystalNameID;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator crystalAnimator;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DynamicUpdate dynamicUpdate;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform character;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 startPosition;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lerpValue;

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xAF1B94", Offset = "0xAF1B94", VA = "0xAF1B94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xAF1CF8", Offset = "0xAF1CF8", VA = "0xAF1CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xAF2124", Offset = "0xAF2124", VA = "0xAF2124")]
	private void Update_Wait()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xAF2278", Offset = "0xAF2278", VA = "0xAF2278")]
	private void Update_MoveToPosition()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xAF25BC", Offset = "0xAF25BC", VA = "0xAF25BC")]
	private void Update_WaitForAnimationToFinish()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xAF284C", Offset = "0xAF284C", VA = "0xAF284C")]
	private void Update_Empty()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xAF2850", Offset = "0xAF2850", VA = "0xAF2850")]
	public LifeCrystalReturned()
	{
	}
}
[Token(Token = "0x200004C")]
public class Player_Fall_Respawner : MonoBehaviour
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerInputScript character;

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xB94DAC", Offset = "0xB94DAC", VA = "0xB94DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xB94E54", Offset = "0xB94E54", VA = "0xB94E54")]
	private void Update()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xB94EF4", Offset = "0xB94EF4", VA = "0xB94EF4")]
	public Player_Fall_Respawner()
	{
	}
}
[Token(Token = "0x200004D")]
public class PlaygroundManager : MonoBehaviour
{
	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger_PlaygroundCollectible[] collectibles;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] endObjects;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] endObjectsInverse;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource allCollectedSoundFX;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource notAllCollectedSoundFX;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xC81D48", Offset = "0xC81D48", VA = "0xC81D48")]
	private void Start()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xC81D4C", Offset = "0xC81D4C", VA = "0xC81D4C")]
	public void OnCollected()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xC81860", Offset = "0xC81860", VA = "0xC81860")]
	public int GetCount()
	{
		return default(int);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xC81600", Offset = "0xC81600", VA = "0xC81600")]
	public bool AllCollected()
	{
		return default(bool);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xC81908", Offset = "0xC81908", VA = "0xC81908")]
	public void NotAllCollected()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xC821D4", Offset = "0xC821D4", VA = "0xC821D4")]
	public void ResetPlayground()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xC8236C", Offset = "0xC8236C", VA = "0xC8236C")]
	public PlaygroundManager()
	{
	}
}
[Token(Token = "0x200004E")]
public class Tablet_Pickup : MonoBehaviour
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DCD0", Offset = "0x62DCD0")]
	public int tabletID;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pickUpDistance;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip pickUpSound;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject parent;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DD08", Offset = "0x62DD08")]
	public EventSubtitlesSequence tabletSubtitles;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DD40", Offset = "0x62DD40")]
	public GameObject lodHigh;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject lodLow;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lod0Distance;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform eyeMiddle;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isLODHigh;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xF03BF0", Offset = "0xF03BF0", VA = "0xF03BF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xF03E5C", Offset = "0xF03E5C", VA = "0xF03E5C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xF03F70", Offset = "0xF03F70", VA = "0xF03F70")]
	public void PickTabletUp()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xF0412C", Offset = "0xF0412C", VA = "0xF0412C")]
	public Tablet_Pickup()
	{
	}
}
[Token(Token = "0x200004F")]
public class Trigger_ChallengePortal : MonoBehaviour
{
	[Token(Token = "0x200019B")]
	private delegate void DynamicUpdate();

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameLogicScript.LevelID teleportToLevel;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int targetStartingPosition;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particles;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject portalOn;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject portalOff;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject trigger;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject checkpoint;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject LifeCrystalInMachine;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DynamicUpdate dynamicUpdate;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timer;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isActive;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xF0A9A4", Offset = "0xF0A9A4", VA = "0xF0A9A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xF0AA30", Offset = "0xF0AA30", VA = "0xF0AA30")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xF0AE5C", Offset = "0xF0AE5C", VA = "0xF0AE5C")]
	private void Update_Timer()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xF0AEF4", Offset = "0xF0AEF4", VA = "0xF0AEF4")]
	private void Update_Empty()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xF0AEF8", Offset = "0xF0AEF8", VA = "0xF0AEF8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xF0B088", Offset = "0xF0B088", VA = "0xF0B088")]
	public void SetState(bool _isActive, bool _isStart)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xF0B200", Offset = "0xF0B200", VA = "0xF0B200")]
	public Trigger_ChallengePortal()
	{
	}
}
[Token(Token = "0x2000050")]
public class Trigger_EndCrystal : MonoBehaviour
{
	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] island1;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] island2;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] island3;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] island4;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] island5;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] island6;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] movingIslands;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject movingIsland3FX;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject EndCrystalStatic;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject EndCrystalAnimated;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject EndCrystalFX;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public EndGameCredits endGameCredits;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject tablet;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioSource firstCrystalAudiosource;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource secondCrystalAudiosource;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioSource pickupFinalCrystalAudiosource;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xF0B248", Offset = "0xF0B248", VA = "0xF0B248")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xF0B924", Offset = "0xF0B924", VA = "0xF0B924")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xF0BA80", Offset = "0xF0BA80", VA = "0xF0BA80")]
	private void StartCredits()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xF0B840", Offset = "0xF0B840", VA = "0xF0B840")]
	private int CountCrystals()
	{
		return default(int);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xF0BB30", Offset = "0xF0BB30", VA = "0xF0BB30")]
	public void SetState()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xF0BEB0", Offset = "0xF0BEB0", VA = "0xF0BEB0")]
	private void EndpartsActivate3()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xF0C01C", Offset = "0xF0C01C", VA = "0xF0C01C")]
	private void EndpartsActivate1()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xF0C120", Offset = "0xF0C120", VA = "0xF0C120")]
	private void EndpartsActivate2()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xF0C228", Offset = "0xF0C228", VA = "0xF0C228")]
	private void EndpartsActivate4()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xF0C330", Offset = "0xF0C330", VA = "0xF0C330")]
	private void EndpartsActivate5()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xF0C438", Offset = "0xF0C438", VA = "0xF0C438")]
	private void EndpartsActivate6()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xF0C540", Offset = "0xF0C540", VA = "0xF0C540")]
	public Trigger_EndCrystal()
	{
	}
}
[Token(Token = "0x2000051")]
public class Trigger_HooksPickup : MonoBehaviour
{
	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BE54", Offset = "0x62BE54")]
	private sealed class <PickUpHooks>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Trigger_HooksPickup <>4__this;

		[Token(Token = "0x170000E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0xF0CAF4", Offset = "0xF0CAF4", VA = "0xF0CAF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0xF0CB64", Offset = "0xF0CB64", VA = "0xF0CB64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xF0C6C0", Offset = "0xF0C6C0", VA = "0xF0C6C0")]
		[DebuggerHidden]
		public <PickUpHooks>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xF0C6F4", Offset = "0xF0C6F4", VA = "0xF0C6F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xF0C6F8", Offset = "0xF0C6F8", VA = "0xF0C6F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xF0CAFC", Offset = "0xF0CAFC", VA = "0xF0CAFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip pickUpSound;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject finalBeamHook;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject finalBeamEnd;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] destroyTargets;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameLogicScript.HookID hookID;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xF0C548", Offset = "0xF0C548", VA = "0xF0C548")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xF0C64C", Offset = "0xF0C64C", VA = "0xF0C64C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631560", Offset = "0x631560")]
	private IEnumerator PickUpHooks()
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xF0C6EC", Offset = "0xF0C6EC", VA = "0xF0C6EC")]
	public Trigger_HooksPickup()
	{
	}
}
[Token(Token = "0x2000052")]
public class Trigger_LifeCrystal : MonoBehaviour
{
	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip pickUpSound;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int lifeCrystalID;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject parent;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject collectedEventTarget;

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xF0CB6C", Offset = "0xF0CB6C", VA = "0xF0CB6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xF0CC74", Offset = "0xF0CC74", VA = "0xF0CC74")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xF0CDD0", Offset = "0xF0CDD0", VA = "0xF0CDD0")]
	public void PickCrystalUp()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xF0D128", Offset = "0xF0D128", VA = "0xF0D128")]
	private void CrystalCollected()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xF0D2CC", Offset = "0xF0D2CC", VA = "0xF0D2CC")]
	public Trigger_LifeCrystal()
	{
	}
}
[Token(Token = "0x2000053")]
public class Trigger_MachineController : MonoBehaviour
{
	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] activationTargets;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lifeCrystalReturnedInstance;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform crystalTarget;

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xF0D2D4", Offset = "0xF0D2D4", VA = "0xF0D2D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xF0D624", Offset = "0xF0D624", VA = "0xF0D624")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xF0D470", Offset = "0xF0D470", VA = "0xF0D470")]
	public void SetTargetState(int _targetID, bool _isActive, bool _isStart)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xF0DF5C", Offset = "0xF0DF5C", VA = "0xF0DF5C")]
	public Trigger_MachineController()
	{
	}
}
[Token(Token = "0x2000054")]
public class Trigger_Music : MonoBehaviour
{
	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int onEnterMusicID;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int onExitMusicID;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isExitActive;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SoundMusicScript musicManager;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xF0DF64", Offset = "0xF0DF64", VA = "0xF0DF64")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xF0DF68", Offset = "0xF0DF68", VA = "0xF0DF68")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xF0E0FC", Offset = "0xF0E0FC", VA = "0xF0E0FC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xF0E298", Offset = "0xF0E298", VA = "0xF0E298")]
	public Trigger_Music()
	{
	}
}
[Token(Token = "0x2000055")]
public class Trigger_OnTouch_Respawn : MonoBehaviour
{
	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xF0E2A0", Offset = "0xF0E2A0", VA = "0xF0E2A0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xF0E438", Offset = "0xF0E438", VA = "0xF0E438")]
	public Trigger_OnTouch_Respawn()
	{
	}
}
[Token(Token = "0x2000056")]
public class Trigger_PlaygroundCollectible : MonoBehaviour
{
	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DD78", Offset = "0x62DD78")]
	public AudioClip pickUpSound;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DDB0", Offset = "0x62DDB0")]
	public PlaygroundManager manager;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DDE8", Offset = "0x62DDE8")]
	public MeshRenderer myRenderer;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SphereCollider myCollider;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource mySource;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject myFX;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isCollected;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xF0E440", Offset = "0xF0E440", VA = "0xF0E440")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xF0E444", Offset = "0xF0E444", VA = "0xF0E444")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xF0E65C", Offset = "0xF0E65C", VA = "0xF0E65C")]
	public void Collected(bool _isCollected)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xF0E720", Offset = "0xF0E720", VA = "0xF0E720")]
	public Trigger_PlaygroundCollectible()
	{
	}
}
[Token(Token = "0x2000057")]
public class Trigger_ReturnPortal : MonoBehaviour
{
	[Token(Token = "0x200019D")]
	private delegate void DynamicUpdate();

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameLogicScript.LevelID teleportToLevel;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particles;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject portalOn;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject portalOff;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject trigger;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DynamicUpdate dynamicUpdate;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool isActive;

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xF0E728", Offset = "0xF0E728", VA = "0xF0E728")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xF0E7B4", Offset = "0xF0E7B4", VA = "0xF0E7B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xF0EBE0", Offset = "0xF0EBE0", VA = "0xF0EBE0")]
	private void Update_Timer()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xF0EC78", Offset = "0xF0EC78", VA = "0xF0EC78")]
	private void Update_Empty()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xF0EC7C", Offset = "0xF0EC7C", VA = "0xF0EC7C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xF0EE74", Offset = "0xF0EE74", VA = "0xF0EE74")]
	public void SetState(bool _isActive)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xF0EF20", Offset = "0xF0EF20", VA = "0xF0EF20")]
	public Trigger_ReturnPortal()
	{
	}
}
[Token(Token = "0x2000058")]
public class Trigger_ReverbSnapshot : MonoBehaviour
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot[] snapshots;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int enterChangeTo;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int exitChangeTo;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SoundAmbientScript.AmbientEnums onEnterAmbientID;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SoundAmbientScript.AmbientEnums onExitAmbientID;

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xF0EF68", Offset = "0xF0EF68", VA = "0xF0EF68")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xF0F0A8", Offset = "0xF0F0A8", VA = "0xF0F0A8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xF0F1E8", Offset = "0xF0F1E8", VA = "0xF0F1E8")]
	public Trigger_ReverbSnapshot()
	{
	}
}
[Token(Token = "0x2000059")]
public class Trigger_SlowArea : MonoBehaviour
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float slowMultiplier;

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xF0F1F0", Offset = "0xF0F1F0", VA = "0xF0F1F0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xF0F450", Offset = "0xF0F450", VA = "0xF0F450")]
	public Trigger_SlowArea()
	{
	}
}
[Token(Token = "0x200005A")]
public class Trigger_Teleporter : MonoBehaviour
{
	[Token(Token = "0x200019E")]
	private delegate void DynamicUpdate();

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameLogicScript.LevelID teleportToLevel;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int targetStartingPosition;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particles;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject soundFX;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject portalOn;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject portalOff;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator portalOffAnimator;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator portalOnAnimator;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject trigger;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject checkpoint;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject bridge;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject LifeCrystalInMachine;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Trigger_ReturnPortal returnPortal;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private DynamicUpdate dynamicUpdate;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timer;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isActive;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xF0F458", Offset = "0xF0F458", VA = "0xF0F458")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xF0F4E0", Offset = "0xF0F4E0", VA = "0xF0F4E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xF0F90C", Offset = "0xF0F90C", VA = "0xF0F90C")]
	private void Update_Timer()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xF0F9A4", Offset = "0xF0F9A4", VA = "0xF0F9A4")]
	private void Update_Empty()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xF0F9A8", Offset = "0xF0F9A8", VA = "0xF0F9A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xF0DB2C", Offset = "0xF0DB2C", VA = "0xF0DB2C")]
	public void SetState(bool _isActive, bool _isStart)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xF0FB38", Offset = "0xF0FB38", VA = "0xF0FB38")]
	public Trigger_Teleporter()
	{
	}
}
[Token(Token = "0x200005B")]
public class Trigger_TutorialBossStartsMoving : MonoBehaviour
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator roboAnimator;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xF0FFD0", Offset = "0xF0FFD0", VA = "0xF0FFD0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xF101BC", Offset = "0xF101BC", VA = "0xF101BC")]
	public Trigger_TutorialBossStartsMoving()
	{
	}
}
[Token(Token = "0x200005C")]
public class EndFlower : MonoBehaviour
{
	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xB44348", Offset = "0xB44348", VA = "0xB44348")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xB4434C", Offset = "0xB4434C", VA = "0xB4434C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xB44350", Offset = "0xB44350", VA = "0xB44350")]
	public EndFlower()
	{
	}
}
[Token(Token = "0x200005D")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xF10F14", Offset = "0xF10F14", VA = "0xF10F14")]
	public void Start()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xF11004", Offset = "0xF11004", VA = "0xF11004")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xF11048", Offset = "0xF11048", VA = "0xF11048")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xF111C0", Offset = "0xF111C0", VA = "0xF111C0")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xF11338", Offset = "0xF11338", VA = "0xF11338")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x200005E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62B69C", Offset = "0x62B69C")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xC93E08", Offset = "0xC93E08", VA = "0xC93E08")]
	private void Start()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xC9425C", Offset = "0xC9425C", VA = "0xC9425C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xC93E0C", Offset = "0xC93E0C", VA = "0xC93E0C")]
	public void Init()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xC94260", Offset = "0xC94260", VA = "0xC94260")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xC94808", Offset = "0xC94808", VA = "0xC94808")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xC948B8", Offset = "0xC948B8", VA = "0xC948B8")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x200005F")]
public class CityRobotMoveScript : MonoBehaviour
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] steps;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource sound;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FootParticle;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftFoot;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightFoot;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BeamEffect;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxVolume;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator anim;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xB32F54", Offset = "0xB32F54", VA = "0xB32F54")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xB331BC", Offset = "0xB331BC", VA = "0xB331BC")]
	public void Beam()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xB330D8", Offset = "0xB330D8", VA = "0xB330D8")]
	private int CountCrystals()
	{
		return default(int);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB331F0", Offset = "0xB331F0", VA = "0xB331F0")]
	public void SetState()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB33260", Offset = "0xB33260", VA = "0xB33260")]
	public void FootFallL()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB33264", Offset = "0xB33264", VA = "0xB33264")]
	public void FootFallR()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB33268", Offset = "0xB33268", VA = "0xB33268")]
	public CityRobotMoveScript()
	{
	}
}
[Token(Token = "0x2000060")]
public class JungleRobotMoveScript : MonoBehaviour
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] steps;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource sound;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FootParticle;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftFoot;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightFoot;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxVolume;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer SpearOne;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer SpearTwo;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject SpearBeacon;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator anim;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xAEC8F8", Offset = "0xAEC8F8", VA = "0xAEC8F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xAECBCC", Offset = "0xAECBCC", VA = "0xAECBCC")]
	private int CountCrystals()
	{
		return default(int);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xAECD08", Offset = "0xAECD08", VA = "0xAECD08")]
	public void SetState()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xAECDB8", Offset = "0xAECDB8", VA = "0xAECDB8")]
	public void FootFallL()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xAECDBC", Offset = "0xAECDBC", VA = "0xAECDBC")]
	public void FootFallR()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xAECCB0", Offset = "0xAECCB0", VA = "0xAECCB0")]
	private void SwapMeshSpear()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xAECDC0", Offset = "0xAECDC0", VA = "0xAECDC0")]
	private void Beacon()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xAECDF4", Offset = "0xAECDF4", VA = "0xAECDF4")]
	public JungleRobotMoveScript()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62B6D4", Offset = "0x62B6D4")]
public class FastList<T>
{
	[Token(Token = "0x200019F")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20001A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BE64", Offset = "0x62BE64")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000E6")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000A66")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A68")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A63")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000A64")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A65")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A67")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x1700002B")]
	public int Count
	{
		[Token(Token = "0x6000303")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000304")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public T Item
	{
		[Token(Token = "0x6000305")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000306")]
		set
		{
		}
	}

	[Token(Token = "0x6000301")]
	public FastList()
	{
	}

	[Token(Token = "0x6000302")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000307")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000308")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000309")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600030A")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600030B")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600030C")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600030D")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600030E")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600030F")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000311")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000312")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000314")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000315")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6315C4", Offset = "0x6315C4")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000317")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000318")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000319")]
	public void Clear()
	{
	}

	[Token(Token = "0x600031A")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000062")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xAEB040", Offset = "0xAEB040", VA = "0xAEB040")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000063")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xAEB014", Offset = "0xAEB014", VA = "0xAEB014")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000064")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xD1D8E8", Offset = "0xD1D8E8", VA = "0xD1D8E8")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xD1DA14", Offset = "0xD1DA14", VA = "0xD1DA14")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xD1DD70", Offset = "0xD1DD70", VA = "0xD1DD70")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xD1DF30", Offset = "0xD1DF30", VA = "0xD1DF30", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xD1DF5C", Offset = "0xD1DF5C", VA = "0xD1DF5C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000065")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xC82374", Offset = "0xC82374", VA = "0xC82374")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xC82400", Offset = "0xC82400", VA = "0xC82400")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xC825C4", Offset = "0xC825C4", VA = "0xC825C4")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000066")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700002D")]
	public bool IsVisible
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xAE9ADC", Offset = "0xAE9ADC", VA = "0xAE9ADC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xAE9AE4", Offset = "0xAE9AE4", VA = "0xAE9AE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xAE9C40", Offset = "0xAE9C40", VA = "0xAE9C40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xAE9F08", Offset = "0xAE9F08", VA = "0xAE9F08")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xAE9F10", Offset = "0xAE9F10", VA = "0xAE9F10")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000067")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xC830F8", Offset = "0xC830F8", VA = "0xC830F8")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001A2")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630E78", Offset = "0x630E78")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630E90", Offset = "0x630E90")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630EA8", Offset = "0x630EA8")]
		public float LatencyWeight;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630EC0", Offset = "0x630EC0")]
		public int MaxSamples;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xC83100", Offset = "0xC83100", VA = "0xC83100")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xC8330C", Offset = "0xC8330C", VA = "0xC8330C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xC825CC", Offset = "0xC825CC", VA = "0xC825CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xC827AC", Offset = "0xC827AC", VA = "0xC827AC")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xC82B74", Offset = "0xC82B74", VA = "0xC82B74")]
	private void Update()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xC82ABC", Offset = "0xC82ABC", VA = "0xC82ABC")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xC82E40", Offset = "0xC82E40", VA = "0xC82E40")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xC83280", Offset = "0xC83280", VA = "0xC83280")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000068")]
public class P2PManager
{
	[Token(Token = "0x20001A3")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4000C61")]
		Update = 1
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB7BCB4", Offset = "0xB7BCB4", VA = "0xB7BCB4")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xB7BD74", Offset = "0xB7BD74", VA = "0xB7BD74")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB7BE58", Offset = "0xB7BE58", VA = "0xB7BE58")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB7BEDC", Offset = "0xB7BEDC", VA = "0xB7BEDC")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB7C0D0", Offset = "0xB7C0D0", VA = "0xB7C0D0")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB7C530", Offset = "0xB7C530", VA = "0xB7C530")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xB7C9EC", Offset = "0xB7C9EC", VA = "0xB7C9EC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xB7CCDC", Offset = "0xB7CCDC", VA = "0xB7CCDC")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xB7C798", Offset = "0xB7C798", VA = "0xB7C798")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xB7CBE8", Offset = "0xB7CBE8", VA = "0xB7CBE8")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xB7C8A4", Offset = "0xB7C8A4", VA = "0xB7C8A4")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xB7CFAC", Offset = "0xB7CFAC", VA = "0xB7CFAC")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xB7C804", Offset = "0xB7C804", VA = "0xB7C804")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xB7CC50", Offset = "0xB7CC50", VA = "0xB7CC50")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xB7C94C", Offset = "0xB7C94C", VA = "0xB7C94C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xB7D038", Offset = "0xB7D038", VA = "0xB7D038")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000069")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xB8D778", Offset = "0xB8D778", VA = "0xB8D778", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xB8D7BC", Offset = "0xB8D7BC", VA = "0xB8D7BC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xB8D7FC", Offset = "0xB8D7FC", VA = "0xB8D7FC", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xB8D824", Offset = "0xB8D824", VA = "0xB8D824")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xB8D9DC", Offset = "0xB8D9DC", VA = "0xB8D9DC")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xB8DACC", Offset = "0xB8DACC", VA = "0xB8DACC")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB8DB44", Offset = "0xB8DB44", VA = "0xB8DB44")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200006A")]
public class RemotePlayer
{
	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xC83394", Offset = "0xC83394", VA = "0xC83394")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200006B")]
public class RoomManager
{
	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xC838A0", Offset = "0xC838A0", VA = "0xC838A0")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xC8396C", Offset = "0xC8396C", VA = "0xC8396C")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC83C88", Offset = "0xC83C88", VA = "0xC83C88")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC83D98", Offset = "0xC83D98", VA = "0xC83D98")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xC83E50", Offset = "0xC83E50", VA = "0xC83E50")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xC845AC", Offset = "0xC845AC", VA = "0xC845AC")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xC83CB8", Offset = "0xC83CB8", VA = "0xC83CB8")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xC84638", Offset = "0xC84638", VA = "0xC84638")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xC84F48", Offset = "0xC84F48", VA = "0xC84F48")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xC8539C", Offset = "0xC8539C", VA = "0xC8539C")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC84A78", Offset = "0xC84A78", VA = "0xC84A78")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x200006C")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20001A4")]
	public enum State
	{
		[Token(Token = "0x4000C63")]
		INITIALIZING,
		[Token(Token = "0x4000C64")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000C65")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000C66")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000C67")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000C68")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000C69")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000C6A")]
		SHUTDOWN
	}

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700002E")]
	public static State CurrentState
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0xC967F8", Offset = "0xC967F8", VA = "0xC967F8")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700002F")]
	public static ulong MyID
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xC83FE0", Offset = "0xC83FE0", VA = "0xC83FE0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000030")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000361")]
		[Address(RVA = "0xC96870", Offset = "0xC96870", VA = "0xC96870")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC94984", Offset = "0xC94984", VA = "0xC94984", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xC94EA0", Offset = "0xC94EA0", VA = "0xC94EA0", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC952A0", Offset = "0xC952A0", VA = "0xC952A0")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC95410", Offset = "0xC95410", VA = "0xC95410", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xC95414", Offset = "0xC95414", VA = "0xC95414")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xC95514", Offset = "0xC95514", VA = "0xC95514")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xC95E2C", Offset = "0xC95E2C", VA = "0xC95E2C")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xC96378", Offset = "0xC96378", VA = "0xC96378")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC965BC", Offset = "0xC965BC", VA = "0xC965BC")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC9677C", Offset = "0xC9677C", VA = "0xC9677C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC951EC", Offset = "0xC951EC", VA = "0xC951EC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC83AFC", Offset = "0xC83AFC", VA = "0xC83AFC")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC840BC", Offset = "0xC840BC", VA = "0xC840BC")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC96994", Offset = "0xC96994", VA = "0xC96994")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC84478", Offset = "0xC84478", VA = "0xC84478")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC85414", Offset = "0xC85414", VA = "0xC85414")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC858F8", Offset = "0xC858F8", VA = "0xC858F8")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC859E0", Offset = "0xC859E0", VA = "0xC859E0")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xC83BC4", Offset = "0xC83BC4", VA = "0xC83BC4")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xC85594", Offset = "0xC85594", VA = "0xC85594")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xC85630", Offset = "0xC85630", VA = "0xC85630")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xC96B8C", Offset = "0xC96B8C", VA = "0xC96B8C")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xC96DC8", Offset = "0xC96DC8", VA = "0xC96DC8")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xC948F4", Offset = "0xC948F4", VA = "0xC948F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x631628", Offset = "0x631628")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xC96F44", Offset = "0xC96F44", VA = "0xC96F44")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xC9701C", Offset = "0xC9701C", VA = "0xC9701C")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200006D")]
public class VoipManager
{
	[Token(Token = "0x6000371")]
	[Address(RVA = "0xF11494", Offset = "0xF11494", VA = "0xF11494")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xF11554", Offset = "0xF11554", VA = "0xF11554")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xF11638", Offset = "0xF11638", VA = "0xF11638")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xF116BC", Offset = "0xF116BC", VA = "0xF116BC")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xF118B0", Offset = "0xF118B0", VA = "0xF118B0")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200006E")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xAE970C", Offset = "0xAE970C", VA = "0xAE970C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xAE977C", Offset = "0xAE977C", VA = "0xAE977C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xAE9928", Offset = "0xAE9928", VA = "0xAE9928")]
	private void Update()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xAE99A0", Offset = "0xAE99A0", VA = "0xAE99A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xAE97C0", Offset = "0xAE97C0", VA = "0xAE97C0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xAE9A74", Offset = "0xAE9A74", VA = "0xAE9A74")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xAE9AD4", Offset = "0xAE9AD4", VA = "0xAE9AD4")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200006F")]
public class AvatarLayer
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB2E990", Offset = "0xB2E990", VA = "0xB2E990")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000070")]
public class PacketRecordSettings
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB7D0C4", Offset = "0xB7D0C4", VA = "0xB7D0C4")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000071")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20001A5")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xD0C4A0", Offset = "0xD0C4A0", VA = "0xD0C4A0")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20001A6")]
	public enum HandType
	{
		[Token(Token = "0x4000C6D")]
		Right,
		[Token(Token = "0x4000C6E")]
		Left,
		[Token(Token = "0x4000C6F")]
		Max
	}

	[Token(Token = "0x20001A7")]
	public enum HandJoint
	{
		[Token(Token = "0x4000C71")]
		HandBase,
		[Token(Token = "0x4000C72")]
		IndexBase,
		[Token(Token = "0x4000C73")]
		IndexTip,
		[Token(Token = "0x4000C74")]
		ThumbBase,
		[Token(Token = "0x4000C75")]
		ThumbTip,
		[Token(Token = "0x4000C76")]
		Max
	}

	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BE74", Offset = "0x62BE74")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0xD0EF28", Offset = "0xD0EF28", VA = "0xD0EF28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0xD0EF98", Offset = "0xD0EF98", VA = "0xD0EF98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xD0E864", Offset = "0xD0E864", VA = "0xD0E864")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xD0ECC4", Offset = "0xD0ECC4", VA = "0xD0ECC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xD0ECC8", Offset = "0xD0ECC8", VA = "0xD0ECC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xD0EF30", Offset = "0xD0EF30", VA = "0xD0EF30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DE30", Offset = "0x62DE30")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DE68", Offset = "0x62DE68")]
	public bool EnableBody;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DEA0", Offset = "0x62DEA0")]
	public bool RecordPackets;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DED8", Offset = "0x62DED8")]
	public bool StartWithControllers;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DF10", Offset = "0x62DF10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62DF10", Offset = "0x62DF10")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62DF80", Offset = "0x62DF80")]
	private bool CombineMeshes;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62DFB8", Offset = "0x62DFB8")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62DFF0", Offset = "0x62DFF0")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x62E028", Offset = "0x62E028")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E060", Offset = "0x62E060")]
	public bool EnableLaughter;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x400057D")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400057F")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000580")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000581")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000582")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000583")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xD075B4", Offset = "0xD075B4", VA = "0xD075B4")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xD07A9C", Offset = "0xD07A9C", VA = "0xD07A9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xD07B28", Offset = "0xD07B28", VA = "0xD07B28")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xD07BA8", Offset = "0xD07BA8", VA = "0xD07BA8")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xD07CE8", Offset = "0xD07CE8", VA = "0xD07CE8")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xD07F40", Offset = "0xD07F40", VA = "0xD07F40")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xD08188", Offset = "0xD08188", VA = "0xD08188")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xD0881C", Offset = "0xD0881C", VA = "0xD0881C")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xD088E4", Offset = "0xD088E4", VA = "0xD088E4")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xD08968", Offset = "0xD08968", VA = "0xD08968")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xD08AF4", Offset = "0xD08AF4", VA = "0xD08AF4")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xD08BDC", Offset = "0xD08BDC", VA = "0xD08BDC")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xD08D08", Offset = "0xD08D08", VA = "0xD08D08")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xD08D68", Offset = "0xD08D68", VA = "0xD08D68")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x600038D")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xD09208", Offset = "0xD09208", VA = "0xD09208")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xD09584", Offset = "0xD09584", VA = "0xD09584")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xD09728", Offset = "0xD09728", VA = "0xD09728")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xD09A3C", Offset = "0xD09A3C", VA = "0xD09A3C")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xD09B30", Offset = "0xD09B30", VA = "0xD09B30")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xD0A640", Offset = "0xD0A640", VA = "0xD0A640")]
	private void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xD0AAFC", Offset = "0xD0AAFC", VA = "0xD0AAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xD0B778", Offset = "0xD0B778", VA = "0xD0B778")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xD0B7C0", Offset = "0xD0B7C0", VA = "0xD0B7C0")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xD09DC8", Offset = "0xD09DC8", VA = "0xD09DC8")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xD09E64", Offset = "0xD09E64", VA = "0xD09E64")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xD0B7F0", Offset = "0xD0B7F0", VA = "0xD0B7F0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xD0AED0", Offset = "0xD0AED0", VA = "0xD0AED0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xD0BAB4", Offset = "0xD0BAB4", VA = "0xD0BAB4")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xD0B860", Offset = "0xD0B860", VA = "0xD0B860")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xD0C5E0", Offset = "0xD0C5E0", VA = "0xD0C5E0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xD0CA84", Offset = "0xD0CA84", VA = "0xD0CA84")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xD0CE9C", Offset = "0xD0CE9C", VA = "0xD0CE9C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xD0CFE8", Offset = "0xD0CFE8", VA = "0xD0CFE8")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xD0D228", Offset = "0xD0D228", VA = "0xD0D228")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xD0B118", Offset = "0xD0B118", VA = "0xD0B118")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xD0D324", Offset = "0xD0D324", VA = "0xD0D324")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xD0AEE0", Offset = "0xD0AEE0", VA = "0xD0AEE0")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xD0D41C", Offset = "0xD0D41C", VA = "0xD0D41C")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xD0DB04", Offset = "0xD0DB04", VA = "0xD0DB04")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xD0E124", Offset = "0xD0E124", VA = "0xD0E124")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xD0E1A4", Offset = "0xD0E1A4", VA = "0xD0E1A4")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xD0E228", Offset = "0xD0E228", VA = "0xD0E228")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xD0B5F8", Offset = "0xD0B5F8", VA = "0xD0B5F8")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xD0D4D8", Offset = "0xD0D4D8", VA = "0xD0D4D8")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xD0E7F0", Offset = "0xD0E7F0", VA = "0xD0E7F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63168C", Offset = "0x63168C")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xD0E890", Offset = "0xD0E890", VA = "0xD0E890")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xD0E610", Offset = "0xD0E610", VA = "0xD0E610")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xD0E960", Offset = "0xD0E960", VA = "0xD0E960")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xD0EA54", Offset = "0xD0EA54", VA = "0xD0EA54")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xD0E300", Offset = "0xD0E300", VA = "0xD0E300")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xD0EB48", Offset = "0xD0EB48", VA = "0xD0EB48")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000072")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xD0EFA0", Offset = "0xD0EFA0", VA = "0xD0EFA0")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000073")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xD0F050", Offset = "0xD0F050", VA = "0xD0F050")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xD10810", Offset = "0xD10810", VA = "0xD10810")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xD1033C", Offset = "0xD1033C", VA = "0xD1033C")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xD100D8", Offset = "0xD100D8", VA = "0xD100D8")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xD101B0", Offset = "0xD101B0", VA = "0xD101B0")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xD10B30", Offset = "0xD10B30", VA = "0xD10B30")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000074")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40005A0")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xD11300", Offset = "0xD11300", VA = "0xD11300")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000075")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xD115B4", Offset = "0xD115B4", VA = "0xD115B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xD11C90", Offset = "0xD11C90", VA = "0xD11C90")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000076")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xD0CD2C", Offset = "0xD0CD2C", VA = "0xD0CD2C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xD11D8C", Offset = "0xD11D8C", VA = "0xD11D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xD11EB4", Offset = "0xD11EB4", VA = "0xD11EB4")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000077")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xD11F18", Offset = "0xD11F18", VA = "0xD11F18")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xD116DC", Offset = "0xD116DC", VA = "0xD116DC")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xD12564", Offset = "0xD12564", VA = "0xD12564")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xD12604", Offset = "0xD12604", VA = "0xD12604")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xD13124", Offset = "0xD13124", VA = "0xD13124")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xD11CF4", Offset = "0xD11CF4", VA = "0xD11CF4")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000078")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20001A9")]
	public enum PacketMode
	{
		[Token(Token = "0x4000C7B")]
		SDK,
		[Token(Token = "0x4000C7C")]
		Unity
	}

	[Token(Token = "0x20001AA")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xD14C24", Offset = "0xD14C24", VA = "0xD14C24")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20001AB")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xD0C0DC", Offset = "0xD0C0DC", VA = "0xD0C0DC")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xD0BD4C", Offset = "0xD0BD4C", VA = "0xD0BD4C")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60003C8")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xD14B78", Offset = "0xD14B78", VA = "0xD14B78")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xD09F00", Offset = "0xD09F00", VA = "0xD09F00")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xD14C0C", Offset = "0xD14C0C", VA = "0xD14C0C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xD14C14", Offset = "0xD14C14", VA = "0xD14C14")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xD14D7C", Offset = "0xD14D7C", VA = "0xD14D7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xD14EF4", Offset = "0xD14EF4", VA = "0xD14EF4")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xD14F60", Offset = "0xD14F60", VA = "0xD14F60")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xD1508C", Offset = "0xD1508C", VA = "0xD1508C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xD153E8", Offset = "0xD153E8", VA = "0xD153E8")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xD1561C", Offset = "0xD1561C", VA = "0xD1561C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xD15648", Offset = "0xD15648", VA = "0xD15648")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20001AC")]
	public enum TextureType
	{
		[Token(Token = "0x4000C8D")]
		DiffuseTextures,
		[Token(Token = "0x4000C8E")]
		NormalMaps,
		[Token(Token = "0x4000C8F")]
		RoughnessMaps,
		[Token(Token = "0x4000C90")]
		Count
	}

	[Token(Token = "0x20001AD")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20001AE")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20001AF")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20001B0")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xD18384", Offset = "0xD18384", VA = "0xD18384")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20001B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BE84", Offset = "0x62BE84")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0xD18FA4", Offset = "0xD18FA4", VA = "0xD18FA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0xD19014", Offset = "0xD19014", VA = "0xD19014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xD181A4", Offset = "0xD181A4", VA = "0xD181A4")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xD18638", Offset = "0xD18638", VA = "0xD18638", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xD1863C", Offset = "0xD1863C", VA = "0xD1863C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xD18FAC", Offset = "0xD18FAC", VA = "0xD18FAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40005D4")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40005D5")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40005D6")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40005D7")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xD156F8", Offset = "0xD156F8", VA = "0xD156F8")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xD158C0", Offset = "0xD158C0", VA = "0xD158C0")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xD158FC", Offset = "0xD158FC", VA = "0xD158FC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xD16448", Offset = "0xD16448", VA = "0xD16448")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xD16768", Offset = "0xD16768", VA = "0xD16768")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xD15990", Offset = "0xD15990", VA = "0xD15990")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xD16874", Offset = "0xD16874", VA = "0xD16874")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xD16084", Offset = "0xD16084", VA = "0xD16084")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xD16B50", Offset = "0xD16B50", VA = "0xD16B50")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xD16EEC", Offset = "0xD16EEC", VA = "0xD16EEC")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xD1701C", Offset = "0xD1701C", VA = "0xD1701C")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xD17054", Offset = "0xD17054", VA = "0xD17054")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xD163B0", Offset = "0xD163B0", VA = "0xD163B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6316F0", Offset = "0x6316F0")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xD181D0", Offset = "0xD181D0", VA = "0xD181D0")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x200007C")]
public class OvrAvatarPacket
{
	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000031")]
	public float Duration
	{
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xD0BEAC", Offset = "0xD0BEAC", VA = "0xD0BEAC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000032")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xD0C02C", Offset = "0xD0C02C", VA = "0xD0C02C")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xD0C51C", Offset = "0xD0C51C", VA = "0xD0C51C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xD0BD5C", Offset = "0xD0BD5C", VA = "0xD0BD5C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xD1901C", Offset = "0xD1901C", VA = "0xD1901C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xD0BF4C", Offset = "0xD0BF4C", VA = "0xD0BF4C")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xD190F8", Offset = "0xD190F8", VA = "0xD190F8")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xD19328", Offset = "0xD19328", VA = "0xD19328")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xD195A8", Offset = "0xD195A8", VA = "0xD195A8")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x200007D")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xB2F068", Offset = "0xB2F068", VA = "0xB2F068")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xB2F18C", Offset = "0xB2F18C", VA = "0xB2F18C")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xB2F418", Offset = "0xB2F418", VA = "0xB2F418")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xB2F240", Offset = "0xB2F240", VA = "0xB2F240")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xB2F31C", Offset = "0xB2F31C", VA = "0xB2F31C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x200007E")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xB2EBD8", Offset = "0xB2EBD8", VA = "0xB2EBD8")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xB2EFFC", Offset = "0xB2EFFC", VA = "0xB2EFFC")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xB2ED80", Offset = "0xB2ED80", VA = "0xB2ED80")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xB2EE14", Offset = "0xB2EE14", VA = "0xB2EE14")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xB2EED8", Offset = "0xB2EED8", VA = "0xB2EED8")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200007F")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x40005DF")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x40005E0")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xD197F4", Offset = "0xD197F4", VA = "0xD197F4")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xD19888", Offset = "0xD19888", VA = "0xD19888", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xD198A4", Offset = "0xD198A4", VA = "0xD198A4")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xD19AA8", Offset = "0xD19AA8", VA = "0xD19AA8")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xD19CF0", Offset = "0xD19CF0", VA = "0xD19CF0")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000080")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xD19D70", Offset = "0xD19D70", VA = "0xD19D70")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xD19EB8", Offset = "0xD19EB8", VA = "0xD19EB8")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xD1A154", Offset = "0xD1A154", VA = "0xD1A154")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xD1A500", Offset = "0xD1A500", VA = "0xD1A500")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xD1A604", Offset = "0xD1A604", VA = "0xD1A604")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000081")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x40005E9")]
	Body = 1,
	[Token(Token = "0x40005EA")]
	Hands = 2,
	[Token(Token = "0x40005EB")]
	Base = 4,
	[Token(Token = "0x40005EC")]
	BodyTilt = 0x10,
	[Token(Token = "0x40005ED")]
	Expressive = 0x20,
	[Token(Token = "0x40005EE")]
	All = -1
}
[Token(Token = "0x2000082")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x40005F0")]
	AvatarSpecification,
	[Token(Token = "0x40005F1")]
	AssetLoaded,
	[Token(Token = "0x40005F2")]
	Count
}
[Token(Token = "0x2000083")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000084")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000085")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x40005F8")]
	Mesh,
	[Token(Token = "0x40005F9")]
	Texture,
	[Token(Token = "0x40005FA")]
	Pose,
	[Token(Token = "0x40005FB")]
	Material,
	[Token(Token = "0x40005FC")]
	CombinedMesh,
	[Token(Token = "0x40005FD")]
	PBSMaterial,
	[Token(Token = "0x40005FE")]
	FailedLoad,
	[Token(Token = "0x40005FF")]
	Count
}
[Token(Token = "0x2000086")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000087")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000088")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000089")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200008A")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200008B")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000634")]
	RGB24,
	[Token(Token = "0x4000635")]
	DXT1,
	[Token(Token = "0x4000636")]
	DXT5,
	[Token(Token = "0x4000637")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000638")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000639")]
	Count
}
[Token(Token = "0x200008C")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x200008D")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000641")]
	SkinnedMeshRender,
	[Token(Token = "0x4000642")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000643")]
	ProjectorRender,
	[Token(Token = "0x4000644")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000645")]
	Count
}
[Token(Token = "0x200008E")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000647")]
	Unknown,
	[Token(Token = "0x4000648")]
	Default,
	[Token(Token = "0x4000649")]
	Verbose,
	[Token(Token = "0x400064A")]
	Debug,
	[Token(Token = "0x400064B")]
	Info,
	[Token(Token = "0x400064C")]
	Warn,
	[Token(Token = "0x400064D")]
	Error,
	[Token(Token = "0x400064E")]
	Fatal,
	[Token(Token = "0x400064F")]
	Silent
}
[Token(Token = "0x200008F")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000090")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000654")]
	One = 1,
	[Token(Token = "0x4000655")]
	Two = 2,
	[Token(Token = "0x4000656")]
	Three = 4,
	[Token(Token = "0x4000657")]
	Joystick = 8
}
[Token(Token = "0x2000091")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000659")]
	One = 1,
	[Token(Token = "0x400065A")]
	Two = 2,
	[Token(Token = "0x400065B")]
	Joystick = 4,
	[Token(Token = "0x400065C")]
	ThumbRest = 8,
	[Token(Token = "0x400065D")]
	Index = 0x10,
	[Token(Token = "0x400065E")]
	Pointing = 0x40,
	[Token(Token = "0x400065F")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000092")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000093")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000094")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000095")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000096")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000097")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000098")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000099")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200009A")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x400067F")]
	Add,
	[Token(Token = "0x4000680")]
	Multiply,
	[Token(Token = "0x4000681")]
	Count
}
[Token(Token = "0x200009B")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000683")]
	Color,
	[Token(Token = "0x4000684")]
	Texture,
	[Token(Token = "0x4000685")]
	TextureSingleChannel,
	[Token(Token = "0x4000686")]
	Parallax,
	[Token(Token = "0x4000687")]
	Count
}
[Token(Token = "0x200009C")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000689")]
	None,
	[Token(Token = "0x400068A")]
	Positional,
	[Token(Token = "0x400068B")]
	ViewReflection,
	[Token(Token = "0x400068C")]
	Fresnel,
	[Token(Token = "0x400068D")]
	Pulse,
	[Token(Token = "0x400068E")]
	Count
}
[Token(Token = "0x200009D")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000690")]
	Touch,
	[Token(Token = "0x4000691")]
	Malibu,
	[Token(Token = "0x4000692")]
	Go,
	[Token(Token = "0x4000693")]
	Quest,
	[Token(Token = "0x4000694")]
	Count
}
[Token(Token = "0x200009E")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000696")]
	Lowest = 1,
	[Token(Token = "0x4000697")]
	Medium = 3,
	[Token(Token = "0x4000698")]
	Highest = 5
}
[Token(Token = "0x200009F")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400069A")]
	Unknown = -1,
	[Token(Token = "0x400069B")]
	One,
	[Token(Token = "0x400069C")]
	Two
}
[Token(Token = "0x20000A0")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xF136FC", Offset = "0xF136FC", VA = "0xF136FC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x6A48F4", Offset = "0x6A48F4", VA = "0x6A48F4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x6A48FC", Offset = "0x6A48FC", VA = "0x6A48FC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000A1")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xF13A2C", Offset = "0xF13A2C", VA = "0xF13A2C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x6A4B9C", Offset = "0x6A4B9C", VA = "0x6A4B9C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x6A4BA4", Offset = "0x6A4BA4", VA = "0x6A4BA4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000A2")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xF12DA4", Offset = "0xF12DA4", VA = "0xF12DA4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x6A463C", Offset = "0x6A463C", VA = "0x6A463C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x6A4644", Offset = "0x6A4644", VA = "0x6A4644", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000A3")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xF13F8C", Offset = "0xF13F8C", VA = "0xF13F8C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x6A5454", Offset = "0x6A5454", VA = "0x6A5454", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x6A545C", Offset = "0x6A545C", VA = "0x6A545C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000A4")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xD0EFA8", Offset = "0xD0EFA8", VA = "0xD0EFA8")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000A5")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000A6")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40006D1")]
	FirstPerson = 1,
	[Token(Token = "0x40006D2")]
	ThirdPerson = 2,
	[Token(Token = "0x40006D3")]
	SelfOccluding = 4
}
[Token(Token = "0x20000A7")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000A8")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000A9")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000AA")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000AB")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x40006E9")]
	Default,
	[Token(Token = "0x40006EA")]
	GripSphere,
	[Token(Token = "0x40006EB")]
	GripCube,
	[Token(Token = "0x40006EC")]
	Count
}
[Token(Token = "0x20000AC")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x40006EE")]
	Body,
	[Token(Token = "0x40006EF")]
	Clothing,
	[Token(Token = "0x40006F0")]
	Eyewear,
	[Token(Token = "0x40006F1")]
	Hair,
	[Token(Token = "0x40006F2")]
	Beard,
	[Token(Token = "0x40006F3")]
	Count
}
[Token(Token = "0x20000AD")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000AE")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000AF")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000B0")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000B1")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x40006FD")]
	AvatarHead,
	[Token(Token = "0x40006FE")]
	AvatarHand,
	[Token(Token = "0x40006FF")]
	Object,
	[Token(Token = "0x4000700")]
	ObjectStatic,
	[Token(Token = "0x4000701")]
	Count
}
[Token(Token = "0x20000B2")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000B3")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000B4")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000B5")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000B6")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400070D")]
	Point,
	[Token(Token = "0x400070E")]
	Direction,
	[Token(Token = "0x400070F")]
	Spot,
	[Token(Token = "0x4000710")]
	Count
}
[Token(Token = "0x20000B7")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000B8")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000BA")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000BB")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000726")]
	None = 0u,
	[Token(Token = "0x4000727")]
	GazeTarget = 1u,
	[Token(Token = "0x4000728")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000BC")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000BD")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000BE")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000BF")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000C0")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000C1")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20001B2")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x69E0D8", Offset = "0x69E0D8", VA = "0x69E0D8")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400073D")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000033")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000421")]
		[Address(RVA = "0xD0A1A0", Offset = "0xD0A1A0", VA = "0xD0A1A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xD1A614", Offset = "0xD1A614", VA = "0xD1A614")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xD1A83C", Offset = "0xD1A83C", VA = "0xD1A83C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xD1A8B0", Offset = "0xD1A8B0", VA = "0xD1A8B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xD1B22C", Offset = "0xD1B22C", VA = "0xD1B22C")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xD1B298", Offset = "0xD1B298", VA = "0xD1B298")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xD0AA8C", Offset = "0xD0AA8C", VA = "0xD0AA8C")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xD0B0A8", Offset = "0xD0B0A8", VA = "0xD0B0A8")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xD0A9E8", Offset = "0xD0A9E8", VA = "0xD0A9E8")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xD1B028", Offset = "0xD1B028", VA = "0xD1B028")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xD0A408", Offset = "0xD0A408", VA = "0xD0A408")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xD0A544", Offset = "0xD0A544", VA = "0xD0A544")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xD0A380", Offset = "0xD0A380", VA = "0xD0A380")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xD1B384", Offset = "0xD1B384", VA = "0xD1B384")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xD1A814", Offset = "0xD1A814", VA = "0xD1A814")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xD164BC", Offset = "0xD164BC", VA = "0xD164BC")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xD1B488", Offset = "0xD1B488", VA = "0xD1B488")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000C2")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000034")]
	public static string AppID
	{
		[Token(Token = "0x6000432")]
		[Address(RVA = "0xD1B430", Offset = "0xD1B430", VA = "0xD1B430")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000433")]
		[Address(RVA = "0xD1B5B4", Offset = "0xD1B5B4", VA = "0xD1B5B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000434")]
		[Address(RVA = "0xD1B45C", Offset = "0xD1B45C", VA = "0xD1B45C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000435")]
		[Address(RVA = "0xD1B5E4", Offset = "0xD1B5E4", VA = "0xD1B5E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000436")]
		[Address(RVA = "0xD1B4A0", Offset = "0xD1B4A0", VA = "0xD1B4A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000437")]
		[Address(RVA = "0xD1B614", Offset = "0xD1B614", VA = "0xD1B614")]
		set
		{
		}
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xD1B668", Offset = "0xD1B668", VA = "0xD1B668")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000C3")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xD07DEC", Offset = "0xD07DEC", VA = "0xD07DEC")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xD11F20", Offset = "0xD11F20", VA = "0xD11F20")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xD1D730", Offset = "0xD1D730", VA = "0xD1D730")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xD1D8C8", Offset = "0xD1D8C8", VA = "0xD1D8C8")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000C4")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xD08038", Offset = "0xD08038", VA = "0xD08038")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xD12168", Offset = "0xD12168", VA = "0xD12168")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xD1D8D8", Offset = "0xD1D8D8", VA = "0xD1D8D8")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000C5")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400074C")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400074D")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400074E")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xD08388", Offset = "0xD08388", VA = "0xD08388")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xD12318", Offset = "0xD12318", VA = "0xD12318")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xD1C9C8", Offset = "0xD1C9C8", VA = "0xD1C9C8")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xD1BAF8", Offset = "0xD1BAF8", VA = "0xD1BAF8")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xD1B6C0", Offset = "0xD1B6C0", VA = "0xD1B6C0")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xD1B8D4", Offset = "0xD1B8D4", VA = "0xD1B8D4")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xD1D720", Offset = "0xD1D720", VA = "0xD1D720")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000C6")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B3")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20001B4")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x69E150", Offset = "0x69E150", VA = "0x69E150")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20001B5")]
	public struct TextureSet
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x69BED8", Offset = "0x69BED8", VA = "0x69BED8")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BE94", Offset = "0x62BE94")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0xD1F068", Offset = "0xD1F068", VA = "0xD1F068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xD1F0D8", Offset = "0xD1F0D8", VA = "0xD1F0D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xD1E7E0", Offset = "0xD1E7E0", VA = "0xD1E7E0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xD1EA18", Offset = "0xD1EA18", VA = "0xD1EA18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xD1EA1C", Offset = "0xD1EA1C", VA = "0xD1EA1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xD1F070", Offset = "0xD1F070", VA = "0xD1F070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000752")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000753")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000756")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000757")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000758")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000759")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400075A")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400075B")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400075C")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xD1E01C", Offset = "0xD1E01C", VA = "0xD1E01C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xD1E4E4", Offset = "0xD1E4E4", VA = "0xD1E4E4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xD18F44", Offset = "0xD18F44", VA = "0xD18F44")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xD169A4", Offset = "0xD169A4", VA = "0xD169A4")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xD1E67C", Offset = "0xD1E67C", VA = "0xD1E67C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xD16540", Offset = "0xD16540", VA = "0xD16540")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xD167C4", Offset = "0xD167C4", VA = "0xD167C4")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xD1E71C", Offset = "0xD1E71C", VA = "0xD1E71C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6317F4", Offset = "0x6317F4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xD1B304", Offset = "0xD1B304", VA = "0xD1B304")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xD1E80C", Offset = "0xD1E80C", VA = "0xD1E80C")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000C7")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xB7BAC8", Offset = "0xB7BAC8", VA = "0xB7BAC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xB7BC44", Offset = "0xB7BC44", VA = "0xB7BC44")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000C8")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000453")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xB44340", Offset = "0xB44340", VA = "0xB44340")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000C9")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E0B8", Offset = "0x62E0B8")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E0F0", Offset = "0x62E0F0")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E128", Offset = "0x62E128")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xAF2898", Offset = "0xAF2898", VA = "0xAF2898")]
	private void Start()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xAF289C", Offset = "0xAF289C", VA = "0xAF289C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xAF291C", Offset = "0xAF291C", VA = "0xAF291C")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xAF2B90", Offset = "0xAF2B90", VA = "0xAF2B90")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000CA")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xAF2BB8", Offset = "0xAF2BB8", VA = "0xAF2BB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xAF2CFC", Offset = "0xAF2CFC", VA = "0xAF2CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xAF2DD0", Offset = "0xAF2DD0", VA = "0xAF2DD0")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xAF31F4", Offset = "0xAF31F4", VA = "0xAF31F4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xAF3244", Offset = "0xAF3244", VA = "0xAF3244")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000CB")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000037")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0x11E5370", Offset = "0x11E5370", VA = "0x11E5370")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x11E564C", Offset = "0x11E564C", VA = "0x11E564C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x11E5788", Offset = "0x11E5788", VA = "0x11E5788")]
	private void Update()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x11E56BC", Offset = "0x11E56BC", VA = "0x11E56BC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x11E3200", Offset = "0x11E3200", VA = "0x11E3200")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x11E5924", Offset = "0x11E5924", VA = "0x11E5924")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x11E3190", Offset = "0x11E3190", VA = "0x11E3190")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x11E32B4", Offset = "0x11E32B4", VA = "0x11E32B4")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x11E5820", Offset = "0x11E5820", VA = "0x11E5820")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x11E59CC", Offset = "0x11E59CC", VA = "0x11E59CC")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x11E5A10", Offset = "0x11E5A10", VA = "0x11E5A10")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x11E5C90", Offset = "0x11E5C90", VA = "0x11E5C90")]
	private void Prune()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x11E5A20", Offset = "0x11E5A20", VA = "0x11E5A20")]
	private void Display()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x11E5D70", Offset = "0x11E5D70", VA = "0x11E5D70")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000CC")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x11E6938", Offset = "0x11E6938", VA = "0x11E6938")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000CD")]
public static class OVRTouchpad
{
	[Token(Token = "0x20001B7")]
	public enum TouchEvent
	{
		[Token(Token = "0x4000CC3")]
		SingleTap,
		[Token(Token = "0x4000CC4")]
		DoubleTap,
		[Token(Token = "0x4000CC5")]
		Left,
		[Token(Token = "0x4000CC6")]
		Right,
		[Token(Token = "0x4000CC7")]
		Up,
		[Token(Token = "0x4000CC8")]
		Down
	}

	[Token(Token = "0x20001B8")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xD8BD98", Offset = "0xD8BD98", VA = "0xD8BD98")]
	public static void Create()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xD8BD9C", Offset = "0xD8BD9C", VA = "0xD8BD9C")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xD8C0D0", Offset = "0xD8C0D0", VA = "0xD8C0D0")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xD8BF0C", Offset = "0xD8BF0C", VA = "0xD8BF0C")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xD8C0D4", Offset = "0xD8C0D4", VA = "0xD8C0D4")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000CE")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000474")]
	[Address(RVA = "0xD8C2CC", Offset = "0xD8C2CC", VA = "0xD8C2CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xD8C348", Offset = "0xD8C348", VA = "0xD8C348")]
	private void Start()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xD8C3E0", Offset = "0xD8C3E0", VA = "0xD8C3E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xD8C43C", Offset = "0xD8C43C", VA = "0xD8C43C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xD8C4A0", Offset = "0xD8C4A0", VA = "0xD8C4A0")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xD8C4A4", Offset = "0xD8C4A4", VA = "0xD8C4A4")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000CF")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20001B9")]
	public enum Result
	{
		[Token(Token = "0x4000CCA")]
		Success = 0,
		[Token(Token = "0x4000CCB")]
		Unknown = -2200,
		[Token(Token = "0x4000CCC")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4000CCD")]
		InvalidParam = -2202,
		[Token(Token = "0x4000CCE")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000CCF")]
		MissingDLL = -2204,
		[Token(Token = "0x4000CD0")]
		BadVersion = -2205,
		[Token(Token = "0x4000CD1")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20001BA")]
	public enum AudioDataType
	{
		[Token(Token = "0x4000CD3")]
		S16_Mono,
		[Token(Token = "0x4000CD4")]
		S16_Stereo,
		[Token(Token = "0x4000CD5")]
		F32_Mono,
		[Token(Token = "0x4000CD6")]
		F32_Stereo
	}

	[Token(Token = "0x20001BB")]
	public enum Viseme
	{
		[Token(Token = "0x4000CD8")]
		sil,
		[Token(Token = "0x4000CD9")]
		PP,
		[Token(Token = "0x4000CDA")]
		FF,
		[Token(Token = "0x4000CDB")]
		TH,
		[Token(Token = "0x4000CDC")]
		DD,
		[Token(Token = "0x4000CDD")]
		kk,
		[Token(Token = "0x4000CDE")]
		CH,
		[Token(Token = "0x4000CDF")]
		SS,
		[Token(Token = "0x4000CE0")]
		nn,
		[Token(Token = "0x4000CE1")]
		RR,
		[Token(Token = "0x4000CE2")]
		aa,
		[Token(Token = "0x4000CE3")]
		E,
		[Token(Token = "0x4000CE4")]
		ih,
		[Token(Token = "0x4000CE5")]
		oh,
		[Token(Token = "0x4000CE6")]
		ou
	}

	[Token(Token = "0x20001BC")]
	public enum Signals
	{
		[Token(Token = "0x4000CE8")]
		VisemeOn,
		[Token(Token = "0x4000CE9")]
		VisemeOff,
		[Token(Token = "0x4000CEA")]
		VisemeAmount,
		[Token(Token = "0x4000CEB")]
		VisemeSmoothing,
		[Token(Token = "0x4000CEC")]
		LaughterAmount
	}

	[Token(Token = "0x20001BD")]
	public enum ContextProviders
	{
		[Token(Token = "0x4000CEE")]
		Original,
		[Token(Token = "0x4000CEF")]
		Enhanced,
		[Token(Token = "0x4000CF0")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20001BE")]
	public class Frame
	{
		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x11E2ABC", Offset = "0x11E2ABC", VA = "0x11E2ABC")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x11E2B5C", Offset = "0x11E2B5C", VA = "0x11E2B5C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x11E2BEC", Offset = "0x11E2BEC", VA = "0x11E2BEC")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000777")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x600047A")]
	[Address(RVA = "0x11E15B8", Offset = "0x11E15B8", VA = "0x11E15B8")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x600047B")]
	[Address(RVA = "0x11E1664", Offset = "0x11E1664", VA = "0x11E1664")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x600047C")]
	[Address(RVA = "0x11E16F0", Offset = "0x11E16F0", VA = "0x11E16F0")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x600047D")]
	[Address(RVA = "0x11E17A0", Offset = "0x11E17A0", VA = "0x11E17A0")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600047E")]
	[Address(RVA = "0x11E1864", Offset = "0x11E1864", VA = "0x11E1864")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x600047F")]
	[Address(RVA = "0x11E194C", Offset = "0x11E194C", VA = "0x11E194C")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000480")]
	[Address(RVA = "0x11E19E8", Offset = "0x11E19E8", VA = "0x11E19E8")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000481")]
	[Address(RVA = "0x11E1A84", Offset = "0x11E1A84", VA = "0x11E1A84")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000482")]
	[Address(RVA = "0x11E1B48", Offset = "0x11E1B48", VA = "0x11E1B48")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x11E1C60", Offset = "0x11E1C60", VA = "0x11E1C60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x11E2010", Offset = "0x11E2010", VA = "0x11E2010")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x11E1ED8", Offset = "0x11E1ED8", VA = "0x11E1ED8")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x11E20F0", Offset = "0x11E20F0", VA = "0x11E20F0")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x11E2204", Offset = "0x11E2204", VA = "0x11E2204")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x11E1E70", Offset = "0x11E1E70", VA = "0x11E1E70")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x11E2274", Offset = "0x11E2274", VA = "0x11E2274")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x11E2358", Offset = "0x11E2358", VA = "0x11E2358")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x11E2444", Offset = "0x11E2444", VA = "0x11E2444")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x11E24D8", Offset = "0x11E24D8", VA = "0x11E24D8")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x11E256C", Offset = "0x11E256C", VA = "0x11E256C")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x11E2630", Offset = "0x11E2630", VA = "0x11E2630")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x11E27E8", Offset = "0x11E27E8", VA = "0x11E27E8")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x11E2998", Offset = "0x11E2998", VA = "0x11E2998")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B77C", Offset = "0x62B77C")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E160", Offset = "0x62E160")]
	public bool enableKeyboardInput;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E198", Offset = "0x62E198")]
	public bool enableTouchInput;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E1D0", Offset = "0x62E1D0")]
	public bool audioLoopback;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E208", Offset = "0x62E208")]
	public KeyCode loopbackKey;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E240", Offset = "0x62E240")]
	public bool showVisemes;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E278", Offset = "0x62E278")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E2B0", Offset = "0x62E2B0")]
	public bool skipAudioSource;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E2E8", Offset = "0x62E2E8")]
	public float gain;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x11E2C74", Offset = "0x11E2C74", VA = "0x11E2C74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x11E2DAC", Offset = "0x11E2DAC", VA = "0x11E2DAC")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x11E3338", Offset = "0x11E3338", VA = "0x11E3338")]
	private void Update()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x11E364C", Offset = "0x11E364C", VA = "0x11E364C")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x11E36EC", Offset = "0x11E36EC", VA = "0x11E36EC")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x11E3790", Offset = "0x11E3790", VA = "0x11E3790")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x11E38BC", Offset = "0x11E38BC", VA = "0x11E38BC")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x11E39E0", Offset = "0x11E39E0", VA = "0x11E39E0")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x11E3AC4", Offset = "0x11E3AC4", VA = "0x11E3AC4")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x11E3388", Offset = "0x11E3388", VA = "0x11E3388")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x11E30BC", Offset = "0x11E30BC", VA = "0x11E30BC")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x11E3AD4", Offset = "0x11E3AD4", VA = "0x11E3AD4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x11E3C00", Offset = "0x11E3C00", VA = "0x11E3C00")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000D1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B7E0", Offset = "0x62B7E0")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E320", Offset = "0x62E320")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E358", Offset = "0x62E358")]
	public bool enableAcceleration;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000038")]
	public int Smoothing
	{
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x11E3D80", Offset = "0x11E3D80", VA = "0x11E3D80")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600049F")]
		[Address(RVA = "0x11E3C94", Offset = "0x11E3C94", VA = "0x11E3C94")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public uint Context
	{
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x11E38B4", Offset = "0x11E38B4", VA = "0x11E38B4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700003A")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x11E3380", Offset = "0x11E3380", VA = "0x11E3380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x11E3D88", Offset = "0x11E3D88", VA = "0x11E3D88")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x11E3F10", Offset = "0x11E3F10", VA = "0x11E3F10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x11E4024", Offset = "0x11E4024", VA = "0x11E4024")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x11E402C", Offset = "0x11E402C", VA = "0x11E402C")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x11E4120", Offset = "0x11E4120", VA = "0x11E4120")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x11E41E8", Offset = "0x11E41E8", VA = "0x11E41E8")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x11E3C24", Offset = "0x11E3C24", VA = "0x11E3C24")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B844", Offset = "0x62B844")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E390", Offset = "0x62E390")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x11E4268", Offset = "0x11E4268", VA = "0x11E4268")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x11E4474", Offset = "0x11E4474", VA = "0x11E4474")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000D3")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E3C8", Offset = "0x62E3C8")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E400", Offset = "0x62E400")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E438", Offset = "0x62E438")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E470", Offset = "0x62E470")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E4A8", Offset = "0x62E4A8")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E4E0", Offset = "0x62E4E0")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62E518", Offset = "0x62E518")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E518", Offset = "0x62E518")]
	public float laughterThreshold;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62E56C", Offset = "0x62E56C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E56C", Offset = "0x62E56C")]
	public float laughterMultiplier;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62E5C0", Offset = "0x62E5C0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E5C0", Offset = "0x62E5C0")]
	public int smoothAmount;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x11E4478", Offset = "0x11E4478", VA = "0x11E4478")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x11E45C8", Offset = "0x11E45C8", VA = "0x11E45C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x11E4944", Offset = "0x11E4944", VA = "0x11E4944")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x11E46FC", Offset = "0x11E46FC", VA = "0x11E46FC")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x11E4840", Offset = "0x11E4840", VA = "0x11E4840")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x11E4A28", Offset = "0x11E4A28", VA = "0x11E4A28")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x11E4B4C", Offset = "0x11E4B4C", VA = "0x11E4B4C")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x11E4BC8", Offset = "0x11E4BC8", VA = "0x11E4BC8")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000D4")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E618", Offset = "0x62E618")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x62E618", Offset = "0x62E618")]
	public Texture[] Textures;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62E794", Offset = "0x62E794")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E794", Offset = "0x62E794")]
	public int smoothAmount;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x11E4CC0", Offset = "0x11E4CC0", VA = "0x11E4CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x11E4E20", Offset = "0x11E4E20", VA = "0x11E4E20")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x11E50C4", Offset = "0x11E50C4", VA = "0x11E50C4")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x11E52C4", Offset = "0x11E52C4", VA = "0x11E52C4")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20000D5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B8A8", Offset = "0x62B8A8")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20001BF")]
	public enum micActivation
	{
		[Token(Token = "0x4000CF6")]
		HoldToSpeak,
		[Token(Token = "0x4000CF7")]
		PushToSpeak,
		[Token(Token = "0x4000CF8")]
		ConstantSpeak
	}

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E7EC", Offset = "0x62E7EC")]
	public AudioSource audioSource;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E824", Offset = "0x62E824")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E85C", Offset = "0x62E85C")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62E894", Offset = "0x62E894")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E894", Offset = "0x62E894")]
	private float micInputVolume;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E8FC", Offset = "0x62E8FC")]
	private int micFrequency;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E948", Offset = "0x62E948")]
	public micActivation micControl;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E980", Offset = "0x62E980")]
	public KeyCode micActivationKey;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62E9B8", Offset = "0x62E9B8")]
	public string selectedDevice;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x1700003B")]
	public float MicFrequency
	{
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0x11E5DE4", Offset = "0x11E5DE4", VA = "0x11E5DE4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x11E5DF0", Offset = "0x11E5DF0", VA = "0x11E5DF0")]
		set
		{
		}
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x11E5E7C", Offset = "0x11E5E7C", VA = "0x11E5E7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x11E5F3C", Offset = "0x11E5F3C", VA = "0x11E5F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x11E5F9C", Offset = "0x11E5F9C", VA = "0x11E5F9C")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x11E6108", Offset = "0x11E6108", VA = "0x11E6108")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x11E65C0", Offset = "0x11E65C0", VA = "0x11E65C0")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x11E65D4", Offset = "0x11E65D4", VA = "0x11E65D4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x11E65EC", Offset = "0x11E65EC", VA = "0x11E65EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x11E65F0", Offset = "0x11E65F0", VA = "0x11E65F0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x11E6668", Offset = "0x11E6668", VA = "0x11E6668")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x11E6040", Offset = "0x11E6040", VA = "0x11E6040")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x11E63F8", Offset = "0x11E63F8", VA = "0x11E63F8")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x11E6278", Offset = "0x11E6278", VA = "0x11E6278")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x11E6890", Offset = "0x11E6890", VA = "0x11E6890")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x11E6898", Offset = "0x11E6898", VA = "0x11E6898")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D6")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x11E437C", Offset = "0x11E437C", VA = "0x11E437C")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x11E68C8", Offset = "0x11E68C8", VA = "0x11E68C8")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000D7")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20001C0")]
	public delegate void OnClick();

	[Token(Token = "0x20001C1")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20001C2")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20001C3")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BEA4", Offset = "0x62BEA4")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xB415C8", Offset = "0xB415C8", VA = "0xB415C8")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xB42100", Offset = "0xB42100", VA = "0xB42100")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BEB4", Offset = "0x62BEB4")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xB418CC", Offset = "0xB418CC", VA = "0xB418CC")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xB4252C", Offset = "0xB4252C", VA = "0xB4252C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BEC4", Offset = "0x62BEC4")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xB41B18", Offset = "0xB41B18", VA = "0xB41B18")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xB429B8", Offset = "0xB429B8", VA = "0xB429B8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BED4", Offset = "0x62BED4")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xB41CEC", Offset = "0xB41CEC", VA = "0xB41CEC")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xB4311C", Offset = "0xB4311C", VA = "0xB4311C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BEE4", Offset = "0x62BEE4")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xB41FC8", Offset = "0xB41FC8", VA = "0xB41FC8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xB4314C", Offset = "0xB4314C", VA = "0xB4314C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40007AB")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40007AC")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40007AD")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40007BA")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40007BB")]
	private const float marginH = 16f;

	[Token(Token = "0x40007BC")]
	private const float marginV = 16f;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xB3FFD8", Offset = "0xB3FFD8", VA = "0xB3FFD8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB40500", Offset = "0xB40500", VA = "0xB40500")]
	public void Show()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xB40D0C", Offset = "0xB40D0C", VA = "0xB40D0C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xB40A0C", Offset = "0xB40A0C", VA = "0xB40A0C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xB40F00", Offset = "0xB40F00", VA = "0xB40F00")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xB412BC", Offset = "0xB412BC", VA = "0xB412BC")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xB415D0", Offset = "0xB415D0", VA = "0xB415D0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xB416D8", Offset = "0xB416D8", VA = "0xB416D8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xB418D4", Offset = "0xB418D4", VA = "0xB418D4")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xB41970", Offset = "0xB41970", VA = "0xB41970")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xB41B20", Offset = "0xB41B20", VA = "0xB41B20")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xB41CF4", Offset = "0xB41CF4", VA = "0xB41CF4")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xB41FD0", Offset = "0xB41FD0", VA = "0xB41FD0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xB42090", Offset = "0xB42090", VA = "0xB42090")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000D8")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xAE9F24", Offset = "0xAE9F24", VA = "0xAE9F24")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xAE9FAC", Offset = "0xAE9FAC", VA = "0xAE9FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xAEA02C", Offset = "0xAEA02C", VA = "0xAEA02C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xAEA09C", Offset = "0xAEA09C", VA = "0xAEA09C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000D9")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20001C9")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000D02")]
		On,
		[Token(Token = "0x4000D03")]
		Off,
		[Token(Token = "0x4000D04")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700003C")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xAED158", Offset = "0xAED158", VA = "0xAED158")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xAED0FC", Offset = "0xAED0FC", VA = "0xAED0FC")]
		set
		{
		}
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xAED160", Offset = "0xAED160", VA = "0xAED160")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xAED1B8", Offset = "0xAED1B8", VA = "0xAED1B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xAED2D8", Offset = "0xAED2D8", VA = "0xAED2D8", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xAED2F4", Offset = "0xAED2F4", VA = "0xAED2F4", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xAED36C", Offset = "0xAED36C", VA = "0xAED36C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xAED650", Offset = "0xAED650", VA = "0xAED650")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xAED7AC", Offset = "0xAED7AC", VA = "0xAED7AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xAED848", Offset = "0xAED848", VA = "0xAED848")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xAED92C", Offset = "0xAED92C", VA = "0xAED92C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xAED9EC", Offset = "0xAED9EC", VA = "0xAED9EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xAEDAB8", Offset = "0xAEDAB8", VA = "0xAEDAB8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000DA")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40007D0")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40007D1")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40007D2")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EA90", Offset = "0x62EA90")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EAC8", Offset = "0x62EAC8")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EB00", Offset = "0x62EB00")]
	public float HeightOffset;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EB38", Offset = "0x62EB38")]
	public float MinimumHeight;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EB70", Offset = "0x62EB70")]
	public float MaximumHeight;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xB2FCC4", Offset = "0xB2FCC4", VA = "0xB2FCC4")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xB2FCCC", Offset = "0xB2FCCC", VA = "0xB2FCCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xB2FD3C", Offset = "0xB2FD3C", VA = "0xB2FD3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xB2FDCC", Offset = "0xB2FDCC", VA = "0xB2FDCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xB2FE5C", Offset = "0xB2FE5C", VA = "0xB2FE5C")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xB30294", Offset = "0xB30294", VA = "0xB30294")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xB305F8", Offset = "0xB305F8", VA = "0xB305F8")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000DB")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xAF3254", Offset = "0xAF3254", VA = "0xAF3254")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xAF3300", Offset = "0xAF3300", VA = "0xAF3300")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000DC")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20001CA")]
	public enum States
	{
		[Token(Token = "0x4000D06")]
		Ready,
		[Token(Token = "0x4000D07")]
		Aim,
		[Token(Token = "0x4000D08")]
		CancelAim,
		[Token(Token = "0x4000D09")]
		PreTeleport,
		[Token(Token = "0x4000D0A")]
		CancelTeleport,
		[Token(Token = "0x4000D0B")]
		Teleporting,
		[Token(Token = "0x4000D0C")]
		PostTeleport
	}

	[Token(Token = "0x20001CB")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000D0E")]
		None,
		[Token(Token = "0x4000D0F")]
		Aim,
		[Token(Token = "0x4000D10")]
		PreTeleport,
		[Token(Token = "0x4000D11")]
		Teleport
	}

	[Token(Token = "0x20001CC")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000D13")]
		Point,
		[Token(Token = "0x4000D14")]
		Sphere,
		[Token(Token = "0x4000D15")]
		Capsule
	}

	[Token(Token = "0x20001CD")]
	public class AimData
	{
		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630ED8", Offset = "0x630ED8")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000EE")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0xAF73C0", Offset = "0xAF73C0", VA = "0xAF73C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6330DC", Offset = "0x6330DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xAF73B8", Offset = "0xAF73B8", VA = "0xAF73B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6330EC", Offset = "0x6330EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xAF7344", Offset = "0xAF7344", VA = "0xAF7344")]
		public AimData()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xAF73C8", Offset = "0xAF73C8", VA = "0xAF73C8")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BEF4", Offset = "0x62BEF4")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0xAF7120", Offset = "0xAF7120", VA = "0xAF7120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0xAF7190", Offset = "0xAF7190", VA = "0xAF7190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xAF4C58", Offset = "0xAF4C58", VA = "0xAF4C58")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xAF6FB4", Offset = "0xAF6FB4", VA = "0xAF6FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xAF6FB8", Offset = "0xAF6FB8", VA = "0xAF6FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xAF7128", Offset = "0xAF7128", VA = "0xAF7128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF04", Offset = "0x62BF04")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0xAF68F0", Offset = "0xAF68F0", VA = "0xAF68F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0xAF6960", Offset = "0xAF6960", VA = "0xAF6960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xAF52F4", Offset = "0xAF52F4", VA = "0xAF52F4")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xAF6724", Offset = "0xAF6724", VA = "0xAF6724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xAF6728", Offset = "0xAF6728", VA = "0xAF6728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xAF68F8", Offset = "0xAF68F8", VA = "0xAF68F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF14", Offset = "0x62BF14")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0xAF6A44", Offset = "0xAF6A44", VA = "0xAF6A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xAF6AB4", Offset = "0xAF6AB4", VA = "0xAF6AB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xAF556C", Offset = "0xAF556C", VA = "0xAF556C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xAF6968", Offset = "0xAF6968", VA = "0xAF6968", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xAF696C", Offset = "0xAF696C", VA = "0xAF696C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xAF6A4C", Offset = "0xAF6A4C", VA = "0xAF6A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF24", Offset = "0x62BF24")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0xAF6F3C", Offset = "0xAF6F3C", VA = "0xAF6F3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0xAF6FAC", Offset = "0xAF6FAC", VA = "0xAF6FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xAF57E4", Offset = "0xAF57E4", VA = "0xAF57E4")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xAF6DF0", Offset = "0xAF6DF0", VA = "0xAF6DF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xAF6DF4", Offset = "0xAF6DF4", VA = "0xAF6DF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xAF6F44", Offset = "0xAF6F44", VA = "0xAF6F44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF34", Offset = "0x62BF34")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0xAF6B98", Offset = "0xAF6B98", VA = "0xAF6B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0xAF6C08", Offset = "0xAF6C08", VA = "0xAF6C08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xAF5A5C", Offset = "0xAF5A5C", VA = "0xAF5A5C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xAF6ABC", Offset = "0xAF6ABC", VA = "0xAF6ABC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xAF6AC0", Offset = "0xAF6AC0", VA = "0xAF6AC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xAF6BA0", Offset = "0xAF6BA0", VA = "0xAF6BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF44", Offset = "0x62BF44")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0xAF72CC", Offset = "0xAF72CC", VA = "0xAF72CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0xAF733C", Offset = "0xAF733C", VA = "0xAF733C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xAF5CD4", Offset = "0xAF5CD4", VA = "0xAF5CD4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xAF7198", Offset = "0xAF7198", VA = "0xAF7198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xAF719C", Offset = "0xAF719C", VA = "0xAF719C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xAF72D4", Offset = "0xAF72D4", VA = "0xAF72D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF54", Offset = "0x62BF54")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xAF6D78", Offset = "0xAF6D78", VA = "0xAF6D78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0xAF6DE8", Offset = "0xAF6DE8", VA = "0xAF6DE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xAF5F4C", Offset = "0xAF5F4C", VA = "0xAF5F4C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xAF6C10", Offset = "0xAF6C10", VA = "0xAF6C10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xAF6C14", Offset = "0xAF6C14", VA = "0xAF6C14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xAF6D80", Offset = "0xAF6D80", VA = "0xAF6D80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EBA8", Offset = "0x62EBA8")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EBE0", Offset = "0x62EBE0")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EC18", Offset = "0x62EC18")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EC50", Offset = "0x62EC50")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EC88", Offset = "0x62EC88")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62ECC0", Offset = "0x62ECC0")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62ECF8", Offset = "0x62ECF8")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62ED30", Offset = "0x62ED30")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62ED68", Offset = "0x62ED68")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62ED78", Offset = "0x62ED78")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EDB0", Offset = "0x62EDB0")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62EDF8", Offset = "0x62EDF8")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EE08", Offset = "0x62EE08")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EE40", Offset = "0x62EE40")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EE78", Offset = "0x62EE78")]
	public float AimCollisionRadius;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EEB0", Offset = "0x62EEB0")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700003D")]
	public States CurrentState
	{
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xAF3F60", Offset = "0xAF3F60", VA = "0xAF3F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631858", Offset = "0x631858")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xAF3F68", Offset = "0xAF3F68", VA = "0xAF3F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631868", Offset = "0x631868")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xAF4228", Offset = "0xAF4228", VA = "0xAF4228")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700003F")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xAF4268", Offset = "0xAF4268", VA = "0xAF4268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631898", Offset = "0x631898")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xAF4270", Offset = "0xAF4270", VA = "0xAF4270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6318A8", Offset = "0x6318A8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xAF3F70", Offset = "0xAF3F70", VA = "0xAF3F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631878", Offset = "0x631878")]
		add
		{
		}
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xAF405C", Offset = "0xAF405C", VA = "0xAF405C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631888", Offset = "0x631888")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000505")]
		[Address(RVA = "0xAF4A80", Offset = "0xAF4A80", VA = "0xAF4A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6318F0", Offset = "0x6318F0")]
		add
		{
		}
		[Token(Token = "0x6000506")]
		[Address(RVA = "0xAF4B6C", Offset = "0xAF4B6C", VA = "0xAF4B6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631900", Offset = "0x631900")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0xAF4C84", Offset = "0xAF4C84", VA = "0xAF4C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631974", Offset = "0x631974")]
		add
		{
		}
		[Token(Token = "0x6000509")]
		[Address(RVA = "0xAF4D70", Offset = "0xAF4D70", VA = "0xAF4D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631984", Offset = "0x631984")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0xAF4E5C", Offset = "0xAF4E5C", VA = "0xAF4E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631994", Offset = "0x631994")]
		add
		{
		}
		[Token(Token = "0x600050B")]
		[Address(RVA = "0xAF4F48", Offset = "0xAF4F48", VA = "0xAF4F48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6319A4", Offset = "0x6319A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0xAF50A8", Offset = "0xAF50A8", VA = "0xAF50A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6319B4", Offset = "0x6319B4")]
		add
		{
		}
		[Token(Token = "0x600050E")]
		[Address(RVA = "0xAF5194", Offset = "0xAF5194", VA = "0xAF5194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6319C4", Offset = "0x6319C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0xAF5320", Offset = "0xAF5320", VA = "0xAF5320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631A38", Offset = "0x631A38")]
		add
		{
		}
		[Token(Token = "0x6000511")]
		[Address(RVA = "0xAF540C", Offset = "0xAF540C", VA = "0xAF540C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631A48", Offset = "0x631A48")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000513")]
		[Address(RVA = "0xAF5598", Offset = "0xAF5598", VA = "0xAF5598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631ABC", Offset = "0x631ABC")]
		add
		{
		}
		[Token(Token = "0x6000514")]
		[Address(RVA = "0xAF5684", Offset = "0xAF5684", VA = "0xAF5684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631ACC", Offset = "0x631ACC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0xAF5810", Offset = "0xAF5810", VA = "0xAF5810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631B40", Offset = "0x631B40")]
		add
		{
		}
		[Token(Token = "0x6000517")]
		[Address(RVA = "0xAF58FC", Offset = "0xAF58FC", VA = "0xAF58FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631B50", Offset = "0x631B50")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0xAF5A88", Offset = "0xAF5A88", VA = "0xAF5A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631BC4", Offset = "0x631BC4")]
		add
		{
		}
		[Token(Token = "0x600051A")]
		[Address(RVA = "0xAF5B74", Offset = "0xAF5B74", VA = "0xAF5B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631BD4", Offset = "0x631BD4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xAF5D00", Offset = "0xAF5D00", VA = "0xAF5D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631C48", Offset = "0x631C48")]
		add
		{
		}
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xAF5DEC", Offset = "0xAF5DEC", VA = "0xAF5DEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631C58", Offset = "0x631C58")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600051F")]
		[Address(RVA = "0xAF5F78", Offset = "0xAF5F78", VA = "0xAF5F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631CCC", Offset = "0x631CCC")]
		add
		{
		}
		[Token(Token = "0x6000520")]
		[Address(RVA = "0xAF6064", Offset = "0xAF6064", VA = "0xAF6064")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631CDC", Offset = "0x631CDC")]
		remove
		{
		}
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xAF3B78", Offset = "0xAF3B78", VA = "0xAF3B78")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xAF3B9C", Offset = "0xAF3B9C", VA = "0xAF3B9C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xAF4148", Offset = "0xAF4148", VA = "0xAF4148")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xAF4278", Offset = "0xAF4278", VA = "0xAF4278")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xAF4620", Offset = "0xAF4620", VA = "0xAF4620")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6318B8", Offset = "0x6318B8")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xAF46D8", Offset = "0xAF46D8", VA = "0xAF46D8")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xAF4800", Offset = "0xAF4800", VA = "0xAF4800")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xAF4830", Offset = "0xAF4830", VA = "0xAF4830")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xAF48FC", Offset = "0xAF48FC", VA = "0xAF48FC")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xAF4978", Offset = "0xAF4978", VA = "0xAF4978")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xAF49D4", Offset = "0xAF49D4", VA = "0xAF49D4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xAF4A78", Offset = "0xAF4A78", VA = "0xAF4A78", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xAF4A04", Offset = "0xAF4A04", VA = "0xAF4A04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631910", Offset = "0x631910")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xAF5034", Offset = "0xAF5034", VA = "0xAF5034")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xAF5280", Offset = "0xAF5280", VA = "0xAF5280")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6319D4", Offset = "0x6319D4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xAF54F8", Offset = "0xAF54F8", VA = "0xAF54F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631A58", Offset = "0x631A58")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xAF5770", Offset = "0xAF5770", VA = "0xAF5770")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631ADC", Offset = "0x631ADC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xAF59E8", Offset = "0xAF59E8", VA = "0xAF59E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631B60", Offset = "0x631B60")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xAF5C60", Offset = "0xAF5C60", VA = "0xAF5C60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631BE4", Offset = "0x631BE4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xAF5ED8", Offset = "0xAF5ED8", VA = "0xAF5ED8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631C68", Offset = "0x631C68")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xAF6150", Offset = "0xAF6150", VA = "0xAF6150")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xAF62F4", Offset = "0xAF62F4", VA = "0xAF62F4")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xAF634C", Offset = "0xAF634C", VA = "0xAF634C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xAF6584", Offset = "0xAF6584", VA = "0xAF6584")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xAF6714", Offset = "0xAF6714", VA = "0xAF6714")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000DD")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000526")]
		[Address(RVA = "0xC860C0", Offset = "0xC860C0", VA = "0xC860C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631CEC", Offset = "0x631CEC")]
		add
		{
		}
		[Token(Token = "0x6000527")]
		[Address(RVA = "0xC861AC", Offset = "0xC861AC", VA = "0xC861AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631CFC", Offset = "0x631CFC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000528")]
		[Address(RVA = "0xC86298", Offset = "0xC86298", VA = "0xC86298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631D0C", Offset = "0x631D0C")]
		add
		{
		}
		[Token(Token = "0x6000529")]
		[Address(RVA = "0xC86384", Offset = "0xC86384", VA = "0xC86384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631D1C", Offset = "0x631D1C")]
		remove
		{
		}
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xC86470", Offset = "0xC86470", VA = "0xC86470")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xC86518", Offset = "0xC86518", VA = "0xC86518")]
	private void Start()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xC8651C", Offset = "0xC8651C", VA = "0xC8651C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xC86590", Offset = "0xC86590", VA = "0xC86590")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xC86798", Offset = "0xC86798", VA = "0xC86798")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xC86AC0", Offset = "0xC86AC0", VA = "0xC86AC0")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xC86CE0", Offset = "0xC86CE0", VA = "0xC86CE0")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000DE")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000531")]
	[Address(RVA = "0xF04134", Offset = "0xF04134", VA = "0xF04134", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xF041D4", Offset = "0xF041D4", VA = "0xF041D4", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000533")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xF042B0", Offset = "0xF042B0", VA = "0xF042B0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000DF")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EFA8", Offset = "0x62EFA8")]
	public float Range;

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xF042C0", Offset = "0xF042C0", VA = "0xF042C0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xF04470", Offset = "0xF04470", VA = "0xF04470")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000E0")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62EFE0", Offset = "0x62EFE0")]
	public float Range;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F018", Offset = "0x62F018")]
	public float MinimumElevation;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F050", Offset = "0x62F050")]
	public float Gravity;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F088", Offset = "0x62F088")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F088", Offset = "0x62F088")]
	public float AimVelocity;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F0E4", Offset = "0x62F0E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F0E4", Offset = "0x62F0E4")]
	public float AimStep;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xF04480", Offset = "0xF04480", VA = "0xF04480", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xF046E4", Offset = "0xF046E4", VA = "0xF046E4")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000E1")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F13C", Offset = "0x62F13C")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xF046F8", Offset = "0xF046F8", VA = "0xF046F8")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xF047DC", Offset = "0xF047DC", VA = "0xF047DC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xF04828", Offset = "0xF04828", VA = "0xF04828")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xF04874", Offset = "0xF04874", VA = "0xF04874")]
	private void Awake()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xF04928", Offset = "0xF04928", VA = "0xF04928", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xF049C8", Offset = "0xF049C8", VA = "0xF049C8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xF04A64", Offset = "0xF04A64", VA = "0xF04A64")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000E2")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F174", Offset = "0x62F174")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F184", Offset = "0x62F184")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F1BC", Offset = "0x62F1BC")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F1F4", Offset = "0x62F1F4")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000040")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0xF04C20", Offset = "0xF04C20", VA = "0xF04C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631D2C", Offset = "0x631D2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000541")]
		[Address(RVA = "0xF04C28", Offset = "0xF04C28", VA = "0xF04C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631D3C", Offset = "0x631D3C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0xF04E38", Offset = "0xF04E38", VA = "0xF04E38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631D4C", Offset = "0x631D4C")]
		add
		{
		}
		[Token(Token = "0x6000547")]
		[Address(RVA = "0xF04F24", Offset = "0xF04F24", VA = "0xF04F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631D5C", Offset = "0x631D5C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xF04C34", Offset = "0xF04C34", VA = "0xF04C34")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xF04CC4", Offset = "0xF04CC4", VA = "0xF04CC4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xF04DE0", Offset = "0xF04DE0", VA = "0xF04DE0")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xF04E34", Offset = "0xF04E34", VA = "0xF04E34")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xF05010", Offset = "0xF05010", VA = "0xF05010")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xF05078", Offset = "0xF05078", VA = "0xF05078")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xF050B0", Offset = "0xF050B0", VA = "0xF050B0", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000E3")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF64", Offset = "0x62BF64")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xF05908", Offset = "0xF05908", VA = "0xF05908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xF05978", Offset = "0xF05978", VA = "0xF05978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xF05620", Offset = "0xF05620", VA = "0xF05620")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xF0586C", Offset = "0xF0586C", VA = "0xF0586C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xF05870", Offset = "0xF05870", VA = "0xF05870", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xF05910", Offset = "0xF05910", VA = "0xF05910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF74", Offset = "0x62BF74")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0xF057F4", Offset = "0xF057F4", VA = "0xF057F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0xF05864", Offset = "0xF05864", VA = "0xF05864", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xF056C0", Offset = "0xF056C0", VA = "0xF056C0")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xF05744", Offset = "0xF05744", VA = "0xF05744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xF05748", Offset = "0xF05748", VA = "0xF05748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xF057FC", Offset = "0xF057FC", VA = "0xF057FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xF0538C", Offset = "0xF0538C", VA = "0xF0538C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xF05438", Offset = "0xF05438", VA = "0xF05438", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xF054BC", Offset = "0xF054BC", VA = "0xF054BC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xF055AC", Offset = "0xF055AC", VA = "0xF055AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631D6C", Offset = "0x631D6C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xF0564C", Offset = "0xF0564C", VA = "0xF0564C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631DD0", Offset = "0x631DD0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000551")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xF056EC", Offset = "0xF056EC", VA = "0xF056EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631E34", Offset = "0x631E34")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xF05718", Offset = "0xF05718", VA = "0xF05718")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631E44", Offset = "0x631E44")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000E4")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F23C", Offset = "0x62F23C")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F24C", Offset = "0x62F24C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F284", Offset = "0x62F284")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F2BC", Offset = "0x62F2BC")]
	public bool FastTeleport;

	[Token(Token = "0x17000041")]
	public Transform Pointer
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xF05980", Offset = "0xF05980", VA = "0xF05980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631E54", Offset = "0x631E54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xF05988", Offset = "0xF05988", VA = "0xF05988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631E64", Offset = "0x631E64")]
		private set
		{
		}
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xF05990", Offset = "0xF05990", VA = "0xF05990", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xF05AF8", Offset = "0xF05AF8", VA = "0xF05AF8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xF05BE8", Offset = "0xF05BE8", VA = "0xF05BE8")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000E5")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20001D7")]
	public enum InputModes
	{
		[Token(Token = "0x4000D37")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000D38")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000D39")]
		ThumbstickTeleport,
		[Token(Token = "0x4000D3A")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20001D8")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000D3C")]
		A,
		[Token(Token = "0x4000D3D")]
		B,
		[Token(Token = "0x4000D3E")]
		LeftTrigger,
		[Token(Token = "0x4000D3F")]
		LeftThumbstick,
		[Token(Token = "0x4000D40")]
		RightTrigger,
		[Token(Token = "0x4000D41")]
		RightThumbstick,
		[Token(Token = "0x4000D42")]
		X,
		[Token(Token = "0x4000D43")]
		Y
	}

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F2F4", Offset = "0x62F2F4")]
	public InputModes InputMode;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F32C", Offset = "0x62F32C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F364", Offset = "0x62F364")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F39C", Offset = "0x62F39C")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xF05BEC", Offset = "0xF05BEC", VA = "0xF05BEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xF05BF0", Offset = "0xF05BF0", VA = "0xF05BF0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xF060A8", Offset = "0xF060A8", VA = "0xF060A8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xF06178", Offset = "0xF06178", VA = "0xF06178")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000E6")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20001D9")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000D45")]
		HeadRelative,
		[Token(Token = "0x4000D46")]
		ForwardFacing
	}

	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF84", Offset = "0x62BF84")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0xF066C8", Offset = "0xF066C8", VA = "0xF066C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0xF06738", Offset = "0xF06738", VA = "0xF06738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xF06430", Offset = "0xF06430", VA = "0xF06430")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xF065DC", Offset = "0xF065DC", VA = "0xF065DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xF065E0", Offset = "0xF065E0", VA = "0xF065E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xF066D0", Offset = "0xF066D0", VA = "0xF066D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xF06224", Offset = "0xF06224", VA = "0xF06224")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xF062D8", Offset = "0xF062D8", VA = "0xF062D8")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xF062E0", Offset = "0xF062E0", VA = "0xF062E0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xF06350", Offset = "0xF06350", VA = "0xF06350", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xF063BC", Offset = "0xF063BC", VA = "0xF063BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631E74", Offset = "0x631E74")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000562")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000563")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xF0645C", Offset = "0xF0645C", VA = "0xF0645C")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xF065B0", Offset = "0xF065B0", VA = "0xF065B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631ED8", Offset = "0x631ED8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000E7")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000566")]
	[Address(RVA = "0xF06740", Offset = "0xF06740", VA = "0xF06740", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xF06744", Offset = "0xF06744", VA = "0xF06744", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xF06800", Offset = "0xF06800", VA = "0xF06800")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000E8")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F3D4", Offset = "0x62F3D4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F40C", Offset = "0x62F40C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F444", Offset = "0x62F444")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F47C", Offset = "0x62F47C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xF06804", Offset = "0xF06804", VA = "0xF06804", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xF06874", Offset = "0xF06874", VA = "0xF06874", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xF06DE0", Offset = "0xF06DE0", VA = "0xF06DE0")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000E9")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F4B4", Offset = "0x62F4B4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F4EC", Offset = "0x62F4EC")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F524", Offset = "0x62F524")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xF06DE4", Offset = "0xF06DE4", VA = "0xF06DE4", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xF06E30", Offset = "0xF06E30", VA = "0xF06E30", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xF07314", Offset = "0xF07314", VA = "0xF07314")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000EA")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xF07324", Offset = "0xF07324", VA = "0xF07324")]
	private void Start()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xF07328", Offset = "0xF07328", VA = "0xF07328")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xF07330", Offset = "0xF07330", VA = "0xF07330")]
	private void Update()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xF0742C", Offset = "0xF0742C", VA = "0xF0742C")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xF07454", Offset = "0xF07454", VA = "0xF07454")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000EB")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F55C", Offset = "0x62F55C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000042")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000574")]
		[Address(RVA = "0xF041CC", Offset = "0xF041CC", VA = "0xF041CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631EE8", Offset = "0x631EE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xF0746C", Offset = "0xF0746C", VA = "0xF0746C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631EF8", Offset = "0x631EF8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xF04168", Offset = "0xF04168", VA = "0xF04168", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xF04284", Offset = "0xF04284", VA = "0xF04284", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xF07474", Offset = "0xF07474", VA = "0xF07474")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x631F08", Offset = "0x631F08")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xF049BC", Offset = "0xF049BC", VA = "0xF049BC", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xF04A5C", Offset = "0xF04A5C", VA = "0xF04A5C", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xF042B8", Offset = "0xF042B8", VA = "0xF042B8")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000EC")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BF94", Offset = "0x62BF94")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0xF07C3C", Offset = "0xF07C3C", VA = "0xF07C3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0xF07CAC", Offset = "0xF07CAC", VA = "0xF07CAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xF076F8", Offset = "0xF076F8", VA = "0xF076F8")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xF078CC", Offset = "0xF078CC", VA = "0xF078CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xF078D0", Offset = "0xF078D0", VA = "0xF078D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xF07C44", Offset = "0xF07C44", VA = "0xF07C44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F56C", Offset = "0x62F56C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000847")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xF07544", Offset = "0xF07544", VA = "0xF07544")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xF07608", Offset = "0xF07608", VA = "0xF07608", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xF07648", Offset = "0xF07648", VA = "0xF07648", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xF07684", Offset = "0xF07684", VA = "0xF07684")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631F40", Offset = "0x631F40")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xF07724", Offset = "0xF07724", VA = "0xF07724", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000581")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xF07754", Offset = "0xF07754", VA = "0xF07754", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xF078A0", Offset = "0xF078A0", VA = "0xF078A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x631FA4", Offset = "0x631FA4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000ED")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xF07CB4", Offset = "0xF07CB4", VA = "0xF07CB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xF07D14", Offset = "0xF07D14", VA = "0xF07D14", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xF07ECC", Offset = "0xF07ECC", VA = "0xF07ECC", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xF08004", Offset = "0xF08004", VA = "0xF08004")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x631FB4", Offset = "0x631FB4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xF08008", Offset = "0xF08008", VA = "0xF08008")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000EE")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F5A4", Offset = "0x62F5A4")]
	public float LOSOffset;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F5DC", Offset = "0x62F5DC")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xF08014", Offset = "0xF08014", VA = "0xF08014", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xF082AC", Offset = "0xF082AC", VA = "0xF082AC")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000EF")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600058B")]
	[Address(RVA = "0xF082B8", Offset = "0xF082B8", VA = "0xF082B8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xF08470", Offset = "0xF08470", VA = "0xF08470")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000F0")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x600058D")]
	[Address(RVA = "0xF08474", Offset = "0xF08474", VA = "0xF08474", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xF0851C", Offset = "0xF0851C", VA = "0xF0851C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600058F")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xF085C0", Offset = "0xF085C0", VA = "0xF085C0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000F1")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BFA4", Offset = "0x62BFA4")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0xF08990", Offset = "0xF08990", VA = "0xF08990", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0xF08A00", Offset = "0xF08A00", VA = "0xF08A00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xF08668", Offset = "0xF08668", VA = "0xF08668")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xF08854", Offset = "0xF08854", VA = "0xF08854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xF08858", Offset = "0xF08858", VA = "0xF08858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xF08998", Offset = "0xF08998", VA = "0xF08998", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F614", Offset = "0x62F614")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F614", Offset = "0x62F614")]
	public float TransitionDuration;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F66C", Offset = "0x62F66C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F66C", Offset = "0x62F66C")]
	public float TeleportDelay;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F6C0", Offset = "0x62F6C0")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xF085C8", Offset = "0xF085C8", VA = "0xF085C8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xF085F4", Offset = "0xF085F4", VA = "0xF085F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x631FEC", Offset = "0x631FEC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xF08694", Offset = "0xF08694", VA = "0xF08694")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000F2")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000594")]
	[Address(RVA = "0xF08A08", Offset = "0xF08A08", VA = "0xF08A08", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xF08A38", Offset = "0xF08A38", VA = "0xF08A38")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000F3")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BFB4", Offset = "0x62BFB4")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0xF08D00", Offset = "0xF08D00", VA = "0xF08D00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xF08D70", Offset = "0xF08D70", VA = "0xF08D70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xF08AE0", Offset = "0xF08AE0", VA = "0xF08AE0")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xF08B54", Offset = "0xF08B54", VA = "0xF08B54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xF08B58", Offset = "0xF08B58", VA = "0xF08B58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xF08D08", Offset = "0xF08D08", VA = "0xF08D08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F6F8", Offset = "0x62F6F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F6F8", Offset = "0x62F6F8")]
	public float TransitionDuration;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xF08A40", Offset = "0xF08A40", VA = "0xF08A40", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xF08A6C", Offset = "0xF08A6C", VA = "0xF08A6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632050", Offset = "0x632050")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xF08B0C", Offset = "0xF08B0C", VA = "0xF08B0C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000F4")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20001DE")]
	public enum PlabackState
	{
		[Token(Token = "0x4000D59")]
		Idle = 1,
		[Token(Token = "0x4000D5A")]
		Preparing,
		[Token(Token = "0x4000D5B")]
		Buffering,
		[Token(Token = "0x4000D5C")]
		Ready,
		[Token(Token = "0x4000D5D")]
		Ended
	}

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000043")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000599")]
		[Address(RVA = "0xB00DEC", Offset = "0xB00DEC", VA = "0xB00DEC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000044")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0xB010C8", Offset = "0xB010C8", VA = "0xB010C8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000045")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600059B")]
		[Address(RVA = "0xAFDBD0", Offset = "0xAFDBD0", VA = "0xAFDBD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000046")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600059C")]
		[Address(RVA = "0xAFF0C4", Offset = "0xAFF0C4", VA = "0xAFF0C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000047")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600059D")]
		[Address(RVA = "0xB0132C", Offset = "0xB0132C", VA = "0xB0132C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000048")]
	public static long Duration
	{
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xAFF2A8", Offset = "0xAFF2A8", VA = "0xAFF2A8")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000049")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600059F")]
		[Address(RVA = "0xAFF1B4", Offset = "0xAFF1B4", VA = "0xAFF1B4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xAFE758", Offset = "0xAFE758", VA = "0xAFE758")]
		set
		{
		}
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xAFF948", Offset = "0xAFF948", VA = "0xAFF948")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xAFF674", Offset = "0xAFF674", VA = "0xAFF674")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xAFE3C8", Offset = "0xAFE3C8", VA = "0xAFE3C8")]
	public static void Play()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xAFE55C", Offset = "0xAFE55C", VA = "0xAFE55C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xAFF484", Offset = "0xAFF484", VA = "0xAFF484")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xAFFB90", Offset = "0xAFFB90", VA = "0xAFFB90")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xAFEEB8", Offset = "0xAFEEB8", VA = "0xAFEEB8")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000F5")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xB2FAD0", Offset = "0xB2FAD0", VA = "0xB2FAD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6320B4", Offset = "0x6320B4")]
		add
		{
		}
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xB2FBBC", Offset = "0xB2FBBC", VA = "0xB2FBBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6320C4", Offset = "0x6320C4")]
		remove
		{
		}
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xB2FCA8", Offset = "0xB2FCA8", VA = "0xB2FCA8", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xB2FCBC", Offset = "0xB2FCBC", VA = "0xB2FCBC")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000F6")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20001DF")]
	public enum ButtonType
	{
		[Token(Token = "0x4000D5F")]
		Play,
		[Token(Token = "0x4000D60")]
		Pause,
		[Token(Token = "0x4000D61")]
		FastForward,
		[Token(Token = "0x4000D62")]
		Rewind,
		[Token(Token = "0x4000D63")]
		SkipForward,
		[Token(Token = "0x4000D64")]
		SkipBack,
		[Token(Token = "0x4000D65")]
		Stop
	}

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700004A")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xAFBC5C", Offset = "0xAFBC5C", VA = "0xAFBC5C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xAFBC64", Offset = "0xAFBC64", VA = "0xAFBC64")]
		set
		{
		}
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xAFBC88", Offset = "0xAFBC88", VA = "0xAFBC88", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xAFD564", Offset = "0xAFD564", VA = "0xAFD564")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000F7")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20001E0")]
	public enum VideoShape
	{
		[Token(Token = "0x4000D67")]
		_360,
		[Token(Token = "0x4000D68")]
		_180,
		[Token(Token = "0x4000D69")]
		Quad
	}

	[Token(Token = "0x20001E1")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000D6B")]
		Mono,
		[Token(Token = "0x4000D6C")]
		TopBottom,
		[Token(Token = "0x4000D6D")]
		LeftRight,
		[Token(Token = "0x4000D6E")]
		BottomTop
	}

	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BFC4", Offset = "0x62BFC4")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0xAFFE80", Offset = "0xAFFE80", VA = "0xAFFE80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0xAFFEF0", Offset = "0xAFFEF0", VA = "0xAFFEF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xAFE008", Offset = "0xAFE008", VA = "0xAFE008")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xAFFCE4", Offset = "0xAFFCE4", VA = "0xAFFCE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xAFFCE8", Offset = "0xAFFCE8", VA = "0xAFFCE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xAFFE88", Offset = "0xAFFE88", VA = "0xAFFE88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BFD4", Offset = "0x62BFD4")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xAFE31C", Offset = "0xAFE31C", VA = "0xAFE31C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xAFF860", Offset = "0xAFF860", VA = "0xAFF860")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F780", Offset = "0x62F780")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F790", Offset = "0x62F790")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62F7A0", Offset = "0x62F7A0")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700004B")]
	public bool IsPlaying
	{
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xAFD938", Offset = "0xAFD938", VA = "0xAFD938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6320D4", Offset = "0x6320D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xAFD940", Offset = "0xAFD940", VA = "0xAFD940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6320E4", Offset = "0x6320E4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public long Duration
	{
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xAFD94C", Offset = "0xAFD94C", VA = "0xAFD94C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6320F4", Offset = "0x6320F4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xAFD954", Offset = "0xAFD954", VA = "0xAFD954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632104", Offset = "0x632104")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xAFD95C", Offset = "0xAFD95C", VA = "0xAFD95C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632114", Offset = "0x632114")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xAFD964", Offset = "0xAFD964", VA = "0xAFD964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632124", Offset = "0x632124")]
		private set
		{
		}
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xAFD96C", Offset = "0xAFD96C", VA = "0xAFD96C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xAFDC38", Offset = "0xAFDC38", VA = "0xAFDC38")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xAFDCA4", Offset = "0xAFDCA4", VA = "0xAFDCA4")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xAFDF94", Offset = "0xAFDF94", VA = "0xAFDF94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632134", Offset = "0x632134")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xAFE034", Offset = "0xAFE034", VA = "0xAFE034")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xAFE324", Offset = "0xAFE324", VA = "0xAFE324")]
	public void Play()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xAFE4BC", Offset = "0xAFE4BC", VA = "0xAFE4BC")]
	public void Pause()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xAFE650", Offset = "0xAFE650", VA = "0xAFE650")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xAFE8A8", Offset = "0xAFE8A8", VA = "0xAFE8A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xAFF39C", Offset = "0xAFF39C", VA = "0xAFF39C")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xAFF5D4", Offset = "0xAFF5D4", VA = "0xAFF5D4")]
	public void Stop()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xAFF768", Offset = "0xAFF768", VA = "0xAFF768")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xAFF850", Offset = "0xAFF850", VA = "0xAFF850")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000F8")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20001E4")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000D76")]
		Playing,
		[Token(Token = "0x4000D77")]
		Paused,
		[Token(Token = "0x4000D78")]
		Rewinding,
		[Token(Token = "0x4000D79")]
		FastForwarding
	}

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xAFFEF8", Offset = "0xAFFEF8", VA = "0xAFFEF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xB00274", Offset = "0xB00274", VA = "0xB00274")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xB004D8", Offset = "0xB004D8", VA = "0xB004D8")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xB0069C", Offset = "0xB0069C", VA = "0xB0069C")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xB007EC", Offset = "0xB007EC", VA = "0xB007EC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xB0062C", Offset = "0xB0062C", VA = "0xB0062C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xB008D0", Offset = "0xB008D0", VA = "0xB008D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xB00140", Offset = "0xB00140", VA = "0xB00140")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xB00CC4", Offset = "0xB00CC4", VA = "0xB00CC4")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000F9")]
public static class VectorUtil
{
	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xF11400", Offset = "0xF11400", VA = "0xF11400")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000FA")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xB43758", Offset = "0xB43758", VA = "0xB43758")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xB43BF4", Offset = "0xB43BF4", VA = "0xB43BF4")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xB43CBC", Offset = "0xB43CBC", VA = "0xB43CBC")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xB43F78", Offset = "0xB43F78", VA = "0xB43F78")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xB44068", Offset = "0xB44068", VA = "0xB44068")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xB4415C", Offset = "0xB4415C", VA = "0xB4415C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xB441C8", Offset = "0xB441C8", VA = "0xB441C8")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xB441D0", Offset = "0xB441D0", VA = "0xB441D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6321A8", Offset = "0x6321A8")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xB4422C", Offset = "0xB4422C", VA = "0xB4422C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6321B8", Offset = "0x6321B8")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xB44288", Offset = "0xB44288", VA = "0xB44288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6321C8", Offset = "0x6321C8")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xB442E4", Offset = "0xB442E4", VA = "0xB442E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6321D8", Offset = "0x6321D8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000FB")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BFE4", Offset = "0x62BFE4")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xAEA5B0", Offset = "0xAEA5B0", VA = "0xAEA5B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xAEA620", Offset = "0xAEA620", VA = "0xAEA620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xAEA43C", Offset = "0xAEA43C", VA = "0xAEA43C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xAEA470", Offset = "0xAEA470", VA = "0xAEA470", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xAEA474", Offset = "0xAEA474", VA = "0xAEA474", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xAEA5B8", Offset = "0xAEA5B8", VA = "0xAEA5B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xAEA0A4", Offset = "0xAEA0A4", VA = "0xAEA0A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xAEA1A8", Offset = "0xAEA1A8", VA = "0xAEA1A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xAEA134", Offset = "0xAEA134", VA = "0xAEA134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6321E8", Offset = "0x6321E8")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xAEA468", Offset = "0xAEA468", VA = "0xAEA468")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000FC")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F7C0", Offset = "0x62F7C0")]
	public int SubdivisionsU;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F7DC", Offset = "0x62F7DC")]
	public int SubdivisionsV;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xB30DC8", Offset = "0xB30DC8", VA = "0xB30DC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xB31D28", Offset = "0xB31D28", VA = "0xB31D28")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000FD")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700004E")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xAF3308", Offset = "0xAF3308", VA = "0xAF3308")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xAF3368", Offset = "0xAF3368", VA = "0xAF3368")]
	public void Start()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xAF3728", Offset = "0xAF3728", VA = "0xAF3728")]
	public void Update()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xAF3824", Offset = "0xAF3824", VA = "0xAF3824")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x63224C", Offset = "0x63224C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60005E3")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60005E5")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60005E6")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60005E7")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60005E8")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60005E9")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60005EA")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xAF388C", Offset = "0xAF388C", VA = "0xAF388C")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xAF38F0", Offset = "0xAF38F0", VA = "0xAF38F0")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xAF39A0", Offset = "0xAF39A0", VA = "0xAF39A0")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xAF3BC0", Offset = "0xAF3BC0", VA = "0xAF3BC0")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xAF3CB0", Offset = "0xAF3CB0", VA = "0xAF3CB0")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xAF35D4", Offset = "0xAF35D4", VA = "0xAF35D4")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xAF3D98", Offset = "0xAF3D98", VA = "0xAF3D98")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xAF3E28", Offset = "0xAF3E28", VA = "0xAF3E28")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xAF3F58", Offset = "0xAF3F58", VA = "0xAF3F58")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000FE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B92C", Offset = "0x62B92C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20001E6")]
	public enum DrawMode
	{
		[Token(Token = "0x4000D7E")]
		Opaque,
		[Token(Token = "0x4000D7F")]
		OpaqueWithClip,
		[Token(Token = "0x4000D80")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000D81")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700004F")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x11E8578", Offset = "0x11E8578", VA = "0x11E8578")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x11E8614", Offset = "0x11E8614", VA = "0x11E8614")]
		set
		{
		}
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x11E6964", Offset = "0x11E6964", VA = "0x11E6964")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x11E79EC", Offset = "0x11E79EC", VA = "0x11E79EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x11E7A70", Offset = "0x11E7A70", VA = "0x11E7A70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x11E7B84", Offset = "0x11E7B84", VA = "0x11E7B84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x11E7C98", Offset = "0x11E7C98", VA = "0x11E7C98", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x11E7EC8", Offset = "0x11E7EC8", VA = "0x11E7EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x11E872C", Offset = "0x11E872C", VA = "0x11E872C")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000FF")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62BFF4", Offset = "0x62BFF4")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xC996F0", Offset = "0xC996F0", VA = "0xC996F0")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xC99808", Offset = "0xC99808", VA = "0xC99808")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xC994EC", Offset = "0xC994EC", VA = "0xC994EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xC996F8", Offset = "0xC996F8", VA = "0xC996F8")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xC99800", Offset = "0xC99800", VA = "0xC99800")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000100")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62B990", Offset = "0x62B990")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20001E8")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000D85")]
		MouseXAndY,
		[Token(Token = "0x4000D86")]
		MouseX,
		[Token(Token = "0x4000D87")]
		MouseY
	}

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xAFD5CC", Offset = "0xAFD5CC", VA = "0xAFD5CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xAFD850", Offset = "0xAFD850", VA = "0xAFD850")]
	private void Start()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xAFD918", Offset = "0xAFD918", VA = "0xAFD918")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000101")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000102")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x11D6110", Offset = "0x11D6110", VA = "0x11D6110")]
	private void Start()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x11D6114", Offset = "0x11D6114", VA = "0x11D6114")]
	private void Update()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x11D6118", Offset = "0x11D6118", VA = "0x11D6118")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x11D62A4", Offset = "0x11D62A4", VA = "0x11D62A4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x11D616C", Offset = "0x11D616C", VA = "0x11D616C")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x11D6200", Offset = "0x11D6200", VA = "0x11D6200")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x11D62F8", Offset = "0x11D62F8", VA = "0x11D62F8")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x11D6398", Offset = "0x11D6398", VA = "0x11D6398")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x11D6524", Offset = "0x11D6524", VA = "0x11D6524")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x11D66B0", Offset = "0x11D66B0", VA = "0x11D66B0")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000103")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20001E9")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40008D3")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40008D9")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xD0207C", Offset = "0xD0207C", VA = "0xD0207C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xD01EAC", Offset = "0xD01EAC", VA = "0xD01EAC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x632284", Offset = "0x632284")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xD020B4", Offset = "0xD020B4", VA = "0xD020B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xD02204", Offset = "0xD02204", VA = "0xD02204")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xD02314", Offset = "0xD02314", VA = "0xD02314")]
	private void Update()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xD02F9C", Offset = "0xD02F9C", VA = "0xD02F9C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000615")]
	[Address(RVA = "0xD02154", Offset = "0xD02154", VA = "0xD02154")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000616")]
	[Address(RVA = "0xD02268", Offset = "0xD02268", VA = "0xD02268")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000617")]
	[Address(RVA = "0xD02C84", Offset = "0xD02C84", VA = "0xD02C84")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000618")]
	[Address(RVA = "0xD02D20", Offset = "0xD02D20", VA = "0xD02D20")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000619")]
	[Address(RVA = "0xD02DC0", Offset = "0xD02DC0", VA = "0xD02DC0")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x600061A")]
	[Address(RVA = "0xD02E60", Offset = "0xD02E60", VA = "0xD02E60")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x600061B")]
	[Address(RVA = "0xD02EFC", Offset = "0xD02EFC", VA = "0xD02EFC")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x600061C")]
	[Address(RVA = "0xD04304", Offset = "0xD04304", VA = "0xD04304")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x600061D")]
	[Address(RVA = "0xD043C8", Offset = "0xD043C8", VA = "0xD043C8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xD0448C", Offset = "0xD0448C", VA = "0xD0448C")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000104")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20001EA")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000D89")]
		Uninitialized = -1,
		[Token(Token = "0x4000D8A")]
		NotEnabled,
		[Token(Token = "0x4000D8B")]
		Success,
		[Token(Token = "0x4000D8C")]
		StreamError,
		[Token(Token = "0x4000D8D")]
		ProcessError,
		[Token(Token = "0x4000D8E")]
		MaxStatValue
	}

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000050")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000620")]
		[Address(RVA = "0xB01C10", Offset = "0xB01C10", VA = "0xB01C10")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000621")]
		[Address(RVA = "0xB01C18", Offset = "0xB01C18", VA = "0xB01C18")]
		set
		{
		}
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xB01C24", Offset = "0xB01C24", VA = "0xB01C24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xB01E90", Offset = "0xB01E90", VA = "0xB01E90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xB0210C", Offset = "0xB0210C", VA = "0xB0210C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000105")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20001EB")]
	private enum Parameters
	{
		[Token(Token = "0x4000D90")]
		P_GAIN,
		[Token(Token = "0x4000D91")]
		P_USEINVSQR,
		[Token(Token = "0x4000D92")]
		P_NEAR,
		[Token(Token = "0x4000D93")]
		P_FAR,
		[Token(Token = "0x4000D94")]
		P_RADIUS,
		[Token(Token = "0x4000D95")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000D96")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000D97")]
		P_AMBISTAT,
		[Token(Token = "0x4000D98")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000D99")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000D9A")]
		P_SENDLEVEL,
		[Token(Token = "0x4000D9B")]
		P_NUM
	}

	[Token(Token = "0x40008E0")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000051")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000628")]
		[Address(RVA = "0xB023A0", Offset = "0xB023A0", VA = "0xB023A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000629")]
		[Address(RVA = "0xB023A8", Offset = "0xB023A8", VA = "0xB023A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public float Gain
	{
		[Token(Token = "0x600062A")]
		[Address(RVA = "0xB023B4", Offset = "0xB023B4", VA = "0xB023B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600062B")]
		[Address(RVA = "0xB023BC", Offset = "0xB023BC", VA = "0xB023BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0xB02440", Offset = "0xB02440", VA = "0xB02440")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600062D")]
		[Address(RVA = "0xB02448", Offset = "0xB02448", VA = "0xB02448")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float Near
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0xB02454", Offset = "0xB02454", VA = "0xB02454")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600062F")]
		[Address(RVA = "0xB0245C", Offset = "0xB0245C", VA = "0xB0245C")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float Far
	{
		[Token(Token = "0x6000630")]
		[Address(RVA = "0xB024E4", Offset = "0xB024E4", VA = "0xB024E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000631")]
		[Address(RVA = "0xB024EC", Offset = "0xB024EC", VA = "0xB024EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000632")]
		[Address(RVA = "0xB02574", Offset = "0xB02574", VA = "0xB02574")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000633")]
		[Address(RVA = "0xB0257C", Offset = "0xB0257C", VA = "0xB0257C")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public float ReverbSend
	{
		[Token(Token = "0x6000634")]
		[Address(RVA = "0xB02604", Offset = "0xB02604", VA = "0xB02604")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000635")]
		[Address(RVA = "0xB0260C", Offset = "0xB0260C", VA = "0xB0260C")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000636")]
		[Address(RVA = "0xB02694", Offset = "0xB02694", VA = "0xB02694")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000637")]
		[Address(RVA = "0xB0269C", Offset = "0xB0269C", VA = "0xB0269C")]
		set
		{
		}
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xB02190", Offset = "0xB02190", VA = "0xB02190")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6322E8", Offset = "0x6322E8")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000627")]
	[Address(RVA = "0xB022A4", Offset = "0xB022A4", VA = "0xB022A4")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xB026A8", Offset = "0xB026A8", VA = "0xB026A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xB028A8", Offset = "0xB028A8", VA = "0xB028A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xB028AC", Offset = "0xB028AC", VA = "0xB028AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xB02714", Offset = "0xB02714", VA = "0xB02714")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xB0298C", Offset = "0xB0298C", VA = "0xB0298C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xB02E60", Offset = "0xB02E60", VA = "0xB02E60")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600063E")]
	[Address(RVA = "0xB02208", Offset = "0xB02208", VA = "0xB02208")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xB02F30", Offset = "0xB02F30", VA = "0xB02F30")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000106")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x40008EB")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x40008ED")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xB02F50", Offset = "0xB02F50", VA = "0xB02F50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xB02F5C", Offset = "0xB02F5C", VA = "0xB02F5C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000643")]
	[Address(RVA = "0xB03030", Offset = "0xB03030", VA = "0xB03030")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000644")]
	[Address(RVA = "0xB02F94", Offset = "0xB02F94", VA = "0xB02F94")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xB030CC", Offset = "0xB030CC", VA = "0xB030CC")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000107")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20001EC")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20001ED")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x40008F4")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000059")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000646")]
		[Address(RVA = "0xB06054", Offset = "0xB06054", VA = "0xB06054")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public string filePath
	{
		[Token(Token = "0x6000647")]
		[Address(RVA = "0xB060E0", Offset = "0xB060E0", VA = "0xB060E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xB06158", Offset = "0xB06158", VA = "0xB06158")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xB062D0", Offset = "0xB062D0", VA = "0xB062D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xB062D4", Offset = "0xB062D4", VA = "0xB062D4")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xB06884", Offset = "0xB06884", VA = "0xB06884")]
	private void Update()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xB06D5C", Offset = "0xB06D5C", VA = "0xB06D5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xB06EC0", Offset = "0xB06EC0", VA = "0xB06EC0")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xB07720", Offset = "0xB07720", VA = "0xB07720")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xB0776C", Offset = "0xB0776C", VA = "0xB0776C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xB09234", Offset = "0xB09234", VA = "0xB09234")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xB090E8", Offset = "0xB090E8", VA = "0xB090E8")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xB06698", Offset = "0xB06698", VA = "0xB06698")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xB064B8", Offset = "0xB064B8", VA = "0xB064B8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xB0989C", Offset = "0xB0989C", VA = "0xB0989C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xB09D10", Offset = "0xB09D10", VA = "0xB09D10")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000108")]
internal class ONSPPropagation
{
	[Token(Token = "0x20001EE")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000DA2")]
		Int8,
		[Token(Token = "0x4000DA3")]
		UInt8,
		[Token(Token = "0x4000DA4")]
		Int16,
		[Token(Token = "0x4000DA5")]
		UInt16,
		[Token(Token = "0x4000DA6")]
		Int32,
		[Token(Token = "0x4000DA7")]
		UInt32,
		[Token(Token = "0x4000DA8")]
		Int64,
		[Token(Token = "0x4000DA9")]
		UInt64,
		[Token(Token = "0x4000DAA")]
		Float16,
		[Token(Token = "0x4000DAB")]
		Float32,
		[Token(Token = "0x4000DAC")]
		Float64
	}

	[Token(Token = "0x20001EF")]
	public class ClientType
	{
		[Token(Token = "0x4000DAD")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000DAE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000DAF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000DB0")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000DB1")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000DB2")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000DB3")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000DB4")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000DB5")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000DB6")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000DB7")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000DB8")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000DB9")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000DBA")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000DBB")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xB035C0", Offset = "0xB035C0", VA = "0xB035C0")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20001F0")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000B0D")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000B0E")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000B0F")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000B10")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000B11")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000B12")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000B13")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000B14")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B15")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B16")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B17")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000B18")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000B19")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000B1A")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000B1B")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20001F1")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000DBC")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700010D")]
		private IntPtr context
		{
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xB043C0", Offset = "0xB043C0", VA = "0xB043C0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xB04424", Offset = "0xB04424", VA = "0xB04424")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xB044D0", Offset = "0xB044D0", VA = "0xB044D0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xB0457C", Offset = "0xB0457C", VA = "0xB0457C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xB045A0", Offset = "0xB045A0", VA = "0xB045A0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xB0464C", Offset = "0xB0464C", VA = "0xB0464C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xB04670", Offset = "0xB04670", VA = "0xB04670")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xB04718", Offset = "0xB04718", VA = "0xB04718", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xB0473C", Offset = "0xB0473C", VA = "0xB0473C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xB047D8", Offset = "0xB047D8", VA = "0xB047D8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xB047E0", Offset = "0xB047E0", VA = "0xB047E0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xB04908", Offset = "0xB04908", VA = "0xB04908", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xB04A00", Offset = "0xB04A00", VA = "0xB04A00")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xB04AB4", Offset = "0xB04AB4", VA = "0xB04AB4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xB04AC0", Offset = "0xB04AC0", VA = "0xB04AC0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xB04C08", Offset = "0xB04C08", VA = "0xB04C08", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xB04C14", Offset = "0xB04C14", VA = "0xB04C14")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xB04CDC", Offset = "0xB04CDC", VA = "0xB04CDC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xB04CE8", Offset = "0xB04CE8", VA = "0xB04CE8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xB04DB0", Offset = "0xB04DB0", VA = "0xB04DB0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xB04DBC", Offset = "0xB04DBC", VA = "0xB04DBC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xB04E84", Offset = "0xB04E84", VA = "0xB04E84", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xB04E90", Offset = "0xB04E90", VA = "0xB04E90")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xB04F38", Offset = "0xB04F38", VA = "0xB04F38", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xB04F5C", Offset = "0xB04F5C", VA = "0xB04F5C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xB04FF8", Offset = "0xB04FF8", VA = "0xB04FF8", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xB05000", Offset = "0xB05000", VA = "0xB05000")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xB050C4", Offset = "0xB050C4", VA = "0xB050C4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xB050D0", Offset = "0xB050D0", VA = "0xB050D0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xB05194", Offset = "0xB05194", VA = "0xB05194", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xB051A4", Offset = "0xB051A4", VA = "0xB051A4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xB05250", Offset = "0xB05250", VA = "0xB05250", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xB0356C", Offset = "0xB0356C", VA = "0xB0356C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20001F2")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000DBE")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700010E")]
		private IntPtr context
		{
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0xB0525C", Offset = "0xB0525C", VA = "0xB0525C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xB0337C", Offset = "0xB0337C", VA = "0xB0337C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xB052C0", Offset = "0xB052C0", VA = "0xB052C0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xB0536C", Offset = "0xB0536C", VA = "0xB0536C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xB05390", Offset = "0xB05390", VA = "0xB05390")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xB0543C", Offset = "0xB0543C", VA = "0xB0543C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xB05460", Offset = "0xB05460", VA = "0xB05460")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xB0550C", Offset = "0xB0550C", VA = "0xB0550C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xB05530", Offset = "0xB05530", VA = "0xB05530")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xB055CC", Offset = "0xB055CC", VA = "0xB055CC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xB055D4", Offset = "0xB055D4", VA = "0xB055D4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xB056FC", Offset = "0xB056FC", VA = "0xB056FC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xB057F4", Offset = "0xB057F4", VA = "0xB057F4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xB058A8", Offset = "0xB058A8", VA = "0xB058A8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xB058B4", Offset = "0xB058B4", VA = "0xB058B4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xB059FC", Offset = "0xB059FC", VA = "0xB059FC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xB05A08", Offset = "0xB05A08", VA = "0xB05A08")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xB05AD0", Offset = "0xB05AD0", VA = "0xB05AD0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xB05ADC", Offset = "0xB05ADC", VA = "0xB05ADC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xB05BA4", Offset = "0xB05BA4", VA = "0xB05BA4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xB05BB0", Offset = "0xB05BB0", VA = "0xB05BB0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xB05C78", Offset = "0xB05C78", VA = "0xB05C78", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xB05C84", Offset = "0xB05C84", VA = "0xB05C84")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xB05D30", Offset = "0xB05D30", VA = "0xB05D30", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xB05D54", Offset = "0xB05D54", VA = "0xB05D54")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xB05DF0", Offset = "0xB05DF0", VA = "0xB05DF0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xB05DF8", Offset = "0xB05DF8", VA = "0xB05DF8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xB05EBC", Offset = "0xB05EBC", VA = "0xB05EBC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xB05EC8", Offset = "0xB05EC8", VA = "0xB05EC8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xB05F8C", Offset = "0xB05F8C", VA = "0xB05F8C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xB05F9C", Offset = "0xB05F9C", VA = "0xB05F9C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xB06048", Offset = "0xB06048", VA = "0xB06048", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xB03428", Offset = "0xB03428", VA = "0xB03428")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20001F3")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000DC0")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700010F")]
		private IntPtr context
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xB035C8", Offset = "0xB035C8", VA = "0xB035C8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xB03474", Offset = "0xB03474", VA = "0xB03474")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xB0362C", Offset = "0xB0362C", VA = "0xB0362C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xB036D8", Offset = "0xB036D8", VA = "0xB036D8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xB036FC", Offset = "0xB036FC", VA = "0xB036FC")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xB037A8", Offset = "0xB037A8", VA = "0xB037A8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xB037CC", Offset = "0xB037CC", VA = "0xB037CC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xB03878", Offset = "0xB03878", VA = "0xB03878", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xB0389C", Offset = "0xB0389C", VA = "0xB0389C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xB03938", Offset = "0xB03938", VA = "0xB03938", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xB03940", Offset = "0xB03940", VA = "0xB03940")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xB03A68", Offset = "0xB03A68", VA = "0xB03A68", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xB03B60", Offset = "0xB03B60", VA = "0xB03B60")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xB03C14", Offset = "0xB03C14", VA = "0xB03C14", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xB03C20", Offset = "0xB03C20", VA = "0xB03C20")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xB03D68", Offset = "0xB03D68", VA = "0xB03D68", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xB03D74", Offset = "0xB03D74", VA = "0xB03D74")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xB03E3C", Offset = "0xB03E3C", VA = "0xB03E3C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xB03E48", Offset = "0xB03E48", VA = "0xB03E48")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xB03F10", Offset = "0xB03F10", VA = "0xB03F10", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xB03F1C", Offset = "0xB03F1C", VA = "0xB03F1C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xB03FE4", Offset = "0xB03FE4", VA = "0xB03FE4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xB03FF0", Offset = "0xB03FF0", VA = "0xB03FF0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xB0409C", Offset = "0xB0409C", VA = "0xB0409C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xB040C0", Offset = "0xB040C0", VA = "0xB040C0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xB0415C", Offset = "0xB0415C", VA = "0xB0415C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xB04164", Offset = "0xB04164", VA = "0xB04164")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xB04228", Offset = "0xB04228", VA = "0xB04228", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xB04234", Offset = "0xB04234", VA = "0xB04234")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xB042F8", Offset = "0xB042F8", VA = "0xB042F8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xB04308", Offset = "0xB04308", VA = "0xB04308")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xB043B4", Offset = "0xB043B4", VA = "0xB043B4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xB03520", Offset = "0xB03520", VA = "0xB03520")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700005B")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000657")]
		[Address(RVA = "0xB030DC", Offset = "0xB030DC", VA = "0xB030DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xB0314C", Offset = "0xB0314C", VA = "0xB0314C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xB035B8", Offset = "0xB035B8", VA = "0xB035B8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000109")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20001F4")]
	public enum Preset
	{
		[Token(Token = "0x4000DC3")]
		Custom,
		[Token(Token = "0x4000DC4")]
		AcousticTile,
		[Token(Token = "0x4000DC5")]
		Brick,
		[Token(Token = "0x4000DC6")]
		BrickPainted,
		[Token(Token = "0x4000DC7")]
		Carpet,
		[Token(Token = "0x4000DC8")]
		CarpetHeavy,
		[Token(Token = "0x4000DC9")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000DCA")]
		CeramicTile,
		[Token(Token = "0x4000DCB")]
		Concrete,
		[Token(Token = "0x4000DCC")]
		ConcreteRough,
		[Token(Token = "0x4000DCD")]
		ConcreteBlock,
		[Token(Token = "0x4000DCE")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000DCF")]
		Curtain,
		[Token(Token = "0x4000DD0")]
		Foliage,
		[Token(Token = "0x4000DD1")]
		Glass,
		[Token(Token = "0x4000DD2")]
		GlassHeavy,
		[Token(Token = "0x4000DD3")]
		Grass,
		[Token(Token = "0x4000DD4")]
		Gravel,
		[Token(Token = "0x4000DD5")]
		GypsumBoard,
		[Token(Token = "0x4000DD6")]
		PlasterOnBrick,
		[Token(Token = "0x4000DD7")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000DD8")]
		Soil,
		[Token(Token = "0x4000DD9")]
		SoundProof,
		[Token(Token = "0x4000DDA")]
		Snow,
		[Token(Token = "0x4000DDB")]
		Steel,
		[Token(Token = "0x4000DDC")]
		Water,
		[Token(Token = "0x4000DDD")]
		WoodThin,
		[Token(Token = "0x4000DDE")]
		WoodThick,
		[Token(Token = "0x4000DDF")]
		WoodFloor,
		[Token(Token = "0x4000DE0")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20001F5")]
	public sealed class Point
	{
		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x11D5924", Offset = "0x11D5924", VA = "0x11D5924")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x11D5A6C", Offset = "0x11D5A6C", VA = "0x11D5A6C")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x11D5ADC", Offset = "0x11D5ADC", VA = "0x11D5ADC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x62C004", Offset = "0x62C004")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x2000236")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C2FC", Offset = "0x62C2FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x11D5FCC", Offset = "0x11D5FCC", VA = "0x11D5FCC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x11D5FD4", Offset = "0x11D5FD4", VA = "0x11D5FD4")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x11D6000", Offset = "0x11D6000", VA = "0x11D6000")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000110")]
		public float Item
		{
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0x11D5B44", Offset = "0x11D5B44", VA = "0x11D5B44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x11D59F4", Offset = "0x11D59F4", VA = "0x11D59F4")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F8F8", Offset = "0x62F8F8")]
	public Spectrum absorption;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F930", Offset = "0x62F930")]
	public Spectrum transmission;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x62F968", Offset = "0x62F968")]
	public Spectrum scattering;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700005C")]
	public Preset preset
	{
		[Token(Token = "0x600065A")]
		[Address(RVA = "0x11CB59C", Offset = "0x11CB59C", VA = "0x11CB59C")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x600065B")]
		[Address(RVA = "0x11CB5A4", Offset = "0x11CB5A4", VA = "0x11CB5A4")]
		set
		{
		}
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x11CB760", Offset = "0x11CB760", VA = "0x11CB760")]
	private void Start()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x11CB764", Offset = "0x11CB764", VA = "0x11CB764")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x11CBF98", Offset = "0x11CBF98", VA = "0x11CBF98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x11CBF9C", Offset = "0x11CBF9C", VA = "0x11CBF9C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x11CB8DC", Offset = "0x11CB8DC", VA = "0x11CB8DC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x11CB5CC", Offset = "0x11CB5CC", VA = "0x11CB5CC")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x11CC084", Offset = "0x11CC084", VA = "0x11CC084")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x11CC618", Offset = "0x11CC618", VA = "0x11CC618")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x11CCBB4", Offset = "0x11CCBB4", VA = "0x11CCBB4")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x11CD150", Offset = "0x11CD150", VA = "0x11CD150")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x11CD6F0", Offset = "0x11CD6F0", VA = "0x11CD6F0")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x11CDC88", Offset = "0x11CDC88", VA = "0x11CDC88")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x11CE220", Offset = "0x11CE220", VA = "0x11CE220")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x11CE7C0", Offset = "0x11CE7C0", VA = "0x11CE7C0")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x11CED60", Offset = "0x11CED60", VA = "0x11CED60")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x11CF2FC", Offset = "0x11CF2FC", VA = "0x11CF2FC")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x11CF89C", Offset = "0x11CF89C", VA = "0x11CF89C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x11CFE3C", Offset = "0x11CFE3C", VA = "0x11CFE3C")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x11D03D4", Offset = "0x11D03D4", VA = "0x11D03D4")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x11D096C", Offset = "0x11D096C", VA = "0x11D096C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x11D0F04", Offset = "0x11D0F04", VA = "0x11D0F04")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x11D14A4", Offset = "0x11D14A4", VA = "0x11D14A4")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x11D18C0", Offset = "0x11D18C0", VA = "0x11D18C0")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x11D1CD4", Offset = "0x11D1CD4", VA = "0x11D1CD4")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x11D2274", Offset = "0x11D2274", VA = "0x11D2274")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x11D2810", Offset = "0x11D2810", VA = "0x11D2810")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x11D2DAC", Offset = "0x11D2DAC", VA = "0x11D2DAC")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x11D31C4", Offset = "0x11D31C4", VA = "0x11D31C4")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x11D3358", Offset = "0x11D3358", VA = "0x11D3358")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x11D376C", Offset = "0x11D376C", VA = "0x11D376C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x11D3D08", Offset = "0x11D3D08", VA = "0x11D3D08")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x11D42A8", Offset = "0x11D42A8", VA = "0x11D42A8")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x11D4844", Offset = "0x11D4844", VA = "0x11D4844")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x11D4DE4", Offset = "0x11D4DE4", VA = "0x11D4DE4")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x11D5384", Offset = "0x11D5384", VA = "0x11D5384")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x11D595C", Offset = "0x11D595C", VA = "0x11D595C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x200010A")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x11D602C", Offset = "0x11D602C", VA = "0x11D602C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x11D6100", Offset = "0x11D6100", VA = "0x11D6100")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200010B")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700005D")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x11D6738", Offset = "0x11D6738", VA = "0x11D6738")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x11D684C", Offset = "0x11D684C", VA = "0x11D684C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200010C")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40008FF")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000684")]
	[Address(RVA = "0x11D685C", Offset = "0x11D685C", VA = "0x11D685C")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x11D6910", Offset = "0x11D6910", VA = "0x11D6910")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x11D6A1C", Offset = "0x11D6A1C", VA = "0x11D6A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x11D6A20", Offset = "0x11D6A20", VA = "0x11D6A20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x11D6A24", Offset = "0x11D6A24", VA = "0x11D6A24")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200010D")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x62B9C8", Offset = "0x62B9C8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62B9C8", Offset = "0x62B9C8")]
public class FastMobileBloom : MonoBehaviour
{
	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F9C0", Offset = "0x62F9C0")]
	public float threshold;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F9D8", Offset = "0x62F9D8")]
	public float intensity;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62F9F0", Offset = "0x62F9F0")]
	public float blurSize;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62FA08", Offset = "0x62FA08")]
	public int blurIterations;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material fastBloomMaterial;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xB47A14", Offset = "0xB47A14", VA = "0xB47A14")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xB47F08", Offset = "0xB47F08", VA = "0xB47F08")]
	public FastMobileBloom()
	{
	}
}
[Token(Token = "0x200010E")]
public static class StringExtensions
{
	[Token(Token = "0x600068B")]
	[Address(RVA = "0xC99838", Offset = "0xC99838", VA = "0xC99838")]
	public static string Localize(this string key)
	{
		return null;
	}
}
namespace SmartLocalization
{
	[Token(Token = "0x200010F")]
	internal static class ApplicationExtensions
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0xC86D00", Offset = "0xC86D00", VA = "0xC86D00")]
		internal static string GetSystemLanguage()
		{
			return null;
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xC86D18", Offset = "0xC86D18", VA = "0xC86D18")]
		internal static string GetStringValueOfSystemLanguage(SystemLanguage systemLanguage)
		{
			return null;
		}
	}
	[Token(Token = "0x2000110")]
	internal interface ILocalizedAssetLoader
	{
		[Token(Token = "0x600068E")]
		T LoadAsset<T>(string assetKey, string languageCode) where T : UnityEngine.Object;
	}
	[Token(Token = "0x2000111")]
	internal class LanguageDataHandler
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SortedDictionary<string, LocalizedObject> loadedValuesDictionary;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool verboseLogging;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SmartCultureInfo loadedCultureInfo;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ILocalizedAssetLoader assetLoader;

		[Token(Token = "0x1700005E")]
		internal SmartCultureInfo LoadedCulture
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0xC884E8", Offset = "0xC884E8", VA = "0xC884E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000690")]
			[Address(RVA = "0xC884F0", Offset = "0xC884F0", VA = "0xC884F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		internal bool VerboseLogging
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xC884F8", Offset = "0xC884F8", VA = "0xC884F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000692")]
			[Address(RVA = "0xC88500", Offset = "0xC88500", VA = "0xC88500")]
			set
			{
			}
		}

		[Token(Token = "0x17000060")]
		internal SortedDictionary<string, LocalizedObject> LoadedValuesDictionary
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0xC8850C", Offset = "0xC8850C", VA = "0xC8850C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000694")]
			[Address(RVA = "0xC88514", Offset = "0xC88514", VA = "0xC88514")]
			set
			{
			}
		}

		[Token(Token = "0x17000061")]
		internal ILocalizedAssetLoader AssetLoader
		{
			[Token(Token = "0x6000695")]
			[Address(RVA = "0xC8851C", Offset = "0xC8851C", VA = "0xC8851C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000696")]
			[Address(RVA = "0xC88590", Offset = "0xC88590", VA = "0xC88590")]
			set
			{
			}
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xC88598", Offset = "0xC88598", VA = "0xC88598")]
		internal LanguageDataHandler()
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xC8860C", Offset = "0xC8860C", VA = "0xC8860C")]
		internal bool Load(string resxData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xC88754", Offset = "0xC88754", VA = "0xC88754")]
		internal bool Append(string resxData)
		{
			return default(bool);
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xC88A50", Offset = "0xC88A50", VA = "0xC88A50")]
		internal List<string> GetKeysWithinCategory(string category)
		{
			return null;
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xC88C60", Offset = "0xC88C60", VA = "0xC88C60")]
		internal List<string> GetAllKeys()
		{
			return null;
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xC88CF8", Offset = "0xC88CF8", VA = "0xC88CF8")]
		internal LocalizedObject GetLocalizedObject(string key)
		{
			return null;
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xC88D78", Offset = "0xC88D78", VA = "0xC88D78")]
		internal string GetTextValue(string key)
		{
			return null;
		}

		[Token(Token = "0x600069E")]
		internal T GetAsset<T>(string key) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xC88E48", Offset = "0xC88E48", VA = "0xC88E48")]
		internal bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xC886D0", Offset = "0xC886D0", VA = "0xC886D0")]
		private SortedDictionary<string, LocalizedObject> LoadLanguageDictionary(string resxData)
		{
			return null;
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xC89170", Offset = "0xC89170", VA = "0xC89170")]
		private string CheckLanguageOverrideCode(LocalizedObject localizedObject)
		{
			return null;
		}
	}
	[Token(Token = "0x2000112")]
	public delegate void ChangeLanguageEventHandler(LanguageManager thisLanguageManager);
	[Token(Token = "0x2000113")]
	public class LanguageManager : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x20001F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C03C", Offset = "0x62C03C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string systemLanguage;

			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xC8A0F0", Offset = "0xC8A0F0", VA = "0xC8A0F0")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xC8BEFC", Offset = "0xC8BEFC", VA = "0xC8BEFC")]
			internal bool <SelectLanguage>b__1(SmartCultureInfo i)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20001F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C04C", Offset = "0x62C04C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SmartCultureInfo> <>9__31_0;

			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Converter<SmartCultureInfo, string> <>9__55_0;

			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xC8BE44", Offset = "0xC8BE44", VA = "0xC8BE44")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xC8BE4C", Offset = "0xC8BE4C", VA = "0xC8BE4C")]
			internal bool <SelectLanguage>b__31_0(SmartCultureInfo info)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xC8BED0", Offset = "0xC8BED0", VA = "0xC8BED0")]
			internal string <GetAvailableLanguageCodes>b__55_0(SmartCultureInfo info)
			{
				return null;
			}
		}

		[Token(Token = "0x20001F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C05C", Offset = "0x62C05C")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string englishName;

			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0xC8A9E8", Offset = "0xC8A9E8", VA = "0xC8A9E8")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xC8BF34", Offset = "0xC8BF34", VA = "0xC8BF34")]
			internal bool <GetDeviceCultureIfSupported>b__0(SmartCultureInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C06C", Offset = "0x62C06C")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string languageCode;

			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0xC8AA08", Offset = "0xC8AA08", VA = "0xC8AA08")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xC8BFA8", Offset = "0xC8BFA8", VA = "0xC8BFA8")]
			internal bool <IsCultureSupported>b__0(SmartCultureInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C07C", Offset = "0x62C07C")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string englishName;

			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0xC8AB64", Offset = "0xC8AB64", VA = "0xC8AB64")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xC8BFE0", Offset = "0xC8BFE0", VA = "0xC8BFE0")]
			internal bool <IsLanguageSupportedEnglishName>b__0(SmartCultureInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C08C", Offset = "0x62C08C")]
		private sealed class <>c__DisplayClass49_0
		{
			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string languageCode;

			[Token(Token = "0x6000B90")]
			[Address(RVA = "0xC8AB6C", Offset = "0xC8AB6C", VA = "0xC8AB6C")]
			public <>c__DisplayClass49_0()
			{
			}

			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xC8C054", Offset = "0xC8C054", VA = "0xC8C054")]
			internal bool <GetCultureInfo>b__0(SmartCultureInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C09C", Offset = "0x62C09C")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string languageCode;

			[Token(Token = "0x6000B92")]
			[Address(RVA = "0xC8B180", Offset = "0xC8B180", VA = "0xC8B180")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6000B93")]
			[Address(RVA = "0xC8C08C", Offset = "0xC8C08C", VA = "0xC8C08C")]
			internal bool <GetTextValueInEditor>b__0(SmartCultureInfo info)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LanguageManager instance;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool IsQuitting;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool DidSetDontDestroyOnLoad;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool useSystemLanguage;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<string> serializedKeys;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private List<LocalizedObject> serializedValues;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private SmartCultureInfo serializedCulture;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ChangeLanguageEventHandler OnChangeLanguage;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string DefaultLanguage;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SmartCultureInfoCollection availableLanguages;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LanguageDataHandler languageDataHandler;

		[Token(Token = "0x17000062")]
		public static LanguageManager Instance
		{
			[Token(Token = "0x60006A6")]
			[Address(RVA = "0xC81640", Offset = "0xC81640", VA = "0xC81640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		public static bool HasInstance
		{
			[Token(Token = "0x60006A7")]
			[Address(RVA = "0xC8795C", Offset = "0xC8795C", VA = "0xC8795C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000064")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6339BC", Offset = "0x6339BC")]
		public SortedDictionary<string, LocalizedObject> LanguageDatabase
		{
			[Token(Token = "0x60006AA")]
			[Address(RVA = "0xC89694", Offset = "0xC89694", VA = "0xC89694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6339F4", Offset = "0x6339F4")]
		public Dictionary<string, string> RawTextDatabase
		{
			[Token(Token = "0x60006AB")]
			[Address(RVA = "0xC896C0", Offset = "0xC896C0", VA = "0xC896C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000066")]
		public int NumberOfSupportedLanguages
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0xC898B8", Offset = "0xC898B8", VA = "0xC898B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000067")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x633A2C", Offset = "0x633A2C")]
		public string LoadedLanguage
		{
			[Token(Token = "0x60006AD")]
			[Address(RVA = "0xC89930", Offset = "0xC89930", VA = "0xC89930")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000068")]
		public SmartCultureInfo CurrentlyLoadedCulture
		{
			[Token(Token = "0x60006AE")]
			[Address(RVA = "0xC89668", Offset = "0xC89668", VA = "0xC89668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		public bool VerboseLogging
		{
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0xC8996C", Offset = "0xC8996C", VA = "0xC8996C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006B0")]
			[Address(RVA = "0xC89998", Offset = "0xC89998", VA = "0xC89998")]
			set
			{
			}
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xC891F0", Offset = "0xC891F0", VA = "0xC891F0", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xC893BC", Offset = "0xC893BC", VA = "0xC893BC", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xC899CC", Offset = "0xC899CC", VA = "0xC899CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xC89E68", Offset = "0xC89E68", VA = "0xC89E68")]
		private SmartCultureInfo SelectLanguage()
		{
			return null;
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xC8A180", Offset = "0xC8A180", VA = "0xC8A180")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xC8A188", Offset = "0xC8A188", VA = "0xC8A188")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xC89D3C", Offset = "0xC89D3C", VA = "0xC89D3C")]
		private bool LoadAvailableCultures()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xC8A260", Offset = "0xC8A260", VA = "0xC8A260")]
		public List<string> GetAllKeys()
		{
			return null;
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xC8A0BC", Offset = "0xC8A0BC", VA = "0xC8A0BC")]
		public void ChangeLanguage(SmartCultureInfo cultureInfo)
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xC8A28C", Offset = "0xC8A28C", VA = "0xC8A28C")]
		public void ChangeLanguage(string languageCode)
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xC8A5D4", Offset = "0xC8A5D4", VA = "0xC8A5D4")]
		public void ChangeLanguageWithData(string languageDataInResX, string languageCode)
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xC8A610", Offset = "0xC8A610", VA = "0xC8A610")]
		public bool AppendLanguageWithTextData(string languageDataInResX)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xC8A498", Offset = "0xC8A498", VA = "0xC8A498")]
		private bool LoadLanguage(string languageData, string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xC8A724", Offset = "0xC8A724", VA = "0xC8A724")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63230C", Offset = "0x63230C")]
		public bool IsLanguageSupported(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xC8A848", Offset = "0xC8A848", VA = "0xC8A848")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x632344", Offset = "0x632344")]
		public bool IsLanguageSupported(SmartCultureInfo cultureInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xC8A87C", Offset = "0xC8A87C", VA = "0xC8A87C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x63237C", Offset = "0x63237C")]
		public SmartCultureInfo GetSupportedSystemLanguage()
		{
			return null;
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xC8A980", Offset = "0xC8A980", VA = "0xC8A980")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6323B4", Offset = "0x6323B4")]
		public string GetSupportedSystemLanguageCode()
		{
			return null;
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xC8A880", Offset = "0xC8A880", VA = "0xC8A880")]
		public SmartCultureInfo GetDeviceCultureIfSupported()
		{
			return null;
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xC8A728", Offset = "0xC8A728", VA = "0xC8A728")]
		public bool IsCultureSupported(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xC8AA10", Offset = "0xC8AA10", VA = "0xC8AA10")]
		public bool IsCultureSupported(SmartCultureInfo cultureInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xC8AA44", Offset = "0xC8AA44", VA = "0xC8AA44")]
		public bool IsLanguageSupportedEnglishName(string englishName)
		{
			return default(bool);
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xC8A644", Offset = "0xC8A644", VA = "0xC8A644")]
		public SmartCultureInfo GetCultureInfo(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xC8A9F0", Offset = "0xC8A9F0", VA = "0xC8A9F0")]
		public string GetSystemLanguageEnglishName()
		{
			return null;
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xC8A0F8", Offset = "0xC8A0F8", VA = "0xC8A0F8")]
		public List<SmartCultureInfo> GetSupportedLanguages()
		{
			return null;
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xC8AB74", Offset = "0xC8AB74", VA = "0xC8AB74")]
		public List<string> GetKeysWithinCategory(string category)
		{
			return null;
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xC8182C", Offset = "0xC8182C", VA = "0xC8182C")]
		public string GetTextValue(string key)
		{
			return null;
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xC8ABA8", Offset = "0xC8ABA8", VA = "0xC8ABA8")]
		public static SmartCultureInfoCollection GetAvailableLanguageCultures()
		{
			return null;
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xC8ACCC", Offset = "0xC8ACCC", VA = "0xC8ACCC")]
		public static string[] GetAvailableLanguageCodes()
		{
			return null;
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xC8AE1C", Offset = "0xC8AE1C", VA = "0xC8AE1C")]
		public static string GetTextValueInEditor(string key, string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xC8B188", Offset = "0xC8B188", VA = "0xC8B188")]
		public string GetTextValue(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xC8B384", Offset = "0xC8B384", VA = "0xC8B384")]
		public TextAsset GetTextAsset(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xC8B4A0", Offset = "0xC8B4A0", VA = "0xC8B4A0")]
		public AudioClip GetAudioClip(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xC8B5BC", Offset = "0xC8B5BC", VA = "0xC8B5BC")]
		public GameObject GetPrefab(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xC8B6D8", Offset = "0xC8B6D8", VA = "0xC8B6D8")]
		public Texture GetTexture(string key, int count)
		{
			return null;
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xC8B7F4", Offset = "0xC8B7F4", VA = "0xC8B7F4")]
		public string GetTextValue(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xC8B934", Offset = "0xC8B934", VA = "0xC8B934")]
		public TextAsset GetTextAsset(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xC8B9C8", Offset = "0xC8B9C8", VA = "0xC8B9C8")]
		public Font GetFont(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xC8BA5C", Offset = "0xC8BA5C", VA = "0xC8BA5C")]
		public AudioClip GetAudioClip(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xC8BAF0", Offset = "0xC8BAF0", VA = "0xC8BAF0")]
		public GameObject GetPrefab(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xC8BB84", Offset = "0xC8BB84", VA = "0xC8BB84")]
		public Texture GetTexture(string key, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xC8B430", Offset = "0xC8B430", VA = "0xC8B430")]
		public TextAsset GetTextAsset(string key)
		{
			return null;
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xC879F4", Offset = "0xC879F4", VA = "0xC879F4")]
		public Font GetFont(string key)
		{
			return null;
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xC8B54C", Offset = "0xC8B54C", VA = "0xC8B54C")]
		public AudioClip GetAudioClip(string key)
		{
			return null;
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xC8B668", Offset = "0xC8B668", VA = "0xC8B668")]
		public GameObject GetPrefab(string key)
		{
			return null;
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xC8BC18", Offset = "0xC8BC18", VA = "0xC8BC18")]
		public Sprite GetSprite(string key)
		{
			return null;
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xC8B784", Offset = "0xC8B784", VA = "0xC8B784")]
		public Texture GetTexture(string key)
		{
			return null;
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xC87F98", Offset = "0xC87F98", VA = "0xC87F98")]
		public ScriptableObject GetScriptableObject(string key)
		{
			return null;
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xC8BC88", Offset = "0xC8BC88", VA = "0xC8BC88")]
		public bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xC8BCC8", Offset = "0xC8BCC8", VA = "0xC8BCC8")]
		private LocalizedObject GetLocalizedObject(string key)
		{
			return null;
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xC8BCFC", Offset = "0xC8BCFC", VA = "0xC8BCFC")]
		public LanguageManager()
		{
		}
	}
	[Token(Token = "0x2000114")]
	public static class LanguageParser
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string xmlHeader;

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xC88E64", Offset = "0xC88E64", VA = "0xC88E64")]
		public static SortedDictionary<string, LocalizedObject> LoadLanguage(string languageDataInResX)
		{
			return null;
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xC8C0C4", Offset = "0xC8C0C4", VA = "0xC8C0C4")]
		private static void ReadElements(XmlReader reader, SortedDictionary<string, LocalizedObject> loadedLanguageDictionary)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xC8C1A4", Offset = "0xC8C1A4", VA = "0xC8C1A4")]
		private static void ReadData(XmlReader reader, SortedDictionary<string, LocalizedObject> loadedLanguageDictionary)
		{
		}
	}
	[Token(Token = "0x2000115")]
	public static class LanguageRuntimeData
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string AvailableCulturesFileName;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string rootLanguageName;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string AudioFileFolderName;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string TexturesFolderName;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string PrefabsFolderName;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string TextAssetsFolderName;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string FontsFolderName;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string SOFolderName;

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xC8A418", Offset = "0xC8A418", VA = "0xC8A418")]
		public static string LanguageFilePath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xC8A1F4", Offset = "0xC8A1F4", VA = "0xC8A1F4")]
		public static string AvailableCulturesFilePath()
		{
			return null;
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xC8CAC0", Offset = "0xC8CAC0", VA = "0xC8CAC0")]
		public static string AudioFilesFolderPath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xC8CB40", Offset = "0xC8CB40", VA = "0xC8CB40")]
		public static string TexturesFolderPath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xC8CBC0", Offset = "0xC8CBC0", VA = "0xC8CBC0")]
		public static string TextAssetsFolderPath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xC8CC40", Offset = "0xC8CC40", VA = "0xC8CC40")]
		public static string FontsFolderPath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xC8CCC0", Offset = "0xC8CCC0", VA = "0xC8CCC0")]
		public static string PrefabsFolderPath(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xC8CD40", Offset = "0xC8CD40", VA = "0xC8CD40")]
		public static string SOFolderPath(string languageCode)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000116")]
	[AttributeAttribute(Name = "XmlRootAttribute", RVA = "0x62BA70", Offset = "0x62BA70")]
	public class SmartCultureInfoCollection
	{
		[Token(Token = "0x20001FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C0AC", Offset = "0x62C0AC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SmartCultureInfo cultureInfo;

			[Token(Token = "0x6000B94")]
			[Address(RVA = "0xC93884", Offset = "0xC93884", VA = "0xC93884")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000B95")]
			[Address(RVA = "0xC93A24", Offset = "0xC93A24", VA = "0xC93A24")]
			internal bool <FindCulture>b__0(SmartCultureInfo c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20001FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C0BC", Offset = "0x62C0BC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string languageCode;

			[Token(Token = "0x6000B96")]
			[Address(RVA = "0xC93990", Offset = "0xC93990", VA = "0xC93990")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000B97")]
			[Address(RVA = "0xC93B24", Offset = "0xC93B24", VA = "0xC93B24")]
			internal bool <FindCulture>b__0(SmartCultureInfo c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400091D")]
		public const int LatestVersion = 4;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0x62FAE8", Offset = "0x62FAE8")]
		public int version;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlArrayAttribute", RVA = "0x62FB2C", Offset = "0x62FB2C")]
		[AttributeAttribute(Name = "XmlArrayItemAttribute", RVA = "0x62FB2C", Offset = "0x62FB2C")]
		public List<SmartCultureInfo> cultureInfos;

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xC9337C", Offset = "0xC9337C", VA = "0xC9337C")]
		public void RemoveCultureInfo(SmartCultureInfo cultureInfo)
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xC93464", Offset = "0xC93464", VA = "0xC93464")]
		public void AddCultureInfo(SmartCultureInfo cultureInfo)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xC8A25C", Offset = "0xC8A25C", VA = "0xC8A25C")]
		public static SmartCultureInfoCollection Deserialize(TextAsset xmlFile)
		{
			return null;
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xC9378C", Offset = "0xC9378C", VA = "0xC9378C")]
		public SmartCultureInfo FindCulture(SmartCultureInfo cultureInfo)
		{
			return null;
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xC9388C", Offset = "0xC9388C", VA = "0xC9388C")]
		public SmartCultureInfo FindCulture(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xC93998", Offset = "0xC93998", VA = "0xC93998")]
		public bool IsCultureInCollection(SmartCultureInfo cultureInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xC939B4", Offset = "0xC939B4", VA = "0xC939B4")]
		public SmartCultureInfoCollection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000117")]
	public class SmartCultureInfo
	{
		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string languageCode;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string englishName;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string nativeName;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isRightToLeft;

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xC93164", Offset = "0xC93164", VA = "0xC93164")]
		public SmartCultureInfo()
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xC9316C", Offset = "0xC9316C", VA = "0xC9316C")]
		public SmartCultureInfo(string languageCode, string englishName, string nativeName, bool isRightToLeft)
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xC931C0", Offset = "0xC931C0", VA = "0xC931C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000118")]
	internal static class SmartCultureInfoCollectionDeserializer
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xC93518", Offset = "0xC93518", VA = "0xC93518")]
		public static SmartCultureInfoCollection Deserialize(TextAsset xmlFile)
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xC93B98", Offset = "0xC93B98", VA = "0xC93B98")]
		private static void ReadElements(XmlReader reader, SmartCultureInfoCollection newCollection)
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xC93C58", Offset = "0xC93C58", VA = "0xC93C58")]
		private static void ReadData(XmlReader reader, SmartCultureInfoCollection newCollection)
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class LocalizedAudioSource : LocalizedBase
	{
		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip audioClip;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource audioSource;

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xC8CEAC", Offset = "0xC8CEAC", VA = "0xC8CEAC")]
		private void Start()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xC8D0DC", Offset = "0xC8D0DC", VA = "0xC8D0DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xC8D008", Offset = "0xC8D008", VA = "0xC8D008")]
		private void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xC8D234", Offset = "0xC8D234", VA = "0xC8D234")]
		public LocalizedAudioSource()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class LocalizedBase : MonoBehaviour
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string localizedKey;

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xC87A68", Offset = "0xC87A68", VA = "0xC87A68")]
		public LocalizedBase()
		{
		}
	}
	[Token(Token = "0x200011B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BAA8", Offset = "0x62BAA8")]
	public class LocalizedImage : LocalizedBase
	{
		[Token(Token = "0x6000701")]
		[Address(RVA = "0xC8D238", Offset = "0xC8D238", VA = "0xC8D238")]
		private void Start()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xC8D438", Offset = "0xC8D438", VA = "0xC8D438")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xC8D378", Offset = "0xC8D378", VA = "0xC8D378")]
		private void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xC8D590", Offset = "0xC8D590", VA = "0xC8D590")]
		public LocalizedImage()
		{
		}
	}
	[Token(Token = "0x200011C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB0C", Offset = "0x62BB0C")]
	public class LocalizedSprite : LocalizedBase
	{
		[Token(Token = "0x6000705")]
		[Address(RVA = "0xC8D8F0", Offset = "0xC8D8F0", VA = "0xC8D8F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xC8DAF0", Offset = "0xC8DAF0", VA = "0xC8DAF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xC8DA30", Offset = "0xC8DA30", VA = "0xC8DA30")]
		private void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xC8DC48", Offset = "0xC8DC48", VA = "0xC8DC48")]
		public LocalizedSprite()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public enum LocalizedObjectType
	{
		[Token(Token = "0x4000928")]
		String,
		[Token(Token = "0x4000929")]
		GameObject,
		[Token(Token = "0x400092A")]
		Audio,
		[Token(Token = "0x400092B")]
		Texture,
		[Token(Token = "0x400092C")]
		TextAsset,
		[Token(Token = "0x400092D")]
		Font,
		[Token(Token = "0x400092E")]
		ScriptableObject,
		[Token(Token = "0x400092F")]
		Invalid
	}
	[Serializable]
	[Token(Token = "0x200011E")]
	public class LocalizedObject
	{
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string keyTypeIdentifier;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string endBracket;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private LocalizedObjectType objectType;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string textValue;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject thisGameObject;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip thisAudioClip;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture thisTexture;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextAsset thisTextAsset;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Font font;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ScriptableObject thisSO;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool overrideLocalizedObject;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string overrideObjectLanguageCode;

		[Token(Token = "0x1700006A")]
		public LocalizedObjectType ObjectType
		{
			[Token(Token = "0x6000709")]
			[Address(RVA = "0xC8C850", Offset = "0xC8C850", VA = "0xC8C850")]
			get
			{
				return default(LocalizedObjectType);
			}
			[Token(Token = "0x600070A")]
			[Address(RVA = "0xC8C840", Offset = "0xC8C840", VA = "0xC8C840")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public string TextValue
		{
			[Token(Token = "0x600070B")]
			[Address(RVA = "0xC88E40", Offset = "0xC88E40", VA = "0xC88E40")]
			get
			{
				return null;
			}
			[Token(Token = "0x600070C")]
			[Address(RVA = "0xC8C848", Offset = "0xC8C848", VA = "0xC8C848")]
			set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public GameObject ThisGameObject
		{
			[Token(Token = "0x600070D")]
			[Address(RVA = "0xC8D594", Offset = "0xC8D594", VA = "0xC8D594")]
			get
			{
				return null;
			}
			[Token(Token = "0x600070E")]
			[Address(RVA = "0xC8D59C", Offset = "0xC8D59C", VA = "0xC8D59C")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public AudioClip ThisAudioClip
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0xC8D5A4", Offset = "0xC8D5A4", VA = "0xC8D5A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000710")]
			[Address(RVA = "0xC8D5AC", Offset = "0xC8D5AC", VA = "0xC8D5AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public Texture ThisTexture
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0xC8D5B4", Offset = "0xC8D5B4", VA = "0xC8D5B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000712")]
			[Address(RVA = "0xC8D5BC", Offset = "0xC8D5BC", VA = "0xC8D5BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public bool OverrideLocalizedObject
		{
			[Token(Token = "0x6000713")]
			[Address(RVA = "0xC891E0", Offset = "0xC891E0", VA = "0xC891E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000714")]
			[Address(RVA = "0xC8C858", Offset = "0xC8C858", VA = "0xC8C858")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public string OverrideObjectLanguageCode
		{
			[Token(Token = "0x6000715")]
			[Address(RVA = "0xC891E8", Offset = "0xC891E8", VA = "0xC891E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000716")]
			[Address(RVA = "0xC8C87C", Offset = "0xC8C87C", VA = "0xC8C87C")]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public TextAsset ThisTextAsset
		{
			[Token(Token = "0x6000717")]
			[Address(RVA = "0xC8D5DC", Offset = "0xC8D5DC", VA = "0xC8D5DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000718")]
			[Address(RVA = "0xC8D5C4", Offset = "0xC8D5C4", VA = "0xC8D5C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public Font Font
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0xC8D5E4", Offset = "0xC8D5E4", VA = "0xC8D5E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600071A")]
			[Address(RVA = "0xC8D5D4", Offset = "0xC8D5D4", VA = "0xC8D5D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public ScriptableObject ThisSO
		{
			[Token(Token = "0x600071B")]
			[Address(RVA = "0xC8D5EC", Offset = "0xC8D5EC", VA = "0xC8D5EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600071C")]
			[Address(RVA = "0xC8D5CC", Offset = "0xC8D5CC", VA = "0xC8D5CC")]
			set
			{
			}
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xC8C4F0", Offset = "0xC8C4F0", VA = "0xC8C4F0")]
		public LocalizedObject()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xC8D5F4", Offset = "0xC8D5F4", VA = "0xC8D5F4")]
		public LocalizedObject(LocalizedObject other)
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xC8C4F8", Offset = "0xC8C4F8", VA = "0xC8C4F8")]
		public static LocalizedObjectType GetLocalizedObjectType(string key)
		{
			return default(LocalizedObjectType);
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xC8C8F0", Offset = "0xC8C8F0", VA = "0xC8C8F0")]
		public static string GetCleanKey(string key, LocalizedObjectType objectType)
		{
			return null;
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xC8D69C", Offset = "0xC8D69C", VA = "0xC8D69C")]
		public static string GetCleanKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xC8D70C", Offset = "0xC8D70C", VA = "0xC8D70C")]
		public string GetFullKey(string parsedKey)
		{
			return null;
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xC8D7C8", Offset = "0xC8D7C8", VA = "0xC8D7C8")]
		public static string GetFullKey(string parsedKey, LocalizedObjectType objectType)
		{
			return null;
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xC8D638", Offset = "0xC8D638", VA = "0xC8D638")]
		public static string GetLocalizedObjectTypeStringValue(LocalizedObjectType objectType)
		{
			return null;
		}
	}
	[Token(Token = "0x200011F")]
	internal class PluralForms
	{
		[Serializable]
		[Token(Token = "0x2000200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C0CC", Offset = "0x62C0CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xC9173C", Offset = "0xC9173C", VA = "0xC9173C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xC91744", Offset = "0xC91744", VA = "0xC91744")]
			internal int <.cctor>b__4_0(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xC91794", Offset = "0xC91794", VA = "0xC91794")]
			internal int <.cctor>b__4_1(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xC917A0", Offset = "0xC917A0", VA = "0xC917A0")]
			internal int <.cctor>b__4_2(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xC917AC", Offset = "0xC917AC", VA = "0xC917AC")]
			internal int <.cctor>b__4_3(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0xC917B4", Offset = "0xC917B4", VA = "0xC917B4")]
			internal int <.cctor>b__4_4(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0xC917E4", Offset = "0xC917E4", VA = "0xC917E4")]
			internal int <.cctor>b__4_5(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0xC917F0", Offset = "0xC917F0", VA = "0xC917F0")]
			internal int <.cctor>b__4_6(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0xC917FC", Offset = "0xC917FC", VA = "0xC917FC")]
			internal int <.cctor>b__4_7(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0xC91808", Offset = "0xC91808", VA = "0xC91808")]
			internal int <.cctor>b__4_8(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xC91814", Offset = "0xC91814", VA = "0xC91814")]
			internal int <.cctor>b__4_9(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xC91820", Offset = "0xC91820", VA = "0xC91820")]
			internal int <.cctor>b__4_10(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0xC9182C", Offset = "0xC9182C", VA = "0xC9182C")]
			internal int <.cctor>b__4_11(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA6")]
			[Address(RVA = "0xC91838", Offset = "0xC91838", VA = "0xC91838")]
			internal int <.cctor>b__4_12(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0xC91844", Offset = "0xC91844", VA = "0xC91844")]
			internal int <.cctor>b__4_13(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0xC91850", Offset = "0xC91850", VA = "0xC91850")]
			internal int <.cctor>b__4_14(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xC918A8", Offset = "0xC918A8", VA = "0xC918A8")]
			internal int <.cctor>b__4_15(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0xC918B4", Offset = "0xC918B4", VA = "0xC918B4")]
			internal int <.cctor>b__4_16(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0xC918BC", Offset = "0xC918BC", VA = "0xC918BC")]
			internal int <.cctor>b__4_17(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0xC918C4", Offset = "0xC918C4", VA = "0xC918C4")]
			internal int <.cctor>b__4_18(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0xC918D0", Offset = "0xC918D0", VA = "0xC918D0")]
			internal int <.cctor>b__4_19(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0xC918DC", Offset = "0xC918DC", VA = "0xC918DC")]
			internal int <.cctor>b__4_20(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xC91954", Offset = "0xC91954", VA = "0xC91954")]
			internal int <.cctor>b__4_21(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0xC91960", Offset = "0xC91960", VA = "0xC91960")]
			internal int <.cctor>b__4_22(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xC919B0", Offset = "0xC919B0", VA = "0xC919B0")]
			internal int <.cctor>b__4_23(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xC91A30", Offset = "0xC91A30", VA = "0xC91A30")]
			internal int <.cctor>b__4_24(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xC91AB0", Offset = "0xC91AB0", VA = "0xC91AB0")]
			internal int <.cctor>b__4_25(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0xC91AE0", Offset = "0xC91AE0", VA = "0xC91AE0")]
			internal int <.cctor>b__4_26(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xC91AEC", Offset = "0xC91AEC", VA = "0xC91AEC")]
			internal int <.cctor>b__4_27(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0xC91AF8", Offset = "0xC91AF8", VA = "0xC91AF8")]
			internal int <.cctor>b__4_28(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xC91B00", Offset = "0xC91B00", VA = "0xC91B00")]
			internal int <.cctor>b__4_29(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xC91B0C", Offset = "0xC91B0C", VA = "0xC91B0C")]
			internal int <.cctor>b__4_30(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xC91B14", Offset = "0xC91B14", VA = "0xC91B14")]
			internal int <.cctor>b__4_31(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xC91B94", Offset = "0xC91B94", VA = "0xC91B94")]
			internal int <.cctor>b__4_32(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xC91C14", Offset = "0xC91C14", VA = "0xC91C14")]
			internal int <.cctor>b__4_33(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0xC91C5C", Offset = "0xC91C5C", VA = "0xC91C5C")]
			internal int <.cctor>b__4_34(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0xC91C68", Offset = "0xC91C68", VA = "0xC91C68")]
			internal int <.cctor>b__4_35(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xC91CD0", Offset = "0xC91CD0", VA = "0xC91CD0")]
			internal int <.cctor>b__4_36(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xC91D4C", Offset = "0xC91D4C", VA = "0xC91D4C")]
			internal int <.cctor>b__4_37(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0xC91D54", Offset = "0xC91D54", VA = "0xC91D54")]
			internal int <.cctor>b__4_38(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xC91D5C", Offset = "0xC91D5C", VA = "0xC91D5C")]
			internal int <.cctor>b__4_39(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0xC91D68", Offset = "0xC91D68", VA = "0xC91D68")]
			internal int <.cctor>b__4_40(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0xC91D74", Offset = "0xC91D74", VA = "0xC91D74")]
			internal int <.cctor>b__4_41(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0xC91DC0", Offset = "0xC91DC0", VA = "0xC91DC0")]
			internal int <.cctor>b__4_42(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xC91DCC", Offset = "0xC91DCC", VA = "0xC91DCC")]
			internal int <.cctor>b__4_43(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0xC91DD4", Offset = "0xC91DD4", VA = "0xC91DD4")]
			internal int <.cctor>b__4_44(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xC91DE0", Offset = "0xC91DE0", VA = "0xC91DE0")]
			internal int <.cctor>b__4_45(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0xC91DEC", Offset = "0xC91DEC", VA = "0xC91DEC")]
			internal int <.cctor>b__4_46(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xC91DF8", Offset = "0xC91DF8", VA = "0xC91DF8")]
			internal int <.cctor>b__4_47(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xC91E04", Offset = "0xC91E04", VA = "0xC91E04")]
			internal int <.cctor>b__4_48(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xC91E10", Offset = "0xC91E10", VA = "0xC91E10")]
			internal int <.cctor>b__4_49(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0xC91E1C", Offset = "0xC91E1C", VA = "0xC91E1C")]
			internal int <.cctor>b__4_50(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0xC91E28", Offset = "0xC91E28", VA = "0xC91E28")]
			internal int <.cctor>b__4_51(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0xC91E34", Offset = "0xC91E34", VA = "0xC91E34")]
			internal int <.cctor>b__4_52(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0xC91E40", Offset = "0xC91E40", VA = "0xC91E40")]
			internal int <.cctor>b__4_53(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xC91E4C", Offset = "0xC91E4C", VA = "0xC91E4C")]
			internal int <.cctor>b__4_54(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xC91E9C", Offset = "0xC91E9C", VA = "0xC91E9C")]
			internal int <.cctor>b__4_55(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xC91EA8", Offset = "0xC91EA8", VA = "0xC91EA8")]
			internal int <.cctor>b__4_56(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xC91EB4", Offset = "0xC91EB4", VA = "0xC91EB4")]
			internal int <.cctor>b__4_57(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xC91EBC", Offset = "0xC91EBC", VA = "0xC91EBC")]
			internal int <.cctor>b__4_58(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xC91EEC", Offset = "0xC91EEC", VA = "0xC91EEC")]
			internal int <.cctor>b__4_59(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xC91EF8", Offset = "0xC91EF8", VA = "0xC91EF8")]
			internal int <.cctor>b__4_60(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xC91F04", Offset = "0xC91F04", VA = "0xC91F04")]
			internal int <.cctor>b__4_61(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xC91F10", Offset = "0xC91F10", VA = "0xC91F10")]
			internal int <.cctor>b__4_62(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xC91F1C", Offset = "0xC91F1C", VA = "0xC91F1C")]
			internal int <.cctor>b__4_63(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0xC91F28", Offset = "0xC91F28", VA = "0xC91F28")]
			internal int <.cctor>b__4_64(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0xC91F34", Offset = "0xC91F34", VA = "0xC91F34")]
			internal int <.cctor>b__4_65(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0xC91F40", Offset = "0xC91F40", VA = "0xC91F40")]
			internal int <.cctor>b__4_66(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0xC91F4C", Offset = "0xC91F4C", VA = "0xC91F4C")]
			internal int <.cctor>b__4_67(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0xC91FA4", Offset = "0xC91FA4", VA = "0xC91FA4")]
			internal int <.cctor>b__4_68(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0xC91FB0", Offset = "0xC91FB0", VA = "0xC91FB0")]
			internal int <.cctor>b__4_69(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0xC91FB8", Offset = "0xC91FB8", VA = "0xC91FB8")]
			internal int <.cctor>b__4_70(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0xC91FC0", Offset = "0xC91FC0", VA = "0xC91FC0")]
			internal int <.cctor>b__4_71(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0xC91FCC", Offset = "0xC91FCC", VA = "0xC91FCC")]
			internal int <.cctor>b__4_72(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0xC91FD8", Offset = "0xC91FD8", VA = "0xC91FD8")]
			internal int <.cctor>b__4_73(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0xC92050", Offset = "0xC92050", VA = "0xC92050")]
			internal int <.cctor>b__4_74(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xC9205C", Offset = "0xC9205C", VA = "0xC9205C")]
			internal int <.cctor>b__4_75(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xC920AC", Offset = "0xC920AC", VA = "0xC920AC")]
			internal int <.cctor>b__4_76(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE7")]
			[Address(RVA = "0xC9212C", Offset = "0xC9212C", VA = "0xC9212C")]
			internal int <.cctor>b__4_77(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE8")]
			[Address(RVA = "0xC921AC", Offset = "0xC921AC", VA = "0xC921AC")]
			internal int <.cctor>b__4_78(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0xC921DC", Offset = "0xC921DC", VA = "0xC921DC")]
			internal int <.cctor>b__4_79(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0xC921E8", Offset = "0xC921E8", VA = "0xC921E8")]
			internal int <.cctor>b__4_80(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xC921F4", Offset = "0xC921F4", VA = "0xC921F4")]
			internal int <.cctor>b__4_81(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0xC921FC", Offset = "0xC921FC", VA = "0xC921FC")]
			internal int <.cctor>b__4_82(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xC92208", Offset = "0xC92208", VA = "0xC92208")]
			internal int <.cctor>b__4_83(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0xC92210", Offset = "0xC92210", VA = "0xC92210")]
			internal int <.cctor>b__4_84(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xC92290", Offset = "0xC92290", VA = "0xC92290")]
			internal int <.cctor>b__4_85(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xC92310", Offset = "0xC92310", VA = "0xC92310")]
			internal int <.cctor>b__4_86(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xC92358", Offset = "0xC92358", VA = "0xC92358")]
			internal int <.cctor>b__4_87(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xC92364", Offset = "0xC92364", VA = "0xC92364")]
			internal int <.cctor>b__4_88(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xC923CC", Offset = "0xC923CC", VA = "0xC923CC")]
			internal int <.cctor>b__4_89(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0xC92448", Offset = "0xC92448", VA = "0xC92448")]
			internal int <.cctor>b__4_90(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xC92450", Offset = "0xC92450", VA = "0xC92450")]
			internal int <.cctor>b__4_91(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0xC92458", Offset = "0xC92458", VA = "0xC92458")]
			internal int <.cctor>b__4_92(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xC92464", Offset = "0xC92464", VA = "0xC92464")]
			internal int <.cctor>b__4_93(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0xC92470", Offset = "0xC92470", VA = "0xC92470")]
			internal int <.cctor>b__4_94(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0xC924BC", Offset = "0xC924BC", VA = "0xC924BC")]
			internal int <.cctor>b__4_95(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0xC924C8", Offset = "0xC924C8", VA = "0xC924C8")]
			internal int <.cctor>b__4_96(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0xC924D0", Offset = "0xC924D0", VA = "0xC924D0")]
			internal int <.cctor>b__4_97(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BFC")]
			[Address(RVA = "0xC924DC", Offset = "0xC924DC", VA = "0xC924DC")]
			internal int <.cctor>b__4_98(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xC924E8", Offset = "0xC924E8", VA = "0xC924E8")]
			internal int <.cctor>b__4_99(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0xC924F4", Offset = "0xC924F4", VA = "0xC924F4")]
			internal int <.cctor>b__4_100(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xC92500", Offset = "0xC92500", VA = "0xC92500")]
			internal int <.cctor>b__4_101(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C00")]
			[Address(RVA = "0xC9250C", Offset = "0xC9250C", VA = "0xC9250C")]
			internal int <.cctor>b__4_102(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C01")]
			[Address(RVA = "0xC92518", Offset = "0xC92518", VA = "0xC92518")]
			internal int <.cctor>b__4_103(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C02")]
			[Address(RVA = "0xC92524", Offset = "0xC92524", VA = "0xC92524")]
			internal int <.cctor>b__4_104(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C03")]
			[Address(RVA = "0xC92530", Offset = "0xC92530", VA = "0xC92530")]
			internal int <.cctor>b__4_105(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C04")]
			[Address(RVA = "0xC9253C", Offset = "0xC9253C", VA = "0xC9253C")]
			internal int <.cctor>b__4_106(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xC92548", Offset = "0xC92548", VA = "0xC92548")]
			internal int <.cctor>b__4_107(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C06")]
			[Address(RVA = "0xC92598", Offset = "0xC92598", VA = "0xC92598")]
			internal int <.cctor>b__4_108(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xC925A0", Offset = "0xC925A0", VA = "0xC925A0")]
			internal int <.cctor>b__4_109(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C08")]
			[Address(RVA = "0xC925AC", Offset = "0xC925AC", VA = "0xC925AC")]
			internal int <.cctor>b__4_110(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C09")]
			[Address(RVA = "0xC925B8", Offset = "0xC925B8", VA = "0xC925B8")]
			internal int <.cctor>b__4_111(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0xC925C4", Offset = "0xC925C4", VA = "0xC925C4")]
			internal int <.cctor>b__4_112(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0xC925D0", Offset = "0xC925D0", VA = "0xC925D0")]
			internal int <.cctor>b__4_113(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0xC925DC", Offset = "0xC925DC", VA = "0xC925DC")]
			internal int <.cctor>b__4_114(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0xC925E8", Offset = "0xC925E8", VA = "0xC925E8")]
			internal int <.cctor>b__4_115(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0xC925F4", Offset = "0xC925F4", VA = "0xC925F4")]
			internal int <.cctor>b__4_116(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xC92600", Offset = "0xC92600", VA = "0xC92600")]
			internal int <.cctor>b__4_117(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xC9260C", Offset = "0xC9260C", VA = "0xC9260C")]
			internal int <.cctor>b__4_118(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C11")]
			[Address(RVA = "0xC9265C", Offset = "0xC9265C", VA = "0xC9265C")]
			internal int <.cctor>b__4_119(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xC92664", Offset = "0xC92664", VA = "0xC92664")]
			internal int <.cctor>b__4_120(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xC92670", Offset = "0xC92670", VA = "0xC92670")]
			internal int <.cctor>b__4_121(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xC9267C", Offset = "0xC9267C", VA = "0xC9267C")]
			internal int <.cctor>b__4_122(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xC92688", Offset = "0xC92688", VA = "0xC92688")]
			internal int <.cctor>b__4_123(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C16")]
			[Address(RVA = "0xC92694", Offset = "0xC92694", VA = "0xC92694")]
			internal int <.cctor>b__4_124(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C17")]
			[Address(RVA = "0xC926E4", Offset = "0xC926E4", VA = "0xC926E4")]
			internal int <.cctor>b__4_125(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C18")]
			[Address(RVA = "0xC926EC", Offset = "0xC926EC", VA = "0xC926EC")]
			internal int <.cctor>b__4_126(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xC926F8", Offset = "0xC926F8", VA = "0xC926F8")]
			internal int <.cctor>b__4_127(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0xC92704", Offset = "0xC92704", VA = "0xC92704")]
			internal int <.cctor>b__4_128(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0xC92710", Offset = "0xC92710", VA = "0xC92710")]
			internal int <.cctor>b__4_129(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0xC9271C", Offset = "0xC9271C", VA = "0xC9271C")]
			internal int <.cctor>b__4_130(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C1D")]
			[Address(RVA = "0xC9276C", Offset = "0xC9276C", VA = "0xC9276C")]
			internal int <.cctor>b__4_131(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0xC92774", Offset = "0xC92774", VA = "0xC92774")]
			internal int <.cctor>b__4_132(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0xC92780", Offset = "0xC92780", VA = "0xC92780")]
			internal int <.cctor>b__4_133(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C20")]
			[Address(RVA = "0xC9278C", Offset = "0xC9278C", VA = "0xC9278C")]
			internal int <.cctor>b__4_134(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xC92798", Offset = "0xC92798", VA = "0xC92798")]
			internal int <.cctor>b__4_135(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C22")]
			[Address(RVA = "0xC927E8", Offset = "0xC927E8", VA = "0xC927E8")]
			internal int <.cctor>b__4_136(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C23")]
			[Address(RVA = "0xC927F4", Offset = "0xC927F4", VA = "0xC927F4")]
			internal int <.cctor>b__4_137(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C24")]
			[Address(RVA = "0xC92800", Offset = "0xC92800", VA = "0xC92800")]
			internal int <.cctor>b__4_138(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C25")]
			[Address(RVA = "0xC92850", Offset = "0xC92850", VA = "0xC92850")]
			internal int <.cctor>b__4_139(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C26")]
			[Address(RVA = "0xC9285C", Offset = "0xC9285C", VA = "0xC9285C")]
			internal int <.cctor>b__4_140(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xC92868", Offset = "0xC92868", VA = "0xC92868")]
			internal int <.cctor>b__4_141(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C28")]
			[Address(RVA = "0xC928B8", Offset = "0xC928B8", VA = "0xC928B8")]
			internal int <.cctor>b__4_142(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C29")]
			[Address(RVA = "0xC928C4", Offset = "0xC928C4", VA = "0xC928C4")]
			internal int <.cctor>b__4_143(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0xC92914", Offset = "0xC92914", VA = "0xC92914")]
			internal int <.cctor>b__4_144(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0xC92920", Offset = "0xC92920", VA = "0xC92920")]
			internal int <.cctor>b__4_145(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0xC92970", Offset = "0xC92970", VA = "0xC92970")]
			internal int <.cctor>b__4_146(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0xC9297C", Offset = "0xC9297C", VA = "0xC9297C")]
			internal int <.cctor>b__4_147(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0xC929CC", Offset = "0xC929CC", VA = "0xC929CC")]
			internal int <.cctor>b__4_148(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0xC929D8", Offset = "0xC929D8", VA = "0xC929D8")]
			internal int <.cctor>b__4_149(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C30")]
			[Address(RVA = "0xC929E4", Offset = "0xC929E4", VA = "0xC929E4")]
			internal int <.cctor>b__4_150(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C31")]
			[Address(RVA = "0xC92A34", Offset = "0xC92A34", VA = "0xC92A34")]
			internal int <.cctor>b__4_151(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C32")]
			[Address(RVA = "0xC92A40", Offset = "0xC92A40", VA = "0xC92A40")]
			internal int <.cctor>b__4_152(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xC92A4C", Offset = "0xC92A4C", VA = "0xC92A4C")]
			internal int <.cctor>b__4_153(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C34")]
			[Address(RVA = "0xC92A9C", Offset = "0xC92A9C", VA = "0xC92A9C")]
			internal int <.cctor>b__4_154(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C35")]
			[Address(RVA = "0xC92AA8", Offset = "0xC92AA8", VA = "0xC92AA8")]
			internal int <.cctor>b__4_155(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C36")]
			[Address(RVA = "0xC92AB4", Offset = "0xC92AB4", VA = "0xC92AB4")]
			internal int <.cctor>b__4_156(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C37")]
			[Address(RVA = "0xC92B04", Offset = "0xC92B04", VA = "0xC92B04")]
			internal int <.cctor>b__4_157(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C38")]
			[Address(RVA = "0xC92B10", Offset = "0xC92B10", VA = "0xC92B10")]
			internal int <.cctor>b__4_158(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xC92B60", Offset = "0xC92B60", VA = "0xC92B60")]
			internal int <.cctor>b__4_159(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0xC92B6C", Offset = "0xC92B6C", VA = "0xC92B6C")]
			internal int <.cctor>b__4_160(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0xC92BBC", Offset = "0xC92BBC", VA = "0xC92BBC")]
			internal int <.cctor>b__4_161(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xC92BC8", Offset = "0xC92BC8", VA = "0xC92BC8")]
			internal int <.cctor>b__4_162(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0xC92BD4", Offset = "0xC92BD4", VA = "0xC92BD4")]
			internal int <.cctor>b__4_163(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0xC92BE0", Offset = "0xC92BE0", VA = "0xC92BE0")]
			internal int <.cctor>b__4_164(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0xC92BEC", Offset = "0xC92BEC", VA = "0xC92BEC")]
			internal int <.cctor>b__4_165(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C40")]
			[Address(RVA = "0xC92BF8", Offset = "0xC92BF8", VA = "0xC92BF8")]
			internal int <.cctor>b__4_166(int n)
			{
				return default(int);
			}

			[Token(Token = "0x6000C41")]
			[Address(RVA = "0xC92C00", Offset = "0xC92C00", VA = "0xC92C00")]
			internal int <.cctor>b__4_167(int n)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, Func<int, int>> Languages;

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xC8B234", Offset = "0xC8B234", VA = "0xC8B234")]
		public static string GetPluralKey(string languageCode, string baseKey, int count)
		{
			return null;
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xC8B888", Offset = "0xC8B888", VA = "0xC8B888")]
		public static string GetPluralKey(string baseKey, int count, Func<int, int> pluralForm)
		{
			return null;
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xC8DC4C", Offset = "0xC8DC4C", VA = "0xC8DC4C")]
		public PluralForms()
		{
		}
	}
	[Token(Token = "0x2000120")]
	internal class RuntimeLocalizedAssetLoader : ILocalizedAssetLoader
	{
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Type GameObjectType;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Type AudioClipType;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Type SpriteType;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Type TextureType;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Type TextAssetType;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly Type FontType;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly Type ScriptableObjectType;

		[Token(Token = "0x600072A")]
		public T LoadAsset<T>(string assetKey, string languageCode) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xC92C08", Offset = "0xC92C08", VA = "0xC92C08")]
		private string GetAssetFolderPath(Type assetType, string languageCode)
		{
			return null;
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xC88588", Offset = "0xC88588", VA = "0xC88588")]
		public RuntimeLocalizedAssetLoader()
		{
		}
	}
}
namespace SmartLocalization.Editor
{
	[Token(Token = "0x2000121")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BB70", Offset = "0x62BB70")]
	public class LocalizedText : LocalizedBase
	{
		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string localizedFontKey;

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xC874F0", Offset = "0xC874F0", VA = "0xC874F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xC87804", Offset = "0xC87804", VA = "0xC87804")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xC87630", Offset = "0xC87630", VA = "0xC87630")]
		private void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xC87A64", Offset = "0xC87A64", VA = "0xC87A64")]
		public LocalizedText()
		{
		}
	}
	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BBD4", Offset = "0x62BBD4")]
	public class LocalizedTextMeshPro : LocalizedBase
	{
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string localizedFontAssetKey;

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xC87AC0", Offset = "0xC87AC0", VA = "0xC87AC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xC87E40", Offset = "0xC87E40", VA = "0xC87E40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xC87C04", Offset = "0xC87C04", VA = "0xC87C04")]
		public void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xC88008", Offset = "0xC88008", VA = "0xC88008")]
		public LocalizedTextMeshPro()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BC38", Offset = "0x62BC38")]
	public class LocalizedTextMeshProUGUI : LocalizedBase
	{
		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string localizedFontAssetKey;

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xC8800C", Offset = "0xC8800C", VA = "0xC8800C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xC8838C", Offset = "0xC8838C", VA = "0xC8838C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xC88150", Offset = "0xC88150", VA = "0xC88150")]
		public void OnChangeLanguage(LanguageManager languageManager)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xC884E4", Offset = "0xC884E4", VA = "0xC884E4")]
		public LocalizedTextMeshProUGUI()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000124")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000074")]
		public bool Highlight
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0xD96E28", Offset = "0xD96E28", VA = "0xD96E28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600073B")]
			[Address(RVA = "0xD96E30", Offset = "0xD96E30", VA = "0xD96E30")]
			set
			{
			}
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xD96E3C", Offset = "0xD96E3C", VA = "0xD96E3C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xD97064", Offset = "0xD97064", VA = "0xD97064", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xD9708C", Offset = "0xD9708C", VA = "0xD9708C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xD970B4", Offset = "0xD970B4", VA = "0xD970B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xD96F08", Offset = "0xD96F08", VA = "0xD96F08")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xD9735C", Offset = "0xD9735C", VA = "0xD9735C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000075")]
		public bool InRange
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xD97CC4", Offset = "0xD97CC4", VA = "0xD97CC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000744")]
			[Address(RVA = "0xD97CCC", Offset = "0xD97CCC", VA = "0xD97CCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public bool Targeted
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xD97EDC", Offset = "0xD97EDC", VA = "0xD97EDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000746")]
			[Address(RVA = "0xD97EE4", Offset = "0xD97EE4", VA = "0xD97EE4")]
			set
			{
			}
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xD97EF0", Offset = "0xD97EF0", VA = "0xD97EF0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xD97CD8", Offset = "0xD97CD8", VA = "0xD97CD8")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xD980E8", Offset = "0xD980E8", VA = "0xD980E8")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BC9C", Offset = "0x62BC9C")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000077")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600074A")]
			[Address(RVA = "0xD980F0", Offset = "0xD980F0", VA = "0xD980F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600074B")]
			[Address(RVA = "0xD980F8", Offset = "0xD980F8", VA = "0xD980F8")]
			set
			{
			}
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xD98114", Offset = "0xD98114", VA = "0xD98114", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xD9833C", Offset = "0xD9833C", VA = "0xD9833C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xD98DAC", Offset = "0xD98DAC", VA = "0xD98DAC", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xD99590", Offset = "0xD99590", VA = "0xD99590", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xD999F0", Offset = "0xD999F0", VA = "0xD999F0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xD985BC", Offset = "0xD985BC", VA = "0xD985BC")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xD99AE8", Offset = "0xD99AE8", VA = "0xD99AE8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xD99F84", Offset = "0xD99F84", VA = "0xD99F84", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xD99F9C", Offset = "0xD99F9C", VA = "0xD99F9C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xD99FA4", Offset = "0xD99FA4", VA = "0xD99FA4")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000201")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000DF2")]
			Disabled,
			[Token(Token = "0x4000DF3")]
			Enabled,
			[Token(Token = "0x4000DF4")]
			Targeted
		}

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xD9C098", Offset = "0xD9C098", VA = "0xD9C098")]
		private void Start()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xD98014", Offset = "0xD98014", VA = "0xD98014")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xD9C108", Offset = "0xD9C108", VA = "0xD9C108")]
		private void Update()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xD9C160", Offset = "0xD9C160", VA = "0xD9C160")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xD9BF1C", Offset = "0xD9BF1C", VA = "0xD9BF1C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xD9BFD8", Offset = "0xD9BFD8", VA = "0xD9BFD8")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xD9C090", Offset = "0xD9C090", VA = "0xD9C090")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600075D")]
		[Address(RVA = "0xDA1EEC", Offset = "0xDA1EEC", VA = "0xDA1EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xDA1FB8", Offset = "0xDA1FB8", VA = "0xDA1FB8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xDA1FC4", Offset = "0xDA1FC4", VA = "0xDA1FC4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xDA1FD0", Offset = "0xDA1FD0", VA = "0xDA1FD0")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xD95898", Offset = "0xD95898", VA = "0xD95898")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xD958F8", Offset = "0xD958F8", VA = "0xD958F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xD95C14", Offset = "0xD95C14", VA = "0xD95C14")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xD95D30", Offset = "0xD95D30", VA = "0xD95D30")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xD958FC", Offset = "0xD958FC", VA = "0xD958FC")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xD95E44", Offset = "0xD95E44", VA = "0xD95E44")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000202")]
		public enum ContactTest
		{
			[Token(Token = "0x4000DF6")]
			PerpenTest,
			[Token(Token = "0x4000DF7")]
			BackwardsPress
		}

		[Token(Token = "0x400096B")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400096C")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000078")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0xD95EDC", Offset = "0xD95EDC", VA = "0xD95EDC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000079")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000768")]
			[Address(RVA = "0xD95EE4", Offset = "0xD95EE4", VA = "0xD95EE4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xD95EF0", Offset = "0xD95EF0", VA = "0xD95EF0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xD96064", Offset = "0xD96064", VA = "0xD96064")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xD96284", Offset = "0xD96284", VA = "0xD96284", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xD9686C", Offset = "0xD9686C", VA = "0xD9686C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xD96770", Offset = "0xD96770", VA = "0xD96770")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xD969BC", Offset = "0xD969BC", VA = "0xD969BC")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xD96AB4", Offset = "0xD96AB4", VA = "0xD96AB4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xD96C10", Offset = "0xD96C10", VA = "0xD96C10")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FD5C", Offset = "0x62FD5C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FD6C", Offset = "0x62FD6C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700007A")]
		public Collider Collider
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0xD96D04", Offset = "0xD96D04", VA = "0xD96D04", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6323C4", Offset = "0x6323C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000772")]
			[Address(RVA = "0xD96D0C", Offset = "0xD96D0C", VA = "0xD96D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6323D4", Offset = "0x6323D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000773")]
			[Address(RVA = "0xD95D28", Offset = "0xD95D28", VA = "0xD95D28", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6323E4", Offset = "0x6323E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000774")]
			[Address(RVA = "0xD96D14", Offset = "0xD96D14", VA = "0xD96D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6323F4", Offset = "0x6323F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000775")]
			[Address(RVA = "0xD96D1C", Offset = "0xD96D1C", VA = "0xD96D1C", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xD96DA0", Offset = "0xD96DA0", VA = "0xD96DA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xD96E20", Offset = "0xD96E20", VA = "0xD96E20")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700007D")]
		Collider Collider
		{
			[Token(Token = "0x6000778")]
			get;
		}

		[Token(Token = "0x1700007E")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000779")]
			get;
		}

		[Token(Token = "0x1700007F")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600077A")]
			get;
		}
	}
	[Token(Token = "0x200012E")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xD961D0", Offset = "0xD961D0", VA = "0xD961D0")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200012F")]
	public enum InteractionType
	{
		[Token(Token = "0x4000980")]
		Enter,
		[Token(Token = "0x4000981")]
		Stay,
		[Token(Token = "0x4000982")]
		Exit
	}
	[Token(Token = "0x2000130")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000203")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000DF9")]
			Mesh,
			[Token(Token = "0x4000DFA")]
			Skeleton,
			[Token(Token = "0x4000DFB")]
			Both
		}

		[Token(Token = "0x2000204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C0DC", Offset = "0x62C0DC")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000111")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C45")]
				[Address(RVA = "0xD9D35C", Offset = "0xD9D35C", VA = "0xD9D35C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000112")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C47")]
				[Address(RVA = "0xD9D3CC", Offset = "0xD9D3CC", VA = "0xD9D3CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C42")]
			[Address(RVA = "0xD9CD08", Offset = "0xD9CD08", VA = "0xD9CD08")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000C43")]
			[Address(RVA = "0xD9D0F8", Offset = "0xD9D0F8", VA = "0xD9D0F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C44")]
			[Address(RVA = "0xD9D0FC", Offset = "0xD9D0FC", VA = "0xD9D0FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C46")]
			[Address(RVA = "0xD9D364", Offset = "0xD9D364", VA = "0xD9D364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000983")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FD9C", Offset = "0x62FD9C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000080")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0xD9AE00", Offset = "0xD9AE00", VA = "0xD9AE00")]
			get
			{
				return null;
			}
			[Token(Token = "0x600077D")]
			[Address(RVA = "0xD9C168", Offset = "0xD9C168", VA = "0xD9C168")]
			private set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600077E")]
			[Address(RVA = "0xD9BB0C", Offset = "0xD9BB0C", VA = "0xD9BB0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600077F")]
			[Address(RVA = "0xD9C1E4", Offset = "0xD9C1E4", VA = "0xD9C1E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0xD9C260", Offset = "0xD9C260", VA = "0xD9C260")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000781")]
			[Address(RVA = "0xD9C2A8", Offset = "0xD9C2A8", VA = "0xD9C2A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0xD9C324", Offset = "0xD9C324", VA = "0xD9C324")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000783")]
			[Address(RVA = "0xD9C36C", Offset = "0xD9C36C", VA = "0xD9C36C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0xD9C3E8", Offset = "0xD9C3E8", VA = "0xD9C3E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000785")]
			[Address(RVA = "0xD9C430", Offset = "0xD9C430", VA = "0xD9C430")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0xD9ADBC", Offset = "0xD9ADBC", VA = "0xD9ADBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000787")]
			[Address(RVA = "0xD9C4AC", Offset = "0xD9C4AC", VA = "0xD9C4AC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xD9BAC8", Offset = "0xD9BAC8", VA = "0xD9BAC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000789")]
			[Address(RVA = "0xD9C524", Offset = "0xD9C524", VA = "0xD9C524")]
			private set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xD9C59C", Offset = "0xD9C59C", VA = "0xD9C59C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xD9C5E0", Offset = "0xD9C5E0", VA = "0xD9C5E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0xD9C658", Offset = "0xD9C658", VA = "0xD9C658")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xD9C69C", Offset = "0xD9C69C", VA = "0xD9C69C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0xD9C714", Offset = "0xD9C714", VA = "0xD9C714")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078F")]
			[Address(RVA = "0xD9C758", Offset = "0xD9C758", VA = "0xD9C758")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0xD97A7C", Offset = "0xD97A7C", VA = "0xD97A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632404", Offset = "0x632404")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000791")]
			[Address(RVA = "0xD9C7D0", Offset = "0xD9C7D0", VA = "0xD9C7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632414", Offset = "0x632414")]
			private set
			{
			}
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xD9C824", Offset = "0xD9C824", VA = "0xD9C824")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xD9CC34", Offset = "0xD9CC34", VA = "0xD9CC34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xD9CBC0", Offset = "0xD9CBC0", VA = "0xD9CBC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632424", Offset = "0x632424")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xD97ACC", Offset = "0xD97ACC", VA = "0xD97ACC")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xD9CD34", Offset = "0xD9CD34", VA = "0xD9CD34")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xD9BB54", Offset = "0xD9BB54", VA = "0xD9BB54")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xD9ABF0", Offset = "0xD9ABF0", VA = "0xD9ABF0")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xD9D018", Offset = "0xD9D018", VA = "0xD9D018")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000205")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0xD9DC2C", Offset = "0xD9DC2C", VA = "0xD9DC2C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700008B")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0xD9627C", Offset = "0xD9627C", VA = "0xD9627C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0xD96274", Offset = "0xD96274", VA = "0xD96274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xD961C8", Offset = "0xD961C8", VA = "0xD961C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xD9D3D4", Offset = "0xD9D3D4", VA = "0xD9D3D4", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0xD9D3DC", Offset = "0xD9D3DC", VA = "0xD9D3DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632488", Offset = "0x632488")]
			add
			{
			}
			[Token(Token = "0x600079F")]
			[Address(RVA = "0xD9D4C8", Offset = "0xD9D4C8", VA = "0xD9D4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632498", Offset = "0x632498")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0xD9D628", Offset = "0xD9D628", VA = "0xD9D628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6324A8", Offset = "0x6324A8")]
			add
			{
			}
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0xD9D714", Offset = "0xD9D714", VA = "0xD9D714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6324B8", Offset = "0x6324B8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0xD9D874", Offset = "0xD9D874", VA = "0xD9D874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6324C8", Offset = "0x6324C8")]
			add
			{
			}
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0xD9D960", Offset = "0xD9D960", VA = "0xD9D960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6324D8", Offset = "0x6324D8")]
			remove
			{
			}
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xD9D5B4", Offset = "0xD9D5B4", VA = "0xD9D5B4", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xD9D800", Offset = "0xD9D800", VA = "0xD9D800", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xD9DA4C", Offset = "0xD9DA4C", VA = "0xD9DA4C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60007A7")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xD96000", Offset = "0xD96000", VA = "0xD96000", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xD9DB44", Offset = "0xD9DB44", VA = "0xD9DB44", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xD96CFC", Offset = "0xD96CFC", VA = "0xD96CFC")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x400099B")]
		None,
		[Token(Token = "0x400099C")]
		Proximity,
		[Token(Token = "0x400099D")]
		Contact,
		[Token(Token = "0x400099E")]
		Action
	}
	[Token(Token = "0x2000133")]
	public enum InteractableState
	{
		[Token(Token = "0x40009A0")]
		Default,
		[Token(Token = "0x40009A1")]
		ProximityState,
		[Token(Token = "0x40009A2")]
		ContactState,
		[Token(Token = "0x40009A3")]
		ActionState
	}
	[Token(Token = "0x2000134")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xD96918", Offset = "0xD96918", VA = "0xD96918")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700008F")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0xD9DC7C", Offset = "0xD9DC7C", VA = "0xD9DC7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xD9DAC0", Offset = "0xD9DAC0", VA = "0xD9DAC0")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xD9DBA8", Offset = "0xD9DBA8", VA = "0xD9DBA8")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xD9DCE4", Offset = "0xD9DCE4", VA = "0xD9DCE4")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000206")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C0EC", Offset = "0x62C0EC")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000113")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C4D")]
				[Address(RVA = "0xD9EFD0", Offset = "0xD9EFD0", VA = "0xD9EFD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000114")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C4F")]
				[Address(RVA = "0xD9F040", Offset = "0xD9F040", VA = "0xD9F040", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xD9E9C4", Offset = "0xD9E9C4", VA = "0xD9E9C4")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0xD9EB70", Offset = "0xD9EB70", VA = "0xD9EB70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0xD9EBE4", Offset = "0xD9EBE4", VA = "0xD9EBE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0xD9EB8C", Offset = "0xD9EB8C", VA = "0xD9EB8C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0xD9EFD8", Offset = "0xD9EFD8", VA = "0xD9EFD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xD9E894", Offset = "0xD9E894", VA = "0xD9E894")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xD9E910", Offset = "0xD9E910", VA = "0xD9E910")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6324E8", Offset = "0x6324E8")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xD9E9F0", Offset = "0xD9E9F0", VA = "0xD9E9F0")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xD9EB68", Offset = "0xD9EB68", VA = "0xD9EB68")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000090")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0xD9A510", Offset = "0xD9A510", VA = "0xD9A510")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xD9A698", Offset = "0xD9A698", VA = "0xD9A698")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xD9F048", Offset = "0xD9F048", VA = "0xD9F048")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xD9F11C", Offset = "0xD9F11C", VA = "0xD9F11C")]
		private void Update()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xD9F49C", Offset = "0xD9F49C", VA = "0xD9F49C")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xD9F4E4", Offset = "0xD9F4E4", VA = "0xD9F4E4")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xD9F888", Offset = "0xD9F888", VA = "0xD9F888")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xD9F9D4", Offset = "0xD9F9D4", VA = "0xD9F9D4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000207")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C0FC", Offset = "0x62C0FC")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000115")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C53")]
				[Address(RVA = "0xD9BDB0", Offset = "0xD9BDB0", VA = "0xD9BDB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000116")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C55")]
				[Address(RVA = "0xD9BE20", Offset = "0xD9BE20", VA = "0xD9BE20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C50")]
			[Address(RVA = "0xD9A7E8", Offset = "0xD9A7E8", VA = "0xD9A7E8")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000C51")]
			[Address(RVA = "0xD9B68C", Offset = "0xD9B68C", VA = "0xD9B68C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C52")]
			[Address(RVA = "0xD9B690", Offset = "0xD9B690", VA = "0xD9B690", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C54")]
			[Address(RVA = "0xD9BDB8", Offset = "0xD9BDB8", VA = "0xD9BDB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009B3")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000091")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0xD9A3B4", Offset = "0xD9A3B4", VA = "0xD9A3B4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000092")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0xD9A3BC", Offset = "0xD9A3BC", VA = "0xD9A3BC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000093")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60007BF")]
			[Address(RVA = "0xD9A3C4", Offset = "0xD9A3C4", VA = "0xD9A3C4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000094")]
		public override bool EnableState
		{
			[Token(Token = "0x60007C0")]
			[Address(RVA = "0xD9A3CC", Offset = "0xD9A3CC", VA = "0xD9A3CC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007C1")]
			[Address(RVA = "0xD9A414", Offset = "0xD9A414", VA = "0xD9A414", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xD9A464", Offset = "0xD9A464", VA = "0xD9A464", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xD9A774", Offset = "0xD9A774", VA = "0xD9A774")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x63254C", Offset = "0x63254C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xD9A814", Offset = "0xD9A814", VA = "0xD9A814")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xD9AE5C", Offset = "0xD9AE5C", VA = "0xD9AE5C")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xD9B114", Offset = "0xD9B114", VA = "0xD9B114")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xD9B28C", Offset = "0xD9B28C", VA = "0xD9B28C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xD9B560", Offset = "0xD9B560", VA = "0xD9B560", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xD9B564", Offset = "0xD9B564", VA = "0xD9B564", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xD9B568", Offset = "0xD9B568", VA = "0xD9B568")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FE2C", Offset = "0x62FE2C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FE3C", Offset = "0x62FE3C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FE4C", Offset = "0x62FE4C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000095")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0xD9BE28", Offset = "0xD9BE28", VA = "0xD9BE28", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6325B0", Offset = "0x6325B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0xD9A76C", Offset = "0xD9A76C", VA = "0xD9A76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6325C0", Offset = "0x6325C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000096")]
		public bool EnableState
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0xD9BE30", Offset = "0xD9BE30", VA = "0xD9BE30", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0xD9BE60", Offset = "0xD9BE60", VA = "0xD9BE60", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0xD9BE98", Offset = "0xD9BE98", VA = "0xD9BE98", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6325D0", Offset = "0x6325D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0xD9BEA0", Offset = "0xD9BEA0", VA = "0xD9BEA0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6325E0", Offset = "0x6325E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public float SphereRadius
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0xD9AE48", Offset = "0xD9AE48", VA = "0xD9AE48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6325F0", Offset = "0x6325F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0xD9BEAC", Offset = "0xD9BEAC", VA = "0xD9BEAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632600", Offset = "0x632600")]
			private set
			{
			}
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xD9BEB4", Offset = "0xD9BEB4", VA = "0xD9BEB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xD9BF10", Offset = "0xD9BF10", VA = "0xD9BF10", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xD9BF14", Offset = "0xD9BF14", VA = "0xD9BF14")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200013A")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40009C3")]
		None = 0,
		[Token(Token = "0x40009C4")]
		Ray = 1,
		[Token(Token = "0x40009C5")]
		Poke = 4,
		[Token(Token = "0x40009C6")]
		All = -1
	}
	[Token(Token = "0x200013B")]
	public enum ToolInputState
	{
		[Token(Token = "0x40009C8")]
		Inactive,
		[Token(Token = "0x40009C9")]
		PrimaryInputDown,
		[Token(Token = "0x40009CA")]
		PrimaryInputDownStay,
		[Token(Token = "0x40009CB")]
		PrimaryInputUp
	}
	[Token(Token = "0x200013C")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xD9B51C", Offset = "0xD9B51C", VA = "0xD9B51C")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200013D")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FE5C", Offset = "0x62FE5C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FE6C", Offset = "0x62FE6C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FE7C", Offset = "0x62FE7C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000099")]
		public Transform ToolTransform
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0xD96C00", Offset = "0xD96C00", VA = "0xD96C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009A")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0xD96C08", Offset = "0xD96C08", VA = "0xD96C08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632610", Offset = "0x632610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0xD9DD60", Offset = "0xD9DD60", VA = "0xD9DD60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632620", Offset = "0x632620")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x60007DA")]
			get;
		}

		[Token(Token = "0x1700009C")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x60007DB")]
			get;
		}

		[Token(Token = "0x1700009D")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x60007DC")]
			get;
		}

		[Token(Token = "0x1700009E")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60007DD")]
			[Address(RVA = "0xD96BF4", Offset = "0xD96BF4", VA = "0xD96BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632630", Offset = "0x632630")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007DE")]
			[Address(RVA = "0xD9B280", Offset = "0xD9B280", VA = "0xD9B280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632640", Offset = "0x632640")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0xD96860", Offset = "0xD96860", VA = "0xD96860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632650", Offset = "0x632650")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0xD9AE50", Offset = "0xD9AE50", VA = "0xD9AE50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632660", Offset = "0x632660")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60007E5")]
			get;
			[Token(Token = "0x60007E6")]
			set;
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xD9DD6C", Offset = "0xD9DD6C", VA = "0xD9DD6C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60007E2")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60007E3")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60007E4")]
		public abstract void DeFocus();

		[Token(Token = "0x60007E7")]
		public abstract void Initialize();

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xD9DD74", Offset = "0xD9DD74", VA = "0xD9DD74")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xD9DDC4", Offset = "0xD9DDC4", VA = "0xD9DDC4")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xD9DE24", Offset = "0xD9DE24", VA = "0xD9DE24", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xD9E0F0", Offset = "0xD9E0F0", VA = "0xD9E0F0", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xD9B57C", Offset = "0xD9B57C", VA = "0xD9B57C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170000A1")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60007ED")]
			get;
		}

		[Token(Token = "0x170000A2")]
		bool EnableState
		{
			[Token(Token = "0x60007EF")]
			get;
			[Token(Token = "0x60007F0")]
			set;
		}

		[Token(Token = "0x170000A3")]
		bool ToolActivateState
		{
			[Token(Token = "0x60007F1")]
			get;
			[Token(Token = "0x60007F2")]
			set;
		}

		[Token(Token = "0x60007EE")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200013F")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000208")]
		private enum PinchState
		{
			[Token(Token = "0x4000E0C")]
			None,
			[Token(Token = "0x4000E0D")]
			PinchDown,
			[Token(Token = "0x4000E0E")]
			PinchStay,
			[Token(Token = "0x4000E0F")]
			PinchUp
		}

		[Token(Token = "0x40009D8")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170000A4")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0xDA1FD8", Offset = "0xDA1FD8", VA = "0xDA1FD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A5")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0xDA2064", Offset = "0xDA2064", VA = "0xDA2064")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A6")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0xDA20F0", Offset = "0xDA20F0", VA = "0xDA20F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xDA217C", Offset = "0xDA217C", VA = "0xDA217C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xDA21A8", Offset = "0xDA21A8", VA = "0xDA21A8")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40009DB")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40009DC")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40009DD")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40009DE")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40009DF")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x62FE9C", Offset = "0x62FE9C")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170000A7")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0xDA2450", Offset = "0xDA2450", VA = "0xDA2450", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000A8")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0xDA2458", Offset = "0xDA2458", VA = "0xDA2458", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000A9")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0xDA24E0", Offset = "0xDA24E0", VA = "0xDA24E0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AA")]
		public override bool EnableState
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0xDA24E8", Offset = "0xDA24E8", VA = "0xDA24E8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0xDA2544", Offset = "0xDA2544", VA = "0xDA2544", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xDA25F8", Offset = "0xDA25F8", VA = "0xDA25F8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xDA2668", Offset = "0xDA2668", VA = "0xDA2668")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xDA270C", Offset = "0xDA270C", VA = "0xDA270C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xDA2AF4", Offset = "0xDA2AF4", VA = "0xDA2AF4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xDA2C04", Offset = "0xDA2C04", VA = "0xDA2C04", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xDA2FC4", Offset = "0xDA2FC4", VA = "0xDA2FC4")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xDA3184", Offset = "0xDA3184", VA = "0xDA3184")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xDA32B4", Offset = "0xDA32B4", VA = "0xDA32B4")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xDA3614", Offset = "0xDA3614", VA = "0xDA3614")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xDA3A60", Offset = "0xDA3A60", VA = "0xDA3A60", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xDA3B4C", Offset = "0xDA3B4C", VA = "0xDA3B4C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xDA3B88", Offset = "0xDA3B88", VA = "0xDA3B88")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40009EB")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40009EC")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FF10", Offset = "0x62FF10")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000AB")]
		public bool EnableState
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0xDA2514", Offset = "0xDA2514", VA = "0xDA2514", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600080A")]
			[Address(RVA = "0xDA2578", Offset = "0xDA2578", VA = "0xDA2578", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0xDA3C40", Offset = "0xDA3C40", VA = "0xDA3C40", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600080C")]
			[Address(RVA = "0xDA2AA4", Offset = "0xDA2AA4", VA = "0xDA2AA4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0xDA3ED8", Offset = "0xDA3ED8", VA = "0xDA3ED8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632670", Offset = "0x632670")]
			get
			{
				return null;
			}
			[Token(Token = "0x600080F")]
			[Address(RVA = "0xDA2660", Offset = "0xDA2660", VA = "0xDA2660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632680", Offset = "0x632680")]
			set
			{
			}
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xDA3C48", Offset = "0xDA3C48", VA = "0xDA3C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xDA3AA8", Offset = "0xDA3AA8", VA = "0xDA3AA8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xDA3EE0", Offset = "0xDA3EE0", VA = "0xDA3EE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xDA4274", Offset = "0xDA4274", VA = "0xDA4274")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xDA4464", Offset = "0xDA4464", VA = "0xDA4464")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170000AE")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0xD99FC4", Offset = "0xD99FC4", VA = "0xD99FC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000815")]
			[Address(RVA = "0xD99FCC", Offset = "0xD99FCC", VA = "0xD99FCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000816")]
			[Address(RVA = "0xD9A084", Offset = "0xD9A084", VA = "0xD9A084")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000817")]
			[Address(RVA = "0xD9A08C", Offset = "0xD9A08C", VA = "0xD9A08C")]
			set
			{
			}
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xD9A130", Offset = "0xD9A130", VA = "0xD9A130")]
		private void Start()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xD9A38C", Offset = "0xD9A38C", VA = "0xD9A38C")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xD9A39C", Offset = "0xD9A39C", VA = "0xD9A39C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xD9A3AC", Offset = "0xD9A3AC", VA = "0xD9A3AC")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xD97458", Offset = "0xD97458", VA = "0xD97458")]
		private void Awake()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xD9745C", Offset = "0xD9745C", VA = "0xD9745C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xD97500", Offset = "0xD97500", VA = "0xD97500")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xD97614", Offset = "0xD97614", VA = "0xD97614")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xD97728", Offset = "0xD97728", VA = "0xD97728")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xD97850", Offset = "0xD97850", VA = "0xD97850")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xD97990", Offset = "0xD97990", VA = "0xD97990")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xD979F4", Offset = "0xD979F4", VA = "0xD979F4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xD97BB4", Offset = "0xD97BB4", VA = "0xD97BB4")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xD97C5C", Offset = "0xD97C5C", VA = "0xD97C5C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xD97C64", Offset = "0xD97C64", VA = "0xD97C64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xD97C68", Offset = "0xD97C68", VA = "0xD97C68")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xD97C0C", Offset = "0xD97C0C", VA = "0xD97C0C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xD97CBC", Offset = "0xD97CBC", VA = "0xD97CBC")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000209")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C10C", Offset = "0x62C10C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000117")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C59")]
				[Address(RVA = "0xDA1E74", Offset = "0xDA1E74", VA = "0xDA1E74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000118")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C5B")]
				[Address(RVA = "0xDA1EE4", Offset = "0xDA1EE4", VA = "0xDA1EE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C56")]
			[Address(RVA = "0xDA1B04", Offset = "0xDA1B04", VA = "0xDA1B04")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000C57")]
			[Address(RVA = "0xDA1BE8", Offset = "0xDA1BE8", VA = "0xDA1BE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C58")]
			[Address(RVA = "0xDA1BEC", Offset = "0xDA1BEC", VA = "0xDA1BEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0xDA1E7C", Offset = "0xDA1E7C", VA = "0xDA1E7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009FC")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x40009FD")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xDA1690", Offset = "0xDA1690", VA = "0xDA1690")]
		private void Awake()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xDA1730", Offset = "0xDA1730", VA = "0xDA1730")]
		private void Update()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xDA1A28", Offset = "0xDA1A28", VA = "0xDA1A28")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xDA19B4", Offset = "0xDA19B4", VA = "0xDA19B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632690", Offset = "0x632690")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xDA1B30", Offset = "0xDA1B30", VA = "0xDA1B30")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200020A")]
		public enum SelectionState
		{
			[Token(Token = "0x4000E17")]
			Off,
			[Token(Token = "0x4000E18")]
			Selected,
			[Token(Token = "0x4000E19")]
			Highlighted
		}

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170000B0")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0xDA44C4", Offset = "0xDA44C4", VA = "0xDA44C4")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000830")]
			[Address(RVA = "0xDA44CC", Offset = "0xDA44CC", VA = "0xDA44CC")]
			set
			{
			}
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xDA46C4", Offset = "0xDA46C4", VA = "0xDA46C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xDA491C", Offset = "0xDA491C", VA = "0xDA491C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xDA4574", Offset = "0xDA4574", VA = "0xDA4574")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xDA4A08", Offset = "0xDA4A08", VA = "0xDA4A08")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200020B")]
		public enum SegmentType
		{
			[Token(Token = "0x4000E1B")]
			Straight,
			[Token(Token = "0x4000E1C")]
			LeftTurn,
			[Token(Token = "0x4000E1D")]
			RightTurn,
			[Token(Token = "0x4000E1E")]
			Switch
		}

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000A12")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000A13")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62FFF0", Offset = "0x62FFF0")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170000B1")]
		public float StartDistance
		{
			[Token(Token = "0x6000836")]
			[Address(RVA = "0xDA4A74", Offset = "0xDA4A74", VA = "0xDA4A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6326F4", Offset = "0x6326F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000837")]
			[Address(RVA = "0xDA4A7C", Offset = "0xDA4A7C", VA = "0xDA4A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632704", Offset = "0x632704")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public float GridSize
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0xDA4A84", Offset = "0xDA4A84", VA = "0xDA4A84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000839")]
			[Address(RVA = "0xDA4A8C", Offset = "0xDA4A8C", VA = "0xDA4A8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public int SubDivCount
		{
			[Token(Token = "0x600083A")]
			[Address(RVA = "0xDA4A94", Offset = "0xDA4A94", VA = "0xDA4A94")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600083B")]
			[Address(RVA = "0xDA4A9C", Offset = "0xDA4A9C", VA = "0xDA4A9C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public SegmentType Type
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0xDA4AA4", Offset = "0xDA4AA4", VA = "0xDA4AA4")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000B5")]
		public Pose EndPose
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0xDA4AAC", Offset = "0xDA4AAC", VA = "0xDA4AAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public float Radius
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0xDA4FBC", Offset = "0xDA4FBC", VA = "0xDA4FBC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B7")]
		public float SegmentLength
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0xDA4B14", Offset = "0xDA4B14", VA = "0xDA4B14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xDA4FCC", Offset = "0xDA4FCC", VA = "0xDA4FCC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xDA4FE4", Offset = "0xDA4FE4", VA = "0xDA4FE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xDA4B54", Offset = "0xDA4B54", VA = "0xDA4B54")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xDA4FE8", Offset = "0xDA4FE8", VA = "0xDA4FE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xDA4FEC", Offset = "0xDA4FEC", VA = "0xDA4FEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xDA5058", Offset = "0xDA5058", VA = "0xDA5058")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xDA5D1C", Offset = "0xDA5D1C", VA = "0xDA5D1C")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xDA60C4", Offset = "0xDA60C4", VA = "0xDA60C4")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200020C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C11C", Offset = "0x62C11C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000119")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C5F")]
				[Address(RVA = "0xDA6EE0", Offset = "0xDA6EE0", VA = "0xDA6EE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C61")]
				[Address(RVA = "0xDA6F50", Offset = "0xDA6F50", VA = "0xDA6F50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0xDA6BC0", Offset = "0xDA6BC0", VA = "0xDA6BC0")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0xDA6CBC", Offset = "0xDA6CBC", VA = "0xDA6CBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0xDA6CC0", Offset = "0xDA6CC0", VA = "0xDA6CC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C60")]
			[Address(RVA = "0xDA6EE8", Offset = "0xDA6EE8", VA = "0xDA6EE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A19")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000A1A")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xDA6168", Offset = "0xDA6168", VA = "0xDA6168")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xDA623C", Offset = "0xDA623C", VA = "0xDA623C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xDA62F0", Offset = "0xDA62F0", VA = "0xDA62F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xDA6438", Offset = "0xDA6438", VA = "0xDA6438")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xDA65C4", Offset = "0xDA65C4", VA = "0xDA65C4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xDA67A4", Offset = "0xDA67A4", VA = "0xDA67A4")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xDA6ACC", Offset = "0xDA6ACC", VA = "0xDA6ACC")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xDA695C", Offset = "0xDA695C", VA = "0xDA695C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xDA6970", Offset = "0xDA6970", VA = "0xDA6970")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xDA6B4C", Offset = "0xDA6B4C", VA = "0xDA6B4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632714", Offset = "0x632714")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xDA6BEC", Offset = "0xDA6BEC", VA = "0xDA6BEC")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170000B8")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000853")]
			[Address(RVA = "0xDA6F58", Offset = "0xDA6F58", VA = "0xDA6F58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xDA6F68", Offset = "0xDA6F68", VA = "0xDA6F68", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xDA6F70", Offset = "0xDA6F70", VA = "0xDA6F70", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xDA753C", Offset = "0xDA753C", VA = "0xDA753C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000A2D")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000A2E")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6300F0", Offset = "0x6300F0")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170000B9")]
		public float Distance
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0xDA6FC0", Offset = "0xDA6FC0", VA = "0xDA6FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632778", Offset = "0x632778")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000858")]
			[Address(RVA = "0xDA6FC8", Offset = "0xDA6FC8", VA = "0xDA6FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632788", Offset = "0x632788")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public float Scale
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0xDA7634", Offset = "0xDA7634", VA = "0xDA7634")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600085A")]
			[Address(RVA = "0xDA763C", Offset = "0xDA763C", VA = "0xDA763C")]
			set
			{
			}
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xDA6F6C", Offset = "0xDA6F6C", VA = "0xDA6F6C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xDA7644", Offset = "0xDA7644", VA = "0xDA7644")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xDA6FD0", Offset = "0xDA6FD0", VA = "0xDA6FD0")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xDA73BC", Offset = "0xDA73BC", VA = "0xDA73BC")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600085F")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xDA75AC", Offset = "0xDA75AC", VA = "0xDA75AC")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200020D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C12C", Offset = "0x62C12C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700011B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C65")]
				[Address(RVA = "0xDA8274", Offset = "0xDA8274", VA = "0xDA8274", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C67")]
				[Address(RVA = "0xDA82E4", Offset = "0xDA82E4", VA = "0xDA82E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C62")]
			[Address(RVA = "0xDA7DB8", Offset = "0xDA7DB8", VA = "0xDA7DB8")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xDA7FA0", Offset = "0xDA7FA0", VA = "0xDA7FA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C64")]
			[Address(RVA = "0xDA7FA4", Offset = "0xDA7FA4", VA = "0xDA7FA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C66")]
			[Address(RVA = "0xDA827C", Offset = "0xDA827C", VA = "0xDA827C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xDA78F8", Offset = "0xDA78F8", VA = "0xDA78F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xDA7954", Offset = "0xDA7954", VA = "0xDA7954")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xDA7A60", Offset = "0xDA7A60", VA = "0xDA7A60")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xDA7C10", Offset = "0xDA7C10", VA = "0xDA7C10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xDA7ACC", Offset = "0xDA7ACC", VA = "0xDA7ACC")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xDA7D20", Offset = "0xDA7D20", VA = "0xDA7D20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632798", Offset = "0x632798")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xDA7DE4", Offset = "0xDA7DE4", VA = "0xDA7DE4")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xDA7EAC", Offset = "0xDA7EAC", VA = "0xDA7EAC")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xDA7F40", Offset = "0xDA7F40", VA = "0xDA7F40")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200020E")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000E31")]
			Start,
			[Token(Token = "0x4000E32")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000E33")]
			Stop
		}

		[Token(Token = "0x200020F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C13C", Offset = "0x62C13C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700011D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C6B")]
				[Address(RVA = "0xDA8E00", Offset = "0xDA8E00", VA = "0xDA8E00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C6D")]
				[Address(RVA = "0xDA8E70", Offset = "0xDA8E70", VA = "0xDA8E70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C68")]
			[Address(RVA = "0xDA860C", Offset = "0xDA860C", VA = "0xDA860C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000C69")]
			[Address(RVA = "0xDA8AB4", Offset = "0xDA8AB4", VA = "0xDA8AB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0xDA8AB8", Offset = "0xDA8AB8", VA = "0xDA8AB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0xDA8E08", Offset = "0xDA8E08", VA = "0xDA8E08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A41")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000A42")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000A43")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000A44")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630150", Offset = "0x630150")]
		protected float _initialSpeed;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xDA82EC", Offset = "0xDA82EC", VA = "0xDA82EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xDA8484", Offset = "0xDA8484", VA = "0xDA8484")]
		private void Update()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xDA8490", Offset = "0xDA8490", VA = "0xDA8490", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xD974B4", Offset = "0xD974B4", VA = "0xD974B4")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xDA83E8", Offset = "0xDA83E8", VA = "0xDA83E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6327FC", Offset = "0x6327FC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xDA8638", Offset = "0xDA8638", VA = "0xDA8638")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xDA8598", Offset = "0xDA8598", VA = "0xDA8598")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xD97558", Offset = "0xD97558", VA = "0xD97558")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xD9766C", Offset = "0xD9766C", VA = "0xD9766C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xDA88BC", Offset = "0xDA88BC", VA = "0xDA88BC")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xDA89C0", Offset = "0xDA89C0", VA = "0xDA89C0")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xD97780", Offset = "0xD97780", VA = "0xD97780")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xD978A8", Offset = "0xD978A8", VA = "0xD978A8")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xD979E4", Offset = "0xD979E4", VA = "0xD979E4")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xDA8A48", Offset = "0xDA8A48", VA = "0xDA8A48")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170000BB")]
		public float TrackLength
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0xDA7728", Offset = "0xDA7728", VA = "0xDA7728")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600087B")]
			[Address(RVA = "0xDA8E78", Offset = "0xDA8E78", VA = "0xDA8E78")]
			private set
			{
			}
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xDA8E80", Offset = "0xDA8E80", VA = "0xDA8E80")]
		private void Awake()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xDA7730", Offset = "0xDA7730", VA = "0xDA7730")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xDA8E84", Offset = "0xDA8E84", VA = "0xDA8E84")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xDA9118", Offset = "0xDA9118", VA = "0xDA9118")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xDA926C", Offset = "0xDA926C", VA = "0xDA926C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class Pose
	{
		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xDA2334", Offset = "0xDA2334", VA = "0xDA2334")]
		public Pose()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xDA23E0", Offset = "0xDA23E0", VA = "0xDA23E0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C14C", Offset = "0x62C14C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700011F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C71")]
				[Address(RVA = "0xD01834", Offset = "0xD01834", VA = "0xD01834", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000120")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C73")]
				[Address(RVA = "0xD018A4", Offset = "0xD018A4", VA = "0xD018A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C6E")]
			[Address(RVA = "0xD015D8", Offset = "0xD015D8", VA = "0xD015D8")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0xD01604", Offset = "0xD01604", VA = "0xD01604", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C70")]
			[Address(RVA = "0xD01608", Offset = "0xD01608", VA = "0xD01608", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C72")]
			[Address(RVA = "0xD0183C", Offset = "0xD0183C", VA = "0xD0183C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000211")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C15C", Offset = "0x62C15C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000121")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C77")]
				[Address(RVA = "0xD019D0", Offset = "0xD019D0", VA = "0xD019D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000122")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C79")]
				[Address(RVA = "0xD01A40", Offset = "0xD01A40", VA = "0xD01A40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xD018AC", Offset = "0xD018AC", VA = "0xD018AC")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000C75")]
			[Address(RVA = "0xD018D8", Offset = "0xD018D8", VA = "0xD018D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xD018DC", Offset = "0xD018DC", VA = "0xD018DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C78")]
			[Address(RVA = "0xD019D8", Offset = "0xD019D8", VA = "0xD019D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A67")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x630338", Offset = "0x630338")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170000BC")]
		public bool IsMoving
		{
			[Token(Token = "0x6000883")]
			[Address(RVA = "0xDA9288", Offset = "0xDA9288", VA = "0xDA9288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632860", Offset = "0x632860")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000884")]
			[Address(RVA = "0xDA9290", Offset = "0xDA9290", VA = "0xDA9290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632870", Offset = "0x632870")]
			private set
			{
			}
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xDA929C", Offset = "0xDA929C", VA = "0xDA929C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xDA92E0", Offset = "0xDA92E0", VA = "0xDA92E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xDA9458", Offset = "0xDA9458", VA = "0xDA9458")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xDA94C0", Offset = "0xDA94C0", VA = "0xDA94C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632880", Offset = "0x632880")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xDA9558", Offset = "0xDA9558", VA = "0xDA9558")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6328E4", Offset = "0x6328E4")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xDA9624", Offset = "0xDA9624", VA = "0xDA9624")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xDA96C8", Offset = "0xDA96C8", VA = "0xDA96C8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xD01A48", Offset = "0xD01A48", VA = "0xD01A48")]
		private void Awake()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xD01AC8", Offset = "0xD01AC8", VA = "0xD01AC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xD01B98", Offset = "0xD01B98", VA = "0xD01B98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xD01CB0", Offset = "0xD01CB0", VA = "0xD01CB0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xD01D88", Offset = "0xD01D88", VA = "0xD01D88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xD01E9C", Offset = "0xD01E9C", VA = "0xD01E9C")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000A78")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000A79")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000A7A")]
		EUDT_None,
		[Token(Token = "0x4000A7B")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000152")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000212")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C16C", Offset = "0x62C16C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000123")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C7D")]
				[Address(RVA = "0xDA1618", Offset = "0xDA1618", VA = "0xDA1618", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000124")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C7F")]
				[Address(RVA = "0xDA1688", Offset = "0xDA1688", VA = "0xDA1688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0xDA0B24", Offset = "0xDA0B24", VA = "0xDA0B24")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0xDA131C", Offset = "0xDA131C", VA = "0xDA131C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0xDA1320", Offset = "0xDA1320", VA = "0xDA1320", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0xDA1620", Offset = "0xDA1620", VA = "0xDA1620", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000A7D")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000A7E")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000A7F")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x630378", Offset = "0x630378")]
		public GameObject mainCamera;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6303B0", Offset = "0x6303B0")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xD9FA94", Offset = "0xD9FA94", VA = "0xD9FA94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xDA0544", Offset = "0xDA0544", VA = "0xDA0544")]
		private void Update()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xDA06A0", Offset = "0xDA06A0", VA = "0xDA06A0")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xDA0820", Offset = "0xDA0820", VA = "0xDA0820")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xDA09A0", Offset = "0xDA09A0", VA = "0xDA09A0")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xDA0674", Offset = "0xDA0674", VA = "0xDA0674")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xDA0AB0", Offset = "0xDA0AB0", VA = "0xDA0AB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632948", Offset = "0x632948")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xDA0B50", Offset = "0xDA0B50", VA = "0xDA0B50")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xD9FEB4", Offset = "0xD9FEB4", VA = "0xD9FEB4")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xDA0CB4", Offset = "0xDA0CB4", VA = "0xDA0CB4")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xDA0B8C", Offset = "0xDA0B8C", VA = "0xDA0B8C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xDA10D4", Offset = "0xDA10D4", VA = "0xDA10D4")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xDA11B0", Offset = "0xDA11B0", VA = "0xDA11B0")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xDA122C", Offset = "0xDA122C", VA = "0xDA122C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6329AC", Offset = "0x6329AC")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xDA127C", Offset = "0xDA127C", VA = "0xDA127C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6329BC", Offset = "0x6329BC")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xDA12CC", Offset = "0xDA12CC", VA = "0xDA12CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6329CC", Offset = "0x6329CC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x62BD10", Offset = "0x62BD10")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000213")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C17C", Offset = "0x62C17C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x11E97D8", Offset = "0x11E97D8", VA = "0x11E97D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x11E97E0", Offset = "0x11E97E0", VA = "0x11E97E0")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000A94")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000A95")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000A96")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000A97")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000A98")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000A99")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000A9A")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000A9B")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000A9C")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000A9D")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000A9E")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x11E87E0", Offset = "0x11E87E0", VA = "0x11E87E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x11E8838", Offset = "0x11E8838", VA = "0x11E8838")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x11E8CE0", Offset = "0x11E8CE0", VA = "0x11E8CE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x11E8DAC", Offset = "0x11E8DAC", VA = "0x11E8DAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x11E8ECC", Offset = "0x11E8ECC", VA = "0x11E8ECC")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x11E92AC", Offset = "0x11E92AC", VA = "0x11E92AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x11E9444", Offset = "0x11E9444", VA = "0x11E9444")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x11E95F4", Offset = "0x11E95F4", VA = "0x11E95F4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x11E8F68", Offset = "0x11E8F68", VA = "0x11E8F68")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x11E9008", Offset = "0x11E9008", VA = "0x11E9008")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x11E8AA4", Offset = "0x11E8AA4", VA = "0x11E8AA4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x11E975C", Offset = "0x11E975C", VA = "0x11E975C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000AB1")]
		Default,
		[Token(Token = "0x4000AB2")]
		Generic,
		[Token(Token = "0x4000AB3")]
		PingPongBall,
		[Token(Token = "0x4000AB4")]
		Controller
	}
	[Token(Token = "0x2000155")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000BD")]
		public bool AllowPointing
		{
			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x11E974C", Offset = "0x11E974C", VA = "0x11E974C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BE")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x11E9754", Offset = "0x11E9754", VA = "0x11E9754")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BF")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x11E9744", Offset = "0x11E9744", VA = "0x11E9744")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x11E981C", Offset = "0x11E981C", VA = "0x11E981C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xD8BA04", Offset = "0xD8BA04", VA = "0xD8BA04")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xD8BCD0", Offset = "0xD8BCD0", VA = "0xD8BCD0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xD8BD40", Offset = "0xD8BD40", VA = "0xD8BD40")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xD8BD90", Offset = "0xD8BD90", VA = "0xD8BD90")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000157")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000ABC")]
		TRIANGLES,
		[Token(Token = "0x4000ABD")]
		QUADS
	}
	[Token(Token = "0x2000158")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000ABF")]
		ABSORPTION,
		[Token(Token = "0x4000AC0")]
		TRANSMISSION,
		[Token(Token = "0x4000AC1")]
		SCATTERING
	}
	[Token(Token = "0x2000159")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200015A")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000AC6")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000AC7")]
		public const string Tab = "    ";

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xD8C5D4", Offset = "0xD8C5D4", VA = "0xD8C5D4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6329DC", Offset = "0x6329DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6329DC", Offset = "0x6329DC")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xD8C65C", Offset = "0xD8C65C", VA = "0xD8C65C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x632A3C", Offset = "0x632A3C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x632A3C", Offset = "0x632A3C")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xD8C6F4", Offset = "0xD8C6F4", VA = "0xD8C6F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x632A9C", Offset = "0x632A9C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x632A9C", Offset = "0x632A9C")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xD8C77C", Offset = "0xD8C77C", VA = "0xD8C77C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x632AFC", Offset = "0x632AFC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x632AFC", Offset = "0x632AFC")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xD8C804", Offset = "0xD8C804", VA = "0xD8C804")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x632B5C", Offset = "0x632B5C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x632B5C", Offset = "0x632B5C")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class CAPI
	{
		[Token(Token = "0x2000214")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000215")]
		public enum Result
		{
			[Token(Token = "0x4000E4F")]
			Success = 0,
			[Token(Token = "0x4000E50")]
			Failure = -1000,
			[Token(Token = "0x4000E51")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000E52")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000E53")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000E54")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000E55")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000E56")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000E57")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000216")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0xD95104", Offset = "0xD95104", VA = "0xD95104")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000AC8")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000AD0")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xD8C904", Offset = "0xD8C904", VA = "0xD8C904")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xD8C9B4", Offset = "0xD8C9B4", VA = "0xD8C9B4")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xD8CB78", Offset = "0xD8CB78", VA = "0xD8CB78")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xD8CC58", Offset = "0xD8CC58", VA = "0xD8CC58")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xD8CCE8", Offset = "0xD8CCE8", VA = "0xD8CCE8")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xD8CD78", Offset = "0xD8CD78", VA = "0xD8CD78")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xD8CE18", Offset = "0xD8CE18", VA = "0xD8CE18")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xD8CF10", Offset = "0xD8CF10", VA = "0xD8CF10")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xD8CFB0", Offset = "0xD8CFB0", VA = "0xD8CFB0")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xD8D0A8", Offset = "0xD8D0A8", VA = "0xD8D0A8")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xD8D148", Offset = "0xD8D148", VA = "0xD8D148")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xD8D1E8", Offset = "0xD8D1E8", VA = "0xD8D1E8")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xD8D288", Offset = "0xD8D288", VA = "0xD8D288")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xD8D328", Offset = "0xD8D328", VA = "0xD8D328")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xD8D3D8", Offset = "0xD8D3D8", VA = "0xD8D3D8")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xD8D488", Offset = "0xD8D488", VA = "0xD8D488")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xD8D538", Offset = "0xD8D538", VA = "0xD8D538")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xD8D5D8", Offset = "0xD8D5D8", VA = "0xD8D5D8")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xD8D678", Offset = "0xD8D678", VA = "0xD8D678")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xD8D728", Offset = "0xD8D728", VA = "0xD8D728")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xD8D7D8", Offset = "0xD8D7D8", VA = "0xD8D7D8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xD8D888", Offset = "0xD8D888", VA = "0xD8D888")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xD8D928", Offset = "0xD8D928", VA = "0xD8D928")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xD8D9F0", Offset = "0xD8D9F0", VA = "0xD8D9F0")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xD8DA74", Offset = "0xD8DA74", VA = "0xD8DA74")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xD8DB34", Offset = "0xD8DB34", VA = "0xD8DB34")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xD8DC14", Offset = "0xD8DC14", VA = "0xD8DC14")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xD8DD04", Offset = "0xD8DD04", VA = "0xD8DD04")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xD8DDB4", Offset = "0xD8DDB4", VA = "0xD8DDB4")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xD8DE64", Offset = "0xD8DE64", VA = "0xD8DE64")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xD8DF14", Offset = "0xD8DF14", VA = "0xD8DF14")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xD8DFC4", Offset = "0xD8DFC4", VA = "0xD8DFC4")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xD8E074", Offset = "0xD8E074", VA = "0xD8E074")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xD8E114", Offset = "0xD8E114", VA = "0xD8E114")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xD8E254", Offset = "0xD8E254", VA = "0xD8E254")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xD8E1A4", Offset = "0xD8E1A4", VA = "0xD8E1A4")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xD8E448", Offset = "0xD8E448", VA = "0xD8E448")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xD8E580", Offset = "0xD8E580", VA = "0xD8E580")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60008E1")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xD8E620", Offset = "0xD8E620", VA = "0xD8E620")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xD8E890", Offset = "0xD8E890", VA = "0xD8E890")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xD8E930", Offset = "0xD8E930", VA = "0xD8E930")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xD8EA68", Offset = "0xD8EA68", VA = "0xD8EA68")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xD8EB08", Offset = "0xD8EB08", VA = "0xD8EB08")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xD8EC40", Offset = "0xD8EC40", VA = "0xD8EC40")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xD8ECE0", Offset = "0xD8ECE0", VA = "0xD8ECE0")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xD8EE18", Offset = "0xD8EE18", VA = "0xD8EE18")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xD8EEB8", Offset = "0xD8EEB8", VA = "0xD8EEB8")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xD8EFF0", Offset = "0xD8EFF0", VA = "0xD8EFF0")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xD8F090", Offset = "0xD8F090", VA = "0xD8F090")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xD8F130", Offset = "0xD8F130", VA = "0xD8F130")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xD8F1E8", Offset = "0xD8F1E8", VA = "0xD8F1E8")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xD8F288", Offset = "0xD8F288", VA = "0xD8F288")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xD8F444", Offset = "0xD8F444", VA = "0xD8F444")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xD8F560", Offset = "0xD8F560", VA = "0xD8F560")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xD8F3A4", Offset = "0xD8F3A4", VA = "0xD8F3A4")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xD8F600", Offset = "0xD8F600", VA = "0xD8F600")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xD8F6A0", Offset = "0xD8F6A0", VA = "0xD8F6A0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xD8F750", Offset = "0xD8F750", VA = "0xD8F750")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xD8F7F0", Offset = "0xD8F7F0", VA = "0xD8F7F0")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xD8F8A0", Offset = "0xD8F8A0", VA = "0xD8F8A0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xD8F940", Offset = "0xD8F940", VA = "0xD8F940")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xD8F9E0", Offset = "0xD8F9E0", VA = "0xD8F9E0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xD8FC0C", Offset = "0xD8FC0C", VA = "0xD8FC0C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xD8FCBC", Offset = "0xD8FCBC", VA = "0xD8FCBC")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xD8FE70", Offset = "0xD8FE70", VA = "0xD8FE70")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xD8FF28", Offset = "0xD8FF28", VA = "0xD8FF28")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xD90034", Offset = "0xD90034", VA = "0xD90034")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xD900D4", Offset = "0xD900D4", VA = "0xD900D4")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xD90174", Offset = "0xD90174", VA = "0xD90174")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000901")]
		[Address(RVA = "0xD9027C", Offset = "0xD9027C", VA = "0xD9027C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xD9031C", Offset = "0xD9031C", VA = "0xD9031C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000903")]
		[Address(RVA = "0xD90424", Offset = "0xD90424", VA = "0xD90424")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000904")]
		[Address(RVA = "0xD904C4", Offset = "0xD904C4", VA = "0xD904C4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000905")]
		[Address(RVA = "0xD90574", Offset = "0xD90574", VA = "0xD90574")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000906")]
		[Address(RVA = "0xD90624", Offset = "0xD90624", VA = "0xD90624")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000907")]
		[Address(RVA = "0xD906D4", Offset = "0xD906D4", VA = "0xD906D4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000908")]
		[Address(RVA = "0xD90774", Offset = "0xD90774", VA = "0xD90774")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000909")]
		[Address(RVA = "0xD9081C", Offset = "0xD9081C", VA = "0xD9081C")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600090A")]
		[Address(RVA = "0xD908C4", Offset = "0xD908C4", VA = "0xD908C4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600090B")]
		[Address(RVA = "0xD90964", Offset = "0xD90964", VA = "0xD90964")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xD90A04", Offset = "0xD90A04", VA = "0xD90A04")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600090D")]
		[Address(RVA = "0xD90AD8", Offset = "0xD90AD8", VA = "0xD90AD8")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600090E")]
		[Address(RVA = "0xD90B88", Offset = "0xD90B88", VA = "0xD90B88")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600090F")]
		[Address(RVA = "0xD90C38", Offset = "0xD90C38", VA = "0xD90C38")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000910")]
		[Address(RVA = "0xD90CD8", Offset = "0xD90CD8", VA = "0xD90CD8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000911")]
		[Address(RVA = "0xD90D78", Offset = "0xD90D78", VA = "0xD90D78")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000912")]
		[Address(RVA = "0xD90E18", Offset = "0xD90E18", VA = "0xD90E18")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000913")]
		[Address(RVA = "0xD90ED0", Offset = "0xD90ED0", VA = "0xD90ED0")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000914")]
		[Address(RVA = "0xD90F80", Offset = "0xD90F80", VA = "0xD90F80")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000915")]
		[Address(RVA = "0xD91030", Offset = "0xD91030", VA = "0xD91030")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000916")]
		[Address(RVA = "0xD910E0", Offset = "0xD910E0", VA = "0xD910E0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xD91198", Offset = "0xD91198", VA = "0xD91198")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000918")]
		[Address(RVA = "0xD91250", Offset = "0xD91250", VA = "0xD91250")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xD912F0", Offset = "0xD912F0", VA = "0xD912F0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xD91390", Offset = "0xD91390", VA = "0xD91390")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600091B")]
		[Address(RVA = "0xD91498", Offset = "0xD91498", VA = "0xD91498")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xD91538", Offset = "0xD91538", VA = "0xD91538")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xD91640", Offset = "0xD91640", VA = "0xD91640")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xD916E0", Offset = "0xD916E0", VA = "0xD916E0")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xD91808", Offset = "0xD91808", VA = "0xD91808")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xD918A8", Offset = "0xD918A8", VA = "0xD918A8")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xD91A50", Offset = "0xD91A50", VA = "0xD91A50")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000922")]
		[Address(RVA = "0xD91CD8", Offset = "0xD91CD8", VA = "0xD91CD8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000923")]
		[Address(RVA = "0xD919B0", Offset = "0xD919B0", VA = "0xD919B0")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000924")]
		[Address(RVA = "0xD91D88", Offset = "0xD91D88", VA = "0xD91D88")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000925")]
		[Address(RVA = "0xD91E28", Offset = "0xD91E28", VA = "0xD91E28")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000926")]
		[Address(RVA = "0xD91ED8", Offset = "0xD91ED8", VA = "0xD91ED8")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000927")]
		[Address(RVA = "0xD91F88", Offset = "0xD91F88", VA = "0xD91F88")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000928")]
		[Address(RVA = "0xD92038", Offset = "0xD92038", VA = "0xD92038")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000929")]
		[Address(RVA = "0xD920F8", Offset = "0xD920F8", VA = "0xD920F8")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600092A")]
		[Address(RVA = "0xD921B8", Offset = "0xD921B8", VA = "0xD921B8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x600092B")]
		[Address(RVA = "0xD92278", Offset = "0xD92278", VA = "0xD92278")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600092C")]
		[Address(RVA = "0xD92318", Offset = "0xD92318", VA = "0xD92318")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600092D")]
		[Address(RVA = "0xD923B8", Offset = "0xD923B8", VA = "0xD923B8")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600092E")]
		[Address(RVA = "0xD92458", Offset = "0xD92458", VA = "0xD92458")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600092F")]
		[Address(RVA = "0xD924F8", Offset = "0xD924F8", VA = "0xD924F8")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000930")]
		[Address(RVA = "0xD92598", Offset = "0xD92598", VA = "0xD92598")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000931")]
		[Address(RVA = "0xD926DC", Offset = "0xD926DC", VA = "0xD926DC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000932")]
		[Address(RVA = "0xD92794", Offset = "0xD92794", VA = "0xD92794")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xD92834", Offset = "0xD92834", VA = "0xD92834")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xD92898", Offset = "0xD92898", VA = "0xD92898")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000935")]
		[Address(RVA = "0xD929B4", Offset = "0xD929B4", VA = "0xD929B4")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xD92A64", Offset = "0xD92A64", VA = "0xD92A64")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000937")]
		[Address(RVA = "0xD92BA8", Offset = "0xD92BA8", VA = "0xD92BA8")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000938")]
		[Address(RVA = "0xD92C58", Offset = "0xD92C58", VA = "0xD92C58")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xD92D20", Offset = "0xD92D20", VA = "0xD92D20")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600093A")]
		[Address(RVA = "0xD93148", Offset = "0xD93148", VA = "0xD93148")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x600093B")]
		[Address(RVA = "0xD931E8", Offset = "0xD931E8", VA = "0xD931E8")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xD932A0", Offset = "0xD932A0", VA = "0xD932A0")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600093D")]
		[Address(RVA = "0xD93C04", Offset = "0xD93C04", VA = "0xD93C04")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x600093E")]
		[Address(RVA = "0xD93CA4", Offset = "0xD93CA4", VA = "0xD93CA4")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xD8C89C", Offset = "0xD8C89C", VA = "0xD8C89C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x632BBC", Offset = "0x632BBC")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000940")]
		[Address(RVA = "0xD93D5C", Offset = "0xD93D5C", VA = "0xD93D5C")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000941")]
		[Address(RVA = "0xD93E00", Offset = "0xD93E00", VA = "0xD93E00")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000942")]
		[Address(RVA = "0xD93EA0", Offset = "0xD93EA0", VA = "0xD93EA0")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000943")]
		[Address(RVA = "0xD93F40", Offset = "0xD93F40", VA = "0xD93F40")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xD93FE0", Offset = "0xD93FE0", VA = "0xD93FE0")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000945")]
		[Address(RVA = "0xD94C50", Offset = "0xD94C50", VA = "0xD94C50")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xD94CF0", Offset = "0xD94CF0", VA = "0xD94CF0")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000947")]
		[Address(RVA = "0xD95200", Offset = "0xD95200", VA = "0xD95200")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xD95074", Offset = "0xD95074", VA = "0xD95074")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xD95290", Offset = "0xD95290", VA = "0xD95290")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200015C")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x630468", Offset = "0x630468")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x11E14A4", Offset = "0x11E14A4", VA = "0x11E14A4")]
		private void Start()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x11E14A8", Offset = "0x11E14A8", VA = "0x11E14A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x11E15B0", Offset = "0x11E15B0", VA = "0x11E15B0")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6304B4", Offset = "0x6304B4")]
		public bool autoRetrigger;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6304EC", Offset = "0x6304EC")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630510", Offset = "0x630510")]
		public Transform[] playPositions;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x11D6A2C", Offset = "0x11D6A2C", VA = "0x11D6A2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x11D6BA8", Offset = "0x11D6BA8", VA = "0x11D6BA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x11D6E2C", Offset = "0x11D6E2C", VA = "0x11D6E2C")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x11D6C08", Offset = "0x11D6C08", VA = "0x11D6C08")]
		public void Play()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x11D6F94", Offset = "0x11D6F94", VA = "0x11D6F94")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x11D7128", Offset = "0x11D7128", VA = "0x11D7128")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000ADF")]
		Default,
		[Token(Token = "0x4000AE0")]
		Preload,
		[Token(Token = "0x4000AE1")]
		ManualPreload
	}
	[Token(Token = "0x200015F")]
	public enum Fade
	{
		[Token(Token = "0x4000AE3")]
		In,
		[Token(Token = "0x4000AE4")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public class SoundGroup
	{
		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630548", Offset = "0x630548")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x11E1384", Offset = "0x11E1384", VA = "0x11E1384")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x11E1418", Offset = "0x11E1418", VA = "0x11E1418")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x11DFB78", Offset = "0x11DFB78", VA = "0x11DFB78")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x11DFCB0", Offset = "0x11DFCB0", VA = "0x11DFCB0")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x11E0940", Offset = "0x11E0940", VA = "0x11E0940")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000161")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000217")]
		public enum Fade
		{
			[Token(Token = "0x4000E5A")]
			In,
			[Token(Token = "0x4000E5B")]
			Out
		}

		[Token(Token = "0x2000218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C18C", Offset = "0x62C18C")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x11DC350", Offset = "0x11DC350", VA = "0x11DC350")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x11DF4A8", Offset = "0x11DF4A8", VA = "0x11DF4A8")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000219")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C19C", Offset = "0x62C19C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x11DF40C", Offset = "0x11DF40C", VA = "0x11DF40C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x11DF414", Offset = "0x11DF414", VA = "0x11DF414")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630574", Offset = "0x630574")]
		public bool makePersistent;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6305AC", Offset = "0x6305AC")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6305E4", Offset = "0x6305E4")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63061C", Offset = "0x63061C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630654", Offset = "0x630654")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63068C", Offset = "0x63068C")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6306C4", Offset = "0x6306C4")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6306FC", Offset = "0x6306FC")]
		public bool verboseLogging;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630734", Offset = "0x630734")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63076C", Offset = "0x63076C")]
		public float volumeSoundFX;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6307A4", Offset = "0x6307A4")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000C0")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000959")]
			[Address(RVA = "0x11D71E4", Offset = "0x11D71E4", VA = "0x11D71E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		public static AudioManager Instance
		{
			[Token(Token = "0x600095A")]
			[Address(RVA = "0x11D72C8", Offset = "0x11D72C8", VA = "0x11D72C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public static float NearFallOff
		{
			[Token(Token = "0x600095B")]
			[Address(RVA = "0x11D7330", Offset = "0x11D7330", VA = "0x11D7330")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C3")]
		public static float FarFallOff
		{
			[Token(Token = "0x600095C")]
			[Address(RVA = "0x11D73A8", Offset = "0x11D73A8", VA = "0x11D73A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C4")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x600095D")]
			[Address(RVA = "0x11D7420", Offset = "0x11D7420", VA = "0x11D7420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x600095E")]
			[Address(RVA = "0x11D7498", Offset = "0x11D7498", VA = "0x11D7498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0x11D7510", Offset = "0x11D7510", VA = "0x11D7510")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x11D9B80", Offset = "0x11D9B80", VA = "0x11D9B80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x11D7588", Offset = "0x11D7588", VA = "0x11D7588")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x11D77C0", Offset = "0x11D77C0", VA = "0x11D77C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x11D758C", Offset = "0x11D758C", VA = "0x11D758C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x11D8974", Offset = "0x11D8974", VA = "0x11D8974")]
		private void Update()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x11D7918", Offset = "0x11D7918", VA = "0x11D7918")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x11D9108", Offset = "0x11D9108", VA = "0x11D9108")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x11D92B8", Offset = "0x11D92B8", VA = "0x11D92B8")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x11D9470", Offset = "0x11D9470", VA = "0x11D9470")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x11D9578", Offset = "0x11D9578", VA = "0x11D9578")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x11D963C", Offset = "0x11D963C", VA = "0x11D963C")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x11D9BE8", Offset = "0x11D9BE8", VA = "0x11D9BE8")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x11D9C64", Offset = "0x11D9C64", VA = "0x11D9C64")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x11D8104", Offset = "0x11D8104", VA = "0x11D8104")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x11D8978", Offset = "0x11D8978", VA = "0x11D8978")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x11D9F54", Offset = "0x11D9F54", VA = "0x11D9F54")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x11DA050", Offset = "0x11DA050", VA = "0x11DA050")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x11DA150", Offset = "0x11DA150", VA = "0x11DA150")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x11D9DD4", Offset = "0x11D9DD4", VA = "0x11D9DD4")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x11DA330", Offset = "0x11DA330", VA = "0x11DA330")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x11DA4B8", Offset = "0x11DA4B8", VA = "0x11DA4B8")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x11DA6F0", Offset = "0x11DA6F0", VA = "0x11DA6F0")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x11D6EC4", Offset = "0x11D6EC4", VA = "0x11D6EC4")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x11D7058", Offset = "0x11D7058", VA = "0x11D7058")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x11DA8CC", Offset = "0x11DA8CC", VA = "0x11DA8CC")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x11DA9B0", Offset = "0x11DA9B0", VA = "0x11DA9B0")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x11DAA7C", Offset = "0x11DAA7C", VA = "0x11DAA7C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x11DABA8", Offset = "0x11DABA8", VA = "0x11DABA8")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x11DAC68", Offset = "0x11DAC68", VA = "0x11DAC68")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x11DAD80", Offset = "0x11DAD80", VA = "0x11DAD80")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x11DBB68", Offset = "0x11DBB68", VA = "0x11DBB68")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x11DC358", Offset = "0x11DC358", VA = "0x11DC358")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x11DC504", Offset = "0x11DC504", VA = "0x11DC504")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x11DD6E8", Offset = "0x11DD6E8", VA = "0x11DD6E8")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x11DAF54", Offset = "0x11DAF54", VA = "0x11DAF54")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x11DD80C", Offset = "0x11DD80C", VA = "0x11DD80C")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x11DD904", Offset = "0x11DD904", VA = "0x11DD904")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x11DDA00", Offset = "0x11DDA00", VA = "0x11DDA00")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x11DDEA8", Offset = "0x11DDEA8", VA = "0x11DDEA8")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x11DE0F8", Offset = "0x11DE0F8", VA = "0x11DE0F8")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x11DE224", Offset = "0x11DE224", VA = "0x11DE224")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x11DE414", Offset = "0x11DE414", VA = "0x11DE414")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x11DE4F0", Offset = "0x11DE4F0", VA = "0x11DE4F0")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x11DE640", Offset = "0x11DE640", VA = "0x11DE640")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x11DEAFC", Offset = "0x11DEAFC", VA = "0x11DEAFC")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000B0C")]
		None = -1,
		[Token(Token = "0x4000B0D")]
		Reserved,
		[Token(Token = "0x4000B0E")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x11DF5A8", Offset = "0x11DF5A8", VA = "0x11DF5A8")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x11DF54C", Offset = "0x11DF54C", VA = "0x11DF54C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200021A")]
		public enum FadeState
		{
			[Token(Token = "0x4000E60")]
			Null,
			[Token(Token = "0x4000E61")]
			FadingIn,
			[Token(Token = "0x4000E62")]
			FadingOut,
			[Token(Token = "0x4000E63")]
			Ducking
		}

		[Token(Token = "0x200021B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C1AC", Offset = "0x62C1AC")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000125")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C91")]
				[Address(RVA = "0x11E0270", Offset = "0x11E0270", VA = "0x11E0270", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000126")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C93")]
				[Address(RVA = "0x11E02E0", Offset = "0x11E02E0", VA = "0x11E02E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x11DFEAC", Offset = "0x11DFEAC", VA = "0x11DFEAC")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x11E0158", Offset = "0x11E0158", VA = "0x11E0158", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x11E015C", Offset = "0x11E015C", VA = "0x11E015C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x11E0278", Offset = "0x11E0278", VA = "0x11E0278", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200021C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C1BC", Offset = "0x62C1BC")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000127")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C97")]
				[Address(RVA = "0x11E07DC", Offset = "0x11E07DC", VA = "0x11E07DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000128")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C99")]
				[Address(RVA = "0x11E084C", Offset = "0x11E084C", VA = "0x11E084C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x11E00E8", Offset = "0x11E00E8", VA = "0x11E00E8")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x11E0638", Offset = "0x11E0638", VA = "0x11E0638", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x11E063C", Offset = "0x11E063C", VA = "0x11E063C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x11E07E4", Offset = "0x11E07E4", VA = "0x11E07E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200021D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C1CC", Offset = "0x62C1CC")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000129")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C9D")]
				[Address(RVA = "0x11E05C0", Offset = "0x11E05C0", VA = "0x11E05C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C9F")]
				[Address(RVA = "0x11E0630", Offset = "0x11E0630", VA = "0x11E0630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x11E0114", Offset = "0x11E0114", VA = "0x11E0114")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x11E02E8", Offset = "0x11E02E8", VA = "0x11E02E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x11E02EC", Offset = "0x11E02EC", VA = "0x11E02EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x11E05C8", Offset = "0x11E05C8", VA = "0x11E05C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000C8")]
		public float volume
		{
			[Token(Token = "0x6000990")]
			[Address(RVA = "0x11DD6B8", Offset = "0x11DD6B8", VA = "0x11DD6B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x11DF648", Offset = "0x11DF648", VA = "0x11DF648")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public float pitch
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x11DF688", Offset = "0x11DF688", VA = "0x11DF688")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x11DF6B8", Offset = "0x11DF6B8", VA = "0x11DF6B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public AudioClip clip
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0x11DF6F8", Offset = "0x11DF6F8", VA = "0x11DF6F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x11DF728", Offset = "0x11DF728", VA = "0x11DF728")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public float time
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x11DF760", Offset = "0x11DF760", VA = "0x11DF760")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x11DAD40", Offset = "0x11DAD40", VA = "0x11DAD40")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public float length
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x11DF790", Offset = "0x11DF790", VA = "0x11DF790")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CD")]
		public bool loop
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x11DF868", Offset = "0x11DF868", VA = "0x11DF868")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600099A")]
			[Address(RVA = "0x11DF898", Offset = "0x11DF898", VA = "0x11DF898")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public bool mute
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0x11DF8D0", Offset = "0x11DF8D0", VA = "0x11DF8D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600099C")]
			[Address(RVA = "0x11DF900", Offset = "0x11DF900", VA = "0x11DF900")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x11DF938", Offset = "0x11DF938", VA = "0x11DF938")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x11DF968", Offset = "0x11DF968", VA = "0x11DF968")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public bool isPlaying
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x11DF9A0", Offset = "0x11DF9A0", VA = "0x11DF9A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x11DF9D0", Offset = "0x11DF9D0", VA = "0x11DF9D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x11DD6A4", Offset = "0x11DD6A4", VA = "0x11DD6A4")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x11DD8FC", Offset = "0x11DD8FC", VA = "0x11DD8FC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x11DD9F8", Offset = "0x11DD9F8", VA = "0x11DD9F8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x11D9CE4", Offset = "0x11D9CE4", VA = "0x11D9CE4")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x11D9CDC", Offset = "0x11D9CDC", VA = "0x11D9CDC")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x11DE364", Offset = "0x11DE364", VA = "0x11DE364")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x11D9EEC", Offset = "0x11D9EEC", VA = "0x11D9EEC")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x11DFC08", Offset = "0x11DFC08", VA = "0x11DFC08")]
		public void Play()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x11DFC70", Offset = "0x11DFC70", VA = "0x11DFC70")]
		public void Pause()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x11D9CEC", Offset = "0x11D9CEC", VA = "0x11D9CEC")]
		public void Stop()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x11DFD40", Offset = "0x11DFD40", VA = "0x11DFD40")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x11DDD98", Offset = "0x11DDD98", VA = "0x11DDD98")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x11DE014", Offset = "0x11DE014", VA = "0x11DE014")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x11DA2E0", Offset = "0x11DA2E0", VA = "0x11DA2E0")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x11DFDB4", Offset = "0x11DFDB4", VA = "0x11DFDB4")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x11DFDE0", Offset = "0x11DFDE0", VA = "0x11DFDE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632C20", Offset = "0x632C20")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x11DFED8", Offset = "0x11DFED8", VA = "0x11DFED8")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x11DA7C8", Offset = "0x11DA7C8", VA = "0x11DA7C8")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x11DA84C", Offset = "0x11DA84C", VA = "0x11DA84C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x11DA644", Offset = "0x11DA644", VA = "0x11DA644")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x11DA408", Offset = "0x11DA408", VA = "0x11DA408")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x11DFF50", Offset = "0x11DFF50", VA = "0x11DFF50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632C84", Offset = "0x632C84")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x11DFFFC", Offset = "0x11DFFFC", VA = "0x11DFFFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x632CE8", Offset = "0x632CE8")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x11E0140", Offset = "0x11E0140", VA = "0x11E0140")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000B25")]
		Random,
		[Token(Token = "0x4000B26")]
		Sequential
	}
	[Token(Token = "0x2000167")]
	public enum FreqHint
	{
		[Token(Token = "0x4000B28")]
		None,
		[Token(Token = "0x4000B29")]
		Wide,
		[Token(Token = "0x4000B2A")]
		Narrow
	}
	[Token(Token = "0x2000168")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000B2C")]
		VeryLow = -2,
		[Token(Token = "0x4000B2D")]
		Low,
		[Token(Token = "0x4000B2E")]
		Default,
		[Token(Token = "0x4000B2F")]
		High,
		[Token(Token = "0x4000B30")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000169")]
	public class OSPProps
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x63088C", Offset = "0x63088C")]
		public bool enableSpatialization;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6308C4", Offset = "0x6308C4")]
		public bool useFastOverride;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6308FC", Offset = "0x6308FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6308FC", Offset = "0x6308FC")]
		public float gain;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630950", Offset = "0x630950")]
		public bool enableInvSquare;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630988", Offset = "0x630988")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630988", Offset = "0x630988")]
		public float volumetric;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6309E0", Offset = "0x6309E0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6309E0", Offset = "0x6309E0")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x11DF5B8", Offset = "0x11DF5B8", VA = "0x11DF5B8")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016A")]
	public class SoundFX
	{
		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630A40", Offset = "0x630A40")]
		public string name;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630A78", Offset = "0x630A78")]
		public SoundFXNext playback;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630AB0", Offset = "0x630AB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630AB0", Offset = "0x630AB0")]
		public float volume;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630B04", Offset = "0x630B04")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x630B04", Offset = "0x630B04")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630B60", Offset = "0x630B60")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x630B60", Offset = "0x630B60")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630BC0", Offset = "0x630BC0")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630BF8", Offset = "0x630BF8")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630C30", Offset = "0x630C30")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630C68", Offset = "0x630C68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630C68", Offset = "0x630C68")]
		public float spread;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630CC0", Offset = "0x630CC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x630CC0", Offset = "0x630CC0")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630D14", Offset = "0x630D14")]
		public SoundPriority priority;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630D4C", Offset = "0x630D4C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x630D4C", Offset = "0x630D4C")]
		public Vector2 delay;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630DA8", Offset = "0x630DA8")]
		public bool looping;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x630DE0", Offset = "0x630DE0")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000D1")]
		public int Length
		{
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x11E0854", Offset = "0x11E0854", VA = "0x11E0854")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D2")]
		public bool IsValid
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x11E0880", Offset = "0x11E0880", VA = "0x11E0880")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D3")]
		public SoundGroup Group
		{
			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x11DD69C", Offset = "0x11DD69C", VA = "0x11DD69C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009BE")]
			[Address(RVA = "0x11D9100", Offset = "0x11D9100", VA = "0x11D9100")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x11DD5A0", Offset = "0x11DD5A0", VA = "0x11DD5A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D5")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x11DD5D4", Offset = "0x11DD5D4", VA = "0x11DD5D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x11DEE34", Offset = "0x11DEE34", VA = "0x11DEE34")]
		public SoundFX()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x11DD428", Offset = "0x11DD428", VA = "0x11DD428")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x11DD5F8", Offset = "0x11DD5F8", VA = "0x11DD5F8")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x11DD5AC", Offset = "0x11DD5AC", VA = "0x11DD5AC")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x11E0960", Offset = "0x11E0960", VA = "0x11E0960")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x11DD5EC", Offset = "0x11DD5EC", VA = "0x11DD5EC")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x11E0AB0", Offset = "0x11E0AB0", VA = "0x11E0AB0")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x11E0B8C", Offset = "0x11E0B8C", VA = "0x11E0B8C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x11E0CA0", Offset = "0x11E0CA0", VA = "0x11E0CA0")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x11E0D2C", Offset = "0x11E0D2C", VA = "0x11E0D2C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x11E0DC0", Offset = "0x11E0DC0", VA = "0x11E0DC0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x11E0E4C", Offset = "0x11E0E4C", VA = "0x11E0E4C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x11E0ED8", Offset = "0x11E0ED8", VA = "0x11E0ED8")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016B")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000D6")]
		public SoundFX soundFX
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x11E0F50", Offset = "0x11E0F50", VA = "0x11E0F50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		public string name
		{
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x11E1044", Offset = "0x11E1044", VA = "0x11E1044")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x11E104C", Offset = "0x11E104C", VA = "0x11E104C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public int Length
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0x11E1054", Offset = "0x11E1054", VA = "0x11E1054")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D9")]
		public bool IsValid
		{
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0x11E10A4", Offset = "0x11E10A4", VA = "0x11E10A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x11E0F80", Offset = "0x11E0F80", VA = "0x11E0F80")]
		private void Init()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x11E10E4", Offset = "0x11E10E4", VA = "0x11E10E4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x11E1124", Offset = "0x11E1124", VA = "0x11E1124")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x11E116C", Offset = "0x11E116C", VA = "0x11E116C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x11D6E3C", Offset = "0x11D6E3C", VA = "0x11D6E3C")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x11E11BC", Offset = "0x11E11BC", VA = "0x11E11BC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x11E1204", Offset = "0x11E1204", VA = "0x11E1204")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x11E125C", Offset = "0x11E125C", VA = "0x11E125C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x11E129C", Offset = "0x11E129C", VA = "0x11E129C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x11E12E4", Offset = "0x11E12E4", VA = "0x11E12E4")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x11E1324", Offset = "0x11E1324", VA = "0x11E1324")]
		public SoundFXRef()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62BD74", Offset = "0x62BD74")]
	public class DOTweenAnimation : ABSAnimationComponent
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float delay;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float duration;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Ease easeType;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve easeCurve;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LoopType loopType;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int loops;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string id;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isRelative;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool isFrom;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool isIndependentUpdate;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool autoKill;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool isActive;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool isValid;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Component target;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public DOTweenAnimationType animationType;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public TargetType targetType;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TargetType forcedTargetType;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool autoPlay;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		public bool useTargetAsV3;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float endValueFloat;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector3 endValueV3;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector2 endValueV2;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Color endValueColor;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string endValueString;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Rect endValueRect;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform endValueTransform;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool optionalBool0;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float optionalFloat0;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int optionalInt0;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public RotateMode optionalRotationMode;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public ScrambleMode optionalScrambleMode;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string optionalString;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _tweenCreated;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int _playCount;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xB39FD4", Offset = "0xB39FD4", VA = "0xB39FD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xB3BF20", Offset = "0xB3BF20", VA = "0xB3BF20")]
		private void Start()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xB3BF54", Offset = "0xB3BF54", VA = "0xB3BF54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xB3A024", Offset = "0xB3A024", VA = "0xB3A024")]
		public void CreateTween()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xB3C188", Offset = "0xB3C188", VA = "0xB3C188", Slot = "4")]
		public override void DOPlay()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xB3C204", Offset = "0xB3C204", VA = "0xB3C204", Slot = "5")]
		public override void DOPlayBackwards()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xB3C280", Offset = "0xB3C280", VA = "0xB3C280", Slot = "6")]
		public override void DOPlayForward()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xB3C2FC", Offset = "0xB3C2FC", VA = "0xB3C2FC", Slot = "7")]
		public override void DOPause()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xB3C378", Offset = "0xB3C378", VA = "0xB3C378", Slot = "8")]
		public override void DOTogglePause()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xB3C3F4", Offset = "0xB3C3F4", VA = "0xB3C3F4", Slot = "9")]
		public override void DORewind()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xB3C52C", Offset = "0xB3C52C", VA = "0xB3C52C", Slot = "10")]
		public override void DORestart(bool fromHere = false)
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xB3C9C8", Offset = "0xB3C9C8", VA = "0xB3C9C8", Slot = "11")]
		public override void DOComplete()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xB3CA48", Offset = "0xB3CA48", VA = "0xB3CA48", Slot = "12")]
		public override void DOKill()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xB3CAD0", Offset = "0xB3CAD0", VA = "0xB3CAD0")]
		public void DOPlayById(string id)
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xB3CB5C", Offset = "0xB3CB5C", VA = "0xB3CB5C")]
		public void DOPlayAllById(string id)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xB3CBC4", Offset = "0xB3CBC4", VA = "0xB3CBC4")]
		public void DOPlayNext()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xB3CCFC", Offset = "0xB3CCFC", VA = "0xB3CCFC")]
		public void DORewindAndPlayNext()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xB3CD8C", Offset = "0xB3CD8C", VA = "0xB3CD8C")]
		public void DORestartById(string id)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xB3CE24", Offset = "0xB3CE24", VA = "0xB3CE24")]
		public void DORestartAllById(string id)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xB3CEA4", Offset = "0xB3CEA4", VA = "0xB3CEA4")]
		public List<Tween> GetTweens()
		{
			return null;
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xB3BF98", Offset = "0xB3BF98", VA = "0xB3BF98")]
		public static TargetType TypeToDOTargetType(Type t)
		{
			return default(TargetType);
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xB3C620", Offset = "0xB3C620", VA = "0xB3C620")]
		private void ReEvaluateRelativeTween()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xB3CF24", Offset = "0xB3CF24", VA = "0xB3CF24")]
		public DOTweenAnimation()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xB3D12C", Offset = "0xB3D12C", VA = "0xB3D12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x632D4C", Offset = "0x632D4C")]
		private void <CreateTween>b__37_0()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public static class DOTweenAnimationExtensions
	{
		[Token(Token = "0x60009F5")]
		public static bool IsSameOrSubclassOf<T>(this Component t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200016E")]
	public static class ShortcutExtensionsTextMeshPro
	{
		[Token(Token = "0x200021E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C1DC", Offset = "0x62C1DC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro target;

			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0xB3D290", Offset = "0xB3D290", VA = "0xB3D290")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0xB3DE64", Offset = "0xB3DE64", VA = "0xB3DE64")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xB3DE9C", Offset = "0xB3DE9C", VA = "0xB3DE9C")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200021F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C1EC", Offset = "0x62C1EC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro target;

			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xB3D404", Offset = "0xB3D404", VA = "0xB3D404")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0xB3DF04", Offset = "0xB3DF04", VA = "0xB3DF04")]
			internal Color <DOFaceColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0xB3DF40", Offset = "0xB3DF40", VA = "0xB3DF40")]
			internal void <DOFaceColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C1FC", Offset = "0x62C1FC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro target;

			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0xB3D578", Offset = "0xB3D578", VA = "0xB3D578")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0xB3DF80", Offset = "0xB3DF80", VA = "0xB3DF80")]
			internal Color <DOOutlineColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0xB3DFBC", Offset = "0xB3DFBC", VA = "0xB3DFBC")]
			internal void <DOOutlineColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000221")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C20C", Offset = "0x62C20C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro target;

			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0xB3D7A0", Offset = "0xB3D7A0", VA = "0xB3D7A0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xB3DFFC", Offset = "0xB3DFFC", VA = "0xB3DFFC")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0xB3E034", Offset = "0xB3E034", VA = "0xB3E034")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000222")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C21C", Offset = "0x62C21C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro target;

			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xB3D8DC", Offset = "0xB3D8DC", VA = "0xB3D8DC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0xB3E09C", Offset = "0xB3E09C", VA = "0xB3E09C")]
			internal Color <DOFaceFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xB3E0D8", Offset = "0xB3E0D8", VA = "0xB3E0D8")]
			internal void <DOFaceFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000223")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C22C", Offset = "0x62C22C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xB3DA78", Offset = "0xB3DA78", VA = "0xB3DA78")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0xB3E118", Offset = "0xB3E118", VA = "0xB3E118")]
			internal Vector3 <DOScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0xB3E148", Offset = "0xB3E148", VA = "0xB3E148")]
			internal void <DOScale>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000224")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C23C", Offset = "0x62C23C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro target;

			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0xB3DBB4", Offset = "0xB3DBB4", VA = "0xB3DBB4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0xB3E1A0", Offset = "0xB3E1A0", VA = "0xB3E1A0")]
			internal float <DOFontSize>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0xB3E1D0", Offset = "0xB3E1D0", VA = "0xB3E1D0")]
			internal void <DOFontSize>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000225")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C24C", Offset = "0x62C24C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro target;

			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0xB3DCF0", Offset = "0xB3DCF0", VA = "0xB3DCF0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xB3E210", Offset = "0xB3E210", VA = "0xB3E210")]
			internal int <DOMaxVisibleCharacters>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0xB3E240", Offset = "0xB3E240", VA = "0xB3E240")]
			internal void <DOMaxVisibleCharacters>b__1(int x)
			{
			}
		}

		[Token(Token = "0x2000226")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C25C", Offset = "0x62C25C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro target;

			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0xB3DE5C", Offset = "0xB3DE5C", VA = "0xB3DE5C")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0xB3E278", Offset = "0xB3E278", VA = "0xB3E278")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xB3E2A8", Offset = "0xB3E2A8", VA = "0xB3E2A8")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xB3D134", Offset = "0xB3D134", VA = "0xB3D134")]
		public static Tweener DOColor(this TextMeshPro target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xB3D298", Offset = "0xB3D298", VA = "0xB3D298")]
		public static Tweener DOFaceColor(this TextMeshPro target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xB3D40C", Offset = "0xB3D40C", VA = "0xB3D40C")]
		public static Tweener DOOutlineColor(this TextMeshPro target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xB3D580", Offset = "0xB3D580", VA = "0xB3D580")]
		public static Tweener DOGlowColor(this TextMeshPro target, Color endValue, float duration, bool useSharedMaterial = false)
		{
			return null;
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xB3D66C", Offset = "0xB3D66C", VA = "0xB3D66C")]
		public static Tweener DOFade(this TextMeshPro target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xB3D7A8", Offset = "0xB3D7A8", VA = "0xB3D7A8")]
		public static Tweener DOFaceFade(this TextMeshPro target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xB3D8E4", Offset = "0xB3D8E4", VA = "0xB3D8E4")]
		public static Tweener DOScale(this TextMeshPro target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xB3DA80", Offset = "0xB3DA80", VA = "0xB3DA80")]
		public static Tweener DOFontSize(this TextMeshPro target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xB3DBBC", Offset = "0xB3DBBC", VA = "0xB3DBBC")]
		public static Tweener DOMaxVisibleCharacters(this TextMeshPro target, int endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xB3DCF8", Offset = "0xB3DCF8", VA = "0xB3DCF8")]
		public static Tweener DOText(this TextMeshPro target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}
	}
	[Token(Token = "0x200016F")]
	public static class ShortcutExtensionsTextMeshProUGUI
	{
		[Token(Token = "0x2000227")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C26C", Offset = "0x62C26C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProUGUI target;

			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0xB3E43C", Offset = "0xB3E43C", VA = "0xB3E43C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xB3F010", Offset = "0xB3F010", VA = "0xB3F010")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0xB3F048", Offset = "0xB3F048", VA = "0xB3F048")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C27C", Offset = "0x62C27C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProUGUI target;

			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0xB3E5B0", Offset = "0xB3E5B0", VA = "0xB3E5B0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0xB3F0B0", Offset = "0xB3F0B0", VA = "0xB3F0B0")]
			internal Color <DOFaceColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0xB3F0EC", Offset = "0xB3F0EC", VA = "0xB3F0EC")]
			internal void <DOFaceColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000229")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C28C", Offset = "0x62C28C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProUGUI target;

			[Token(Token = "0x6000CC1")]
			[Address(RVA = "0xB3E724", Offset = "0xB3E724", VA = "0xB3E724")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0xB3F12C", Offset = "0xB3F12C", VA = "0xB3F12C")]
			internal Color <DOOutlineColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0xB3F168", Offset = "0xB3F168", VA = "0xB3F168")]
			internal void <DOOutlineColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200022A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C29C", Offset = "0x62C29C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProUGUI target;

			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0xB3E94C", Offset = "0xB3E94C", VA = "0xB3E94C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0xB3F1A8", Offset = "0xB3F1A8", VA = "0xB3F1A8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0xB3F1E0", Offset = "0xB3F1E0", VA = "0xB3F1E0")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200022B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C2AC", Offset = "0x62C2AC")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProUGUI target;

			[Token(Token = "0x6000CC7")]
			[Address(RVA = "0xB3EA88", Offset = "0xB3EA88", VA = "0xB3EA88")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000CC8")]
			[Address(RVA = "0xB3F248", Offset = "0xB3F248", VA = "0xB3F248")]
			internal Color <DOFaceFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0xB3F284", Offset = "0xB3F284", VA = "0xB3F284")]
			internal void <DOFaceFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200022C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C2BC", Offset = "0x62C2BC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0xB3EC24", Offset = "0xB3EC24", VA = "0xB3EC24")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0xB3F2C4", Offset = "0xB3F2C4", VA = "0xB3F2C4")]
			internal Vector3 <DOScale>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0xB3F2F4", Offset = "0xB3F2F4", VA = "0xB3F2F4")]
			internal void <DOScale>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200022D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C2CC", Offset = "0x62C2CC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProUGUI target;

			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0xB3ED60", Offset = "0xB3ED60", VA = "0xB3ED60")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0xB3F34C", Offset = "0xB3F34C", VA = "0xB3F34C")]
			internal float <DOFontSize>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0xB3F37C", Offset = "0xB3F37C", VA = "0xB3F37C")]
			internal void <DOFontSize>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200022E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C2DC", Offset = "0x62C2DC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProUGUI target;

			[Token(Token = "0x6000CD0")]
			[Address(RVA = "0xB3EE9C", Offset = "0xB3EE9C", VA = "0xB3EE9C")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0xB3F3BC", Offset = "0xB3F3BC", VA = "0xB3F3BC")]
			internal int <DOMaxVisibleCharacters>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0xB3F3EC", Offset = "0xB3F3EC", VA = "0xB3F3EC")]
			internal void <DOMaxVisibleCharacters>b__1(int x)
			{
			}
		}

		[Token(Token = "0x200022F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x62C2EC", Offset = "0x62C2EC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshProUGUI target;

			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0xB3F008", Offset = "0xB3F008", VA = "0xB3F008")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0xB3F424", Offset = "0xB3F424", VA = "0xB3F424")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0xB3F454", Offset = "0xB3F454", VA = "0xB3F454")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xB3E2E0", Offset = "0xB3E2E0", VA = "0xB3E2E0")]
		public static Tweener DOColor(this TextMeshProUGUI target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xB3E444", Offset = "0xB3E444", VA = "0xB3E444")]
		public static Tweener DOFaceColor(this TextMeshProUGUI target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xB3E5B8", Offset = "0xB3E5B8", VA = "0xB3E5B8")]
		public static Tweener DOOutlineColor(this TextMeshProUGUI target, Color32 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xB3E72C", Offset = "0xB3E72C", VA = "0xB3E72C")]
		public static Tweener DOGlowColor(this TextMeshProUGUI target, Color endValue, float duration, bool useSharedMaterial = false)
		{
			return null;
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xB3E818", Offset = "0xB3E818", VA = "0xB3E818")]
		public static Tweener DOFade(this TextMeshProUGUI target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xB3E954", Offset = "0xB3E954", VA = "0xB3E954")]
		public static Tweener DOFaceFade(this TextMeshProUGUI target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xB3EA90", Offset = "0xB3EA90", VA = "0xB3EA90")]
		public static Tweener DOScale(this TextMeshProUGUI target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xB3EC2C", Offset = "0xB3EC2C", VA = "0xB3EC2C")]
		public static Tweener DOFontSize(this TextMeshProUGUI target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xB3ED68", Offset = "0xB3ED68", VA = "0xB3ED68")]
		public static Tweener DOMaxVisibleCharacters(this TextMeshProUGUI target, int endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xB3EEA4", Offset = "0xB3EEA4", VA = "0xB3EEA4")]
		public static Tweener DOText(this TextMeshProUGUI target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x62BDDC", Offset = "0x62BDDC")]
	public class KeyboardInputModule : PointerInputModule
	{
		[Token(Token = "0x2000230")]
		private enum InputMode
		{
			[Token(Token = "0x4000E92")]
			Mouse,
			[Token(Token = "0x4000E93")]
			Buttons
		}

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_NextAction;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private InputMode m_CurrentInputMode;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string m_HorizontalAxis;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private bool m_AllowActivationOnMobileDevice;

		[Token(Token = "0x170000DA")]
		public bool allowActivationOnMobileDevice
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0xF1025C", Offset = "0xF1025C", VA = "0xF1025C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0xF10264", Offset = "0xF10264", VA = "0xF10264")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public float inputActionsPerSecond
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0xF10270", Offset = "0xF10270", VA = "0xF10270")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0xF10278", Offset = "0xF10278", VA = "0xF10278")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public string horizontalAxis
		{
			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0xF10280", Offset = "0xF10280", VA = "0xF10280")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A10")]
			[Address(RVA = "0xF10288", Offset = "0xF10288", VA = "0xF10288")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public string verticalAxis
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0xF10290", Offset = "0xF10290", VA = "0xF10290")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0xF10298", Offset = "0xF10298", VA = "0xF10298")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public string submitButton
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0xF102A0", Offset = "0xF102A0", VA = "0xF102A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0xF102A8", Offset = "0xF102A8", VA = "0xF102A8")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public string cancelButton
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0xF102B0", Offset = "0xF102B0", VA = "0xF102B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xF102B8", Offset = "0xF102B8", VA = "0xF102B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xF101C4", Offset = "0xF101C4", VA = "0xF101C4")]
		protected KeyboardInputModule()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xF102C0", Offset = "0xF102C0", VA = "0xF102C0", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xF102F0", Offset = "0xF102F0", VA = "0xF102F0", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xF10494", Offset = "0xF10494", VA = "0xF10494", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xF10650", Offset = "0xF10650", VA = "0xF10650", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xF1067C", Offset = "0xF1067C", VA = "0xF1067C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xF10A1C", Offset = "0xF10A1C", VA = "0xF10A1C")]
		private bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xF10C48", Offset = "0xF10C48", VA = "0xF10C48")]
		private bool AllowMoveEventProcessing(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xF10D10", Offset = "0xF10D10", VA = "0xF10D10")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xF1080C", Offset = "0xF1080C", VA = "0xF1080C")]
		private bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xF10E58", Offset = "0xF10E58", VA = "0xF10E58")]
		private bool ResetSelection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xF106BC", Offset = "0xF106BC", VA = "0xF106BC")]
		private bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}
	}
}
