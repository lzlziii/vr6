using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net.Security;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using BioLucid.Transparency;
using CodeStage.AdvancedFPSCounter;
using CurvedUI;
using Il2CppDummyDll;
using Interactive360.Utils;
using LiquidVolumeFX;
using Oculus.Platform;
using PathCreation;
using RenderHeads.Media.AVProMovieCapture;
using RenderHeads.Media.AVProVideo;
using SRL;
using Sharecare.Diabetes;
using TMPro;
using UltimateGameTools.MeshSimplifier;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.XR.Interaction;
using UnityEngine.Localization;
using UnityEngine.Localization.Components;
using UnityEngine.Localization.Tables;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.PostProcessing;
using UnityEngine.Purchasing;
using UnityEngine.Rendering;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.SceneManagement;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using VRLineRendererInternal;
using VRStandardAssets.Utils;
using Valve.VR;
using Viveport;
using Viveport.Internal;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ExtendedFlycam : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSensitivity;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float normalMoveSpeed;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowMoveFactor;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastMoveFactor;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x22F73C8", Offset = "0x22F73C8", VA = "0x22F73C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x22F73EC", Offset = "0x22F73EC", VA = "0x22F73EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x22F80FC", Offset = "0x22F80FC", VA = "0x22F80FC")]
	public ExtendedFlycam()
	{
	}
}
[Token(Token = "0x2000003")]
public class ForestMaker : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_treePrefab;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_amount;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_ground;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_radiusDistance;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x22FC1D4", Offset = "0x22FC1D4", VA = "0x22FC1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x22FC574", Offset = "0x22FC574", VA = "0x22FC574")]
	public ForestMaker()
	{
	}
}
[Token(Token = "0x2000004")]
public class SoundSettings : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer audioMixer;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0EA48", Offset = "0xD0EA48")]
	public Slider volumeMasterSlider;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider volumeVoiceSlider;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider volumeSFXSlider;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider volumeMusicSlider;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x233A3A4", Offset = "0x233A3A4", VA = "0x233A3A4")]
	public void SetVolumeMaster(float volume)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x233A450", Offset = "0x233A450", VA = "0x233A450")]
	public void SetVoiceVolume(float volume)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x233A4FC", Offset = "0x233A4FC", VA = "0x233A4FC")]
	public void SetSFXVolume(float volume)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x233A5A8", Offset = "0x233A5A8", VA = "0x233A5A8")]
	public void SetMusicVolume(float volume)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x233A654", Offset = "0x233A654", VA = "0x233A654")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x233A764", Offset = "0x233A764", VA = "0x233A764")]
	public SoundSettings()
	{
	}
}
[Token(Token = "0x2000005")]
public class LabelsIDFixer : MonoBehaviour
{
	[Token(Token = "0x600000C")]
	[Address(RVA = "0xFEFB04", Offset = "0xFEFB04", VA = "0xFEFB04")]
	public void Fix()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xFEFBE8", Offset = "0xFEFBE8", VA = "0xFEFBE8")]
	public LabelsIDFixer()
	{
	}
}
[Token(Token = "0x2000006")]
public class LookAtOrgan : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform organPosition;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 dir;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x13D9B58", Offset = "0x13D9B58", VA = "0x13D9B58")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x13D9CB0", Offset = "0x13D9CB0", VA = "0x13D9CB0")]
	public LookAtOrgan()
	{
	}
}
[Token(Token = "0x2000007")]
public class SteamVRSceneLoader : MonoBehaviour
{
	[Token(Token = "0x200050B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C3A0", Offset = "0xD0C3A0")]
	private sealed class <_LoadScene_steamAPI>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400298A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400298B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400298C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVRSceneLoader <>4__this;

		[Token(Token = "0x400298D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x17000203")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020E2")]
			[Address(RVA = "0x2343CB4", Offset = "0x2343CB4", VA = "0x2343CB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020E4")]
			[Address(RVA = "0x2343D1C", Offset = "0x2343D1C", VA = "0x2343D1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x2343788", Offset = "0x2343788", VA = "0x2343788")]
		[DebuggerHidden]
		public <_LoadScene_steamAPI>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x2343A98", Offset = "0x2343A98", VA = "0x2343A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x2343A9C", Offset = "0x2343A9C", VA = "0x2343A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x2343CBC", Offset = "0x2343CBC", VA = "0x2343CBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVRSceneLoader _instance;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD0EA5C", Offset = "0xD0EA5C")]
	public float compositorFadeDuration;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0EA94", Offset = "0xD0EA94")]
	public Texture[] skyboxTextures;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color defaultBGColor;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool showGrid;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_LoadLevel loader;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool steamLoaderBusy;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool loadAdditive;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool loadAsync;

	[Token(Token = "0x400001C")]
	private const string vrSteamName = "OpenVR";

	[Token(Token = "0x17000001")]
	public static SteamVRSceneLoader Instance
	{
		[Token(Token = "0x6000010")]
		[Address(RVA = "0x23433D0", Offset = "0x23433D0", VA = "0x23433D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x23434E4", Offset = "0x23434E4", VA = "0x23434E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x234368C", Offset = "0x234368C", VA = "0x234368C")]
	public static bool CanLoadScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x23436E0", Offset = "0x23436E0", VA = "0x23436E0")]
	public void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x234370C", Offset = "0x234370C", VA = "0x234370C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F2A8", Offset = "0xD1F2A8")]
	private IEnumerator _LoadScene_steamAPI(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x23437B4", Offset = "0x23437B4", VA = "0x23437B4")]
	private void UpdateLoaderSkyBox()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x23438A8", Offset = "0x23438A8", VA = "0x23438A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x23439D4", Offset = "0x23439D4", VA = "0x23439D4")]
	public void SteamLoadEvent(bool loading)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x23439E0", Offset = "0x23439E0", VA = "0x23439E0")]
	public SteamVRSceneLoader()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x2343A90", Offset = "0x2343A90", VA = "0x2343A90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F30C", Offset = "0xD1F30C")]
	private bool <_LoadScene_steamAPI>b__15_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000008")]
public class SmoothMovingFilter : MonoBehaviour
{
	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C3B0", Offset = "0xD0C3B0")]
	private sealed class <AllowStabilizationAfterDelay>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400298E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400298F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SmoothMovingFilter <>4__this;

		[Token(Token = "0x4002992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <endTime>5__2;

		[Token(Token = "0x17000205")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020E8")]
			[Address(RVA = "0x22EBD74", Offset = "0x22EBD74", VA = "0x22EBD74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020EA")]
			[Address(RVA = "0x22EBDDC", Offset = "0x22EBDDC", VA = "0x22EBDDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x22EB9EC", Offset = "0x22EB9EC", VA = "0x22EB9EC")]
		[DebuggerHidden]
		public <AllowStabilizationAfterDelay>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x22EBCC8", Offset = "0x22EBCC8", VA = "0x22EBCC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x22EBCCC", Offset = "0x22EBCCC", VA = "0x22EBCCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x22EBD7C", Offset = "0x22EBD7C", VA = "0x22EBD7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C3C0", Offset = "0xD0C3C0")]
	private sealed class <WaitAndHide>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SmoothMovingFilter <>4__this;

		[Token(Token = "0x17000207")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020EE")]
			[Address(RVA = "0x22EBE7C", Offset = "0x22EBE7C", VA = "0x22EBE7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020F0")]
			[Address(RVA = "0x22EBEE4", Offset = "0x22EBEE4", VA = "0x22EBEE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x22EBC14", Offset = "0x22EBC14", VA = "0x22EBC14")]
		[DebuggerHidden]
		public <WaitAndHide>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x22EBDE4", Offset = "0x22EBDE4", VA = "0x22EBDE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x22EBDE8", Offset = "0x22EBDE8", VA = "0x22EBDE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x22EBE84", Offset = "0x22EBE84", VA = "0x22EBE84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KeyCode hotkeyToSwitchOn;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private KeyCode hotkeyToSwitchOff;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private KeyCode reduceSmoothingValue;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private KeyCode increaseSmoothingValue;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private KeyCode reduceFOV;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private KeyCode increaseFOV;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float valueChangeStep;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float fovChangeStep;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMesh textIndicator;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform objectToFollow;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject holderGameObject;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Camera appCamera;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PostProcessingBehaviour appCamPPB;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Camera[] activateAdditionalCamerasOnStart;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0EBAC", Offset = "0xD0EBAC")]
	public float smoothK;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 _position;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion _rotation;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 _scale;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine textShowing;

	[Token(Token = "0x4000030")]
	private const float showingDuration = 1f;

	[Token(Token = "0x4000031")]
	private const string baseSmoothText = "Smooth Value: ";

	[Token(Token = "0x4000032")]
	private const string baseFovText = "FOV: ";

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isActive;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Camera mainCamera;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PostProcessingBehaviour mainCamPPB;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool firstStart;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float storedFovValue;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float storedSmoothValue;

	[Token(Token = "0x4000039")]
	private const float stabilizationDelay = 0.5f;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool allowStabilization;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x22EAE28", Offset = "0x22EAE28", VA = "0x22EAE28")]
	private void Start()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x22EB2EC", Offset = "0x22EB2EC", VA = "0x22EB2EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x22EB26C", Offset = "0x22EB26C", VA = "0x22EB26C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F31C", Offset = "0xD1F31C")]
	private IEnumerator AllowStabilizationAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x22EB4AC", Offset = "0x22EB4AC", VA = "0x22EB4AC")]
	private void ChangeSmoothValue(float value)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x22EB0B4", Offset = "0x22EB0B4", VA = "0x22EB0B4")]
	public void SetStabilizationCameraActive(bool state)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x22EB728", Offset = "0x22EB728", VA = "0x22EB728")]
	private void GetTransform()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x22EB790", Offset = "0x22EB790", VA = "0x22EB790")]
	private void SetTransform()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x22EB57C", Offset = "0x22EB57C", VA = "0x22EB57C")]
	private void CalcTransform()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x22EB808", Offset = "0x22EB808", VA = "0x22EB808")]
	private void ChangeFovValue(float value)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x22EB8F8", Offset = "0x22EB8F8", VA = "0x22EB8F8")]
	private void ReadClippingRanges()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x22EBA18", Offset = "0x22EBA18", VA = "0x22EBA18")]
	private void UpdateText()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x22EBB94", Offset = "0x22EBB94", VA = "0x22EBB94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F380", Offset = "0xD1F380")]
	private IEnumerator WaitAndHide(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x22EBC40", Offset = "0x22EBC40", VA = "0x22EBC40")]
	public SmoothMovingFilter()
	{
	}
}
[Token(Token = "0x2000009")]
public class VRCamCaptureUISwitcher : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject uiGameobject;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputDevice leftHandController;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool buttonWasReleased;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xFD63F4", Offset = "0xFD63F4", VA = "0xFD63F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xFD6484", Offset = "0xFD6484", VA = "0xFD6484")]
	private void Update()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xFD6574", Offset = "0xFD6574", VA = "0xFD6574")]
	public VRCamCaptureUISwitcher()
	{
	}
}
[Token(Token = "0x200000A")]
public class VRUISwitcher : MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRController controller;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject UIRoot;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool menuWasPressed;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool triggerWasPressed;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x12380BC", Offset = "0x12380BC", VA = "0x12380BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x12380C0", Offset = "0x12380C0", VA = "0x12380C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x12381A4", Offset = "0x12381A4", VA = "0x12381A4")]
	private void ChangeState()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x12381E4", Offset = "0x12381E4", VA = "0x12381E4")]
	public VRUISwitcher()
	{
	}
}
[Token(Token = "0x200000B")]
public class WebCamTest : MonoBehaviour
{
	[Token(Token = "0x600002F")]
	[Address(RVA = "0x13318D8", Offset = "0x13318D8", VA = "0x13318D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1331A2C", Offset = "0x1331A2C", VA = "0x1331A2C")]
	public WebCamTest()
	{
	}
}
[Token(Token = "0x200000C")]
public class CursorHelper : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Canvas canvas;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Image> imgCursors;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool showInputPoints;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color[] colorsArray;

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xF8E9A8", Offset = "0xF8E9A8", VA = "0xF8E9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xF8EAB8", Offset = "0xF8EAB8", VA = "0xF8EAB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xF8F174", Offset = "0xF8F174", VA = "0xF8F174")]
	public CursorHelper()
	{
	}
}
[Token(Token = "0x200000D")]
public class ProxyInputPlayer : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProxyInputState targetInputState;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProxyInputState.UpdateInputStateType orgDelegate;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StreamReader inputPlaybackStream;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float playbackStartTime;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ProxyInputState.InputState currInputState;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ProxyInputState.InputState nextInputState;

	[Token(Token = "0x17000002")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x23106E4", Offset = "0x23106E4", VA = "0x23106E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x23106F4", Offset = "0x23106F4", VA = "0x23106F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x23107D0", Offset = "0x23107D0", VA = "0x23107D0")]
	public void StartPlayback([Optional] string inFileName)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x23106F8", Offset = "0x23106F8", VA = "0x23106F8")]
	public void StopPlayback()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x2310D74", Offset = "0x2310D74", VA = "0x2310D74")]
	private bool ReadLine()
	{
		return default(bool);
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x2310E40", Offset = "0x2310E40", VA = "0x2310E40")]
	private void updateInputState(ProxyInputState.InputState inState)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x2311094", Offset = "0x2311094", VA = "0x2311094")]
	public ProxyInputPlayer()
	{
	}
}
[Token(Token = "0x200000E")]
public class ProxyInputRecorder : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProxyInputState targetInputState;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float recordStartTime;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ProxyInputState.InputState prevInputState;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private StreamWriter inputRecordStream;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private StreamWriter tabInputRecordStream;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ProxyInputState.UpdateInputStateType orgDelegate;

	[Token(Token = "0x17000003")]
	public bool IsRecording
	{
		[Token(Token = "0x600003C")]
		[Address(RVA = "0x231109C", Offset = "0x231109C", VA = "0x231109C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x23110AC", Offset = "0x23110AC", VA = "0x23110AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x23111A0", Offset = "0x23111A0", VA = "0x23111A0")]
	public void StartRecording([Optional] string inFileName)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x23110B0", Offset = "0x23110B0", VA = "0x23110B0")]
	public void StopRecording()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x2311568", Offset = "0x2311568", VA = "0x2311568")]
	private void updateInputState(ProxyInputState.InputState inState)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x2311BEC", Offset = "0x2311BEC", VA = "0x2311BEC")]
	private string InsertTabs(string text)
	{
		return null;
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x2311E20", Offset = "0x2311E20", VA = "0x2311E20")]
	public ProxyInputRecorder()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xD0969C", Offset = "0xD0969C")]
public class ProxyInputState : BaseInput, InputSRL.IInput
{
	[Serializable]
	[Token(Token = "0x200050E")]
	public class InputState : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 mousePosition;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 mouseScroll;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 mouseScrollDelta;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool[] mouseDown;

		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool[] mouseUp;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool[] mouse;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> vButtonDown;

		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<string> vButtonUp;

		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<string> vButton;

		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<float> AxisRaw;

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<float> Axis;

		[Token(Token = "0x40029A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int touchCount;

		[Token(Token = "0x40029A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Touch[] touches;

		[Token(Token = "0x40029A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<TouchSRL> touchesSRL;

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x2310B38", Offset = "0x2310B38", VA = "0x2310B38")]
		public InputState()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x23123FC", Offset = "0x23123FC", VA = "0x23123FC")]
		public void Clear()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x23119D4", Offset = "0x23119D4", VA = "0x23119D4")]
		public bool Equals(InputState inState)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x2310EE0", Offset = "0x2310EE0", VA = "0x2310EE0")]
		public void CopyFrom(InputState from)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x2312C38", Offset = "0x2312C38", VA = "0x2312C38", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x2312DC0", Offset = "0x2312DC0", VA = "0x2312DC0", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}

	[Token(Token = "0x200050F")]
	public delegate void UpdateInputStateType(InputState inState);

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> AxisNamesList;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> ButtonNamesList;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UpdateInputStateType updateInputState;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputState curState;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputState state0;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputState state1;

	[Token(Token = "0x17000004")]
	public override Vector2 mousePosition
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x23125F8", Offset = "0x23125F8", VA = "0x23125F8", Slot = "26")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000005")]
	public override Vector2 mouseScrollDelta
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x2312624", Offset = "0x2312624", VA = "0x2312624", Slot = "27")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000006")]
	public override int touchCount
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0x23129B8", Offset = "0x23129B8", VA = "0x23129B8", Slot = "29")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x2311E28", Offset = "0x2311E28", VA = "0x2311E28", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x2311F50", Offset = "0x2311F50", VA = "0x2311F50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x2311F70", Offset = "0x2311F70", VA = "0x2311F70")]
	private void defaultUupdateInputState(InputState inState)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x231249C", Offset = "0x231249C", VA = "0x231249C", Slot = "23")]
	public override bool GetMouseButtonDown(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x23124E0", Offset = "0x23124E0", VA = "0x23124E0", Slot = "24")]
	public override bool GetMouseButtonUp(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x2312524", Offset = "0x2312524", VA = "0x2312524", Slot = "25")]
	public override bool GetMouseButton(int button)
	{
		return default(bool);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x2312568", Offset = "0x2312568", VA = "0x2312568", Slot = "46")]
	public virtual Vector3 MousePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x2312614", Offset = "0x2312614", VA = "0x2312614", Slot = "47")]
	public virtual Vector2 MouseScrollDelta()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x2312640", Offset = "0x2312640", VA = "0x2312640", Slot = "48")]
	public virtual float GetAxis(string axisName)
	{
		return default(float);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x231274C", Offset = "0x231274C", VA = "0x231274C", Slot = "31")]
	public override float GetAxisRaw(string axisName)
	{
		return default(float);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x2312858", Offset = "0x2312858", VA = "0x2312858", Slot = "49")]
	public virtual bool GetButton(string buttonName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x23128C8", Offset = "0x23128C8", VA = "0x23128C8", Slot = "50")]
	public virtual bool GetButtonUp(string buttonName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x2312938", Offset = "0x2312938", VA = "0x2312938", Slot = "32")]
	public override bool GetButtonDown(string buttonName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x23129A8", Offset = "0x23129A8", VA = "0x23129A8", Slot = "51")]
	public virtual int TouchCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x23129D4", Offset = "0x23129D4", VA = "0x23129D4", Slot = "30")]
	public override Touch GetTouch(int index)
	{
		return default(Touch);
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x2312A4C", Offset = "0x2312A4C", VA = "0x2312A4C", Slot = "52")]
	public virtual Touch[] Touches()
	{
		return null;
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x2312A68", Offset = "0x2312A68", VA = "0x2312A68")]
	public ProxyInputState()
	{
	}
}
[Token(Token = "0x2000010")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xD096B0", Offset = "0xD096B0")]
public class ProxyInput_KeyboardHelper : MonoBehaviour
{
	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C3D0", Offset = "0xD0C3D0")]
	private sealed class <DelayedToggleRecording>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProxyInput_KeyboardHelper <>4__this;

		[Token(Token = "0x17000209")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x2313C44", Offset = "0x2313C44", VA = "0x2313C44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002100")]
			[Address(RVA = "0x2313CAC", Offset = "0x2313CAC", VA = "0x2313CAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x2313854", Offset = "0x2313854", VA = "0x2313854")]
		[DebuggerHidden]
		public <DelayedToggleRecording>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x2313BEC", Offset = "0x2313BEC", VA = "0x2313BEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x2313BF0", Offset = "0x2313BF0", VA = "0x2313BF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x2313C4C", Offset = "0x2313C4C", VA = "0x2313C4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C3E0", Offset = "0xD0C3E0")]
	private sealed class <DelayedTogglePlayback>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProxyInput_KeyboardHelper <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002104")]
			[Address(RVA = "0x2313B7C", Offset = "0x2313B7C", VA = "0x2313B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002106")]
			[Address(RVA = "0x2313BE4", Offset = "0x2313BE4", VA = "0x2313BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x231391C", Offset = "0x231391C", VA = "0x231391C")]
		[DebuggerHidden]
		public <DelayedTogglePlayback>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x2313B24", Offset = "0x2313B24", VA = "0x2313B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x2313B28", Offset = "0x2313B28", VA = "0x2313B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x2313B84", Offset = "0x2313B84", VA = "0x2313B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode recordKey;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode replayKey;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _showStatusOverlay;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _showMouseCursor;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ProxyInputRecorder recorder;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject recorderIndicator;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ProxyInputPlayer player;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject playerIndicator;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _recordFileName;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _replayFileName;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _outPath;

	[Token(Token = "0x17000007")]
	public bool showStatusOverlay
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x2312ED4", Offset = "0x2312ED4", VA = "0x2312ED4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000059")]
		[Address(RVA = "0x2312EDC", Offset = "0x2312EDC", VA = "0x2312EDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public bool showMouseCursor
	{
		[Token(Token = "0x600005A")]
		[Address(RVA = "0x2312EE8", Offset = "0x2312EE8", VA = "0x2312EE8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600005B")]
		[Address(RVA = "0x2312EF0", Offset = "0x2312EF0", VA = "0x2312EF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public string outPath
	{
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x2313770", Offset = "0x2313770", VA = "0x2313770")]
		get
		{
			return null;
		}
		[Token(Token = "0x600005F")]
		[Address(RVA = "0x23137B0", Offset = "0x23137B0", VA = "0x23137B0")]
		set
		{
		}
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x2312EFC", Offset = "0x2312EFC", VA = "0x2312EFC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x2312FB0", Offset = "0x2312FB0", VA = "0x2312FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x2313230", Offset = "0x2313230", VA = "0x2313230")]
	private void ToggleRecordingInternal()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x23134D0", Offset = "0x23134D0", VA = "0x23134D0")]
	private void TogglePlaybackInternal()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x23137B8", Offset = "0x23137B8", VA = "0x23137B8")]
	public void ToggleRecording()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x23137E4", Offset = "0x23137E4", VA = "0x23137E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F3E4", Offset = "0xD1F3E4")]
	private IEnumerator DelayedToggleRecording()
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x2313880", Offset = "0x2313880", VA = "0x2313880")]
	public void TogglePlayback()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x23138AC", Offset = "0x23138AC", VA = "0x23138AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F448", Offset = "0xD1F448")]
	private IEnumerator DelayedTogglePlayback()
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x2313948", Offset = "0x2313948", VA = "0x2313948")]
	public ProxyInput_KeyboardHelper()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x23139D4", Offset = "0x23139D4", VA = "0x23139D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F4AC", Offset = "0xD1F4AC")]
	private void <ToggleRecordingInternal>b__22_0(string[] paths)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x2313A7C", Offset = "0x2313A7C", VA = "0x2313A7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F4BC", Offset = "0xD1F4BC")]
	private void <TogglePlaybackInternal>b__23_0(string[] paths)
	{
	}
}
[Serializable]
[Token(Token = "0x2000011")]
public class TouchSRL
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_FingerId;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector2 m_Position;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 m_RawPosition;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 m_PositionDelta;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_TimeDelta;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_TapCount;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TouchPhase m_Phase;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TouchType m_Type;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m_Pressure;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_maximumPossiblePressure;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_Radius;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_RadiusVariance;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_AltitudeAngle;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_AzimuthAngle;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x232936C", Offset = "0x232936C", VA = "0x232936C")]
	public TouchSRL(Touch inTouch)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x2329474", Offset = "0x2329474", VA = "0x2329474")]
	public void From(Touch inTouch)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x2329574", Offset = "0x2329574", VA = "0x2329574")]
	public void To(ref Touch inTouch)
	{
	}
}
[Token(Token = "0x2000012")]
public class LevelLoader : MonoBehaviour
{
	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C3F0", Offset = "0xD0C3F0")]
	private sealed class <LoadAsynch>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sceneIndex;

		[Token(Token = "0x40029AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LevelLoader <>4__this;

		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <operation>5__2;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600210A")]
			[Address(RVA = "0xFF6810", Offset = "0xFF6810", VA = "0xFF6810", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600210C")]
			[Address(RVA = "0xFF6878", Offset = "0xFF6878", VA = "0xFF6878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xFF647C", Offset = "0xFF647C", VA = "0xFF647C")]
		[DebuggerHidden]
		public <LoadAsynch>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xFF64B0", Offset = "0xFF64B0", VA = "0xFF64B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xFF64B4", Offset = "0xFF64B4", VA = "0xFF64B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xFF6818", Offset = "0xFF6818", VA = "0xFF6818", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject loaderObject;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider slider;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text progressText;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xFF6364", Offset = "0xFF6364", VA = "0xFF6364")]
	private void Start()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xFF63D0", Offset = "0xFF63D0", VA = "0xFF63D0")]
	public void LoadLevel(int sceneIndex)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xFF63FC", Offset = "0xFF63FC", VA = "0xFF63FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F4CC", Offset = "0xD1F4CC")]
	private IEnumerator LoadAsynch(int sceneIndex)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xFF64A8", Offset = "0xFF64A8", VA = "0xFF64A8")]
	public LevelLoader()
	{
	}
}
[Token(Token = "0x2000013")]
public class CustomMouseCursor : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D normalTexture;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D clickTexture;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CursorMode cursorMode;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 hotSpot;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x108A894", Offset = "0x108A894", VA = "0x108A894")]
	private void Start()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x108A898", Offset = "0x108A898", VA = "0x108A898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x108A8F8", Offset = "0x108A8F8", VA = "0x108A8F8")]
	public CustomMouseCursor()
	{
	}
}
[Token(Token = "0x2000014")]
public class DisableWhileColliding : MonoBehaviour
{
	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjectToDisable;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TriggerObject;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x22ECF1C", Offset = "0x22ECF1C", VA = "0x22ECF1C")]
	private void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x22ECFDC", Offset = "0x22ECFDC", VA = "0x22ECFDC")]
	private void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x22ED09C", Offset = "0x22ED09C", VA = "0x22ED09C")]
	public DisableWhileColliding()
	{
	}
}
[Token(Token = "0x2000015")]
public class DistanceBetween : MonoBehaviour
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float myDistanceFromTarget;

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x22EDC3C", Offset = "0x22EDC3C", VA = "0x22EDC3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x22EDC40", Offset = "0x22EDC40", VA = "0x22EDC40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x22EDD2C", Offset = "0x22EDD2C", VA = "0x22EDD2C")]
	public DistanceBetween()
	{
	}
}
[Token(Token = "0x2000016")]
public class ScaleMeToPercentOfScreen : MonoBehaviour
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float myDistanceFromCamera;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scaleFactor;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x22DCD44", Offset = "0x22DCD44", VA = "0x22DCD44")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x22DCD48", Offset = "0x22DCD48", VA = "0x22DCD48")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x22DCDD4", Offset = "0x22DCDD4", VA = "0x22DCDD4")]
	public ScaleMeToPercentOfScreen()
	{
	}
}
[Token(Token = "0x2000017")]
public class ScaleMeWithCamera : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera myCamera;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scaleFactor;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 startScale;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x22DCDE8", Offset = "0x22DCDE8", VA = "0x22DCDE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x22DCE24", Offset = "0x22DCE24", VA = "0x22DCE24")]
	private void Update()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x22DCF84", Offset = "0x22DCF84", VA = "0x22DCF84")]
	public ScaleMeWithCamera()
	{
	}
}
[Token(Token = "0x2000018")]
public class VRLineBetweenObjects : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gameObject1;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gameObject2;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lineWidthStart;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lineWidthEnd;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material myMaterial;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer line;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xFD7C64", Offset = "0xFD7C64", VA = "0xFD7C64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xFD7D00", Offset = "0xFD7D00", VA = "0xFD7D00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xFD7E28", Offset = "0xFD7E28", VA = "0xFD7E28")]
	public VRLineBetweenObjects()
	{
	}
}
[Token(Token = "0x2000019")]
public class VRLookAtFindString : MonoBehaviour
{
	[Token(Token = "0x2000513")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C400", Offset = "0xD0C400")]
	private sealed class <WaitCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRLookAtFindString <>4__this;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002110")]
			[Address(RVA = "0xFDA27C", Offset = "0xFDA27C", VA = "0xFDA27C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002112")]
			[Address(RVA = "0xFDA2E4", Offset = "0xFDA2E4", VA = "0xFDA2E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xFDA178", Offset = "0xFDA178", VA = "0xFDA178")]
		[DebuggerHidden]
		public <WaitCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xFDA1AC", Offset = "0xFDA1AC", VA = "0xFDA1AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xFDA1B0", Offset = "0xFDA1B0", VA = "0xFDA1B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xFDA284", Offset = "0xFDA284", VA = "0xFDA284", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string myString;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject myObject;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float waitForSeconds;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xFDA068", Offset = "0xFDA068", VA = "0xFDA068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xFDA104", Offset = "0xFDA104", VA = "0xFDA104")]
	private void Update()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xFDA094", Offset = "0xFDA094", VA = "0xFDA094")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F530", Offset = "0xD1F530")]
	private IEnumerator WaitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xFDA1A4", Offset = "0xFDA1A4", VA = "0xFDA1A4")]
	public VRLookAtFindString()
	{
	}
}
[Token(Token = "0x200001A")]
public class VRRotateFromOtherObject : MonoBehaviour
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform sourceGameObject;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetGameObject;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xMultiplier;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMultiplier;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float zMultiplier;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float wMultiplier;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xFDA6B0", Offset = "0xFDA6B0", VA = "0xFDA6B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xFDA788", Offset = "0xFDA788", VA = "0xFDA788")]
	public VRRotateFromOtherObject()
	{
	}
}
[Token(Token = "0x200001B")]
public class UV_Test : MonoBehaviour
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider slide;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x2333130", Offset = "0x2333130", VA = "0x2333130")]
	private void Start()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x233324C", Offset = "0x233324C", VA = "0x233324C")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x2333250", Offset = "0x2333250", VA = "0x2333250")]
	public void OnSldierChanged(float val)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x2333358", Offset = "0x2333358", VA = "0x2333358")]
	public UV_Test()
	{
	}
}
[Token(Token = "0x200001C")]
public class AnchorVisibilityManager_meshBased : MonoBehaviour
{
	[Token(Token = "0x2000514")]
	private class AnchorMeshData
	{
		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh nearestMesh;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform nearestMeshTransform;

		[Token(Token = "0x40029B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int nearestVertexIndex;

		[Token(Token = "0x40029B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 dirToNearestVertex;

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x11828C0", Offset = "0x11828C0", VA = "0x11828C0")]
		public AnchorMeshData()
		{
		}
	}

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float visibilityAngle;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LabelAnchor[] anchors;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<LabelAnchor, AnchorMeshData> anchorsMeshData;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Mesh> sceneMeshes;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> meshesScales;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Transform> meshesTFs;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform mainCamTF;

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1181C30", Offset = "0x1181C30", VA = "0x1181C30")]
	private void Start()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1182308", Offset = "0x1182308", VA = "0x1182308")]
	private void Update()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x118230C", Offset = "0x118230C", VA = "0x118230C")]
	private void UpdateAnchorsVisibility()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1181D20", Offset = "0x1181D20", VA = "0x1181D20")]
	private void FindSceneMeshes()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1182028", Offset = "0x1182028", VA = "0x1182028")]
	private void CalculateNearestVertices()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1182104", Offset = "0x1182104", VA = "0x1182104")]
	private void SetAnchorsRotation()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x11824CC", Offset = "0x11824CC", VA = "0x11824CC")]
	private AnchorMeshData GetNearestVertice(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x11828C8", Offset = "0x11828C8", VA = "0x11828C8")]
	public AnchorVisibilityManager_meshBased()
	{
	}
}
[Token(Token = "0x200001D")]
public class CamMovementTracker : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool camPositionChanged;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LegacyCameraControl legacyCameraControl;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform cameraTransform;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 camPreviousPosition;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xF8AC80", Offset = "0xF8AC80", VA = "0xF8AC80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xF8AD2C", Offset = "0xF8AD2C", VA = "0xF8AD2C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xF8AE90", Offset = "0xF8AE90", VA = "0xF8AE90")]
	public CamMovementTracker()
	{
	}
}
[Token(Token = "0x200001E")]
public class CopyLabelsFromOld : MonoBehaviour
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject oldLabelsRoot;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oldLabelsPointPrefix;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool setStickToMesh;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject anchorPrefab;

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xF8E5A4", Offset = "0xF8E5A4", VA = "0xF8E5A4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1F594", Offset = "0xD1F594")]
	public void CopyLabels()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xF8E5A8", Offset = "0xF8E5A8", VA = "0xF8E5A8")]
	public CopyLabelsFromOld()
	{
	}
}
[Token(Token = "0x200001F")]
public class AnchorAnimations_Desktop : AnchorAnimationsProtocol
{
	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C410", Offset = "0xD0C410")]
	private sealed class <AnimateScale>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnchorAnimations_Desktop <>4__this;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 startScale;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 targetScale;

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action completionAction;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <lerpIndex>5__2;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x1180BAC", Offset = "0x1180BAC", VA = "0x1180BAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x1180C14", Offset = "0x1180C14", VA = "0x1180C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1180718", Offset = "0x1180718", VA = "0x1180718")]
		[DebuggerHidden]
		public <AnimateScale>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x1180A20", Offset = "0x1180A20", VA = "0x1180A20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x1180A24", Offset = "0x1180A24", VA = "0x1180A24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x1180BB4", Offset = "0x1180BB4", VA = "0x1180BB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C420", Offset = "0xD0C420")]
	private sealed class <AnimateColorBlink>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnchorAnimations_Desktop <>4__this;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600211D")]
			[Address(RVA = "0x11809B0", Offset = "0x11809B0", VA = "0x11809B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x1180A18", Offset = "0x1180A18", VA = "0x1180A18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1180744", Offset = "0x1180744", VA = "0x1180744")]
		[DebuggerHidden]
		public <AnimateColorBlink>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x11808BC", Offset = "0x11808BC", VA = "0x11808BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x11808C0", Offset = "0x11808C0", VA = "0x11808C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x11809B8", Offset = "0x11809B8", VA = "0x11809B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C430", Offset = "0xD0C430")]
	private sealed class <ColorTransition>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnchorAnimations_Desktop <>4__this;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float transitionTime;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color targetColor;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <lerpIndex>5__2;

		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <startColor>5__3;

		[Token(Token = "0x17000215")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002123")]
			[Address(RVA = "0x1180DA0", Offset = "0x1180DA0", VA = "0x1180DA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002125")]
			[Address(RVA = "0x1180E08", Offset = "0x1180E08", VA = "0x1180E08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x1180818", Offset = "0x1180818", VA = "0x1180818")]
		[DebuggerHidden]
		public <ColorTransition>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1180C1C", Offset = "0x1180C1C", VA = "0x1180C1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1180C20", Offset = "0x1180C20", VA = "0x1180C20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x1180DA8", Offset = "0x1180DA8", VA = "0x1180DA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color hoverColor;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int blinkCount;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color initialColor;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float colorTransitionTime;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine pointerHoverRoutine;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool pointerInside;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string colorPropertyName;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer renderer;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material material;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 initialScale;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float scaleTime;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine scaleCoroutine;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x11803DC", Offset = "0x11803DC", VA = "0x11803DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1180498", Offset = "0x1180498", VA = "0x1180498", Slot = "4")]
	public override void AnimatePointerOver()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1180534", Offset = "0x1180534", VA = "0x1180534", Slot = "5")]
	public override void AnimateAppear(bool value, [Optional] Action startAction, [Optional] Action completionAction)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x118065C", Offset = "0x118065C", VA = "0x118065C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F5CC", Offset = "0xD1F5CC")]
	private IEnumerator AnimateScale(Vector3 startScale, Vector3 targetScale, Action completionAction)
	{
		return null;
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x11804C4", Offset = "0x11804C4", VA = "0x11804C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F630", Offset = "0xD1F630")]
	private IEnumerator AnimateColorBlink()
	{
		return null;
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1180770", Offset = "0x1180770", VA = "0x1180770")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F694", Offset = "0xD1F694")]
	private IEnumerator ColorTransition(Color targetColor, float transitionTime)
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1180844", Offset = "0x1180844", VA = "0x1180844")]
	public AnchorAnimations_Desktop()
	{
	}
}
[Token(Token = "0x2000020")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD096C4", Offset = "0xD096C4")]
public class AnchorMarker_Desktop : AnchorMarkerProtocol, IPointerEnterHandler, IEventSystemHandler, IPointerClickHandler, IPointerExitHandler
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RawImage connectionLine;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform canvasRect;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform lineRect;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform markerRect;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CanvasGroup markerCG;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CanvasGroup markerRectCG;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject markerDefault;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject markerHovering;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject markerActive;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject markerInactive;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color infoInactiveColor;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color infoActiveColor;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0ECF4", Offset = "0xD0ECF4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0ECF4", Offset = "0xD0ECF4")]
	[SerializeField]
	private float lineWidth;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float lineStartOffset;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float lineEndOffset;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private LabelAnchor labelAnchor;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Action clickedAction;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RectTransform myRectTransform;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Graphic[] graphicComponents;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Animator markerAnimator;

	[Token(Token = "0x40000C3")]
	private const string visibilityAnimationParameter = "Visible";

	[Token(Token = "0x40000C4")]
	private const string scaleAnimationParameter = "ScaleUp";

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool destroyOnHide;

	[Token(Token = "0x1700000A")]
	public override bool isVisible
	{
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x1180E18", Offset = "0x1180E18", VA = "0x1180E18", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1180E88", Offset = "0x1180E88", VA = "0x1180E88", Slot = "5")]
	public override void Init(LabelAnchor labelAnchor, Action clickedAction)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1180F28", Offset = "0x1180F28", VA = "0x1180F28")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1181114", Offset = "0x1181114", VA = "0x1181114")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1181198", Offset = "0x1181198", VA = "0x1181198", Slot = "6")]
	public override void PresentMarker()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x11812E0", Offset = "0x11812E0", VA = "0x11812E0", Slot = "7")]
	public override void HideMarker(bool destroyWhenDone = false)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1181494", Offset = "0x1181494", VA = "0x1181494", Slot = "8")]
	public override void UpdateConnectionLine(Transform connectionTF)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1181904", Offset = "0x1181904", VA = "0x1181904", Slot = "9")]
	public override void SetInfoActiveLook(bool value)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x11819D0", Offset = "0x11819D0", VA = "0x11819D0", Slot = "10")]
	public override LabelAnchor GetAnchor()
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x11819D8", Offset = "0x11819D8", VA = "0x11819D8")]
	public void OnFadeOutFinished()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1180F64", Offset = "0x1180F64", VA = "0x1180F64")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1181118", Offset = "0x1181118", VA = "0x1181118")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x11818B8", Offset = "0x11818B8", VA = "0x11818B8")]
	private void SetIconForActiveState(bool value)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1181A68", Offset = "0x1181A68", VA = "0x1181A68", Slot = "11")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1181B34", Offset = "0x1181B34", VA = "0x1181B34", Slot = "12")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1181B48", Offset = "0x1181B48", VA = "0x1181B48", Slot = "13")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1181C14", Offset = "0x1181C14", VA = "0x1181C14")]
	public AnchorMarker_Desktop()
	{
	}
}
[Token(Token = "0x2000021")]
public class DisableGOOnAnimation : MonoBehaviour
{
	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x22ECEEC", Offset = "0x22ECEEC", VA = "0x22ECEEC")]
	private void DisableGameObject()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x22ECF14", Offset = "0x22ECF14", VA = "0x22ECF14")]
	public DisableGOOnAnimation()
	{
	}
}
[Token(Token = "0x2000022")]
public class LabelText_Desktop : LabelsTextProtocol, IComparable<LabelText_Desktop>
{
	[Token(Token = "0x2000518")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C440", Offset = "0xD0C440")]
	private sealed class <MoveToPosition>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LabelText_Desktop <>4__this;

		[Token(Token = "0x40029CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 desiredPosition;

		[Token(Token = "0x40029CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40029CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__3;

		[Token(Token = "0x40029D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <lerpIndex>5__4;

		[Token(Token = "0x40029D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__5;

		[Token(Token = "0x17000217")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002129")]
			[Address(RVA = "0xFEA2A0", Offset = "0xFEA2A0", VA = "0xFEA2A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600212B")]
			[Address(RVA = "0xFEA308", Offset = "0xFEA308", VA = "0xFEA308", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xFE9FC0", Offset = "0xFE9FC0", VA = "0xFE9FC0")]
		[DebuggerHidden]
		public <MoveToPosition>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xFEA05C", Offset = "0xFEA05C", VA = "0xFEA05C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xFEA060", Offset = "0xFEA060", VA = "0xFEA060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xFEA2A8", Offset = "0xFEA2A8", VA = "0xFEA2A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform labelFrame;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI[] textFieds;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] infoIcons;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayoutElement textLayout;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pronounceButton;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<LabelData> detailButtonAction;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform connectionPoint;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool readyForTheLine;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LabelText_Desktop animationClone;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Button infoButton;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject infoActiveOverlay;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LabelData myData;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator labelAnimator;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool pronounceAvailable;

	[Token(Token = "0x40000D4")]
	private const int textOverflowLimit = 26;

	[Token(Token = "0x40000D5")]
	private const float textPreferedWidth = 210f;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 desiredPosition;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve movementCurve;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float followTime;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int animationDelayFrames;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine movementCoroutine;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 lastTargetPosition;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool enablePositionUpdate;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Action LabelAppearedAction;

	[Token(Token = "0x40000DE")]
	private const string latinStringFormat = "\n<size=-2><i>({0})</i></size>";

	[Token(Token = "0x1700000B")]
	private Vector3 targetPosition
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xFE92D4", Offset = "0xFE92D4", VA = "0xFE92D4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700000C")]
	public override LabelData labelData
	{
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0xFE97D0", Offset = "0xFE97D0", VA = "0xFE97D0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xFE93A8", Offset = "0xFE93A8", VA = "0xFE93A8", Slot = "5")]
	public override void Initialize(LabelData labelData)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xFE9750", Offset = "0xFE9750", VA = "0xFE9750")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xFE97D8", Offset = "0xFE97D8", VA = "0xFE97D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xFE9964", Offset = "0xFE9964", VA = "0xFE9964")]
	public void OnPronounceButtonClicked()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xFE99A0", Offset = "0xFE99A0", VA = "0xFE99A0", Slot = "6")]
	public override void PresentLabelText([Optional] Action completionAction)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xFE9A80", Offset = "0xFE9A80", VA = "0xFE9A80", Slot = "7")]
	public override void HideLabelText([Optional] Action completionAction)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xFE9B80", Offset = "0xFE9B80", VA = "0xFE9B80", Slot = "8")]
	public override void SetInfoToggleInteractable(bool value)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xFE9BD8", Offset = "0xFE9BD8", VA = "0xFE9BD8", Slot = "9")]
	public override void SetInfoLookActive(bool value)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xFE9BF8", Offset = "0xFE9BF8", VA = "0xFE9BF8", Slot = "10")]
	public override void OnLocaleDidChange()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xFE9C00", Offset = "0xFE9C00", VA = "0xFE9C00")]
	public void OnDetailButtonClicked()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xFE9C64", Offset = "0xFE9C64", VA = "0xFE9C64")]
	public void RefreshLabelText()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xFE97E8", Offset = "0xFE97E8", VA = "0xFE97E8")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xFE9D00", Offset = "0xFE9D00", VA = "0xFE9D00")]
	public Transform GetCloneConnectionPoint()
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xFE9D88", Offset = "0xFE9D88", VA = "0xFE9D88")]
	public int GetSibling()
	{
		return default(int);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xFE9E2C", Offset = "0xFE9E2C", VA = "0xFE9E2C")]
	public void SetSibling(int index)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xFE9EE0", Offset = "0xFE9EE0", VA = "0xFE9EE0", Slot = "11")]
	public int CompareTo(LabelText_Desktop compareLabel)
	{
		return default(int);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xFE95B4", Offset = "0xFE95B4", VA = "0xFE95B4")]
	private void SetLabelText(LabelData labelData)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xFE9528", Offset = "0xFE9528", VA = "0xFE9528")]
	private void SetInfoAvailable(bool value)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xFE9C6C", Offset = "0xFE9C6C", VA = "0xFE9C6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F6F8", Offset = "0xD1F6F8")]
	private IEnumerator MoveToPosition(Vector3 desiredPosition)
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xFE9FEC", Offset = "0xFE9FEC", VA = "0xFE9FEC")]
	private void LayoutAnimationDelayEnded()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xFE9754", Offset = "0xFE9754", VA = "0xFE9754")]
	private void OnLabelFadeOutAnimationDone()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xFEA03C", Offset = "0xFEA03C", VA = "0xFEA03C")]
	public LabelText_Desktop()
	{
	}
}
[Token(Token = "0x2000023")]
public class LabelsListHeader_Desktop : MonoBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI headerTextField;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string headerKey;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xFEFBF0", Offset = "0xFEFBF0", VA = "0xFEFBF0")]
	public void SetHeaderText(string text)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xFEFC14", Offset = "0xFEFC14", VA = "0xFEFC14")]
	public LabelsListHeader_Desktop()
	{
	}
}
[Token(Token = "0x2000024")]
public class LabelsRuntimeVisualAdjustments : MonoBehaviour
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayoutElement labelsListEntry;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float listEntrySizeForTablets;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xFEFC24", Offset = "0xFEFC24", VA = "0xFEFC24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xFEFC28", Offset = "0xFEFC28", VA = "0xFEFC28")]
	private void CheckPlatformToMakeAdjustments()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xFEFC98", Offset = "0xFEFC98", VA = "0xFEFC98")]
	public LabelsRuntimeVisualAdjustments()
	{
	}
}
[Token(Token = "0x2000025")]
public class LabelsViewPositioner_Desktop : LabelsViewPositionerProtocol
{
	[Token(Token = "0x2000519")]
	private enum MovementType
	{
		[Token(Token = "0x40029D3")]
		SpeedDependent,
		[Token(Token = "0x40029D4")]
		TimeDependent
	}

	[Token(Token = "0x200051A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C450", Offset = "0xD0C450")]
	private sealed class <SetCamParameters>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LabelsViewPositioner_Desktop <>4__this;

		[Token(Token = "0x40029D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offsetAndZoom;

		[Token(Token = "0x40029D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 angles;

		[Token(Token = "0x40029DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action complitionAction;

		[Token(Token = "0x40029DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 <startAngles>5__2;

		[Token(Token = "0x40029DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <StartOffsetAndZoom>5__3;

		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <timeToLerp>5__4;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <startTime>5__5;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <lerpIndex>5__6;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600212F")]
			[Address(RVA = "0xFF1F30", Offset = "0xFF1F30", VA = "0xFF1F30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0xFF1F98", Offset = "0xFF1F98", VA = "0xFF1F98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xFF15DC", Offset = "0xFF15DC", VA = "0xFF15DC")]
		[DebuggerHidden]
		public <SetCamParameters>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xFF1930", Offset = "0xFF1930", VA = "0xFF1930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0xFF1934", Offset = "0xFF1934", VA = "0xFF1934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xFF1F38", Offset = "0xFF1F38", VA = "0xFF1F38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C460", Offset = "0xD0C460")]
	private sealed class <SetCamPosition>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LabelsViewPositioner_Desktop <>4__this;

		[Token(Token = "0x40029E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float offsetX;

		[Token(Token = "0x40029E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float offsetY;

		[Token(Token = "0x40029E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float zoom;

		[Token(Token = "0x40029E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action completionAction;

		[Token(Token = "0x40029E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startOffsetX>5__2;

		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <startOffsetY>5__3;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <startZoom>5__4;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <startTime>5__5;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <lerpIndex>5__6;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002135")]
			[Address(RVA = "0xFF22D0", Offset = "0xFF22D0", VA = "0xFF22D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002137")]
			[Address(RVA = "0xFF2338", Offset = "0xFF2338", VA = "0xFF2338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xFF1608", Offset = "0xFF1608", VA = "0xFF1608")]
		[DebuggerHidden]
		public <SetCamPosition>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xFF1FA0", Offset = "0xFF1FA0", VA = "0xFF1FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xFF1FA4", Offset = "0xFF1FA4", VA = "0xFF1FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xFF22D8", Offset = "0xFF22D8", VA = "0xFF22D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C470", Offset = "0xD0C470")]
	private sealed class <SetOrganRotationAndOffset>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LabelsViewPositioner_Desktop <>4__this;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 angles;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 targetOffset;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action completionAction;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <startTime>5__2;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <lerpIndex>5__3;

		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 <accumulatedAngles>5__4;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <accumulatedPosition>5__5;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool <processOffset>5__6;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600213B")]
			[Address(RVA = "0xFF273C", Offset = "0xFF273C", VA = "0xFF273C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600213D")]
			[Address(RVA = "0xFF27A4", Offset = "0xFF27A4", VA = "0xFF27A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0xFF1634", Offset = "0xFF1634", VA = "0xFF1634")]
		[DebuggerHidden]
		public <SetOrganRotationAndOffset>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0xFF2340", Offset = "0xFF2340", VA = "0xFF2340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0xFF2344", Offset = "0xFF2344", VA = "0xFF2344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xFF2744", Offset = "0xFF2744", VA = "0xFF2744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve movementCurve;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MovementType movementType;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0EDD0", Offset = "0xD0EDD0")]
	[SerializeField]
	private float camRotationSpeed;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0EE08", Offset = "0xD0EE08")]
	[SerializeField]
	private float camMovementSpeed;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0EE40", Offset = "0xD0EE40")]
	[SerializeField]
	private float camMovementTime;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0EE78", Offset = "0xD0EE78")]
	public float speedMultiplier;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0EE88", Offset = "0xD0EE88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0EE88", Offset = "0xD0EE88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0EE88", Offset = "0xD0EE88")]
	[SerializeField]
	private bool enableDotsCameraPosition;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 dotsCameraOffsetAndZoom;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector2 dotsCameraAngles;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0EF14", Offset = "0xD0EF14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0EF14", Offset = "0xD0EF14")]
	[SerializeField]
	private Transform topLimitViewPoint;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform bottomLimitViewPoint;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform horizontalLimitViewPoint;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Transform organRootMarker;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float animDuration;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 initialCamOffsetAndZoom;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LegacyCameraControl camControl;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CameraTarget camTarget;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _stateChangeActive;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private XRRig xrRig;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private LabelsVisibilityMidPoint midPoint;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private XR_OrganManipulator organManipulator;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float horizontalDistanceLimitSquare;

	[Token(Token = "0x1700000D")]
	public static bool stateChangeActive
	{
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xFEFCC8", Offset = "0xFEFCC8", VA = "0xFEFCC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xFEFD30", Offset = "0xFEFD30", VA = "0xFEFD30")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xFEFFA4", Offset = "0xFEFFA4", VA = "0xFEFFA4", Slot = "5")]
	public override void MoveCameraToDotsView([Optional] Action completionAction)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xFF0208", Offset = "0xFF0208", VA = "0xFF0208", Slot = "4")]
	public override void SetRotationForAnchors(List<LabelAnchor> labelAnchors, [Optional] Action completionAction)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xFF1310", Offset = "0xFF1310", VA = "0xFF1310", Slot = "7")]
	public override void RevertInitialView([Optional] Action completionAction)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xFF0150", Offset = "0xFF0150", VA = "0xFF0150")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F75C", Offset = "0xD1F75C")]
	private IEnumerator SetCamParameters(Vector2 angles, Vector3 offsetAndZoom, [Optional] Action complitionAction)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xFF1538", Offset = "0xFF1538", VA = "0xFF1538")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F7C0", Offset = "0xD1F7C0")]
	private IEnumerator SetCamPosition(float offsetX, float offsetY, float zoom, [Optional] Action completionAction)
	{
		return null;
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xFF0C84", Offset = "0xFF0C84", VA = "0xFF0C84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F824", Offset = "0xD1F824")]
	private IEnumerator SetOrganRotationAndOffset(Vector2 angles, Vector3 targetOffset, [Optional] Action completionAction)
	{
		return null;
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xFF1660", Offset = "0xFF1660", VA = "0xFF1660", Slot = "6")]
	public override void SetLabelsViewActive(bool value, [Optional] Action completionAction)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xFF1424", Offset = "0xFF1424", VA = "0xFF1424")]
	private bool OffsetAndZoomNotChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xFF0D3C", Offset = "0xFF0D3C", VA = "0xFF0D3C")]
	private Vector2 GetCameraAngles(List<LabelAnchor> labelAnchors)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xFF0464", Offset = "0xFF0464", VA = "0xFF0464")]
	private Vector3 GetAverageVisibilityDirection(List<LabelAnchor> labelAnchors, bool runtime)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xFF07A0", Offset = "0xFF07A0", VA = "0xFF07A0")]
	private Vector2 CalculateOrganRotationAngles(Vector3 requestedDirection)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xFF091C", Offset = "0xFF091C", VA = "0xFF091C")]
	private Vector3 CalculateOrganOffset(List<LabelAnchor> labelAnchors, float horizontalRotationPrediction)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xFF1198", Offset = "0xFF1198", VA = "0xFF1198")]
	private Vector3 GetCameraOffsetAndZoom(List<LabelAnchor> labelAnchors)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xFF002C", Offset = "0xFF002C", VA = "0xFF002C")]
	private float ClampAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xFF16C0", Offset = "0xFF16C0", VA = "0xFF16C0")]
	private bool CheckValue(float value)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xFF1750", Offset = "0xFF1750", VA = "0xFF1750")]
	private void GetCameraSettings()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xFF1870", Offset = "0xFF1870", VA = "0xFF1870")]
	private void ResetCameraSettings()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xFF1910", Offset = "0xFF1910", VA = "0xFF1910")]
	public LabelsViewPositioner_Desktop()
	{
	}
}
[Token(Token = "0x2000026")]
public class LineScaleAnimation : MonoBehaviour
{
	[Token(Token = "0x200051D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C480", Offset = "0xD0C480")]
	private sealed class <ScaleTransform>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LineScaleAnimation <>4__this;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scaleTime;

		[Token(Token = "0x40029FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 targetScale;

		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <startTime>5__3;

		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <lerpIndex>5__4;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002141")]
			[Address(RVA = "0xFF7030", Offset = "0xFF7030", VA = "0xFF7030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002143")]
			[Address(RVA = "0xFF7098", Offset = "0xFF7098", VA = "0xFF7098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xFF6DC8", Offset = "0xFF6DC8", VA = "0xFF6DC8")]
		[DebuggerHidden]
		public <ScaleTransform>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xFF6E78", Offset = "0xFF6E78", VA = "0xFF6E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xFF6E7C", Offset = "0xFF6E7C", VA = "0xFF6E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xFF7038", Offset = "0xFF7038", VA = "0xFF7038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scaleTime;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 initialScale;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine scaleRoutine;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xFF6C54", Offset = "0xFF6C54", VA = "0xFF6C54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xFF6CF4", Offset = "0xFF6CF4", VA = "0xFF6CF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xFF6D30", Offset = "0xFF6D30", VA = "0xFF6D30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F888", Offset = "0xD1F888")]
	private IEnumerator ScaleTransform(Vector3 targetScale, float scaleTime)
	{
		return null;
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xFF6DF4", Offset = "0xFF6DF4", VA = "0xFF6DF4")]
	public LineScaleAnimation()
	{
	}
}
[Token(Token = "0x2000027")]
public class MarkerAnimations_Desktop : MonoBehaviour
{
	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C490", Offset = "0xD0C490")]
	private sealed class <AnimateScale>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MarkerAnimations_Desktop <>4__this;

		[Token(Token = "0x4002A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 startScale;

		[Token(Token = "0x4002A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 targetScale;

		[Token(Token = "0x4002A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action completionAction;

		[Token(Token = "0x4002A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <lerpIndex>5__2;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0x13DB9FC", Offset = "0x13DB9FC", VA = "0x13DB9FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002149")]
			[Address(RVA = "0x13DBA64", Offset = "0x13DBA64", VA = "0x13DBA64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x13DB7A4", Offset = "0x13DB7A4", VA = "0x13DB7A4")]
		[DebuggerHidden]
		public <AnimateScale>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x13DB83C", Offset = "0x13DB83C", VA = "0x13DB83C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x13DB840", Offset = "0x13DB840", VA = "0x13DB840", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x13DBA04", Offset = "0x13DBA04", VA = "0x13DBA04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD0EFA0", Offset = "0xD0EFA0")]
	[SerializeField]
	private Transform targetTF;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 initialScale;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 animatedScale;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float scaleTime;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startDelay;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine scaleCoroutine;

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x13DB5A8", Offset = "0x13DB5A8", VA = "0x13DB5A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x13DB5E4", Offset = "0x13DB5E4", VA = "0x13DB5E4")]
	public void AnimatePointerEnter()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x13DB734", Offset = "0x13DB734", VA = "0x13DB734")]
	public void AnimatePoinerExit()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x13DB668", Offset = "0x13DB668", VA = "0x13DB668")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F8EC", Offset = "0xD1F8EC")]
	private IEnumerator AnimateScale(Vector3 startScale, Vector3 targetScale, float delay, [Optional] Action completionAction)
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x13DB7D0", Offset = "0x13DB7D0", VA = "0x13DB7D0")]
	public MarkerAnimations_Desktop()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09728", Offset = "0xD09728")]
public class SetLayoutComponentSize : MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform contentSizeRect;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LayoutElement layoutElement;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent onSizeChanged;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x22E0E24", Offset = "0x22E0E24", VA = "0x22E0E24")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x22E0F00", Offset = "0x22E0F00", VA = "0x22E0F00")]
	public void UpdateLayoutHeight()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x22E0FF4", Offset = "0x22E0FF4", VA = "0x22E0FF4")]
	public SetLayoutComponentSize()
	{
	}
}
[Token(Token = "0x2000029")]
public class TofuRectTransformDimensionListener : UIBehaviour
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnSizeDidChange;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x232199C", Offset = "0x232199C", VA = "0x232199C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x23219B0", Offset = "0x23219B0", VA = "0x23219B0", Slot = "10")]
	protected override void OnRectTransformDimensionsChange()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x23219EC", Offset = "0x23219EC", VA = "0x23219EC")]
	public TofuRectTransformDimensionListener()
	{
	}
}
[Token(Token = "0x200002A")]
public class FollowTransformPosition : MonoBehaviour
{
	[Token(Token = "0x200051F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C4A0", Offset = "0xD0C4A0")]
	private sealed class <MoveToPosition>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowTransformPosition <>4__this;

		[Token(Token = "0x4002A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 targetPosition;

		[Token(Token = "0x4002A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4002A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__3;

		[Token(Token = "0x4002A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <lerpIndex>5__4;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0x22FC164", Offset = "0x22FC164", VA = "0x22FC164", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0x22FC1CC", Offset = "0x22FC1CC", VA = "0x22FC1CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x22FBF00", Offset = "0x22FBF00", VA = "0x22FBF00")]
		[DebuggerHidden]
		public <MoveToPosition>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x22FBF34", Offset = "0x22FBF34", VA = "0x22FBF34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x22FBF38", Offset = "0x22FBF38", VA = "0x22FBF38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x22FC16C", Offset = "0x22FC16C", VA = "0x22FC16C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToFollow;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve movementCurve;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followTime;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine movementCoroutine;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastTargetPosition;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x22FBC58", Offset = "0x22FBC58", VA = "0x22FBC58")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x22FBC90", Offset = "0x22FBC90", VA = "0x22FBC90")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x22FBE6C", Offset = "0x22FBE6C", VA = "0x22FBE6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F950", Offset = "0xD1F950")]
	private IEnumerator MoveToPosition(Vector3 targetPosition)
	{
		return null;
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x22FBF2C", Offset = "0x22FBF2C", VA = "0x22FBF2C")]
	public FollowTransformPosition()
	{
	}
}
[Token(Token = "0x200002B")]
public class GizmoHelper : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float gizmoRadius;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool drawRay;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rayLength;

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x22FD5F8", Offset = "0x22FD5F8", VA = "0x22FD5F8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x22FD728", Offset = "0x22FD728", VA = "0x22FD728")]
	public GizmoHelper()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class LabelAnchor : MonoBehaviour
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 visibilityDirection;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<int> anchorClickAction;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int labelID;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool useBothAxesOnRotation;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool stickToMesh;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool useBones;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool useBlendShape;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool keepInitialOffset;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SkinnedMeshRenderer overrideStickMesh;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool use2DMarker;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool use3DMarker;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform marker3D;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F03C", Offset = "0xD0F03C")]
	public float markerScale3D;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool useIndividualCameraPosition;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float cameraZoom;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float cameraOffsetX;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float cameraOffsetY;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD0F058", Offset = "0xD0F058")]
	public bool enableCustomVisibilityAngle;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float visibilityAngle;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool enableCustomVisibilityAngleListMode;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float visibilityAngleListMode;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD0F090", Offset = "0xD0F090")]
	public bool enableCustomVisibilityDirection;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform visibilityDirectionTF;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0F0C8", Offset = "0xD0F0C8")]
	public bool drawGizmo;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	[HideInInspector]
	public bool isVisible;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Camera mainCam;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Camera labelsUICamera;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool isVR;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AnchorAnimationsProtocol anchorAnimator;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine onEnterCoroutine;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float hoverAnimationDelay;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LineRenderer connectionLine;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject lineContainer;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Label3Dmarker myMarkerScript;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 screenPos;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 screenPoint;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3[] linePositions;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private LabelsVisibilityMidPoint _midPoint;

	[Token(Token = "0x1700000E")]
	private LabelsVisibilityMidPoint midPoint
	{
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xFE3D88", Offset = "0xFE3D88", VA = "0xFE3D88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xFE3E38", Offset = "0xFE3E38", VA = "0xFE3E38")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xFE42B4", Offset = "0xFE42B4", VA = "0xFE42B4")]
	public void SetVRActive(bool value)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xFE437C", Offset = "0xFE437C", VA = "0xFE437C")]
	public void SetVisible(bool value, [Optional] Action completionAction)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xFE43C0", Offset = "0xFE43C0", VA = "0xFE43C0")]
	public void Set3DMarkerVisible(bool value)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xFE4470", Offset = "0xFE4470", VA = "0xFE4470")]
	public bool Is3DMarkerVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xFE449C", Offset = "0xFE449C", VA = "0xFE449C")]
	public void SetMarkerInteractable(bool value)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xFE44BC", Offset = "0xFE44BC", VA = "0xFE44BC")]
	public void UpdateConnectionLine(Transform connectionTF)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xFE47C0", Offset = "0xFE47C0", VA = "0xFE47C0")]
	public void On3DMarkerClicked()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xFE3FF0", Offset = "0xFE3FF0", VA = "0xFE3FF0")]
	public Vector3 GetRuntimeVisibilityDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xFE4824", Offset = "0xFE4824", VA = "0xFE4824")]
	public Vector3 GetCameraOffsetAndZoom()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xFE41F8", Offset = "0xFE41F8", VA = "0xFE41F8")]
	private void Update3DMarkerScale()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xFE48CC", Offset = "0xFE48CC", VA = "0xFE48CC")]
	private void Update3DMarker()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xFE496C", Offset = "0xFE496C", VA = "0xFE496C")]
	public LabelAnchor()
	{
	}
}
[Token(Token = "0x200002D")]
public class LabelSetPointParent : MonoBehaviour
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform targetParentTransform;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xFE9230", Offset = "0xFE9230", VA = "0xFE9230")]
	private void Start()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xFE92CC", Offset = "0xFE92CC", VA = "0xFE92CC")]
	public LabelSetPointParent()
	{
	}
}
[Token(Token = "0x200002E")]
public class LabelsBodySlidersZones : ZoneManagerBase
{
	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C4B0", Offset = "0xD0C4B0")]
	private sealed class <SetZone>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LabelsBodySlidersZones <>4__this;

		[Token(Token = "0x4002A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int zone;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002153")]
			[Address(RVA = "0xFEA92C", Offset = "0xFEA92C", VA = "0xFEA92C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002155")]
			[Address(RVA = "0xFEA994", Offset = "0xFEA994", VA = "0xFEA994", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xFEA6E0", Offset = "0xFEA6E0", VA = "0xFEA6E0")]
		[DebuggerHidden]
		public <SetZone>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xFEA84C", Offset = "0xFEA84C", VA = "0xFEA84C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xFEA850", Offset = "0xFEA850", VA = "0xFEA850", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xFEA934", Offset = "0xFEA934", VA = "0xFEA934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LabelsSliderZones[] sliderZones;

	[Token(Token = "0x14000001")]
	public override event EventHandler ChangeZone
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0xFEA310", Offset = "0xFEA310", VA = "0xFEA310", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F9B4", Offset = "0xD1F9B4")]
		add
		{
		}
		[Token(Token = "0x600010C")]
		[Address(RVA = "0xFEA3B4", Offset = "0xFEA3B4", VA = "0xFEA3B4", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F9C4", Offset = "0xD1F9C4")]
		remove
		{
		}
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xFEA458", Offset = "0xFEA458", VA = "0xFEA458")]
	private void Start()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xFEA554", Offset = "0xFEA554", VA = "0xFEA554", Slot = "7")]
	public override int GetCurrentZone()
	{
		return default(int);
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xFEA660", Offset = "0xFEA660", VA = "0xFEA660", Slot = "6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1F9D4", Offset = "0xD1F9D4")]
	public override IEnumerator SetZone(int zone)
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xFEA70C", Offset = "0xFEA70C", VA = "0xFEA70C")]
	private void OnToggleChanged(float value)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xFEA844", Offset = "0xFEA844", VA = "0xFEA844")]
	public LabelsBodySlidersZones()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class LabelsSliderZones
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int zone;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider zoneSlider;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xFEFCA8", Offset = "0xFEFCA8", VA = "0xFEFCA8")]
	public LabelsSliderZones()
	{
	}
}
[Token(Token = "0x2000030")]
public class LabelsBodyTogglesZones : ZoneManagerBase
{
	[Token(Token = "0x2000521")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C4C0", Offset = "0xD0C4C0")]
	private sealed class <SetZone>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LabelsBodyTogglesZones <>4__this;

		[Token(Token = "0x4002A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int zone;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002159")]
			[Address(RVA = "0xFEAEE4", Offset = "0xFEAEE4", VA = "0xFEAEE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600215B")]
			[Address(RVA = "0xFEAF4C", Offset = "0xFEAF4C", VA = "0xFEAF4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xFEACD4", Offset = "0xFEACD4", VA = "0xFEACD4")]
		[DebuggerHidden]
		public <SetZone>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xFEAD9C", Offset = "0xFEAD9C", VA = "0xFEAD9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0xFEADA0", Offset = "0xFEADA0", VA = "0xFEADA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xFEAEEC", Offset = "0xFEAEEC", VA = "0xFEAEEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LabelsToggleZones[] toggleZones;

	[Token(Token = "0x14000002")]
	public override event EventHandler ChangeZone
	{
		[Token(Token = "0x6000113")]
		[Address(RVA = "0xFEA99C", Offset = "0xFEA99C", VA = "0xFEA99C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1FA38", Offset = "0xD1FA38")]
		add
		{
		}
		[Token(Token = "0x6000114")]
		[Address(RVA = "0xFEAA40", Offset = "0xFEAA40", VA = "0xFEAA40", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1FA48", Offset = "0xD1FA48")]
		remove
		{
		}
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xFEAAE4", Offset = "0xFEAAE4", VA = "0xFEAAE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xFEABE0", Offset = "0xFEABE0", VA = "0xFEABE0", Slot = "7")]
	public override int GetCurrentZone()
	{
		return default(int);
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xFEAC54", Offset = "0xFEAC54", VA = "0xFEAC54", Slot = "6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1FA58", Offset = "0xD1FA58")]
	public override IEnumerator SetZone(int zone)
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xFEAD00", Offset = "0xFEAD00", VA = "0xFEAD00")]
	private void OnToggleChanged(bool value)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xFEAD94", Offset = "0xFEAD94", VA = "0xFEAD94")]
	public LabelsBodyTogglesZones()
	{
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class LabelsToggleZones
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int zone;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle zoneToggle;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xFEFCB0", Offset = "0xFEFCB0", VA = "0xFEFCB0")]
	public LabelsToggleZones()
	{
	}
}
[Token(Token = "0x2000032")]
public class LabelsDataManager : MonoBehaviour
{
	[Token(Token = "0x2000522")]
	private struct LabelInfo
	{
		[Token(Token = "0x4002A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4002A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string latinName;

		[Token(Token = "0x4002A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string description;

		[Token(Token = "0x4002A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string category;

		[Token(Token = "0x4002A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> reveals;

		[Token(Token = "0x4002A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreInQuiz;
	}

	[Token(Token = "0x2000523")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C4D0", Offset = "0xD0C4D0")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4002A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dictionaryName;

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xFEF974", Offset = "0xFEF974", VA = "0xFEF974")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xFEFA44", Offset = "0xFEFA44", VA = "0xFEFA44")]
		internal bool <ParseRevealsDictionary>b__0(string value)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000524")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C4E0", Offset = "0xD0C4E0")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4002A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lookupString;

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xFEF97C", Offset = "0xFEF97C", VA = "0xFEF97C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xFEFA68", Offset = "0xFEFA68", VA = "0xFEFA68")]
		internal bool <CreateCategoriesComparer>b__0(string x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xFEFA8C", Offset = "0xFEFA8C", VA = "0xFEFA8C")]
		internal bool <CreateCategoriesComparer>b__1(string x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xFEFAB0", Offset = "0xFEFAB0", VA = "0xFEFAB0")]
		internal bool <CreateCategoriesComparer>b__2(string x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LabelsDataManager _instance;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CustomLabelsCategoryComparer categoriesComparer;

	[Token(Token = "0x400013F")]
	private const string localizedFileNameMask = "YOU_LABELS_{0}.csv";

	[Token(Token = "0x4000140")]
	private const string folderName = "Labels/";

	[Token(Token = "0x4000141")]
	private const char csvDataDelimiter = ';';

	[Token(Token = "0x4000142")]
	private const char dictionaryDataDelimiter = ',';

	[Token(Token = "0x4000143")]
	private const char dictionaryValueDelimiter = '=';

	[Token(Token = "0x4000144")]
	private const int sceneNameCol = 0;

	[Token(Token = "0x4000145")]
	private const int idCol = 1;

	[Token(Token = "0x4000146")]
	private const int labelNameCol = 2;

	[Token(Token = "0x4000147")]
	private const int categoryNameCol = 3;

	[Token(Token = "0x4000148")]
	private const int quizIgnoreCol = 4;

	[Token(Token = "0x4000149")]
	private const int revealsDataCol = 5;

	[Token(Token = "0x400014A")]
	private const int informationCol = 6;

	[Token(Token = "0x400014B")]
	private const int latinNameCol = 7;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, Dictionary<int, LabelInfo>> unifiedLabelInfo;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<string, HashSet<string>> loadedScenes;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> labelsOrderInSpreadsheet;

	[Token(Token = "0x400014F")]
	private const string revealsDictionarySufix = "_RevealsDictionary";

	[Token(Token = "0x4000150")]
	private const string categoriesPriorityMarker = "CategoriesPriority:";

	[Token(Token = "0x4000151")]
	private const string categoriesReversePriorityMarker = "ReversCategoriesPriority:";

	[Token(Token = "0x1700000F")]
	public static LabelsDataManager Instance
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0xFED718", Offset = "0xFED718", VA = "0xFED718")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	private static string defaultLocale
	{
		[Token(Token = "0x600011C")]
		[Address(RVA = "0xFED7F4", Offset = "0xFED7F4", VA = "0xFED7F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xFED83C", Offset = "0xFED83C", VA = "0xFED83C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xFED9AC", Offset = "0xFED9AC", VA = "0xFED9AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xFEDA84", Offset = "0xFEDA84", VA = "0xFEDA84")]
	public string GetLabelText(string scene, int labelID, string locale = "")
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xFEDE34", Offset = "0xFEDE34", VA = "0xFEDE34")]
	public string GetLabelLatinText(string scene, int labelID)
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xFEDF8C", Offset = "0xFEDF8C", VA = "0xFEDF8C")]
	public string GetLabelDescription(string scene, int labelID, string locale = "")
	{
		return null;
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xFEE204", Offset = "0xFEE204", VA = "0xFEE204")]
	public string GetLabelCategory(string scene, int labelID, string locale = "")
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xFEE47C", Offset = "0xFEE47C", VA = "0xFEE47C")]
	public List<int> GetLabelZones(string scene, int labelID)
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xFEE5F8", Offset = "0xFEE5F8", VA = "0xFEE5F8")]
	public bool ShouldIgnoreInQuiz(string scene, int labelID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xFEE758", Offset = "0xFEE758", VA = "0xFEE758")]
	public int GetIndexInList(int LabelID)
	{
		return default(int);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xFEDCFC", Offset = "0xFEDCFC", VA = "0xFEDCFC")]
	private bool IsDataAvailable(string sceneName, int id, string locale = "")
	{
		return default(bool);
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xFEE85C", Offset = "0xFEE85C", VA = "0xFEE85C")]
	private void LoadLabelsData(string sceneName, string locale = "")
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xFEF58C", Offset = "0xFEF58C", VA = "0xFEF58C")]
	private Dictionary<string, int> ParseRevealsDictionary(string sceneName, List<string> fileData)
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xFEF948", Offset = "0xFEF948", VA = "0xFEF948")]
	private string GetKeyFromString(string value)
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xFEF17C", Offset = "0xFEF17C", VA = "0xFEF17C")]
	private CustomLabelsCategoryComparer CreateCategoriesComparer(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xFEF984", Offset = "0xFEF984", VA = "0xFEF984")]
	public LabelsDataManager()
	{
	}
}
[Token(Token = "0x2000033")]
public class CustomLabelsCategoryComparer : IComparer<string>
{
	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] categoriesPriority;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] categoriesReversePriority;

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x108A644", Offset = "0x108A644", VA = "0x108A644", Slot = "4")]
	public int Compare(string x, string y)
	{
		return default(int);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x108A824", Offset = "0x108A824", VA = "0x108A824")]
	public CustomLabelsCategoryComparer()
	{
	}
}
[Token(Token = "0x2000034")]
public class LabelsEditorTool : MonoBehaviour
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LabelsEditModeEnabled;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LabelsEditorTool Instance;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _initialized;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LabelsPresenter_Desktop _presenter;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LabelsViewPositioner_Desktop _viewPositioner;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LegacyCameraControl _cameraControl;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _listContainer;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _currentListIndex;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LabelsListEntry_Desktop[] _allListEntries;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<LabelAnchor> _allLabelAnchors;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _lastSelectTime;

	[Token(Token = "0x400015F")]
	private const float MinSelectInterval = 1.5f;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LabelAnchor _selectedAnchor;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F138", Offset = "0xD0F138")]
	private float speedMultiplier;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F178", Offset = "0xD0F178")]
	[SerializeField]
	private KeyCode selectNextLabelKey;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private KeyCode selectPrevLabelKey;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private KeyCode saveCameraKey;

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xFEFAD4", Offset = "0xFEFAD4", VA = "0xFEFAD4")]
	public LabelsEditorTool()
	{
	}
}
[Token(Token = "0x2000035")]
public abstract class LabelsPresenterProtocol : MonoBehaviour
{
	[Token(Token = "0x6000130")]
	public abstract void PresentMarkers(LabelData[] labelData, bool withInfoLook = false, [Optional] Action completionAction);

	[Token(Token = "0x6000131")]
	public abstract void PresentLabel(LabelData labelData, bool withInfoActive = false);

	[Token(Token = "0x6000132")]
	public abstract void RemoveLabel(LabelData labelData, [Optional] Action completionAction);

	[Token(Token = "0x6000133")]
	public abstract void RemoveAllLabelsExcept(int id, [Optional] Action completionAction);

	[Token(Token = "0x6000134")]
	public abstract void RemoveMarkers(int id = -1, [Optional] Action completionAction);

	[Token(Token = "0x6000135")]
	public abstract void SetLabelsLimitForPanel(int limit);

	[Token(Token = "0x6000136")]
	public abstract void ShowLabelInfo(LabelData labelData);

	[Token(Token = "0x6000137")]
	public abstract void ToggleLatinTranslations(bool value);

	[Token(Token = "0x6000138")]
	public abstract void OnLocaleDidChange();

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xFEFC1C", Offset = "0xFEFC1C", VA = "0xFEFC1C")]
	protected LabelsPresenterProtocol()
	{
	}
}
[Token(Token = "0x2000036")]
public abstract class LabelsViewPositionerProtocol : MonoBehaviour
{
	[Token(Token = "0x600013A")]
	public abstract void SetRotationForAnchors(List<LabelAnchor> labelAnchors, [Optional] Action completionAction);

	[Token(Token = "0x600013B")]
	public abstract void MoveCameraToDotsView([Optional] Action completionAction);

	[Token(Token = "0x600013C")]
	public abstract void SetLabelsViewActive(bool value, [Optional] Action completionAction);

	[Token(Token = "0x600013D")]
	public abstract void RevertInitialView([Optional] Action completionAction);

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xFEFCC0", Offset = "0xFEFCC0", VA = "0xFEFCC0")]
	protected LabelsViewPositionerProtocol()
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class LabelsTextProtocol : MonoBehaviour
{
	[Token(Token = "0x17000011")]
	public abstract LabelData labelData
	{
		[Token(Token = "0x600013F")]
		get;
	}

	[Token(Token = "0x6000140")]
	public abstract void Initialize(LabelData labelData);

	[Token(Token = "0x6000141")]
	public abstract void PresentLabelText([Optional] Action completionAction);

	[Token(Token = "0x6000142")]
	public abstract void HideLabelText([Optional] Action completionAction);

	[Token(Token = "0x6000143")]
	public abstract void SetInfoToggleInteractable(bool value);

	[Token(Token = "0x6000144")]
	public abstract void SetInfoLookActive(bool value);

	[Token(Token = "0x6000145")]
	public abstract void OnLocaleDidChange();

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xFEA054", Offset = "0xFEA054", VA = "0xFEA054")]
	protected LabelsTextProtocol()
	{
	}
}
[Token(Token = "0x2000038")]
public abstract class AnchorMarkerProtocol : MonoBehaviour
{
	[Token(Token = "0x17000012")]
	public abstract bool isVisible
	{
		[Token(Token = "0x6000147")]
		get;
	}

	[Token(Token = "0x6000148")]
	public abstract void Init(LabelAnchor labelAnchor, Action clickedAction);

	[Token(Token = "0x6000149")]
	public abstract void PresentMarker();

	[Token(Token = "0x600014A")]
	public abstract void HideMarker(bool destroyWhenDone = false);

	[Token(Token = "0x600014B")]
	public abstract void UpdateConnectionLine(Transform connectionTF);

	[Token(Token = "0x600014C")]
	public abstract void SetInfoActiveLook(bool value);

	[Token(Token = "0x600014D")]
	public abstract LabelAnchor GetAnchor();

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1180E10", Offset = "0x1180E10", VA = "0x1180E10")]
	protected AnchorMarkerProtocol()
	{
	}
}
[Token(Token = "0x2000039")]
public abstract class AnchorAnimationsProtocol : MonoBehaviour
{
	[Token(Token = "0x600014F")]
	public abstract void AnimatePointerOver();

	[Token(Token = "0x6000150")]
	public abstract void AnimateAppear(bool value, [Optional] Action startAction, [Optional] Action completionAction);

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x11803D4", Offset = "0x11803D4", VA = "0x11803D4")]
	protected AnchorAnimationsProtocol()
	{
	}
}
[Token(Token = "0x200003A")]
public class LabelData
{
	[Token(Token = "0x2000525")]
	public enum LastLabelState
	{
		[Token(Token = "0x4002A1F")]
		NotSet,
		[Token(Token = "0x4002A20")]
		Off,
		[Token(Token = "0x4002A21")]
		On
	}

	[Token(Token = "0x2000526")]
	public class VerticeData
	{
		[Token(Token = "0x4002A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] bonesTFs;

		[Token(Token = "0x4002A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] boneIndexes;

		[Token(Token = "0x4002A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] localPosition;

		[Token(Token = "0x4002A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] weights;

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xFE4D20", Offset = "0xFE4D20", VA = "0xFE4D20")]
		public VerticeData()
		{
		}
	}

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string labelText;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string labelLatinText;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string labelDescription;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string labelCategory;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string labelCategoryLocalized;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int orderInList;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float panelJumpTimer;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> labelZones;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<LabelAnchor> anchors;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform nearestPanel;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action structureSpotSelectedAction;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LastLabelState lastState;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<Transform, float> distanceToPanels;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform kickFromCurrentPanel;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool ignoreInQuiz;

	[Token(Token = "0x17000013")]
	public bool infoAvailable
	{
		[Token(Token = "0x6000153")]
		[Address(RVA = "0xFE4ADC", Offset = "0xFE4ADC", VA = "0xFE4ADC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xFE4A38", Offset = "0xFE4A38", VA = "0xFE4A38")]
	public bool isAnyAnchorVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xFE4B00", Offset = "0xFE4B00", VA = "0xFE4B00")]
	public void SetActiveByUser(bool value)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xFE4B24", Offset = "0xFE4B24", VA = "0xFE4B24")]
	public void ResetLastState()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xFE4B2C", Offset = "0xFE4B2C", VA = "0xFE4B2C")]
	public void SetDistanceToPanel(Transform panel, float distance)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xFE4BA4", Offset = "0xFE4BA4", VA = "0xFE4BA4")]
	public void SetPanelsDistanceDictionary(Transform[] panels)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xFE4C88", Offset = "0xFE4C88", VA = "0xFE4C88")]
	public LabelData()
	{
	}
}
[Token(Token = "0x200003B")]
public class LabelsUIRenderCamera : MonoBehaviour
{
	[Token(Token = "0x6000159")]
	[Address(RVA = "0xFEFCB8", Offset = "0xFEFCB8", VA = "0xFEFCB8")]
	public LabelsUIRenderCamera()
	{
	}
}
[Token(Token = "0x200003C")]
public class LabelsVisibilityMidPoint : MonoBehaviour
{
	[Token(Token = "0x600015A")]
	[Address(RVA = "0xFF27AC", Offset = "0xFF27AC", VA = "0xFF27AC")]
	public LabelsVisibilityMidPoint()
	{
	}
}
[Token(Token = "0x200003D")]
public class LabelsWorldComponentsMarker : MonoBehaviour
{
	[Token(Token = "0x600015B")]
	[Address(RVA = "0xFF2848", Offset = "0xFF2848", VA = "0xFF2848")]
	public LabelsWorldComponentsMarker()
	{
	}
}
[Token(Token = "0x200003E")]
public class LookAtMe : MonoBehaviour
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lookAtMe;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x11ADC8C", Offset = "0x11ADC8C", VA = "0x11ADC8C")]
	public void LookAtMeNow()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x11ADD34", Offset = "0x11ADD34", VA = "0x11ADD34")]
	public LookAtMe()
	{
	}
}
[Token(Token = "0x200003F")]
public class PlatformActivationControl : MonoBehaviour
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activeInVR;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool activeInDesktop;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rootToActivate;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x230E9C8", Offset = "0x230E9C8", VA = "0x230E9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x230EABC", Offset = "0x230EABC", VA = "0x230EABC")]
	public PlatformActivationControl()
	{
	}
}
[Token(Token = "0x2000040")]
public class PointerEventsWatcher : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action beginDragAction;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action endDragAction;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x230F498", Offset = "0x230F498", VA = "0x230F498", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x230F4AC", Offset = "0x230F4AC", VA = "0x230F4AC", Slot = "5")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x230F4C0", Offset = "0x230F4C0", VA = "0x230F4C0")]
	public PointerEventsWatcher()
	{
	}
}
[Token(Token = "0x2000041")]
public class PointerHoverAnimation : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerUpHandler, IPointerDownHandler
{
	[Serializable]
	[Token(Token = "0x2000527")]
	public class HoverEvent : UnityEvent<string, bool>
	{
		[Token(Token = "0x6002163")]
		[Address(RVA = "0x230F6A0", Offset = "0x230F6A0", VA = "0x230F6A0")]
		public HoverEvent()
		{
		}
	}

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HoverEvent hoverEvent;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool pointerDown;

	[Token(Token = "0x400017D")]
	private const string animatorBoolParamHover = "PointerIn";

	[Token(Token = "0x400017E")]
	private const string animatorBoolParamPointerDown = "PointerDown";

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x230F4C8", Offset = "0x230F4C8", VA = "0x230F4C8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x230F54C", Offset = "0x230F54C", VA = "0x230F54C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x230F5BC", Offset = "0x230F5BC", VA = "0x230F5BC", Slot = "6")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x230F628", Offset = "0x230F628", VA = "0x230F628", Slot = "7")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x230F698", Offset = "0x230F698", VA = "0x230F698")]
	public PointerHoverAnimation()
	{
	}
}
[Token(Token = "0x2000042")]
public class UIFXUtils : MonoBehaviour
{
	[Token(Token = "0x2000528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C4F0", Offset = "0xD0C4F0")]
	private sealed class <FadeGuiAlpha>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup targetGroup;

		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targetAlpha;

		[Token(Token = "0x4002A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fadeTime;

		[Token(Token = "0x4002A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x4002A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startAlpha>5__2;

		[Token(Token = "0x4002A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <startTime>5__3;

		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lerpIndex>5__4;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002167")]
			[Address(RVA = "0x23312CC", Offset = "0x23312CC", VA = "0x23312CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002169")]
			[Address(RVA = "0x2331334", Offset = "0x2331334", VA = "0x2331334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x2330CC0", Offset = "0x2330CC0", VA = "0x2330CC0")]
		[DebuggerHidden]
		public <FadeGuiAlpha>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x23310BC", Offset = "0x23310BC", VA = "0x23310BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x23310C0", Offset = "0x23310C0", VA = "0x23310C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x23312D4", Offset = "0x23312D4", VA = "0x23312D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C500", Offset = "0xD0C500")]
	private sealed class <ScaleTransform>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetTransform;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 targetScale;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float scaleTime;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action callback;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600216D")]
			[Address(RVA = "0x233181C", Offset = "0x233181C", VA = "0x233181C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600216F")]
			[Address(RVA = "0x2331884", Offset = "0x2331884", VA = "0x2331884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x2330D94", Offset = "0x2330D94", VA = "0x2330D94")]
		[DebuggerHidden]
		public <ScaleTransform>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x2331600", Offset = "0x2331600", VA = "0x2331600", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x2331604", Offset = "0x2331604", VA = "0x2331604", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x2331824", Offset = "0x2331824", VA = "0x2331824", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C510", Offset = "0xD0C510")]
	private sealed class <SlideDown>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform targetGroup;

		[Token(Token = "0x4002A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slideTime;

		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 <startPosition>5__2;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 <endPosition>5__3;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x1700022D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002173")]
			[Address(RVA = "0x2331EB4", Offset = "0x2331EB4", VA = "0x2331EB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002175")]
			[Address(RVA = "0x2331F1C", Offset = "0x2331F1C", VA = "0x2331F1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0x2330E50", Offset = "0x2330E50", VA = "0x2330E50")]
		[DebuggerHidden]
		public <SlideDown>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x2331BA0", Offset = "0x2331BA0", VA = "0x2331BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x2331BA4", Offset = "0x2331BA4", VA = "0x2331BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x2331EBC", Offset = "0x2331EBC", VA = "0x2331EBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C520", Offset = "0xD0C520")]
	private sealed class <SlideUp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform targetGroup;

		[Token(Token = "0x4002A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slideTime;

		[Token(Token = "0x4002A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x4002A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 <startPosition>5__2;

		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 <endPosition>5__3;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x1700022F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002179")]
			[Address(RVA = "0x2332210", Offset = "0x2332210", VA = "0x2332210", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600217B")]
			[Address(RVA = "0x2332278", Offset = "0x2332278", VA = "0x2332278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x2330F0C", Offset = "0x2330F0C", VA = "0x2330F0C")]
		[DebuggerHidden]
		public <SlideUp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x2331F24", Offset = "0x2331F24", VA = "0x2331F24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x2331F28", Offset = "0x2331F28", VA = "0x2331F28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x2332218", Offset = "0x2332218", VA = "0x2332218", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C530", Offset = "0xD0C530")]
	private sealed class <ScaleYToZero>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform targetTransform;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scaleTime;

		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 <startScale>5__2;

		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 <endScale>5__3;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x17000231")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600217F")]
			[Address(RVA = "0x2331B30", Offset = "0x2331B30", VA = "0x2331B30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002181")]
			[Address(RVA = "0x2331B98", Offset = "0x2331B98", VA = "0x2331B98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x2330FC8", Offset = "0x2330FC8", VA = "0x2330FC8")]
		[DebuggerHidden]
		public <ScaleYToZero>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x233188C", Offset = "0x233188C", VA = "0x233188C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x2331890", Offset = "0x2331890", VA = "0x2331890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x2331B38", Offset = "0x2331B38", VA = "0x2331B38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C540", Offset = "0xD0C540")]
	private sealed class <ReduceYToZero>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RectTransform targetTransform;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float reduseTime;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform refreshContent;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action callback;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 <startSize>5__2;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 <endSize>5__3;

		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <elapsedTime>5__4;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002185")]
			[Address(RVA = "0x2331590", Offset = "0x2331590", VA = "0x2331590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002187")]
			[Address(RVA = "0x23315F8", Offset = "0x23315F8", VA = "0x23315F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x2331088", Offset = "0x2331088", VA = "0x2331088")]
		[DebuggerHidden]
		public <ReduceYToZero>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x233133C", Offset = "0x233133C", VA = "0x233133C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x2331340", Offset = "0x2331340", VA = "0x2331340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x2331598", Offset = "0x2331598", VA = "0x2331598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x2330C2C", Offset = "0x2330C2C", VA = "0x2330C2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1FABC", Offset = "0xD1FABC")]
	public static IEnumerator FadeGuiAlpha(CanvasGroup targetGroup, float targetAlpha, float fadeTime, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x2330CEC", Offset = "0x2330CEC", VA = "0x2330CEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1FB20", Offset = "0xD1FB20")]
	public static IEnumerator ScaleTransform(Transform targetTransform, Vector3 targetScale, float scaleTime, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x2330DC0", Offset = "0x2330DC0", VA = "0x2330DC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1FB84", Offset = "0xD1FB84")]
	public static IEnumerator SlideDown(RectTransform targetGroup, float slideTime, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x2330E7C", Offset = "0x2330E7C", VA = "0x2330E7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1FBE8", Offset = "0xD1FBE8")]
	public static IEnumerator SlideUp(RectTransform targetGroup, float slideTime, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x2330F38", Offset = "0x2330F38", VA = "0x2330F38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1FC4C", Offset = "0xD1FC4C")]
	public static IEnumerator ScaleYToZero(RectTransform targetTransform, float scaleTime, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x2330FF4", Offset = "0x2330FF4", VA = "0x2330FF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1FCB0", Offset = "0xD1FCB0")]
	public static IEnumerator ReduceYToZero(RectTransform targetTransform, float reduseTime, RectTransform refreshContent, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x23310B4", Offset = "0x23310B4", VA = "0x23310B4")]
	public UIFXUtils()
	{
	}
}
[Token(Token = "0x2000043")]
public class CaptureSavedPopup : MonoBehaviour
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI pathTextField;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xF8C2E0", Offset = "0xF8C2E0", VA = "0xF8C2E0")]
	public void ShowPopupWithText(string text)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xF8C334", Offset = "0xF8C334", VA = "0xF8C334")]
	private void OnObjectHidden()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xF8C35C", Offset = "0xF8C35C", VA = "0xF8C35C")]
	public CaptureSavedPopup()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0978C", Offset = "0xD0978C")]
public class MovieCaptureConfiguration : MonoBehaviour
{
	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly string[] _codecFallbackDevices;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xFBB0E4", Offset = "0xFBB0E4", VA = "0xFBB0E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xFBB2D0", Offset = "0xFBB2D0", VA = "0xFBB2D0")]
	public MovieCaptureConfiguration()
	{
	}
}
[Token(Token = "0x2000045")]
public class MovieCapture_MouseCursorItem : MonoBehaviour
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image iconImage;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle myToggle;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<int> onItemSelected;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int myIndex;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xFBB3C0", Offset = "0xFBB3C0", VA = "0xFBB3C0")]
	public void SetProperties(int index, Sprite sprite, Action<int> selectedAction)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xFBB40C", Offset = "0xFBB40C", VA = "0xFBB40C")]
	public void OnItemToggle(bool value)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xFBB484", Offset = "0xFBB484", VA = "0xFBB484")]
	public void SetOn()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xFBB494", Offset = "0xFBB494", VA = "0xFBB494")]
	public MovieCapture_MouseCursorItem()
	{
	}
}
[Token(Token = "0x2000046")]
public class MovieCapture_MouseCursorManager : MonoBehaviour
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool uiCapturing;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MovieCapture_MouseCursorItem itemExample;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject panelOnOff;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject panelCursorOptions;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Toggle onToggle;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite[] cursorOptions;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _selectedCursorIndex;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool cursorEnabled;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool captureUiEnabled;

	[Token(Token = "0x400018E")]
	private const string PrefsSavedState = "MovieCapture_CaptureMouseCursorEnabled";

	[Token(Token = "0x400018F")]
	private const string PrefsSavedCursor = "MovieCapture_SelectedCursor";

	[Token(Token = "0x17000014")]
	public Sprite currentMouseCursorSprite
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0xFBB49C", Offset = "0xFBB49C", VA = "0xFBB49C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	private bool compatiblePlatform
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0xFBB4F4", Offset = "0xFBB4F4", VA = "0xFBB4F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xFBB534", Offset = "0xFBB534", VA = "0xFBB534")]
	private void Start()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xFBB868", Offset = "0xFBB868", VA = "0xFBB868")]
	public void OnCaptureUiToggle(bool value)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xFBB874", Offset = "0xFBB874", VA = "0xFBB874")]
	public void OnCursorEnabled(bool value)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xFBB90C", Offset = "0xFBB90C", VA = "0xFBB90C")]
	private void OnItemSelected(int index)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xFBB6A8", Offset = "0xFBB6A8", VA = "0xFBB6A8")]
	private void FillCursorsPanel()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xFBB574", Offset = "0xFBB574", VA = "0xFBB574")]
	private void UpdatePanels()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xFBB600", Offset = "0xFBB600", VA = "0xFBB600")]
	private void LoadSettings()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xFBB8A0", Offset = "0xFBB8A0", VA = "0xFBB8A0")]
	private void SaveSettings()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xFBB914", Offset = "0xFBB914", VA = "0xFBB914")]
	public MovieCapture_MouseCursorManager()
	{
	}
}
[Token(Token = "0x2000047")]
public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
{
	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xF89458", Offset = "0xF89458", VA = "0xF89458")]
	private void Start()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xF89484", Offset = "0xF89484", VA = "0xF89484")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x2000048")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x6000185")]
	[Address(RVA = "0xF8949C", Offset = "0xF8949C", VA = "0xF8949C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xF894A0", Offset = "0xF894A0", VA = "0xF894A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xF896F4", Offset = "0xF896F4", VA = "0xF896F4")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x2000049")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xF896FC", Offset = "0xF896FC", VA = "0xF896FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xF897B4", Offset = "0xF897B4", VA = "0xF897B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xF89900", Offset = "0xF89900", VA = "0xF89900")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x200004A")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x600018B")]
	[Address(RVA = "0xF89910", Offset = "0xF89910", VA = "0xF89910")]
	private void Start()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xF899DC", Offset = "0xF899DC", VA = "0xF899DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xF899E0", Offset = "0xF899E0", VA = "0xF899E0")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x200004B")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xF899E8", Offset = "0xF899E8", VA = "0xF899E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xF899EC", Offset = "0xF899EC", VA = "0xF899EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xF89BD4", Offset = "0xF89BD4", VA = "0xF89BD4")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x200004C")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xF89BDC", Offset = "0xF89BDC", VA = "0xF89BDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xF89C50", Offset = "0xF89C50", VA = "0xF89C50")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xF89D2C", Offset = "0xF89D2C", VA = "0xF89D2C")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x200004D")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x200052E")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4002A59")]
		MOUSE = 0,
		[Token(Token = "0x4002A5A")]
		GAZE = 1,
		[Token(Token = "0x4002A5B")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4002A5C")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4002A5D")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x4002A5E")]
		OCULUSVR = 5,
		[Token(Token = "0x4002A5F")]
		GOOGLEVR = 7,
		[Token(Token = "0x4002A60")]
		STEAMVR_2 = 8,
		[Token(Token = "0x4002A61")]
		UNITY_XR = 9
	}

	[Token(Token = "0x200052F")]
	public enum Hand
	{
		[Token(Token = "0x4002A63")]
		Both,
		[Token(Token = "0x4002A64")]
		Right,
		[Token(Token = "0x4002A65")]
		Left
	}

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Transform controllerTransformOverride;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject currentDragging;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject m_rightController;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject m_leftController;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float gazeTimerProgress;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Ray customControllerRay;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float dragThreshold;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool pressedDown;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool pressedLastFrame;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private XRController rightXRController;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private XRController leftXRController;

	[Token(Token = "0x17000016")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x107527C", Offset = "0x107527C", VA = "0x107527C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x108A098", Offset = "0x108A098", VA = "0x108A098")]
		private set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x1075E88", Offset = "0x1075E88", VA = "0x1075E88")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x1082E24", Offset = "0x1082E24", VA = "0x1082E24")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public Hand UsedHand
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x108A104", Offset = "0x108A104", VA = "0x108A104")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x108A10C", Offset = "0x108A10C", VA = "0x108A10C")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x1076EF8", Offset = "0x1076EF8", VA = "0x1076EF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001A")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x1076FA8", Offset = "0x1076FA8", VA = "0x1076FA8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700001B")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x108A188", Offset = "0x108A188", VA = "0x108A188")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700001C")]
	public Transform ControllerTransformOverride
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x108A114", Offset = "0x108A114", VA = "0x108A114")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x108A1A8", Offset = "0x108A1A8", VA = "0x108A1A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x108A220", Offset = "0x108A220", VA = "0x108A220")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001E")]
	public Camera EventCamera
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x108A228", Offset = "0x108A228", VA = "0x108A228")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x108950C", Offset = "0x108950C", VA = "0x108950C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x108A230", Offset = "0x108A230", VA = "0x108A230")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x1075914", Offset = "0x1075914", VA = "0x1075914")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x108A2B4", Offset = "0x108A2B4", VA = "0x108A2B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x108A024", Offset = "0x108A024", VA = "0x108A024")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD2AA70", Offset = "0xD2AA70")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x108A320", Offset = "0x108A320", VA = "0x108A320")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x108A38C", Offset = "0x108A38C", VA = "0x108A38C")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x108A400", Offset = "0x108A400", VA = "0x108A400")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x1075378", Offset = "0x1075378", VA = "0x1075378")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x108A40C", Offset = "0x108A40C", VA = "0x108A40C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000024")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x108A4A0", Offset = "0x108A4A0", VA = "0x108A4A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0x108A4A8", Offset = "0x108A4A8", VA = "0x108A4A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0x108A4B0", Offset = "0x108A4B0", VA = "0x108A4B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0x108A4B8", Offset = "0x108A4B8", VA = "0x108A4B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public float GazeClickTimer
	{
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0x108A4C4", Offset = "0x108A4C4", VA = "0x108A4C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0x10832DC", Offset = "0x10832DC", VA = "0x10832DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x108A4CC", Offset = "0x108A4CC", VA = "0x108A4CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x1083440", Offset = "0x1083440", VA = "0x1083440")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x60001C2")]
		[Address(RVA = "0x108A4D4", Offset = "0x108A4D4", VA = "0x108A4D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000029")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x60001C3")]
		[Address(RVA = "0x108A4DC", Offset = "0x108A4DC", VA = "0x108A4DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x108A4E4", Offset = "0x108A4E4", VA = "0x108A4E4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public XRController RightXRController
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x108A4EC", Offset = "0x108A4EC", VA = "0x108A4EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x108A4F4", Offset = "0x108A4F4", VA = "0x108A4F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public XRController LeftXRController
	{
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x108A4FC", Offset = "0x108A4FC", VA = "0x108A4FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x108A504", Offset = "0x108A504", VA = "0x108A504")]
		set
		{
		}
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1089370", Offset = "0x1089370", VA = "0x1089370", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x108976C", Offset = "0x108976C", VA = "0x108976C", Slot = "31")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1089984", Offset = "0x1089984", VA = "0x1089984", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x10899C0", Offset = "0x10899C0", VA = "0x10899C0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1089C90", Offset = "0x1089C90", VA = "0x1089C90", Slot = "32")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1089CF8", Offset = "0x1089CF8", VA = "0x1089CF8", Slot = "33")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1089D00", Offset = "0x1089D00", VA = "0x1089D00", Slot = "27")]
	protected override MouseState GetMousePointerEventData(int id)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1089E20", Offset = "0x1089E20", VA = "0x1089E20")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1089E4C", Offset = "0x1089E4C", VA = "0x1089E4C", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1089E50", Offset = "0x1089E50", VA = "0x1089E50", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1089C8C", Offset = "0x1089C8C", VA = "0x1089C8C")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1089E54", Offset = "0x1089E54", VA = "0x1089E54", Slot = "36")]
	protected virtual void ProcessUnityXRController()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x10895B0", Offset = "0x10895B0", VA = "0x10895B0")]
	private void SetupUnityXRControllers()
	{
	}

	[Token(Token = "0x60001A1")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1078614", Offset = "0x1078614", VA = "0x1078614")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x108A50C", Offset = "0x108A50C", VA = "0x108A50C")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x200004E")]
public class Killzone : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float killZoneHeight;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 spawnPoint;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _myTransform;

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xFE0000", Offset = "0xFE0000", VA = "0xFE0000")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xFE0028", Offset = "0xFE0028", VA = "0xFE0028")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xFE0084", Offset = "0xFE0084", VA = "0xFE0084")]
	public Killzone()
	{
	}
}
[Token(Token = "0x200004F")]
public class VectorDisplacementController : MonoBehaviour
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float displacement;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool controlTextures;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool controlDisplacement;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _myTransform;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float dispAmount;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x101E548", Offset = "0x101E548", VA = "0x101E548")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x101E570", Offset = "0x101E570", VA = "0x101E570")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x101E6A8", Offset = "0x101E6A8", VA = "0x101E6A8")]
	public VectorDisplacementController()
	{
	}
}
[Token(Token = "0x2000050")]
public class Spinner : MonoBehaviour
{
	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _myTransform;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 rotationVector;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x233D498", Offset = "0x233D498", VA = "0x233D498")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x233D4D4", Offset = "0x233D4D4", VA = "0x233D4D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x233D5AC", Offset = "0x233D5AC", VA = "0x233D5AC")]
	public Spinner()
	{
	}
}
[Token(Token = "0x2000051")]
public class LayerFader : StateMachineBehaviour
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeStartTime;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeStartValue;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeEndTime;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeEndValue;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int layerIndex;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool wasAnimated;

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xFF625C", Offset = "0xFF625C", VA = "0xFF625C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xFF6264", Offset = "0xFF6264", VA = "0xFF6264", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xFF635C", Offset = "0xFF635C", VA = "0xFF635C")]
	public LayerFader()
	{
	}
}
[Token(Token = "0x2000052")]
public class LocaleDependentTextLayout : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000530")]
	private class LayoutSettings
	{
		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string localeCode;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float charSpacing;

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x11ACFBC", Offset = "0x11ACFBC", VA = "0x11ACFBC")]
		public LayoutSettings()
		{
		}
	}

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizedString localeEventMarker;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayoutSettings[] layoutSettings;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI[] controlledFields;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LayoutSettings defaultSettings;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x11ACB98", Offset = "0x11ACB98", VA = "0x11ACB98")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x11ACC84", Offset = "0x11ACC84", VA = "0x11ACC84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x11ACD10", Offset = "0x11ACD10", VA = "0x11ACD10")]
	private void OnLocaleChanged(string stringValue)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x11ACF54", Offset = "0x11ACF54", VA = "0x11ACF54")]
	public LocaleDependentTextLayout()
	{
	}
}
[Serializable]
[Token(Token = "0x2000053")]
public class Ribbon
{
	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Vector3> points;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Color> cols;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xF0D69C", Offset = "0xF0D69C", VA = "0xF0D69C")]
	public Ribbon()
	{
	}
}
[Token(Token = "0x2000054")]
public enum MegaFlowDataSource
{
	[Token(Token = "0x40001CE")]
	FumeFX,
	[Token(Token = "0x40001CF")]
	MegaFlow,
	[Token(Token = "0x40001D0")]
	FGA,
	[Token(Token = "0x40001D1")]
	RealFlow
}
[Token(Token = "0x2000055")]
public enum MegaFlowParticleFileType
{
	[Token(Token = "0x40001D3")]
	RealFlow
}
[Token(Token = "0x2000056")]
public enum MegaFlowAxis
{
	[Token(Token = "0x40001D5")]
	X,
	[Token(Token = "0x40001D6")]
	Y,
	[Token(Token = "0x40001D7")]
	Z
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09800", Offset = "0xD09800")]
[ExecuteInEditMode]
public class MegaFlow : MonoBehaviour
{
	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float AXIS_SIZE;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color[] Cols;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gradient velcols;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showvelmag;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool showcellmag;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minvel;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxvel;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string file;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MegaFlowFrame flow;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int frame;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float smokeThreshold;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float velThreshold;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool showVel;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool showSmoke;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool shownotselected;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	public bool Slice;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool showgrid;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int Position;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int Thickness;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 ribpos;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float Dt;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float Density;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float Area;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float Reynolds;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float Mass;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int LineStep;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float SizeZ;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int StepZ;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float SizeY;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int StepY;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 Gravity;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float Duration;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public MegaFlowAxis Plane;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float Scale;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool showRibbon;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Color gridColor;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Color gridColor1;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float ribbonAlpha;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float velAlpha;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float velLen;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float velScl;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float smokeAlpha;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int calculated;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float calcTime;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Ribbon> ribbons;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float floor;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool showcells;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<MegaFlowFrame> frames;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public MegaFlowDataSource datasource;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool sequence;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public int firstframe;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public int lastframe;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int framestep;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int skip;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool animate;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float animspeed;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float animtime;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float animlength;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float ribbonscale;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float cellalpha;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Vector3 handlepos;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform fluidPos;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int memoryuse;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool optimized;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	public bool showdisplayparams;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14E")]
	public bool showribbonparams;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14F")]
	public bool showanimparams;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool textureoptions;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int texturewidth;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int textureheight;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public int texturedepth;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool showadvparams;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public int samplex;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public int sampley;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public int samplez;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public int decform;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string namesplit;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Matrix4x4 gettm;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Matrix4x4 invgettm;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x13E02BC", Offset = "0x13E02BC", VA = "0x13E02BC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FD14", Offset = "0xD1FD14")]
	public void Help()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x13E0308", Offset = "0x13E0308", VA = "0x13E0308")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x13E0494", Offset = "0x13E0494", VA = "0x13E0494")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x13E0590", Offset = "0x13E0590", VA = "0x13E0590")]
	public void OptimizeData()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x13E0B70", Offset = "0x13E0B70", VA = "0x13E0B70")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x13E0BF0", Offset = "0x13E0BF0", VA = "0x13E0BF0")]
	public void Animate()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x13E0CDC", Offset = "0x13E0CDC", VA = "0x13E0CDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x13E0ED8", Offset = "0x13E0ED8", VA = "0x13E0ED8")]
	public void SetFrame(int f)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x13E0FB0", Offset = "0x13E0FB0", VA = "0x13E0FB0")]
	public void AddFrame(MegaFlowFrame frame)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x13E10B0", Offset = "0x13E10B0", VA = "0x13E10B0")]
	public void DestroyFrame(int f)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x13E1230", Offset = "0x13E1230", VA = "0x13E1230")]
	public void DestroyFrames()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x13E0498", Offset = "0x13E0498", VA = "0x13E0498")]
	public void Prepare()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x13E0A70", Offset = "0x13E0A70", VA = "0x13E0A70")]
	public void CalcMemUse()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x13E1604", Offset = "0x13E1604", VA = "0x13E1604")]
	public Color GetCol(float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x13E1620", Offset = "0x13E1620", VA = "0x13E1620")]
	public void SetMatrix()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x13E1824", Offset = "0x13E1824", VA = "0x13E1824")]
	public Vector3 GetGridVelWorld(Vector3 pos, ref bool inbounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x13E1BE4", Offset = "0x13E1BE4", VA = "0x13E1BE4")]
	public Vector3 GetGridVel(Vector3 pos, ref bool inbounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x13E1CB8", Offset = "0x13E1CB8", VA = "0x13E1CB8")]
	public Vector3 SampleVel(int x, int y, int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x13E2034", Offset = "0x13E2034", VA = "0x13E2034")]
	public static void DrawEdge(Vector3 p1, Vector3 p2)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x13E21B8", Offset = "0x13E21B8", VA = "0x13E21B8")]
	public static void DrawBox(Vector3 min, Vector3 max)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x13E260C", Offset = "0x13E260C", VA = "0x13E260C")]
	public void DrawGizmo()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x13E28CC", Offset = "0x13E28CC", VA = "0x13E28CC")]
	public Texture3D Create3DTexture(int width, int height, int depth, int frame)
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x13E2C9C", Offset = "0x13E2C9C", VA = "0x13E2C9C")]
	public void NormalizeFrame(int f)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x13E2E50", Offset = "0x13E2E50", VA = "0x13E2E50")]
	public void Resample(MegaFlowFrame sf, int gx, int gy, int gz)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x13E3164", Offset = "0x13E3164", VA = "0x13E3164")]
	public MegaFlow()
	{
	}
}
[Token(Token = "0x2000058")]
[ExecuteInEditMode]
public class MegaFlowCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer render;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer srender;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter filter;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distance;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float xSpeed;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ySpeed;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float zSpeed;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float yMinLimit;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float yMaxLimit;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float xMinLimit;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float xMaxLimit;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float x;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float y;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 center;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool Dynamic;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 offset;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 EditTest;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 tpos;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool hitfloor;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float t;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float trantime;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float vx;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float vy;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float vz;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float nx;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float ny;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float nz;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float delay;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float delayz;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float mindist;

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x13E3524", Offset = "0x13E3524", VA = "0x13E3524")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x13E3AA0", Offset = "0x13E3AA0", VA = "0x13E3AA0")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x13E3B08", Offset = "0x13E3B08", VA = "0x13E3B08")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x13E3B1C", Offset = "0x13E3B1C", VA = "0x13E3B1C")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x13E3758", Offset = "0x13E3758", VA = "0x13E3758")]
	public void NewTarget(GameObject targ)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x13E3BB4", Offset = "0x13E3BB4", VA = "0x13E3BB4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x13E41F8", Offset = "0x13E41F8", VA = "0x13E41F8")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x13E42A8", Offset = "0x13E42A8", VA = "0x13E42A8")]
	public MegaFlowCameraOrbit()
	{
	}
}
[Token(Token = "0x2000059")]
public enum MegaFlowModType
{
	[Token(Token = "0x4000247")]
	VelChange
}
[Serializable]
[Token(Token = "0x200005A")]
public class MegaFlowModifier
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Collider obj;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaFlowModType type;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amount;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool include;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool show;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x13E93A4", Offset = "0x13E93A4", VA = "0x13E93A4")]
	public MegaFlowModifier()
	{
	}
}
[Serializable]
[Token(Token = "0x200005B")]
public class MegaFlowSpline
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MegaShape shape;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int curve;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float velocity;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float weight;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float falloffdist;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve falloffcrv;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve velcrv;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve distcrv;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MegaFlowMode mode;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool include;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int visrings;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float ringalpha;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool show;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x13EEFB8", Offset = "0x13EEFB8", VA = "0x13EEFB8")]
	public MegaFlowSpline()
	{
	}
}
[Token(Token = "0x200005C")]
public struct MegaFlowContrib
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float dist;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MegaFlowSpline src;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 vel;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 delta;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float alpha;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fdist;
}
[Token(Token = "0x200005D")]
public enum MegaFlowMode
{
	[Token(Token = "0x4000261")]
	Attract,
	[Token(Token = "0x4000262")]
	Repulse,
	[Token(Token = "0x4000263")]
	Flow
}
[Token(Token = "0x200005E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0985C", Offset = "0xD0985C")]
[ExecuteInEditMode]
public class MegaFlowCreateFromSplines : MonoBehaviour
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 size;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool square;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int gridx;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int gridy;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int gridz;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<MegaFlowSpline> splines;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MegaFlow flow;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int frame;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 cellsize;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] cells;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float velocity;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float vellen;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MegaFlowMode emtyspacemode;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool shownotsel;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Gradient velcols;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float minvel;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float maxvel;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 startval;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<MegaFlowModifier> modifiers;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MegaFlow preview;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Texture3D texture;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float texturescale;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool showsplines;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool showmods;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector2 splinepos;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector2 modpos;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color[] Cols;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x13E42E8", Offset = "0x13E42E8", VA = "0x13E42E8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FD4C", Offset = "0xD1FD4C")]
	public void Help()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x13E4334", Offset = "0x13E4334", VA = "0x13E4334")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x13E44C0", Offset = "0x13E44C0", VA = "0x13E44C0")]
	public void CreateFlow()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x13E51C4", Offset = "0x13E51C4", VA = "0x13E51C4")]
	public void DrawEdge(Vector3 p1, Vector3 p2, int steps)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x13E5364", Offset = "0x13E5364", VA = "0x13E5364")]
	public void DrawGizmo()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x13E5B28", Offset = "0x13E5B28", VA = "0x13E5B28")]
	public Color GetCol(float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x13E5B44", Offset = "0x13E5B44", VA = "0x13E5B44")]
	public MegaFlowCreateFromSplines()
	{
	}
}
[Token(Token = "0x200005F")]
public enum MegaFlowAlign
{
	[Token(Token = "0x4000280")]
	None,
	[Token(Token = "0x4000281")]
	Flow,
	[Token(Token = "0x4000282")]
	Object
}
[Token(Token = "0x2000060")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD098A8", Offset = "0xD098A8")]
public class MegaFlowEffect : MonoBehaviour
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mass;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MegaFlow source;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 pos;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 vel;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float dt;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float scale;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Area;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float Gravity;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 rot;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 rotspeed;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float reynolds;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float density;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int framenum;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MegaFlowFrame frame;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float scl;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int emitindex;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MegaFlowAlign align;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 alignrot;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Gradient gradient;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool usegradient;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float speedlow;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float speedhigh;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion lastalign;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Material mat;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Renderer rend1;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x13E5E08", Offset = "0x13E5E08", VA = "0x13E5E08")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FD84", Offset = "0xD1FD84")]
	public void Help()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x13E5E54", Offset = "0x13E5E54", VA = "0x13E5E54")]
	public void SetFrame(int f)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x13E5F18", Offset = "0x13E5F18", VA = "0x13E5F18")]
	private void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x13E69E4", Offset = "0x13E69E4", VA = "0x13E69E4")]
	public MegaFlowEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x2000061")]
public class MegaFlowVector
{
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public byte x;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public byte y;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public byte z;

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x13E8808", Offset = "0x13E8808", VA = "0x13E8808")]
	public MegaFlowVector()
	{
	}
}
[Token(Token = "0x2000062")]
public class MegaFlowFrame : ScriptableObject
{
	[Token(Token = "0x2000531")]
	public delegate Vector3 GetVel(Vector3 pos, ref bool inbounds);

	[Token(Token = "0x2000532")]
	public delegate Vector3 Sample(int x, int y, int z);

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] gridDim;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] gridDim1;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] gridDim2;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int flags;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int framenumber;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool somebool;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fval;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fval1;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 spacing;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 size;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 gsize;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 oos;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 offset;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int memory;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<int> grid;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> vel;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<Vector3> force;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<float> smoke;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<Vector3> pos;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<float> psize;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Color> color;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<float> rot;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<MegaFlowVector> optvel;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Matrix4x4 tm;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Matrix4x4 invtm;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GetVel GetGridVel;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Sample SampleVel;

	[Token(Token = "0x40002BA")]
	public const float oadj = 0.003921569f;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Vector3 maxval;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool optimized;

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x13E6B00", Offset = "0x13E6B00", VA = "0x13E6B00")]
	public void DebugFlow(float st, float vt)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x13E698C", Offset = "0x13E698C", VA = "0x13E698C")]
	public Vector3 GetGridVelWorld(Vector3 pos, ref bool inbounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x13E135C", Offset = "0x13E135C", VA = "0x13E135C")]
	public void Prepare(Matrix4x4 wltm)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x13E761C", Offset = "0x13E761C", VA = "0x13E761C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x13E77EC", Offset = "0x13E77EC", VA = "0x13E77EC")]
	public Vector3 GetGridVelFloat(Vector3 pos, ref bool inbounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x13E7D70", Offset = "0x13E7D70", VA = "0x13E7D70")]
	public Vector3 GetGridVelOpt(Vector3 pos, ref bool inbounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x13E863C", Offset = "0x13E863C", VA = "0x13E863C")]
	public Vector3 SampleVelFloat(int x, int y, int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x13E86FC", Offset = "0x13E86FC", VA = "0x13E86FC")]
	public Vector3 SampleVelOpt(int x, int y, int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x13E0638", Offset = "0x13E0638", VA = "0x13E0638")]
	public void Optimize()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x13E8810", Offset = "0x13E8810", VA = "0x13E8810")]
	public Vector3 GetGridVelFloatXY(Vector3 pos, ref bool inbounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x13E8B24", Offset = "0x13E8B24", VA = "0x13E8B24")]
	public Vector3 GetGridVelOptXY(Vector3 pos, ref bool inbounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x13E8FD8", Offset = "0x13E8FD8", VA = "0x13E8FD8")]
	public MegaFlowFrame()
	{
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class MegaFlowPosFrame
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float time;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int frame;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x13ED590", Offset = "0x13ED590", VA = "0x13ED590")]
	public MegaFlowPosFrame()
	{
	}
}
[Token(Token = "0x2000064")]
public class MegaFlowMovingSource : MonoBehaviour
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaFlow source;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int framenum;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float flowtime;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float flowtimestep;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float flowscale;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float mindist;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool drawpath;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<MegaFlowPos> flowpositions;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MegaFlowFrame flow;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float ftime;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 lastpos;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Matrix4x4 framegizmotm;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Matrix4x4 frametm;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool usefalloff;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AnimationCurve falloffcrv;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<MegaFlowPosFrame> frames;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x13E93B4", Offset = "0x13E93B4", VA = "0x13E93B4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FDBC", Offset = "0xD1FDBC")]
	public void Help()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x13E9400", Offset = "0x13E9400", VA = "0x13E9400")]
	private void Start()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x13E9490", Offset = "0x13E9490", VA = "0x13E9490")]
	private void Update()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x13E9C6C", Offset = "0x13E9C6C", VA = "0x13E9C6C")]
	private void ProcessPos()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x13E9E20", Offset = "0x13E9E20", VA = "0x13E9E20")]
	private void AddPos(Vector3 pos, Vector3 vel, Matrix4x4 tm, Matrix4x4 tm1, float flowscale)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x13E9FF0", Offset = "0x13E9FF0", VA = "0x13E9FF0")]
	private void UpdateLast(Vector3 pos, Vector3 vel, Matrix4x4 tm, Matrix4x4 tm1, float flowscale)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x13E9694", Offset = "0x13E9694", VA = "0x13E9694")]
	public void SaveFlowPosition(Vector3 pos, Quaternion rot, Vector3 vel, float flowscale)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x13EA0F8", Offset = "0x13EA0F8", VA = "0x13EA0F8")]
	public Vector3 FindFlowPos(Vector3 pos, ref bool inbounds, ref Matrix4x4 tm, ref float fvel, ref int frame, ref float falloff)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x13EA3DC", Offset = "0x13EA3DC", VA = "0x13EA3DC")]
	public void DrawMoveGizmo()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x13EA714", Offset = "0x13EA714", VA = "0x13EA714")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x13EA8B4", Offset = "0x13EA8B4", VA = "0x13EA8B4")]
	public MegaFlowMovingSource()
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
public class MegaFlowSource
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MegaFlow source;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F384", Offset = "0xD0F384")]
	public float weight;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x13EEFA8", Offset = "0x13EEFA8", VA = "0x13EEFA8")]
	public MegaFlowSource()
	{
	}
}
[Token(Token = "0x2000066")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD098E0", Offset = "0xD098E0")]
public class MegaFlowParticle : MonoBehaviour
{
	[Token(Token = "0x2000533")]
	public class MegaFlowTaskInfo
	{
		[Token(Token = "0x4002A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x4002A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x4002A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutoResetEvent pauseevent;

		[Token(Token = "0x4002A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Thread _thread;

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x13EB674", Offset = "0x13EB674", VA = "0x13EB674")]
		public MegaFlowTaskInfo()
		{
		}
	}

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaFlow source;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MegaFlowFrame frame;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int framenum;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MegaFlowFrame frame1;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int framenum1;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 vel;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float t;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F39C", Offset = "0xD0F39C")]
	public float mass;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float area;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ParticleSystem particle;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float dt;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float scale;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int maxparticles;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Matrix4x4 tm;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Matrix4x4 invtm;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Matrix4x4 tm1;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Matrix4x4 invtm1;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float tdt;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float coef;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float oomass;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int Cores;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float usedt;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F3B8", Offset = "0xD0F3B8")]
	public float framealpha;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool interp;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	public bool UseThreading;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public MegaFlowTaskInfo[] tasks;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isRunning;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x13EAA58", Offset = "0x13EAA58", VA = "0x13EAA58")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FDF4", Offset = "0xD1FDF4")]
	public void Help()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x13EAAA4", Offset = "0x13EAAA4", VA = "0x13EAAA4")]
	public void SetFrame(int f)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x13EAB68", Offset = "0x13EAB68", VA = "0x13EAB68")]
	public void SetFrame1(int f)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x13EAC2C", Offset = "0x13EAC2C", VA = "0x13EAC2C")]
	private void RunSim(int start, int end)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x13EAF68", Offset = "0x13EAF68", VA = "0x13EAF68")]
	private void RunSimNew(int start, int end)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x13EB368", Offset = "0x13EB368", VA = "0x13EB368")]
	private void Start()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x13EB428", Offset = "0x13EB428", VA = "0x13EB428")]
	private void MakeThreads()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x13EB67C", Offset = "0x13EB67C", VA = "0x13EB67C")]
	private void Update()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x13EBD80", Offset = "0x13EBD80", VA = "0x13EBD80")]
	private void WaitJobs()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x13EBE20", Offset = "0x13EBE20", VA = "0x13EBE20")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x13EBF34", Offset = "0x13EBF34", VA = "0x13EBF34")]
	private void DoWork(object info)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x13EC03C", Offset = "0x13EC03C", VA = "0x13EC03C")]
	public void UpdateSim()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x13EC3A0", Offset = "0x13EC3A0", VA = "0x13EC3A0")]
	public MegaFlowParticle()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09918", Offset = "0xD09918")]
public class MegaFlowParticleMoving : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaFlowMovingSource msource;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MegaFlowFrame frame;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int framenum;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F3D0", Offset = "0xD0F3D0")]
	public float mass;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float area;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem particle;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float dt;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float scale;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int maxparticles;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Matrix4x4 tm;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Matrix4x4 invtm;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float tdt;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float coef;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float oomass;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int Cores;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float usedt;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float speed;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float gravity;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool UseThreading;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public MegaFlowTaskInfo[] tasks;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool isRunning;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x13EC48C", Offset = "0x13EC48C", VA = "0x13EC48C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FE2C", Offset = "0xD1FE2C")]
	public void Help()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x13EC4D8", Offset = "0x13EC4D8", VA = "0x13EC4D8")]
	public void SetFrame(int f)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x13EC5D8", Offset = "0x13EC5D8", VA = "0x13EC5D8")]
	private void RunSim(int start, int end)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x13EC9C0", Offset = "0x13EC9C0", VA = "0x13EC9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x13ECA80", Offset = "0x13ECA80", VA = "0x13ECA80")]
	private void MakeThreads()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x13ECCD4", Offset = "0x13ECCD4", VA = "0x13ECCD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x13ED258", Offset = "0x13ED258", VA = "0x13ED258")]
	private void WaitJobs()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x13ED2F8", Offset = "0x13ED2F8", VA = "0x13ED2F8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x13ED40C", Offset = "0x13ED40C", VA = "0x13ED40C")]
	private void DoWork(object info)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x13ED514", Offset = "0x13ED514", VA = "0x13ED514")]
	public MegaFlowParticleMoving()
	{
	}
}
[Token(Token = "0x2000068")]
public class MegaFlowPos
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Matrix4x4 tm1;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Matrix4x4 invtm1;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 pos;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float radius;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int frame;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float fpos;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float vel;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float time;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float stime;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float alpha;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float falloff;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x13E9F54", Offset = "0x13E9F54", VA = "0x13E9F54")]
	public void Set(Vector3 _pos, Vector3 _vel, Matrix4x4 _tm, Matrix4x4 _tm1, float _flowscale, float _ftime)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x13E9F44", Offset = "0x13E9F44", VA = "0x13E9F44")]
	public MegaFlowPos()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09950", Offset = "0xD09950")]
[ExecuteInEditMode]
public class MegaFlowRBody : MegaFlowEffect
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float coef;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Rigidbody rbody;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x13ED598", Offset = "0x13ED598", VA = "0x13ED598")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FE64", Offset = "0xD1FE64")]
	public void RbodyHelp()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x13ED5E4", Offset = "0x13ED5E4", VA = "0x13ED5E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x13ED64C", Offset = "0x13ED64C", VA = "0x13ED64C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x13ED7B4", Offset = "0x13ED7B4", VA = "0x13ED7B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x13ED9AC", Offset = "0x13ED9AC", VA = "0x13ED9AC")]
	public MegaFlowRBody()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0999C", Offset = "0xD0999C")]
[ExecuteInEditMode]
public class MegaFlowSample : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaFlow source;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int framenum;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 velocity;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inbounds;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x13ED9B0", Offset = "0x13ED9B0", VA = "0x13ED9B0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FE9C", Offset = "0xD1FE9C")]
	public void Help()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x13ED9FC", Offset = "0x13ED9FC", VA = "0x13ED9FC")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x13EDA34", Offset = "0x13EDA34", VA = "0x13EDA34")]
	public Vector3 GetVelocity(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x13EDB88", Offset = "0x13EDB88", VA = "0x13EDB88")]
	private void Update()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x13EDC34", Offset = "0x13EDC34", VA = "0x13EDC34")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x13EDCA4", Offset = "0x13EDCA4", VA = "0x13EDCA4")]
	public MegaFlowSample()
	{
	}
}
[Serializable]
[Token(Token = "0x200006B")]
public class MegaFlowSmokeObj
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float lifetime;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject obj;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x13EED78", Offset = "0x13EED78", VA = "0x13EED78")]
	public MegaFlowSmokeObj()
	{
	}
}
[Serializable]
[Token(Token = "0x200006C")]
public class MegaFlowSmokeObjDef
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MegaFlowEffect obj;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotlow;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rothigh;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 rotspeedlow;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 rotspeedhigh;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 scalelow;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 scalehigh;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float weight;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float tw;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x13EEED8", Offset = "0x13EEED8", VA = "0x13EEED8")]
	public MegaFlowSmokeObjDef()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD099E8", Offset = "0xD099E8")]
[ExecuteInEditMode]
public class MegaFlowSmokeGun : MonoBehaviour
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaFlow source;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int framenum;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 vel;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float flowrate;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float lifetime;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F3EC", Offset = "0xD0F3EC")]
	public float mass;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float area;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float width;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float height;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int poolSize;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float Gravity;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float xspeed;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float yspeed;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 offset;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int count;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float scale;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 screenPoint;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 offset1;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int colindex;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float t;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 smokepos;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<MegaFlowSmokeObjDef> emitobjects;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<GameObject> pool;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<MegaFlowSmokeObj> objects;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<Color> cols;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float totalweight;

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x13EDCAC", Offset = "0x13EDCAC", VA = "0x13EDCAC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FED4", Offset = "0xD1FED4")]
	public void Help()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x13EDCF8", Offset = "0x13EDCF8", VA = "0x13EDCF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x13EDE7C", Offset = "0x13EDE7C", VA = "0x13EDE7C")]
	private GameObject CreateObj()
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x13EE278", Offset = "0x13EE278", VA = "0x13EE278")]
	private GameObject Pop()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x13EE1FC", Offset = "0x13EE1FC", VA = "0x13EE1FC")]
	private void Push(GameObject obj)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x13EE324", Offset = "0x13EE324", VA = "0x13EE324")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x13EE4A8", Offset = "0x13EE4A8", VA = "0x13EE4A8")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x13EE5DC", Offset = "0x13EE5DC", VA = "0x13EE5DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x13EED80", Offset = "0x13EED80", VA = "0x13EED80")]
	public MegaFlowSmokeGun()
	{
	}
}
[Token(Token = "0x200006E")]
public class MegaFlowTaskInfo
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int start;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int end;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AutoResetEvent pauseevent;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Thread _thread;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x13ECCCC", Offset = "0x13ECCCC", VA = "0x13ECCCC")]
	public MegaFlowTaskInfo()
	{
	}
}
[Token(Token = "0x200006F")]
[ExecuteInEditMode]
public class MegaFlowTest : MonoBehaviour
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float size;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] points;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] dirs;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F408", Offset = "0xD0F408")]
	public float x;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F420", Offset = "0xD0F420")]
	public float y;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F438", Offset = "0xD0F438")]
	public float z;

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x13EF2BC", Offset = "0x13EF2BC", VA = "0x13EF2BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x13EF2C0", Offset = "0x13EF2C0", VA = "0x13EF2C0")]
	public void MakeCube()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x13EF588", Offset = "0x13EF588", VA = "0x13EF588")]
	private void Update()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x13EF58C", Offset = "0x13EF58C", VA = "0x13EF58C")]
	public Vector3 GetDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x13EF700", Offset = "0x13EF700", VA = "0x13EF700")]
	public Vector3 GetPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x13EF874", Offset = "0x13EF874", VA = "0x13EF874")]
	public void DrawGizmo()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x13EFCEC", Offset = "0x13EFCEC", VA = "0x13EFCEC")]
	public MegaFlowTest()
	{
	}
}
[Serializable]
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xD09A44", Offset = "0xD09A44")]
public class MegaBox3
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 center;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 min;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 max;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float radius;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3[] verts;

	[Token(Token = "0x1700002C")]
	public Vector3 Item
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x13DFD64", Offset = "0x13DFD64", VA = "0x13DFD64")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x13DFDAC", Offset = "0x13DFDAC", VA = "0x13DFDAC")]
		set
		{
		}
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x13DF6B0", Offset = "0x13DF6B0", VA = "0x13DF6B0")]
	public Vector3 Size()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x13DF750", Offset = "0x13DF750", VA = "0x13DF750")]
	public void SetSize(Vector3 size)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x13DF8C8", Offset = "0x13DF8C8", VA = "0x13DF8C8")]
	public float Radius()
	{
		return default(float);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x13DF900", Offset = "0x13DF900", VA = "0x13DF900", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x13DFB0C", Offset = "0x13DFB0C", VA = "0x13DFB0C")]
	private Vector3 GetVert(int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x13DF850", Offset = "0x13DF850", VA = "0x13DF850")]
	private void CalcVerts()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x13DFDF4", Offset = "0x13DFDF4", VA = "0x13DFDF4")]
	public static Vector3 GetVert(Bounds bounds, int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x13E0144", Offset = "0x13E0144", VA = "0x13E0144")]
	public MegaBox3()
	{
	}
}
[Serializable]
[Token(Token = "0x2000071")]
public class MegaBezFloatKey
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float val;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float intan;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float outtan;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float intanx;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float outtanx;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float coef0;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float coef1;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float coef2;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float coef3;

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x13DE1A0", Offset = "0x13DE1A0", VA = "0x13DE1A0")]
	public MegaBezFloatKey()
	{
	}
}
[Serializable]
[Token(Token = "0x2000072")]
public class MegaBezFloatKeyControl : MegaControl
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MegaBezFloatKey[] Keys;

	[Token(Token = "0x4000353")]
	private const float SCALE = 4800f;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float f;

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x13DE1A8", Offset = "0x13DE1A8", VA = "0x13DE1A8")]
	public void InitKeys()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x13DE304", Offset = "0x13DE304", VA = "0x13DE304")]
	public void InitKeys(float scale)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x13DE458", Offset = "0x13DE458", VA = "0x13DE458")]
	public void InitKeysMaya()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x13DE60C", Offset = "0x13DE60C", VA = "0x13DE60C")]
	public float GetHermiteFloat(float tt)
	{
		return default(float);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x13DE864", Offset = "0x13DE864", VA = "0x13DE864")]
	public void MakeKey(MegaBezFloatKey key, Vector2 pco, Vector2 pleft, Vector2 pright, Vector2 co, Vector2 left, Vector2 right)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x13DE8D0", Offset = "0x13DE8D0", VA = "0x13DE8D0")]
	public void Interp(float alpha, int key)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x13DE9A0", Offset = "0x13DE9A0", VA = "0x13DE9A0", Slot = "4")]
	public override float GetFloat(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x13DEA90", Offset = "0x13DEA90", VA = "0x13DEA90")]
	public MegaBezFloatKeyControl()
	{
	}
}
[Serializable]
[Token(Token = "0x2000073")]
public class MegaBezVector3Key
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 val;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 intan;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 outtan;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 coef1;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 coef2;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 coef3;

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x13DEAA0", Offset = "0x13DEAA0", VA = "0x13DEAA0")]
	public MegaBezVector3Key()
	{
	}
}
[Serializable]
[Token(Token = "0x2000074")]
public class MegaBezVector3KeyControl : MegaControl
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MegaBezVector3Key[] Keys;

	[Token(Token = "0x400035C")]
	private const float SCALE = 4800f;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 f;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x13DEAA8", Offset = "0x13DEAA8", VA = "0x13DEAA8")]
	public void Scale(float scl)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x13DF008", Offset = "0x13DF008", VA = "0x13DF008")]
	public void Scale(Vector3 scl)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x13DF1AC", Offset = "0x13DF1AC", VA = "0x13DF1AC")]
	public void Move(Vector3 scl)
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x13DF33C", Offset = "0x13DF33C", VA = "0x13DF33C")]
	public void Rotate(Matrix4x4 tm)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x13DEC10", Offset = "0x13DEC10", VA = "0x13DEC10")]
	public void InitKeys()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x13DF444", Offset = "0x13DF444", VA = "0x13DF444")]
	public void Interp(float alpha, int key)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x13DF5A0", Offset = "0x13DF5A0", VA = "0x13DF5A0", Slot = "5")]
	public override Vector3 GetVector3(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x13DF6A8", Offset = "0x13DF6A8", VA = "0x13DF6A8")]
	public MegaBezVector3KeyControl()
	{
	}
}
[Serializable]
[Token(Token = "0x2000075")]
public class MegaControl
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float[] Times;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int lastkey;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float lasttime;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x13E01A4", Offset = "0x13E01A4", VA = "0x13E01A4", Slot = "4")]
	public virtual float GetFloat(float time)
	{
		return default(float);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x13E01AC", Offset = "0x13E01AC", VA = "0x13E01AC", Slot = "5")]
	public virtual Vector3 GetVector3(float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x13E020C", Offset = "0x13E020C", VA = "0x13E020C")]
	private int BinSearch(float t, int low, int high)
	{
		return default(int);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x13DE7BC", Offset = "0x13DE7BC", VA = "0x13DE7BC")]
	public int GetKey(float t)
	{
		return default(int);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x13DEA98", Offset = "0x13DEA98", VA = "0x13DEA98")]
	public MegaControl()
	{
	}
}
[Token(Token = "0x2000076")]
public class MegaMatrix
{
	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1CEA8B4", Offset = "0x1CEA8B4", VA = "0x1CEA8B4")]
	public static void Set(ref Matrix4x4 mat, float[] vals)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1CEA938", Offset = "0x1CEA938", VA = "0x1CEA938")]
	public static void Translate(ref Matrix4x4 mat, Vector3 p)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1CEAA7C", Offset = "0x1CEAA7C", VA = "0x1CEAA7C")]
	public static void Scale(ref Matrix4x4 mat, Vector3 s, bool trans)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1CEAC48", Offset = "0x1CEAC48", VA = "0x1CEAC48")]
	public static Vector3 GetTrans(ref Matrix4x4 mat)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1CEACB8", Offset = "0x1CEACB8", VA = "0x1CEACB8")]
	public static void SetTrans(ref Matrix4x4 mat, Vector3 p)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1CEAD20", Offset = "0x1CEAD20", VA = "0x1CEAD20")]
	public static void NoTrans(ref Matrix4x4 mat)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1CEA93C", Offset = "0x1CEA93C", VA = "0x1CEA93C")]
	public static void Translate(ref Matrix4x4 mat, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1CEAD7C", Offset = "0x1CEAD7C", VA = "0x1CEAD7C")]
	public static void RotateX(ref Matrix4x4 mat, float ang)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1CEAEFC", Offset = "0x1CEAEFC", VA = "0x1CEAEFC")]
	public static void RotateY(ref Matrix4x4 mat, float ang)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1CEB07C", Offset = "0x1CEB07C", VA = "0x1CEB07C")]
	public static void RotateZ(ref Matrix4x4 mat, float ang)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1CEB1FC", Offset = "0x1CEB1FC", VA = "0x1CEB1FC")]
	public static void Rotate(ref Matrix4x4 mat, Vector3 rot)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1CEB240", Offset = "0x1CEB240", VA = "0x1CEB240")]
	public static void LookAt(ref Matrix4x4 mat, Vector3 source_pos, Vector3 target_pos)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1CEB474", Offset = "0x1CEB474", VA = "0x1CEB474")]
	public static void LookAt(ref Matrix4x4 mat, Vector3 source_pos, Vector3 target_pos, Vector3 up)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1CEB6B0", Offset = "0x1CEB6B0", VA = "0x1CEB6B0")]
	public static void Set(ref Matrix4x4 mat, Vector3 right, Vector3 up, Vector3 fwd)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1CEB800", Offset = "0x1CEB800", VA = "0x1CEB800")]
	public static void SetTR(ref Matrix4x4 mat, Vector3 p, Quaternion q)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1CEB8B4", Offset = "0x1CEB8B4", VA = "0x1CEB8B4")]
	public MegaMatrix()
	{
	}
}
[Token(Token = "0x2000077")]
public class MegaKML
{
	[Token(Token = "0x2000534")]
	private enum kmlGeometryType
	{
		[Token(Token = "0x4002A6D")]
		POINT,
		[Token(Token = "0x4002A6E")]
		LINESTRING
	}

	[Token(Token = "0x2000535")]
	private enum kmlTagType
	{
		[Token(Token = "0x4002A70")]
		POINT,
		[Token(Token = "0x4002A71")]
		LINESTRING,
		[Token(Token = "0x4002A72")]
		COORDINATES
	}

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Hashtable> PointsCollection;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Hashtable> LinesCollection;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Hashtable Point;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hashtable Line;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Hashtable Coordinates;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Hashtable KMLCollection;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private kmlGeometryType? currentGeometry;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private kmlTagType? currentKmlTag;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string lastError;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> points;

	[Token(Token = "0x1700002D")]
	public string LastError
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x13F06D0", Offset = "0x13F06D0", VA = "0x13F06D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000296")]
		[Address(RVA = "0x13F065C", Offset = "0x13F065C", VA = "0x13F065C")]
		set
		{
		}
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x13EFD64", Offset = "0x13EFD64", VA = "0x13EFD64")]
	public Hashtable KMLDecode(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x13EFE34", Offset = "0x13EFE34", VA = "0x13EFE34")]
	private void readKML(string fileName)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x13F0228", Offset = "0x13F0228", VA = "0x13F0228")]
	protected void parseGeometryVal(string tag_value)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x13F02BC", Offset = "0x13F02BC", VA = "0x13F02BC")]
	protected void parsePoint(string tag_value)
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x13F045C", Offset = "0x13F045C", VA = "0x13F045C")]
	protected void parseLine(string tag_value)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x13F06D8", Offset = "0x13F06D8", VA = "0x13F06D8")]
	public Vector3[] GetPoints(float scale)
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x13F08C8", Offset = "0x13F08C8", VA = "0x13F08C8")]
	private Vector3 ConvertLatLon(Vector3 pos, Vector3 centre, float scale, bool adjust)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x13F09C8", Offset = "0x13F09C8", VA = "0x13F09C8")]
	public MegaKML()
	{
	}
}
[Token(Token = "0x2000078")]
[ExecuteInEditMode]
public class MegaPathFollow : MonoBehaviour
{
	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tangentDist;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float alpha;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool rot;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float time;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ctime;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int curve;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MegaShape target;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float distance;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool animate;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool UseDistance;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool addtwist;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 offset;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 rotate;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MegaRepeatMode loopmode;

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1CEB984", Offset = "0x1CEB984", VA = "0x1CEB984")]
	public void SetPos(float a)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1CEC838", Offset = "0x1CEC838", VA = "0x1CEC838")]
	public void SetPosFomDist(float dist)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1CECD60", Offset = "0x1CECD60", VA = "0x1CECD60")]
	public void Start()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1CECD68", Offset = "0x1CECD68", VA = "0x1CECD68")]
	private void Update()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1CECE84", Offset = "0x1CECE84", VA = "0x1CECE84")]
	public MegaPathFollow()
	{
	}
}
[Serializable]
[Token(Token = "0x2000079")]
public class MegaKnotAnimCurve
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve px;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve py;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve pz;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve ix;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve iy;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve iz;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve ox;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve oy;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve oz;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x13F0EBC", Offset = "0x13F0EBC", VA = "0x13F0EBC")]
	public void GetState(MegaKnot knot, float t)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x13F0FC4", Offset = "0x13F0FC4", VA = "0x13F0FC4")]
	public void AddKey(MegaKnot knot, float t)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x13F129C", Offset = "0x13F129C", VA = "0x13F129C")]
	public void MoveKey(MegaKnot knot, float t, int k)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x13F159C", Offset = "0x13F159C", VA = "0x13F159C")]
	public void RemoveKey(int k)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x13F166C", Offset = "0x13F166C", VA = "0x13F166C")]
	public MegaKnotAnimCurve()
	{
	}
}
[Serializable]
[Token(Token = "0x200007A")]
public class MegaSplineAnim
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool Enabled;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MegaKnotAnimCurve> knots;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xFB2014", Offset = "0xFB2014", VA = "0xFB2014")]
	public void SetState(MegaSpline spline, float t)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xFB2018", Offset = "0xFB2018", VA = "0xFB2018")]
	public void GetState1(MegaSpline spline, float t)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xFB20F8", Offset = "0xFB20F8", VA = "0xFB20F8")]
	private int FindKey(float t)
	{
		return default(int);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xFB21E4", Offset = "0xFB21E4", VA = "0xFB21E4")]
	public void AddState(MegaSpline spline, float t)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xFB24C4", Offset = "0xFB24C4", VA = "0xFB24C4")]
	public void Remove(float t)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xFB2584", Offset = "0xFB2584", VA = "0xFB2584")]
	public void RemoveKey(int k)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xFB23AC", Offset = "0xFB23AC", VA = "0xFB23AC")]
	public void Init(MegaSpline spline)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xFB2634", Offset = "0xFB2634", VA = "0xFB2634")]
	public int NumKeys()
	{
		return default(int);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xFB26B4", Offset = "0xFB26B4", VA = "0xFB26B4")]
	public float GetKeyTime(int k)
	{
		return default(float);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xFB2774", Offset = "0xFB2774", VA = "0xFB2774")]
	public void SetKeyTime(MegaSpline spline, int k, float t)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xFB2888", Offset = "0xFB2888", VA = "0xFB2888")]
	public void GetKey(MegaSpline spline, int k)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xFB28C8", Offset = "0xFB28C8", VA = "0xFB28C8")]
	public void UpdateKey(MegaSpline spline, int k)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xFB1FA4", Offset = "0xFB1FA4", VA = "0xFB1FA4")]
	public MegaSplineAnim()
	{
	}
}
[Serializable]
[Token(Token = "0x200007B")]
public class MegaKnotAnim
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int p;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int t;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int s;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MegaBezVector3KeyControl con;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x13F0EB4", Offset = "0x13F0EB4", VA = "0x13F0EB4")]
	public MegaKnotAnim()
	{
	}
}
[Token(Token = "0x200007C")]
public enum MegaHandleType
{
	[Token(Token = "0x400038A")]
	Position,
	[Token(Token = "0x400038B")]
	Free
}
[Serializable]
[Token(Token = "0x200007D")]
public class MegaKnot
{
	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 p;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 invec;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 outvec;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float seglength;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float length;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool notlocked;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float twist;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int id;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] lengths;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] points;

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x13F0AA0", Offset = "0x13F0AA0", VA = "0x13F0AA0")]
	public MegaKnot()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x13F0AD4", Offset = "0x13F0AD4", VA = "0x13F0AD4")]
	public Vector3 Interpolate(float t, MegaKnot k)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x13F0BE4", Offset = "0x13F0BE4", VA = "0x13F0BE4")]
	public Vector3 InterpolateCS(float t, MegaKnot k)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x13F0DE4", Offset = "0x13F0DE4", VA = "0x13F0DE4")]
	public Vector3 Tangent(float t, MegaKnot k)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200007E")]
public enum MegaShapeEase
{
	[Token(Token = "0x4000397")]
	Linear,
	[Token(Token = "0x4000398")]
	Sine
}
[Token(Token = "0x200007F")]
public enum MegaShapeBezComputeMode
{
	[Token(Token = "0x400039A")]
	Old,
	[Token(Token = "0x400039B")]
	New
}
[Serializable]
[Token(Token = "0x2000080")]
public class MegaSpline
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float length;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool closed;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MegaKnot> knots;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MegaKnotAnim> animations;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 rotate;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 scale;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool reverse;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int outlineSpline;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float outline;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool constantSpeed;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int subdivs;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MegaShapeEase twistmode;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MegaSplineAnim splineanim;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xFAE70C", Offset = "0xFAE70C", VA = "0xFAE70C")]
	public static MegaSpline Copy(MegaSpline src)
	{
		return null;
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xFAE9D4", Offset = "0xFAE9D4", VA = "0xFAE9D4")]
	public float KnotDistance(int k, int k1)
	{
		return default(float);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xFAD630", Offset = "0xFAD630", VA = "0xFAD630")]
	public void AddKnot(Vector3 p, Vector3 invec, Vector3 outvec)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xFAE564", Offset = "0xFAE564", VA = "0xFAE564")]
	public void AddKnot(Vector3 p, Vector3 invec, Vector3 outvec, Matrix4x4 tm)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xFAEB20", Offset = "0xFAEB20", VA = "0xFAEB20")]
	public bool Contains(Vector3 p)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xFAD97C", Offset = "0xFAD97C", VA = "0xFAD97C")]
	public float Area()
	{
		return default(float);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xFAEE0C", Offset = "0xFAEE0C", VA = "0xFAEE0C")]
	public float CalcLength(int steps)
	{
		return default(float);
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xFAEE1C", Offset = "0xFAEE1C", VA = "0xFAEE1C")]
	public float CalcLength()
	{
		return default(float);
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xFAF524", Offset = "0xFAF524", VA = "0xFAF524")]
	public float GetTwist(float alpha)
	{
		return default(float);
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xFAFA5C", Offset = "0xFAFA5C", VA = "0xFAFA5C")]
	public Vector3 Interpolate(float alpha, bool type, ref int k)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xFAFF60", Offset = "0xFAFF60", VA = "0xFAFF60")]
	public Vector3 InterpolateCS(float alpha, bool type, ref int k)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xFB03F0", Offset = "0xFB03F0", VA = "0xFB03F0")]
	private float easeInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xFAF9A8", Offset = "0xFAF9A8", VA = "0xFAF9A8")]
	private float TwistVal(float v1, float v2, float alpha)
	{
		return default(float);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xFB0494", Offset = "0xFB0494", VA = "0xFB0494")]
	public Vector3 Interpolate(float alpha, bool type, ref int k, ref float twist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xFB0AE4", Offset = "0xFB0AE4", VA = "0xFB0AE4")]
	public Vector3 InterpolateCS(float alpha, bool type, ref int k, ref float twist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xFB1230", Offset = "0xFB1230", VA = "0xFB1230")]
	public Vector3 InterpCurve3D(float alpha, bool type, ref int k)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xFB1508", Offset = "0xFB1508", VA = "0xFB1508")]
	public Vector3 InterpBezier3D(int knot, float a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xFB1630", Offset = "0xFB1630", VA = "0xFB1630")]
	public void Centre(float scale)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xFB199C", Offset = "0xFB199C", VA = "0xFB199C")]
	public void Reverse()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xFB1B34", Offset = "0xFB1B34", VA = "0xFB1B34")]
	public void SetHeight(float y)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xFB1C2C", Offset = "0xFB1C2C", VA = "0xFB1C2C")]
	public void SetTwist(float twist)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xFB1CCC", Offset = "0xFB1CCC", VA = "0xFB1CCC")]
	public Vector3 FindNearestPoint(Vector3 p, int iterations, ref int kn, ref Vector3 tangent, ref float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xFAD0A4", Offset = "0xFAD0A4", VA = "0xFAD0A4")]
	public MegaSpline()
	{
	}
}
[Token(Token = "0x2000081")]
public enum MeshShapeType
{
	[Token(Token = "0x40003AB")]
	Fill,
	[Token(Token = "0x40003AC")]
	Tube,
	[Token(Token = "0x40003AD")]
	Box,
	[Token(Token = "0x40003AE")]
	Ribbon
}
[Token(Token = "0x2000082")]
[ExecuteInEditMode]
public class MegaShape : MonoBehaviour
{
	[Token(Token = "0x2000536")]
	public enum CrossSectionType
	{
		[Token(Token = "0x4002A74")]
		Circle,
		[Token(Token = "0x4002A75")]
		Box
	}

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaAxis axis;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color col1;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color col2;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color KnotCol;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color HandleCol;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color VecCol;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float KnotSize;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float stepdist;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool normalizedInterp;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool drawHandles;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	public bool drawKnots;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	public bool drawspline;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool drawTwist;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool lockhandles;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool showorigin;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool usesnap;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool usesnaphandles;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 snap;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MegaHandleType handleType;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float CursorPos;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<MegaSpline> splines;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool showanimations;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float keytime;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool updateondrag;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float angleError;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float areaError;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float hardAngle;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float packMargin;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float defRadius;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool smoothonaddknot;

	[Token(Token = "0x40003CD")]
	private const float CIRCLE_VECTOR_LENGTH = 0.5517862f;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float testtime;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float time;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool animate;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float speed;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int selcurve;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool imported;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float CursorPercent;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float t;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float MaxTime;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MegaRepeatMode LoopMode;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool dolateupdate;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	public bool makeMesh;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public MeshShapeType meshType;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool DoubleSided;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool CalcTangents;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool GenUV;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
	public bool PhysUV;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float Height;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int HeightSegs;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int Sides;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float TubeStep;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float Start;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float End;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float Rotate;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Vector3 Pivot;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector2 UVOffset;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Vector2 UVRotate;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Vector2 UVScale;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector2 UVOffset1;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Vector2 UVRotate1;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Vector2 UVScale1;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector2 UVOffset2;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Vector2 UVRotate3;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Vector2 UVScale3;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool autosmooth;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float smoothness;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool flipNormals;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public MegaShapeBezComputeMode smoothMode;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool smoothOnDrag;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool freezeX;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	public bool freezeY;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
	public bool freezeZ;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Material mat1;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Material mat2;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Material mat3;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool UseHeightCurve;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AnimationCurve heightCrv;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float heightOff;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Mesh shapemesh;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float lastout;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float lastin;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private List<Vector3> verts;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private List<Vector2> uvs;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private List<int> tris;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private List<int> tris1;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private List<int> tris2;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3[] cross;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public int tsides;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public CrossSectionType crossType;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public float Twist;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public int strands;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float tradius;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float offset;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float uvtilex;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public float uvtiley;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public float uvtwist;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public float TubeLength;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float TubeStart;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public float SegsPerUnit;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public float TwistPerUnit;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float strandRadius;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public float startAng;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public float rotate;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int segments;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public bool cap;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Vector3[] tverts;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Vector2[] tuvs;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private int[] ttris;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Matrix4x4 tm;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private Matrix4x4 mat;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Matrix4x4 wtm;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public MegaAxis RopeUp;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private Vector3 ropeup;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public AnimationCurve scaleX;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public AnimationCurve scaleY;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public bool unlinkScale;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	public float boxwidth;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public float boxheight;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private float[] boxuv;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public MegaAxis raxis;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	public int ribsegs;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private int[] empty;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int CURVELENGTHSTEPS;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public bool conform;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public GameObject target;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public Collider conformCollider;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public float[] offsets;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public float[] last;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public float conformAmount;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	public float raystartoff;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public float raydist;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	public float conformOffset;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private float minz;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
	public float conformWeight;

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1CECF20", Offset = "0x1CECF20", VA = "0x1CECF20", Slot = "4")]
	public virtual void MakeShape()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1CED3EC", Offset = "0x1CED3EC", VA = "0x1CED3EC", Slot = "5")]
	public virtual string GetHelpURL()
	{
		return null;
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1CED434", Offset = "0x1CED434", VA = "0x1CED434")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FF0C", Offset = "0xD1FF0C")]
	public void Help()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x1CED4A4", Offset = "0x1CED4A4", VA = "0x1CED4A4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FF44", Offset = "0xD1FF44")]
	public void ResetMesh()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1CED154", Offset = "0x1CED154", VA = "0x1CED154")]
	public Matrix4x4 GetMatrix()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1CEE928", Offset = "0x1CEE928", VA = "0x1CEE928")]
	public void CopyIDS(int curve)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1CEEA88", Offset = "0x1CEEA88", VA = "0x1CEEA88")]
	public void Reverse(int c)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1CEEB20", Offset = "0x1CEEB20", VA = "0x1CEEB20")]
	public void SetHeight(int c, float y)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1CEEBCC", Offset = "0x1CEEBCC", VA = "0x1CEEBCC")]
	public void SetTwist(int c, float twist)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1CED270", Offset = "0x1CED270", VA = "0x1CED270")]
	public MegaSpline NewSpline()
	{
		return null;
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1CEEC78", Offset = "0x1CEEC78", VA = "0x1CEEC78")]
	private void Reset()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1CEEC84", Offset = "0x1CEEC84", VA = "0x1CEEC84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1CEECF0", Offset = "0x1CEECF0", VA = "0x1CEECF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1CEF49C", Offset = "0x1CEF49C", VA = "0x1CEF49C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1CEED00", Offset = "0x1CEED00", VA = "0x1CEED00")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1CEF4AC", Offset = "0x1CEF4AC", VA = "0x1CEF4AC")]
	public void Centre(float scale, Vector3 axis)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1CEFCB0", Offset = "0x1CEFCB0", VA = "0x1CEFCB0")]
	public void Centre(float scale, Vector3 axis, int start)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1CF04B4", Offset = "0x1CF04B4", VA = "0x1CF04B4")]
	public void CoordAdjust(float scale, Vector3 axis, int start)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1CF0998", Offset = "0x1CF0998", VA = "0x1CF0998")]
	public void Scale(float scale)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1CF0D24", Offset = "0x1CF0D24", VA = "0x1CF0D24")]
	public void Scale(float scale, int start)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1CF10B0", Offset = "0x1CF10B0", VA = "0x1CF10B0")]
	public void Scale(Vector3 scale)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1CF1628", Offset = "0x1CF1628", VA = "0x1CF1628")]
	public void MoveSpline(Vector3 delta)
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1CF16CC", Offset = "0x1CF16CC", VA = "0x1CF16CC")]
	public void MoveSpline(Vector3 delta, int c, bool calc)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1CF1B1C", Offset = "0x1CF1B1C", VA = "0x1CF1B1C")]
	public void RotateSpline(Vector3 rot, int c, bool calc)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1CF20A4", Offset = "0x1CF20A4", VA = "0x1CF20A4")]
	public int GetSpline(int p, ref MegaKnotAnim ma)
	{
		return default(int);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1CEC324", Offset = "0x1CEC324", VA = "0x1CEC324")]
	public float GetCurveLength(int curve)
	{
		return default(float);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1CF21F8", Offset = "0x1CF21F8", VA = "0x1CF21F8")]
	public float CalcLength(int curve, int step)
	{
		return default(float);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1CF2298", Offset = "0x1CF2298", VA = "0x1CF2298")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xD1FF7C", Offset = "0xD1FF7C")]
	public void ReCalcLength()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1CED340", Offset = "0x1CED340", VA = "0x1CED340")]
	public float CalcLength()
	{
		return default(float);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1CF1A9C", Offset = "0x1CF1A9C", VA = "0x1CF1A9C")]
	public float CalcLength(int curve)
	{
		return default(float);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1CF229C", Offset = "0x1CF229C", VA = "0x1CF229C")]
	public Vector3 GetKnotPos(int curve, int knot)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1CF2350", Offset = "0x1CF2350", VA = "0x1CF2350")]
	public Vector3 GetKnotInVec(int curve, int knot)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1CF2404", Offset = "0x1CF2404", VA = "0x1CF2404")]
	public Vector3 GetKnotOutVec(int curve, int knot)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1CF24B8", Offset = "0x1CF24B8", VA = "0x1CF24B8")]
	public void SetKnotPos(int curve, int knot, Vector3 p)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1CF258C", Offset = "0x1CF258C", VA = "0x1CF258C")]
	public void SetKnot(int curve, int knot, Vector3 p, Vector3 intan, Vector3 outtan)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1CF2764", Offset = "0x1CF2764", VA = "0x1CF2764")]
	public void SetHandles(int curve, int knot, Vector3 intan, Vector3 outtan)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1CF29E0", Offset = "0x1CF29E0", VA = "0x1CF29E0")]
	public void MoveKnot(int curve, int knot, Vector3 p)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1CF2C70", Offset = "0x1CF2C70", VA = "0x1CF2C70")]
	public Quaternion GetRotate(int curve, float alpha)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1CEC3BC", Offset = "0x1CEC3BC", VA = "0x1CEC3BC")]
	public Vector3 InterpCurve3D(int curve, float alpha, bool type)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1CEBE98", Offset = "0x1CEBE98", VA = "0x1CEBE98")]
	public Vector3 InterpCurve3D(int curve, float alpha, bool type, ref float twist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1CF2D9C", Offset = "0x1CF2D9C", VA = "0x1CF2D9C")]
	public Vector3 InterpCurve3D(int curve, float alpha, float tanalpha, bool type, ref float twist, ref Quaternion rot)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1CF344C", Offset = "0x1CF344C", VA = "0x1CF344C")]
	public static float veccalc(float angstep)
	{
		return default(float);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1CF3814", Offset = "0x1CF3814", VA = "0x1CF3814")]
	public Vector3 FindNearestPointWorld(Vector3 p, int iterations, ref int kn, ref Vector3 tangent, ref float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1CF3C9C", Offset = "0x1CF3C9C", VA = "0x1CF3C9C")]
	public Vector3 FindNearestPointWorldShape(Vector3 p, int iterations, ref int kn, ref Vector3 tangent, ref float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1CF3FA0", Offset = "0x1CF3FA0", VA = "0x1CF3FA0")]
	public Vector3 FindNearestPointWorldXZ(Vector3 p, int iterations, ref int kn, ref Vector3 tangent, ref float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1CF393C", Offset = "0x1CF393C", VA = "0x1CF393C")]
	public Vector3 FindNearestPoint(Vector3 p, int iterations, ref int kn, ref Vector3 tangent, ref float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1CF3DC4", Offset = "0x1CF3DC4", VA = "0x1CF3DC4")]
	public Vector3 FindNearestPointShape(Vector3 p, int iterations, ref int kn, ref Vector3 tangent, ref float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1CF40C8", Offset = "0x1CF40C8", VA = "0x1CF40C8")]
	public Vector3 FindNearestPointXZ(Vector3 p, int iterations, ref int kn, ref Vector3 tangent, ref float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1CF4434", Offset = "0x1CF4434", VA = "0x1CF4434")]
	public Vector3 FindNearestPoint(int crv, Vector3 p, int iterations, ref int kn, ref Vector3 tangent, ref float alpha)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1CF4794", Offset = "0x1CF4794", VA = "0x1CF4794")]
	public void BuildSplineWorld(int curve, Vector3[] points, bool closed)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1CF4964", Offset = "0x1CF4964", VA = "0x1CF4964")]
	public void BuildSpline(int curve, Vector3[] points, bool closed)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1CF4AF0", Offset = "0x1CF4AF0", VA = "0x1CF4AF0")]
	public void BuildSpline(Vector3[] points, bool closed)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1CF4C64", Offset = "0x1CF4C64", VA = "0x1CF4C64")]
	public void AddToSpline(int curve, Vector3[] points)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1CF54B8", Offset = "0x1CF54B8", VA = "0x1CF54B8")]
	public void AddToSpline(int curve, Vector3 point)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1CF55D0", Offset = "0x1CF55D0", VA = "0x1CF55D0")]
	public void AutoCurve(int s)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1CF4954", Offset = "0x1CF4954", VA = "0x1CF4954")]
	public void AutoCurve(MegaSpline spline)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1CF564C", Offset = "0x1CF564C", VA = "0x1CF564C")]
	public void ComputeControlPointsOld(MegaSpline spline)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1CF608C", Offset = "0x1CF608C", VA = "0x1CF608C")]
	public void ComputeControlPointsNew(MegaSpline spline)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1CF6BB0", Offset = "0x1CF6BB0", VA = "0x1CF6BB0")]
	public void ComputeControlPointsNewClosed(MegaSpline spline)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1CF4DCC", Offset = "0x1CF4DCC", VA = "0x1CF4DCC")]
	public void AutoCurve(MegaSpline spline, int start, int end)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1CF778C", Offset = "0x1CF778C", VA = "0x1CF778C")]
	public void AutoCurve()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1CF7824", Offset = "0x1CF7824", VA = "0x1CF7824")]
	private Vector3 SetVectorLength(Vector3 dir, float mag)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1CF78B4", Offset = "0x1CF78B4", VA = "0x1CF78B4")]
	public void SmoothHandles(MegaSpline spline, int i, float lengthFactor)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1CF822C", Offset = "0x1CF822C", VA = "0x1CF822C")]
	private void BuildCrossSection(float rad)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1CF83BC", Offset = "0x1CF83BC", VA = "0x1CF83BC")]
	public void BuildTubeMesh()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1CF9514", Offset = "0x1CF9514", VA = "0x1CF9514")]
	private Matrix4x4 GetDeformMat(float percent)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1CF9840", Offset = "0x1CF9840", VA = "0x1CF9840")]
	public void BuildBoxCrossSection(float width, float height)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1CF9D18", Offset = "0x1CF9D18", VA = "0x1CF9D18")]
	public void BuildRibbonCrossSection(float width)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1CF9F70", Offset = "0x1CF9F70", VA = "0x1CF9F70")]
	private void BuildRibbonMesh()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1CFAE00", Offset = "0x1CFAE00", VA = "0x1CFAE00")]
	private void BuildBoxMesh()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1CF83C0", Offset = "0x1CF83C0", VA = "0x1CF83C0")]
	private void BuildMultiStrandMesh()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1CFBFD8", Offset = "0x1CFBFD8", VA = "0x1CFBFD8")]
	public void ClearMesh()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1CFC090", Offset = "0x1CFC090", VA = "0x1CFC090")]
	public void SetMats()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1CED4AC", Offset = "0x1CED4AC", VA = "0x1CED4AC")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1CFC268", Offset = "0x1CFC268", VA = "0x1CFC268")]
	public static float CurveLength(MegaSpline spline, int knot, float v1, float v2, float size)
	{
		return default(float);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1CFC89C", Offset = "0x1CFC89C", VA = "0x1CFC89C")]
	public void OutlineSpline(MegaShape shape, int poly, float size, bool centered)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1CFC980", Offset = "0x1CFC980", VA = "0x1CFC980")]
	public void OutlineSpline(MegaSpline inSpline, MegaSpline outSpline, float size, bool centered)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1CFD4B4", Offset = "0x1CFD4B4", VA = "0x1CFD4B4")]
	public void SetTarget(GameObject targ)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1CFAA40", Offset = "0x1CFAA40", VA = "0x1CFAA40")]
	private void CalcBounds(Vector3[] verts)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1CFD554", Offset = "0x1CFD554", VA = "0x1CFD554")]
	public void InitConform(Vector3[] verts)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1CFAAC0", Offset = "0x1CFAAC0", VA = "0x1CFAAC0")]
	private void DoConform(Vector3[] verts)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1CFD6A4", Offset = "0x1CFD6A4", VA = "0x1CFD6A4")]
	private void ConformTarget()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1CFD6A8", Offset = "0x1CFD6A8", VA = "0x1CFD6A8")]
	public MegaShape()
	{
	}
}
[Token(Token = "0x2000083")]
public class MegaTriangulator
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Vector3> m_points;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xFB29D8", Offset = "0xFB29D8", VA = "0xFB29D8")]
	public static List<int> Triangulate(MegaShape shape, MegaSpline spline, float dist, ref List<Vector3> verts, ref List<Vector2> uvs, ref List<int> indices, Vector3 pivot, ref Vector3 size)
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xFB2E94", Offset = "0xFB2E94", VA = "0xFB2E94")]
	public static List<int> Triangulate(List<int> indices)
	{
		return null;
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xFB3120", Offset = "0xFB3120", VA = "0xFB3120")]
	private static float Area()
	{
		return default(float);
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xFB32DC", Offset = "0xFB32DC", VA = "0xFB32DC")]
	private static bool Snip(int u, int v, int w, int n, int[] V)
	{
		return default(bool);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xFB3674", Offset = "0xFB3674", VA = "0xFB3674")]
	private static bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
	{
		return default(bool);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xFB36F0", Offset = "0xFB36F0", VA = "0xFB36F0")]
	public MegaTriangulator()
	{
	}
}
[Token(Token = "0x2000084")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09A9C", Offset = "0xD09A9C")]
public class MegaShapeArc : MegaShape
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public float from;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float to;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public float radius;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	public bool pie;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1CFDDC4", Offset = "0x1CFDDC4", VA = "0x1CFDDC4", Slot = "4")]
	public override void MakeShape()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1CFE110", Offset = "0x1CFE110", VA = "0x1CFE110")]
	public MegaShapeArc()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09AD4", Offset = "0xD09AD4")]
public class MegaShapeCircle : MegaShape
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public float Radius;

	[Token(Token = "0x400043C")]
	private const float CIRCLE_VECTOR_LENGTH = 0.5517862f;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1CFE184", Offset = "0x1CFE184", VA = "0x1CFE184", Slot = "4")]
	public override void MakeShape()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1CFE3B8", Offset = "0x1CFE3B8", VA = "0x1CFE3B8")]
	public MegaShapeCircle()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09B0C", Offset = "0xD09B0C")]
public class MegaShapeEllipse : MegaShape
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public float length;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float width;

	[Token(Token = "0x400043F")]
	private const float CIRCLE_VECTOR_LENGTH = 0.5517862f;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1CFE424", Offset = "0x1CFE424", VA = "0x1CFE424", Slot = "5")]
	public override string GetHelpURL()
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1CFE46C", Offset = "0x1CFE46C", VA = "0x1CFE46C")]
	private void MakeCircle(float radius, float xmult, float ymult)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1CFE714", Offset = "0x1CFE714", VA = "0x1CFE714", Slot = "4")]
	public override void MakeShape()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1CFE804", Offset = "0x1CFE804", VA = "0x1CFE804")]
	public MegaShapeEllipse()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09B44", Offset = "0xD09B44")]
public class MegaShapeHelix : MegaShape
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public float radius1;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float radius2;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public float height;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	public float turns;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public float bias;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	public float adjust;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public bool clockwise;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	public int PointsPerTurn;

	[Token(Token = "0x4000448")]
	private const float CIRCLE_VECTOR_LENGTH = 0.5517862f;

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1CFE870", Offset = "0x1CFE870", VA = "0x1CFE870", Slot = "4")]
	public override void MakeShape()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1CFEC84", Offset = "0x1CFEC84", VA = "0x1CFEC84")]
	public MegaShapeHelix()
	{
	}
}
[Token(Token = "0x2000088")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09B7C", Offset = "0xD09B7C")]
public class MegaShapeLine : MegaShape
{
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public int points;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float length;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public float dir;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public Transform end;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1CFED18", Offset = "0x1CFED18", VA = "0x1CFED18", Slot = "4")]
	public override void MakeShape()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1CFF04C", Offset = "0x1CFF04C", VA = "0x1CFF04C")]
	public MegaShapeLine()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09BB4", Offset = "0xD09BB4")]
public class MegaShapeNGon : MegaShape
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public float radius;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float fillet;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public int sides;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	public bool circular;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39D")]
	public bool scribe;

	[Token(Token = "0x4000452")]
	private const float CIRCLE_VECTOR_LENGTH = 0.5517862f;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1CFF0BC", Offset = "0x1CFF0BC", VA = "0x1CFF0BC", Slot = "5")]
	public override string GetHelpURL()
	{
		return null;
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1CFF104", Offset = "0x1CFF104", VA = "0x1CFF104", Slot = "4")]
	public override void MakeShape()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1CFF7EC", Offset = "0x1CFF7EC", VA = "0x1CFF7EC")]
	public MegaShapeNGon()
	{
	}
}
[Token(Token = "0x200008A")]
public class MegaShapeOSMTag
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool show;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool import;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaShapeOSMWay way;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string k;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MegaShapeOSMTag> vs;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1D01368", Offset = "0x1D01368", VA = "0x1D01368")]
	public MegaShapeOSMTag()
	{
	}
}
[Token(Token = "0x200008B")]
public class MegaShapeOSMNode
{
	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong id;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pos;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1D00D5C", Offset = "0x1D00D5C", VA = "0x1D00D5C")]
	public MegaShapeOSMNode()
	{
	}
}
[Token(Token = "0x200008C")]
public class MegaShapeOSMWay
{
	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong id;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ulong> nodes;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string name;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MegaShapeOSMTag> tags;

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1D00DD4", Offset = "0x1D00DD4", VA = "0x1D00DD4")]
	public MegaShapeOSMWay()
	{
	}
}
[Token(Token = "0x200008D")]
public class MegaShapeOSM
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<MegaShapeOSMNode> osmnodes;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static List<MegaShapeOSMWay> osmways;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<MegaShapeOSMTag> tags;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1CFF860", Offset = "0x1CFF860", VA = "0x1CFF860")]
	private MegaShapeOSMNode FindNode(ulong id)
	{
		return null;
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1CFF99C", Offset = "0x1CFF99C", VA = "0x1CFF99C")]
	public void AdjustPoints(float scale)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1CFFC6C", Offset = "0x1CFFC6C", VA = "0x1CFFC6C")]
	private Vector3 ConvertLatLon(Vector3 pos, Vector3 centre, float scale, bool adjust)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1CFFD68", Offset = "0x1CFFD68", VA = "0x1CFFD68")]
	public void LoadXMLTags(string sxldata)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1CFFFAC", Offset = "0x1CFFFAC", VA = "0x1CFFFAC")]
	private bool CanImport(MegaShapeOSMWay way)
	{
		return default(bool);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1D00054", Offset = "0x1D00054", VA = "0x1D00054")]
	private string GetName(MegaShapeOSMWay way)
	{
		return null;
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1D00178", Offset = "0x1D00178", VA = "0x1D00178")]
	public void LoadXML(string sxldata, float scale, bool cspeed, string name, float smoothness, bool combine)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1CFFE70", Offset = "0x1CFFE70", VA = "0x1CFFE70")]
	public void ParseXML(MegaXMLNode node)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1D00800", Offset = "0x1D00800", VA = "0x1D00800")]
	public void ParseOSM(MegaXMLNode node)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1D00968", Offset = "0x1D00968", VA = "0x1D00968")]
	public void ParseNode(MegaXMLNode node)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1D00B04", Offset = "0x1D00B04", VA = "0x1D00B04")]
	public void ParseWay(MegaXMLNode node)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1D00E7C", Offset = "0x1D00E7C", VA = "0x1D00E7C")]
	public void ParseND(MegaXMLNode node, MegaShapeOSMWay way)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x1D01100", Offset = "0x1D01100", VA = "0x1D01100")]
	private MegaShapeOSMTag FindTagK(string val)
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1D01244", Offset = "0x1D01244", VA = "0x1D01244")]
	private MegaShapeOSMTag AddV(MegaShapeOSMTag tag, string v)
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1D00F70", Offset = "0x1D00F70", VA = "0x1D00F70")]
	public void ParseTag(MegaXMLNode node, MegaShapeOSMWay way)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x1D013E0", Offset = "0x1D013E0", VA = "0x1D013E0")]
	public void importData(string sxldata, float scale, bool cspeed, string name, float smoothness, bool combine)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1D013EC", Offset = "0x1D013EC", VA = "0x1D013EC")]
	public void readOSMData(string sxldata)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1D013F0", Offset = "0x1D013F0", VA = "0x1D013F0")]
	public MegaShapeOSM()
	{
	}
}
[Token(Token = "0x200008E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09BEC", Offset = "0xD09BEC")]
public class MegaShapeRectangle : MegaShape
{
	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public float length;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float width;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public float fillet;

	[Token(Token = "0x4000464")]
	private const float CIRCLE_VECTOR_LENGTH = 0.5517862f;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1D014CC", Offset = "0x1D014CC", VA = "0x1D014CC", Slot = "5")]
	public override string GetHelpURL()
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1D01514", Offset = "0x1D01514", VA = "0x1D01514", Slot = "4")]
	public override void MakeShape()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1D01DF4", Offset = "0x1D01DF4", VA = "0x1D01DF4")]
	public MegaShapeRectangle()
	{
	}
}
[Token(Token = "0x200008F")]
public class MegaShapeSVG
{
	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int splineindex;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private char[] commaspace;

	[Token(Token = "0x4000467")]
	private const float CIRCLE_VECTOR_LENGTH = 0.5517862f;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1D01E60", Offset = "0x1D01E60", VA = "0x1D01E60")]
	public void LoadXML(string svgdata, MegaShape shape, bool clear, int start)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1D01F34", Offset = "0x1D01F34", VA = "0x1D01F34")]
	public void ParseXML(MegaXMLNode node, MegaShape shape)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1D048E8", Offset = "0x1D048E8", VA = "0x1D048E8")]
	private MegaSpline GetSpline(MegaShape shape)
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1D049BC", Offset = "0x1D049BC", VA = "0x1D049BC")]
	private Vector3 SwapAxis(Vector3 val, MegaAxis axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1D049F4", Offset = "0x1D049F4", VA = "0x1D049F4")]
	private void AddKnot(MegaSpline spline, Vector3 p, Vector3 invec, Vector3 outvec, MegaAxis axis)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1D02188", Offset = "0x1D02188", VA = "0x1D02188")]
	private void ParseCircle(MegaXMLNode node, MegaShape shape)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1D03CE0", Offset = "0x1D03CE0", VA = "0x1D03CE0")]
	private void ParseEllipse(MegaXMLNode node, MegaShape shape)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1D04104", Offset = "0x1D04104", VA = "0x1D04104")]
	private void ParseRect(MegaXMLNode node, MegaShape shape)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1D04518", Offset = "0x1D04518", VA = "0x1D04518")]
	private void ParsePolygon(MegaXMLNode node, MegaShape shape)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1D024B0", Offset = "0x1D024B0", VA = "0x1D024B0")]
	private void ParsePath(MegaXMLNode node, MegaShape shape)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1D04C50", Offset = "0x1D04C50", VA = "0x1D04C50")]
	public void importData(string svgdata, MegaShape shape, float scale, bool clear, int start)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1D04AA4", Offset = "0x1D04AA4", VA = "0x1D04AA4")]
	private Vector2 ParseV2Split(string str, int i)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1D04B68", Offset = "0x1D04B68", VA = "0x1D04B68")]
	private Vector3 ParseV2(string[] str, int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1D04DBC", Offset = "0x1D04DBC", VA = "0x1D04DBC")]
	public static string Export(MegaShape shape, int x, int y, float strokewidth, Color col)
	{
		return null;
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1D058E4", Offset = "0x1D058E4", VA = "0x1D058E4")]
	public MegaShapeSVG()
	{
	}
}
[Token(Token = "0x2000090")]
public class MegaShapeSXL
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int splineindex;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private char[] commaspace;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xFAC914", Offset = "0xFAC914", VA = "0xFAC914")]
	public void LoadXML(string sxldata, MegaShape shape, bool clear, int start)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xFACC84", Offset = "0xFACC84", VA = "0xFACC84")]
	public void ParseXML(MegaXMLNode node, MegaShape shape)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xFACFD4", Offset = "0xFACFD4", VA = "0xFACFD4")]
	private MegaSpline GetSpline(MegaShape shape)
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xFACDD4", Offset = "0xFACDD4", VA = "0xFACDD4")]
	public void ParseShape(MegaXMLNode node, MegaShape shape)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xFAD190", Offset = "0xFAD190", VA = "0xFAD190")]
	public void ParseSpline(MegaXMLNode node, MegaShape shape)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xFAD3B0", Offset = "0xFAD3B0", VA = "0xFAD3B0")]
	public void ParseKnot(MegaXMLNode node, MegaShape shape, MegaSpline spline)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xFAD5EC", Offset = "0xFAD5EC", VA = "0xFAD5EC")]
	private Vector3 ParseV3Split(string str, int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xFAD70C", Offset = "0xFAD70C", VA = "0xFAD70C")]
	private Vector3 ParseV3(string[] str, int i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xFAD80C", Offset = "0xFAD80C", VA = "0xFAD80C")]
	public void importData(string sxldata, MegaShape shape, float scale, bool clear, int start)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xFADAEC", Offset = "0xFADAEC", VA = "0xFADAEC")]
	public MegaShapeSXL()
	{
	}
}
[Token(Token = "0x2000091")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD09C24", Offset = "0xD09C24")]
public class MegaShapeStar : MegaShape
{
	[Token(Token = "0x400046A")]
	private const float CIRCLE_VECTOR_LENGTH = 0.5517862f;

	[Token(Token = "0x400046B")]
	private const int MIN_POINTS = 3;

	[Token(Token = "0x400046C")]
	private const int MAX_POINTS = 100;

	[Token(Token = "0x400046D")]
	private const float MIN_RADIUS = 0f;

	[Token(Token = "0x400046E")]
	private const float MAX_RADIUS = float.MaxValue;

	[Token(Token = "0x400046F")]
	private const float MIN_DIST = -180f;

	[Token(Token = "0x4000470")]
	private const float MAX_DIST = 180f;

	[Token(Token = "0x4000471")]
	private const int DEF_POINTS = 6;

	[Token(Token = "0x4000472")]
	private const float DEF_DIST = 0f;

	[Token(Token = "0x4000473")]
	private const float PI180 = 0.0174532f;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public float radius1;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float radius2;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public int points;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	public float distortion;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public float fillet1;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	public float fillet2;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xFADB80", Offset = "0xFADB80", VA = "0xFADB80", Slot = "5")]
	public override string GetHelpURL()
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xFADBC8", Offset = "0xFADBC8", VA = "0xFADBC8", Slot = "4")]
	public override void MakeShape()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xFAE690", Offset = "0xFAE690", VA = "0xFAE690")]
	public MegaShapeStar()
	{
	}
}
[Token(Token = "0x2000092")]
public class MegaModBut
{
	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color color;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Type classname;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GUIContent content;

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1CEB8BC", Offset = "0x1CEB8BC", VA = "0x1CEB8BC")]
	public MegaModBut()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1CEB8C4", Offset = "0x1CEB8C4", VA = "0x1CEB8C4")]
	public MegaModBut(string _but, string tooltip, Type _classname, Color _col)
	{
	}
}
[Token(Token = "0x2000093")]
public enum MegaAxis
{
	[Token(Token = "0x400047F")]
	X,
	[Token(Token = "0x4000480")]
	Y,
	[Token(Token = "0x4000481")]
	Z
}
[Token(Token = "0x2000094")]
public enum MegaRepeatMode
{
	[Token(Token = "0x4000483")]
	Loop,
	[Token(Token = "0x4000484")]
	Clamp,
	[Token(Token = "0x4000485")]
	PingPong,
	[Token(Token = "0x4000486")]
	None
}
[Token(Token = "0x2000095")]
public class MegaUtils
{
	[Token(Token = "0x600036E")]
	[Address(RVA = "0xFB376C", Offset = "0xFB376C", VA = "0xFB376C")]
	public static void Bez3D(out Vector3 b, ref Vector3[] p, float u)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xFB3954", Offset = "0xFB3954", VA = "0xFB3954")]
	public static float WaveFunc(float radius, float t, float amp, float waveLen, float phase, float decay)
	{
		return default(float);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xFB3A20", Offset = "0xFB3A20", VA = "0xFB3A20")]
	public static Mesh GetMesh(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xFB3C20", Offset = "0xFB3C20", VA = "0xFB3C20")]
	public static Mesh GetSharedMesh(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xFB3E00", Offset = "0xFB3E00", VA = "0xFB3E00")]
	public static int LargestComponent(Vector3 p)
	{
		return default(int);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xFB3E28", Offset = "0xFB3E28", VA = "0xFB3E28")]
	public static float LargestValue(Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xFB3E48", Offset = "0xFB3E48", VA = "0xFB3E48")]
	public static float LargestValue1(Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xFB3F28", Offset = "0xFB3F28", VA = "0xFB3F28")]
	public static int SmallestComponent(Vector3 p)
	{
		return default(int);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xFB3F50", Offset = "0xFB3F50", VA = "0xFB3F50")]
	public static float SmallestValue(Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xFB3F70", Offset = "0xFB3F70", VA = "0xFB3F70")]
	public static float SmallestLargestValueAbs(Vector3 p)
	{
		return default(float);
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xFB4050", Offset = "0xFB4050", VA = "0xFB4050")]
	public static Vector3 Extents(Vector3[] verts, out Vector3 min, out Vector3 max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xFB42C4", Offset = "0xFB42C4", VA = "0xFB42C4")]
	public static Vector3 Extents(List<Vector3> verts, out Vector3 min, out Vector3 max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xFB46A0", Offset = "0xFB46A0", VA = "0xFB46A0")]
	public static int FindVert(Vector3 vert, List<Vector3> verts, float tolerance, float scl, bool flipyz, bool negx, int vn)
	{
		return default(int);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xFB4874", Offset = "0xFB4874", VA = "0xFB4874")]
	public static void BuildTangents(Mesh mesh)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xFB4E88", Offset = "0xFB4E88", VA = "0xFB4E88")]
	public MegaUtils()
	{
	}
}
[Token(Token = "0x2000096")]
public class MegaXMLValue
{
	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xFB5210", Offset = "0xFB5210", VA = "0xFB5210")]
	public MegaXMLValue()
	{
	}
}
[Token(Token = "0x2000097")]
public class MegaXMLNode
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string tagName;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MegaXMLNode parentNode;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MegaXMLNode> children;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MegaXMLValue> values;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xFB4E90", Offset = "0xFB4E90", VA = "0xFB4E90")]
	public MegaXMLNode()
	{
	}
}
[Token(Token = "0x2000098")]
public class MegaXMLReader
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char TAG_START;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static char TAG_END;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static char SPACE;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	private static char QUOTE;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static char SLASH;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	private static char EQUALS;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string BEGIN_QUOTE;

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xFAC9E4", Offset = "0xFAC9E4", VA = "0xFAC9E4")]
	public MegaXMLReader()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xFAC9EC", Offset = "0xFAC9EC", VA = "0xFAC9EC")]
	public MegaXMLNode read(string xml)
	{
		return null;
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xFB4F3C", Offset = "0xFB4F3C", VA = "0xFB4F3C")]
	public MegaXMLNode parseTag(string xmlTag)
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xFB5040", Offset = "0xFB5040", VA = "0xFB5040")]
	public MegaXMLNode parseAttributes(string xmlTag, MegaXMLNode node)
	{
		return null;
	}
}
[Token(Token = "0x2000099")]
public class ExampleWheelController : MonoBehaviour
{
	[Token(Token = "0x2000537")]
	private static class Uniforms
	{
		[Token(Token = "0x4002A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int _MotionAmount;
	}

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer motionVectorRenderer;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody m_Rigidbody;

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x22F5484", Offset = "0x22F5484", VA = "0x22F5484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x22F54F0", Offset = "0x22F54F0", VA = "0x22F54F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x22F56AC", Offset = "0x22F56AC", VA = "0x22F56AC")]
	public ExampleWheelController()
	{
	}
}
[Token(Token = "0x200009A")]
public class AlphanumComparatorFast : IComparer
{
	[Token(Token = "0x6000387")]
	[Address(RVA = "0x11793F0", Offset = "0x11793F0", VA = "0x11793F0", Slot = "4")]
	public int Compare(object x, object y)
	{
		return default(int);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1179794", Offset = "0x1179794", VA = "0x1179794")]
	public AlphanumComparatorFast()
	{
	}
}
[Token(Token = "0x200009B")]
public class SRL_AnalyticsHelper : MonoBehaviour
{
	[Token(Token = "0x2000538")]
	private class AggregatedEventData
	{
		[Token(Token = "0x4002A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x4002A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x22DC620", Offset = "0x22DC620", VA = "0x22DC620")]
		public AggregatedEventData(float inTime = 0f, string inName = "")
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000539")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C550", Offset = "0xD0C550")]
	private sealed class <>c
	{
		[Token(Token = "0x4002A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<QuizLabels_EntryData, bool> <>9__24_0;

		[Token(Token = "0x4002A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<QuizLabels_EntryData, bool> <>9__25_0;

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x22DCAA0", Offset = "0x22DCAA0", VA = "0x22DCAA0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x22DCAA8", Offset = "0x22DCAA8", VA = "0x22DCAA8")]
		internal bool <QuizClosed>b__24_0(QuizLabels_EntryData question)
		{
			return default(bool);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x22DCAC8", Offset = "0x22DCAC8", VA = "0x22DCAC8")]
		internal bool <QuizResults>b__25_0(QuizLabels_EntryData question)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C560", Offset = "0xD0C560")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4002A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Toggle toggle;

		[Token(Token = "0x4002A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SRL_AnalyticsHelper <>4__this;

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x22DC7AC", Offset = "0x22DC7AC", VA = "0x22DC7AC")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x22DCAE0", Offset = "0x22DCAE0", VA = "0x22DCAE0")]
		internal void <AttachToUIControls>b__0(bool arg0)
		{
		}
	}

	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C570", Offset = "0xD0C570")]
	private sealed class <>c__DisplayClass43_1
	{
		[Token(Token = "0x4002A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button button;

		[Token(Token = "0x4002A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SRL_AnalyticsHelper <>4__this;

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x22DC7B4", Offset = "0x22DC7B4", VA = "0x22DC7B4")]
		public <>c__DisplayClass43_1()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x22DCBE8", Offset = "0x22DCBE8", VA = "0x22DCBE8")]
		internal void <AttachToUIControls>b__1()
		{
		}
	}

	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C580", Offset = "0xD0C580")]
	private sealed class <>c__DisplayClass43_2
	{
		[Token(Token = "0x4002A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Slider slider;

		[Token(Token = "0x4002A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SRL_AnalyticsHelper <>4__this;

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x22DC7BC", Offset = "0x22DC7BC", VA = "0x22DC7BC")]
		public <>c__DisplayClass43_2()
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x22DCC78", Offset = "0x22DCC78", VA = "0x22DCC78")]
		internal void <AttachToUIControls>b__2(float arg0)
		{
		}
	}

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SRL_AnalyticsHelper _instance;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _appIsRunning;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int framesToSkip;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int sceneLoadFrameCount;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float sceneStartTime;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float sceneTotalTime;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TofuLibraryOrgan curOrgan;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TofuLibraryCondition curCondition;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AggregatedEventData> padZoneChangesList;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, object> padZoneDict;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string lastUsedSliderName;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lastUsedSliderTime;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float sliderUsageTimeDelta;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, object> controlsDict;

	[Token(Token = "0x1700002E")]
	public static SRL_AnalyticsHelper Instance
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x22D5C20", Offset = "0x22D5C20", VA = "0x22D5C20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x22D9760", Offset = "0x22D9760", VA = "0x22D9760")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xD1FFB4", Offset = "0xD1FFB4")]
	private static void OnRuntimeMethodLoad()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x22D98EC", Offset = "0x22D98EC", VA = "0x22D98EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x22D9AFC", Offset = "0x22D9AFC", VA = "0x22D9AFC")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x22D9C1C", Offset = "0x22D9C1C", VA = "0x22D9C1C")]
	private void DetectCurrentScene(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x22DA40C", Offset = "0x22DA40C", VA = "0x22DA40C")]
	private void OnChangeZone(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x22DA534", Offset = "0x22DA534", VA = "0x22DA534")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x22DA604", Offset = "0x22DA604", VA = "0x22DA604")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x22D9810", Offset = "0x22D9810", VA = "0x22D9810")]
	public void OnAppStarted()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x22DAA54", Offset = "0x22DAA54", VA = "0x22DAA54")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x22DA930", Offset = "0x22DA930", VA = "0x22DA930")]
	private void SendCustomEvent(string customEventName, IDictionary<string, object> eventData, bool checkFameCount = true)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x22DA110", Offset = "0x22DA110", VA = "0x22DA110")]
	public void LibrarySceneDetected(TofuLibraryOrgan inOrgan, TofuLibraryCondition inCondition)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x22DA608", Offset = "0x22DA608", VA = "0x22DA608")]
	public void LibrarySceneFinished()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x22DAFA8", Offset = "0x22DAFA8", VA = "0x22DAFA8")]
	public void AppRunnerSceneLoaded(string sceneName)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x22DAFB4", Offset = "0x22DAFB4", VA = "0x22DAFB4")]
	public void QuizStarted()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x22DB1CC", Offset = "0x22DB1CC", VA = "0x22DB1CC")]
	public void QuizClosed(List<QuizLabels_EntryData> results)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x22DB510", Offset = "0x22DB510", VA = "0x22DB510")]
	public void QuizResults(List<QuizLabels_EntryData> results)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x22DB854", Offset = "0x22DB854", VA = "0x22DB854")]
	public void InfoBox(bool inOn)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x22DBAA4", Offset = "0x22DBAA4", VA = "0x22DBAA4")]
	public void LabelsModeChanged(string inMode)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x22DBD34", Offset = "0x22DBD34", VA = "0x22DBD34")]
	public void EmbeddedVideo(bool inOn)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x22DBF54", Offset = "0x22DBF54", VA = "0x22DBF54")]
	public void VoiceOver(string inMode)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x22DC194", Offset = "0x22DC194", VA = "0x22DC194")]
	public void FPSLevelChanged(string inLevel)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x22D7610", Offset = "0x22D7610", VA = "0x22D7610")]
	public void MovieCapture(string inState)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x22D5CFC", Offset = "0x22D5CFC", VA = "0x22D5CFC")]
	public void CaptureScreenshot()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x22DC3E0", Offset = "0x22DC3E0", VA = "0x22DC3E0")]
	public void DrawToolState(string inState)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x22DA410", Offset = "0x22DA410", VA = "0x22DA410")]
	public void PadZoneChanged(int inNewZone)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x22DAA7C", Offset = "0x22DAA7C", VA = "0x22DAA7C")]
	private void FlushZoneChangedEvent()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x22DC65C", Offset = "0x22DC65C", VA = "0x22DC65C")]
	private bool checkName(string inName)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x22D9D98", Offset = "0x22D9D98", VA = "0x22D9D98")]
	private void AttachToUIControls()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x22DC7C4", Offset = "0x22DC7C4", VA = "0x22DC7C4")]
	private void OnUIControl(string inName)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x22DAD64", Offset = "0x22DAD64", VA = "0x22DAD64")]
	private void FlushUIControlsEvent()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x22DC95C", Offset = "0x22DC95C", VA = "0x22DC95C")]
	public SRL_AnalyticsHelper()
	{
	}
}
[Token(Token = "0x200009C")]
public enum BladderState
{
	[Token(Token = "0x40004A6")]
	Resting,
	[Token(Token = "0x40004A7")]
	Fill,
	[Token(Token = "0x40004A8")]
	LateLoop,
	[Token(Token = "0x40004A9")]
	Release,
	[Token(Token = "0x40004AA")]
	None
}
[Serializable]
[Token(Token = "0x200009D")]
public class Nerve_Wipe_Material
{
	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer rend;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float opacity;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xFBEC88", Offset = "0xFBEC88", VA = "0xFBEC88")]
	public Nerve_Wipe_Material()
	{
	}
}
[Token(Token = "0x200009E")]
public class Urinator : MonoBehaviour
{
	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C590", Offset = "0xD0C590")]
	private sealed class <FadeRendererTo>d__142 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer rend;

		[Token(Token = "0x4002A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string property;

		[Token(Token = "0x4002A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float targetVal;

		[Token(Token = "0x4002A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rate;

		[Token(Token = "0x4002A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startVal>5__2;

		[Token(Token = "0x4002A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <i>5__3;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021A1")]
			[Address(RVA = "0xFD4D1C", Offset = "0xFD4D1C", VA = "0xFD4D1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021A3")]
			[Address(RVA = "0xFD4D84", Offset = "0xFD4D84", VA = "0xFD4D84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0xFD488C", Offset = "0xFD488C", VA = "0xFD488C")]
		[DebuggerHidden]
		public <FadeRendererTo>d__142(int <>1__state)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xFD4B7C", Offset = "0xFD4B7C", VA = "0xFD4B7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xFD4B80", Offset = "0xFD4B80", VA = "0xFD4B80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xFD4D24", Offset = "0xFD4D24", VA = "0xFD4D24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F470", Offset = "0xD0F470")]
	public bool isMovie;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool startFilled;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[ReadOnly]
	public BladderState currentState;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F4B8", Offset = "0xD0F4B8")]
	public Toggle urineToggle;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle emptyToggle;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image urineFill;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image emptyFill;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider revealSlider;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle sliceToggle;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F4F0", Offset = "0xD0F4F0")]
	public Animator anim;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F528", Offset = "0xD0F528")]
	public Transform FX;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Renderer[] extraFX;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F560", Offset = "0xD0F560")]
	public ZoneManager zMan;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VisibilityDescriptor nerveFX;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F598", Offset = "0xD0F598")]
	public LiquidVolume bladder;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float minLiquid;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxLiquid;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float restingLiquid;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float liquidIncriment;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float liquidDecriment;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float restingLiquidFillTime;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F5D0", Offset = "0xD0F5D0")]
	public float funnelAppearLevel;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F608", Offset = "0xD0F608")]
	public float toiletFlashPercentage;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F640", Offset = "0xD0F640")]
	public float fillTime;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float lateLoopTime;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float emptyTime;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float bladderEmptyTime;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float sphicterOpenTime;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float startOuterSphincterTime;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float closeSphincterOffsetTime;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F678", Offset = "0xD0F678")]
	public AnimationCurve inflationCurve;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AnimationCurve deflationCurve;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F6B0", Offset = "0xD0F6B0")]
	public int[] HypogastricIDs;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int[] PudentalIDs;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Renderer sphincterFX;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F6E8", Offset = "0xD0F6E8")]
	public Nerve_Wipe_Material[] nerveData;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float speedIncreaseDelta;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string Hypogastric;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string Pelvic;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string Pudental;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float startBraingasticPercent;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float startLateLoopPercent;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float percentToStartFadeInFill;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float timeForFadeInFill;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float maxSpeedIncrease;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F720", Offset = "0xD0F720")]
	public float startPelvicNervePercent;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F758", Offset = "0xD0F758")]
	public float hyopogasticFadeInTime;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float hypogastricFadeOutTimeLength;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float hypogasticSirenFadeInTime;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float hypogasticSirenFadeOutTime;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F790", Offset = "0xD0F790")]
	public float pudentalFadeInTime;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float pudentalFadeOutStartTime;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float pudentalFadeOutTimeLength;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float pudentalSirenFadeInTime;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float pudentalSirenFadeOutStartTime;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected Image urineImage;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected Image tolietImage;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected bool urineState;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	protected bool dontMovePad;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	protected float startTime;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected string Fill_TRIGGER;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected string TOILET_TRIGGER;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected string BLEND_PROPERTY;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected string SPEED_PROPERTY;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected string TOILET_WIPE_PROPERTY;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected string TRANSPARENCY_PROPERTY;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected string WAVE_PROPERTY;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected string SYSTEMS_PROPERTY;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected string URETHRA_OPEN_TRIGGER;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected string URETER_TRIGGER;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected string CONTRACTION_BLEND;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected string HYPOGASTRIC_PROPERTY;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected string BRAINGASTIC_PROPERTY;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	protected string RESTING_PROPERTY;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected string BUBBLE_PROPERTY;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	protected string FUNNEL_PROPERTY;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	protected string INVERSE_TIME_PROPERTY;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	protected string LATE_LOOP_BOOL;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	protected string MOVEMENT_PROPERTY;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	protected string DEFAULT_STATE;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	protected int SYSTEMS_LAYER;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected Renderer[] fxRenderers;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected bool FX_enabled;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	protected float BLEND_STATE;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected int currentZone;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	protected float lastBlendState;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected float lastLiquidLevel;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	protected float lastLiquidStartLevel;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	protected string nerveMaterialForwardOpacity;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	protected string nerveMaterialForwardSpeed;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	protected bool nervesEnabled;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
	protected bool funnelON;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	protected Vector2 nervePos;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	protected bool toiletPressed;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24D")]
	protected bool sphincterOpen;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public TofuPadController tofuPadController;

	[Token(Token = "0x400050E")]
	private const int TOFU_PAD_NERVES_ZONE = 3;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xFD19C4", Offset = "0xFD19C4", VA = "0xFD19C4")]
	protected void FixedUpdate()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xFD1A3C", Offset = "0xFD1A3C", VA = "0xFD1A3C")]
	protected void OnZoneChanged(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xFD1A44", Offset = "0xFD1A44", VA = "0xFD1A44")]
	protected void ToggleZone(int theZone)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xFD1BF4", Offset = "0xFD1BF4", VA = "0xFD1BF4")]
	protected void SetUpListeners()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xFD1F4C", Offset = "0xFD1F4C", VA = "0xFD1F4C")]
	public void OnEvacuateToggled(bool isOn)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xFD22A0", Offset = "0xFD22A0", VA = "0xFD22A0")]
	private void OnRevealSliderChanged(float newValue)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xFD2428", Offset = "0xFD2428", VA = "0xFD2428")]
	private void OnSliceToggled(bool isOn)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xFD234C", Offset = "0xFD234C", VA = "0xFD234C")]
	private void RevealZone(float sliderValue, bool showSlice)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xFD246C", Offset = "0xFD246C", VA = "0xFD246C")]
	public void OnSimulateToggled(bool isOn)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xFD1E8C", Offset = "0xFD1E8C", VA = "0xFD1E8C")]
	private void OnUrineFilled()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xFD1E94", Offset = "0xFD1E94", VA = "0xFD1E94")]
	private void OnUrineEmptied()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xFD24E0", Offset = "0xFD24E0", VA = "0xFD24E0")]
	private void SwapUrineAndEmptyButtons(bool showUrineButton)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xFD28D4", Offset = "0xFD28D4", VA = "0xFD28D4", Slot = "4")]
	protected virtual void OnCycleComplete()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xFD2984", Offset = "0xFD2984", VA = "0xFD2984")]
	public void OnSphincterOpen()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xFD2900", Offset = "0xFD2900", VA = "0xFD2900")]
	protected void ResetBladder()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xFD2710", Offset = "0xFD2710", VA = "0xFD2710")]
	protected void StartThePeePeeParty()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xFD2050", Offset = "0xFD2050", VA = "0xFD2050")]
	protected void EndThePeePeeParty()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xFD2628", Offset = "0xFD2628", VA = "0xFD2628")]
	protected void ShowFX()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xFD29E0", Offset = "0xFD29E0", VA = "0xFD29E0")]
	protected void hideFX()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xFD2ABC", Offset = "0xFD2ABC", VA = "0xFD2ABC")]
	protected void InitFX()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xFD1A54", Offset = "0xFD1A54", VA = "0xFD1A54")]
	protected void ShowNerves()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xFD1B24", Offset = "0xFD1B24", VA = "0xFD1B24")]
	protected void HideNerves()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xFD2BFC", Offset = "0xFD2BFC", VA = "0xFD2BFC")]
	protected void OnRippleComplete()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xFD2C00", Offset = "0xFD2C00", VA = "0xFD2C00")]
	protected void OnPelvicComplete()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xFD2CBC", Offset = "0xFD2CBC", VA = "0xFD2CBC", Slot = "5")]
	protected virtual void OnTinkle()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xFD19C8", Offset = "0xFD19C8", VA = "0xFD19C8")]
	protected void DeformMesh()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xFD2CC0", Offset = "0xFD2CC0", VA = "0xFD2CC0")]
	protected void RestBladder(float elapsedTime)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xFD2D8C", Offset = "0xFD2D8C", VA = "0xFD2D8C")]
	protected void FillBladder(float elapsedTime)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xFD2F9C", Offset = "0xFD2F9C", VA = "0xFD2F9C")]
	protected void EmptyBladder(float elapsedTime)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xFD3CE8", Offset = "0xFD3CE8", VA = "0xFD3CE8")]
	protected void FadeInPudentalSiren(float elaspedTime)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xFD3EAC", Offset = "0xFD3EAC", VA = "0xFD3EAC")]
	protected void FadeOutPudentalSiren(float elaspedTime)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xFD4080", Offset = "0xFD4080", VA = "0xFD4080")]
	protected void ForcePudentalOff(float value)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xFD3640", Offset = "0xFD3640", VA = "0xFD3640")]
	protected void HandleWave(float elapsedTime)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xFD446C", Offset = "0xFD446C", VA = "0xFD446C")]
	protected void InitSphincter()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xFD42C0", Offset = "0xFD42C0", VA = "0xFD42C0")]
	protected void StartWave(float elapsedTime)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xFD4364", Offset = "0xFD4364", VA = "0xFD4364")]
	protected void StopWave(float elapsedTime)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xFD2990", Offset = "0xFD2990", VA = "0xFD2990")]
	protected void MovePadToNerves()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xFD29B0", Offset = "0xFD29B0", VA = "0xFD29B0")]
	protected void DisableAmbientNerves()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xFD325C", Offset = "0xFD325C", VA = "0xFD325C")]
	protected void EnableAmbientNerves()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xFD3680", Offset = "0xFD3680", VA = "0xFD3680")]
	protected void FadeInHypoGastericNerve(float elaspedTime)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xFD348C", Offset = "0xFD348C", VA = "0xFD348C")]
	protected void FadeOutHypoGastericNerve(float elapsedTime)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xFD3980", Offset = "0xFD3980", VA = "0xFD3980")]
	protected void FadeInPudentalNerve(float elapsedTime)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xFD3B2C", Offset = "0xFD3B2C", VA = "0xFD3B2C")]
	protected void FadeOutPudentalNerve(float elapsedTime)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xFD3388", Offset = "0xFD3388", VA = "0xFD3388")]
	protected void EqualizedLiquid(float elapsedTime)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xFD2B58", Offset = "0xFD2B58", VA = "0xFD2B58")]
	protected void setLiquid(float val)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xFD47FC", Offset = "0xFD47FC", VA = "0xFD47FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD1FFC8", Offset = "0xD1FFC8")]
	private IEnumerator FadeRendererTo(Renderer rend, string property, float targetVal, float rate)
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xFD468C", Offset = "0xFD468C", VA = "0xFD468C")]
	protected void PlayUrethraWave(float normalizedTime)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xFD4744", Offset = "0xFD4744", VA = "0xFD4744")]
	protected void StopUrethraWave(float normalizedTime)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xFD48B8", Offset = "0xFD48B8", VA = "0xFD48B8")]
	public Urinator()
	{
	}
}
[Token(Token = "0x200009F")]
public class Urinator_OB : Urinator
{
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F7C8", Offset = "0xD0F7C8")]
	public Slider severitySlider;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public int incontinenceModModerate;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	public int incontinenceSevereNormal;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject[] bubbles;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F800", Offset = "0xD0F800")]
	public float speedNormal;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public float speedSevere;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F838", Offset = "0xD0F838")]
	public float normalHypaGastric;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float severeHypaGastric;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public float normalBrainGastric;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public float severeBraiGastric;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float normalLateLoopGastric;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public float severeLateLoopGastric;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F870", Offset = "0xD0F870")]
	public float normalCutOff;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public float severeCuttoff;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[ReadOnly]
	public int currentIncontinanceAmt;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private string SEVERITY_PROPERTY;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private string TINCKLE_PROPERTY;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[HideInInspector]
	public float maxSlider;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private float liquidMaxNormal;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float liquidMaxSevere;

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xFD4D8C", Offset = "0xFD4D8C", VA = "0xFD4D8C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xFD5078", Offset = "0xFD5078", VA = "0xFD5078")]
	protected new void FixedUpdate()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xFD507C", Offset = "0xFD507C", VA = "0xFD507C")]
	public void OnSliderChanged(float val)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xFD5250", Offset = "0xFD5250", VA = "0xFD5250", Slot = "5")]
	protected override void OnTinkle()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xFD5390", Offset = "0xFD5390", VA = "0xFD5390", Slot = "4")]
	protected override void OnCycleComplete()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xFD54A0", Offset = "0xFD54A0", VA = "0xFD54A0")]
	public Urinator_OB()
	{
	}
}
[Token(Token = "0x20000A0")]
public class Brain_Microscopic : MonoBehaviour
{
	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xF84924", Offset = "0xF84924", VA = "0xF84924")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xF84928", Offset = "0xF84928", VA = "0xF84928")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xF8492C", Offset = "0xF8492C", VA = "0xF8492C")]
	public Brain_Microscopic()
	{
	}
}
[Token(Token = "0x20000A1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09C5C", Offset = "0xD09C5C")]
public class SynapseAudioEffect : MonoBehaviour
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] neuronRoots;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 loopDelayMinMax;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> neurons;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource player;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timer;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentDelay;

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x22C8654", Offset = "0x22C8654", VA = "0x22C8654")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x22C8978", Offset = "0x22C8978", VA = "0x22C8978")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x22C8ABC", Offset = "0x22C8ABC", VA = "0x22C8ABC")]
	public SynapseAudioEffect()
	{
	}
}
[Token(Token = "0x20000A2")]
public class BreastCancer_BackgroundReferences : MonoBehaviour
{
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EdgeCollider2D sideEdgeCollider;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PolygonCollider2D sidePolyCollider;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PolygonCollider2D frontPolyCollider;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform frontViewSpotSpawnPoint;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform sideViewSpotSpawnPoint;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform frontViewRectTransform;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform sideViewRectTransform;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BoxCollider2D splitScreenCollider;

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xF84934", Offset = "0xF84934", VA = "0xF84934")]
	public BreastCancer_BackgroundReferences()
	{
	}
}
[Token(Token = "0x20000A3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09CC0", Offset = "0xD09CC0")]
public class BreastCancer_BoxCollider2DScaler : MonoBehaviour
{
	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xF8493C", Offset = "0xF8493C", VA = "0xF8493C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xF849CC", Offset = "0xF849CC", VA = "0xF849CC")]
	public BreastCancer_BoxCollider2DScaler()
	{
	}
}
[Token(Token = "0x20000A4")]
public class DataToFileSaver : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200053E")]
	public class TransformData
	{
		[Token(Token = "0x4002A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float positionX;

		[Token(Token = "0x4002A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float positionY;

		[Token(Token = "0x4002A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float positionZ;

		[Token(Token = "0x4002A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotationX;

		[Token(Token = "0x4002A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationY;

		[Token(Token = "0x4002A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationZ;

		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scaleX;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float scaleY;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float scaleZ;

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x108AD5C", Offset = "0x108AD5C", VA = "0x108AD5C")]
		public TransformData()
		{
		}
	}

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string documentsFolderPath;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x108A974", Offset = "0x108A974", VA = "0x108A974")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x108A9EC", Offset = "0x108A9EC", VA = "0x108A9EC")]
	public void SaveTransforms(string fileName, List<Transform> transformsList)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x108AD64", Offset = "0x108AD64", VA = "0x108AD64")]
	public List<TransformData> LoadTransforms(string fileName)
	{
		return null;
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x108AE8C", Offset = "0x108AE8C", VA = "0x108AE8C")]
	public void DeleteFile(string fileName)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x108A998", Offset = "0x108A998", VA = "0x108A998")]
	private string GetDocumentsPath()
	{
		return null;
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x108AEE4", Offset = "0x108AEE4", VA = "0x108AEE4")]
	public DataToFileSaver()
	{
	}
}
[Token(Token = "0x20000A5")]
public interface ICustomData
{
}
[Token(Token = "0x20000A6")]
public class SceneVariables_CustomClasses : MonoBehaviour, ICustomData
{
	[Serializable]
	[Token(Token = "0x200053F")]
	public struct Vec3Data : ICustomData
	{
		[Token(Token = "0x4002A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4002A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;
	}

	[Serializable]
	[Token(Token = "0x2000540")]
	public struct Vec2Data : ICustomData
	{
		[Token(Token = "0x4002A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}

	[Serializable]
	[Token(Token = "0x2000541")]
	public struct TransformData : ICustomData
	{
		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vec3Data pos;

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public QuaternionData rot;

		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vec3Data scale;
	}

	[Serializable]
	[Token(Token = "0x2000542")]
	public struct QuaternionData : ICustomData
	{
		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x22DE5D8", Offset = "0x22DE5D8", VA = "0x22DE5D8")]
	public SceneVariables_CustomClasses()
	{
	}
}
[Token(Token = "0x20000A7")]
public class Octant : MonoBehaviour
{
	[Token(Token = "0x2000543")]
	public delegate void OnOctantSelected(Octant o);

	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C5A0", Offset = "0xD0C5A0")]
	private sealed class <FadeToColor>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Octant <>4__this;

		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color nextColor;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__2;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <startColor>5__3;

		[Token(Token = "0x17000237")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x230702C", Offset = "0x230702C", VA = "0x230702C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x2307094", Offset = "0x2307094", VA = "0x2307094", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x2306EF0", Offset = "0x2306EF0", VA = "0x2306EF0")]
		[DebuggerHidden]
		public <FadeToColor>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x2306F34", Offset = "0x2306F34", VA = "0x2306F34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x2306F38", Offset = "0x2306F38", VA = "0x2306F38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x2307034", Offset = "0x2307034", VA = "0x2307034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F8C8", Offset = "0xD0F8C8")]
	public Color highlightColor;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color ambientColor;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int id;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material mat;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer rend;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine colorRoutine;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float faderDuration;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OnOctantSelected OctantSelected;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x23067C0", Offset = "0x23067C0", VA = "0x23067C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x23067C4", Offset = "0x23067C4", VA = "0x23067C4")]
	public void FixMaterial()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x23068BC", Offset = "0x23068BC", VA = "0x23068BC")]
	public void FixEditorMaterial()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x23069B4", Offset = "0x23069B4", VA = "0x23069B4")]
	private void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x2306DD4", Offset = "0x2306DD4", VA = "0x2306DD4")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x2306DD8", Offset = "0x2306DD8", VA = "0x2306DD8")]
	private void OnMouseOver()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x2306E18", Offset = "0x2306E18", VA = "0x2306E18")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x2306DDC", Offset = "0x2306DDC", VA = "0x2306DDC")]
	public void EnableHightlight()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x2306E1C", Offset = "0x2306E1C", VA = "0x2306E1C")]
	public void DisabelHightlight()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x2306E58", Offset = "0x2306E58", VA = "0x2306E58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2102C", Offset = "0xD2102C")]
	protected IEnumerator FadeToColor(Color nextColor)
	{
		return null;
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x2306F1C", Offset = "0x2306F1C", VA = "0x2306F1C")]
	public Octant()
	{
	}
}
[Token(Token = "0x20000A8")]
public class OctantManager : MonoBehaviour
{
	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C5B0", Offset = "0xD0C5B0")]
	private sealed class <BlinkOctants>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OctantManager <>4__this;

		[Token(Token = "0x17000239")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x2308A20", Offset = "0x2308A20", VA = "0x2308A20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x2308A88", Offset = "0x2308A88", VA = "0x2308A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x2307B1C", Offset = "0x2307B1C", VA = "0x2307B1C")]
		[DebuggerHidden]
		public <BlinkOctants>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x2308898", Offset = "0x2308898", VA = "0x2308898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x230889C", Offset = "0x230889C", VA = "0x230889C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x2308A28", Offset = "0x2308A28", VA = "0x2308A28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400053A")]
	private const int TWO = 2;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int octantIndex;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F900", Offset = "0xD0F900")]
	public Octant[] octants;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0F938", Offset = "0xD0F938")]
	public Color highlightColor;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color ambientColor;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material octantMaterial;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color[] octantColors;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Bounds cachedBounds;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Bounds[] octantBounds;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x23070DC", Offset = "0x23070DC", VA = "0x23070DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x23071E0", Offset = "0x23071E0", VA = "0x23071E0")]
	private void CreateOctants()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x2307450", Offset = "0x2307450", VA = "0x2307450")]
	private void AddOctant(Vector3 pos, Vector3 size)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x2307780", Offset = "0x2307780", VA = "0x2307780")]
	public void RemakeOctants()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x2307884", Offset = "0x2307884", VA = "0x2307884")]
	public void ClearOctants()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x230799C", Offset = "0x230799C", VA = "0x230799C")]
	public void FixMaterials()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x2307A80", Offset = "0x2307A80", VA = "0x2307A80")]
	public void ShowOctaves()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x2307AAC", Offset = "0x2307AAC", VA = "0x2307AAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21090", Offset = "0xD21090")]
	public IEnumerator BlinkOctants()
	{
		return null;
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x2307B48", Offset = "0x2307B48", VA = "0x2307B48")]
	public int GetOctantIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x2307B64", Offset = "0x2307B64", VA = "0x2307B64")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x23072B0", Offset = "0x23072B0", VA = "0x23072B0")]
	private void CreateOctantSet()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x2307F6C", Offset = "0x2307F6C", VA = "0x2307F6C")]
	public Color getOctantColor(Vector3 pos)
	{
		return default(Color);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x23081E4", Offset = "0x23081E4", VA = "0x23081E4")]
	public Bounds getOctantBounds(Vector3 pos)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x230835C", Offset = "0x230835C", VA = "0x230835C")]
	public Octant getOctant(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x23084A8", Offset = "0x23084A8", VA = "0x23084A8")]
	public void UpdateBounds()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x23080F8", Offset = "0x23080F8", VA = "0x23080F8")]
	public bool IsPointInside(BoxCollider aBoxCollider, Vector3 aWorldPos)
	{
		return default(bool);
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x23085F8", Offset = "0x23085F8", VA = "0x23085F8")]
	public OctantManager()
	{
	}
}
[Token(Token = "0x20000A9")]
public class CameraKeyframeUI : MonoBehaviour
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaybackController playbackController;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LegacyCameraControl camControl;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField inputField;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button playButton;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool playing;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button resetButton;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle easeToggle;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject uiKey;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image activeImage;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image nonActiveImage;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> uiKeys;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject logo;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject floor;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] hideAbles;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool[] hidenStates;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xF8B250", Offset = "0xF8B250", VA = "0xF8B250")]
	private void Start()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xF8B3D0", Offset = "0xF8B3D0", VA = "0xF8B3D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xF8B670", Offset = "0xF8B670", VA = "0xF8B670")]
	public void AddKey()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xF8B800", Offset = "0xF8B800", VA = "0xF8B800")]
	public void DeleteKey()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xF8B94C", Offset = "0xF8B94C", VA = "0xF8B94C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xF8B520", Offset = "0xF8B520", VA = "0xF8B520")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xF8BB00", Offset = "0xF8BB00", VA = "0xF8BB00")]
	public void SpinModel()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xF8B984", Offset = "0xF8B984", VA = "0xF8B984")]
	private void HideElements()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xF8BB04", Offset = "0xF8BB04", VA = "0xF8BB04")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xF8BC18", Offset = "0xF8BC18", VA = "0xF8BC18")]
	public void SetTime(string timeString)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xF8BC50", Offset = "0xF8BC50", VA = "0xF8BC50")]
	public void FreeCam()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xF8BD2C", Offset = "0xF8BD2C", VA = "0xF8BD2C")]
	public CameraKeyframeUI()
	{
	}
}
[Token(Token = "0x20000AA")]
public class PlaybackController : PlaybackController_Base
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useEasing;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<PlaybackKeyframe> keyframes;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LegacyCameraControl camControl;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ZoneManager zoneManager;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float playbackStartTime;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float playbackEndTime;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x230EACC", Offset = "0x230EACC", VA = "0x230EACC")]
	private void Start()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x230EB54", Offset = "0x230EB54", VA = "0x230EB54", Slot = "4")]
	public override bool PlaybackInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x230EB84", Offset = "0x230EB84", VA = "0x230EB84")]
	public void StartPlayback()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x230ECD8", Offset = "0x230ECD8", VA = "0x230ECD8")]
	public void StopPlayback()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x230ECE4", Offset = "0x230ECE4", VA = "0x230ECE4")]
	public void SetDurationSeconds(float newDuration)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x230ED64", Offset = "0x230ED64", VA = "0x230ED64")]
	public void SaveKeyframe()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x230EF18", Offset = "0x230EF18", VA = "0x230EF18")]
	public void DeleteKeyframe()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x230EF88", Offset = "0x230EF88", VA = "0x230EF88")]
	public void LoadKeyframeAtIndex(int index)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x230F098", Offset = "0x230F098", VA = "0x230F098")]
	public void ClearAllKeyframes()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x230F0F0", Offset = "0x230F0F0", VA = "0x230F0F0", Slot = "5")]
	public override void UpdateFrame()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x230F404", Offset = "0x230F404", VA = "0x230F404")]
	public void SetEasing(bool newEasing)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x230EBB8", Offset = "0x230EBB8", VA = "0x230EBB8")]
	private void RecalculateSpline()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x230F144", Offset = "0x230F144", VA = "0x230F144")]
	private void PlaybackForNormalizedPosition(float normalizedPos)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x230F410", Offset = "0x230F410", VA = "0x230F410")]
	public PlaybackController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AB")]
public class PlaybackKeyframe
{
	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CameraControlData cameraControlData;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float normalizedPlaybackPosition;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x230EEDC", Offset = "0x230EEDC", VA = "0x230EEDC")]
	public PlaybackKeyframe(CameraControlData newCameraControlData, float newNormalizedPlaybackPosition = 0f)
	{
	}
}
[Token(Token = "0x20000AC")]
public class Colon_Anim_Sound_Controller : MonoBehaviour
{
	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource[] targetAudioSources;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int doubleSoundActivationOffset;

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xF8D888", Offset = "0xF8D888", VA = "0xF8D888")]
	public void playApproachSound(int inID)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xF8DA14", Offset = "0xF8DA14", VA = "0xF8DA14")]
	public Colon_Anim_Sound_Controller()
	{
	}
}
[Token(Token = "0x20000AD")]
public class Colon_Anim_Speed_Controller : MonoBehaviour
{
	[Token(Token = "0x400055E")]
	private const float minSpeed = 0f;

	[Token(Token = "0x400055F")]
	private const float maxSpeed = 8f;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0F9B0", Offset = "0xD0F9B0")]
	public KeyCode increaseSpeedKey;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode decreaseSpeedKey;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode resetToDefaultKey;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode minSpeedKey;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode maxSpeedKey;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0F9C0", Offset = "0xD0F9C0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD0F9C0", Offset = "0xD0F9C0")]
	public float animSpeed;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float defaultSpeed;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float speedStep;

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xF8DA7C", Offset = "0xF8DA7C", VA = "0xF8DA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xF8DA88", Offset = "0xF8DA88", VA = "0xF8DA88")]
	private void Update()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xF8DBF4", Offset = "0xF8DBF4", VA = "0xF8DBF4")]
	public Colon_Anim_Speed_Controller()
	{
	}
}
[Token(Token = "0x20000AE")]
public class AdvancedDrawToolController : DrawToolController
{
	[Token(Token = "0x2000546")]
	public enum DrawToolState
	{
		[Token(Token = "0x4002AA9")]
		draw,
		[Token(Token = "0x4002AAA")]
		stencil,
		[Token(Token = "0x4002AAB")]
		labels,
		[Token(Token = "0x4002AAC")]
		none
	}

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public List<DrawToolStencil> stencils;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public List<DrawToolLabel> labels;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FA00", Offset = "0xD0FA00")]
	public RectTransform placementLayer;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public RectTransform copyToLayer;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FA38", Offset = "0xD0FA38")]
	public Toggle drawToggle;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Toggle stencilToggle;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Toggle lableToggle;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FA70", Offset = "0xD0FA70")]
	public Button arrowButton;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Button circleButton;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Button squareButton;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Button starButton;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FAA8", Offset = "0xD0FAA8")]
	public Button labelButton;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Button deletLablesButton;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FAE0", Offset = "0xD0FAE0")]
	public GameObject arrowPrefab;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject circlePrefab;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject starPrefab;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject squarePrefab;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject labelPrefab;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FB18", Offset = "0xD0FB18")]
	public Vector3 modelInitPos;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public Vector3 modelInitScale;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private DrawToolModal currentModal;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public RectTransform toolPanel;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FB50", Offset = "0xD0FB50")]
	public Toggle smallToggle;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Toggle medToggle;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Toggle largeToggle;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public int smallFont;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public int medFont;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public int largeFont;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public int currentFontSize;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FB88", Offset = "0xD0FB88")]
	public Button confirmButton;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FBC0", Offset = "0xD0FBC0")]
	public Toggle RedToggle;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Toggle GreenToggle;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Toggle YellowToggle;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Toggle WhiteToggle;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Toggle BlackToggle;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public RectTransform penSizePanel;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public RectTransform textSizePanel;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private bool hide;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private RectTransform boundsRect;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public DrawToolState state;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1177484", Offset = "0x1177484", VA = "0x1177484")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1177EB4", Offset = "0x1177EB4", VA = "0x1177EB4")]
	protected void ClearSettings()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x1177F10", Offset = "0x1177F10", VA = "0x1177F10")]
	public void OnDrawToggled(bool val)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1178324", Offset = "0x1178324", VA = "0x1178324")]
	public void OnStencilToggled(bool val)
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x1178454", Offset = "0x1178454", VA = "0x1178454")]
	public void OnLabelToggled(bool val)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1178640", Offset = "0x1178640", VA = "0x1178640", Slot = "7")]
	public override void DrawPanelToggle(bool val)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x11789A4", Offset = "0x11789A4", VA = "0x11789A4")]
	public void OnAddStencil(GameObject prefab)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1178B84", Offset = "0x1178B84", VA = "0x1178B84")]
	public void OnAddLabelButtonClicked()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1178D8C", Offset = "0x1178D8C", VA = "0x1178D8C")]
	public void OnDeleteAllLabelsButtonClicked()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1178788", Offset = "0x1178788", VA = "0x1178788")]
	public void CopyModalsTo(RectTransform layer)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1178E54", Offset = "0x1178E54", VA = "0x1178E54", Slot = "8")]
	protected override void DragDraw(Vector2 startPoint, Vector2 endPoint)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1178E68", Offset = "0x1178E68", VA = "0x1178E68")]
	public void OnConfirmClicked()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1178F08", Offset = "0x1178F08", VA = "0x1178F08")]
	protected void OnColorToggleClicked(bool val, Color c)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1178FF8", Offset = "0x1178FF8", VA = "0x1178FF8")]
	public void OnFontToggled(bool val, int size)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1179118", Offset = "0x1179118", VA = "0x1179118")]
	public void OnModalSelected(DrawToolModal mod)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1178194", Offset = "0x1178194", VA = "0x1178194")]
	public void showToolPanel()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1178284", Offset = "0x1178284", VA = "0x1178284")]
	public void hideToolPanel()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1178234", Offset = "0x1178234", VA = "0x1178234")]
	public bool isAllOff()
	{
		return default(bool);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x11791C8", Offset = "0x11791C8", VA = "0x11791C8")]
	public AdvancedDrawToolController()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x11792BC", Offset = "0x11792BC", VA = "0x11792BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD210F4", Offset = "0xD210F4")]
	private void <Start>b__41_0()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x11792C4", Offset = "0x11792C4", VA = "0x11792C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21104", Offset = "0xD21104")]
	private void <Start>b__41_1()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x11792CC", Offset = "0x11792CC", VA = "0x11792CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21114", Offset = "0xD21114")]
	private void <Start>b__41_2()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x11792D4", Offset = "0x11792D4", VA = "0x11792D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21124", Offset = "0xD21124")]
	private void <Start>b__41_3()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x11792DC", Offset = "0x11792DC", VA = "0x11792DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21134", Offset = "0xD21134")]
	private void <Start>b__41_4(bool data)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x117930C", Offset = "0x117930C", VA = "0x117930C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21144", Offset = "0xD21144")]
	private void <Start>b__41_5(bool data)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x117933C", Offset = "0x117933C", VA = "0x117933C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21154", Offset = "0xD21154")]
	private void <Start>b__41_6(bool data)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x117936C", Offset = "0x117936C", VA = "0x117936C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21164", Offset = "0xD21164")]
	private void <Start>b__41_7(bool data)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x117939C", Offset = "0x117939C", VA = "0x117939C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21174", Offset = "0xD21174")]
	private void <Start>b__41_8(bool data)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x11793CC", Offset = "0x11793CC", VA = "0x11793CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21184", Offset = "0xD21184")]
	private void <Start>b__41_9(bool data)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x11793D8", Offset = "0x11793D8", VA = "0x11793D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21194", Offset = "0xD21194")]
	private void <Start>b__41_10(bool data)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x11793E4", Offset = "0x11793E4", VA = "0x11793E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD211A4", Offset = "0xD211A4")]
	private void <Start>b__41_11(bool data)
	{
	}
}
[Token(Token = "0x20000AF")]
public class DrawToolController : MonoBehaviour, IDragHandler, IEventSystemHandler, IEndDragHandler, IBeginDragHandler
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int textureDivider;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage drawImageCopy;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FBF8", Offset = "0xD0FBF8")]
	public Toggle DrawToolTog;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle SkinnyTog;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle FatTog;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle EraseTog;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0FC30", Offset = "0xD0FC30")]
	public Toggle WhiteTog;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle YellowTog;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle GreenTog;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle RedTog;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Toggle BlackTog;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FC40", Offset = "0xD0FC40")]
	public Button DeleteButton;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FC78", Offset = "0xD0FC78")]
	public Sprite WhiteSprite;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite YellowSprite;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite GreenSprite;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite RedSprite;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite BlackSprite;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD0FCB0", Offset = "0xD0FCB0")]
	public Sprite skinnyPen;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite fatPen;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite skinnyPenOff;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite fatPenOff;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FCC0", Offset = "0xD0FCC0")]
	public Image selectedColor;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image selectedPen;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Button penButton;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected RawImage rawImage;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected bool drawPanelToggle;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	protected bool largePenActive;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	protected bool eraseActive;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected Texture2D drawTexture;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected Rect drawTextureRect;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected Vector2 previousPoint;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected Color currentColor;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected Color eraseColor;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected LegacyCameraControl cameraController;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected CameraTarget[] cameraTargets;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected int lineWidthSmall;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	protected int lineWidthLarge;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected int eraserWidth;

	[Token(Token = "0x40005B7")]
	private const int lineWidthStandard = 4;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private byte[] bytes;

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x22EF0A0", Offset = "0x22EF0A0", VA = "0x22EF0A0")]
	public void Awake()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x22EF174", Offset = "0x22EF174", VA = "0x22EF174")]
	private void SetupListeners()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x22EF7DC", Offset = "0x22EF7DC", VA = "0x22EF7DC", Slot = "7")]
	public virtual void DrawPanelToggle(bool val)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x22EF894", Offset = "0x22EF894", VA = "0x22EF894")]
	protected void InitDrawTexture()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x22EFBAC", Offset = "0x22EFBAC", VA = "0x22EFBAC", Slot = "6")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x22EFBDC", Offset = "0x22EFBDC", VA = "0x22EFBDC", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x22EFC34", Offset = "0x22EFC34", VA = "0x22EFC34", Slot = "5")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x22EFC78", Offset = "0x22EFC78", VA = "0x22EFC78", Slot = "8")]
	protected virtual void DragDraw(Vector2 startPoint, Vector2 endPoint)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x22EFD38", Offset = "0x22EFD38", VA = "0x22EFD38")]
	protected void DrawLine(Vector2 startPoint, Vector2 endPoint)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x22EFF48", Offset = "0x22EFF48", VA = "0x22EFF48")]
	protected void DrawLineSegment(int startPointX, int startPointY)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x22F0200", Offset = "0x22F0200", VA = "0x22F0200")]
	public void SetColorRed(bool val)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x22F02AC", Offset = "0x22F02AC", VA = "0x22F02AC")]
	public void SetColorWhite(bool val)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x22F0358", Offset = "0x22F0358", VA = "0x22F0358")]
	public void SetColorBlack(bool val)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x22F0404", Offset = "0x22F0404", VA = "0x22F0404")]
	public void SetColorYellow(bool val)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x22F04B0", Offset = "0x22F04B0", VA = "0x22F04B0")]
	public void SetColorGreen(bool val)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x22F055C", Offset = "0x22F055C", VA = "0x22F055C")]
	public void LargePenActive(bool value)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x22F0610", Offset = "0x22F0610", VA = "0x22F0610")]
	public void SmallPenActive(bool value)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x22F01D4", Offset = "0x22F01D4", VA = "0x22F01D4")]
	private int LineWidth()
	{
		return default(int);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x22F06C0", Offset = "0x22F06C0", VA = "0x22F06C0")]
	public void EraseToggle(bool val)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x22F0720", Offset = "0x22F0720", VA = "0x22F0720")]
	public void PenSelected()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x22F0740", Offset = "0x22F0740", VA = "0x22F0740")]
	public void DeletePressed()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x22EFA30", Offset = "0x22EFA30", VA = "0x22EFA30")]
	public void ClearTexture()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x22F0774", Offset = "0x22F0774", VA = "0x22F0774")]
	public DrawToolController()
	{
	}
}
[Token(Token = "0x20000B0")]
public class DrawToolLabel : DrawToolModal
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text text;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public InputField inputText;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RectTransform textSection;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x22F07B8", Offset = "0x22F07B8", VA = "0x22F07B8")]
	protected new void Awake()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x22F093C", Offset = "0x22F093C", VA = "0x22F093C")]
	public void OnFontToggled(bool val, int size)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x22F0AB8", Offset = "0x22F0AB8", VA = "0x22F0AB8")]
	public void OnTextEdited(string val)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x22F0B64", Offset = "0x22F0B64", VA = "0x22F0B64", Slot = "8")]
	public override void OnConfirmClicked()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x22F0F08", Offset = "0x22F0F08", VA = "0x22F0F08", Slot = "9")]
	public override void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x22F1070", Offset = "0x22F1070", VA = "0x22F1070", Slot = "11")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x22F1348", Offset = "0x22F1348", VA = "0x22F1348", Slot = "10")]
	public override void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x22F1854", Offset = "0x22F1854", VA = "0x22F1854")]
	public DrawToolLabel()
	{
	}
}
[Token(Token = "0x20000B1")]
public class DrawToolModal : MonoBehaviour, IDragHandler, IEventSystemHandler, IEndDragHandler, IPointerDownHandler, IBeginDragHandler
{
	[Token(Token = "0x2000547")]
	public enum ModalState
	{
		[Token(Token = "0x4002AAE")]
		locked,
		[Token(Token = "0x4002AAF")]
		scaling,
		[Token(Token = "0x4002AB0")]
		rotation,
		[Token(Token = "0x4002AB1")]
		translate
	}

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FCF8", Offset = "0xD0FCF8")]
	public Button confirmButton;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image rotateImage;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image scaleImage;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image deleteImage;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image translateImage;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image borderImage;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ModalState state;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RectTransform rTran;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool hide;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected AdvancedDrawToolController controller;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector2 transformOffset;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector2 minSize;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform bounds;

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x22F08AC", Offset = "0x22F08AC", VA = "0x22F08AC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x22F18D8", Offset = "0x22F18D8", VA = "0x22F18D8")]
	protected void InitButtons()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x22F19AC", Offset = "0x22F19AC", VA = "0x22F19AC")]
	public void ToggleHide()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x22F0BCC", Offset = "0x22F0BCC", VA = "0x22F0BCC", Slot = "8")]
	public virtual void OnConfirmClicked()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x22F19B0", Offset = "0x22F19B0", VA = "0x22F19B0")]
	protected void OnColorToggleClicked(bool val, Color c)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x22F19C4", Offset = "0x22F19C4", VA = "0x22F19C4", Slot = "9")]
	public virtual void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x22F1370", Offset = "0x22F1370", VA = "0x22F1370", Slot = "10")]
	public virtual void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x22F19C8", Offset = "0x22F19C8", VA = "0x22F19C8", Slot = "5")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x22F1098", Offset = "0x22F1098", VA = "0x22F1098", Slot = "11")]
	public virtual void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x22F19D0", Offset = "0x22F19D0", VA = "0x22F19D0", Slot = "7")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x22F1858", Offset = "0x22F1858", VA = "0x22F1858")]
	public DrawToolModal()
	{
	}
}
[Token(Token = "0x20000B2")]
public class DrawToolStencil : DrawToolModal
{
	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image img;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite filledSprite;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite outlinedSprite;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Toggle filledToggle;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x22F1A50", Offset = "0x22F1A50", VA = "0x22F1A50")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x22F1B40", Offset = "0x22F1B40", VA = "0x22F1B40", Slot = "9")]
	public override void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x22F1C10", Offset = "0x22F1C10", VA = "0x22F1C10")]
	public void ToggleFilled(bool val)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x22F1C48", Offset = "0x22F1C48", VA = "0x22F1C48", Slot = "11")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x22F1C70", Offset = "0x22F1C70", VA = "0x22F1C70", Slot = "10")]
	public override void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x22F1C98", Offset = "0x22F1C98", VA = "0x22F1C98")]
	public DrawToolStencil()
	{
	}
}
[Token(Token = "0x20000B3")]
public class LoadingIcon : MonoBehaviour
{
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform rectComponent;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotateSpeed;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x11ACAE4", Offset = "0x11ACAE4", VA = "0x11ACAE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x11ACB3C", Offset = "0x11ACB3C", VA = "0x11ACB3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x11ACB88", Offset = "0x11ACB88", VA = "0x11ACB88")]
	public LoadingIcon()
	{
	}
}
[Token(Token = "0x20000B4")]
public class OVREnabler : MonoBehaviour
{
	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<AudioSource> pendingAudioSources;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Camera> pendingCameras;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<MediaPlayer> pendingMediaPlayers;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject pendingXRRig;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xFC150C", Offset = "0xFC150C", VA = "0xFC150C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xFC15B8", Offset = "0xFC15B8", VA = "0xFC15B8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD211B4", Offset = "0xD211B4")]
	private void LogQuestLoadStats()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xFC180C", Offset = "0xFC180C", VA = "0xFC180C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xFC1C18", Offset = "0xFC1C18", VA = "0xFC1C18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xFC1E3C", Offset = "0xFC1E3C", VA = "0xFC1E3C")]
	private void InputFocusLost()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xFC2128", Offset = "0xFC2128", VA = "0xFC2128")]
	private void InputFocusAcquired()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xFC2358", Offset = "0xFC2358", VA = "0xFC2358")]
	private void VrFocusLost()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xFC2548", Offset = "0xFC2548", VA = "0xFC2548")]
	private void VrFocusAcquired()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xFC2720", Offset = "0xFC2720", VA = "0xFC2720")]
	public OVREnabler()
	{
	}
}
[Token(Token = "0x20000B5")]
public class QuizPlayer : MonoBehaviour
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FD30", Offset = "0xD0FD30")]
	public QuizState[] states;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FD68", Offset = "0xD0FD68")]
	public int currentStateIndex;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool loop;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private QuizState currentState;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool forceEndQuiz;

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x2317C40", Offset = "0x2317C40", VA = "0x2317C40")]
	public void StartQuiz()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x2317D34", Offset = "0x2317D34", VA = "0x2317D34")]
	public void EndQuiz()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x2317DD0", Offset = "0x2317DD0", VA = "0x2317DD0")]
	public void PauseQuiz()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x2317F00", Offset = "0x2317F00", VA = "0x2317F00")]
	public void ResumeQuiz()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x231802C", Offset = "0x231802C", VA = "0x231802C")]
	public void ResetQuiz()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x2317C44", Offset = "0x2317C44", VA = "0x2317C44")]
	public void SetNextState()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x2318254", Offset = "0x2318254", VA = "0x2318254")]
	public void SetPreviousState()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x2318370", Offset = "0x2318370", VA = "0x2318370")]
	public void SkipCurrentState()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x23183A0", Offset = "0x23183A0", VA = "0x23183A0")]
	public void OnStateComplete()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x23184A8", Offset = "0x23184A8", VA = "0x23184A8")]
	public void OnQuizComplete()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x23181DC", Offset = "0x23181DC", VA = "0x23181DC")]
	private void ClearCurrentState()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x2318520", Offset = "0x2318520", VA = "0x2318520")]
	public QuizPlayer()
	{
	}
}
[Token(Token = "0x20000B6")]
public class QuizState : MonoBehaviour
{
	[Token(Token = "0x2000548")]
	public delegate void stateComplete();

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool stateActive;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FDA0", Offset = "0xD0FDA0")]
	public float duration;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public stateComplete OnStateComplete;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float elaspedTime;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float lastTime;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool paused;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x2318580", Offset = "0x2318580", VA = "0x2318580")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x2318584", Offset = "0x2318584", VA = "0x2318584")]
	protected void Update()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x231859C", Offset = "0x231859C", VA = "0x231859C", Slot = "4")]
	public virtual void OnStateTick()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x23169F0", Offset = "0x23169F0", VA = "0x23169F0", Slot = "5")]
	public virtual void OnStartState()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x2316C8C", Offset = "0x2316C8C", VA = "0x2316C8C", Slot = "6")]
	public virtual void OnEndState()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x2317E5C", Offset = "0x2317E5C", VA = "0x2317E5C")]
	public void PauseState()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x2317F8C", Offset = "0x2317F8C", VA = "0x2317F8C")]
	public void ResumeState()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x2318120", Offset = "0x2318120", VA = "0x2318120")]
	public void ResetState()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x2318824", Offset = "0x2318824", VA = "0x2318824")]
	public bool getQuizActiveState()
	{
		return default(bool);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x231882C", Offset = "0x231882C", VA = "0x231882C")]
	public void SetQuizActiveState(bool b)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x2318838", Offset = "0x2318838", VA = "0x2318838")]
	public bool GetPause()
	{
		return default(bool);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x2318840", Offset = "0x2318840", VA = "0x2318840")]
	public void SetPause(bool b)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x2317008", Offset = "0x2317008", VA = "0x2317008")]
	public QuizState()
	{
	}
}
[Token(Token = "0x20000B7")]
public class QuestionState : QuizState
{
	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C5C0", Offset = "0xD0C5C0")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4002AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x4002AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QuestionState <>4__this;

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x2316D40", Offset = "0x2316D40", VA = "0x2316D40")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x2317018", Offset = "0x2317018", VA = "0x2317018")]
		internal void <InitUI>b__0(bool val)
		{
		}
	}

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FDD8", Offset = "0xD0FDD8")]
	public string[] questions;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FE10", Offset = "0xD0FE10")]
	public int answerIndex;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FE48", Offset = "0xD0FE48")]
	private GameObject togglePanel;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject togglePrefab;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FE80", Offset = "0xD0FE80")]
	private Button submitButton;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FEB8", Offset = "0xD0FEB8")]
	private bool result;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentSelection;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x23169CC", Offset = "0x23169CC", VA = "0x23169CC", Slot = "5")]
	public override void OnStartState()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x2316C84", Offset = "0x2316C84", VA = "0x2316C84", Slot = "4")]
	public override void OnStateTick()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x2316C88", Offset = "0x2316C88", VA = "0x2316C88", Slot = "6")]
	public override void OnEndState()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x2316AA4", Offset = "0x2316AA4", VA = "0x2316AA4")]
	protected void InitUI()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x2316D48", Offset = "0x2316D48", VA = "0x2316D48")]
	public void OnToggleSelected(bool val, int index)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x2316F74", Offset = "0x2316F74", VA = "0x2316F74")]
	public void OnSubmitButtonClicked()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x2316F94", Offset = "0x2316F94", VA = "0x2316F94")]
	public QuestionState()
	{
	}
}
[Token(Token = "0x20000B8")]
public class SelectColliderState : QuizState
{
	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x22DED18", Offset = "0x22DED18", VA = "0x22DED18", Slot = "5")]
	public override void OnStartState()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x22DED20", Offset = "0x22DED20", VA = "0x22DED20", Slot = "4")]
	public override void OnStateTick()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x22DED24", Offset = "0x22DED24", VA = "0x22DED24", Slot = "6")]
	public override void OnEndState()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x22DED2C", Offset = "0x22DED2C", VA = "0x22DED2C")]
	public SelectColliderState()
	{
	}
}
[Token(Token = "0x20000B9")]
public class SelectToggleState : QuizState
{
	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x22DED34", Offset = "0x22DED34", VA = "0x22DED34", Slot = "5")]
	public override void OnStartState()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x22DED3C", Offset = "0x22DED3C", VA = "0x22DED3C", Slot = "4")]
	public override void OnStateTick()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x22DED40", Offset = "0x22DED40", VA = "0x22DED40", Slot = "6")]
	public override void OnEndState()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x22DED48", Offset = "0x22DED48", VA = "0x22DED48")]
	public SelectToggleState()
	{
	}
}
[Token(Token = "0x20000BA")]
public class VrGuiOffsetLookAtCamera : MonoBehaviour
{
	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _useUpdate;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _vrCameraObject;

	[Token(Token = "0x40005E7")]
	private const string VrCameraObjectName = "Main Camera";

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1330B44", Offset = "0x1330B44", VA = "0x1330B44")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1330B9C", Offset = "0x1330B9C", VA = "0x1330B9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1330C0C", Offset = "0x1330C0C", VA = "0x1330C0C")]
	public void ActivateTracking(bool value)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1330C18", Offset = "0x1330C18", VA = "0x1330C18")]
	public VrGuiOffsetLookAtCamera()
	{
	}
}
[Token(Token = "0x20000BB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09D24", Offset = "0xD09D24")]
public class ButtonSelector : Selector
{
	[Token(Token = "0x200054A")]
	public delegate void ButtonClicked();

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string SELECTED_STATE;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string DESELECTED_STATE;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string CLICKED_STATE;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonClicked OnButtonClicked;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xF85C30", Offset = "0xF85C30", VA = "0xF85C30")]
	protected new void Awake()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xF85C94", Offset = "0xF85C94", VA = "0xF85C94", Slot = "4")]
	public override void OnSelected()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xF85CE0", Offset = "0xF85CE0", VA = "0xF85CE0", Slot = "6")]
	public override void OnDeselect()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xF85D2C", Offset = "0xF85D2C", VA = "0xF85D2C", Slot = "5")]
	public override void Clicked()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xF85FF4", Offset = "0xF85FF4", VA = "0xF85FF4")]
	public ButtonSelector()
	{
	}
}
[Token(Token = "0x20000BC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09D88", Offset = "0xD09D88")]
public class Selector : MonoBehaviour
{
	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool selected;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float lastClickTime;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float clickDelay;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Selector parentSelector;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<Selector> childernSelector;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool childSelected;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x22DEF00", Offset = "0x22DEF00", VA = "0x22DEF00")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x22DF028", Offset = "0x22DF028", VA = "0x22DF028", Slot = "4")]
	public virtual void OnSelected()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x22DF03C", Offset = "0x22DF03C", VA = "0x22DF03C")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x22DF08C", Offset = "0x22DF08C", VA = "0x22DF08C", Slot = "5")]
	public virtual void Clicked()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x22DF10C", Offset = "0x22DF10C", VA = "0x22DF10C", Slot = "6")]
	public virtual void OnDeselect()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x22DF1D4", Offset = "0x22DF1D4", VA = "0x22DF1D4", Slot = "7")]
	protected virtual void UpdateState()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x22DEF90", Offset = "0x22DEF90", VA = "0x22DEF90")]
	public void AddChildSelector(Selector child)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x22DF1D8", Offset = "0x22DF1D8", VA = "0x22DF1D8")]
	public void OnChildClicked()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x22DF200", Offset = "0x22DF200", VA = "0x22DF200")]
	public Selector()
	{
	}
}
[Token(Token = "0x20000BD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09DEC", Offset = "0xD09DEC")]
public class ToggleSelector : Selector
{
	[Token(Token = "0x200054B")]
	public delegate void OnToggled(bool val);

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isOn;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ToggleSelectorGroup group;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator anim;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] setActiveGameObjects;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string IS_ON_STATE;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string SELECTED_STATE;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string DESELECTED_STATE;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public OnToggled toggled;

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x23283AC", Offset = "0x23283AC", VA = "0x23283AC")]
	protected new void Awake()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x23284F8", Offset = "0x23284F8", VA = "0x23284F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x23285A4", Offset = "0x23285A4", VA = "0x23285A4")]
	public void OnValueChanged(bool val)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x2328850", Offset = "0x2328850", VA = "0x2328850", Slot = "4")]
	public override void OnSelected()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x2328888", Offset = "0x2328888", VA = "0x2328888", Slot = "6")]
	public override void OnDeselect()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x23288C0", Offset = "0x23288C0", VA = "0x23288C0", Slot = "5")]
	public override void Clicked()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x2328AE0", Offset = "0x2328AE0", VA = "0x2328AE0", Slot = "7")]
	protected override void UpdateState()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x2328B78", Offset = "0x2328B78", VA = "0x2328B78")]
	public ToggleSelector()
	{
	}
}
[Token(Token = "0x20000BE")]
public class ToggleSelectorGroup : MonoBehaviour
{
	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int selected;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<ToggleSelector> selectors;

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x2328460", Offset = "0x2328460", VA = "0x2328460")]
	public void AddToggleSelector(ToggleSelector tog)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x23289A8", Offset = "0x23289A8", VA = "0x23289A8")]
	public void ToggleSelected(ToggleSelector tog)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x2328CB4", Offset = "0x2328CB4", VA = "0x2328CB4")]
	public ToggleSelectorGroup()
	{
	}
}
[Token(Token = "0x20000BF")]
public class SendMail : MonoBehaviour
{
	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C5D0", Offset = "0xD0C5D0")]
	private sealed class <WaitAndShow>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SendMail <>4__this;

		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <f>5__2;

		[Token(Token = "0x1700023B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x22E0B38", Offset = "0x22E0B38", VA = "0x22E0B38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x22E0BA0", Offset = "0x22E0BA0", VA = "0x22E0BA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x22E0188", Offset = "0x22E0188", VA = "0x22E0188")]
		[DebuggerHidden]
		public <WaitAndShow>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x22E07C0", Offset = "0x22E07C0", VA = "0x22E07C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x22E07C4", Offset = "0x22E07C4", VA = "0x22E07C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x22E0B40", Offset = "0x22E0B40", VA = "0x22E0B40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C5E0", Offset = "0xD0C5E0")]
	private sealed class <restoreScreenshotSettings>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color c;

		[Token(Token = "0x4002ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject sphere;

		[Token(Token = "0x4002ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color oldSkyAmb;

		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color oldTintAmb;

		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color oldSkyEmmissive;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Animator[] anims;

		[Token(Token = "0x1700023D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x22E0DB4", Offset = "0x22E0DB4", VA = "0x22E0DB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x22E0E1C", Offset = "0x22E0E1C", VA = "0x22E0E1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x22E05AC", Offset = "0x22E05AC", VA = "0x22E05AC")]
		[DebuggerHidden]
		public <restoreScreenshotSettings>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x22E0BA8", Offset = "0x22E0BA8", VA = "0x22E0BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x22E0BAC", Offset = "0x22E0BAC", VA = "0x22E0BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x22E0DBC", Offset = "0x22E0DBC", VA = "0x22E0DBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string screenshotName;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField emailField;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image flashImage;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform screenCapturePanel;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FEF0", Offset = "0xD0FEF0")]
	public Button screenShotButton;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD0FF28", Offset = "0xD0FF28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD0FF28", Offset = "0xD0FF28")]
	public RectTransform UI;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string imagePath;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource clickSound;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool hideGUI;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string isScreenshotTag;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform[] previousState;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject theGui;

	[Token(Token = "0x4000609")]
	private const string MatchEmailPattern = "^(([\\w-]+\\.)+[\\w-]+|([a-zA-Z]{1}|[\\w-]{2,}))@((([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])){1}|([a-zA-Z]+[\\w-]+\\.)+[a-zA-Z]{2,4})$";

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x22E0028", Offset = "0x22E0028", VA = "0x22E0028")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x22E0118", Offset = "0x22E0118", VA = "0x22E0118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD211C4", Offset = "0xD211C4")]
	private IEnumerator WaitAndShow()
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x22E01B4", Offset = "0x22E01B4", VA = "0x22E01B4")]
	public void TakeScreenShot()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x22E04D4", Offset = "0x22E04D4", VA = "0x22E04D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21228", Offset = "0xD21228")]
	private IEnumerator restoreScreenshotSettings(Color c, GameObject sphere, float oldTime, Color oldSkyAmb, Color oldSkyEmmissive, Color oldTintAmb, Animator[] anims, float[] speeds)
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x22E05D8", Offset = "0x22E05D8", VA = "0x22E05D8")]
	private void OnImageLoaded()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x22E05DC", Offset = "0x22E05DC", VA = "0x22E05DC")]
	public bool IsEmail(string email)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x22E0664", Offset = "0x22E0664", VA = "0x22E0664")]
	public void Send()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x22E0668", Offset = "0x22E0668", VA = "0x22E0668")]
	public void Cancel()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x22E066C", Offset = "0x22E066C", VA = "0x22E066C")]
	private void clearEmailField()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x22E06C8", Offset = "0x22E06C8", VA = "0x22E06C8")]
	public static string GetScreenshotSavePath()
	{
		return null;
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x22E0750", Offset = "0x22E0750", VA = "0x22E0750")]
	public SendMail()
	{
	}
}
[Token(Token = "0x20000C0")]
public class SwitchVRAudioOutput : MonoBehaviour
{
	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x22C8648", Offset = "0x22C8648", VA = "0x22C8648")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x22C864C", Offset = "0x22C864C", VA = "0x22C864C")]
	public SwitchVRAudioOutput()
	{
	}
}
[Token(Token = "0x20000C1")]
public class SubscriptionTestPanelEnabler : MonoBehaviour
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject testPanel;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x22C8640", Offset = "0x22C8640", VA = "0x22C8640")]
	public SubscriptionTestPanelEnabler()
	{
	}
}
[Token(Token = "0x20000C2")]
public class SystemSubscriptionController : MonoBehaviour
{
	[Token(Token = "0x200054E")]
	public enum SubscriptionModes
	{
		[Token(Token = "0x4002AC1")]
		Free,
		[Token(Token = "0x4002AC2")]
		Normal,
		[Token(Token = "0x4002AC3")]
		Pro
	}

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action SubscriptionChangedAction;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SubscriptionModes _subscriptionMode;

	[Token(Token = "0x1700002F")]
	public SubscriptionModes subscriptionMode
	{
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x22C8B2C", Offset = "0x22C8B2C", VA = "0x22C8B2C")]
		get
		{
			return default(SubscriptionModes);
		}
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x22C67A8", Offset = "0x22C67A8", VA = "0x22C67A8")]
		set
		{
		}
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x22C8B34", Offset = "0x22C8B34", VA = "0x22C8B34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x22C8C80", Offset = "0x22C8C80", VA = "0x22C8C80")]
	public SystemSubscriptionController()
	{
	}
}
[Token(Token = "0x20000C3")]
public class TimeLimitedLicense : MonoBehaviour
{
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int expirationDate;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x22C98AC", Offset = "0x22C98AC", VA = "0x22C98AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x22C998C", Offset = "0x22C998C", VA = "0x22C998C")]
	public TimeLimitedLicense()
	{
	}
}
[Token(Token = "0x20000C4")]
public class VRStatusHelper : MonoBehaviour
{
	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1236734", Offset = "0x1236734", VA = "0x1236734")]
	public static bool IsVRWithInactiveHMD()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x12367E0", Offset = "0x12367E0", VA = "0x12367E0")]
	public VRStatusHelper()
	{
	}
}
[Token(Token = "0x20000C5")]
public class Validator : MonoBehaviour
{
	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1238DBC", Offset = "0x1238DBC", VA = "0x1238DBC")]
	public Validator()
	{
	}
}
[Token(Token = "0x20000C6")]
public class HMDInputModule : PointerInputModule
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera cam;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HMDInputModule _instance;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform rayTransform;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PointerEventData CurrentEventData;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SelectionRadial radial;

	[Token(Token = "0x17000030")]
	public static HMDInputModule instance
	{
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x2300214", Offset = "0x2300214", VA = "0x2300214")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x230027C", Offset = "0x230027C", VA = "0x230027C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x23003C4", Offset = "0x23003C4", VA = "0x23003C4", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x2300564", Offset = "0x2300564", VA = "0x2300564", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x23005AC", Offset = "0x23005AC", VA = "0x23005AC")]
	private GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x23005C4", Offset = "0x23005C4", VA = "0x23005C4")]
	private PointerEventData GetEvent(int id)
	{
		return null;
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x23007E4", Offset = "0x23007E4", VA = "0x23007E4")]
	private void UpdateCurrentObject(GameObject previousObject)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x2300BD4", Offset = "0x2300BD4", VA = "0x2300BD4")]
	private bool SendUpdateEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x2300D28", Offset = "0x2300D28", VA = "0x2300D28")]
	private bool SendSubmitEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x2300E7C", Offset = "0x2300E7C", VA = "0x2300E7C", Slot = "23")]
	public override void ActivateModule()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x2300F48", Offset = "0x2300F48", VA = "0x2300F48", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x2300F74", Offset = "0x2300F74", VA = "0x2300F74")]
	private void OnSelected()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x2300F78", Offset = "0x2300F78", VA = "0x2300F78")]
	public HMDInputModule()
	{
	}
}
[Token(Token = "0x20000C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09E50", Offset = "0xD09E50")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09E50", Offset = "0xD09E50")]
public class HotspotButtonGaze : MonoBehaviour
{
	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C5F0", Offset = "0xD0C5F0")]
	private sealed class <FillSelectionRadial>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HotspotButtonGaze <>4__this;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x1700023F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x2301F8C", Offset = "0x2301F8C", VA = "0x2301F8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000240")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x2301FF4", Offset = "0x2301FF4", VA = "0x2301FF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x2301C78", Offset = "0x2301C78", VA = "0x2301C78")]
		[DebuggerHidden]
		public <FillSelectionRadial>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x2301E78", Offset = "0x2301E78", VA = "0x2301E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x2301E7C", Offset = "0x2301E7C", VA = "0x2301E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x2301F94", Offset = "0x2301F94", VA = "0x2301F94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000550")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C600", Offset = "0xD0C600")]
	private sealed class <WaitAndClick>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HotspotButtonGaze <>4__this;

		[Token(Token = "0x17000241")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x23020D0", Offset = "0x23020D0", VA = "0x23020D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021DA")]
			[Address(RVA = "0x2302138", Offset = "0x2302138", VA = "0x2302138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x2301D14", Offset = "0x2301D14", VA = "0x2301D14")]
		[DebuggerHidden]
		public <WaitAndClick>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x2301FFC", Offset = "0x2301FFC", VA = "0x2301FFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x2302000", Offset = "0x2302000", VA = "0x2302000", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x23020D8", Offset = "0x23020D8", VA = "0x23020D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button m_Button;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isOver;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRInteractiveItem m_InteractiveItem;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_UsingFillImage;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image m_SelectionImage;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool m_HideOnStart;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_WaitTime;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine m_SelectionFillRoutine;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_RadialFilled;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_IsSelectionRadialActive;

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x2301920", Offset = "0x2301920", VA = "0x2301920")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x2301990", Offset = "0x2301990", VA = "0x2301990")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x23019DC", Offset = "0x23019DC", VA = "0x23019DC")]
	public void Hide()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x2301A30", Offset = "0x2301A30", VA = "0x2301A30")]
	public void Show()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x2301A78", Offset = "0x2301A78", VA = "0x2301A78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x2301B40", Offset = "0x2301B40", VA = "0x2301B40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x2301C08", Offset = "0x2301C08", VA = "0x2301C08")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2128C", Offset = "0xD2128C")]
	private IEnumerator FillSelectionRadial()
	{
		return null;
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x2301CA4", Offset = "0x2301CA4", VA = "0x2301CA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD212F0", Offset = "0xD212F0")]
	private IEnumerator WaitAndClick()
	{
		return null;
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x2301D40", Offset = "0x2301D40", VA = "0x2301D40")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x2301E00", Offset = "0x2301E00", VA = "0x2301E00")]
	private void HandleOut()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x2301E5C", Offset = "0x2301E5C", VA = "0x2301E5C")]
	public HotspotButtonGaze()
	{
	}
}
[Token(Token = "0x20000C8")]
public class HotspotManager : MonoBehaviour
{
	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button[] m_hotSpotsInScene;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_playButton;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_pauseButton;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x2302140", Offset = "0x2302140", VA = "0x2302140")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x2302148", Offset = "0x2302148", VA = "0x2302148")]
	public void toggleButton()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x2302144", Offset = "0x2302144", VA = "0x2302144")]
	public void BindHotSpotsToScenes()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x23021B4", Offset = "0x23021B4", VA = "0x23021B4")]
	public HotspotManager()
	{
	}
}
[Token(Token = "0x20000C9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09EDC", Offset = "0xD09EDC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09EDC", Offset = "0xD09EDC")]
public class MenuButtonGaze : MonoBehaviour
{
	[Token(Token = "0x2000551")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C610", Offset = "0xD0C610")]
	private sealed class <WaitAndClick>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuButtonGaze <>4__this;

		[Token(Token = "0x17000243")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021DE")]
			[Address(RVA = "0xFB5718", Offset = "0xFB5718", VA = "0xFB5718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021E0")]
			[Address(RVA = "0xFB5780", Offset = "0xFB5780", VA = "0xFB5780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xFB5584", Offset = "0xFB5584", VA = "0xFB5584")]
		[DebuggerHidden]
		public <WaitAndClick>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xFB5654", Offset = "0xFB5654", VA = "0xFB5654", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xFB5658", Offset = "0xFB5658", VA = "0xFB5658", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xFB5720", Offset = "0xFB5720", VA = "0xFB5720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button m_Button;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isOver;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRInteractiveItem m_InteractiveItem;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image m_Image;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xFB52FC", Offset = "0xFB52FC", VA = "0xFB52FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xFB5384", Offset = "0xFB5384", VA = "0xFB5384")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xFB544C", Offset = "0xFB544C", VA = "0xFB544C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xFB5514", Offset = "0xFB5514", VA = "0xFB5514")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21354", Offset = "0xD21354")]
	private IEnumerator WaitAndClick()
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xFB55B0", Offset = "0xFB55B0", VA = "0xFB55B0")]
	private void HandleOver()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xFB560C", Offset = "0xFB560C", VA = "0xFB560C")]
	private void HandleOut()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xFB564C", Offset = "0xFB564C", VA = "0xFB564C")]
	public MenuButtonGaze()
	{
	}
}
[Token(Token = "0x20000CA")]
public class MenuManager : MonoBehaviour
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button[] m_buttonsInScene;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_menu;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_playButton;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_pauseButton;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string m_oculusMenuToggle;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource m_menuToggleAudio;

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xFB5788", Offset = "0xFB5788", VA = "0xFB5788")]
	private void Start()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xFB5824", Offset = "0xFB5824", VA = "0xFB5824")]
	private void Update()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xFB58D0", Offset = "0xFB58D0", VA = "0xFB58D0")]
	public void toggleMenu()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xFB5828", Offset = "0xFB5828", VA = "0xFB5828")]
	private void checkForInput()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xFB5910", Offset = "0xFB5910", VA = "0xFB5910")]
	public void toggleButton()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xFB5820", Offset = "0xFB5820", VA = "0xFB5820")]
	public void BindButtonsToScenes()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xFB597C", Offset = "0xFB597C", VA = "0xFB597C")]
	public MenuManager()
	{
	}
}
[Token(Token = "0x20000CB")]
public class MovieCanvas : MonoBehaviour
{
	[Token(Token = "0x600050F")]
	[Address(RVA = "0xFBB0D4", Offset = "0xFBB0D4", VA = "0xFBB0D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xFBB0D8", Offset = "0xFBB0D8", VA = "0xFBB0D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xFBB0DC", Offset = "0xFBB0DC", VA = "0xFBB0DC")]
	public MovieCanvas()
	{
	}
}
[Token(Token = "0x20000CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09F68", Offset = "0xD09F68")]
public class RaycastInput : MonoBehaviour
{
	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string oculusPrimaryInputAxis;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LayerMask whatIsInteractable;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float rayDistance;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool drawDebugLine;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRLineRenderer line;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float defaultLineDistance;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Ray ray;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private RaycastHit rayHit;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PointerEventData eventData;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x23188D4", Offset = "0x23188D4", VA = "0x23188D4")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x2318958", Offset = "0x2318958", VA = "0x2318958")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x2318A90", Offset = "0x2318A90", VA = "0x2318A90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x2318AB4", Offset = "0x2318AB4", VA = "0x2318AB4")]
	private void LookForInteractables()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x2318ED8", Offset = "0x2318ED8", VA = "0x2318ED8")]
	private void CheckInput()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x231932C", Offset = "0x231932C", VA = "0x231932C")]
	private void LookAway()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x2319458", Offset = "0x2319458", VA = "0x2319458")]
	private RaycastResult ConvertRaycastHitToRaycastResult(RaycastHit hit)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x2319204", Offset = "0x2319204", VA = "0x2319204")]
	private void DrawLine()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x2319528", Offset = "0x2319528", VA = "0x2319528")]
	public RaycastInput()
	{
	}
}
[Token(Token = "0x20000CD")]
public class Reticle : MonoBehaviour
{
	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_DefaultDistance;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_UseNormal;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image m_Image;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform m_ReticleTransform;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_Camera;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 m_OriginalScale;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_OriginalRotation;

	[Token(Token = "0x17000031")]
	public bool UseNormal
	{
		[Token(Token = "0x600051B")]
		[Address(RVA = "0xF0D2E0", Offset = "0xF0D2E0", VA = "0xF0D2E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xF0D2E8", Offset = "0xF0D2E8", VA = "0xF0D2E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public Transform ReticleTransform
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xF0D2F4", Offset = "0xF0D2F4", VA = "0xF0D2F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xF0D2FC", Offset = "0xF0D2FC", VA = "0xF0D2FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xF0D34C", Offset = "0xF0D34C", VA = "0xF0D34C")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xF0D36C", Offset = "0xF0D36C", VA = "0xF0D36C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xF0D38C", Offset = "0xF0D38C", VA = "0xF0D38C")]
	public void SetPosition()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xF0D4D4", Offset = "0xF0D4D4", VA = "0xF0D4D4")]
	public void SetPosition(RaycastHit hit)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xF0D68C", Offset = "0xF0D68C", VA = "0xF0D68C")]
	public Reticle()
	{
	}
}
[Token(Token = "0x20000CE")]
public class TranslateAsset : MonoBehaviour
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10078", Offset = "0xD10078")]
	public float translateSpeed;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotationSpeed;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion originalRotation;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 originalPosition;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x232A5F4", Offset = "0x232A5F4", VA = "0x232A5F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x232A650", Offset = "0x232A650", VA = "0x232A650")]
	public void OnRotateAxisMoved(Vector2 val)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x232A6D8", Offset = "0x232A6D8", VA = "0x232A6D8")]
	public void OnTranslateAxisMoved(Vector2 val)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x232A780", Offset = "0x232A780", VA = "0x232A780")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x232A7D8", Offset = "0x232A7D8", VA = "0x232A7D8")]
	public TranslateAsset()
	{
	}
}
[Token(Token = "0x20000CF")]
public class DontDestroyObject : MonoBehaviour
{
	[Token(Token = "0x6000529")]
	[Address(RVA = "0x22EDD34", Offset = "0x22EDD34", VA = "0x22EDD34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x22EDDB0", Offset = "0x22EDDB0", VA = "0x22EDDB0")]
	public DontDestroyObject()
	{
	}
}
[Token(Token = "0x20000D0")]
public class VRFPSCounter : MonoBehaviour
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_DeltaTime;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text m_Text;

	[Token(Token = "0x4000640")]
	private const float k_SmoothingCoef = 0.1f;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xFD6694", Offset = "0xFD6694", VA = "0xFD6694")]
	private void Start()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xFD66EC", Offset = "0xFD66EC", VA = "0xFD66EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xFD681C", Offset = "0xFD681C", VA = "0xFD681C")]
	public VRFPSCounter()
	{
	}
}
[Token(Token = "0x20000D1")]
public class VRInput : MonoBehaviour
{
	[Token(Token = "0x2000552")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4002ACF")]
		NONE,
		[Token(Token = "0x4002AD0")]
		UP,
		[Token(Token = "0x4002AD1")]
		DOWN,
		[Token(Token = "0x4002AD2")]
		LEFT,
		[Token(Token = "0x4002AD3")]
		RIGHT
	}

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_DoubleClickTime;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float m_SwipeWidth;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 m_MouseDownPosition;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 m_MouseUpPosition;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_LastMouseUpTime;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_LastHorizontalValue;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_LastVerticalValue;

	[Token(Token = "0x17000033")]
	public float DoubleClickTime
	{
		[Token(Token = "0x600053A")]
		[Address(RVA = "0xFD6FD4", Offset = "0xFD6FD4", VA = "0xFD6FD4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000003")]
	public event Action<SwipeDirection> OnSwipe
	{
		[Token(Token = "0x600052E")]
		[Address(RVA = "0xFD6824", Offset = "0xFD6824", VA = "0xFD6824")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD213B8", Offset = "0xD213B8")]
		add
		{
		}
		[Token(Token = "0x600052F")]
		[Address(RVA = "0xFD68C8", Offset = "0xFD68C8", VA = "0xFD68C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD213C8", Offset = "0xD213C8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action OnClick
	{
		[Token(Token = "0x6000530")]
		[Address(RVA = "0xFD696C", Offset = "0xFD696C", VA = "0xFD696C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD213D8", Offset = "0xD213D8")]
		add
		{
		}
		[Token(Token = "0x6000531")]
		[Address(RVA = "0xFD6A10", Offset = "0xFD6A10", VA = "0xFD6A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD213E8", Offset = "0xD213E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnDown
	{
		[Token(Token = "0x6000532")]
		[Address(RVA = "0xFD6AB4", Offset = "0xFD6AB4", VA = "0xFD6AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD213F8", Offset = "0xD213F8")]
		add
		{
		}
		[Token(Token = "0x6000533")]
		[Address(RVA = "0xFD6B58", Offset = "0xFD6B58", VA = "0xFD6B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21408", Offset = "0xD21408")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action OnUp
	{
		[Token(Token = "0x6000534")]
		[Address(RVA = "0xFD6BFC", Offset = "0xFD6BFC", VA = "0xFD6BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21418", Offset = "0xD21418")]
		add
		{
		}
		[Token(Token = "0x6000535")]
		[Address(RVA = "0xFD6CA0", Offset = "0xFD6CA0", VA = "0xFD6CA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21428", Offset = "0xD21428")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action OnDoubleClick
	{
		[Token(Token = "0x6000536")]
		[Address(RVA = "0xFD6D44", Offset = "0xFD6D44", VA = "0xFD6D44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21438", Offset = "0xD21438")]
		add
		{
		}
		[Token(Token = "0x6000537")]
		[Address(RVA = "0xFD6DE8", Offset = "0xFD6DE8", VA = "0xFD6DE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21448", Offset = "0xD21448")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action OnCancel
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0xFD6E8C", Offset = "0xFD6E8C", VA = "0xFD6E8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21458", Offset = "0xD21458")]
		add
		{
		}
		[Token(Token = "0x6000539")]
		[Address(RVA = "0xFD6F30", Offset = "0xFD6F30", VA = "0xFD6F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21468", Offset = "0xD21468")]
		remove
		{
		}
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xFD6FDC", Offset = "0xFD6FDC", VA = "0xFD6FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xFD6FE0", Offset = "0xFD6FE0", VA = "0xFD6FE0")]
	private void CheckInput()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xFD7180", Offset = "0xFD7180", VA = "0xFD7180")]
	private SwipeDirection DetectSwipe()
	{
		return default(SwipeDirection);
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xFD72BC", Offset = "0xFD72BC", VA = "0xFD72BC")]
	private SwipeDirection DetectKeyboardEmulatedSwipe()
	{
		return default(SwipeDirection);
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xFD73EC", Offset = "0xFD73EC", VA = "0xFD73EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xFD7400", Offset = "0xFD7400", VA = "0xFD7400")]
	public VRInput()
	{
	}
}
[Token(Token = "0x20000D2")]
public class VRInteractiveItem : MonoBehaviour
{
	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool m_IsOver;

	[Token(Token = "0x17000034")]
	public bool IsOver
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0xFD7BC8", Offset = "0xFD7BC8", VA = "0xFD7BC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000009")]
	public event Action OnOver
	{
		[Token(Token = "0x6000541")]
		[Address(RVA = "0xFD7418", Offset = "0xFD7418", VA = "0xFD7418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21478", Offset = "0xD21478")]
		add
		{
		}
		[Token(Token = "0x6000542")]
		[Address(RVA = "0xFD74BC", Offset = "0xFD74BC", VA = "0xFD74BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21488", Offset = "0xD21488")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action OnOut
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0xFD7560", Offset = "0xFD7560", VA = "0xFD7560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21498", Offset = "0xD21498")]
		add
		{
		}
		[Token(Token = "0x6000544")]
		[Address(RVA = "0xFD7604", Offset = "0xFD7604", VA = "0xFD7604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD214A8", Offset = "0xD214A8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action OnClick
	{
		[Token(Token = "0x6000545")]
		[Address(RVA = "0xFD76A8", Offset = "0xFD76A8", VA = "0xFD76A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD214B8", Offset = "0xD214B8")]
		add
		{
		}
		[Token(Token = "0x6000546")]
		[Address(RVA = "0xFD774C", Offset = "0xFD774C", VA = "0xFD774C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD214C8", Offset = "0xD214C8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action OnDoubleClick
	{
		[Token(Token = "0x6000547")]
		[Address(RVA = "0xFD77F0", Offset = "0xFD77F0", VA = "0xFD77F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD214D8", Offset = "0xD214D8")]
		add
		{
		}
		[Token(Token = "0x6000548")]
		[Address(RVA = "0xFD7894", Offset = "0xFD7894", VA = "0xFD7894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD214E8", Offset = "0xD214E8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action OnUp
	{
		[Token(Token = "0x6000549")]
		[Address(RVA = "0xFD7938", Offset = "0xFD7938", VA = "0xFD7938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD214F8", Offset = "0xD214F8")]
		add
		{
		}
		[Token(Token = "0x600054A")]
		[Address(RVA = "0xFD79DC", Offset = "0xFD79DC", VA = "0xFD79DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21508", Offset = "0xD21508")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action OnDown
	{
		[Token(Token = "0x600054B")]
		[Address(RVA = "0xFD7A80", Offset = "0xFD7A80", VA = "0xFD7A80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21518", Offset = "0xD21518")]
		add
		{
		}
		[Token(Token = "0x600054C")]
		[Address(RVA = "0xFD7B24", Offset = "0xFD7B24", VA = "0xFD7B24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21528", Offset = "0xD21528")]
		remove
		{
		}
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xFD7BD0", Offset = "0xFD7BD0", VA = "0xFD7BD0")]
	public void Over()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xFD7BF0", Offset = "0xFD7BF0", VA = "0xFD7BF0")]
	public void Out()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xFD7C0C", Offset = "0xFD7C0C", VA = "0xFD7C0C")]
	public void Click()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xFD7C20", Offset = "0xFD7C20", VA = "0xFD7C20")]
	public void DoubleClick()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xFD7C34", Offset = "0xFD7C34", VA = "0xFD7C34")]
	public void Up()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xFD7C48", Offset = "0xFD7C48", VA = "0xFD7C48")]
	public void Down()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xFD7C5C", Offset = "0xFD7C5C", VA = "0xFD7C5C")]
	public VRInteractiveItem()
	{
	}
}
[Token(Token = "0x20000D3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09FCC", Offset = "0xD09FCC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD09FCC", Offset = "0xD09FCC")]
[ExecuteInEditMode]
public class VRLineRenderer : MonoBehaviour
{
	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Vector3[] m_Positions;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Color m_ColorStart;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Color m_ColorEnd;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected float m_WidthStart;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected float m_WidthEnd;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected bool m_WorldSpaceData;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshChain m_MeshData;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_MeshNeedsRefreshing;

	[Token(Token = "0x400065D")]
	private const string k_RuntimeWidthChangeWarning = "Setting VRLineRenderer width at runtime should be done through SetWidth; this setter is intended for editor use.";

	[Token(Token = "0x400065E")]
	private const string k_RuntimeColorChangeWarning = "Setting VRLineRenderer color at runtime should be done through SetColors; this setter is intended for editor use.";

	[Token(Token = "0x17000035")]
	public bool useWorldSpace
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xFD7E3C", Offset = "0xFD7E3C", VA = "0xFD7E3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xFD7E44", Offset = "0xFD7E44", VA = "0xFD7E44")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public float widthStart
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xFD7E50", Offset = "0xFD7E50", VA = "0xFD7E50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xFD7E58", Offset = "0xFD7E58", VA = "0xFD7E58")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public float widthEnd
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xFD7EE8", Offset = "0xFD7EE8", VA = "0xFD7EE8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xFD7EF0", Offset = "0xFD7EF0", VA = "0xFD7EF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public Color colorStart
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0xFD7F80", Offset = "0xFD7F80", VA = "0xFD7F80")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xFD7F8C", Offset = "0xFD7F8C", VA = "0xFD7F8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public Color colorEnd
	{
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xFD8034", Offset = "0xFD8034", VA = "0xFD8034")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600055E")]
		[Address(RVA = "0xFD8040", Offset = "0xFD8040", VA = "0xFD8040")]
		set
		{
		}
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xFD80E8", Offset = "0xFD80E8", VA = "0xFD80E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xFD846C", Offset = "0xFD846C", VA = "0xFD846C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xFD85E4", Offset = "0xFD85E4", VA = "0xFD85E4")]
	public static implicit operator Renderer(VRLineRenderer lr)
	{
		return null;
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xFD863C", Offset = "0xFD863C", VA = "0xFD863C")]
	public void EditorCheckForUpdate()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xFD8644", Offset = "0xFD8644", VA = "0xFD8644")]
	public void SetColors(Color start, Color end)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xFD8A54", Offset = "0xFD8A54", VA = "0xFD8A54")]
	public void SetPosition(int index, Vector3 position)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xFD8EE8", Offset = "0xFD8EE8", VA = "0xFD8EE8")]
	public void SetPositions(Vector3[] newPositions, bool knownSizeChange = false)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xFD90A8", Offset = "0xFD90A8", VA = "0xFD90A8")]
	public void SetVertexCount(int count)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xFD91E4", Offset = "0xFD91E4", VA = "0xFD91E4")]
	public void SetWidth(float start, float end)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xFD80F0", Offset = "0xFD80F0", VA = "0xFD80F0")]
	protected bool Initialize(bool force = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xFD9BEC", Offset = "0xFD9BEC", VA = "0xFD9BEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xFD9C50", Offset = "0xFD9C50", VA = "0xFD9C50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xFD9CB4", Offset = "0xFD9CB4", VA = "0xFD9CB4")]
	public VRLineRenderer()
	{
	}
}
[Token(Token = "0x20000D4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A068", Offset = "0xD0A068")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A068", Offset = "0xD0A068")]
[ExecuteInEditMode]
public class VRTrailRenderer : MonoBehaviour
{
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected int m_MaxTrailPoints;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected bool m_StealLastPointWhenEmpty;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Color[] m_Colors;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3[] m_Points;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float[] m_PointTimes;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int m_PointIndexStart;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int m_PointIndexEnd;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshChain m_MeshData;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_MeshNeedsRefreshing;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer m_MeshRenderer;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 m_LastRecordedPoint;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_UsedPoints;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_LastPointTime;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_EditorDeltaHelper;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected float m_Time;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	protected float m_StartWidth;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected float m_EndWidth;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	protected float m_MinVertexDistance;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	protected bool m_Autodestruct;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[SerializeField]
	public bool m_SmoothInterpolation;

	[Token(Token = "0x1700003A")]
	public float time
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x123725C", Offset = "0x123725C", VA = "0x123725C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600056D")]
		[Address(RVA = "0x1237264", Offset = "0x1237264", VA = "0x1237264")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float startWidth
	{
		[Token(Token = "0x600056E")]
		[Address(RVA = "0x123726C", Offset = "0x123726C", VA = "0x123726C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600056F")]
		[Address(RVA = "0x1237274", Offset = "0x1237274", VA = "0x1237274")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float endWidth
	{
		[Token(Token = "0x6000570")]
		[Address(RVA = "0x123727C", Offset = "0x123727C", VA = "0x123727C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000571")]
		[Address(RVA = "0x1237284", Offset = "0x1237284", VA = "0x1237284")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float minVertexDistance
	{
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x123728C", Offset = "0x123728C", VA = "0x123728C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x1237294", Offset = "0x1237294", VA = "0x1237294")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public bool autodestruct
	{
		[Token(Token = "0x6000574")]
		[Address(RVA = "0x123729C", Offset = "0x123729C", VA = "0x123729C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000575")]
		[Address(RVA = "0x12372A4", Offset = "0x12372A4", VA = "0x12372A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public bool smoothInterpolation
	{
		[Token(Token = "0x6000576")]
		[Address(RVA = "0x12372B0", Offset = "0x12372B0", VA = "0x12372B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000577")]
		[Address(RVA = "0x12372B8", Offset = "0x12372B8", VA = "0x12372B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x12372C4", Offset = "0x12372C4", VA = "0x12372C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1237630", Offset = "0x1237630", VA = "0x1237630")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1237FE4", Offset = "0x1237FE4", VA = "0x1237FE4")]
	public void EditorCheckForUpdate()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1237FE8", Offset = "0x1237FE8", VA = "0x1237FE8")]
	public void Clear()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1237E8C", Offset = "0x1237E8C", VA = "0x1237E8C")]
	protected Color GetLerpedColor(float percent)
	{
		return default(Color);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1237320", Offset = "0x1237320", VA = "0x1237320")]
	protected bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1238028", Offset = "0x1238028", VA = "0x1238028")]
	public VRTrailRenderer()
	{
	}
}
[Token(Token = "0x20000D5")]
public class VRReticule : MonoBehaviour
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float depthScaleMultiplier;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRReticule _instance;

	[Token(Token = "0x17000040")]
	public static VRReticule instance
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0xFDA2EC", Offset = "0xFDA2EC", VA = "0xFDA2EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xFDA354", Offset = "0xFDA354", VA = "0xFDA354")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xFDA490", Offset = "0xFDA490", VA = "0xFDA490")]
	private void Update()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xFDA494", Offset = "0xFDA494", VA = "0xFDA494")]
	public void SetPosition(Vector3 pos, Vector3 normal, Transform rayTransform)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xFDA62C", Offset = "0xFDA62C", VA = "0xFDA62C")]
	public void SetPosition(Vector3 pos, Transform rayTransform)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xFDA69C", Offset = "0xFDA69C", VA = "0xFDA69C")]
	public VRReticule()
	{
	}
}
[Token(Token = "0x20000D6")]
public class VRTrackingReset : MonoBehaviour
{
	[Token(Token = "0x6000586")]
	[Address(RVA = "0x12371F4", Offset = "0x12371F4", VA = "0x12371F4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1237254", Offset = "0x1237254", VA = "0x1237254")]
	public VRTrackingReset()
	{
	}
}
[Token(Token = "0x20000D7")]
public class XRControllerInputModule : StandaloneInputModule
{
	[Token(Token = "0x2000553")]
	public enum XRControlMethod
	{
		[Token(Token = "0x4002AD5")]
		MOUSE,
		[Token(Token = "0x4002AD6")]
		CUSTOM_RAY
	}

	[Token(Token = "0x2000554")]
	public enum Hand
	{
		[Token(Token = "0x4002AD8")]
		Both,
		[Token(Token = "0x4002AD9")]
		Right,
		[Token(Token = "0x4002ADA")]
		Left
	}

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private XRControlMethod controlMethod;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Transform controllerTransformOverride;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static XRControllerInputModule instance;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject currentDragging;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject m_rightController;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject m_leftController;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Ray customControllerRay;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float dragThreshold;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool pressedDown;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool pressedLastFrame;

	[Token(Token = "0x17000041")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1333384", Offset = "0x1333384", VA = "0x1333384")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x600058E")]
		[Address(RVA = "0x13334FC", Offset = "0x13334FC", VA = "0x13334FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x600058F")]
		[Address(RVA = "0x1333590", Offset = "0x1333590", VA = "0x1333590")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000590")]
		[Address(RVA = "0x13335FC", Offset = "0x13335FC", VA = "0x13335FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD2AAA8", Offset = "0xD2AAA8")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x6000591")]
		[Address(RVA = "0x1333670", Offset = "0x1333670", VA = "0x1333670")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000592")]
		[Address(RVA = "0x13336DC", Offset = "0x13336DC", VA = "0x13336DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public static XRControllerInputModule Instance
	{
		[Token(Token = "0x6000593")]
		[Address(RVA = "0x1333400", Offset = "0x1333400", VA = "0x1333400")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000594")]
		[Address(RVA = "0x1333750", Offset = "0x1333750", VA = "0x1333750")]
		private set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public Transform ControllerTransformOverride
	{
		[Token(Token = "0x6000595")]
		[Address(RVA = "0x13337BC", Offset = "0x13337BC", VA = "0x13337BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000596")]
		[Address(RVA = "0x1333830", Offset = "0x1333830", VA = "0x1333830")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public Hand UsedHand
	{
		[Token(Token = "0x6000597")]
		[Address(RVA = "0x13338A8", Offset = "0x13338A8", VA = "0x13338A8")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x13338B0", Offset = "0x13338B0", VA = "0x13338B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x13338B8", Offset = "0x13338B8", VA = "0x13338B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x600059A")]
		[Address(RVA = "0x1333944", Offset = "0x1333944", VA = "0x1333944")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000049")]
	public static XRControlMethod ControlMethod
	{
		[Token(Token = "0x600059B")]
		[Address(RVA = "0x13339A4", Offset = "0x13339A4", VA = "0x13339A4")]
		get
		{
			return default(XRControlMethod);
		}
		[Token(Token = "0x600059C")]
		[Address(RVA = "0x1333A10", Offset = "0x1333A10", VA = "0x1333A10")]
		set
		{
		}
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1332944", Offset = "0x1332944", VA = "0x1332944", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1332A18", Offset = "0x1332A18", VA = "0x1332A18", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1332A54", Offset = "0x1332A54", VA = "0x1332A54", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1332A78", Offset = "0x1332A78", VA = "0x1332A78", Slot = "31")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1332C94", Offset = "0x1332C94", VA = "0x1332C94", Slot = "32")]
	protected virtual void ProcessDownRelease(PointerEventData eventData, bool down, bool released)
	{
	}

	[Token(Token = "0x600059D")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1333AAC", Offset = "0x1333AAC", VA = "0x1333AAC")]
	public XRControllerInputModule()
	{
	}
}
[Token(Token = "0x20000D8")]
public class VRCameraController : MonoBehaviour
{
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRCameraFade _vrCameraFade;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AFPSCounter _afpsCounter;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xFD6584", Offset = "0xFD6584", VA = "0xFD6584")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xFD668C", Offset = "0xFD668C", VA = "0xFD668C")]
	public VRCameraController()
	{
	}
}
[Token(Token = "0x20000D9")]
public static class CoroutineExtensions
{
	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xF8E600", Offset = "0xF8E600", VA = "0xF8E600")]
	public static IEnumerator WaitAll(this MonoBehaviour mono, params IEnumerator[] ienumerators)
	{
		return null;
	}
}
[Token(Token = "0x20000DA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD0A114", Offset = "0xD0A114")]
public class AppDescriptor : ScriptableObject
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD102C0", Offset = "0xD102C0")]
	public PlatformTypes type;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD102F8", Offset = "0xD102F8")]
	public MainMenuDescriptor mainMenu;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10330", Offset = "0xD10330")]
	public SceneDescriptor[] scenes;

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1183438", Offset = "0x1183438", VA = "0x1183438")]
	public AppDescriptor()
	{
	}
}
[Token(Token = "0x20000DB")]
public class BaseSceneDescriptor : ScriptableObject
{
	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10368", Offset = "0xD10368")]
	public GameObject lighting;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD103A0", Offset = "0xD103A0")]
	public GameObject camera;

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xF7B60C", Offset = "0xF7B60C", VA = "0xF7B60C")]
	public BaseSceneDescriptor()
	{
	}
}
[Token(Token = "0x20000DC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD0A150", Offset = "0xD0A150")]
public class LightDescriptor : ScriptableObject
{
	[Token(Token = "0x2000555")]
	public enum LightRule
	{
		[Token(Token = "0x4002ADC")]
		None,
		[Token(Token = "0x4002ADD")]
		Attach,
		[Token(Token = "0x4002ADE")]
		Place
	}

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD103D8", Offset = "0xD103D8")]
	public string lightName;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10410", Offset = "0xD10410")]
	public string objectName;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 position;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10448", Offset = "0xD10448")]
	public LightRule rule;

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xFF6880", Offset = "0xFF6880", VA = "0xFF6880")]
	public LightDescriptor()
	{
	}
}
[Token(Token = "0x20000DD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD0A18C", Offset = "0xD0A18C")]
public class MainMenuDescriptor : BaseSceneDescriptor
{
	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10480", Offset = "0xD10480")]
	public string sceneName;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD104B8", Offset = "0xD104B8")]
	public string altSceneName;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD104F0", Offset = "0xD104F0")]
	public GameObject ui;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject vrUI;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10528", Offset = "0xD10528")]
	public GameObject button;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x13DB53C", Offset = "0x13DB53C", VA = "0x13DB53C")]
	public MainMenuDescriptor()
	{
	}
}
[Token(Token = "0x20000DE")]
public class ScenePathField : PropertyAttribute
{
	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x22DD384", Offset = "0x22DD384", VA = "0x22DD384")]
	public ScenePathField()
	{
	}
}
[Token(Token = "0x20000DF")]
public class SceneMaskField : PropertyAttribute
{
	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x22DD2F4", Offset = "0x22DD2F4", VA = "0x22DD2F4")]
	public SceneMaskField()
	{
	}
}
[Token(Token = "0x20000E0")]
[Flags]
public enum SceneFlavors
{
	[Token(Token = "0x4000694")]
	Desktop = 1,
	[Token(Token = "0x4000695")]
	VR = 2,
	[Token(Token = "0x4000696")]
	Demo = 4,
	[Token(Token = "0x4000697")]
	MobileVr = 8
}
[Serializable]
[Token(Token = "0x20000E1")]
public class SceneInformation
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string title;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ScenePathField]
	public string path;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SceneMaskField]
	public SceneFlavors flavors;

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x22DD2EC", Offset = "0x22DD2EC", VA = "0x22DD2EC")]
	public SceneInformation()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD0A1D8", Offset = "0xD0A1D8")]
public class PlatformsScenesObject : ScriptableObject
{
	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneInformation[] scenes;

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x230EAC4", Offset = "0x230EAC4", VA = "0x230EAC4")]
	public PlatformsScenesObject()
	{
	}
}
[Token(Token = "0x20000E3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD0A22C", Offset = "0xD0A22C")]
public class SceneDescriptor : BaseSceneDescriptor
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10580", Offset = "0xD10580")]
	public string sceneName;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD105B8", Offset = "0xD105B8")]
	public string altSceneName;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD105F0", Offset = "0xD105F0")]
	public SceneType type;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10628", Offset = "0xD10628")]
	public UIDescriptors[] uis;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10660", Offset = "0xD10660")]
	public GameObject asset;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10698", Offset = "0xD10698")]
	public LightDescriptor[] lights;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD106D0", Offset = "0xD106D0")]
	public PostProcessingProfile postProcessingProfile;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10708", Offset = "0xD10708")]
	public PostProcessingProfile vrPostProcessingProfile;

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x22DD14C", Offset = "0x22DD14C", VA = "0x22DD14C")]
	public SceneDescriptor()
	{
	}
}
[Token(Token = "0x20000E4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD0A268", Offset = "0xD0A268")]
public class UIDescriptors : ScriptableObject
{
	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10740", Offset = "0xD10740")]
	public GameObject prefab;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject vrPrefab;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x2330988", Offset = "0x2330988", VA = "0x2330988")]
	public UIDescriptors()
	{
	}
}
[Token(Token = "0x20000E5")]
public class DiscoverYou_Controller : MonoBehaviour
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DiscoverYou_ItemData[] contentItems;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string videoSubFolder;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MediaPlayer videoPlayer;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private DiscoverYou_VideoPanel videoPanel;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InfoBoxVideoControl videoControl;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private DiscoverYou_VideoListItem videoListItemExample;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button myCloseButton;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Toggle[] dependentToggles;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] dependentTogglesStates;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<DiscoverYou_VideoListItem> videoListItems;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int parentDefaultSibling;

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x22ED0A4", Offset = "0x22ED0A4", VA = "0x22ED0A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x22ED1B8", Offset = "0x22ED1B8", VA = "0x22ED1B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x22ED428", Offset = "0x22ED428", VA = "0x22ED428")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x22ED580", Offset = "0x22ED580", VA = "0x22ED580")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x22ED610", Offset = "0x22ED610", VA = "0x22ED610")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x22ED5D4", Offset = "0x22ED5D4", VA = "0x22ED5D4")]
	public void OnVideoCloseButton()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x22ED754", Offset = "0x22ED754", VA = "0x22ED754")]
	private void OnListItemSelected(DiscoverYou_ItemData item)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x22ED7F8", Offset = "0x22ED7F8", VA = "0x22ED7F8")]
	public void OnMediaPlayerEvent(MediaPlayer player, MediaPlayerEvent.EventType eventType, ErrorCode errorCode)
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x22ED294", Offset = "0x22ED294", VA = "0x22ED294")]
	private void FillVideoList()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x22ED488", Offset = "0x22ED488", VA = "0x22ED488")]
	private void UpdateDependentToggles(bool setOn)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x22EDB08", Offset = "0x22EDB08", VA = "0x22EDB08")]
	private void OnDependentToggleChanged(bool value)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x22EDB64", Offset = "0x22EDB64", VA = "0x22EDB64")]
	public DiscoverYou_Controller()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E6")]
public class DiscoverYou_ItemData
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string title;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string videoFileName;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string videoDuration;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite videoThumbnail;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isExclusive;

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x22EDB6C", Offset = "0x22EDB6C", VA = "0x22EDB6C")]
	public DiscoverYou_ItemData()
	{
	}
}
[Token(Token = "0x20000E7")]
public class DiscoverYou_VideoListItem : MonoBehaviour
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<DiscoverYou_ItemData> itemSelectedAction;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image thumbnailImage;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI titleTextField;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI durationTextField;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject exclusiveMark;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DiscoverYou_ItemData _itemData;

	[Token(Token = "0x1700004A")]
	public DiscoverYou_ItemData itemData
	{
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x22EDA6C", Offset = "0x22EDA6C", VA = "0x22EDA6C")]
		set
		{
		}
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x22EDBC8", Offset = "0x22EDBC8", VA = "0x22EDBC8")]
	public void OnItemSelected()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x22EDC2C", Offset = "0x22EDC2C", VA = "0x22EDC2C")]
	public DiscoverYou_VideoListItem()
	{
	}
}
[Token(Token = "0x20000E8")]
public class DiscoverYou_VideoPanel : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator panelAnimator;

	[Token(Token = "0x40006BD")]
	private const string VisibleAnimKey = "Visible";

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x22ED6B8", Offset = "0x22ED6B8", VA = "0x22ED6B8")]
	public void SetPanelActive(bool value)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x22EDC34", Offset = "0x22EDC34", VA = "0x22EDC34")]
	public DiscoverYou_VideoPanel()
	{
	}
}
[Token(Token = "0x20000E9")]
public class FXMapper : MonoBehaviour
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialParametersController MPC;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SimpleMaterialPropertyController[] sMPCs;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle popCornToggle;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool popIsOn;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scaleAmount;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator[] anims;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x22F8118", Offset = "0x22F8118", VA = "0x22F8118")]
	protected void Start()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x22F820C", Offset = "0x22F820C", VA = "0x22F820C")]
	public void OnAirFlowButtonChanged(bool val)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x22F821C", Offset = "0x22F821C", VA = "0x22F821C")]
	public FXMapper()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x22F8284", Offset = "0x22F8284", VA = "0x22F8284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21548", Offset = "0xD21548")]
	private void <Start>b__6_0(bool value)
	{
	}
}
[Serializable]
[Token(Token = "0x20000EA")]
public class SliderEffect
{
	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float sliderMin;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float sliderMax;

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x22EA88C", Offset = "0x22EA88C", VA = "0x22EA88C")]
	public SliderEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EB")]
public class MaterialEffect : SliderEffect
{
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float min;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float max;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string materialName;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x13DC628", Offset = "0x13DC628", VA = "0x13DC628")]
	public MaterialEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EC")]
public class BlendEffect : SliderEffect
{
	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float min;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float max;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int blendIndex;

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xF82568", Offset = "0xF82568", VA = "0xF82568")]
	public BlendEffect()
	{
	}
}
[Token(Token = "0x20000ED")]
[ExecuteInEditMode]
public class FXSlider : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10848", Offset = "0xD10848")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD10848", Offset = "0xD10848")]
	public float masterVal;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1089C", Offset = "0xD1089C")]
	public Renderer[] rend;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD108D4", Offset = "0xD108D4")]
	public MaterialEffect[] matFX;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BlendEffect[] blendFX;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Slider slide;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SkinnedMeshRenderer[] skinRend;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material[,] mats;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float lastValue;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_firstDeserialization;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_Mat_arrayLength;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int m_Blend_arrayLength;

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x22F8294", Offset = "0x22F8294", VA = "0x22F8294")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x22F86A8", Offset = "0x22F86A8", VA = "0x22F86A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x22F8CF4", Offset = "0x22F8CF4", VA = "0x22F8CF4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x22F844C", Offset = "0x22F844C", VA = "0x22F844C")]
	private void CheckRenderer()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x22F86F8", Offset = "0x22F86F8", VA = "0x22F86F8")]
	private void UpdateMaterials(float val)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x22F8A68", Offset = "0x22F8A68", VA = "0x22F8A68")]
	private void UpdateBlends(float val)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x22F8DEC", Offset = "0x22F8DEC", VA = "0x22F8DEC")]
	public void OnSliderChanged(float val)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x22F8DF4", Offset = "0x22F8DF4", VA = "0x22F8DF4")]
	public FXSlider()
	{
	}
}
[Token(Token = "0x20000EE")]
public class FadeOutController : MonoBehaviour
{
	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZoneManager zoneMan;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1091C", Offset = "0xD1091C")]
	public LegacyCameraControl cam;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10954", Offset = "0xD10954")]
	public int[] revealsOn;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool modelsOn;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fadeTime;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1098C", Offset = "0xD1098C")]
	public Renderer[] matMeshes;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD109C4", Offset = "0xD109C4")]
	public bool turnOffFaded;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD109FC", Offset = "0xD109FC")]
	public float opaque;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10A34", Offset = "0xD10A34")]
	public string trans;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10A6C", Offset = "0xD10A6C")]
	public bool invertedOpacity;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10AA4", Offset = "0xD10AA4")]
	public float max;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float min;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10ADC", Offset = "0xD10ADC")]
	public float currentValue;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int prevZone;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x22F91E0", Offset = "0x22F91E0", VA = "0x22F91E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x22F9268", Offset = "0x22F9268", VA = "0x22F9268")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x22F95DC", Offset = "0x22F95DC", VA = "0x22F95DC")]
	private void SetTransparency(float val)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x22F9988", Offset = "0x22F9988", VA = "0x22F9988")]
	public FadeOutController()
	{
	}
}
[Token(Token = "0x20000EF")]
public class FemaleReproductiveController : MonoBehaviour
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10B14", Offset = "0xD10B14")]
	public LegacyCameraControl cam;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform VRCamera;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10B4C", Offset = "0xD10B4C")]
	public Renderer[] matMeshes;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10B84", Offset = "0xD10B84")]
	public float max;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float min;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x22F9AF8", Offset = "0x22F9AF8", VA = "0x22F9AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x22F9B78", Offset = "0x22F9B78", VA = "0x22F9B78")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x22F9CAC", Offset = "0x22F9CAC", VA = "0x22F9CAC")]
	private void SetTransparency(float val)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x22F9D6C", Offset = "0x22F9D6C", VA = "0x22F9D6C")]
	public FemaleReproductiveController()
	{
	}
}
[Token(Token = "0x20000F0")]
public class FemaleReproductiveEndometreosisController : MonoBehaviour
{
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10BBC", Offset = "0xD10BBC")]
	public Slider slider;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10BF4", Offset = "0xD10BF4")]
	public PlayableDirector playableDirector;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10C2C", Offset = "0xD10C2C")]
	public Animator anim;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lengthInSeconds;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RuntimeAnimatorController[] animControl;

	[Token(Token = "0x40006F2")]
	private const string ANIMATOR_SPEED = "animatorSpeed";

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x22F9D74", Offset = "0x22F9D74", VA = "0x22F9D74")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x22F9E80", Offset = "0x22F9E80", VA = "0x22F9E80")]
	public void SetStage(float val)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x22F9EE8", Offset = "0x22F9EE8", VA = "0x22F9EE8")]
	public void OnSliderChanged(float val)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x22F9F30", Offset = "0x22F9F30", VA = "0x22F9F30")]
	public void OnLabelsToggle(bool value)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x22F9F8C", Offset = "0x22F9F8C", VA = "0x22F9F8C")]
	public FemaleReproductiveEndometreosisController()
	{
	}
}
[Token(Token = "0x20000F1")]
public class FingerRAController : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10C64", Offset = "0xD10C64")]
	public Slider slider;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float curveVal;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10C9C", Offset = "0xD10C9C")]
	public PlayableDirector playableDirector;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lengthInSeconds;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RuntimeAnimatorController[] animControl;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UVBlendshape[] uvBlenshapes;

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x22FA0D0", Offset = "0x22FA0D0", VA = "0x22FA0D0")]
	public void Start()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x22FA308", Offset = "0x22FA308", VA = "0x22FA308")]
	public void OnSliderChanged(float val)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x22FA5A4", Offset = "0x22FA5A4", VA = "0x22FA5A4")]
	public FingerRAController()
	{
	}
}
[Serializable]
[Token(Token = "0x20000F2")]
public class UVBlendshape
{
	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve changeCurve;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh mesh;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector2> uvSet0;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector2> uvSet1;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector2> uvTotal;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x2333128", Offset = "0x2333128", VA = "0x2333128")]
	public UVBlendshape()
	{
	}
}
[Token(Token = "0x20000F3")]
public class Floor : MonoBehaviour
{
	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool keepFloor;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x22FBC50", Offset = "0x22FBC50", VA = "0x22FBC50")]
	public Floor()
	{
	}
}
[Token(Token = "0x20000F4")]
public class BoolEventUtility : MonoBehaviour
{
	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onTrue;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onFalse;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xF82970", Offset = "0xF82970", VA = "0xF82970")]
	public void SetValue(bool value)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xF82990", Offset = "0xF82990", VA = "0xF82990")]
	public BoolEventUtility()
	{
	}
}
[Token(Token = "0x20000F5")]
public class DragThresholdOverrider : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int originalDragThreshold;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int newDragThreshold;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LegacyCameraControl cameraController;

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x22EEE5C", Offset = "0x22EEE5C", VA = "0x22EEE5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x22EEF08", Offset = "0x22EEF08", VA = "0x22EEF08", Slot = "4")]
	private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x22EEFCC", Offset = "0x22EEFCC", VA = "0x22EEFCC", Slot = "5")]
	private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x22EF090", Offset = "0x22EF090", VA = "0x22EF090")]
	public DragThresholdOverrider()
	{
	}
}
[Token(Token = "0x20000F6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A2B4", Offset = "0xD0A2B4")]
public class FadeTweener : MonoBehaviour
{
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float defaultAlpha;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float defaultDuration;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD10D04", Offset = "0xD10D04")]
	[SerializeField]
	private UnityEvent onComplete;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x22F99A0", Offset = "0x22F99A0", VA = "0x22F99A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x22F99F8", Offset = "0x22F99F8", VA = "0x22F99F8")]
	public void Fade()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x22F9AB4", Offset = "0x22F9AB4", VA = "0x22F9AB4")]
	public void Fade(float alpha)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x22F9ABC", Offset = "0x22F9ABC", VA = "0x22F9ABC")]
	public void FadeOverDuration(float duration)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x22F9A00", Offset = "0x22F9A00", VA = "0x22F9A00")]
	private void Fade(float alpha, float duration)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x22F9AD0", Offset = "0x22F9AD0", VA = "0x22F9AD0")]
	private void OnComplete()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x22F9AE4", Offset = "0x22F9AE4", VA = "0x22F9AE4")]
	public FadeTweener()
	{
	}
}
[Token(Token = "0x20000F7")]
public class TofuGuiBridgeBladder : MonoBehaviour
{
	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Urinator_OB _urineController;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Toggle _urineToggle;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Toggle _emptyToggle;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Slider revealSlider;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Toggle sliceToggle;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10D40", Offset = "0xD10D40")]
	[SerializeField]
	private string UrineToggleName;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string UrineToggleFillName;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string EmptyToggleName;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string EmptyToggleFillName;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10DBC", Offset = "0xD10DBC")]
	[SerializeField]
	private string revealSliderName;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string sliceToggleName;

	[Token(Token = "0x4000718")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x22CBD94", Offset = "0x22CBD94", VA = "0x22CBD94")]
	public void Start()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x22CBE50", Offset = "0x22CBE50", VA = "0x22CBE50")]
	public void SetupPad()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x22CC1B0", Offset = "0x22CC1B0", VA = "0x22CC1B0")]
	private void SetupUrineController()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x22CC068", Offset = "0x22CC068", VA = "0x22CC068")]
	private void SetupToggles()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x22CC94C", Offset = "0x22CC94C", VA = "0x22CC94C")]
	public TofuGuiBridgeBladder()
	{
	}
}
[Token(Token = "0x20000F8")]
public class TofuGuiBridgeBody : MonoBehaviour
{
	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObjectsToMoveManager _objectsToMoveManager;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SelectorGroup[] _selectorGroups;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Slider _organsSlider;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Slider _systemsSlider;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Toggle _organsToggle;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Toggle _systemsToggle;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10E18", Offset = "0xD10E18")]
	[SerializeField]
	private string OrgansSliderName;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private string SystemsSliderName;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string OrgansToggleName;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string SystemsToggleName;

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x22CC9F4", Offset = "0x22CC9F4", VA = "0x22CC9F4")]
	public void Start()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x22CCAE0", Offset = "0x22CCAE0", VA = "0x22CCAE0")]
	private void SetupSliders()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x22CCCE0", Offset = "0x22CCCE0", VA = "0x22CCCE0")]
	private void SetupObjectsToMoveManager()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x22CCE7C", Offset = "0x22CCE7C", VA = "0x22CCE7C")]
	private void OnOrgansSliderValueChanged(float value)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x22CCEF8", Offset = "0x22CCEF8", VA = "0x22CCEF8")]
	private void OnSystemsSliderValueChanged(float value)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x22CCF74", Offset = "0x22CCF74", VA = "0x22CCF74")]
	public TofuGuiBridgeBody()
	{
	}
}
[Token(Token = "0x20000F9")]
public class TofuGuiBridgeBreast : MonoBehaviour
{
	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x4000728")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x22CD014", Offset = "0x22CD014", VA = "0x22CD014")]
	public void Start()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x22CD0C0", Offset = "0x22CD0C0", VA = "0x22CD0C0")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x22CD2A8", Offset = "0x22CD2A8", VA = "0x22CD2A8")]
	public TofuGuiBridgeBreast()
	{
	}
}
[Token(Token = "0x20000FA")]
public class TofuGuiBridgeCADReWork : MonoBehaviour
{
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CADController _cadController;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Slider _severitySlider;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Toggle _treatmentToggle;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Image _treatmentToggleFill;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Toggle _resetToggle;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10E94", Offset = "0xD10E94")]
	[SerializeField]
	private string SeveritySliderName;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string TreatmentToggleName;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private string TreatmentToggleFillName;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string ResetButtonName;

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x22CD2B0", Offset = "0x22CD2B0", VA = "0x22CD2B0")]
	public void Start()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x22CD374", Offset = "0x22CD374", VA = "0x22CD374")]
	private void SetupSeveritySlider()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x22CD43C", Offset = "0x22CD43C", VA = "0x22CD43C")]
	private void SetupToggle()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x22CD51C", Offset = "0x22CD51C", VA = "0x22CD51C")]
	private void SetupButton()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x22CD5E4", Offset = "0x22CD5E4", VA = "0x22CD5E4")]
	private void SetupCadController()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x22CD918", Offset = "0x22CD918", VA = "0x22CD918")]
	public TofuGuiBridgeCADReWork()
	{
	}
}
[Token(Token = "0x20000FB")]
public class TofuGuiBridgeEar : MonoBehaviour
{
	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x4000737")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x22CD9A0", Offset = "0x22CD9A0", VA = "0x22CD9A0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x22CDA4C", Offset = "0x22CDA4C", VA = "0x22CDA4C")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x22CDC34", Offset = "0x22CDC34", VA = "0x22CDC34")]
	public TofuGuiBridgeEar()
	{
	}
}
[Token(Token = "0x20000FC")]
public class TofuGuiBridgeEye : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EyeController _eyeController;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Slider _lensSlider;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Slider _pupilSlider;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RectTransform _padMovementArea;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10F10", Offset = "0xD10F10")]
	[SerializeField]
	private string LensSliderName;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string PupilSliderName;

	[Token(Token = "0x4000742")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x22CDC3C", Offset = "0x22CDC3C", VA = "0x22CDC3C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x22CDD34", Offset = "0x22CDD34", VA = "0x22CDD34")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x22CDF1C", Offset = "0x22CDF1C", VA = "0x22CDF1C")]
	private void SetupEyeController()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x22CE098", Offset = "0x22CE098", VA = "0x22CE098")]
	public TofuGuiBridgeEye()
	{
	}
}
[Token(Token = "0x20000FD")]
public class TofuGuiBridgeEyeAMD : MonoBehaviour
{
	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Slider _diseaseSlider;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle _lensToggle;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10F6C", Offset = "0xD10F6C")]
	[SerializeField]
	private string DiseaseSliderName;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string LensToggleName;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x22CE100", Offset = "0x22CE100", VA = "0x22CE100")]
	public void Start()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x22CE218", Offset = "0x22CE218", VA = "0x22CE218")]
	public TofuGuiBridgeEyeAMD()
	{
	}
}
[Token(Token = "0x20000FE")]
public class TofuGuiBridgeHeartAorticStenosisValvuloplasty : MonoBehaviour
{
	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x22CE280", Offset = "0x22CE280", VA = "0x22CE280")]
	public void Start()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x22CE328", Offset = "0x22CE328", VA = "0x22CE328")]
	public TofuGuiBridgeHeartAorticStenosisValvuloplasty()
	{
	}
}
[Token(Token = "0x20000FF")]
public class TofuGuiBridgeKidney : MonoBehaviour
{
	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private KidneyFXController _kidneyController;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Toggle _urineToggle;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD10FC8", Offset = "0xD10FC8")]
	[SerializeField]
	private string UrineToggleName;

	[Token(Token = "0x4000750")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x22CE330", Offset = "0x22CE330", VA = "0x22CE330")]
	public void Start()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x22CE3EC", Offset = "0x22CE3EC", VA = "0x22CE3EC")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x22CE5D4", Offset = "0x22CE5D4", VA = "0x22CE5D4")]
	private void SetupToggle()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x22CE69C", Offset = "0x22CE69C", VA = "0x22CE69C")]
	private void SetupKidneyController()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x22CE798", Offset = "0x22CE798", VA = "0x22CE798")]
	public TofuGuiBridgeKidney()
	{
	}
}
[Token(Token = "0x2000100")]
public class TofuGuiBridgeKidneyNephron : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private KidneyNephronController _kidneyController;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Toggle _bloodToggle;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Toggle _urineToggle;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Toggle _bloodDyeToggle;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Toggle _urineDyeToggle;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11014", Offset = "0xD11014")]
	[SerializeField]
	private string BloodToggleName;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string UrineToggleName;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string BloodDyeToggleName;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string UrineDyeToggleName;

	[Token(Token = "0x400075E")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x22CE7F0", Offset = "0x22CE7F0", VA = "0x22CE7F0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x22CE8AC", Offset = "0x22CE8AC", VA = "0x22CE8AC")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x22CEA94", Offset = "0x22CEA94", VA = "0x22CEA94")]
	private void SetupToggle()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x22CEBA4", Offset = "0x22CEBA4", VA = "0x22CEBA4")]
	private void SetupKidneyController()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x22CECD0", Offset = "0x22CECD0", VA = "0x22CECD0")]
	public TofuGuiBridgeKidneyNephron()
	{
	}
}
[Token(Token = "0x2000101")]
public class TofuGuiBridgeLarynx : MonoBehaviour
{
	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ZoneManager _zoneManager;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _zoneManagerObject;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TofuPadController _tofuPadController;

	[Token(Token = "0x4000763")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x22CED58", Offset = "0x22CED58", VA = "0x22CED58")]
	public void Start()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x22CEE04", Offset = "0x22CEE04", VA = "0x22CEE04")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x22CEFEC", Offset = "0x22CEFEC", VA = "0x22CEFEC")]
	public TofuGuiBridgeLarynx()
	{
	}
}
[Token(Token = "0x2000102")]
public class TofuGuiBridgeLiver : MonoBehaviour
{
	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObjectsToMoveManager _objectsToMoveManager;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x4000769")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x22CEFF4", Offset = "0x22CEFF4", VA = "0x22CEFF4")]
	public void Start()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x22CF0A8", Offset = "0x22CF0A8", VA = "0x22CF0A8")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x22CF290", Offset = "0x22CF290", VA = "0x22CF290")]
	private void SetupObjectsToMoveManager()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x22CF374", Offset = "0x22CF374", VA = "0x22CF374")]
	public TofuGuiBridgeLiver()
	{
	}
}
[Token(Token = "0x2000103")]
public class TofuGuiBridgeLiverCirrhosis : MonoBehaviour
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObjectsToMoveManager _objectsToMoveManager;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FXSlider _fxSliderController;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Slider _severitySlider;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11090", Offset = "0xD11090")]
	[SerializeField]
	private string SeveritySliderName;

	[Token(Token = "0x4000772")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x22CF37C", Offset = "0x22CF37C", VA = "0x22CF37C")]
	public void Start()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x22CF44C", Offset = "0x22CF44C", VA = "0x22CF44C")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x22CF634", Offset = "0x22CF634", VA = "0x22CF634")]
	private void SetupObjectsToMoveManager()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x22CF728", Offset = "0x22CF728", VA = "0x22CF728")]
	private void SetupFxSliderController()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x22CF804", Offset = "0x22CF804", VA = "0x22CF804")]
	public TofuGuiBridgeLiverCirrhosis()
	{
	}
}
[Token(Token = "0x2000104")]
public class TofuGuiBridgeMaleReproductive : MonoBehaviour
{
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x4000777")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x22CF85C", Offset = "0x22CF85C", VA = "0x22CF85C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x22CF908", Offset = "0x22CF908", VA = "0x22CF908")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x22CFAF0", Offset = "0x22CFAF0", VA = "0x22CFAF0")]
	public TofuGuiBridgeMaleReproductive()
	{
	}
}
[Token(Token = "0x2000105")]
public class TofuGuiBridgeMouth : MonoBehaviour
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MouthController _mouthController;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x400077D")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Slider chewSlider;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Slider swallowSlider;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Slider openSlider;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Slider tongueSlider;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Toggle _chewToggle;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Toggle _swallowToggle;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Toggle _mouthToggle;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Toggle _tongueToggle;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD110DC", Offset = "0xD110DC")]
	[SerializeField]
	private string chewSliderName;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string swallowSliderName;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private string openSliderName;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private string tongueSliderName;

	[Token(Token = "0x400078A")]
	private const string chewToggleName = "Chew_Toggle";

	[Token(Token = "0x400078B")]
	private const string swallowToggleName = "Swallow_Toggle";

	[Token(Token = "0x400078C")]
	private const string openToggleName = "Open_Toggle";

	[Token(Token = "0x400078D")]
	private const string tongueToggleName = "Tongue_Toggle";

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x22CFAF8", Offset = "0x22CFAF8", VA = "0x22CFAF8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x22CFBBC", Offset = "0x22CFBBC", VA = "0x22CFBBC")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x22CFDA4", Offset = "0x22CFDA4", VA = "0x22CFDA4")]
	private void SetupSliders()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x22CFFD4", Offset = "0x22CFFD4", VA = "0x22CFFD4")]
	private void SetupToggles()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x22D0224", Offset = "0x22D0224", VA = "0x22D0224")]
	private void SetupMouthController()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x22D0488", Offset = "0x22D0488", VA = "0x22D0488")]
	public TofuGuiBridgeMouth()
	{
	}
}
[Token(Token = "0x2000106")]
public class TofuGuiBridgeProstate : MonoBehaviour
{
	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x4000792")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x22D0510", Offset = "0x22D0510", VA = "0x22D0510")]
	public void Start()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x22D05BC", Offset = "0x22D05BC", VA = "0x22D05BC")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x22D07A4", Offset = "0x22D07A4", VA = "0x22D07A4")]
	public TofuGuiBridgeProstate()
	{
	}
}
[Token(Token = "0x2000107")]
public class TofuGuiBridgeReproductiveSystemFemale : MonoBehaviour
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x4000797")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x22D07AC", Offset = "0x22D07AC", VA = "0x22D07AC")]
	public void Start()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x22D0858", Offset = "0x22D0858", VA = "0x22D0858")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x22D0A40", Offset = "0x22D0A40", VA = "0x22D0A40")]
	public TofuGuiBridgeReproductiveSystemFemale()
	{
	}
}
[Token(Token = "0x2000108")]
public class TofuGuiBridgeReproductiveSystemFemaleEndometriosis : MonoBehaviour
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FemaleReproductiveEndometreosisController _endometreosisController;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Slider _severitySlider;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11158", Offset = "0xD11158")]
	[SerializeField]
	private string SeveritySliderName;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x22D0A48", Offset = "0x22D0A48", VA = "0x22D0A48")]
	public void Start()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x22D0AFC", Offset = "0x22D0AFC", VA = "0x22D0AFC")]
	private void SetupSeveritySlider()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x22D0BC4", Offset = "0x22D0BC4", VA = "0x22D0BC4")]
	private void SetupEndometreosisController()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x22D0CA0", Offset = "0x22D0CA0", VA = "0x22D0CA0")]
	public TofuGuiBridgeReproductiveSystemFemaleEndometriosis()
	{
	}
}
[Token(Token = "0x2000109")]
public class TofuGuiBridgeSpinalColumn : MonoBehaviour
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpineController _spineController;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Slider _spineSlider;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Slider _bendSlider;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Slider _sideSlider;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Slider _twistSlider;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Toggle _vertebraeToggle;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Toggle _resetToggle;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LocalizeStringEvent _elevatorLabel;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD111A4", Offset = "0xD111A4")]
	[SerializeField]
	private string SpineSliderName;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private string BendSliderName;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string SideSliderName;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private string TwistSliderName;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private string VertebraeToggleName;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private string ResetToggleName;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private string ElevatorLabelName;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11250", Offset = "0xD11250")]
	[SerializeField]
	private string sacrumIconGroupName;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string lumbarIconGroupName;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private string thoracicIconGroupName;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private string cirvicalIconGroupName;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private string allIconGroupName;

	[Token(Token = "0x40007B4")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x22D0CF8", Offset = "0x22D0CF8", VA = "0x22D0CF8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x22D0DBC", Offset = "0x22D0DBC", VA = "0x22D0DBC")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x22D13A8", Offset = "0x22D13A8", VA = "0x22D13A8")]
	private void SetupSpineController()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x22D0FA4", Offset = "0x22D0FA4", VA = "0x22D0FA4")]
	private void SetupSlider()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x22D1260", Offset = "0x22D1260", VA = "0x22D1260")]
	private void SetupToggle()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x22D18A8", Offset = "0x22D18A8", VA = "0x22D18A8")]
	public TofuGuiBridgeSpinalColumn()
	{
	}
}
[Token(Token = "0x200010A")]
public class TofuGuiBridgeSpinalCord : MonoBehaviour
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TofuGuiController _tofuGuiController;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpineController _spineController;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ZoneManager _zoneManager;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _zoneManagerObject;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider _spineSlider;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LocalizeStringEvent _elevatorLabel;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Toggle _csfToggle;

	[Token(Token = "0x40007BD")]
	private const string ElevatorLabelName = "Spine_Elevator_Label";

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD112DC", Offset = "0xD112DC")]
	[SerializeField]
	private string SpineSliderName;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string CsfToggleName;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11338", Offset = "0xD11338")]
	[SerializeField]
	private string sacrumIconGroupName;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string lumbarIconGroupName;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string thoracicIconGroupName;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private string cirvicalIconGroupName;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string allIconGroupName;

	[Token(Token = "0x40007C5")]
	private const string ZoneManager = "ZoneManager";

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x22D19B0", Offset = "0x22D19B0", VA = "0x22D19B0")]
	public void Start()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x22D1A74", Offset = "0x22D1A74", VA = "0x22D1A74")]
	private void SetupPad()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x22D1DEC", Offset = "0x22D1DEC", VA = "0x22D1DEC")]
	private void SetupSpineController()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x22D1C5C", Offset = "0x22D1C5C", VA = "0x22D1C5C")]
	private void SetupSlider()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x22D1D24", Offset = "0x22D1D24", VA = "0x22D1D24")]
	private void SetupToggle()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x22D2124", Offset = "0x22D2124", VA = "0x22D2124")]
	public TofuGuiBridgeSpinalCord()
	{
	}
}
[Token(Token = "0x200010B")]
public class OnDisabledUtility : MonoBehaviour
{
	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onDisabled;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x2308CE8", Offset = "0x2308CE8", VA = "0x2308CE8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x2308CFC", Offset = "0x2308CFC", VA = "0x2308CFC")]
	public OnDisabledUtility()
	{
	}
}
[Token(Token = "0x200010C")]
public class ScaleSetter : MonoBehaviour
{
	[Token(Token = "0x6000643")]
	[Address(RVA = "0x22DCF98", Offset = "0x22DCF98", VA = "0x22DCF98")]
	public void SetLocalScale(float newLocalScale)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x22DD03C", Offset = "0x22DD03C", VA = "0x22DD03C")]
	public ScaleSetter()
	{
	}
}
[Token(Token = "0x200010D")]
public class ScaleTweener : MonoBehaviour
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float defaultScale;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float defaultDuration;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD113E4", Offset = "0xD113E4")]
	[SerializeField]
	private UnityEvent onComplete;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x22DD044", Offset = "0x22DD044", VA = "0x22DD044")]
	public void Scale()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x22DD108", Offset = "0x22DD108", VA = "0x22DD108")]
	public void Scale(float scale)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x22DD110", Offset = "0x22DD110", VA = "0x22DD110")]
	public void ScaleOverDuration(float duration)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x22DD04C", Offset = "0x22DD04C", VA = "0x22DD04C")]
	private void Scale(float scale, float duration)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x22DD124", Offset = "0x22DD124", VA = "0x22DD124")]
	private void OnComplete()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x22DD138", Offset = "0x22DD138", VA = "0x22DD138")]
	public ScaleTweener()
	{
	}
}
[Token(Token = "0x200010E")]
public class SelfDisablerOnDeactivate : MonoBehaviour
{
	[Token(Token = "0x600064B")]
	[Address(RVA = "0x22DFFF8", Offset = "0x22DFFF8", VA = "0x22DFFF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x22E0020", Offset = "0x22E0020", VA = "0x22E0020")]
	public SelfDisablerOnDeactivate()
	{
	}
}
[Token(Token = "0x200010F")]
public class SettingsLanguageControl : MonoBehaviour
{
	[Token(Token = "0x40007CA")]
	public const string defaultLocale = "en-US";

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_Dropdown languageDropdown;

	[Token(Token = "0x40007CC")]
	private const string PrefsSelectedLocaleKey = "selected-locale";

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] tempOptions;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, string> displayedLanguages;

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x22E0FFC", Offset = "0x22E0FFC", VA = "0x22E0FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x22E1000", Offset = "0x22E1000", VA = "0x22E1000")]
	private void FillLanguageDropdown()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x22E1184", Offset = "0x22E1184", VA = "0x22E1184")]
	private void OnLanguageSelected(int value)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x22E11AC", Offset = "0x22E11AC", VA = "0x22E11AC")]
	public SettingsLanguageControl()
	{
	}
}
[Serializable]
[Token(Token = "0x2000110")]
public class Song
{
	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11430", Offset = "0xD11430")]
	public AudioClip song;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float volume;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeInDuration;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeOutDuration;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool fadeIn;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool fadeOut;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeTime;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int audioIndex;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool played;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x233A39C", Offset = "0x233A39C", VA = "0x233A39C")]
	public Song()
	{
	}
}
[Token(Token = "0x2000111")]
public class TofuBackgroundAudioController : MonoBehaviour
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Song[] songs;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeLeft;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11468", Offset = "0xD11468")]
	public AudioMixer audioMixer;

	[Token(Token = "0x40007DC")]
	private const string MusicGroup = "Music";

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource[] _audio;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioListener listener;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int _songIndex;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int _nextSongIndex;

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x22C99A0", Offset = "0x22C99A0", VA = "0x22C99A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x22CA074", Offset = "0x22CA074", VA = "0x22CA074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x22CA8AC", Offset = "0x22CA8AC", VA = "0x22CA8AC")]
	public void SetMusicPaused(bool value)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x22CA950", Offset = "0x22CA950", VA = "0x22CA950")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x22C9DB0", Offset = "0x22C9DB0", VA = "0x22C9DB0")]
	private int GetSongIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x22CAA48", Offset = "0x22CAA48", VA = "0x22CAA48")]
	public TofuBackgroundAudioController()
	{
	}
}
[Token(Token = "0x2000112")]
public class TofuClickAudioInstance : MonoBehaviour
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TofuClickAudioInstance _instance;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource _currentAudioSource;

	[Token(Token = "0x40007E3")]
	private const string SfxGroup = "SFX";

	[Token(Token = "0x40007E4")]
	private const string AudioClipFileName = "AudioClips/click_2";

	[Token(Token = "0x40007E5")]
	private const float clickVolume = 0.2f;

	[Token(Token = "0x1700004B")]
	public static TofuClickAudioInstance Instance
	{
		[Token(Token = "0x6000658")]
		[Address(RVA = "0x22CAA50", Offset = "0x22CAA50", VA = "0x22CAA50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x22CAB64", Offset = "0x22CAB64", VA = "0x22CAB64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x22CAE24", Offset = "0x22CAE24", VA = "0x22CAE24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x22CAEC0", Offset = "0x22CAEC0", VA = "0x22CAEC0")]
	public void PlayClick()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x22CACB4", Offset = "0x22CACB4", VA = "0x22CACB4")]
	private void SetupAudio()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x22CAF0C", Offset = "0x22CAF0C", VA = "0x22CAF0C")]
	public TofuClickAudioInstance()
	{
	}
}
[Token(Token = "0x2000113")]
public class TofuClickListener : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action clickAction;

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x22CAF14", Offset = "0x22CAF14", VA = "0x22CAF14", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x22CAF28", Offset = "0x22CAF28", VA = "0x22CAF28")]
	public TofuClickListener()
	{
	}
}
[Token(Token = "0x2000114")]
public class TofuConfirmationSettingsController : MonoBehaviour
{
	[Token(Token = "0x40007E7")]
	public const string prefsConfirmationSettingsKey = "Settings_doNotShowConfirmations";

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle showConfirmationsSettingsToggle;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TofuConfirmationSettingsController _instance;

	[Token(Token = "0x1700004C")]
	public static TofuConfirmationSettingsController Instance
	{
		[Token(Token = "0x6000660")]
		[Address(RVA = "0x22CAF30", Offset = "0x22CAF30", VA = "0x22CAF30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x22CB000", Offset = "0x22CB000", VA = "0x22CB000")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x22CB154", Offset = "0x22CB154", VA = "0x22CB154")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x22CB1A4", Offset = "0x22CB1A4", VA = "0x22CB1A4")]
	public bool AreConfirmationsAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x22CB200", Offset = "0x22CB200", VA = "0x22CB200")]
	public void SetConfirmationsEnabled(bool value)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x22CB0B8", Offset = "0x22CB0B8", VA = "0x22CB0B8")]
	private void UpdateSettingsToggle()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x22CB26C", Offset = "0x22CB26C", VA = "0x22CB26C")]
	public TofuConfirmationSettingsController()
	{
	}
}
[Token(Token = "0x2000115")]
public class TofuCustomSeveritySlider : Slider
{
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD114A0", Offset = "0xD114A0")]
	public Sprite normalFillSprite;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Sprite disabledFillSprite;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Image alternateFillImage;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private Image _fillImage;

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x22CB274", Offset = "0x22CB274", VA = "0x22CB274", Slot = "48")]
	public override void SetValueWithoutNotify(float input)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x22CB358", Offset = "0x22CB358", VA = "0x22CB358", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x22CB46C", Offset = "0x22CB46C", VA = "0x22CB46C", Slot = "8")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x22CB2AC", Offset = "0x22CB2AC", VA = "0x22CB2AC")]
	private void UpdateAlternateFillImage(float newValue)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x22CB514", Offset = "0x22CB514", VA = "0x22CB514", Slot = "26")]
	protected override void DoStateTransition(SelectionState state, bool instant)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x22CB644", Offset = "0x22CB644", VA = "0x22CB644")]
	public TofuCustomSeveritySlider()
	{
	}
}
[Token(Token = "0x2000116")]
public class TofuDrawToolDragListener : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<PointerEventData> beginDragAction;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<PointerEventData> endDragAction;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<PointerEventData> dragAction;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x22CB64C", Offset = "0x22CB64C", VA = "0x22CB64C", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x22CB6C0", Offset = "0x22CB6C0", VA = "0x22CB6C0", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x22CB734", Offset = "0x22CB734", VA = "0x22CB734", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x22CB7A8", Offset = "0x22CB7A8", VA = "0x22CB7A8")]
	public TofuDrawToolDragListener()
	{
	}
}
[Token(Token = "0x2000117")]
public class TofuExitButtonVisibilityController : MonoBehaviour
{
	[Token(Token = "0x6000671")]
	[Address(RVA = "0x22CB7B0", Offset = "0x22CB7B0", VA = "0x22CB7B0")]
	public TofuExitButtonVisibilityController()
	{
	}
}
[Token(Token = "0x2000118")]
public class TofuFilledImageController : MonoBehaviour
{
	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD114E8", Offset = "0xD114E8")]
	public Image fillImage;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11520", Offset = "0xD11520")]
	public float timeDurationInSeconds;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool startOnEnable;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool repeatFill;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool _useUpdate;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	private bool _timerRunning;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _currentTime;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _normalizedPercent;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x22CB7B8", Offset = "0x22CB7B8", VA = "0x22CB7B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x22CB7CC", Offset = "0x22CB7CC", VA = "0x22CB7CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x22CB8B0", Offset = "0x22CB8B0", VA = "0x22CB8B0")]
	public void StartTimeFill(bool value)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x22CB8C0", Offset = "0x22CB8C0", VA = "0x22CB8C0")]
	public void SetFillValue(float value)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x22CB8E4", Offset = "0x22CB8E4", VA = "0x22CB8E4")]
	public float GetFillValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x22CB900", Offset = "0x22CB900", VA = "0x22CB900")]
	public TofuFilledImageController()
	{
	}
}
[Token(Token = "0x2000119")]
public class TofuGUIPanelController : MonoBehaviour
{
	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C620", Offset = "0xD0C620")]
	private sealed class <WaitAndRunAnimation>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TofuGUIPanelController <>4__this;

		[Token(Token = "0x4002AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool value;

		[Token(Token = "0x17000245")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021E4")]
			[Address(RVA = "0x22CBD24", Offset = "0x22CBD24", VA = "0x22CBD24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x22CBD8C", Offset = "0x22CBD8C", VA = "0x22CBD8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x22CBC20", Offset = "0x22CBC20", VA = "0x22CBC20")]
		[DebuggerHidden]
		public <WaitAndRunAnimation>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x22CBC5C", Offset = "0x22CBC5C", VA = "0x22CBC5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x22CBC60", Offset = "0x22CBC60", VA = "0x22CBC60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x22CBD2C", Offset = "0x22CBD2C", VA = "0x22CBD2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool switchOffSubPanelToggles;

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x22CB908", Offset = "0x22CB908", VA = "0x22CB908")]
	private void Start()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x22CB960", Offset = "0x22CB960", VA = "0x22CB960")]
	public void ShowHidePanel(bool value)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x22CBB9C", Offset = "0x22CBB9C", VA = "0x22CBB9C")]
	public void DisablePanel()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x22CBB18", Offset = "0x22CBB18", VA = "0x22CBB18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21558", Offset = "0xD21558")]
	private IEnumerator WaitAndRunAnimation(bool value)
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x22CBC4C", Offset = "0x22CBC4C", VA = "0x22CBC4C")]
	public TofuGUIPanelController()
	{
	}
}
[Token(Token = "0x200011A")]
public class TofuGuiController : MonoBehaviour
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Slider[] _allSliders;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Toggle[] _allToggles;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button[] _allButtons;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Image[] _allImages;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform[] _allRectTransforms;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform[] _allTransforms;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TofuPadController _tofuPadController;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x22CC418", Offset = "0x22CC418", VA = "0x22CC418")]
	public Slider FindSlider(string sliderName)
	{
		return null;
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x22CC620", Offset = "0x22CC620", VA = "0x22CC620")]
	public Toggle FindToggle(string toggleName)
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x22D21DC", Offset = "0x22D21DC", VA = "0x22D21DC")]
	public Button FindButton(string buttonName)
	{
		return null;
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x22CD710", Offset = "0x22CD710", VA = "0x22CD710")]
	public Image FindImage(string imageName)
	{
		return null;
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x22D1690", Offset = "0x22D1690", VA = "0x22D1690")]
	public GameObject FindGameObject(string objectName)
	{
		return null;
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x22CC838", Offset = "0x22CC838", VA = "0x22CC838")]
	public TofuPadController FindTofuPadController()
	{
		return null;
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x22D23E4", Offset = "0x22D23E4", VA = "0x22D23E4")]
	public TofuGuiController()
	{
	}
}
[Token(Token = "0x200011B")]
public class TofuHelpToggleColorController : MonoBehaviour
{
	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C630", Offset = "0xD0C630")]
	private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TofuHelpToggleColorController <>4__this;

		[Token(Token = "0x17000247")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021EA")]
			[Address(RVA = "0x22D2900", Offset = "0x22D2900", VA = "0x22D2900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021EC")]
			[Address(RVA = "0x22D2968", Offset = "0x22D2968", VA = "0x22D2968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x22D245C", Offset = "0x22D245C", VA = "0x22D245C")]
		[DebuggerHidden]
		public <Start>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x22D2608", Offset = "0x22D2608", VA = "0x22D2608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x22D260C", Offset = "0x22D260C", VA = "0x22D260C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x22D2908", Offset = "0x22D2908", VA = "0x22D2908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle tooltipToggle;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color activeHelpToggleBgColor;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject vrHelpButton;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Toggle helpToggle;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TofuToggleColorController helpToggleColorControl;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ColorBlock activeColorBlock;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ColorBlock defaultColorBlock;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private VR3DButton vr3DButton;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Color defaulTargetGraphicColor;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Color activeTargetGraphicColor;

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x22D23EC", Offset = "0x22D23EC", VA = "0x22D23EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD215BC", Offset = "0xD215BC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x22D2488", Offset = "0x22D2488", VA = "0x22D2488")]
	public void HelpToggleSelected(bool value)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x22D2600", Offset = "0x22D2600", VA = "0x22D2600")]
	public TofuHelpToggleColorController()
	{
	}
}
[Token(Token = "0x200011C")]
public class TofuLeftBarMenuToggleController : MonoBehaviour
{
	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11558", Offset = "0xD11558")]
	public Toggle leftBarMenuToggle;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x22D2970", Offset = "0x22D2970", VA = "0x22D2970")]
	private void Start()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x22D2A14", Offset = "0x22D2A14", VA = "0x22D2A14")]
	private void ToggleSelected(bool value)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x22D2A34", Offset = "0x22D2A34", VA = "0x22D2A34")]
	public void AnimationDone()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x22D2A54", Offset = "0x22D2A54", VA = "0x22D2A54")]
	public TofuLeftBarMenuToggleController()
	{
	}
}
[Token(Token = "0x200011D")]
public class TofuLeftBarTogglesLockControl : MonoBehaviour
{
	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IAP_LibraryLockedItem[] itemsToControl;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SystemSubscriptionController _systemSubscriptionController;

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x22D2A5C", Offset = "0x22D2A5C", VA = "0x22D2A5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x22D2C7C", Offset = "0x22D2C7C", VA = "0x22D2C7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x22D2D68", Offset = "0x22D2D68", VA = "0x22D2D68")]
	private void OnSubscriptionChanged()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x22D2B58", Offset = "0x22D2B58", VA = "0x22D2B58")]
	private void UpdateLockItems()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x22D2D6C", Offset = "0x22D2D6C", VA = "0x22D2D6C")]
	public TofuLeftBarTogglesLockControl()
	{
	}
}
[Token(Token = "0x200011E")]
public class TofuNotificationDrawToolTextBoxController : MonoBehaviour
{
	[Token(Token = "0x400080F")]
	public const string dontAskAgain = "dontAskAgain";

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x22D2D74", Offset = "0x22D2D74", VA = "0x22D2D74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x22D2DE0", Offset = "0x22D2DE0", VA = "0x22D2DE0")]
	public void OnToggleChanged(bool value)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x22D2E34", Offset = "0x22D2E34", VA = "0x22D2E34")]
	public TofuNotificationDrawToolTextBoxController()
	{
	}
}
[Token(Token = "0x200011F")]
public class TofuPadReplacementController : MonoBehaviour
{
	[Token(Token = "0x2000558")]
	private struct PadRow
	{
		[Token(Token = "0x4002AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject rowObject;

		[Token(Token = "0x4002AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TofuPadReplacementRowController rowController;

		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int rowZone;
	}

	[Token(Token = "0x2000559")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C640", Offset = "0xD0C640")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int tempIndex;

		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TofuPadReplacementController <>4__this;

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x22D3520", Offset = "0x22D3520", VA = "0x22D3520")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x22D35FC", Offset = "0x22D35FC", VA = "0x22D35FC")]
		internal void <InitializeRows>b__0(bool value)
		{
		}
	}

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD115A0", Offset = "0xD115A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD115A0", Offset = "0xD115A0")]
	public int reveals;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD115F4", Offset = "0xD115F4")]
	public int slices;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showGlassToggle;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int initialZone;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] rowLabels;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1160C", Offset = "0xD1160C")]
	public GameObject rowLayoutGroup;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle slice1Toggle;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle slice2Toggle;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle glassToggle;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11644", Offset = "0xD11644")]
	public GameObject normalRow;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject bottomRow;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1167C", Offset = "0xD1167C")]
	[ReadOnly]
	public int totalZones;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[ReadOnly]
	public int currentZone;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[ReadOnly]
	public int currentRow;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[ReadOnly]
	public int currentSlice;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD116F8", Offset = "0xD116F8")]
	public bool useGradient;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Color bottomColor;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color topColor;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color _gradientColor;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PadRow[] _padRows;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _calculatedZone;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x22D2E3C", Offset = "0x22D2E3C", VA = "0x22D2E3C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x22D2E7C", Offset = "0x22D2E7C", VA = "0x22D2E7C")]
	private void InitializeSliceToggles()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x22D3030", Offset = "0x22D3030", VA = "0x22D3030")]
	private void InitializeGlassToggle()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x22D3114", Offset = "0x22D3114", VA = "0x22D3114")]
	private void InitializeRows()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x22D3570", Offset = "0x22D3570", VA = "0x22D3570")]
	private void RowToggleSelected(bool value, int tempIndex)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x22D35C0", Offset = "0x22D35C0", VA = "0x22D35C0")]
	private void SliceToggleSelected(bool value, int tempIndex)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x22D35D0", Offset = "0x22D35D0", VA = "0x22D35D0")]
	private void GlassToggleSelected(bool value)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x22D3578", Offset = "0x22D3578", VA = "0x22D3578")]
	private void SetCurrentZone()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x22D35D4", Offset = "0x22D35D4", VA = "0x22D35D4")]
	public TofuPadReplacementController()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x22D35DC", Offset = "0x22D35DC", VA = "0x22D35DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21620", Offset = "0xD21620")]
	private void <InitializeSliceToggles>b__23_0(bool value)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x22D35E8", Offset = "0x22D35E8", VA = "0x22D35E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21630", Offset = "0xD21630")]
	private void <InitializeSliceToggles>b__23_1(bool value)
	{
	}
}
[Token(Token = "0x2000120")]
public class TofuPadReplacementRowController : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11730", Offset = "0xD11730")]
	public Toggle rowToggle;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11768", Offset = "0xD11768")]
	public TextMeshProUGUI rowLabel;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD117A0", Offset = "0xD117A0")]
	public Image rowBackground;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD117D8", Offset = "0xD117D8")]
	public Animator rowSizeAnimator;

	[Token(Token = "0x4000829")]
	private const string Over = "Over";

	[Token(Token = "0x400082A")]
	private const string Normal = "Normal";

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x22D3528", Offset = "0x22D3528", VA = "0x22D3528")]
	public void SetRowLabel(string newText)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x22D354C", Offset = "0x22D354C", VA = "0x22D354C")]
	public void SetUnselectedColor(Color newColor)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x22D3620", Offset = "0x22D3620", VA = "0x22D3620", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x22D36DC", Offset = "0x22D36DC", VA = "0x22D36DC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x22D3798", Offset = "0x22D3798", VA = "0x22D3798")]
	public TofuPadReplacementRowController()
	{
	}
}
[Token(Token = "0x2000121")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A318", Offset = "0xD0A318")]
public class TofuPlatformDependentDropDown : MonoBehaviour
{
	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform iosTemplate;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI iosItemText;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool activateInEditor;

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x22D37A0", Offset = "0x22D37A0", VA = "0x22D37A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x22D37A4", Offset = "0x22D37A4", VA = "0x22D37A4")]
	private void UpdateDropdownTemplate()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x22D38AC", Offset = "0x22D38AC", VA = "0x22D38AC")]
	public TofuPlatformDependentDropDown()
	{
	}
}
[Token(Token = "0x2000122")]
public class TofuPointingScaler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C650", Offset = "0xD0C650")]
	private sealed class <AnimateScale>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TofuPointingScaler <>4__this;

		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 targetScale;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__3;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <lerpIndex>5__4;

		[Token(Token = "0x17000249")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021F2")]
			[Address(RVA = "0x22D3F9C", Offset = "0x22D3F9C", VA = "0x22D3F9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0x22D4004", Offset = "0x22D4004", VA = "0x22D4004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x22D3B4C", Offset = "0x22D3B4C", VA = "0x22D3B4C")]
		[DebuggerHidden]
		public <AnimateScale>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x22D3DE4", Offset = "0x22D3DE4", VA = "0x22D3DE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x22D3DE8", Offset = "0x22D3DE8", VA = "0x22D3DE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x22D3FA4", Offset = "0x22D3FA4", VA = "0x22D3FA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToScale;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform scalingPivot;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 scaleFactor;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float animationTime;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 initialScale;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine scaleAnimation;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int pointersCount;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x22D38BC", Offset = "0x22D38BC", VA = "0x22D38BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x22D3964", Offset = "0x22D3964", VA = "0x22D3964", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x22D3AE4", Offset = "0x22D3AE4", VA = "0x22D3AE4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x22D3A50", Offset = "0x22D3A50", VA = "0x22D3A50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21640", Offset = "0xD21640")]
	private IEnumerator AnimateScale(Vector3 targetScale)
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x22D3B78", Offset = "0x22D3B78", VA = "0x22D3B78")]
	public void DoScale(Vector3 scale)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x22D3D7C", Offset = "0x22D3D7C", VA = "0x22D3D7C")]
	public TofuPointingScaler()
	{
	}
}
[Token(Token = "0x2000123")]
public class TofuSettingsAudioController : MonoBehaviour
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11810", Offset = "0xD11810")]
	public AudioMixer audioMixer;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11848", Offset = "0xD11848")]
	public Slider volumeVoiceSlider;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider volumeSFXSlider;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider volumeMusicSlider;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider volumeVideoSlider;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11880", Offset = "0xD11880")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD11880", Offset = "0xD11880")]
	public float defaultVolume;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Action<float> onVideoVolumeChanged;

	[Token(Token = "0x400083C")]
	private const string _volumeVoice = "volumeVoice";

	[Token(Token = "0x400083D")]
	private const string _volumeSFX = "volumeSFX";

	[Token(Token = "0x400083E")]
	private const string _volumeMusic = "volumeMusic";

	[Token(Token = "0x400083F")]
	public const string _volumeVideo = "volumeVideo";

	[Token(Token = "0x4000840")]
	private const float maxMixerVolume = 20f;

	[Token(Token = "0x4000841")]
	private const float minMixerVolume = -80f;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x23219F4", Offset = "0x23219F4", VA = "0x23219F4")]
	private void DisplayPlayerPrefs()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x2321C7C", Offset = "0x2321C7C", VA = "0x2321C7C")]
	private void ResetPlayerPrefs()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x2321D10", Offset = "0x2321D10", VA = "0x2321D10")]
	public void Awake()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x2321DC8", Offset = "0x2321DC8", VA = "0x2321DC8")]
	public void Start()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x2322250", Offset = "0x2322250", VA = "0x2322250")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x2321A6C", Offset = "0x2321A6C", VA = "0x2321A6C")]
	private void DisplayPlayerPref(string key)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x2322254", Offset = "0x2322254", VA = "0x2322254")]
	private void SetVolume(string setting, float volume, bool setPlayerPrefs = true)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x2322320", Offset = "0x2322320", VA = "0x2322320")]
	private float LogarithmicToLinear(float value)
	{
		return default(float);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x2322060", Offset = "0x2322060", VA = "0x2322060")]
	public void SetVoiceVolume(float volume, bool setPlayerPrefs = true)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x23220D0", Offset = "0x23220D0", VA = "0x23220D0")]
	public void SetSFXVolume(float volume, bool setPlayerPrefs = true)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x2322140", Offset = "0x2322140", VA = "0x2322140")]
	public void SetMusicVolume(float volume, bool setPlayerPrefs = true)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x23221B0", Offset = "0x23221B0", VA = "0x23221B0")]
	public void SetVideoVolume(float volume, bool setPlayerPrefs = true)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x2322398", Offset = "0x2322398", VA = "0x2322398")]
	public float GetVideoVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x23223E4", Offset = "0x23223E4", VA = "0x23223E4")]
	public float GetVoiceVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x2322430", Offset = "0x2322430", VA = "0x2322430")]
	public void RestoreSFXVolume()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x2322490", Offset = "0x2322490", VA = "0x2322490")]
	public void UpdateVideoVolume(float volume)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x2322514", Offset = "0x2322514", VA = "0x2322514")]
	public TofuSettingsAudioController()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x2322528", Offset = "0x2322528", VA = "0x2322528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD216A4", Offset = "0xD216A4")]
	private void <Start>b__16_0(float data)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x2322530", Offset = "0x2322530", VA = "0x2322530")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD216B4", Offset = "0xD216B4")]
	private void <Start>b__16_1(float data)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x2322538", Offset = "0x2322538", VA = "0x2322538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD216C4", Offset = "0xD216C4")]
	private void <Start>b__16_2(float data)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x2322540", Offset = "0x2322540", VA = "0x2322540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD216D4", Offset = "0xD216D4")]
	private void <Start>b__16_3(float data)
	{
	}
}
[Token(Token = "0x2000124")]
public class TofuSettingsDrawToolController : MonoBehaviour
{
	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x2322548", Offset = "0x2322548", VA = "0x2322548")]
	public void OnToggleChanged(bool value)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x2322580", Offset = "0x2322580", VA = "0x2322580")]
	public TofuSettingsDrawToolController()
	{
	}
}
[Token(Token = "0x2000125")]
public class TofuSettingsGenderController : MonoBehaviour
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD118E8", Offset = "0xD118E8")]
	public Toggle maleToggle;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle femaleToggle;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11920", Offset = "0xD11920")]
	public string maleSceneName;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string femaleSceneName;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string maleSceneNameMobileVr;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string femaleSceneNameMobileVr;

	[Token(Token = "0x4000848")]
	private const string _startScene = "startScene";

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x2322588", Offset = "0x2322588", VA = "0x2322588")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x2322708", Offset = "0x2322708", VA = "0x2322708")]
	private void MaleToggle(bool value)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x2322794", Offset = "0x2322794", VA = "0x2322794")]
	private void FemaleToggle(bool value)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x2322820", Offset = "0x2322820", VA = "0x2322820")]
	public TofuSettingsGenderController()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x23228A8", Offset = "0x23228A8", VA = "0x23228A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD216E4", Offset = "0xD216E4")]
	private void <Start>b__7_0(bool data)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x23228B0", Offset = "0x23228B0", VA = "0x23228B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD216F4", Offset = "0xD216F4")]
	private void <Start>b__7_1(bool data)
	{
	}
}
[Token(Token = "0x2000126")]
public class TofuSettingsInfoPanelController : MonoBehaviour
{
	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11958", Offset = "0xD11958")]
	public Toggle privacyToggle;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle tosToggle;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle aboutToggle;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle contactToggle;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11990", Offset = "0xD11990")]
	public Animator infoPanelAnimator;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD119C8", Offset = "0xD119C8")]
	public GameObject privacyPanel;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject tosPanel;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject aboutPanel;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject contactPanel;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11A00", Offset = "0xD11A00")]
	public GameObject infoClosedBackground;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject infoOpenBackground;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Toggle[] _toggles;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject[] _panels;

	[Token(Token = "0x4000856")]
	private const int Private = 0;

	[Token(Token = "0x4000857")]
	private const int Tos = 1;

	[Token(Token = "0x4000858")]
	private const int About = 2;

	[Token(Token = "0x4000859")]
	private const int Contact = 3;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _currentlyAnimating;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Open;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject _panelToDeactivate;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _panelsAreOpen;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x23228B8", Offset = "0x23228B8", VA = "0x23228B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x2322C40", Offset = "0x2322C40", VA = "0x2322C40")]
	private void PrivacyToggleSelected(bool value)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x2322F1C", Offset = "0x2322F1C", VA = "0x2322F1C")]
	private void TosToggleSelected(bool value)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x2322F28", Offset = "0x2322F28", VA = "0x2322F28")]
	private void AboutToggleSelected(bool value)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x2322F34", Offset = "0x2322F34", VA = "0x2322F34")]
	private void ContactToggleSelected(bool value)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x2322C4C", Offset = "0x2322C4C", VA = "0x2322C4C")]
	private void ProcessToggleSelection(bool value, Toggle currentToggle, GameObject currentPanel)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x2323030", Offset = "0x2323030", VA = "0x2323030")]
	private bool AllTogglesAreOff()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x2322F40", Offset = "0x2322F40", VA = "0x2322F40")]
	private void DisplayThisPanel(GameObject thisPanel)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x232309C", Offset = "0x232309C", VA = "0x232309C")]
	public void AnimationDone()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x2323130", Offset = "0x2323130", VA = "0x2323130")]
	public TofuSettingsInfoPanelController()
	{
	}
}
[Token(Token = "0x2000127")]
public class TofuSharecareLogoController : MonoBehaviour
{
	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11A38", Offset = "0xD11A38")]
	public GameObject normalLogoObject;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject proLogoObject;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SystemSubscriptionController _systemSubscriptionController;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x232320C", Offset = "0x232320C", VA = "0x232320C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x23233D8", Offset = "0x23233D8", VA = "0x23233D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x2323344", Offset = "0x2323344", VA = "0x2323344")]
	private void ChangeLogo()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x23234C4", Offset = "0x23234C4", VA = "0x23234C4")]
	public TofuSharecareLogoController()
	{
	}
}
[Token(Token = "0x2000128")]
public class TofuTMProDropdownValueFixer : MonoBehaviour
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI dropdownLabel;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string lastLabelValue;

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x23234CC", Offset = "0x23234CC", VA = "0x23234CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x2323578", Offset = "0x2323578", VA = "0x2323578")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x232360C", Offset = "0x232360C", VA = "0x232360C")]
	public TofuTMProDropdownValueFixer()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A37C", Offset = "0xD0A37C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A37C", Offset = "0xD0A37C")]
public class TofuTMProLinkClickHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerUpHandler, IScrollHandler, IPointerClickHandler, IPointerDownHandler, IBeginDragHandler, IEndDragHandler, IDragHandler, IInitializePotentialDragHandler
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshProUGUI uguiField;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ScrollRect parentScrollRect;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IgnoreCameraControls ignoreCameraControls;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x2323614", Offset = "0x2323614", VA = "0x2323614")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x232369C", Offset = "0x232369C", VA = "0x232369C", Slot = "8")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x2323894", Offset = "0x2323894", VA = "0x2323894", Slot = "12")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x2323940", Offset = "0x2323940", VA = "0x2323940", Slot = "7")]
	public void OnScroll(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x2323A2C", Offset = "0x2323A2C", VA = "0x2323A2C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x2323AD0", Offset = "0x2323AD0", VA = "0x2323AD0", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x2323B74", Offset = "0x2323B74", VA = "0x2323B74", Slot = "6")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x2323C18", Offset = "0x2323C18", VA = "0x2323C18", Slot = "9")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x2323CBC", Offset = "0x2323CBC", VA = "0x2323CBC", Slot = "10")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x2323DA8", Offset = "0x2323DA8", VA = "0x2323DA8", Slot = "11")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x2323E94", Offset = "0x2323E94", VA = "0x2323E94", Slot = "13")]
	public void OnInitializePotentialDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x2323F40", Offset = "0x2323F40", VA = "0x2323F40")]
	public TofuTMProLinkClickHandler()
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A408", Offset = "0xD0A408")]
public class TofuTMProLinkRemoverForVR : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C660", Offset = "0xD0C660")]
	private sealed class <>c
	{
		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static MatchEvaluator <>9__6_0;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static MatchEvaluator <>9__6_1;

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x232434C", Offset = "0x232434C", VA = "0x232434C")]
		public <>c()
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x2324354", Offset = "0x2324354", VA = "0x2324354")]
		internal string <RemoveLinkTags>b__6_0(Match m)
		{
			return null;
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x2324394", Offset = "0x2324394", VA = "0x2324394")]
		internal string <RemoveLinkTags>b__6_1(Match m)
		{
			return null;
		}
	}

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool allowInEditor;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI textComponent;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LocalizeStringEvent localizeEvent;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x2323F48", Offset = "0x2323F48", VA = "0x2323F48")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x2323F4C", Offset = "0x2323F4C", VA = "0x2323F4C")]
	private void Setup()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x23242DC", Offset = "0x23242DC", VA = "0x23242DC")]
	private void OnStringChanged(string text)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x23240A8", Offset = "0x23240A8", VA = "0x23240A8")]
	private void RemoveLinkTags(string text = "")
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x23242E0", Offset = "0x23242E0", VA = "0x23242E0")]
	public TofuTMProLinkRemoverForVR()
	{
	}
}
[Token(Token = "0x200012B")]
public class TofuTOSTextManager : MonoBehaviour
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LocalizeStringEvent textLocalizer;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD11A90", Offset = "0xD11A90")]
	[SerializeField]
	private LocalizedString defaultTOSText;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalizedString storefrontTOSText;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalizedString storefrontProTOSText;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalizedString storefrontProVrTOSText;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LocalizedString VrTOSText;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LocalizedString QuestTOSText;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x23243D4", Offset = "0x23243D4", VA = "0x23243D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x23243D8", Offset = "0x23243D8", VA = "0x23243D8")]
	private void UpdateTosLocalization()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x2324444", Offset = "0x2324444", VA = "0x2324444")]
	public TofuTOSTextManager()
	{
	}
}
[Token(Token = "0x200012C")]
public class TofuToggleColorController : MonoBehaviour
{
	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11B18", Offset = "0xD11B18")]
	public Toggle currentToggle;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11B50", Offset = "0xD11B50")]
	public TextMeshProUGUI toggleLabelText;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI toggleLabelText2;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11B88", Offset = "0xD11B88")]
	public Image iconImage;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11BC0", Offset = "0xD11BC0")]
	public Color offColor;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color onColor;

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x2324520", Offset = "0x2324520", VA = "0x2324520")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x23245D8", Offset = "0x23245D8", VA = "0x23245D8")]
	public void ToggleSelected(bool value)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x23245F4", Offset = "0x23245F4", VA = "0x23245F4")]
	private void ChangeColor(Color newColor)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x2324778", Offset = "0x2324778", VA = "0x2324778")]
	public void ChangeToggle(bool val)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x2324780", Offset = "0x2324780", VA = "0x2324780")]
	public void ReverseState()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x23247FC", Offset = "0x23247FC", VA = "0x23247FC")]
	public TofuToggleColorController()
	{
	}
}
[Token(Token = "0x200012D")]
public class TofuTutorialSettingsToggle : MonoBehaviour
{
	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle tutorialToggle;

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x2326464", Offset = "0x2326464", VA = "0x2326464")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x232653C", Offset = "0x232653C", VA = "0x232653C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x2326564", Offset = "0x2326564", VA = "0x2326564")]
	private void TutorialToggleSelected(bool value)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x23265BC", Offset = "0x23265BC", VA = "0x23265BC")]
	public TofuTutorialSettingsToggle()
	{
	}
}
[Token(Token = "0x200012E")]
public class TofuUICaptureCanvas : MonoBehaviour
{
	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TofuUICaptureCanvas Instance;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image movieCaptureSceneTransition;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera renderCamera;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UnityEngine.Object> activeRequests;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x23265C4", Offset = "0x23265C4", VA = "0x23265C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x23266B8", Offset = "0x23266B8", VA = "0x23266B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x2326754", Offset = "0x2326754", VA = "0x2326754")]
	public void RequestActive(bool value, UnityEngine.Object sender)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x2326884", Offset = "0x2326884", VA = "0x2326884")]
	public TofuUICaptureCanvas()
	{
	}
}
[Token(Token = "0x200012F")]
public class ToggleAnimationListener : MonoBehaviour
{
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Toggle toggle;

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x2326B34", Offset = "0x2326B34", VA = "0x2326B34")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x2326C50", Offset = "0x2326C50", VA = "0x2326C50")]
	private void ToggleValueChanged()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x2326D38", Offset = "0x2326D38", VA = "0x2326D38")]
	public ToggleAnimationListener()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x2326D40", Offset = "0x2326D40", VA = "0x2326D40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21704", Offset = "0xD21704")]
	private void <Start>b__2_0(bool <p0>)
	{
	}
}
[Token(Token = "0x2000130")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A46C", Offset = "0xD0A46C")]
public class ToggleAnimatorState : MonoBehaviour
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string animatorBoolParameter;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator toggleAnimator;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle toggle;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool active;

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x2326E50", Offset = "0x2326E50", VA = "0x2326E50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x2326F24", Offset = "0x2326F24", VA = "0x2326F24")]
	public void OnToggleValueChanged(bool value)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x2326FDC", Offset = "0x2326FDC", VA = "0x2326FDC")]
	public void OnObjectHidden()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x2327010", Offset = "0x2327010", VA = "0x2327010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x23270CC", Offset = "0x23270CC", VA = "0x23270CC")]
	public ToggleAnimatorState()
	{
	}
}
[Token(Token = "0x2000131")]
public class TofuTinyControlTouchInputHelper : MonoBehaviour
{
	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool activeInEditor;

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x232444C", Offset = "0x232444C", VA = "0x232444C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x2324450", Offset = "0x2324450", VA = "0x2324450")]
	private void CheckPlatformToDestroy()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x2324518", Offset = "0x2324518", VA = "0x2324518")]
	public TofuTinyControlTouchInputHelper()
	{
	}
}
[Token(Token = "0x2000132")]
public class TofuiOSLabelFrameScaler : MonoBehaviour
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool alwaysAllowInEditor;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11C08", Offset = "0xD11C08")]
	public float labelFrameSize;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float labelTextSize;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float voiceoverButtonSize;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11C40", Offset = "0xD11C40")]
	public RectTransform labelFrame;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI labelTextOn;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI labelTextOff;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform voiceoverButton;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x23268F4", Offset = "0x23268F4", VA = "0x23268F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x23268F8", Offset = "0x23268F8", VA = "0x23268F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x2326A4C", Offset = "0x2326A4C", VA = "0x2326A4C")]
	private bool ScaleUp()
	{
		return default(bool);
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x2326B28", Offset = "0x2326B28", VA = "0x2326B28")]
	public TofuiOSLabelFrameScaler()
	{
	}
}
[Token(Token = "0x2000133")]
public class GenericNotificationDialog : MonoBehaviour
{
	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GenericNotificationDialog Instance;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button closeButton;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button firstButtonHeaderRect;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button secondButtonHeaderRect;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button firstButtonNoHeaderRect;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button secondButtonNoHeaderRect;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Toggle dontShowAgainToggle;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject dontShowAgainToggleRow;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject buttonsWithHeader;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject buttonsNoHeader;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject dialogPanel;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI firstButtonTitleFieldHeaderRect;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshProUGUI secondButtonTitleFieldHeaderRect;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI firstButtonTitleFieldNoHeaderRect;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshProUGUI secondButtonTitleFieldNoHeaderRect;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI dialogHeaderField;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI dialogTextField;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI buttonsHeaderField;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshProUGUI dontShowAgainMsgField;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform originalParent;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 originalPosition;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Action firstButtonStoredAction;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Action secondButtonStoredAction;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Action closeButtonStoredAction;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Action<bool> firstButtonStoredActionBool;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Action<bool> secondButtonStoredActionBool;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Action<bool> closeButtonStoredActionBool;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool dontShowAgainCheck;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int initialSiblingIndex;

	[Token(Token = "0x40008A7")]
	private const string defaultDontShowMsgKey = "Shared.DontShowAgain";

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x22FCBE8", Offset = "0x22FCBE8", VA = "0x22FCBE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x22FCD34", Offset = "0x22FCD34", VA = "0x22FCD34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x22FCDD0", Offset = "0x22FCDD0", VA = "0x22FCDD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x22FCE00", Offset = "0x22FCE00", VA = "0x22FCE00")]
	public bool IsDialogBusy()
	{
		return default(bool);
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x22FCE1C", Offset = "0x22FCE1C", VA = "0x22FCE1C")]
	public void ShowDialog(string dialogHeader, string dialogText, string buttonsHeader, string firstButtonTitle, Action firstButtonAction)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x22FCF14", Offset = "0x22FCF14", VA = "0x22FCF14")]
	public void ShowDialog(string dialogHeader, string dialogText, string buttonsHeader, string firstButtonTitle, Action<bool> firstButtonAction, string dontShowMsg = "")
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x22FCEBC", Offset = "0x22FCEBC", VA = "0x22FCEBC")]
	public void ShowDialog(string dialogHeader, string dialogText, string buttonsHeader, string firstButtonTitle, string secondButtonTitle, Action firstButtonAction, Action secondButtonAction)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x22FCFBC", Offset = "0x22FCFBC", VA = "0x22FCFBC")]
	public void ShowDialog(string dialogHeader, string dialogText, string buttonsHeader, string firstButtonTitle, string secondButtonTitle, Action<bool> firstButtonAction, Action<bool> secondButtonAction, string dontShowMsg = "")
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x22FD340", Offset = "0x22FD340", VA = "0x22FD340")]
	public void CloseDialog()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x22FD348", Offset = "0x22FD348", VA = "0x22FD348")]
	public void ShowCloseButton(Action closeButtonAction)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x22FD380", Offset = "0x22FD380", VA = "0x22FD380")]
	public void ShowCloseButton(Action<bool> closeButtonAction)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x22FD3B8", Offset = "0x22FD3B8", VA = "0x22FD3B8")]
	public void OnFirstButtonClick()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x22FD444", Offset = "0x22FD444", VA = "0x22FD444")]
	public void OnSecondButtonClick()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x22FD4D0", Offset = "0x22FD4D0", VA = "0x22FD4D0")]
	public void OnCloseButtonClick()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x22FD55C", Offset = "0x22FD55C", VA = "0x22FD55C")]
	public void UndockFromArch()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x22FD590", Offset = "0x22FD590", VA = "0x22FD590")]
	public void DockToArch()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x22FD11C", Offset = "0x22FD11C", VA = "0x22FD11C")]
	private void UpdateLayoutsAndTexts(string dialogHeader, string dialogText, string buttonsHeader, string firstButtonTitle, string secondButtonTitle)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x22FD2A4", Offset = "0x22FD2A4", VA = "0x22FD2A4")]
	private void SetPanelActive(bool value)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x22FD5F0", Offset = "0x22FD5F0", VA = "0x22FD5F0")]
	public GenericNotificationDialog()
	{
	}
}
[Token(Token = "0x2000134")]
public class HMDDetection : MonoBehaviour
{
	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string hardware;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public bool userPresent;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject steam;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject oculus;

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x22FFA50", Offset = "0x22FFA50", VA = "0x22FFA50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x22FFC50", Offset = "0x22FFC50", VA = "0x22FFC50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x22FFCD0", Offset = "0x22FFCD0", VA = "0x22FFCD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x22FFDC0", Offset = "0x22FFDC0", VA = "0x22FFDC0")]
	protected bool IsUserPresentVive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x22FFD54", Offset = "0x22FFD54", VA = "0x22FFD54")]
	protected bool IsUserPresentOculus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x22FFDC8", Offset = "0x22FFDC8", VA = "0x22FFDC8")]
	public HMDDetection()
	{
	}
}
[Token(Token = "0x2000135")]
public class HMDDetectionTimeline : HMDDetection
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayableDirector director;

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x22FFE28", Offset = "0x22FFE28", VA = "0x22FFE28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x2300060", Offset = "0x2300060", VA = "0x2300060")]
	private void Update()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x23000E0", Offset = "0x23000E0", VA = "0x23000E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x2300210", Offset = "0x2300210", VA = "0x2300210")]
	public HMDDetectionTimeline()
	{
	}
}
[Token(Token = "0x2000136")]
public enum SharecareYouIAP
{
	[Token(Token = "0x40008AE")]
	DefaultDemoMode,
	[Token(Token = "0x40008AF")]
	StandardLicense,
	[Token(Token = "0x40008B0")]
	ProfessionalLicense,
	[Token(Token = "0x40008B1")]
	ProfessionalUpgrade,
	[Token(Token = "0x40008B2")]
	StandardSubscription,
	[Token(Token = "0x40008B3")]
	ProfessionalSubscription
}
[Token(Token = "0x2000137")]
public interface IIAPStore
{
	[Token(Token = "0x600072B")]
	SharecareYouIAP GetCurrentProduct();

	[Token(Token = "0x600072C")]
	string GetPriceForProduct(SharecareYouIAP iap);

	[Token(Token = "0x600072D")]
	string GetTitleForProduct(SharecareYouIAP iap);

	[Token(Token = "0x600072E")]
	string GetDescriptionForProduct(SharecareYouIAP iap);

	[Token(Token = "0x600072F")]
	bool StartProductPurchase(SharecareYouIAP iap);

	[Token(Token = "0x6000730")]
	bool SynchronizePurchases();

	[Token(Token = "0x6000731")]
	bool IsStoreInitialized();
}
[Token(Token = "0x2000138")]
[DisallowMultipleComponent]
public class AppleAndMicrosoftStores : MonoBehaviour, IIAPStore
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnStoreInitialized;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<string> OnStoreInitializeFailed;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnStoreRestored;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action OnStoreRestoreFailed;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<SharecareYouIAP, bool> OnProductPurchased;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<SharecareYouIAP, PurchaseFailureReason, bool> OnProductPurchaseFailed;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1183440", Offset = "0x1183440", VA = "0x1183440", Slot = "5")]
	public string GetPriceForProduct(SharecareYouIAP iap)
	{
		return null;
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1183448", Offset = "0x1183448", VA = "0x1183448", Slot = "6")]
	public string GetTitleForProduct(SharecareYouIAP iap)
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1183450", Offset = "0x1183450", VA = "0x1183450", Slot = "7")]
	public string GetDescriptionForProduct(SharecareYouIAP iap)
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x1183458", Offset = "0x1183458", VA = "0x1183458", Slot = "4")]
	public SharecareYouIAP GetCurrentProduct()
	{
		return default(SharecareYouIAP);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1183460", Offset = "0x1183460", VA = "0x1183460", Slot = "8")]
	public bool StartProductPurchase(SharecareYouIAP iap)
	{
		return default(bool);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1183468", Offset = "0x1183468", VA = "0x1183468", Slot = "9")]
	public bool SynchronizePurchases()
	{
		return default(bool);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x1183470", Offset = "0x1183470", VA = "0x1183470", Slot = "10")]
	public bool IsStoreInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1183478", Offset = "0x1183478", VA = "0x1183478")]
	public bool AreThereMultipleActiveSubscriptions()
	{
		return default(bool);
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1183480", Offset = "0x1183480", VA = "0x1183480")]
	public bool IsSubscriptionWasCancelled(SharecareYouIAP iap)
	{
		return default(bool);
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1183488", Offset = "0x1183488", VA = "0x1183488")]
	public DateTime GetSubscriptionNextEventDate(SharecareYouIAP iap)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x11834E8", Offset = "0x11834E8", VA = "0x11834E8")]
	public AppleAndMicrosoftStores()
	{
	}
}
[Token(Token = "0x2000139")]
public class IAP_LibraryLockedItem : MonoBehaviour
{
	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isProItem;

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x23021BC", Offset = "0x23021BC", VA = "0x23021BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x23021C0", Offset = "0x23021C0", VA = "0x23021C0")]
	public void SetLocked(bool value)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x23021F4", Offset = "0x23021F4", VA = "0x23021F4")]
	public void OnItemClicked()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x2302374", Offset = "0x2302374", VA = "0x2302374")]
	public IAP_LibraryLockedItem()
	{
	}
}
[Token(Token = "0x200013A")]
public class IAP_MultipleSubscriptionsWarning : MonoBehaviour
{
	[Token(Token = "0x40008BB")]
	private const string prefDSWarningKey = "DonShowDoubleSubscriptionWarning";

	[Token(Token = "0x40008BC")]
	private const string localizedHeaderKey = "Subscriptions.NotificationHeader";

	[Token(Token = "0x40008BD")]
	private const string localizedTextKey = "Subscriptions.NotificationText";

	[Token(Token = "0x40008BE")]
	private const string localizedButtonKey = "Shared.Ok";

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x230237C", Offset = "0x230237C", VA = "0x230237C")]
	public static void ShowSubscriptionsWarning()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x2302540", Offset = "0x2302540", VA = "0x2302540")]
	private static void OnNotificationClose(bool dontShowAgain)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x23025A4", Offset = "0x23025A4", VA = "0x23025A4")]
	public IAP_MultipleSubscriptionsWarning()
	{
	}
}
[Token(Token = "0x200013B")]
public class IAP_UIController : MonoBehaviour
{
	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button upgradeButton;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button syncPurchasesButton;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button purchaseStandardButton;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject purchaseDialog;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject purchaseResultNotification;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject syncResultNotification;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject legacyLicenseInfo;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI purchaseResultHeaderTextField;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private TextMeshProUGUI purchaseResultTextField;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI purchaseDescriptionTextField;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI syncResultTextFiled;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshProUGUI currentVersionDetailsField;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject standardPriceBadge;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshProUGUI standardPriceField;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI standardButtonTextField;

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x23025AC", Offset = "0x23025AC", VA = "0x23025AC")]
	public IAP_UIController()
	{
	}
}
[Token(Token = "0x200013C")]
public class IAP_UIStaticStrings : MonoBehaviour
{
	[Token(Token = "0x40008CE")]
	public const string steamDesktopAppUrl = "https://store.steampowered.com/app/753200/Sharecare_YOU/";

	[Token(Token = "0x40008CF")]
	private const string emailWithLinkTags = "<style=\"url\"><link=\"mailto:vrinfo@sharecare.com?subject=Sharecare%20YOU%20Pro%20purchase\">vrinfo@sharecare.com</link></style>";

	[Token(Token = "0x1700004D")]
	public static string proUpgradeNotificationHeader
	{
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x23022A8", Offset = "0x23022A8", VA = "0x23022A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004E")]
	public static string proUpgradeNotificationText
	{
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x2302304", Offset = "0x2302304", VA = "0x2302304")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004F")]
	public static string vrUpgradeNotificationHeader
	{
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x23025B4", Offset = "0x23025B4", VA = "0x23025B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000050")]
	public static string vrUpgradeNotificationText
	{
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x2302610", Offset = "0x2302610", VA = "0x2302610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x230266C", Offset = "0x230266C", VA = "0x230266C")]
	public IAP_UIStaticStrings()
	{
	}
}
[Serializable]
[Token(Token = "0x200013D")]
public class PreferencePair
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x230F6F8", Offset = "0x230F6F8", VA = "0x230F6F8")]
	public PreferencePair(string _key, string _value)
	{
	}
}
[Serializable]
[Token(Token = "0x200013E")]
public class PreferencesList
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<PreferencePair> preferencesList;

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x230F730", Offset = "0x230F730", VA = "0x230F730")]
	public PreferencesList()
	{
	}
}
[Token(Token = "0x200013F")]
public static class ProtectedStorage
{
	[Token(Token = "0x200055C")]
	public struct EncryptedPair
	{
		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string EncryptedText;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Vector;

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x2310664", Offset = "0x2310664", VA = "0x2310664")]
		public EncryptedPair(string text, string vector)
		{
		}
	}

	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C670", Offset = "0xD0C670")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x2310120", Offset = "0x2310120", VA = "0x2310120")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x231069C", Offset = "0x231069C", VA = "0x231069C")]
		internal bool <GetStrings>b__0(PreferencePair it)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C680", Offset = "0xD0C680")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x2310204", Offset = "0x2310204", VA = "0x2310204")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x23106C0", Offset = "0x23106C0", VA = "0x23106C0")]
		internal bool <GetString>b__0(PreferencePair it)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C690", Offset = "0xD0C690")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PreferencePair pair;

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x23103F4", Offset = "0x23103F4", VA = "0x23103F4")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x2310670", Offset = "0x2310670", VA = "0x2310670")]
		internal bool <SetStrings>b__0(PreferencePair it)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40008D3")]
	private const string keyPass = "xjfM35dHdsEuc5hrdQA";

	[Token(Token = "0x40008D4")]
	private const string keySolt = "8bnE8mEQ5wrKNGSvwFT";

	[Token(Token = "0x40008D5")]
	private const string keyChainText = "sc.you.analytics.data";

	[Token(Token = "0x40008D6")]
	private const string keyChainVect = "sc.you.analytics.sess";

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x230F824", Offset = "0x230F824", VA = "0x230F824")]
	private static PreferencesList GetEmptyPlist()
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x230F8B4", Offset = "0x230F8B4", VA = "0x230F8B4")]
	private static PreferencesList GetPlist()
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x230FC48", Offset = "0x230FC48", VA = "0x230FC48")]
	private static void SetPlist(PreferencesList plist)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x230FF88", Offset = "0x230FF88", VA = "0x230FF88")]
	public static string[] GetStrings(string[] keys)
	{
		return null;
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x2310128", Offset = "0x2310128", VA = "0x2310128")]
	public static string GetString(string key, string fallback)
	{
		return null;
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x231020C", Offset = "0x231020C", VA = "0x231020C")]
	public static int GetInt(string key, int fallback)
	{
		return default(int);
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x23102A8", Offset = "0x23102A8", VA = "0x23102A8")]
	public static void SetStrings(PreferencePair[] pairs)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x23103FC", Offset = "0x23103FC", VA = "0x23103FC")]
	public static void SetString(string key, string value)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x23104CC", Offset = "0x23104CC", VA = "0x23104CC")]
	public static void SetInt(string key, int value)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x230F958", Offset = "0x230F958", VA = "0x230F958")]
	private static bool isStorageInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x230FCE4", Offset = "0x230FCE4", VA = "0x230FCE4")]
	public static EncryptedPair Encrypt(string plainText, string password)
	{
		return default(EncryptedPair);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x231066C", Offset = "0x231066C", VA = "0x231066C")]
	public static string Decrypt(EncryptedPair encryptedPair, string password)
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x230F9CC", Offset = "0x230F9CC", VA = "0x230F9CC")]
	public static string Decrypt(string encryptedText, string vector, string password)
	{
		return null;
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x231054C", Offset = "0x231054C", VA = "0x231054C")]
	private static byte[] ConvertToKeyBytes(SymmetricAlgorithm algo, string password)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000140")]
public enum StorefrontLicenseType
{
	[Token(Token = "0x40008D8")]
	None,
	[Token(Token = "0x40008D9")]
	Standard,
	[Token(Token = "0x40008DA")]
	Professional
}
[Serializable]
[Token(Token = "0x2000141")]
public class StorefrontSubscription
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StorefrontLicenseType licenseType;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string issuedTo;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string activationCode;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isCancelled;

	[NonSerialized]
	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DateTime eventDate;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long binaryEventDate;

	[Token(Token = "0x17000051")]
	public bool isValid
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x22C6514", Offset = "0x22C6514", VA = "0x22C6514")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x22C67C4", Offset = "0x22C67C4", VA = "0x22C67C4")]
	public StorefrontSubscription(StorefrontLicenseType licenseType, string issuedTo, string activationCode, bool isCancelled, DateTime eventDate)
	{
	}
}
[Token(Token = "0x2000142")]
public interface IStorefront
{
	[Token(Token = "0x600075C")]
	void NavigateToStorePage(Action<string> OnCodeAvailable);

	[Token(Token = "0x600075D")]
	void ActivateSubscriptionWithCode(string code, Action<StorefrontSubscription, string> OnComplete, Action<string> OnError);

	[Token(Token = "0x600075E")]
	void DetachSubscriptionFromSeat(Action<string> OnComplete, Action<string> OnError);

	[Token(Token = "0x600075F")]
	void GetCurrentSubscriptionDetails(Action<StorefrontSubscription, string> OnComplete, Action<string> OnError);

	[Token(Token = "0x6000760")]
	void CheckForNewAppVersion(Action<string, string, string, string> OnComplete, Action<string> OnError);
}
[Token(Token = "0x2000143")]
public class StorefrontController : MonoBehaviour, IStorefront
{
	[Serializable]
	[Token(Token = "0x2000560")]
	private class BaseRequest
	{
		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string seat_hash;

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x22C6D9C", Offset = "0x22C6D9C", VA = "0x22C6D9C")]
		public BaseRequest(string seat_hash)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000561")]
	private class ActivateCodeRequest : BaseRequest
	{
		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string activation_code;

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x22C6168", Offset = "0x22C6168", VA = "0x22C6168")]
		public ActivateCodeRequest(string seat_hash, string activation_code)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000562")]
	private class FindCodeRequest : BaseRequest
	{
		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string random_uuid;

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x22C6900", Offset = "0x22C6900", VA = "0x22C6900")]
		public FindCodeRequest(string seat_hash, string random_uuid)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000563")]
	private class DetachRequest : ActivateCodeRequest
	{
		[Token(Token = "0x6002203")]
		[Address(RVA = "0x22C62C0", Offset = "0x22C62C0", VA = "0x22C62C0")]
		public DetachRequest(string seat_hash, string activation_code)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000564")]
	private class NewVersionRequest : BaseRequest
	{
		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string current_version;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string platform;

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x22C6768", Offset = "0x22C6768", VA = "0x22C6768")]
		public NewVersionRequest(string seat_hash, string current_version, string platform)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000565")]
	private class BaseResponse
	{
		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool success;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string error_message;

		[Token(Token = "0x4002B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long response_code;

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x22C6DD0", Offset = "0x22C6DD0", VA = "0x22C6DD0")]
		public BaseResponse()
		{
		}
	}

	[Token(Token = "0x2000566")]
	private class ActivateCodeResponse : BaseResponse
	{
		[Token(Token = "0x4002B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StorefrontLicenseType license_type;

		[Token(Token = "0x4002B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long valid_till;

		[Token(Token = "0x4002B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool activated;

		[Token(Token = "0x4002B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool cancelled;

		[Token(Token = "0x4002B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string message;

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x22C6DC8", Offset = "0x22C6DC8", VA = "0x22C6DC8")]
		public ActivateCodeResponse()
		{
		}
	}

	[Token(Token = "0x2000567")]
	private class FindCodeResponse : BaseResponse
	{
		[Token(Token = "0x4002B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool found;

		[Token(Token = "0x4002B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string code;

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x22C6DE0", Offset = "0x22C6DE0", VA = "0x22C6DE0")]
		public FindCodeResponse()
		{
		}
	}

	[Token(Token = "0x2000568")]
	private class DetachResponse : BaseResponse
	{
		[Token(Token = "0x4002B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool detached;

		[Token(Token = "0x4002B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string message;

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x22C6DD8", Offset = "0x22C6DD8", VA = "0x22C6DD8")]
		public DetachResponse()
		{
		}
	}

	[Token(Token = "0x2000569")]
	private class NewVersionResponse : BaseResponse
	{
		[Token(Token = "0x4002B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool found;

		[Token(Token = "0x4002B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string message;

		[Token(Token = "0x4002B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string new_version;

		[Token(Token = "0x4002B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string install_url;

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x22C6DE8", Offset = "0x22C6DE8", VA = "0x22C6DE8")]
		public NewVersionResponse()
		{
		}
	}

	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C6A0", Offset = "0xD0C6A0")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4002B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<string> OnError;

		[Token(Token = "0x4002B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StorefrontController <>4__this;

		[Token(Token = "0x4002B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string code;

		[Token(Token = "0x4002B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<StorefrontSubscription, string> OnComplete;

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x22C5D8C", Offset = "0x22C5D8C", VA = "0x22C5D8C")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x22C6A5C", Offset = "0x22C6A5C", VA = "0x22C6A5C")]
		internal void <ActivateSubscriptionWithCode>b__0(ActivateCodeResponse response)
		{
		}
	}

	[Token(Token = "0x200056B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C6B0", Offset = "0xD0C6B0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4002B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<string> OnError;

		[Token(Token = "0x4002B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StorefrontController <>4__this;

		[Token(Token = "0x4002B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<string> OnComplete;

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x22C62B8", Offset = "0x22C62B8", VA = "0x22C62B8")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x22C6BEC", Offset = "0x22C6BEC", VA = "0x22C6BEC")]
		internal void <DetachSubscriptionFromSeat>b__0(DetachResponse response)
		{
		}
	}

	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C6C0", Offset = "0xD0C6C0")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4002B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<string> OnError;

		[Token(Token = "0x4002B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string currentVersion;

		[Token(Token = "0x4002B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<string, string, string, string> OnComplete;

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x22C66F4", Offset = "0x22C66F4", VA = "0x22C66F4")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x22C6CBC", Offset = "0x22C6CBC", VA = "0x22C6CBC")]
		internal void <CheckForNewAppVersion>b__0(NewVersionResponse response)
		{
		}
	}

	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C6D0", Offset = "0xD0C6D0")]
	private sealed class <SendRequest>d__18<T> : IEnumerator<object>, IEnumerator, IDisposable where T : BaseResponse, new()
	{
		[Token(Token = "0x4002B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4002B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4002B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string endpoint;

		[Token(Token = "0x4002B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public object data;

		[Token(Token = "0x4002B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public StorefrontController <>4__this;

		[Token(Token = "0x4002B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> handler;

		[Token(Token = "0x4002B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x4002B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string <url>5__3;

		[Token(Token = "0x4002B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityWebRequest <>7__wrap3;

		[Token(Token = "0x1700024B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002214")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002216")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002210")]
		[DebuggerHidden]
		public <SendRequest>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002211")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002212")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002213")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002215")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useSandboxEnvironment;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StorefrontSubscription subscription;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SystemSubscriptionController systemSubscriptionController;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string randomCheckoutUUID;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action<string> onCodeAvailable;

	[Token(Token = "0x40008E6")]
	private const string wipeLocalLicenseCode = "HI-WIPE-CODE-HERE-NOW!";

	[Token(Token = "0x40008E7")]
	private const string prefsKeySubscription = "sc.you.storefront.subscription";

	[Token(Token = "0x40008E8")]
	private const string checkoutURL = "https://www.sharecareyou.com/subscription-plans/";

	[Token(Token = "0x40008E9")]
	private const string checkoutTestURL = "https://test.sharecareyou.com/sharecare-you-subscription-plan/";

	[Token(Token = "0x40008EA")]
	private const string purchasingURL = "https://checkout.sharecareyou.com/";

	[Token(Token = "0x40008EB")]
	private const string apiToken = "pYiSHEeCtHUJXLgf9Hbg0cIa2J325J4KHpYQ2ihWIjh8wQJMrCnH1nmkdC7ToMjM";

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x22C5AFC", Offset = "0x22C5AFC", VA = "0x22C5AFC", Slot = "4")]
	public void NavigateToStorePage(Action<string> OnCodeAvailable)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x22C5BE4", Offset = "0x22C5BE4", VA = "0x22C5BE4", Slot = "5")]
	public void ActivateSubscriptionWithCode(string code, Action<StorefrontSubscription, string> OnComplete, Action<string> OnError)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x22C61A0", Offset = "0x22C61A0", VA = "0x22C61A0", Slot = "6")]
	public void DetachSubscriptionFromSeat(Action<string> OnComplete, Action<string> OnError)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x22C62F8", Offset = "0x22C62F8", VA = "0x22C62F8", Slot = "7")]
	public void GetCurrentSubscriptionDetails(Action<StorefrontSubscription, string> OnComplete, Action<string> OnError)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x22C65C0", Offset = "0x22C65C0", VA = "0x22C65C0", Slot = "8")]
	public void CheckForNewAppVersion(Action<string, string, string, string> OnComplete, Action<string> OnError)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x22C5F00", Offset = "0x22C5F00", VA = "0x22C5F00")]
	private void ResolveSubsciptionMode()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x22C63D8", Offset = "0x22C63D8", VA = "0x22C63D8")]
	private void LoadSubscriptionFormStorage()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x22C5D94", Offset = "0x22C5D94", VA = "0x22C5D94")]
	private StorefrontSubscription GetDefaultSubscription()
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x22C5E48", Offset = "0x22C5E48", VA = "0x22C5E48")]
	private void SaveSubscriptionToStorage()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x22C6820", Offset = "0x22C6820", VA = "0x22C6820")]
	private void TryToGetCodeForLastPurchase()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x22C5B18", Offset = "0x22C5B18", VA = "0x22C5B18")]
	private string GenCheckoutURL()
	{
		return null;
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x22C66FC", Offset = "0x22C66FC", VA = "0x22C66FC")]
	public static string GetSeatPlatformCode()
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x22C6104", Offset = "0x22C6104", VA = "0x22C6104")]
	public static string GetSeatHash()
	{
		return null;
	}

	[Token(Token = "0x600076E")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21714", Offset = "0xD21714")]
	private IEnumerator SendRequest<T>(string endpoint, object data, Action<T> handler) where T : BaseResponse, new()
	{
		return null;
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x22C6938", Offset = "0x22C6938", VA = "0x22C6938")]
	public StorefrontController()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x22C6940", Offset = "0x22C6940", VA = "0x22C6940")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21778", Offset = "0xD21778")]
	private void <TryToGetCodeForLastPurchase>b__14_0(FindCodeResponse response)
	{
	}
}
[Token(Token = "0x2000144")]
public class Storefront_NewVersionNotification : MonoBehaviour
{
	[Token(Token = "0x200056E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C6E0", Offset = "0xD0C6E0")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4002B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string newVersion;

		[Token(Token = "0x4002B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string downloadURL;

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x22C707C", Offset = "0x22C707C", VA = "0x22C707C")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x22C708C", Offset = "0x22C708C", VA = "0x22C708C")]
		internal void <OnNewVersionAvailable>b__0(bool value)
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x22C70FC", Offset = "0x22C70FC", VA = "0x22C70FC")]
		internal void <OnNewVersionAvailable>b__1(bool value)
		{
		}
	}

	[Token(Token = "0x40008EC")]
	private const string prefLastAwareVersionKey = "LastAppAwareVersion";

	[Token(Token = "0x40008ED")]
	private const string notificationHeaderKey = "NewVersionNotification.Header";

	[Token(Token = "0x40008EE")]
	private const string btnsHeaderKey = "NewVersionNotification.Text";

	[Token(Token = "0x40008EF")]
	private const string downloadButtonTitleKey = "Shared.Yes";

	[Token(Token = "0x40008F0")]
	private const string closeButtonTitleKey = "Shared.No";

	[Token(Token = "0x40008F1")]
	private const string dontShowAgainMessageKey = "NewVersionNotification.DontShowAgainText";

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x22C6DF0", Offset = "0x22C6DF0", VA = "0x22C6DF0")]
	public static void OnNewVersionAvailable(string currentVersion, string newVersion, string versionDetails, string downloadURL)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x22C7084", Offset = "0x22C7084", VA = "0x22C7084")]
	public Storefront_NewVersionNotification()
	{
	}
}
[Token(Token = "0x2000145")]
public class LabelCreator : MonoBehaviour
{
	[Token(Token = "0x6000773")]
	[Address(RVA = "0xFE4A28", Offset = "0xFE4A28", VA = "0xFE4A28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xFE4A2C", Offset = "0xFE4A2C", VA = "0xFE4A2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xFE4A30", Offset = "0xFE4A30", VA = "0xFE4A30")]
	public LabelCreator()
	{
	}
}
[Token(Token = "0x2000146")]
public class LabelDesriptor : MonoBehaviour
{
	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11EA8", Offset = "0xD11EA8")]
	public Transform[] points;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] subPoints;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11EE0", Offset = "0xD11EE0")]
	public string labelName;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 offset;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float labelRotation;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Color lineColor;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float lineWidth;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Material lineMaterial;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public GameObject lineDot;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public GameObject labelPrefab;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11F68", Offset = "0xD11F68")]
	public int[] zones;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11FA0", Offset = "0xD11FA0")]
	public bool debug;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD11FD8", Offset = "0xD11FD8")]
	public bool animate;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string sub;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Camera cam;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string dot;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string labelPrefabName;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Canvas canvas;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject newLabelPrefab;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer mainLine;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LineRenderer[] subLines;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xFE4DC8", Offset = "0xFE4DC8", VA = "0xFE4DC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xFE4EF4", Offset = "0xFE4EF4", VA = "0xFE4EF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xFE51A0", Offset = "0xFE51A0", VA = "0xFE51A0")]
	private void GetLines()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xFE531C", Offset = "0xFE531C", VA = "0xFE531C")]
	private void Update()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xFE5BFC", Offset = "0xFE5BFC", VA = "0xFE5BFC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xFE5060", Offset = "0xFE5060", VA = "0xFE5060")]
	private void OnZoneChanged(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xFE5D14", Offset = "0xFE5D14", VA = "0xFE5D14")]
	public void CreateLabel(bool worldspace = true)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xFE63AC", Offset = "0xFE63AC", VA = "0xFE63AC")]
	private void GeneratePrefab(Vector3 pos)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xFE58B8", Offset = "0xFE58B8", VA = "0xFE58B8")]
	private void MoveDot(Vector3 pos, int i = 0)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xFE59A8", Offset = "0xFE59A8", VA = "0xFE59A8")]
	private void GenerateDot(Vector3 pos, int i = 0)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xFE66B8", Offset = "0xFE66B8", VA = "0xFE66B8")]
	public void RescaleForVR(float scale, Vector3 canvasScaling)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xFE6BF8", Offset = "0xFE6BF8", VA = "0xFE6BF8")]
	public LabelDesriptor()
	{
	}
}
[Token(Token = "0x2000147")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A4E0", Offset = "0xD0A4E0")]
[ExecuteInEditMode]
public class LineGrower : MonoBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool grow;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float secondsBetweenPoints;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] points;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer line;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentIndex;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float amount;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xFF691C", Offset = "0xFF691C", VA = "0xFF691C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xFF6974", Offset = "0xFF6974", VA = "0xFF6974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xFF6C38", Offset = "0xFF6C38", VA = "0xFF6C38")]
	public LineGrower()
	{
	}
}
[Token(Token = "0x2000148")]
public class AnimRandomManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200056F")]
	public class intParameter
	{
		[Token(Token = "0x4002B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string parameterName;

		[Token(Token = "0x4002B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int minValue;

		[Token(Token = "0x4002B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxValue;

		[Token(Token = "0x4002B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int randomValue;

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x1183338", Offset = "0x1183338", VA = "0x1183338")]
		public intParameter()
		{
		}
	}

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RuntimeAnimatorController targetAnimator;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float animatorsUpdateInterval;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<intParameter> parametersToRandomize;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator[] animators;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeCounter;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x1182FBC", Offset = "0x1182FBC", VA = "0x1182FBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x11832D8", Offset = "0x11832D8", VA = "0x11832D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1183018", Offset = "0x1183018", VA = "0x1183018")]
	private void SetRandomAnimatorsParameters()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1183328", Offset = "0x1183328", VA = "0x1183328")]
	public AnimRandomManager()
	{
	}
}
[Token(Token = "0x2000149")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A554", Offset = "0xD0A554")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A554", Offset = "0xD0A554")]
public class BoundsBoxCollider : MonoBehaviour
{
	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool swapXAndYAndZ;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider myBoxCollider;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer myRenderer;

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xF82998", Offset = "0xF82998", VA = "0xF82998")]
	public void Awake()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xF82A0C", Offset = "0xF82A0C", VA = "0xF82A0C")]
	private void SetCollider()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xF82B34", Offset = "0xF82B34", VA = "0xF82B34")]
	public BoundsBoxCollider()
	{
	}
}
[Token(Token = "0x200014A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A5E0", Offset = "0xD0A5E0")]
public class BasicSelector : MonoBehaviour
{
	[Token(Token = "0x2000570")]
	public delegate void ReportSelectedBodyPartAndTapCount(SelectorGroup.bodyParts report, int tapCount);

	[Token(Token = "0x2000571")]
	public delegate void ReportSelectedCollider(Collider collider);

	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C6F0", Offset = "0xD0C6F0")]
	private sealed class <WaitForNextTap>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BasicSelector <>4__this;

		[Token(Token = "0x4002B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int initialTapNum;

		[Token(Token = "0x1700024D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002226")]
			[Address(RVA = "0xF7C7F0", Offset = "0xF7C7F0", VA = "0xF7C7F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002228")]
			[Address(RVA = "0xF7C858", Offset = "0xF7C858", VA = "0xF7C858", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002223")]
		[Address(RVA = "0xF7C010", Offset = "0xF7C010", VA = "0xF7C010")]
		[DebuggerHidden]
		public <WaitForNextTap>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0xF7C6EC", Offset = "0xF7C6EC", VA = "0xF7C6EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0xF7C6F0", Offset = "0xF7C6F0", VA = "0xF7C6F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0xF7C7F8", Offset = "0xF7C7F8", VA = "0xF7C7F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool selectionAllowed;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SelectorGroup.bodyParts reportWhenSelected;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float tapDeltaTime;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int maxTapCount;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RaycastHit lastHit;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LegacyCameraControl cameraControl;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Collider thisCollider;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float LastEventTime;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected int tapNum;

	[Token(Token = "0x1400000F")]
	public event ReportSelectedBodyPartAndTapCount reportWithBodyPartAndTapCount
	{
		[Token(Token = "0x600078C")]
		[Address(RVA = "0xF7B614", Offset = "0xF7B614", VA = "0xF7B614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21788", Offset = "0xD21788")]
		add
		{
		}
		[Token(Token = "0x600078D")]
		[Address(RVA = "0xF7B6B8", Offset = "0xF7B6B8", VA = "0xF7B6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21798", Offset = "0xD21798")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event ReportSelectedCollider reportWithCollider
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0xF7B75C", Offset = "0xF7B75C", VA = "0xF7B75C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD217A8", Offset = "0xD217A8")]
		add
		{
		}
		[Token(Token = "0x600078F")]
		[Address(RVA = "0xF7B800", Offset = "0xF7B800", VA = "0xF7B800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD217B8", Offset = "0xD217B8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xF7B8A4", Offset = "0xF7B8A4", VA = "0xF7B8A4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xF7B930", Offset = "0xF7B930", VA = "0xF7B930")]
	private void Update()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xF7B960", Offset = "0xF7B960", VA = "0xF7B960", Slot = "4")]
	public virtual void OnMouseDown()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xF7BAA4", Offset = "0xF7BAA4", VA = "0xF7BAA4", Slot = "5")]
	public virtual void OnMouseUp()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xF7BC78", Offset = "0xF7BC78", VA = "0xF7BC78")]
	public void OnMouseExit()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xF7BC80", Offset = "0xF7BC80", VA = "0xF7BC80", Slot = "6")]
	public virtual void OnRecordingMouseUp()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xF7BC8C", Offset = "0xF7BC8C", VA = "0xF7BC8C", Slot = "7")]
	public virtual void OnRecordingMouseDown()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xF7B964", Offset = "0xF7B964", VA = "0xF7B964")]
	private void OnDown()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xF7BBF8", Offset = "0xF7BBF8", VA = "0xF7BBF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD217C8", Offset = "0xD217C8")]
	private IEnumerator WaitForNextTap(int initialTapNum)
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xF7BBB0", Offset = "0xF7BBB0", VA = "0xF7BBB0")]
	public void ReportSelection(int tapCount)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xF7C660", Offset = "0xF7C660", VA = "0xF7C660")]
	public void ColliderActive(bool value)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xF7BC90", Offset = "0xF7BC90", VA = "0xF7BC90")]
	public bool IsOverGUI(Vector2 inPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xF7C680", Offset = "0xF7C680", VA = "0xF7C680")]
	public BasicSelector()
	{
	}
}
[Token(Token = "0x200014B")]
public class MaterialSwap : MonoBehaviour
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12030", Offset = "0xD12030")]
	public Material swapMaterial;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disableShadowsWhenSwapped;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12068", Offset = "0xD12068")]
	public SelectorGroup.bodyParts[] bodyParts;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD120A0", Offset = "0xD120A0")]
	public bool swapOnStart;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool staySwapped;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD120D8", Offset = "0xD120D8")]
	public Renderer[] invisibleParts;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool swapped;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SelectorGroup selector;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] childRenderers;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, Material[]> rendererMaterialsDictionary;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x13DD874", Offset = "0x13DD874", VA = "0x13DD874")]
	private void Start()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x13DDA88", Offset = "0x13DDA88", VA = "0x13DDA88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x13DDAEC", Offset = "0x13DDAEC", VA = "0x13DDAEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x13DD9CC", Offset = "0x13DD9CC", VA = "0x13DD9CC")]
	public void ProcessSelection(SelectorGroup.bodyParts bodyPart)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x13DDD48", Offset = "0x13DDD48", VA = "0x13DDD48")]
	private void RenderersEnabled(Renderer[] renderers, bool value)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x13DDB2C", Offset = "0x13DDB2C", VA = "0x13DDB2C")]
	private void SwapMaterials(bool value)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x13DDDC4", Offset = "0x13DDDC4", VA = "0x13DDDC4")]
	public MaterialSwap()
	{
	}
}
[Token(Token = "0x200014C")]
public class SelectorGroup : MonoBehaviour
{
	[Token(Token = "0x2000573")]
	public enum bodyParts
	{
		[Token(Token = "0x4002B2D")]
		Head,
		[Token(Token = "0x4002B2E")]
		RightArm,
		[Token(Token = "0x4002B2F")]
		LeftArm,
		[Token(Token = "0x4002B30")]
		Chest,
		[Token(Token = "0x4002B31")]
		Torso,
		[Token(Token = "0x4002B32")]
		RightLeg,
		[Token(Token = "0x4002B33")]
		LeftLeg,
		[Token(Token = "0x4002B34")]
		ClothingTop,
		[Token(Token = "0x4002B35")]
		ClothingBottom,
		[Token(Token = "0x4002B36")]
		Heart,
		[Token(Token = "0x4002B37")]
		Kidneys,
		[Token(Token = "0x4002B38")]
		LargeIntestine,
		[Token(Token = "0x4002B39")]
		Stomach,
		[Token(Token = "0x4002B3A")]
		SmallIntestines,
		[Token(Token = "0x4002B3B")]
		Liver,
		[Token(Token = "0x4002B3C")]
		GallBladder,
		[Token(Token = "0x4002B3D")]
		Brain,
		[Token(Token = "0x4002B3E")]
		Eyes,
		[Token(Token = "0x4002B3F")]
		Reproductive,
		[Token(Token = "0x4002B40")]
		Breasts,
		[Token(Token = "0x4002B41")]
		Thyroid,
		[Token(Token = "0x4002B42")]
		Pancrease,
		[Token(Token = "0x4002B43")]
		Diaphragm,
		[Token(Token = "0x4002B44")]
		Lungs,
		[Token(Token = "0x4002B45")]
		Bladder,
		[Token(Token = "0x4002B46")]
		Bileduct,
		[Token(Token = "0x4002B47")]
		Mesentary,
		[Token(Token = "0x4002B48")]
		BreastLeft,
		[Token(Token = "0x4002B49")]
		BreastRight,
		[Token(Token = "0x4002B4A")]
		KidneyLeft,
		[Token(Token = "0x4002B4B")]
		KidneyRight
	}

	[Token(Token = "0x2000574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C700", Offset = "0xD0C700")]
	private sealed class <DelayedRenderersActive>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SelectorGroup <>4__this;

		[Token(Token = "0x4002B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool value;

		[Token(Token = "0x1700024F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600222C")]
			[Address(RVA = "0x22DFF88", Offset = "0x22DFF88", VA = "0x22DFF88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000250")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600222E")]
			[Address(RVA = "0x22DFFF0", Offset = "0x22DFFF0", VA = "0x22DFFF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x22DFE90", Offset = "0x22DFE90", VA = "0x22DFE90")]
		[DebuggerHidden]
		public <DelayedRenderersActive>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x22DFEE0", Offset = "0x22DFEE0", VA = "0x22DFEE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x22DFEE4", Offset = "0x22DFEE4", VA = "0x22DFEE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x22DFF90", Offset = "0x22DFF90", VA = "0x22DFF90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bodyParts selectedMessage;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScrollRect myScrollRect;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider xSlider;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider ySlider;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float activeRangeStartX;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float activeRangeEndX;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float activeRangeStartY;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float activeRangeEndY;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MaterialSwap materialSwap;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool hideRenderers;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool hideIsSkinDependent;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MaterialSwap skinMaterialSwap;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 dragPosition;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool collidersActive;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool renderersActive;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12120", Offset = "0xD12120")]
	[SerializeField]
	private Renderer[] disableOnCollapsed;

	[Token(Token = "0x400093B")]
	private const float padCollapsedRange = 0.001f;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int tapCountToSwap;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int tapCountToSceneLoad;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int disableCollapsedCount;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool collapsedRenderersAreActive;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BasicSelector[] basicSelectors;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Renderer[] currentRenderers;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ObjectToMove.padAxis explodePadAxis;

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x22DF27C", Offset = "0x22DF27C", VA = "0x22DF27C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x22DF348", Offset = "0x22DF348", VA = "0x22DF348")]
	public void Start()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x22DF4EC", Offset = "0x22DF4EC", VA = "0x22DF4EC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x22DF798", Offset = "0x22DF798", VA = "0x22DF798")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x22DFA2C", Offset = "0x22DFA2C", VA = "0x22DFA2C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x22DFCD0", Offset = "0x22DFCD0", VA = "0x22DFCD0")]
	public void ScrollRectValueChanged(Vector2 value)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x22DFD5C", Offset = "0x22DFD5C", VA = "0x22DFD5C")]
	public void YSliderValueChanged(float value)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x22DFD98", Offset = "0x22DFD98", VA = "0x22DFD98")]
	public void XSliderValueChanged(float value)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x22DFDD0", Offset = "0x22DFDD0", VA = "0x22DFDD0")]
	public void Selected(bodyParts report, int tapCount)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x22DF3B4", Offset = "0x22DF3B4", VA = "0x22DF3B4")]
	private void CollidersActive(bool value)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x22DF450", Offset = "0x22DF450", VA = "0x22DF450")]
	private void RenderersActive(bool value)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x22DFC4C", Offset = "0x22DFC4C", VA = "0x22DFC4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2182C", Offset = "0xD2182C")]
	private IEnumerator DelayedRenderersActive(bool value)
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x22DFEBC", Offset = "0x22DFEBC", VA = "0x22DFEBC")]
	public SelectorGroup()
	{
	}
}
[Token(Token = "0x200014D")]
public class VisibilityTogle : MonoBehaviour
{
	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SelectorGroup[] dependentGroups;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialSwap myMaterialSwap;

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x101FC64", Offset = "0x101FC64", VA = "0x101FC64")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x101FCBC", Offset = "0x101FCBC", VA = "0x101FCBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x101FD60", Offset = "0x101FD60", VA = "0x101FD60")]
	public VisibilityTogle()
	{
	}
}
[Serializable]
[Token(Token = "0x200014E")]
public class MatParamEntry
{
	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool enabled;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string matName;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string paramName;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool relative;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve curve;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool bSecondCurve;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool relative2;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve curve2;

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x13DC0BC", Offset = "0x13DC0BC", VA = "0x13DC0BC")]
	public MatParamEntry()
	{
	}
}
[Serializable]
[Token(Token = "0x200014F")]
public class MaterialPropertyControllerEntry
{
	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer renderer;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float amount;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amount2;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MatParamEntry> matParams;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x13DD164", Offset = "0x13DD164", VA = "0x13DD164")]
	public MaterialPropertyControllerEntry()
	{
	}
}
[Token(Token = "0x2000150")]
[ExecuteInEditMode]
public class MaterialParametersController : MonoBehaviour
{
	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useMaterialsInPlayer;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool applyAdditivelyToParent;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool useImmediateUpdateMode;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amount;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float amount2;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MaterialPropertyControllerEntry> targetObjects;

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x13DC6F0", Offset = "0x13DC6F0", VA = "0x13DC6F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x13DC8A8", Offset = "0x13DC8A8", VA = "0x13DC8A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x13DC8C4", Offset = "0x13DC8C4", VA = "0x13DC8C4")]
	public void updateMaterials(bool triggerParentUpdate = false)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x13DCEC4", Offset = "0x13DCEC4", VA = "0x13DCEC4")]
	public void setAdvance1(float inValue)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x13DCEDC", Offset = "0x13DCEDC", VA = "0x13DCEDC")]
	public void setAdvance2(float inValue)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x13DCEF4", Offset = "0x13DCEF4", VA = "0x13DCEF4")]
	public void setAdvances(Vector2 inValue)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x13DCF0C", Offset = "0x13DCF0C", VA = "0x13DCF0C")]
	public void saveSettings(string inName)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x13DCF9C", Offset = "0x13DCF9C", VA = "0x13DCF9C")]
	public void loadSettings(string inName)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x13DD038", Offset = "0x13DD038", VA = "0x13DD038")]
	public void clearSettings(string inName)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x13DD0B4", Offset = "0x13DD0B4", VA = "0x13DD0B4")]
	public MaterialParametersController()
	{
	}
}
[Token(Token = "0x2000151")]
public class AnimTime : StateMachineBehaviour
{
	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string floatTimeName;

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1183340", Offset = "0x1183340", VA = "0x1183340", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x11833A4", Offset = "0x11833A4", VA = "0x11833A4")]
	public AnimTime()
	{
	}
}
[Token(Token = "0x2000152")]
public class FillControl : StateMachineBehaviour
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fillTimeOffset;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fillPercentage;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool turnFillOffOnExit;

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x22F9F94", Offset = "0x22F9F94", VA = "0x22F9F94", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x22FA018", Offset = "0x22FA018", VA = "0x22FA018", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x22FA0B8", Offset = "0x22FA0B8", VA = "0x22FA0B8")]
	public FillControl()
	{
	}
}
[Token(Token = "0x2000153")]
public class MainMenuAnimatorBehavior : StateMachineBehaviour
{
	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x13DB474", Offset = "0x13DB474", VA = "0x13DB474", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x13DB524", Offset = "0x13DB524", VA = "0x13DB524", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x13DB528", Offset = "0x13DB528", VA = "0x13DB528", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x13DB52C", Offset = "0x13DB52C", VA = "0x13DB52C", Slot = "7")]
	public override void OnStateMove(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x13DB530", Offset = "0x13DB530", VA = "0x13DB530", Slot = "8")]
	public override void OnStateIK(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x13DB534", Offset = "0x13DB534", VA = "0x13DB534")]
	public MainMenuAnimatorBehavior()
	{
	}
}
[Token(Token = "0x2000154")]
public class ObjectToMove : MonoBehaviour
{
	[Token(Token = "0x2000575")]
	public enum padAxis
	{
		[Token(Token = "0x4002B51")]
		X,
		[Token(Token = "0x4002B52")]
		Y
	}

	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C710", Offset = "0xD0C710")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4002B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator anim;

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xFC33E8", Offset = "0xFC33E8", VA = "0xFC33E8")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xFC33F0", Offset = "0xFC33F0", VA = "0xFC33F0")]
		internal bool <DisableAnimWhenIdle>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C720", Offset = "0xD0C720")]
	private sealed class <DisableAnimWhenIdle>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator anim;

		[Token(Token = "0x4002B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass18_0 <>8__1;

		[Token(Token = "0x17000251")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002234")]
			[Address(RVA = "0xFC35B4", Offset = "0xFC35B4", VA = "0xFC35B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002236")]
			[Address(RVA = "0xFC361C", Offset = "0xFC361C", VA = "0xFC361C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xFC2FA4", Offset = "0xFC2FA4", VA = "0xFC2FA4")]
		[DebuggerHidden]
		public <DisableAnimWhenIdle>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xFC3490", Offset = "0xFC3490", VA = "0xFC3490", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xFC3494", Offset = "0xFC3494", VA = "0xFC3494", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xFC35BC", Offset = "0xFC35BC", VA = "0xFC35BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public padAxis padMoveAxis;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useRotation;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool useLocalSpace;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startPosition;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 endPosition;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion startRotation;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion endRotation;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator[] animators;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ObjectToMoveEndTarget[] endTargets;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ObjectsToMoveManager moveManager;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ObjectToMoveEndTarget currentEndTarget;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ObjectToMoveEndTarget firstStandardTarget;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool foundTarget;

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xFC28E0", Offset = "0xFC28E0", VA = "0xFC28E0")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xFC2AA8", Offset = "0xFC2AA8", VA = "0xFC2AA8")]
	public void MoveObject(float value)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xFC2C80", Offset = "0xFC2C80", VA = "0xFC2C80")]
	public void animatorsActive(bool value)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xFC2D14", Offset = "0xFC2D14", VA = "0xFC2D14")]
	public void AnimatorsGoToIdle()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xFC2F34", Offset = "0xFC2F34", VA = "0xFC2F34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21890", Offset = "0xD21890")]
	private IEnumerator DisableAnimWhenIdle(Animator anim)
	{
		return null;
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xFC2FD0", Offset = "0xFC2FD0", VA = "0xFC2FD0")]
	public void AnimatorsGoToIdleLoop()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xFC30D0", Offset = "0xFC30D0", VA = "0xFC30D0")]
	public void AnimatorsExitIdle()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xFC2E6C", Offset = "0xFC2E6C", VA = "0xFC2E6C")]
	private bool AnimatorParameterExist(Animator animator, string name, AnimatorControllerParameterType type)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xFC31D8", Offset = "0xFC31D8", VA = "0xFC31D8")]
	public void ChangePattern()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xFC296C", Offset = "0xFC296C", VA = "0xFC296C")]
	private void FindTarget()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xFC33D8", Offset = "0xFC33D8", VA = "0xFC33D8")]
	public ObjectToMove()
	{
	}
}
[Token(Token = "0x2000155")]
public class ObjectToMoveEndTarget : MonoBehaviour
{
	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObjectsToMoveManager.patterns pattern;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color sphereColor;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float sphereRadius;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector3 startPosition;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public Quaternion startRotation;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 parentStartPosition;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool setStartCalled;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xFC3624", Offset = "0xFC3624", VA = "0xFC3624")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xFC3684", Offset = "0xFC3684", VA = "0xFC3684")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xFC335C", Offset = "0xFC335C", VA = "0xFC335C")]
	public void SetStart()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xFC36E4", Offset = "0xFC36E4", VA = "0xFC36E4")]
	public ObjectToMoveEndTarget()
	{
	}
}
[Token(Token = "0x2000156")]
public class ObjectsToMoveManager : MonoBehaviour
{
	[Token(Token = "0x2000578")]
	public enum patterns
	{
		[Token(Token = "0x4002B59")]
		Standard,
		[Token(Token = "0x4002B5A")]
		LineLeftToRight,
		[Token(Token = "0x4002B5B")]
		LineFrontToBack
	}

	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C730", Offset = "0xD0C730")]
	private sealed class <WaitAndSetAnimatorsIdleState>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectsToMoveManager <>4__this;

		[Token(Token = "0x4002B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool value;

		[Token(Token = "0x4002B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool loop;

		[Token(Token = "0x17000253")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600223A")]
			[Address(RVA = "0x2306750", Offset = "0x2306750", VA = "0x2306750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600223C")]
			[Address(RVA = "0x23067B8", Offset = "0x23067B8", VA = "0x23067B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x2306674", Offset = "0x2306674", VA = "0x2306674")]
		[DebuggerHidden]
		public <WaitAndSetAnimatorsIdleState>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0x23066A0", Offset = "0x23066A0", VA = "0x23066A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x23066A4", Offset = "0x23066A4", VA = "0x23066A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x2306758", Offset = "0x2306758", VA = "0x2306758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public patterns selectedPattern;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScrollRect thePad;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider xSlider;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider ySlider;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool SlidersAsPad;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[ReadOnly]
	public bool isClosed;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool useSnapping;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle systemsToggle;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle organsToggle;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float explodeDuration;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int systemsState;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float systemChangeTime;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int organsState;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float organChangeTime;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float implosionTime;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float explosionTime;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool imploding;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool exploding;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 dragPosition;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ObjectToMove[] objectsToMove;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private patterns oldPattern;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private LegacyCameraControl cameraController;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CameraTarget cameraTarget;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool playedOrganExplodeSequence;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool playedSystemExplodeSequence;

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xFC3724", Offset = "0xFC3724", VA = "0xFC3724")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xFC3784", Offset = "0xFC3784", VA = "0xFC3784")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xFC3AC4", Offset = "0xFC3AC4", VA = "0xFC3AC4")]
	public void Update()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xFC3EDC", Offset = "0xFC3EDC", VA = "0xFC3EDC")]
	public void RestorePosition(float normalizedX, float normalizedY)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xFC3FCC", Offset = "0xFC3FCC", VA = "0xFC3FCC")]
	public void MoveObjects(Vector2 normalizedPosition)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xFC4108", Offset = "0xFC4108", VA = "0xFC4108")]
	private void animatorsActive(bool value)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xFC4180", Offset = "0xFC4180", VA = "0xFC4180")]
	public void AnimatorsIdleState(bool value, bool loop)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xFC4078", Offset = "0xFC4078", VA = "0xFC4078")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD218F4", Offset = "0xD218F4")]
	private IEnumerator WaitAndSetAnimatorsIdleState(bool value, bool loop)
	{
		return null;
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xFC42D8", Offset = "0xFC42D8", VA = "0xFC42D8")]
	public void StandardPattern()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xFC42E0", Offset = "0xFC42E0", VA = "0xFC42E0")]
	public void LineLeftToRightPattern()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xFC42EC", Offset = "0xFC42EC", VA = "0xFC42EC")]
	public void LineFrontToBackPattern()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xFC42F8", Offset = "0xFC42F8", VA = "0xFC42F8")]
	public void ExplodeSequence()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xFC3D6C", Offset = "0xFC3D6C", VA = "0xFC3D6C")]
	public void xSliderValueChanged(float val)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xFC3E24", Offset = "0xFC3E24", VA = "0xFC3E24")]
	public void ySliderValueChanged(float val)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xFC4524", Offset = "0xFC4524", VA = "0xFC4524")]
	public void thePadValueChanged(Vector2 val)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xFC45C0", Offset = "0xFC45C0", VA = "0xFC45C0")]
	public void systemsButtonChanged(bool val)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xFC4628", Offset = "0xFC4628", VA = "0xFC4628")]
	public void organsButtonChanged(bool val)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xFC436C", Offset = "0xFC436C", VA = "0xFC436C")]
	private void UpdateAnimator()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xFC4690", Offset = "0xFC4690", VA = "0xFC4690")]
	public void setIsClosed(bool val)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xFC469C", Offset = "0xFC469C", VA = "0xFC469C")]
	public ObjectsToMoveManager()
	{
	}
}
[Token(Token = "0x2000157")]
[DisallowMultipleComponent]
public class OculusEntitlements : MonoBehaviour
{
	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x2308A90", Offset = "0x2308A90", VA = "0x2308A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x2308C1C", Offset = "0x2308C1C", VA = "0x2308C1C")]
	private void EntitlementCallback(Message msg)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x2308CE0", Offset = "0x2308CE0", VA = "0x2308CE0")]
	public OculusEntitlements()
	{
	}
}
[Token(Token = "0x2000158")]
public class CADController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200057A")]
	public class materialProperty
	{
		[Token(Token = "0x4002B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string propertyName;

		[Token(Token = "0x4002B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 activeRange;

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xF87EDC", Offset = "0xF87EDC", VA = "0xF87EDC")]
		public materialProperty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200057B")]
	public class particlesItem
	{
		[Token(Token = "0x4002B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string itemName;

		[Token(Token = "0x4002B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x4002B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float alphaRange;

		[Token(Token = "0x4002B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 fadeInRange;

		[Token(Token = "0x4002B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 fadeOutRange;

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xF87EEC", Offset = "0xF87EEC", VA = "0xF87EEC")]
		public particlesItem()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200057C")]
	public class particlesEmission
	{
		[Token(Token = "0x4002B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string itemName;

		[Token(Token = "0x4002B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x4002B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minEmission;

		[Token(Token = "0x4002B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxEmission;

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xF87EE4", Offset = "0xF87EE4", VA = "0xF87EE4")]
		public particlesEmission()
		{
		}
	}

	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C740", Offset = "0xD0C740")]
	private sealed class <TreatmentCoroutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CADController <>4__this;

		[Token(Token = "0x4002B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x4002B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <progress>5__3;

		[Token(Token = "0x4002B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SrlToggle <stentSrlToggle>5__4;

		[Token(Token = "0x17000255")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002243")]
			[Address(RVA = "0xF87E6C", Offset = "0xF87E6C", VA = "0xF87E6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002245")]
			[Address(RVA = "0xF87ED4", Offset = "0xF87ED4", VA = "0xF87ED4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xF87648", Offset = "0xF87648", VA = "0xF87648")]
		[DebuggerHidden]
		public <TreatmentCoroutine>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xF87CB4", Offset = "0xF87CB4", VA = "0xF87CB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xF87CB8", Offset = "0xF87CB8", VA = "0xF87CB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xF87E74", Offset = "0xF87E74", VA = "0xF87E74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1219C", Offset = "0xD1219C")]
	public Slider slide;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider glucoseSlider;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider cholesterolSlider;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle stentToggle;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image stentToggleFill;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float plaqueLevel;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle resetToggle;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image progressButton;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD121D4", Offset = "0xD121D4")]
	public List<particlesItem> particlesList;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public particlesEmission[] glucoseParticles;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public particlesEmission[] cholesterolParticles;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1220C", Offset = "0xD1220C")]
	public Animator anim;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject stentMesh;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private float treatmentDuration;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12254", Offset = "0xD12254")]
	public Renderer[] plaqueRenderer;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Toggle coupledToggle;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool coupled;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float stentCutoff;

	[Token(Token = "0x400099B")]
	private const string BLEND_PROPERTY = "Blend";

	[Token(Token = "0x400099C")]
	private const string RESET_PROPERTY = "Reset";

	[Token(Token = "0x400099D")]
	private const string STENT_PROPERTY = "Blend_Stent";

	[Token(Token = "0x400099E")]
	private const string PROFRESSBUTTON_PROPERTY = "Background";

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string PLAQUE_PROPERTY_1;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string PLAQUE_PROPERTY_2;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string PLAQUE_PROPERTY_3;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float plaque_one_max;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float plaque_two_max;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float plaque_three_max;

	[Token(Token = "0x40009A5")]
	private const string downstreamProperty = "_downstream_slow";

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float maxRemap;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1228C", Offset = "0xD1228C")]
	public float lowerThresholdSlowingDownStream;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float upperThresholdSlowingDownStream;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float lowerNumberDownStream;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float middleNumberDownStream;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float upperNumberDownStream;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Renderer downstreamRenderer;

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xF86334", Offset = "0xF86334", VA = "0xF86334")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xF86784", Offset = "0xF86784", VA = "0xF86784")]
	public void OnSliderChanged(float val)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xF86DFC", Offset = "0xF86DFC", VA = "0xF86DFC")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xF86CDC", Offset = "0xF86CDC", VA = "0xF86CDC")]
	private void UpdateDownStream(float val)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xF869C8", Offset = "0xF869C8", VA = "0xF869C8")]
	public void OnGlucoseSliderChanged(float val)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xF87384", Offset = "0xF87384", VA = "0xF87384")]
	public void OnCoupledToggled(bool val)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xF868CC", Offset = "0xF868CC", VA = "0xF868CC")]
	public void OnCholesterolSliderChanged(float val)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xF87390", Offset = "0xF87390", VA = "0xF87390")]
	public void OnStentToggled(bool val)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xF87428", Offset = "0xF87428", VA = "0xF87428")]
	public void StartTreatment()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xF875D8", Offset = "0xF875D8", VA = "0xF875D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21958", Offset = "0xD21958")]
	private IEnumerator TreatmentCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xF87674", Offset = "0xF87674", VA = "0xF87674")]
	public void OnResetToggled(bool val)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xF87684", Offset = "0xF87684", VA = "0xF87684")]
	public void ResetTreatment(bool val)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xF87948", Offset = "0xF87948", VA = "0xF87948")]
	public void OnStentDelivered()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xF879E8", Offset = "0xF879E8", VA = "0xF879E8")]
	public void OnDownStreamReset()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xF86AEC", Offset = "0xF86AEC", VA = "0xF86AEC")]
	private void UpdateParticles(float val)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xF879F0", Offset = "0xF879F0", VA = "0xF879F0")]
	public void SetParticlesAlpha(ParticleSystem partSystem, float alpha)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xF86FD0", Offset = "0xF86FD0", VA = "0xF86FD0")]
	private void UpdatePlaque(float val)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xF8721C", Offset = "0xF8721C", VA = "0xF8721C")]
	private void UpdatePanel(float val)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xF87BC4", Offset = "0xF87BC4", VA = "0xF87BC4")]
	public CADController()
	{
	}
}
[Token(Token = "0x2000159")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A664", Offset = "0xD0A664")]
public class ArterySelector : MonoBehaviour
{
	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MultiArterySelectionController arterySelectionController;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tapDeltaTime;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float LastEventTime;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int tapCount;

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x11882AC", Offset = "0x11882AC", VA = "0x11882AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x11882DC", Offset = "0x11882DC", VA = "0x11882DC")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1188360", Offset = "0x1188360", VA = "0x1188360")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x1188534", Offset = "0x1188534", VA = "0x1188534")]
	public ArterySelector()
	{
	}
}
[Token(Token = "0x200015A")]
public class BPMAnimationControl : MonoBehaviour
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject startSearch;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animationControllerName;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float heartBeatMultiplier;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float doNothingMultiplier;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool bpmActive;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Animator> animatorList;

	[Token(Token = "0x40009B7")]
	private const float doNothingLength = 0.067f;

	[Token(Token = "0x40009B8")]
	private const float mainLength = 1.4f;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xF7AEDC", Offset = "0xF7AEDC", VA = "0xF7AEDC")]
	public void Awake()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xF7B008", Offset = "0xF7B008", VA = "0xF7B008")]
	public void UpdateBPM(float bpm)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xF7B1AC", Offset = "0xF7B1AC", VA = "0xF7B1AC")]
	public void SetBPMActive(bool value)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xF7B2C8", Offset = "0xF7B2C8", VA = "0xF7B2C8")]
	public bool IsBPMActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xF7B340", Offset = "0xF7B340", VA = "0xF7B340")]
	public void SetMitralRegurgeActive(bool value)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xF7B488", Offset = "0xF7B488", VA = "0xF7B488")]
	public BPMAnimationControl()
	{
	}
}
[Token(Token = "0x200015B")]
public class BloodFXControl : MonoBehaviour
{
	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD122C4", Offset = "0xD122C4")]
	public ZoneManager zoneManager;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isOn;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int activeZone;

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xF825F8", Offset = "0xF825F8", VA = "0xF825F8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xF82688", Offset = "0xF82688", VA = "0xF82688")]
	public void BloodButtonPressed()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xF82698", Offset = "0xF82698", VA = "0xF82698")]
	private void ChangeZone(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xF826A4", Offset = "0xF826A4", VA = "0xF826A4")]
	public BloodFXControl()
	{
	}
}
[Token(Token = "0x200015C")]
public class BloodFlowControl : MonoBehaviour
{
	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isOn;

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xF826B4", Offset = "0xF826B4", VA = "0xF826B4")]
	public void BloodButtonPressed()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xF826C4", Offset = "0xF826C4", VA = "0xF826C4")]
	public BloodFlowControl()
	{
	}
}
[Token(Token = "0x200015D")]
public class CCSControl : MonoBehaviour
{
	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZoneManager zoneManager;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] ccsRenderers;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD122FC", Offset = "0xD122FC")]
	public string timeCurrentProperty;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string timeSpeedProperty;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12334", Offset = "0xD12334")]
	public Slider speed;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider bpm;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle bloodToggle;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle bloodToggleLeft;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle bloodToggleRight;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle bloodToggleDye;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Toggle bloodToggleEject;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1236C", Offset = "0xD1236C")]
	public Renderer[] bloodFlowModels;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Renderer[] ejectionModels;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SkinnedMeshRenderer bloodExterior;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material[] exteriorMaterials;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float bloodFlowMinStart;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float bloodFlowMaxEnd;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float bloodCycleTime;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD123A4", Offset = "0xD123A4")]
	public Renderer[] sortableMeshes;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material[] sortableMaterials;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int[] sortValues;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material[] materials;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material[] bloodMaterials;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material[] ejectionMaterials;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool ejected;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Animator animator;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float accumulatedTime;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float currentBeatTime;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float currentSpeed;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float normalTime;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected float speedCalc;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xF87EF4", Offset = "0xF87EF4", VA = "0xF87EF4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xF87FC4", Offset = "0xF87FC4", VA = "0xF87FC4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xF88134", Offset = "0xF88134", VA = "0xF88134", Slot = "4")]
	protected virtual void setupRenderers()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xF887D0", Offset = "0xF887D0", VA = "0xF887D0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xF891B0", Offset = "0xF891B0", VA = "0xF891B0")]
	public void LaunchConductive()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xF891B8", Offset = "0xF891B8", VA = "0xF891B8")]
	public void BloodToggleState(bool val)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xF892B8", Offset = "0xF892B8", VA = "0xF892B8")]
	public void EjectToggleState(bool val)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xF8910C", Offset = "0xF8910C", VA = "0xF8910C")]
	private void alterRenderCues()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xF89084", Offset = "0xF89084", VA = "0xF89084")]
	private void RestoreRenderCues()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xF89320", Offset = "0xF89320", VA = "0xF89320")]
	public void DyeToggle(bool val)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xF893D0", Offset = "0xF893D0", VA = "0xF893D0")]
	public CCSControl()
	{
	}
}
[Token(Token = "0x200015E")]
public class CallCCSControl : MonoBehaviour
{
	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CCSControl ccsControl;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool transmit;

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xF8AA34", Offset = "0xF8AA34", VA = "0xF8AA34")]
	public void NormalConductive()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xF8AA88", Offset = "0xF8AA88", VA = "0xF8AA88")]
	public CallCCSControl()
	{
	}
}
[Token(Token = "0x200015F")]
public class CallMitralRegurgeManager : MonoBehaviour
{
	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MitralRegurgeManager mitralRegurgeManager;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool transmit;

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xF8ABB8", Offset = "0xF8ABB8", VA = "0xF8ABB8")]
	public void StartBlood()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xF8AC18", Offset = "0xF8AC18", VA = "0xF8AC18")]
	public void EndBlood()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xF8AC78", Offset = "0xF8AC78", VA = "0xF8AC78")]
	public CallMitralRegurgeManager()
	{
	}
}
[Token(Token = "0x2000160")]
public class CallECGController : MonoBehaviour
{
	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ECGController ecgController;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool transmit;

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xF8AB50", Offset = "0xF8AB50", VA = "0xF8AB50")]
	public void NormalBeat()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xF8ABB0", Offset = "0xF8ABB0", VA = "0xF8ABB0")]
	public CallECGController()
	{
	}
}
[Token(Token = "0x2000161")]
public class ECGController : ECGController_Base
{
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD123DC", Offset = "0xD123DC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD123DC", Offset = "0xD123DC")]
	public GameObject moverParent;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider bpm;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider speed;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numberOfBeatMovers;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int normalBeatPixelSize;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ecgMover;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject normalBeat;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject tempObject;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RectTransform tempRectTransform;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ECGMover[] beatMovers;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ECGMover currentBeatMover;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float sizeDeltaX;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool _initialized;

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x22F1D64", Offset = "0x22F1D64", VA = "0x22F1D64")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x22F1DCC", Offset = "0x22F1DCC", VA = "0x22F1DCC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x22F22D4", Offset = "0x22F22D4", VA = "0x22F22D4")]
	public void Update()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x22F243C", Offset = "0x22F243C", VA = "0x22F243C")]
	public void LaunchNormalBeat()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x22F25EC", Offset = "0x22F25EC", VA = "0x22F25EC")]
	private ECGMover FindAvailable(ECGMover[] movers)
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x22F26E8", Offset = "0x22F26E8", VA = "0x22F26E8")]
	public void OnECGToggled(bool val)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x22F278C", Offset = "0x22F278C", VA = "0x22F278C")]
	public void ChangECGDotAnimationSpeed(float val)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x22F286C", Offset = "0x22F286C", VA = "0x22F286C")]
	public ECGController()
	{
	}
}
[Token(Token = "0x2000162")]
public class ECGMover : ECGMover_Base
{
	[Token(Token = "0x200057E")]
	public enum ecgTypes
	{
		[Token(Token = "0x4002B73")]
		grid,
		[Token(Token = "0x4002B74")]
		normal
	}

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ecgTypes ecgType;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ECGController ecgController;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bpm;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool moving;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool trainComplete;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceToEnd;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceTraveled;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float trainLength;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<RectTransform> trainObjects;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RectTransform rectTransform;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform tempRectTransform;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distanceToMove;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float startPosition;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float percentWidth;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x22F2880", Offset = "0x22F2880", VA = "0x22F2880")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x22F28EC", Offset = "0x22F28EC", VA = "0x22F28EC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x22F297C", Offset = "0x22F297C", VA = "0x22F297C", Slot = "4")]
	public override void ExecuteUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x22F21BC", Offset = "0x22F21BC", VA = "0x22F21BC")]
	public void AddToTrain(GameObject value)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x22F2C98", Offset = "0x22F2C98", VA = "0x22F2C98")]
	private float LengthOfTrain()
	{
		return default(float);
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x22F2DA4", Offset = "0x22F2DA4", VA = "0x22F2DA4")]
	public void MoveTrainToEnd()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x22F2E40", Offset = "0x22F2E40", VA = "0x22F2E40")]
	public ECGMover()
	{
	}
}
[Token(Token = "0x2000163")]
public class ECGMover_Grid : ECGMover_Base
{
	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<RectTransform> elementsPool;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<RectTransform> activeElements;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject element;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int bufferOnStart;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x22F2ED8", Offset = "0x22F2ED8", VA = "0x22F2ED8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x22F2F90", Offset = "0x22F2F90", VA = "0x22F2F90")]
	private RectTransform CreateNewElement()
	{
		return null;
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x22F30DC", Offset = "0x22F30DC", VA = "0x22F30DC")]
	private RectTransform GetFreeOrCreateNewElement()
	{
		return null;
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x22F31C0", Offset = "0x22F31C0", VA = "0x22F31C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x22F3250", Offset = "0x22F3250", VA = "0x22F3250", Slot = "4")]
	public override void ExecuteUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x22F3638", Offset = "0x22F3638", VA = "0x22F3638")]
	private bool needElementAtTail(out RectTransform tailElement)
	{
		return default(bool);
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x22F3744", Offset = "0x22F3744", VA = "0x22F3744")]
	private bool needElementAtHead(out RectTransform headElement)
	{
		return default(bool);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x22F3830", Offset = "0x22F3830", VA = "0x22F3830")]
	public ECGMover_Grid()
	{
	}
}
[Token(Token = "0x2000164")]
public static class UIExtensions
{
	[Token(Token = "0x600083E")]
	[Address(RVA = "0x2330990", Offset = "0x2330990", VA = "0x2330990")]
	public static Rect GetRectInParentSpace(this RectTransform source)
	{
		return default(Rect);
	}
}
[Token(Token = "0x2000165")]
public class ECGPanelResizer : MonoBehaviour
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform leftRef;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float leftPadding;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform rightRef;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rightPadding;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float bottomPadding;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x22F38E0", Offset = "0x22F38E0", VA = "0x22F38E0")]
	private Vector2[] getScreenCorners(RectTransform inRect)
	{
		return null;
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x22F3A74", Offset = "0x22F3A74", VA = "0x22F3A74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x22F4164", Offset = "0x22F4164", VA = "0x22F4164")]
	public ECGPanelResizer()
	{
	}
}
[Token(Token = "0x2000166")]
public class HFv2_Manager : MonoBehaviour
{
	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer blendShapesRend;

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x22FEEF8", Offset = "0x22FEEF8", VA = "0x22FEEF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x22FEEFC", Offset = "0x22FEEFC", VA = "0x22FEEFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x22FEF00", Offset = "0x22FEF00", VA = "0x22FEF00")]
	public void OnPadValueChanged(Vector2 inValue)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x22FF00C", Offset = "0x22FF00C", VA = "0x22FF00C")]
	public HFv2_Manager()
	{
	}
}
[Token(Token = "0x2000167")]
public class HFv2_Manager_FullHeart : MonoBehaviour
{
	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer[] blendShapeRendList;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MultiPad multiPad;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScrollRect pad;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider heartFailureSlider;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12428", Offset = "0xD12428")]
	[SerializeField]
	private AnimationCurve thickCurve;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve thinCurve;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AnimationCurve enlargedCurve;

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x22FF014", Offset = "0x22FF014", VA = "0x22FF014")]
	public void Init()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x22FF21C", Offset = "0x22FF21C", VA = "0x22FF21C")]
	public void OnPadValueChanged(Vector2 newValue)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x22FF4C8", Offset = "0x22FF4C8", VA = "0x22FF4C8")]
	private void OnHeartFailureSliderChanged(float newValue)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x22FF604", Offset = "0x22FF604", VA = "0x22FF604")]
	public HFv2_Manager_FullHeart()
	{
	}
}
[Token(Token = "0x2000168")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A6D8", Offset = "0xD0A6D8")]
public class HFv2_PadClickHandler : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ScrollRect _scrollRect;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x22FF60C", Offset = "0x22FF60C", VA = "0x22FF60C")]
	private void Start()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x22FF67C", Offset = "0x22FF67C", VA = "0x22FF67C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x22FF774", Offset = "0x22FF774", VA = "0x22FF774")]
	private Vector2 PointerPositionCorrected(Vector2 value)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x22FFA48", Offset = "0x22FFA48", VA = "0x22FFA48")]
	public HFv2_PadClickHandler()
	{
	}
}
[Token(Token = "0x2000169")]
public class Image_Incremental_Masked_SRL : Image
{
	[NonSerialized]
	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected int m_StencilID;

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x2302674", Offset = "0x2302674", VA = "0x2302674", Slot = "58")]
	public override Material GetModifiedMaterial(Material baseMaterial)
	{
		return null;
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x23027C4", Offset = "0x23027C4", VA = "0x23027C4")]
	public static int GetStencilID(Transform transform, Transform stopAfter)
	{
		return default(int);
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x2302A1C", Offset = "0x2302A1C", VA = "0x2302A1C")]
	public Image_Incremental_Masked_SRL()
	{
	}
}
[Token(Token = "0x200016A")]
public class Mask_Incremental_SRL : Mask
{
	[NonSerialized]
	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_MaskMaterial;

	[NonSerialized]
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material m_UnmaskMaterial;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x13DBA6C", Offset = "0x13DBA6C", VA = "0x13DBA6C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x13DBAF8", Offset = "0x13DBAF8", VA = "0x13DBAF8", Slot = "22")]
	public override Material GetModifiedMaterial(Material baseMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x13DBD68", Offset = "0x13DBD68", VA = "0x13DBD68")]
	public Mask_Incremental_SRL()
	{
	}
}
[Token(Token = "0x200016B")]
public class GlowingSpotAnimatorCallback : MonoBehaviour
{
	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StreetViewTransitionControl streetViewControl;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int glowCount;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x22FD74C", Offset = "0x22FD74C", VA = "0x22FD74C")]
	public void OnSpotIsOpaque()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x22FD780", Offset = "0x22FD780", VA = "0x22FD780")]
	public GlowingSpotAnimatorCallback()
	{
	}
}
[Token(Token = "0x200016C")]
public class HeartBeatAudioController : MonoBehaviour
{
	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12494", Offset = "0xD12494")]
	public AudioClip largeBeat;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip smallBeat;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD124CC", Offset = "0xD124CC")]
	public bool transmit;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource currentAudioSource;

	[Token(Token = "0x4000A1A")]
	private const string SFXGROUP = "SFX";

	[Token(Token = "0x4000A1B")]
	private const string _volumeSFX = "volumeSFX";

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x2301334", Offset = "0x2301334", VA = "0x2301334")]
	public void Start()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x230142C", Offset = "0x230142C", VA = "0x230142C")]
	public void HeartBeat(int beatID)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x230154C", Offset = "0x230154C", VA = "0x230154C")]
	public HeartBeatAudioController()
	{
	}
}
[Token(Token = "0x200016D")]
public class HelpAssistSelectRectActivator : MonoBehaviour
{
	[Token(Token = "0x6000859")]
	[Address(RVA = "0x2301554", Offset = "0x2301554", VA = "0x2301554")]
	public HelpAssistSelectRectActivator()
	{
	}
}
[Token(Token = "0x200016E")]
public class MitralRegurgeManager : MonoBehaviour
{
	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C750", Offset = "0xD0C750")]
	private sealed class <WaitAndStart>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4002B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MitralRegurgeManager <>4__this;

		[Token(Token = "0x17000257")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002249")]
			[Address(RVA = "0xFBA238", Offset = "0xFBA238", VA = "0xFBA238", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000258")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600224B")]
			[Address(RVA = "0xFBA2A0", Offset = "0xFBA2A0", VA = "0xFBA2A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xFBA130", Offset = "0xFBA130", VA = "0xFBA130")]
		[DebuggerHidden]
		public <WaitAndStart>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xFBA184", Offset = "0xFBA184", VA = "0xFBA184", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xFBA188", Offset = "0xFBA188", VA = "0xFBA188", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xFBA240", Offset = "0xFBA240", VA = "0xFBA240", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12504", Offset = "0xD12504")]
	public BPMAnimationControl bpmControl;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScrollRect padRect;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1253C", Offset = "0xD1253C")]
	public Vector2 startingPadPosition;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 startingCameraAngles;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float startingDistance;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LegacyCameraControl cameraController;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool bloodFxIsOn;

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xFB9F84", Offset = "0xFB9F84", VA = "0xFB9F84")]
	private void Start()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xFBA094", Offset = "0xFBA094", VA = "0xFBA094")]
	public void StartMitralRegurge()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xFBA014", Offset = "0xFBA014", VA = "0xFBA014")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD219CC", Offset = "0xD219CC")]
	private IEnumerator WaitAndStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xFBA15C", Offset = "0xFBA15C", VA = "0xFBA15C")]
	public void StartBlood()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xFBA160", Offset = "0xFBA160", VA = "0xFBA160")]
	public void EndBlood()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xFBA164", Offset = "0xFBA164", VA = "0xFBA164")]
	public void BloodButtonPressed()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xFBA174", Offset = "0xFBA174", VA = "0xFBA174")]
	public MitralRegurgeManager()
	{
	}
}
[Token(Token = "0x200016F")]
public class MultiArterySelectionController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000580")]
	public class TransformData
	{
		[Token(Token = "0x4002B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 transformPosition;

		[Token(Token = "0x4002B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 transformRotation;

		[Token(Token = "0x4002B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 transformScale;

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xFBC2EC", Offset = "0xFBC2EC", VA = "0xFBC2EC")]
		public TransformData()
		{
		}
	}

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12574", Offset = "0xD12574")]
	public Vector2 startCameraPosition;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 startPadPosition;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD125AC", Offset = "0xD125AC")]
	public GameObject MainHighlightSpot;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int highlightSpotsMaxCount;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD125E4", Offset = "0xD125E4")]
	public List<MeshRenderer> selectionCubes;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshCollider meshCollider;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ScrollRect padScrollRect;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Transform> highlightSpots;

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xFBB99C", Offset = "0xFBB99C", VA = "0xFBB99C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xFBBA44", Offset = "0xFBBA44", VA = "0xFBBA44")]
	public void ArterySelected(Vector3 position, Vector3 normal)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xFBBD4C", Offset = "0xFBBD4C", VA = "0xFBBD4C")]
	public void SpotSelected(Vector3 position)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xFBC0D0", Offset = "0xFBC0D0", VA = "0xFBC0D0")]
	public void UndoLastSelection()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xFBC1A4", Offset = "0xFBC1A4", VA = "0xFBC1A4")]
	public void ResetSpots()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xFBBED8", Offset = "0xFBBED8", VA = "0xFBBED8")]
	public void SaveSpots()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xFBBDDC", Offset = "0xFBBDDC", VA = "0xFBBDDC")]
	private int GetBoundsForPoint(Vector3 point)
	{
		return default(int);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xFBC2F4", Offset = "0xFBC2F4", VA = "0xFBC2F4")]
	public MultiArterySelectionController()
	{
	}
}
[Token(Token = "0x2000170")]
[ExecuteInEditMode]
public class OpacityControlInShaders : MonoBehaviour
{
	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool reloadObjects;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string opacityValueNameInShader;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float opacity;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool turnOffIfTransparent;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool putOnTopLayer;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool putOnTopLayerOld;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int bottomLayerID;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int topLayerID;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer[] childrenRenderers;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material[] childrenMaterials;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] drawOrder;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool changeDrawOrder;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int drawOrderModifier;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool resetDrawOrder;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool backupDrawOrderValues;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool restoreDrawOrderValues;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] drawOrderBackup;

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x2308D04", Offset = "0x2308D04", VA = "0x2308D04")]
	private void Start()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x23090FC", Offset = "0x23090FC", VA = "0x23090FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x23093FC", Offset = "0x23093FC", VA = "0x23093FC")]
	private void SwitchToTopLayer(bool state)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x2308DD0", Offset = "0x2308DD0", VA = "0x2308DD0")]
	private void SetChildrenState(bool state)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x2308E8C", Offset = "0x2308E8C", VA = "0x2308E8C")]
	private Material[] GetChildrenMaterialsInRenderers(Renderer[] renderers)
	{
		return null;
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x23094E0", Offset = "0x23094E0", VA = "0x23094E0")]
	private void ChangeFloatInMaterialsBlock(Renderer[] renderers, string valueName, float value)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x230961C", Offset = "0x230961C", VA = "0x230961C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x2308FC0", Offset = "0x2308FC0", VA = "0x2308FC0")]
	private int[] ReadDrawOrder()
	{
		return null;
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x2309348", Offset = "0x2309348", VA = "0x2309348")]
	private void ChangeDrawOrder(int[] baseValues, int modifier)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x2309700", Offset = "0x2309700", VA = "0x2309700")]
	public OpacityControlInShaders()
	{
	}
}
[Token(Token = "0x2000171")]
public class OpacityMaterialControl : MonoBehaviour
{
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject obj;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float faddingTime;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer[] childrenRenderers;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool bloodFlow;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float opacity;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetOpacity;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x2309768", Offset = "0x2309768", VA = "0x2309768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x230983C", Offset = "0x230983C", VA = "0x230983C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x230999C", Offset = "0x230999C", VA = "0x230999C")]
	public void ToggleButton()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x23099D4", Offset = "0x23099D4", VA = "0x23099D4")]
	public OpacityMaterialControl()
	{
	}
}
[Token(Token = "0x2000172")]
public class SpeedAnimationControl : MonoBehaviour
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject startSearch;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string animationControllerName;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider speed;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider bpm;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BPMAnimationControl bpmAnimationControl;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float speedMultiplier;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Animator> animatorList;

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x233A76C", Offset = "0x233A76C", VA = "0x233A76C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x233A890", Offset = "0x233A890", VA = "0x233A890")]
	public void UpdateSpeed(float value)
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x233AA28", Offset = "0x233AA28", VA = "0x233AA28")]
	public void UpdateBPM()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x233AB6C", Offset = "0x233AB6C", VA = "0x233AB6C")]
	public SpeedAnimationControl()
	{
	}
}
[Token(Token = "0x2000173")]
public class StateControl_Heart_V2 : MonoBehaviour
{
	[Token(Token = "0x2000581")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C760", Offset = "0xD0C760")]
	private sealed class <FadeOut>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StateControl_Heart_V2 <>4__this;

		[Token(Token = "0x4002B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aTime;

		[Token(Token = "0x4002B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject gameObj;

		[Token(Token = "0x4002B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float aValue;

		[Token(Token = "0x4002B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <opacity>5__2;

		[Token(Token = "0x4002B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__3;

		[Token(Token = "0x17000259")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002250")]
			[Address(RVA = "0x2341320", Offset = "0x2341320", VA = "0x2341320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002252")]
			[Address(RVA = "0x2341388", Offset = "0x2341388", VA = "0x2341388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x23407E8", Offset = "0x23407E8", VA = "0x23407E8")]
		[DebuggerHidden]
		public <FadeOut>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x2341188", Offset = "0x2341188", VA = "0x2341188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x234118C", Offset = "0x234118C", VA = "0x234118C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x2341328", Offset = "0x2341328", VA = "0x2341328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C770", Offset = "0xD0C770")]
	private sealed class <FadeIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StateControl_Heart_V2 <>4__this;

		[Token(Token = "0x4002B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aTime;

		[Token(Token = "0x4002B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject gameObj;

		[Token(Token = "0x4002B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float aValue;

		[Token(Token = "0x4002B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <opacity>5__2;

		[Token(Token = "0x4002B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__3;

		[Token(Token = "0x1700025B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002256")]
			[Address(RVA = "0x2341118", Offset = "0x2341118", VA = "0x2341118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002258")]
			[Address(RVA = "0x2341180", Offset = "0x2341180", VA = "0x2341180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x23408AC", Offset = "0x23408AC", VA = "0x23408AC")]
		[DebuggerHidden]
		public <FadeIn>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x2340F8C", Offset = "0x2340F8C", VA = "0x2340F8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x2340F90", Offset = "0x2340F90", VA = "0x2340F90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x2341120", Offset = "0x2341120", VA = "0x2341120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1261C", Offset = "0xD1261C")]
	public float transitionAreaStart;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int snapCount;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useSnapping;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScrollRect inScroll;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> heartsObjBottom;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> heartsObjTop;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject heartStagesBottom;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject heartStagesTop;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentStage;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int currentStageY;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float durationSnapping;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float durationTransition;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float time;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timeV;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float targetPositionH;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float targetPositionV;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool lerpH;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool lerpV;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool workingIn;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool workingOut;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int zones;

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x2340590", Offset = "0x2340590", VA = "0x2340590")]
	private void Start()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x2340594", Offset = "0x2340594", VA = "0x2340594")]
	private void Update()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x2340750", Offset = "0x2340750", VA = "0x2340750")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21A30", Offset = "0xD21A30")]
	private IEnumerator FadeOut(GameObject gameObj, float aValue, float aTime)
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x2340814", Offset = "0x2340814", VA = "0x2340814")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21A94", Offset = "0xD21A94")]
	private IEnumerator FadeIn(GameObject gameObj, float aValue, float aTime)
	{
		return null;
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x23408D8", Offset = "0x23408D8", VA = "0x23408D8")]
	public void OnScrollValueChanged(Vector2 inValue)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x2340D9C", Offset = "0x2340D9C", VA = "0x2340D9C")]
	public void Draging()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x2340DA4", Offset = "0x2340DA4", VA = "0x2340DA4")]
	public void EndDragging()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x2340EE8", Offset = "0x2340EE8", VA = "0x2340EE8")]
	public StateControl_Heart_V2()
	{
	}
}
[Token(Token = "0x2000174")]
public class StreetViewTransitionControl : MonoBehaviour
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject glowingSpot;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float transitionDuration;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LegacyCameraControl camController;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x22C8590", Offset = "0x22C8590", VA = "0x22C8590")]
	private void Start()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x22C85F4", Offset = "0x22C85F4", VA = "0x22C85F4")]
	public void OnStreetViewButton()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x22C8614", Offset = "0x22C8614", VA = "0x22C8614")]
	public void ShowGlowingSpot()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x22C8634", Offset = "0x22C8634", VA = "0x22C8634")]
	public void LaunchStreetViewScene()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x22C8638", Offset = "0x22C8638", VA = "0x22C8638")]
	public StreetViewTransitionControl()
	{
	}
}
[Token(Token = "0x2000175")]
public class AnimControl : MonoBehaviour
{
	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation m_Animation;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator m_Animator;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_SpeedIncrement;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_Paused;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float m_Speed;

	[Token(Token = "0x17000052")]
	public static bool Paused
	{
		[Token(Token = "0x6000888")]
		[Address(RVA = "0x11829B8", Offset = "0x11829B8", VA = "0x11829B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000053")]
	public static float Speed
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1182A20", Offset = "0x1182A20", VA = "0x1182A20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x1182A88", Offset = "0x1182A88", VA = "0x1182A88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1182B00", Offset = "0x1182B00", VA = "0x1182B00")]
	private void Update()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1182F48", Offset = "0x1182F48", VA = "0x1182F48")]
	public AnimControl()
	{
	}
}
[Token(Token = "0x2000176")]
public class AnimationCallbackAdapter : MonoBehaviour
{
	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onAnimationFinishingCallback;

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x11833AC", Offset = "0x11833AC", VA = "0x11833AC")]
	public void onAnimationFinishing()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1183430", Offset = "0x1183430", VA = "0x1183430")]
	public AnimationCallbackAdapter()
	{
	}
}
[Token(Token = "0x2000177")]
public class CameraFade : MonoBehaviour
{
	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color m_CurrentScreenOverlayColor;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color m_TargetScreenOverlayColor;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color m_DeltaColor;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsFinished;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image targetImage;

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xF8AE9C", Offset = "0xF8AE9C", VA = "0xF8AE9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xF8AFA0", Offset = "0xF8AFA0", VA = "0xF8AFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xF8AEC8", Offset = "0xF8AEC8", VA = "0xF8AEC8")]
	public void SetScreenOverlayColor(Color newScreenOverlayColor)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xF8B134", Offset = "0xF8B134", VA = "0xF8B134")]
	public void StartFade(Color newScreenOverlayColor, float fadeDuration)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xF8B1A8", Offset = "0xF8B1A8", VA = "0xF8B1A8")]
	public CameraFade()
	{
	}
}
[Token(Token = "0x2000178")]
public class DrawToolToggle : MonoBehaviour
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle pauseToggle;

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x22F1C9C", Offset = "0x22F1C9C", VA = "0x22F1C9C")]
	public void SetPauseToggleState(bool value)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x22F1D5C", Offset = "0x22F1D5C", VA = "0x22F1D5C")]
	public DrawToolToggle()
	{
	}
}
[Token(Token = "0x2000179")]
public class EnableDisableOnTime : MonoBehaviour
{
	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_EnableDisableObjects;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> m_StartTimeInSeconds;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> m_EndTimeInSeconds;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_AnimLengthInSeconds;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool m_IsOK;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_AnimTime;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x22F4F44", Offset = "0x22F4F44", VA = "0x22F4F44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x22F4FC8", Offset = "0x22F4FC8", VA = "0x22F4FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x22F52C8", Offset = "0x22F52C8", VA = "0x22F52C8")]
	public EnableDisableOnTime()
	{
	}
}
[Token(Token = "0x200017A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A74C", Offset = "0xD0A74C")]
public class LookAroundController : MonoBehaviour
{
	[Token(Token = "0x2000583")]
	private enum controlState
	{
		[Token(Token = "0x4002B8D")]
		Animator,
		[Token(Token = "0x4002B8E")]
		Control,
		[Token(Token = "0x4002B8F")]
		ReturnAnimation
	}

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool interactionAllowed;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float panToRotationScale;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float clickTime;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LegacyCameraControl cameraControl;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private controlState state;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 startScreenPos;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float clickStartTime;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion lastRotation;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float frac;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float returnSpeed;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent animationPaused;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent animationResumed;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool ignorePauseToggle;

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x11ACFC4", Offset = "0x11ACFC4", VA = "0x11ACFC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x11AD0B8", Offset = "0x11AD0B8", VA = "0x11AD0B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x11AD2EC", Offset = "0x11AD2EC", VA = "0x11AD2EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x11AD0BC", Offset = "0x11AD0BC", VA = "0x11AD0BC")]
	private void TrackState()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x11AD714", Offset = "0x11AD714", VA = "0x11AD714")]
	private void switchState(controlState inState, bool sendEvents = true)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x11AD8C8", Offset = "0x11AD8C8", VA = "0x11AD8C8")]
	private void runReturnAnimation()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x11ADB58", Offset = "0x11ADB58", VA = "0x11ADB58")]
	public void onTransferBackFinished()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x11ADB64", Offset = "0x11ADB64", VA = "0x11ADB64")]
	public void PauseAnimation(bool value)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x11ADBCC", Offset = "0x11ADBCC", VA = "0x11ADBCC")]
	public LookAroundController()
	{
	}
}
[Token(Token = "0x200017B")]
public class UISlider : MonoBehaviour
{
	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int snapCount;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useSnapping;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScrollRect inScroll;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float durationSnapping;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeV;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float targetPositionH;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetPositionV;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool lerpH;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool lerpV;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x2332C40", Offset = "0x2332C40", VA = "0x2332C40")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x2332C44", Offset = "0x2332C44", VA = "0x2332C44")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x2332E00", Offset = "0x2332E00", VA = "0x2332E00")]
	public void Draging()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x2332E08", Offset = "0x2332E08", VA = "0x2332E08")]
	public void EndDragging()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x2332F4C", Offset = "0x2332F4C", VA = "0x2332F4C")]
	public UISlider()
	{
	}
}
[Token(Token = "0x200017C")]
public class ArrhythmiaCCSControl : CCSControl
{
	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject startSearch;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<GameObject> ccsAtrialParents;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> ccsVentricleParents;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<GameObject> ccsSaNodeParents;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> ccsAfibCrazyFociParents;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private CCSTypeIdentifier[] ccsTypeIdentifier;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<Renderer> ccsAtrialRenderers;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<Renderer> ccsVentricleRenderers;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<Renderer> ccsSaNodeRenderers;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<Renderer> ccsAfibCrazyFociRenderers;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<Material> atrialMaterials;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<Material> ventricleMaterials;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<Material> saNodeMaterials;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<Material> afibCrazyFociMaterials;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float atrialAccumulatedTime;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float ventricleAccumulatedTime;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float saNodeAccumulatedTime;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float afibCrazyFociAccumulatedTime;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float saNodeCurrentSpeed;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float afibCrazyFociCurrentSpeed;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float saNodeSpeedAdjustedBeatTime;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float afibCrazyFociSpeedAdjustedBeatTime;

	[Token(Token = "0x4000AA2")]
	private const float saNodeBeatTime = 0.8f;

	[Token(Token = "0x4000AA3")]
	private const float afibCrazyFociBeatTime = 0.9f;

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x11834F0", Offset = "0x11834F0", VA = "0x11834F0", Slot = "4")]
	protected override void setupRenderers()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1183984", Offset = "0x1183984", VA = "0x1183984")]
	public new void Update()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x118371C", Offset = "0x118371C", VA = "0x118371C")]
	private List<Renderer> SetupRenderers(List<GameObject> parents)
	{
		return null;
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1183854", Offset = "0x1183854", VA = "0x1183854")]
	private List<Material> SetupMaterials(List<Renderer> renderers)
	{
		return null;
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1183BC0", Offset = "0x1183BC0", VA = "0x1183BC0")]
	private void SetMaterialsProperties(List<Material> materials, float accumulatedTime, float currentBeatTime, float currentSpeed, bool saNodeReset = false, bool afibCracyFociReset = false)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1183D84", Offset = "0x1183D84", VA = "0x1183D84")]
	public void LaunchAtrialConductive()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1183D8C", Offset = "0x1183D8C", VA = "0x1183D8C")]
	public void LaunchVentricleConductive()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x1183D94", Offset = "0x1183D94", VA = "0x1183D94")]
	public ArrhythmiaCCSControl()
	{
	}
}
[Token(Token = "0x200017D")]
public class ArrhythmiaControl : MonoBehaviour
{
	[Token(Token = "0x2000584")]
	public enum Diseases
	{
		[Token(Token = "0x4002B91")]
		AvBlock,
		[Token(Token = "0x4002B92")]
		Tachycardia,
		[Token(Token = "0x4002B93")]
		Flutter,
		[Token(Token = "0x4002B94")]
		AtrialFibrillation
	}

	[Token(Token = "0x2000585")]
	public enum AvBlockStates
	{
		[Token(Token = "0x4002B96")]
		Sinus,
		[Token(Token = "0x4002B97")]
		FirstDegree,
		[Token(Token = "0x4002B98")]
		SecondDegreeTypeOne,
		[Token(Token = "0x4002B99")]
		SecondDegreeTypeTwo,
		[Token(Token = "0x4002B9A")]
		ThirdDegree
	}

	[Token(Token = "0x2000586")]
	public enum TachycardiaStates
	{
		[Token(Token = "0x4002B9C")]
		Sinus,
		[Token(Token = "0x4002B9D")]
		AT,
		[Token(Token = "0x4002B9E")]
		AVRT,
		[Token(Token = "0x4002B9F")]
		AVNRT
	}

	[Token(Token = "0x2000587")]
	public enum FlutterStates
	{
		[Token(Token = "0x4002BA1")]
		Sinus,
		[Token(Token = "0x4002BA2")]
		TwoToOne,
		[Token(Token = "0x4002BA3")]
		ThreeToOne,
		[Token(Token = "0x4002BA4")]
		FourToOne
	}

	[Token(Token = "0x2000588")]
	public enum AtrialFibrillationStates
	{
		[Token(Token = "0x4002BA6")]
		Sinus,
		[Token(Token = "0x4002BA7")]
		TwoToOne,
		[Token(Token = "0x4002BA8")]
		ThreeToOne,
		[Token(Token = "0x4002BA9")]
		FourToOne
	}

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12634", Offset = "0xD12634")]
	public Diseases currentDisease;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AvBlockStates avBlockState;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TachycardiaStates tachycardiaState;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public FlutterStates flutterState;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AtrialFibrillationStates atrialFibrillationState;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1266C", Offset = "0xD1266C")]
	public ZoneManager zoneManager;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider bpm;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider fakeBpm;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider speed;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle bpmToggle;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle speedToggle;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text displayText;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject realBpmPanel;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject fakeBpmPanel;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject speedPanel;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD126A4", Offset = "0xD126A4")]
	public GameObject startSearch;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string animationControllerName;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD126DC", Offset = "0xD126DC")]
	public GameObject[] sinusOnObjects;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12714", Offset = "0xD12714")]
	public GameObject[] avBlock1OnObjects;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] avBlock2OnObjects;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] avBlock3OnObjects;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] avBlock4OnObjects;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1274C", Offset = "0xD1274C")]
	public GameObject[] tachycardia1OnObjects;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject[] tachycardia2OnObjects;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] tachycardia3OnObjects;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Renderer[] halfOpacityRenderers;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12784", Offset = "0xD12784")]
	public GameObject[] flutter1OnObjects;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject[] flutter2OnObjects;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject[] flutter3OnObjects;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD127BC", Offset = "0xD127BC")]
	public GameObject[] afib1OnObjects;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject[] afib2OnObjects;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject[] afib3OnObjects;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD127F4", Offset = "0xD127F4")]
	public Animator bloodClotAnimator;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Renderer[] bloodClotRenderers;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int clotIndex;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public ClickController clickController;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool beatToken;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<Animator> animatorList;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool bloodFxIsOn;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool bloodClotStartToken;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
	private bool initialized;

	[Token(Token = "0x4000ACD")]
	private const string _SinusActive = "SinusLoop";

	[Token(Token = "0x4000ACE")]
	private const string _AvBlockActive = "AVBlockActive";

	[Token(Token = "0x4000ACF")]
	private const string _AvBlockState = "AVBlockState";

	[Token(Token = "0x4000AD0")]
	private const string _FlutterActive = "FlutterActive";

	[Token(Token = "0x4000AD1")]
	private const string _FlutterState = "FlutterState";

	[Token(Token = "0x4000AD2")]
	private const string _AfibActive = "AfibActive";

	[Token(Token = "0x4000AD3")]
	private const string _AfibState = "AfibState";

	[Token(Token = "0x4000AD4")]
	private const string _ThirdDegreeFirstMaterial = "CCS_branches_lower";

	[Token(Token = "0x4000AD5")]
	private const string _ThirdDegreeSecondMaterial = "CCS_branches_lower_AVBlock3";

	[Token(Token = "0x4000AD6")]
	private const string _Opacity = "_opacity";

	[Token(Token = "0x4000AD7")]
	private const string _Afib2to1Path1 = "Afib_2_1_Path1";

	[Token(Token = "0x4000AD8")]
	private const string _Afib2to1Path2 = "Afib_2_1_Path2";

	[Token(Token = "0x4000AD9")]
	private const string _Afib3to1Path1 = "Afib_3_1_Path1";

	[Token(Token = "0x4000ADA")]
	private const string _Afib3to1Path2 = "Afib_3_1_Path2";

	[Token(Token = "0x4000ADB")]
	private const string _Afib4to1Path1 = "Afib_4_1_Path1";

	[Token(Token = "0x4000ADC")]
	private const string _Afib4to1Path2 = "Afib_4_1_Path2";

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int bloodClot2to1PathCount;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int bloodClot3to1PathCount;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int bloodClot4to1PathCount;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int afibBPMRunningTotal;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[HideInInspector]
	public int currentAfib;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool _useUpdateAfib;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	public bool realBpmPanelIsActive;

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1183F34", Offset = "0x1183F34", VA = "0x1183F34")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1184068", Offset = "0x1184068", VA = "0x1184068")]
	public void Init()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1184640", Offset = "0x1184640", VA = "0x1184640")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1184554", Offset = "0x1184554", VA = "0x1184554")]
	public void ChangeDisease(int newDisease)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x1184F50", Offset = "0x1184F50", VA = "0x1184F50")]
	private void AnimatorListSetBool(string parameterName, bool value)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1185064", Offset = "0x1185064", VA = "0x1185064")]
	private void AnimatorListSetFloat(string parameterName, float value)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x118517C", Offset = "0x118517C", VA = "0x118517C")]
	private void AnimatorListSetInteger(string parameterName, int value)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1184BC4", Offset = "0x1184BC4", VA = "0x1184BC4")]
	private void StartAvBlock()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1184C90", Offset = "0x1184C90", VA = "0x1184C90")]
	private void StartTachycardia()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1184D78", Offset = "0x1184D78", VA = "0x1184D78")]
	private void StartFlutter()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1184E48", Offset = "0x1184E48", VA = "0x1184E48")]
	private void StartAtrialFibrillation()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x118474C", Offset = "0x118474C", VA = "0x118474C")]
	private void EndAvBlock()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1184860", Offset = "0x1184860", VA = "0x1184860")]
	private void EndTachycardia()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x118495C", Offset = "0x118495C", VA = "0x118495C")]
	private void EndFlutter()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1184A64", Offset = "0x1184A64", VA = "0x1184A64")]
	private void EndAtrialFibrillation()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x118419C", Offset = "0x118419C", VA = "0x118419C")]
	public void ChangeAvBlock(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x118537C", Offset = "0x118537C", VA = "0x118537C")]
	private void ChangeTachycardia(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1185668", Offset = "0x1185668", VA = "0x1185668")]
	private void ChangeFlutter(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1185970", Offset = "0x1185970", VA = "0x1185970")]
	private void ChangeAtrialFibrillation(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1185D78", Offset = "0x1185D78", VA = "0x1185D78")]
	public void UpdateAfib()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1185C90", Offset = "0x1185C90", VA = "0x1185C90")]
	private void ChangeAnimatorState(bool sinusActive, string diseaseActive = "", bool activeValue = false, string diseaseState = "", int stateValue = 0)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1185B28", Offset = "0x1185B28", VA = "0x1185B28")]
	private void SetBPM(bool bpmFake, float bpmRate, float bpmFakeRate)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x11860FC", Offset = "0x11860FC", VA = "0x11860FC")]
	private void BpmToggleSelected(bool value)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x118617C", Offset = "0x118617C", VA = "0x118617C")]
	private void SpeedToggleSelected(bool value)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1186104", Offset = "0x1186104", VA = "0x1186104")]
	public void ToggleBPM(bool value)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1185C14", Offset = "0x1185C14", VA = "0x1185C14")]
	private void SetActiveObjects(GameObject[] objects, bool value)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x118528C", Offset = "0x118528C", VA = "0x118528C")]
	private void SetRenderersOpacity(Renderer[] renderers, float value)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1186184", Offset = "0x1186184", VA = "0x1186184")]
	public void UpdateBPM(float bpm)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x118627C", Offset = "0x118627C", VA = "0x118627C")]
	public void BloodClotVisible(bool value)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1186334", Offset = "0x1186334", VA = "0x1186334")]
	public void BloodClotStart()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1186340", Offset = "0x1186340", VA = "0x1186340")]
	public void BloodClotSync()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x118648C", Offset = "0x118648C", VA = "0x118648C")]
	public ArrhythmiaControl()
	{
	}
}
[Token(Token = "0x200017E")]
public class ArrhythmiaECGController : ECGController_Base
{
	[Token(Token = "0x2000589")]
	private enum DiseaseState
	{
		[Token(Token = "0x4002BAB")]
		Sinus,
		[Token(Token = "0x4002BAC")]
		AvBlock1,
		[Token(Token = "0x4002BAD")]
		AvBlock2,
		[Token(Token = "0x4002BAE")]
		AvBlock3,
		[Token(Token = "0x4002BAF")]
		AvBlock4,
		[Token(Token = "0x4002BB0")]
		Tach1,
		[Token(Token = "0x4002BB1")]
		Tach2,
		[Token(Token = "0x4002BB2")]
		Tach3,
		[Token(Token = "0x4002BB3")]
		Flutter1,
		[Token(Token = "0x4002BB4")]
		Flutter2,
		[Token(Token = "0x4002BB5")]
		Flutter3,
		[Token(Token = "0x4002BB6")]
		Afib1,
		[Token(Token = "0x4002BB7")]
		Afib2,
		[Token(Token = "0x4002BB8")]
		Afib3,
		[Token(Token = "0x4002BB9")]
		None
	}

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1283C", Offset = "0xD1283C")]
	public ArrhythmiaControl arrhythmiaControl;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12874", Offset = "0xD12874")]
	public Slider bpm;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider speed;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD128AC", Offset = "0xD128AC")]
	public GameObject moverParent;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ecgMover;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD128E4", Offset = "0xD128E4")]
	public int sinusMoverCount;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int sinusBeatPixelSize;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject sinusBeat;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1291C", Offset = "0xD1291C")]
	public int avBlock1aMoverCount;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject avBlock1aBeat;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12954", Offset = "0xD12954")]
	public int avBlock2aMoverCount;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int avBlock2bMoverCount;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int avBlock2cMoverCount;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int avBlock2dMoverCount;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject avBlock2aBeat;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject avBlock2bBeat;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject avBlock2cBeat;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject avBlock2dBeat;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1298C", Offset = "0xD1298C")]
	public int avBlock3aMoverCount;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int avBlock3bMoverCount;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject avBlock3aBeat;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject avBlock3bBeat;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD129C4", Offset = "0xD129C4")]
	public int avBlock4aMoverCount;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int avBlock4bMoverCount;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int avBlock4cMoverCount;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int avBlock4dMoverCount;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int avBlock4eMoverCount;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject avBlock4aBeat;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject avBlock4bBeat;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject avBlock4cBeat;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject avBlock4dBeat;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject avBlock4eBeat;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD129FC", Offset = "0xD129FC")]
	public int tach1aMoverCount;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public int tach1bMoverCount;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int tach1cMoverCount;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int tach1dMoverCount;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int tach1eMoverCount;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject tach1aBeat;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject tach1bBeat;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject tach1cBeat;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject tach1dBeat;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject tach1eBeat;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12A34", Offset = "0xD12A34")]
	public int tach2aMoverCount;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public int tach2bMoverCount;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject tach2aBeat;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject tach2bBeat;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12A6C", Offset = "0xD12A6C")]
	public int tach3aMoverCount;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public int tach3bMoverCount;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject tach3aBeat;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject tach3bBeat;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12AA4", Offset = "0xD12AA4")]
	public int flutter1aMoverCount;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public int flutter1bMoverCount;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject flutter1aBeat;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject flutter1bBeat;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12ADC", Offset = "0xD12ADC")]
	public int flutter2aMoverCount;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject flutter2aBeat;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12B14", Offset = "0xD12B14")]
	public int flutter3aMoverCount;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject flutter3aBeat;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12B4C", Offset = "0xD12B4C")]
	public int afib1aMoverCount;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject afib1aBeat;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12B84", Offset = "0xD12B84")]
	public int afib2aMoverCount;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public int afib2bMoverCount;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public int afib2cMoverCount;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject afib2aBeat;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject afib2bBeat;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject afib2cBeat;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12BBC", Offset = "0xD12BBC")]
	public int afib3aMoverCount;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject afib3aBeat;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private GameObject tempObject;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private RectTransform tempRectTransform;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private DiseaseState currentDiseaseState;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private ArrhythmiaECGMover[] sinusBeatMovers;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private ArrhythmiaECGMover[] avBlock1aBeatMovers;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private ArrhythmiaECGMover[] avBlock2aBeatMovers;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private ArrhythmiaECGMover[] avBlock2bBeatMovers;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private ArrhythmiaECGMover[] avBlock2cBeatMovers;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private ArrhythmiaECGMover[] avBlock2dBeatMovers;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private ArrhythmiaECGMover[] avBlock3aBeatMovers;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private ArrhythmiaECGMover[] avBlock3bBeatMovers;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private ArrhythmiaECGMover[] avBlock4aBeatMovers;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private ArrhythmiaECGMover[] avBlock4bBeatMovers;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private ArrhythmiaECGMover[] avBlock4cBeatMovers;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private ArrhythmiaECGMover[] avBlock4dBeatMovers;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private ArrhythmiaECGMover[] avBlock4eBeatMovers;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private ArrhythmiaECGMover[] tach1aBeatMovers;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private ArrhythmiaECGMover[] tach1bBeatMovers;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private ArrhythmiaECGMover[] tach1cBeatMovers;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private ArrhythmiaECGMover[] tach1dBeatMovers;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private ArrhythmiaECGMover[] tach1eBeatMovers;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private ArrhythmiaECGMover[] tach2aBeatMovers;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private ArrhythmiaECGMover[] tach2bBeatMovers;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private ArrhythmiaECGMover[] tach3aBeatMovers;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private ArrhythmiaECGMover[] tach3bBeatMovers;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private ArrhythmiaECGMover[] flutter1aBeatMovers;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private ArrhythmiaECGMover[] flutter1bBeatMovers;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private ArrhythmiaECGMover[] flutter2aBeatMovers;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private ArrhythmiaECGMover[] flutter3aBeatMovers;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private ArrhythmiaECGMover[] afib1aBeatMovers;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private ArrhythmiaECGMover[] afib2aBeatMovers;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private ArrhythmiaECGMover[] afib2bBeatMovers;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private ArrhythmiaECGMover[] afib2cBeatMovers;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private ArrhythmiaECGMover[] afib3aBeatMovers;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private int tach1Index;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private int tach2Index;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private int tach3Index;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private ArrhythmiaECGMover currentBeatMover;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private float percentWidth;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	private float sizeDeltaX;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private bool _initialized;

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x11864A8", Offset = "0x11864A8", VA = "0x11864A8")]
	public void Start()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x11864AC", Offset = "0x11864AC", VA = "0x11864AC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x11866AC", Offset = "0x11866AC", VA = "0x11866AC")]
	public void Update()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x1186844", Offset = "0x1186844", VA = "0x1186844")]
	private void CreateMoverSet(DiseaseState diseaseState)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x1186FBC", Offset = "0x1186FBC", VA = "0x1186FBC")]
	public void SinusBeat()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x11871E8", Offset = "0x11871E8", VA = "0x11871E8")]
	public void AvBlock1aBeat()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x1187214", Offset = "0x1187214", VA = "0x1187214")]
	public void AvBlock2aBeat()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x1187240", Offset = "0x1187240", VA = "0x1187240")]
	public void AvBlock2bBeat()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x118726C", Offset = "0x118726C", VA = "0x118726C")]
	public void AvBlock2cBeat()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x1187298", Offset = "0x1187298", VA = "0x1187298")]
	public void AvBlock2dBeat()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x11872C4", Offset = "0x11872C4", VA = "0x11872C4")]
	public void AvBlock3aBeat()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x11872F0", Offset = "0x11872F0", VA = "0x11872F0")]
	public void AvBlock3bBeat()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x118731C", Offset = "0x118731C", VA = "0x118731C")]
	public void AvBlock4aBeat()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1187348", Offset = "0x1187348", VA = "0x1187348")]
	public void AvBlock4bBeat()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1187374", Offset = "0x1187374", VA = "0x1187374")]
	public void AvBlock4cBeat()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x11873A0", Offset = "0x11873A0", VA = "0x11873A0")]
	public void AvBlock4dBeat()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x11873CC", Offset = "0x11873CC", VA = "0x11873CC")]
	public void AvBlock4eBeat()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x11873F8", Offset = "0x11873F8", VA = "0x11873F8")]
	public void TachycardiaBeat()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x1187544", Offset = "0x1187544", VA = "0x1187544")]
	public void Flutter1aBeat()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1187570", Offset = "0x1187570", VA = "0x1187570")]
	public void Flutter1bBeat()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x118759C", Offset = "0x118759C", VA = "0x118759C")]
	public void Flutter2aBeat()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x11875C8", Offset = "0x11875C8", VA = "0x11875C8")]
	public void Flutter3aBeat()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x11875F4", Offset = "0x11875F4", VA = "0x11875F4")]
	public void Afib1aBeat()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1187644", Offset = "0x1187644", VA = "0x1187644")]
	public void Afib2aBeat()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1187694", Offset = "0x1187694", VA = "0x1187694")]
	public void Afib2bBeat()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x11876C0", Offset = "0x11876C0", VA = "0x11876C0")]
	public void Afib2cBeat()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x11876EC", Offset = "0x11876EC", VA = "0x11876EC")]
	public void Afib3aBeat()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1187018", Offset = "0x1187018", VA = "0x1187018")]
	private void Beat(ArrhythmiaECGMover[] beatMovers)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x118773C", Offset = "0x118773C", VA = "0x118773C")]
	private ArrhythmiaECGMover FindAvailable(ArrhythmiaECGMover[] movers)
	{
		return null;
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x1186D74", Offset = "0x1186D74", VA = "0x1186D74")]
	private ArrhythmiaECGMover[] CreateBeatMoverSet(int numberOfBeatMovers, GameObject beatObject, ArrhythmiaECGMover.ArrhythmiaEcgTypes ecgType = ArrhythmiaECGMover.ArrhythmiaEcgTypes.Sinus)
	{
		return null;
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1186CCC", Offset = "0x1186CCC", VA = "0x1186CCC")]
	private void DeleteBeatMoverSet(ArrhythmiaECGMover[] beatMovers)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x11879E8", Offset = "0x11879E8", VA = "0x11879E8")]
	public void OnECGToggled(bool val)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x1187A8C", Offset = "0x1187A8C", VA = "0x1187A8C")]
	public void ChangECGDotAnimationSpeed(float val)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x1187B6C", Offset = "0x1187B6C", VA = "0x1187B6C")]
	public ArrhythmiaECGController()
	{
	}
}
[Token(Token = "0x200017F")]
public class ArrhythmiaECGMover : ECGMover_Base
{
	[Token(Token = "0x200058A")]
	public enum ArrhythmiaEcgTypes
	{
		[Token(Token = "0x4002BBB")]
		Grid,
		[Token(Token = "0x4002BBC")]
		Sinus,
		[Token(Token = "0x4002BBD")]
		AvBlock4,
		[Token(Token = "0x4002BBE")]
		Tach,
		[Token(Token = "0x4002BBF")]
		Flutter,
		[Token(Token = "0x4002BC0")]
		Afib
	}

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ArrhythmiaEcgTypes ecgType;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string beatName;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ArrhythmiaECGController ecgController;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float bpm;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool moving;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool trainComplete;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float distanceToEnd;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float distanceTraveled;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float trainLength;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<RectTransform> trainObjects;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RectTransform tempRectTransform;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool deleteWhenDone;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float distanceToMove;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float startPosition;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float percentWidth;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x1187BEC", Offset = "0x1187BEC", VA = "0x1187BEC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x1187C58", Offset = "0x1187C58", VA = "0x1187C58")]
	public void Update()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x1187CE8", Offset = "0x1187CE8", VA = "0x1187CE8", Slot = "4")]
	public override void ExecuteUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1187838", Offset = "0x1187838", VA = "0x1187838")]
	public void AddToTrain(GameObject value)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x118806C", Offset = "0x118806C", VA = "0x118806C")]
	private float LengthOfTrain()
	{
		return default(float);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1188178", Offset = "0x1188178", VA = "0x1188178")]
	public void MoveTrainToEnd()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1187950", Offset = "0x1187950", VA = "0x1187950")]
	public void DeleteMoverWhenDone()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x118804C", Offset = "0x118804C", VA = "0x118804C")]
	private float bpmAdjustImageSize()
	{
		return default(float);
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1188214", Offset = "0x1188214", VA = "0x1188214")]
	public ArrhythmiaECGMover()
	{
	}
}
[Token(Token = "0x2000180")]
public class BPMPanelRealFakeManager : MonoBehaviour
{
	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject realBpmPanel;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fakeBpmPanel;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject speedPanel;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool realBpmPanelIsActive;

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xF7B490", Offset = "0xF7B490", VA = "0xF7B490")]
	public void Awake()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xF7B4C8", Offset = "0xF7B4C8", VA = "0xF7B4C8")]
	public void ToggleBPM(bool value)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xF7B540", Offset = "0xF7B540", VA = "0xF7B540")]
	public void ActivateFakeBPM()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xF7B5A0", Offset = "0xF7B5A0", VA = "0xF7B5A0")]
	public void ActivateRealBPM()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xF7B604", Offset = "0xF7B604", VA = "0xF7B604")]
	public BPMPanelRealFakeManager()
	{
	}
}
[Token(Token = "0x2000181")]
public class BpmSpeedControl : MonoBehaviour
{
	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12BF4", Offset = "0xD12BF4")]
	public Slider speed;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider bpm;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12C2C", Offset = "0xD12C2C")]
	public GameObject startSearch;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] animationControllerNames;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string sinusLoopProperty;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string pauseMultiplierAnimationProperty;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string beatMultiplierAnimationProperty;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float heartBeatMultiplier;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float doNothingMultiplier;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float speedMultiplier;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lastBPM;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Animator> animatorList;

	[Token(Token = "0x4000B71")]
	private const float doNothingLength = 0.067f;

	[Token(Token = "0x4000B72")]
	private const float mainLength = 1.4f;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xF82B3C", Offset = "0xF82B3C", VA = "0xF82B3C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xF82CC8", Offset = "0xF82CC8", VA = "0xF82CC8")]
	public void UpdateBPM(float bpm)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xF82F54", Offset = "0xF82F54", VA = "0xF82F54")]
	public void UpdateSpeed(float value)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xF82DEC", Offset = "0xF82DEC", VA = "0xF82DEC")]
	private void UpdateAnimatorListParameters()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xF82D00", Offset = "0xF82D00", VA = "0xF82D00")]
	private void CalculateMultipliers()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xF82FB0", Offset = "0xF82FB0", VA = "0xF82FB0")]
	public void SetSinusActive(bool value)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xF830C0", Offset = "0xF830C0", VA = "0xF830C0")]
	public bool IsSinusActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xF83130", Offset = "0xF83130", VA = "0xF83130")]
	public float CalcHeartBeatTotalTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xF831DC", Offset = "0xF831DC", VA = "0xF831DC")]
	public float getLastBPM()
	{
		return default(float);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xF831E4", Offset = "0xF831E4", VA = "0xF831E4")]
	public BpmSpeedControl()
	{
	}
}
[Token(Token = "0x2000182")]
public class BpmSpeedControlWithFX : MonoBehaviour
{
	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12C64", Offset = "0xD12C64")]
	public Slider speed;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider bpm;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12C9C", Offset = "0xD12C9C")]
	public GameObject startSearch;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] animationControllerNames;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string sinusLoopProperty;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string pauseMultiplierAnimationProperty;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string beatMultiplierAnimationProperty;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator[] manuallyAddedAnimators;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float heartBeatMultiplier;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float doNothingMultiplier;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float speedMultiplier;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastBPM;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Animator> animatorList;

	[Token(Token = "0x4000B80")]
	private const float _DoNothingLength = 1f;

	[Token(Token = "0x4000B81")]
	private const float _MainLength = 1.6f;

	[Token(Token = "0x4000B82")]
	private const float _SinusFadeInTime = 0.4f;

	[Token(Token = "0x4000B83")]
	private const float _SinusFadeOutTime = 0.4f;

	[Token(Token = "0x4000B84")]
	private const float _SinusFadeInGoal = 1f;

	[Token(Token = "0x4000B85")]
	private const float _SinusFadeOutGoal = 0f;

	[Token(Token = "0x4000B86")]
	private const float _DoNothingFadeInTime = 0.8f;

	[Token(Token = "0x4000B87")]
	private const float _DoNothingFadeOutTime = 0.8f;

	[Token(Token = "0x4000B88")]
	private const float _DoNothingFadeInGoal = 1f;

	[Token(Token = "0x4000B89")]
	private const float _DoNothingFadeOutGoal = 0.3f;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float sinusFadeLerpValue;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float sinusAccumilatorValue;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float sinusLerpStart;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float sinusLerpFinish;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float sinusFadeTime;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float doNothingFadeLerpValue;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float doNothingAccumilatorValue;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float doNothingLerpStart;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float doNothingLerpFinish;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float doNothingFadeTime;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool sinusLerpActive;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool doNothingLerpActive;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool bloodFxIsOn;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private bool initialized;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xF83D10", Offset = "0xF83D10", VA = "0xF83D10")]
	public void Init()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xF841AC", Offset = "0xF841AC", VA = "0xF841AC")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xF8400C", Offset = "0xF8400C", VA = "0xF8400C")]
	public void UpdateBPM(float bpm)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xF840D4", Offset = "0xF840D4", VA = "0xF840D4")]
	public void UpdateSpeed(float value)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xF84414", Offset = "0xF84414", VA = "0xF84414")]
	private void UpdateAnimatorListParameters()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xF8433C", Offset = "0xF8433C", VA = "0xF8433C")]
	private void CalculateAnimationMultipliers()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xF8457C", Offset = "0xF8457C", VA = "0xF8457C")]
	public void SetSinusActive(bool value)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xF8468C", Offset = "0xF8468C", VA = "0xF8468C")]
	public bool IsSinusActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xF846FC", Offset = "0xF846FC", VA = "0xF846FC")]
	public float CalcHeartBeatTotalTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xF847A8", Offset = "0xF847A8", VA = "0xF847A8")]
	public float getLastBPM()
	{
		return default(float);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xF847B0", Offset = "0xF847B0", VA = "0xF847B0")]
	public void StartBlood()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xF84824", Offset = "0xF84824", VA = "0xF84824")]
	public void EndBlood()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xF84858", Offset = "0xF84858", VA = "0xF84858")]
	private void SinusFadeLerp(bool value)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xF847E4", Offset = "0xF847E4", VA = "0xF847E4")]
	private void DoNothingFadeLerp(bool value)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xF84894", Offset = "0xF84894", VA = "0xF84894")]
	public void BloodButtonPressed()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xF848A4", Offset = "0xF848A4", VA = "0xF848A4")]
	public BpmSpeedControlWithFX()
	{
	}
}
[Token(Token = "0x2000183")]
public class CCSTypeIdentifier : MonoBehaviour
{
	[Token(Token = "0x200058B")]
	public enum ccsTypes
	{
		[Token(Token = "0x4002BC2")]
		atrial,
		[Token(Token = "0x4002BC3")]
		ventricle,
		[Token(Token = "0x4002BC4")]
		SaNode,
		[Token(Token = "0x4002BC5")]
		AfibCrazyFoci
	}

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ccsTypes ccsType;

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xF89450", Offset = "0xF89450", VA = "0xF89450")]
	public CCSTypeIdentifier()
	{
	}
}
[Token(Token = "0x2000184")]
public class CallArrhythmiaCCSControl : MonoBehaviour
{
	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrhythmiaCCSControl arrythmiaCCSControl;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool transmit;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xF89D34", Offset = "0xF89D34", VA = "0xF89D34")]
	public void AtrialConductive()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xF89D94", Offset = "0xF89D94", VA = "0xF89D94")]
	public void VentricleConductive()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xF89DF4", Offset = "0xF89DF4", VA = "0xF89DF4")]
	public CallArrhythmiaCCSControl()
	{
	}
}
[Token(Token = "0x2000185")]
public class CallArrhythmiaControl : MonoBehaviour
{
	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrhythmiaControl arrythmiaControl;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool transmit;

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xF89DFC", Offset = "0xF89DFC", VA = "0xF89DFC")]
	public void BloodClotOff()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xF89E60", Offset = "0xF89E60", VA = "0xF89E60")]
	public void BloodClotOn()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xF89EC4", Offset = "0xF89EC4", VA = "0xF89EC4")]
	public void BloodClotSync()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xF89F24", Offset = "0xF89F24", VA = "0xF89F24")]
	public void Afib1aEndBeat()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xF89F4C", Offset = "0xF89F4C", VA = "0xF89F4C")]
	public void Afib2aEndBeat()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xF89F50", Offset = "0xF89F50", VA = "0xF89F50")]
	public void Afib2bEndBeat()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xF89F54", Offset = "0xF89F54", VA = "0xF89F54")]
	public void Afib2cEndBeat()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xF89F7C", Offset = "0xF89F7C", VA = "0xF89F7C")]
	public void Afib3aEndBeat()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xF89FA4", Offset = "0xF89FA4", VA = "0xF89FA4")]
	public CallArrhythmiaControl()
	{
	}
}
[Token(Token = "0x2000186")]
public class CallArrhythmiaECGController : MonoBehaviour
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrhythmiaECGController ecgController;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool transmit;

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xF89FAC", Offset = "0xF89FAC", VA = "0xF89FAC")]
	public void SinusBeat()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xF8A00C", Offset = "0xF8A00C", VA = "0xF8A00C")]
	public void AvBlock1ABeat()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xF8A06C", Offset = "0xF8A06C", VA = "0xF8A06C")]
	public void AvBlock2ABeat()
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xF8A0CC", Offset = "0xF8A0CC", VA = "0xF8A0CC")]
	public void AvBlock2BBeat()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xF8A12C", Offset = "0xF8A12C", VA = "0xF8A12C")]
	public void AvBlock2CBeat()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xF8A18C", Offset = "0xF8A18C", VA = "0xF8A18C")]
	public void AvBlock2DBeat()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xF8A1EC", Offset = "0xF8A1EC", VA = "0xF8A1EC")]
	public void AvBlock3ABeat()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xF8A24C", Offset = "0xF8A24C", VA = "0xF8A24C")]
	public void AvBlock3BBeat()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xF8A2AC", Offset = "0xF8A2AC", VA = "0xF8A2AC")]
	public void AvBlock4ABeat()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xF8A30C", Offset = "0xF8A30C", VA = "0xF8A30C")]
	public void AvBlock4BBeat()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xF8A36C", Offset = "0xF8A36C", VA = "0xF8A36C")]
	public void AvBlock4CBeat()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xF8A3CC", Offset = "0xF8A3CC", VA = "0xF8A3CC")]
	public void AvBlock4DBeat()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xF8A42C", Offset = "0xF8A42C", VA = "0xF8A42C")]
	public void AvBlock4EBeat()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xF8A48C", Offset = "0xF8A48C", VA = "0xF8A48C")]
	public void TachycardiaBeat()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xF8A4EC", Offset = "0xF8A4EC", VA = "0xF8A4EC")]
	public void Flutter1aBeat()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xF8A54C", Offset = "0xF8A54C", VA = "0xF8A54C")]
	public void Flutter1bBeat()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xF8A5AC", Offset = "0xF8A5AC", VA = "0xF8A5AC")]
	public void Flutter2aBeat()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xF8A60C", Offset = "0xF8A60C", VA = "0xF8A60C")]
	public void Flutter3aBeat()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xF8A66C", Offset = "0xF8A66C", VA = "0xF8A66C")]
	public void Afib1aBeat()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xF8A6DC", Offset = "0xF8A6DC", VA = "0xF8A6DC")]
	public void Afib2aBeat()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xF8A750", Offset = "0xF8A750", VA = "0xF8A750")]
	public void Afib2bBeat()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xF8A7C4", Offset = "0xF8A7C4", VA = "0xF8A7C4")]
	public void Afib2cBeat()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xF8A838", Offset = "0xF8A838", VA = "0xF8A838")]
	public void Afib3aBeat()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xF8A8AC", Offset = "0xF8A8AC", VA = "0xF8A8AC")]
	public CallArrhythmiaECGController()
	{
	}
}
[Token(Token = "0x2000187")]
public class CallBpmSpeedControlWithFX : MonoBehaviour
{
	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BpmSpeedControlWithFX bpmSpeedControl;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool transmit;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xF8A974", Offset = "0xF8A974", VA = "0xF8A974")]
	public void StartBlood()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xF8A9D0", Offset = "0xF8A9D0", VA = "0xF8A9D0")]
	public void EndBlood()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xF8AA2C", Offset = "0xF8AA2C", VA = "0xF8AA2C")]
	public CallBpmSpeedControlWithFX()
	{
	}
}
[Token(Token = "0x2000188")]
public class ClickController : BasicSelector
{
	[Token(Token = "0x200058C")]
	public delegate void EventHandler();

	[Token(Token = "0x14000011")]
	public event EventHandler ClickEvent
	{
		[Token(Token = "0x6000942")]
		[Address(RVA = "0xF8C3E0", Offset = "0xF8C3E0", VA = "0xF8C3E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21AF8", Offset = "0xD21AF8")]
		add
		{
		}
		[Token(Token = "0x6000943")]
		[Address(RVA = "0xF8C484", Offset = "0xF8C484", VA = "0xF8C484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21B08", Offset = "0xD21B08")]
		remove
		{
		}
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xF8C528", Offset = "0xF8C528", VA = "0xF8C528", Slot = "5")]
	public override void OnMouseUp()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xF8C5C4", Offset = "0xF8C5C4", VA = "0xF8C5C4", Slot = "6")]
	public override void OnRecordingMouseUp()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xF8C5C8", Offset = "0xF8C5C8", VA = "0xF8C5C8", Slot = "7")]
	public override void OnRecordingMouseDown()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xF8C52C", Offset = "0xF8C52C", VA = "0xF8C52C")]
	private void OnDown()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xF8C7D8", Offset = "0xF8C7D8", VA = "0xF8C7D8")]
	public ClickController()
	{
	}
}
[Token(Token = "0x2000189")]
public class CallCombinedManagerJustRight : MonoBehaviour
{
	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CombinedManagerJustRight combinedManager;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool transmit;

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xF8AA90", Offset = "0xF8AA90", VA = "0xF8AA90")]
	public void AnimationDone()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xF8AAEC", Offset = "0xF8AAEC", VA = "0xF8AAEC")]
	public void AnimationStart()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xF8AB48", Offset = "0xF8AB48", VA = "0xF8AB48")]
	public CallCombinedManagerJustRight()
	{
	}
}
[Token(Token = "0x200018A")]
public class CombinedManagerJustRight : MonoBehaviour
{
	[Token(Token = "0x200058D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C780", Offset = "0xD0C780")]
	private sealed class <ShowHeart>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CombinedManagerJustRight <>4__this;

		[Token(Token = "0x1700025D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002260")]
			[Address(RVA = "0xF8E534", Offset = "0xF8E534", VA = "0xF8E534", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002262")]
			[Address(RVA = "0xF8E59C", Offset = "0xF8E59C", VA = "0xF8E59C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xF8DF68", Offset = "0xF8DF68", VA = "0xF8DF68")]
		[DebuggerHidden]
		public <ShowHeart>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xF8DFA4", Offset = "0xF8DFA4", VA = "0xF8DFA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xF8DFA8", Offset = "0xF8DFA8", VA = "0xF8DFA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xF8E53C", Offset = "0xF8E53C", VA = "0xF8E53C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera startingCamera;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightCameraTarget;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftCameraTarget;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rightGeometryObject;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject leftGeometryObject;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator cameraAnimator;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LookAroundController lookAroundController;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool onlyRight;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CameraFade fade;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool waitUntilDoneEventFromAnimation;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool waitUntilStartEventFromAnimation;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float fadeTime;

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xF8DE48", Offset = "0xF8DE48", VA = "0xF8DE48")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xF8DEF8", Offset = "0xF8DEF8", VA = "0xF8DEF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21B18", Offset = "0xD21B18")]
	private IEnumerator ShowHeart()
	{
		return null;
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xF8AAE4", Offset = "0xF8AAE4", VA = "0xF8AAE4")]
	public void AnimationDone()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xF8AB40", Offset = "0xF8AB40", VA = "0xF8AB40")]
	public void AnimationStart()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xF8DF94", Offset = "0xF8DF94", VA = "0xF8DF94")]
	public CombinedManagerJustRight()
	{
	}
}
[Token(Token = "0x200018B")]
public class DiabeticHeartController : MonoBehaviour
{
	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12CE4", Offset = "0xD12CE4")]
	public string fatProperty;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string inflamationProperty;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string inflamationOtherProperty;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string fibrosisProperty;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string plaqueProperty;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12D1C", Offset = "0xD12D1C")]
	public float fatMin;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fatMax;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float fatBlendMin;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float fatBlendMax;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float inflamationMin;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float inflamationMax;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float fibrosisMin;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float fibrosisMax;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float plaqueMin;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float plaqueMax;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float threshold;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12D54", Offset = "0xD12D54")]
	public Renderer[] rends;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SkinnedMeshRenderer[] fatBlend;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Renderer[] fibrosisRends;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12D8C", Offset = "0xD12D8C")]
	public Slider fatSlider;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Slider inflammationSlider;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Slider fibrosisSlider;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Slider plaqueSlider;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Button sliceButton;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button fullButton;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Toggle sliceToggle;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Toggle fullToggle;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12DC4", Offset = "0xD12DC4")]
	public ZoneManager zMan;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] fullObject;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject[] sliceObject;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x108B578", Offset = "0x108B578", VA = "0x108B578")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x108B95C", Offset = "0x108B95C", VA = "0x108B95C")]
	public void OnPadChanged(Vector2 val)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x108BA2C", Offset = "0x108BA2C", VA = "0x108BA2C")]
	public void OnPlaqueSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x108BBB0", Offset = "0x108BBB0", VA = "0x108BBB0")]
	public void OnFibrosisSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x108BD34", Offset = "0x108BD34", VA = "0x108BD34")]
	public void OnFatSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x108BF70", Offset = "0x108BF70", VA = "0x108BF70")]
	public void OnInflamationSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x108C1B8", Offset = "0x108C1B8", VA = "0x108C1B8")]
	public void OnChangeZone(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x108C304", Offset = "0x108C304", VA = "0x108C304")]
	public void OnFullClicked()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x108C470", Offset = "0x108C470", VA = "0x108C470")]
	public void OnSliceClicked()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x108C5DC", Offset = "0x108C5DC", VA = "0x108C5DC")]
	public DiabeticHeartController()
	{
	}
}
[Token(Token = "0x200018C")]
public class DiabeticHeartControllerV2 : MonoBehaviour
{
	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12DFC", Offset = "0xD12DFC")]
	public string fatProperty;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string inflamationProperty;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string fibrosisProperty;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string plaqueProperty;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12E34", Offset = "0xD12E34")]
	public float fatMin;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fatMax;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fatBlendMin;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fatBlendMax;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float inflamationMin;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float inflamationMax;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fibrosisMin;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float fibrosisMax;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float plaqueMin;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float plaqueMax;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float threshold;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12E6C", Offset = "0xD12E6C")]
	public Renderer[] rends;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SkinnedMeshRenderer[] fatBlend;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Renderer[] fibrosisRends;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SkinnedMeshRenderer[] fibrosisBlend;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12EA4", Offset = "0xD12EA4")]
	public Slider fatSlider;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float inflammationSlider;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Slider fibrosisSlider;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Slider plaqueSlider;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Button sliceButton;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button fullButton;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Toggle sliceToggle;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Toggle fullToggle;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12EDC", Offset = "0xD12EDC")]
	public ZoneManager zMan;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ScrollRect pad;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject[] fullObject;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject[] sliceObject;

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x108C6E0", Offset = "0x108C6E0", VA = "0x108C6E0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x108C83C", Offset = "0x108C83C", VA = "0x108C83C")]
	public void OnPadChanged(Vector2 val)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x108CEB0", Offset = "0x108CEB0", VA = "0x108CEB0")]
	public void OnChangeZone(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x108CFFC", Offset = "0x108CFFC", VA = "0x108CFFC")]
	public void OnFullClicked()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x108D168", Offset = "0x108D168", VA = "0x108D168")]
	public void OnSliceClicked()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x108D2D4", Offset = "0x108D2D4", VA = "0x108D2D4")]
	public DiabeticHeartControllerV2()
	{
	}
}
[Token(Token = "0x200018D")]
public class BpmSpeedControlForHeartFailure : MonoBehaviour
{
	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12F14", Offset = "0xD12F14")]
	public Slider speed;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider bpm;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ZoneManager zoneManager;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12F4C", Offset = "0xD12F4C")]
	public GameObject startSearch;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] animationControllerNames;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string sinusLoopProperty;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string pauseMultiplierAnimationProperty;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string beatMultiplierAnimationProperty;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator[] manuallyAddedAnimators;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float heartBeatMultiplier;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float doNothingMultiplier;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float speedMultiplier;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastBPM;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Animator> animatorList;

	[Token(Token = "0x4000BFB")]
	private const float _DoNothingLength = 1f;

	[Token(Token = "0x4000BFC")]
	private const float _MainLength = 1.6f;

	[Token(Token = "0x4000BFD")]
	private const float _SinusFadeInTime = 0.4f;

	[Token(Token = "0x4000BFE")]
	private const float _SinusFadeOutTime = 0.4f;

	[Token(Token = "0x4000BFF")]
	private const float _SinusFadeInGoal = 1f;

	[Token(Token = "0x4000C00")]
	private const float _SinusFadeOutGoal = 0f;

	[Token(Token = "0x4000C01")]
	private const float _DoNothingFadeInTime = 0.8f;

	[Token(Token = "0x4000C02")]
	private const float _DoNothingFadeOutTime = 0.8f;

	[Token(Token = "0x4000C03")]
	private const float _DoNothingFadeInGoal = 1f;

	[Token(Token = "0x4000C04")]
	private const float _DoNothingFadeOutGoal = 0.3f;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float doNothingFadeLerpValue;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float doNothingAccumilatorValue;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float doNothingLerpStart;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float doNothingLerpFinish;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float doNothingFadeTime;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool doNothingLerpActive;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool bloodFxIsOn;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int activeZone;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool initialized;

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xF8325C", Offset = "0xF8325C", VA = "0xF8325C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xF83650", Offset = "0xF83650", VA = "0xF83650")]
	public void Update()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xF835BC", Offset = "0xF835BC", VA = "0xF835BC")]
	public void UpdateBPM(float bpm)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xF835F4", Offset = "0xF835F4", VA = "0xF835F4")]
	public void UpdateSpeed(float value)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xF83828", Offset = "0xF83828", VA = "0xF83828")]
	private void UpdateAnimatorListParameters()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xF83750", Offset = "0xF83750", VA = "0xF83750")]
	private void CalculateAnimationMultipliers()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xF83990", Offset = "0xF83990", VA = "0xF83990")]
	public void SetSinusActive(bool value)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xF83AA0", Offset = "0xF83AA0", VA = "0xF83AA0")]
	public bool IsSinusActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xF83B10", Offset = "0xF83B10", VA = "0xF83B10")]
	public float CalcHeartBeatTotalTime()
	{
		return default(float);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xF83BBC", Offset = "0xF83BBC", VA = "0xF83BBC")]
	public float getLastBPM()
	{
		return default(float);
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xF83BC4", Offset = "0xF83BC4", VA = "0xF83BC4")]
	public void StartBlood()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xF83C38", Offset = "0xF83C38", VA = "0xF83C38")]
	public void EndBlood()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xF83C6C", Offset = "0xF83C6C", VA = "0xF83C6C")]
	private void SinusFadeLerp(bool value)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xF83BF8", Offset = "0xF83BF8", VA = "0xF83BF8")]
	private void DoNothingFadeLerp(bool value)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xF83C70", Offset = "0xF83C70", VA = "0xF83C70")]
	public void BloodButtonPressed()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xF83C80", Offset = "0xF83C80", VA = "0xF83C80")]
	private void ChangeZone(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xF83C90", Offset = "0xF83C90", VA = "0xF83C90")]
	public BpmSpeedControlForHeartFailure()
	{
	}
}
[Token(Token = "0x200018E")]
public class CallBpmSpeedControlForHeartFailure : MonoBehaviour
{
	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BpmSpeedControlForHeartFailure bpmSpeedControl;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool transmit;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xF8A8B4", Offset = "0xF8A8B4", VA = "0xF8A8B4")]
	public void StartBlood()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xF8A910", Offset = "0xF8A910", VA = "0xF8A910")]
	public void EndBlood()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xF8A96C", Offset = "0xF8A96C", VA = "0xF8A96C")]
	public CallBpmSpeedControlForHeartFailure()
	{
	}
}
[Token(Token = "0x200018F")]
public class YOU_Heart_CAD : MonoBehaviour
{
	[Token(Token = "0x200058E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C790", Offset = "0xD0C790")]
	private sealed class <FadeOutStent>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YOU_Heart_CAD <>4__this;

		[Token(Token = "0x4002BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <fadeValue>5__2;

		[Token(Token = "0x4002BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <tempVal>5__3;

		[Token(Token = "0x4002BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <tempTime>5__4;

		[Token(Token = "0x1700025F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002266")]
			[Address(RVA = "0x21C4ED0", Offset = "0x21C4ED0", VA = "0x21C4ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002268")]
			[Address(RVA = "0x21C4F38", Offset = "0x21C4F38", VA = "0x21C4F38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x21C4BC0", Offset = "0x21C4BC0", VA = "0x21C4BC0")]
		[DebuggerHidden]
		public <FadeOutStent>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x21C4BFC", Offset = "0x21C4BFC", VA = "0x21C4BFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x21C4C00", Offset = "0x21C4C00", VA = "0x21C4C00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x21C4ED8", Offset = "0x21C4ED8", VA = "0x21C4ED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12F84", Offset = "0xD12F84")]
	public SkinnedMeshRenderer arteryInterior;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer plaque;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkinnedMeshRenderer mainCap;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material capMat;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material interiorMat;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12FBC", Offset = "0xD12FBC")]
	public Slider blockageScroller;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD12FF4", Offset = "0xD12FF4")]
	public CanvasGroup activateStentBtnCanvasGroup;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CanvasGroup replayStentBtnCanvasGroup;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject activateStent;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject replayStent;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material stentMaterial;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1302C", Offset = "0xD1302C")]
	public Color activeTintColor;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color deactiveTintColor;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material fullBloodMat;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material BloodMat_A;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material BloodMat_B;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material BloodMat_C_above;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material BloodMat_C_below;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject noPlaqueFX;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject plaqueFX_A;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject plaqueFX_B;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject plaqueFX_C;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13064", Offset = "0xD13064")]
	public float SmoothSpeed;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1309C", Offset = "0xD1309C")]
	public Animator stentAnim;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool startedStent;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool hasBloodFX;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Mesh arteryMesh;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Mesh plaqueMesh;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Mesh mainMesh;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float arteryIntVal;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float plaqueVal;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float plaqueValB;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float mainVal;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float finalMainCapVal;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float finalArteryIntVal;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float finalPlaqueVal;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float finalPlaqueBVal;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float finalSliderVal;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float capMatVal;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float matMappedVal;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float currentSliderVal;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float timeParameter;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private YOU_Heart_CAD_ControlStentBlends stentBlendCtrl;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Image stentImage;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Color tempFullTint;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Color tempATint;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Color tempBTint;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Color tempCTint_above;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Color tempCTint_below;

	[Token(Token = "0x4000C41")]
	public const float stentMinValue = 0.749f;

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x21C28A8", Offset = "0x21C28A8", VA = "0x21C28A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x21C3400", Offset = "0x21C3400", VA = "0x21C3400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x21C2EA0", Offset = "0x21C2EA0", VA = "0x21C2EA0")]
	private void UpdateBlendshapes(float sliderVal)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x21C42D4", Offset = "0x21C42D4", VA = "0x21C42D4")]
	private void UpdateCapMaterial(float sliderVal)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x21C4670", Offset = "0x21C4670", VA = "0x21C4670")]
	public void StartStentEvent()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x21C4084", Offset = "0x21C4084", VA = "0x21C4084")]
	public void ResetBlockageSlider()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x21C4774", Offset = "0x21C4774", VA = "0x21C4774")]
	public void ResetStentEvent()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x21C499C", Offset = "0x21C499C", VA = "0x21C499C")]
	public void ReplayStentEvent()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x21C4B50", Offset = "0x21C4B50", VA = "0x21C4B50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21B7C", Offset = "0xD21B7C")]
	private IEnumerator FadeOutStent()
	{
		return null;
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x21C3654", Offset = "0x21C3654", VA = "0x21C3654")]
	public void HandleFX(bool isOn, float sliderVal)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x21C4BEC", Offset = "0x21C4BEC", VA = "0x21C4BEC")]
	public YOU_Heart_CAD()
	{
	}
}
[Token(Token = "0x2000190")]
public class YOU_Heart_CAD_ControlStentBlends : MonoBehaviour
{
	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startStentBlend;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool reduceSlider;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x21C4F40", Offset = "0x21C4F40", VA = "0x21C4F40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x21C4F48", Offset = "0x21C4F48", VA = "0x21C4F48")]
	public void StartStentBlend(int id)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x21C4F54", Offset = "0x21C4F54", VA = "0x21C4F54")]
	public void ReduceSlider()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x21C4F60", Offset = "0x21C4F60", VA = "0x21C4F60")]
	public YOU_Heart_CAD_ControlStentBlends()
	{
	}
}
[Token(Token = "0x2000191")]
public class YOU_Heart_CAD_ParticleSpeedControl : MonoBehaviour
{
	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScrollRect scrollerControl;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minParticleSpeed;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem[] systems;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x21C4F68", Offset = "0x21C4F68", VA = "0x21C4F68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x21C4FF0", Offset = "0x21C4FF0", VA = "0x21C4FF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x21C512C", Offset = "0x21C512C", VA = "0x21C512C")]
	public YOU_Heart_CAD_ParticleSpeedControl()
	{
	}
}
[Token(Token = "0x2000192")]
public class YOU_Heart_HeartFailure_AudioController : MonoBehaviour
{
	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> scoreClips;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD130D4", Offset = "0xD130D4")]
	public float globalVolume;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float stateVolume;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float uiVolume;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource uiAudioSource;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AudioSource> scoreSources;

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x21C5140", Offset = "0x21C5140", VA = "0x21C5140")]
	private void Start()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x21C53B4", Offset = "0x21C53B4", VA = "0x21C53B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x21C557C", Offset = "0x21C557C", VA = "0x21C557C")]
	public void TriggerButtonClickAudio(AudioClip wantedClip)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x21C562C", Offset = "0x21C562C", VA = "0x21C562C")]
	public YOU_Heart_HeartFailure_AudioController()
	{
	}
}
[Token(Token = "0x2000193")]
public class YOU_Heart_HeartFailure_BPMManager : MonoBehaviour
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD130E8", Offset = "0xD130E8")]
	public Slider bpmScroller;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator blContainerAnimator;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13120", Offset = "0xD13120")]
	public Animator slicedHeartAnim;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float curBPMSliderVal;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private uint m_LastBPM;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_LastBPM_Init;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool m_Settling;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_SettleTime;

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x21C5648", Offset = "0x21C5648", VA = "0x21C5648")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x21C564C", Offset = "0x21C564C", VA = "0x21C564C")]
	private void Update()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x21C5670", Offset = "0x21C5670", VA = "0x21C5670")]
	private void HandleBPMSlider()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x21C5794", Offset = "0x21C5794", VA = "0x21C5794")]
	private void HandleHFAnim()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x21C586C", Offset = "0x21C586C", VA = "0x21C586C")]
	public YOU_Heart_HeartFailure_BPMManager()
	{
	}
}
[Token(Token = "0x2000194")]
public class YOU_Heart_HeartFailure_BlandShapeFX_manager : MonoBehaviour
{
	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13158", Offset = "0xD13158")]
	public ScrollRect scrollRect;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer cutawayMainMesh;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13190", Offset = "0xD13190")]
	public Color activeColor;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color deactiveColor;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material fxA;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material fxB;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 scrollPos;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 finalScrollPos;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator scrollRectAnim;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color finalFXColor;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isReseting;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private uint m_LastX;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private uint m_LastY;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool m_Settling;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_SettleTime;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x21C5874", Offset = "0x21C5874", VA = "0x21C5874")]
	private void Start()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x21C5A1C", Offset = "0x21C5A1C", VA = "0x21C5A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x21C5960", Offset = "0x21C5960", VA = "0x21C5960")]
	private void HandleAnimations(bool isActive)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x21C5F3C", Offset = "0x21C5F3C", VA = "0x21C5F3C")]
	private void UpdateBlendShapes(Vector2 curScrolPos)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x21C5CF4", Offset = "0x21C5CF4", VA = "0x21C5CF4")]
	private void HandleFX(bool isOn, Vector2 sliderVal)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x21C60EC", Offset = "0x21C60EC", VA = "0x21C60EC")]
	public void ResetScroller()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x21C60F8", Offset = "0x21C60F8", VA = "0x21C60F8")]
	public YOU_Heart_HeartFailure_BlandShapeFX_manager()
	{
	}
}
[Token(Token = "0x2000195")]
public class YOU_Heart_HeartFailure_HeartBeatAudio : MonoBehaviour
{
	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float beatVolume;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip largeBeat;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip smallBeat;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool mute;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource curAudioSource;

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x21C61A4", Offset = "0x21C61A4", VA = "0x21C61A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x21C6258", Offset = "0x21C6258", VA = "0x21C6258")]
	public void HeartBeat(int beatID)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x21C6398", Offset = "0x21C6398", VA = "0x21C6398")]
	public void MuteAudio()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x21C6438", Offset = "0x21C6438", VA = "0x21C6438")]
	public YOU_Heart_HeartFailure_HeartBeatAudio()
	{
	}
}
[Token(Token = "0x2000196")]
public class YOU_Heart_HeartFailure_ParticlSpeedControl : MonoBehaviour
{
	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BPMSlider;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] systems;

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x21C6448", Offset = "0x21C6448", VA = "0x21C6448")]
	private void Start()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x21C64D0", Offset = "0x21C64D0", VA = "0x21C64D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x21C661C", Offset = "0x21C661C", VA = "0x21C661C")]
	public YOU_Heart_HeartFailure_ParticlSpeedControl()
	{
	}
}
[Token(Token = "0x2000197")]
public class KidneyFXController : MonoBehaviour
{
	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZoneManager zman;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TofuPadController tofuPadController;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle urineToggle;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform sliceFXTransform;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform fullFXTransform;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool sliced;

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xFDF738", Offset = "0xFDF738", VA = "0xFDF738")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xFDF820", Offset = "0xFDF820", VA = "0xFDF820")]
	public void Update()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xFDFA0C", Offset = "0xFDFA0C", VA = "0xFDFA0C")]
	public void OnUrineToggled(bool val)
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xFDF8B8", Offset = "0xFDF8B8", VA = "0xFDF8B8")]
	private void FullSliceFX()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xFDFAD4", Offset = "0xFDFAD4", VA = "0xFDFAD4")]
	public KidneyFXController()
	{
	}
}
[Token(Token = "0x2000198")]
public class KidneyNephronController : MonoBehaviour
{
	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZoneManager zman;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TofuPadController tofuPadController;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle bloodToggle;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle urineToggle;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle bloodDyeToggle;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle urineDyeToggle;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _bloodDyeChangeTime;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _urineDyeChangeTime;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _bloodDyeOn;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _urineDyeOn;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject bloodFXGeo;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject urineFXGeo;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform sliceFXTransform;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform fullFXTransform;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool sliced;

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xFDFADC", Offset = "0xFDFADC", VA = "0xFDFADC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xFDFD5C", Offset = "0xFDFD5C", VA = "0xFDFD5C")]
	public void Update()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xFDFE98", Offset = "0xFDFE98", VA = "0xFDFE98")]
	public void OnUrineToggled(bool val)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xFDFF48", Offset = "0xFDFF48", VA = "0xFDFF48")]
	public void OnBloodToggled(bool val)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xFDFFD8", Offset = "0xFDFFD8", VA = "0xFDFFD8")]
	public void OnBloodDyeToggled(bool val)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xFDFF28", Offset = "0xFDFF28", VA = "0xFDFF28")]
	public void OnUrineDyeToggled(bool val)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xFDFFF8", Offset = "0xFDFFF8", VA = "0xFDFFF8")]
	public KidneyNephronController()
	{
	}
}
[Token(Token = "0x2000199")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD0A7B0", Offset = "0xD0A7B0")]
public class BlendDataScriptable : ScriptableObject
{
	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] vertSegment;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BlendShapeData[] blendShapeData;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ModelFrame[] modelFrames;

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xF82560", Offset = "0xF82560", VA = "0xF82560")]
	public BlendDataScriptable()
	{
	}
}
[Serializable]
[Token(Token = "0x200019A")]
public class VertData
{
	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int modelIndex;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int vertIndex;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 position;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 normal;

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x101E6B0", Offset = "0x101E6B0", VA = "0x101E6B0")]
	public VertData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019B")]
public class SplineData
{
	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion rotation;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VertData[] blendVerts;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool change;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float strength;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x233FB40", Offset = "0x233FB40", VA = "0x233FB40")]
	public SplineData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019C")]
public class BlendShapeData
{
	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SplineData[] splineSegments;

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xF825E8", Offset = "0xF825E8", VA = "0xF825E8")]
	public BlendShapeData()
	{
	}
}
[Serializable]
[Token(Token = "0x200019D")]
public class BlendShapeFrame
{
	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] vertices;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] normals;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3[] tangents;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float strength;

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xF825F0", Offset = "0xF825F0", VA = "0xF825F0")]
	public BlendShapeFrame()
	{
	}
}
[Serializable]
[Token(Token = "0x200019E")]
public class ModelFrame
{
	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BlendShapeFrame activeFrame;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BlendShapeFrame baseFrame;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BlendShapeFrame[] blendShapeFrame;

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xFBA2A8", Offset = "0xFBA2A8", VA = "0xFBA2A8")]
	public ModelFrame()
	{
	}
}
[Token(Token = "0x200019F")]
public class CodeDrivenVertBlending : MonoBehaviour
{
	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doBlend;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3[] unBlended;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] blended;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int vertexCount;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bakedVertexCount;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3[] deltaVertices;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] deltaNormals;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] deltaTangents;

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xF8C898", Offset = "0xF8C898", VA = "0xF8C898")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xF8CB64", Offset = "0xF8CB64", VA = "0xF8CB64")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xF8CBB4", Offset = "0xF8CBB4", VA = "0xF8CBB4")]
	public CodeDrivenVertBlending()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A0")]
public enum SurroundingSegmentAnimations
{
	[Token(Token = "0x4000C9E")]
	sA,
	[Token(Token = "0x4000C9F")]
	sB,
	[Token(Token = "0x4000CA0")]
	None
}
[Serializable]
[Token(Token = "0x20001A1")]
public enum SpecialCase
{
	[Token(Token = "0x4000CA2")]
	None,
	[Token(Token = "0x4000CA3")]
	Exit,
	[Token(Token = "0x4000CA4")]
	Enter
}
[Token(Token = "0x20001A2")]
public class ColonTester : MonoBehaviour
{
	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD131C8", Offset = "0xD131C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD131C8", Offset = "0xD131C8")]
	public Animation colonAnimation;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD13228", Offset = "0xD13228")]
	public Animation fecesPropigationAnimation;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD13260", Offset = "0xD13260")]
	public Animation fecesTransformAnimation;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13298", Offset = "0xD13298")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD13298", Offset = "0xD13298")]
	public int segment;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD132F8", Offset = "0xD132F8")]
	public colonAnimationType type;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13330", Offset = "0xD13330")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD13330", Offset = "0xD13330")]
	public SurroundingSegmentAnimations beforeSegment;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD13390", Offset = "0xD13390")]
	public SurroundingSegmentAnimations afterSegment;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD133C8", Offset = "0xD133C8")]
	public SpecialCase specialCase;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13400", Offset = "0xD13400")]
	[ReadOnly]
	public string[] colonAnimationNames;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[ReadOnly]
	public string[] fecesPropigatioAnimationNames;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[ReadOnly]
	public string[] fecesTransformAnimationnNames;

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xF8CFDC", Offset = "0xF8CFDC", VA = "0xF8CFDC")]
	public void LoadNames()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xF8D018", Offset = "0xF8D018", VA = "0xF8D018")]
	private void saveNames(Animation animation, out string[] animationNames)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xF8D2DC", Offset = "0xF8D2DC", VA = "0xF8D2DC")]
	public void TestSegment()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xF8D76C", Offset = "0xF8D76C", VA = "0xF8D76C")]
	private void TestSpecialCase()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xF8D834", Offset = "0xF8D834", VA = "0xF8D834")]
	public void ClearNames()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xF8D874", Offset = "0xF8D874", VA = "0xF8D874")]
	public ColonTester()
	{
	}
}
[Token(Token = "0x20001A3")]
public enum fecalType
{
	[Token(Token = "0x4000CB1")]
	Normal,
	[Token(Token = "0x4000CB2")]
	Diarrhea,
	[Token(Token = "0x4000CB3")]
	Constipation
}
[Serializable]
[Token(Token = "0x20001A4")]
public enum colonAnimationType
{
	[Token(Token = "0x4000CB5")]
	sA,
	[Token(Token = "0x4000CB6")]
	sB,
	[Token(Token = "0x4000CB7")]
	p
}
[Serializable]
[Token(Token = "0x20001A5")]
public class stoolChartInstance
{
	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public colonAnimationType type;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int segmentId;

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x21C72DC", Offset = "0x21C72DC", VA = "0x21C72DC")]
	public stoolChartInstance(colonAnimationType t, int id)
	{
	}
}
[Serializable]
[Token(Token = "0x20001A6")]
public class stoolChartRow
{
	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float time;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<stoolChartInstance> instances;

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x21C7314", Offset = "0x21C7314", VA = "0x21C7314")]
	public stoolChartRow(float t)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x21C7398", Offset = "0x21C7398", VA = "0x21C7398")]
	public void addInstance(stoolChartInstance i)
	{
	}
}
[Serializable]
[Token(Token = "0x20001A7")]
public class stoolPosRot
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 pos;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion rot;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x21C7400", Offset = "0x21C7400", VA = "0x21C7400")]
	public stoolPosRot()
	{
	}
}
[Token(Token = "0x20001A8")]
public class LargeIntestineFXController : MonoBehaviour
{
	[Token(Token = "0x200058F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C7A0", Offset = "0xD0C7A0")]
	private sealed class <playEnter>d__73 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation[] stool;

		[Token(Token = "0x4002BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int i;

		[Token(Token = "0x4002BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animation[] feces;

		[Token(Token = "0x17000261")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600226C")]
			[Address(RVA = "0xFF61EC", Offset = "0xFF61EC", VA = "0xFF61EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600226E")]
			[Address(RVA = "0xFF6254", Offset = "0xFF6254", VA = "0xFF6254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xFF5520", Offset = "0xFF5520", VA = "0xFF5520")]
		[DebuggerHidden]
		public <playEnter>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xFF60A0", Offset = "0xFF60A0", VA = "0xFF60A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xFF60A4", Offset = "0xFF60A4", VA = "0xFF60A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xFF61F4", Offset = "0xFF61F4", VA = "0xFF61F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000590")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C7B0", Offset = "0xD0C7B0")]
	private sealed class <LerpLiquid>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] oldVal;

		[Token(Token = "0x4002BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] newVal;

		[Token(Token = "0x4002BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material[] mats;

		[Token(Token = "0x4002BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int index;

		[Token(Token = "0x4002BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] properties;

		[Token(Token = "0x4002BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer FX;

		[Token(Token = "0x4002BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float lerpAmount;

		[Token(Token = "0x4002BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <i>5__2;

		[Token(Token = "0x17000263")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002272")]
			[Address(RVA = "0xFF6030", Offset = "0xFF6030", VA = "0xFF6030", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0xFF6098", Offset = "0xFF6098", VA = "0xFF6098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xFF593C", Offset = "0xFF593C", VA = "0xFF593C")]
		[DebuggerHidden]
		public <LerpLiquid>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xFF5EA0", Offset = "0xFF5EA0", VA = "0xFF5EA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xFF5EA4", Offset = "0xFF5EA4", VA = "0xFF5EA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xFF6038", Offset = "0xFF6038", VA = "0xFF6038", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1346C", Offset = "0xD1346C")]
	public Button fecalButton;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite onImage;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite offImage;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform panel;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD134A4", Offset = "0xD134A4")]
	public Slider fecalSlider;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button debugPauseButton;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button debugResetButton;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD134DC", Offset = "0xD134DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD134DC", Offset = "0xD134DC")]
	public GameObject[] fecal_matter;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1353C", Offset = "0xD1353C")]
	public int startColonAnimationIndex;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD13574", Offset = "0xD13574")]
	public int[] startFecesAnimationIndex;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD135AC", Offset = "0xD135AC")]
	public Renderer liquidFX;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer waterExtractionFX;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Renderer innerWaterExtractionFX;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Animator[] VeinWipeAnims;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ReadOnly]
	public int currentIndex;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ReadOnly]
	public int[] stoolPropIndex;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float timeIncriment;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13604", Offset = "0xD13604")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD13604", Offset = "0xD13604")]
	public TextAsset normalFile;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextAsset diarrheaFile;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextAsset constipationFile;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool debug;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD13664", Offset = "0xD13664")]
	public Animation animat;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1369C", Offset = "0xD1369C")]
	public Animation[] fecalAnimations;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD136D4", Offset = "0xD136D4")]
	public Animation[] stoolAnimat;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[ReadOnly]
	public List<stoolChartRow> rows;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public fecalType fecalState;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1371C", Offset = "0xD1371C")]
	public float InnerWaterExtractionFXLerpAmt;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float WaterExtractionFXLerpAmt;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float liquidFXLerpAmt;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected bool fecalOnState;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected Image fecalButtonNormalImage;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected Image fecalButtonDiarrheaImage;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected Image fecalButtonConstipationImage;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected Image fecalButtonImage;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected float startTime;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected Text debugText;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected bool pause;

	[Token(Token = "0x4000CE3")]
	protected const string START_PROPERTY = "start";

	[Token(Token = "0x4000CE4")]
	protected const string STATE_PROPERTY = "state";

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected string[] theData;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected string[] animationNames;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected string[] fecalAnimationNames;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string stoolPropPrefix;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int maxFecalPropelAnimations;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private stoolPosRot[] fecalTransforms;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<int> lastIds;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private string ambientLoop;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string innerWaterExtractionFXMaterialName;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string waterExtractionFXMaterialName;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string waterExtractionFXPropertyName;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string innerWaterExtractionFXPropertyName;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float[] waterExtractionMapping;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string liquidFXMaterialName;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string liquidFXPropertyPrefix;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float[] liquidFXMapping;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float[] innerWaterExtractionMapping;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0xFF2850", Offset = "0xFF2850", VA = "0xFF2850", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0xFF3644", Offset = "0xFF3644", VA = "0xFF3644")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xFF3650", Offset = "0xFF3650", VA = "0xFF3650")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0xFF370C", Offset = "0xFF370C", VA = "0xFF370C", Slot = "5")]
	public virtual void OnFecalButtonPressed()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xFF38D8", Offset = "0xFF38D8", VA = "0xFF38D8", Slot = "6")]
	public virtual void OnFecalNormalButtonPressed()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xFF392C", Offset = "0xFF392C", VA = "0xFF392C", Slot = "7")]
	public virtual void OnFecalDiarrheaButtonPressed()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xFF3984", Offset = "0xFF3984", VA = "0xFF3984", Slot = "8")]
	public virtual void OnFecalConstipationButtonPressed()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xFF3998", Offset = "0xFF3998", VA = "0xFF3998", Slot = "9")]
	public virtual void OnFecalSliderUpdated(float val)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xFF3AA4", Offset = "0xFF3AA4", VA = "0xFF3AA4", Slot = "10")]
	public virtual void OnPauseButtonPressed()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xFF3BB0", Offset = "0xFF3BB0", VA = "0xFF3BB0")]
	public void OnDebugResetButtonPressed()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xFF2A8C", Offset = "0xFF2A8C", VA = "0xFF2A8C")]
	protected void InitUI()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xFF3994", Offset = "0xFF3994", VA = "0xFF3994")]
	protected void UpdateButtons()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xFF3BC4", Offset = "0xFF3BC4", VA = "0xFF3BC4", Slot = "11")]
	protected virtual void startFecalProcess(bool hideButtons)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xFF47BC", Offset = "0xFF47BC", VA = "0xFF47BC", Slot = "12")]
	protected virtual void stopFecalProcess(bool hideButtons)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xFF3D78", Offset = "0xFF3D78", VA = "0xFF3D78")]
	protected void ShowButtons()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xFF3BC0", Offset = "0xFF3BC0", VA = "0xFF3BC0")]
	protected void HideButtons()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xFF48E0", Offset = "0xFF48E0", VA = "0xFF48E0", Slot = "13")]
	protected virtual void UpdateAnimator()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xFF5498", Offset = "0xFF5498", VA = "0xFF5498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21BE0", Offset = "0xD21BE0")]
	private IEnumerator playEnter(Animation[] stool, Animation[] feces, int i)
	{
		return null;
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xFF3394", Offset = "0xFF3394", VA = "0xFF3394")]
	private void LoadData(TextAsset theFile)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xFF554C", Offset = "0xFF554C", VA = "0xFF554C")]
	private void BuildDataRows()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xFF2D68", Offset = "0xFF2D68", VA = "0xFF2D68")]
	private void SaveAnimationNames()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xFF3D7C", Offset = "0xFF3D7C", VA = "0xFF3D7C")]
	private void UpdateInnerWaterExtractionFX()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xFF40E4", Offset = "0xFF40E4", VA = "0xFF40E4")]
	private void UpdateWaterExtractionFX()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xFF444C", Offset = "0xFF444C", VA = "0xFF444C")]
	private void UpdateLiquidFX()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xFF5884", Offset = "0xFF5884", VA = "0xFF5884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21C44", Offset = "0xD21C44")]
	private IEnumerator LerpLiquid(float[] oldVal, float[] newVal, string[] properties, Material[] mats, Renderer FX, int index, float lerpAmount)
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xFF5968", Offset = "0xFF5968", VA = "0xFF5968", Slot = "14")]
	protected virtual void StopAllAnimations()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xFF3514", Offset = "0xFF3514", VA = "0xFF3514")]
	private void PlayStartFrames()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xFF28E0", Offset = "0xFF28E0", VA = "0xFF28E0")]
	private void StoreFecalTransforms()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xFF5B24", Offset = "0xFF5B24", VA = "0xFF5B24", Slot = "15")]
	protected virtual void Reset()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xFF5C84", Offset = "0xFF5C84", VA = "0xFF5C84")]
	public LargeIntestineFXController()
	{
	}
}
[Token(Token = "0x20001A9")]
public class SplineBlendShapeControl : MonoBehaviour
{
	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C7C0", Offset = "0xD0C7C0")]
	private sealed class <SlowUpdateLoop>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SplineBlendShapeControl <>4__this;

		[Token(Token = "0x4002BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000265")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002278")]
			[Address(RVA = "0x2340520", Offset = "0x2340520", VA = "0x2340520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000266")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600227A")]
			[Address(RVA = "0x2340588", Offset = "0x2340588", VA = "0x2340588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x233DEA0", Offset = "0x233DEA0", VA = "0x233DEA0")]
		[DebuggerHidden]
		public <SlowUpdateLoop>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x2340414", Offset = "0x2340414", VA = "0x2340414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x2340418", Offset = "0x2340418", VA = "0x2340418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x2340528", Offset = "0x2340528", VA = "0x2340528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LinearLargeIntestineFXController intestineFXController;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PathCreator pathCreator;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EndOfPathInstruction endOfPathInstruction;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float length;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer[] models;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider sliderSeverity;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider sliderLocation;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int locationIndex;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BlendDataScriptable blendObject;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int activeSegIndex;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color offColor;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color onColor;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image[] colonImages;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LocalizeStringEvent colonPanelLabelLocalize;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LocalizedString[] localizedColonText;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD13754", Offset = "0xD13754")]
	private float blendRate;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool _slowUpdateInProgress;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private int slowUpdateOperationsPerFrame;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int _slowUpdateOperationCount;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _recentUserInput;

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x233D5BC", Offset = "0x233D5BC", VA = "0x233D5BC")]
	public void Init()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x233D7A0", Offset = "0x233D7A0", VA = "0x233D7A0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x233DDE4", Offset = "0x233DDE4", VA = "0x233DDE4")]
	private void SlowUpdate()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x233DE30", Offset = "0x233DE30", VA = "0x233DE30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21CA8", Offset = "0xD21CA8")]
	private IEnumerator SlowUpdateLoop()
	{
		return null;
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x233DECC", Offset = "0x233DECC", VA = "0x233DECC")]
	private void ProcessSegment(int i)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x233E478", Offset = "0x233E478", VA = "0x233E478")]
	public void CalculateNearestSplineSegments()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x233FB48", Offset = "0x233FB48", VA = "0x233FB48")]
	public void RestoreBaseVertices()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x233DCB0", Offset = "0x233DCB0", VA = "0x233DCB0")]
	private void UpdateDiarhea(float val)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x23400F0", Offset = "0x23400F0", VA = "0x23400F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x2340288", Offset = "0x2340288", VA = "0x2340288")]
	internal void SetSeveritySlider(Slider newSeveritySlider)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x2340330", Offset = "0x2340330", VA = "0x2340330")]
	internal void SetLocationSlider(Slider newLocationSlider)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x23403D8", Offset = "0x23403D8", VA = "0x23403D8")]
	private void OnSeveritySliderChanged(float value)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x23403E4", Offset = "0x23403E4", VA = "0x23403E4")]
	private void OnLocationSliderChanged(float value)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x23403F0", Offset = "0x23403F0", VA = "0x23403F0")]
	public SplineBlendShapeControl()
	{
	}
}
[Token(Token = "0x20001AA")]
public class LiverController : MonoBehaviour
{
	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD137A8", Offset = "0xD137A8")]
	public ZoneManager zMan;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider slide;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD137E0", Offset = "0xD137E0")]
	public float threshold;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x11AC870", Offset = "0x11AC870", VA = "0x11AC870")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x11AC874", Offset = "0x11AC874", VA = "0x11AC874")]
	private void UpdateMesh()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x11AC930", Offset = "0x11AC930", VA = "0x11AC930")]
	public void OnSliderValueChanged(float val)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x11AC934", Offset = "0x11AC934", VA = "0x11AC934")]
	public void OnZoneChanged(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x11AC938", Offset = "0x11AC938", VA = "0x11AC938")]
	public LiverController()
	{
	}
}
[Token(Token = "0x20001AB")]
public class AlveoliBreathingController : MonoBehaviour
{
	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZoneManager zman;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TofuPadController tofuPad;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13818", Offset = "0xD13818")]
	public SimpleMaterialPropertyController[] simpleMaterialPropertyControllers;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13850", Offset = "0xD13850")]
	public Toggle airFlowToggle;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13888", Offset = "0xD13888")]
	public GameObject[] toggleObjects;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD138C0", Offset = "0xD138C0")]
	public bool asthmaScene;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject startAlveoliAnimatorSearch;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD138F8", Offset = "0xD138F8")]
	public string animationControllerName;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD13908", Offset = "0xD13908")]
	public float animationSpeed;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD13918", Offset = "0xD13918")]
	[ReadOnly]
	public Slider diseaseSeveritySlider;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool initialized;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float breathSpeedAccumulator;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Animator> _alveoliAnimators;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _airToggleValue;

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x117979C", Offset = "0x117979C", VA = "0x117979C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1179A58", Offset = "0x1179A58", VA = "0x1179A58")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1179C0C", Offset = "0x1179C0C", VA = "0x1179C0C")]
	private void ModifySimpleMaterialPropertyControllers(float value)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x11799D8", Offset = "0x11799D8", VA = "0x11799D8")]
	public void AirToggleSelected(bool value)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x1179D04", Offset = "0x1179D04", VA = "0x1179D04")]
	private void GameObjectsSetActive(bool value)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1179DF8", Offset = "0x1179DF8", VA = "0x1179DF8")]
	private void SliderPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1179DFC", Offset = "0x1179DFC", VA = "0x1179DFC")]
	private void SliderPointerUp(PointerEventData data)
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1179E00", Offset = "0x1179E00", VA = "0x1179E00")]
	private void SliderEndDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x1179E04", Offset = "0x1179E04", VA = "0x1179E04")]
	public AlveoliBreathingController()
	{
	}
}
[Token(Token = "0x20001AC")]
public class AlveoliDiseaseController : MonoBehaviour
{
	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13950", Offset = "0xD13950")]
	[ReadOnly]
	public Slider diseaseSeveritySlider;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1399C", Offset = "0xD1399C")]
	public SimpleMaterialPropertyController[] simpleMaterialPropertyControllers;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD139D4", Offset = "0xD139D4")]
	public float deformationMin;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float deformationMax;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer[] diseaseSkinnedMeshRenderers;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13A0C", Offset = "0xD13A0C")]
	public GameObject startAlveoliAnimatorSearch;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD13A44", Offset = "0xD13A44")]
	public string animationControllerName;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Animator> _alveoliAnimators;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int Severity;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1179E14", Offset = "0x1179E14", VA = "0x1179E14")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x117A064", Offset = "0x117A064", VA = "0x117A064")]
	private void ModifySimpleMaterialPropertyControllers(float value)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x117A15C", Offset = "0x117A15C", VA = "0x117A15C")]
	private void UpdateDeformations(float value)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x117A308", Offset = "0x117A308", VA = "0x117A308")]
	private void UpdateAnimations(float value)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x117A024", Offset = "0x117A024", VA = "0x117A024")]
	public void DiseaseSliderChanged(float value)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x117A44C", Offset = "0x117A44C", VA = "0x117A44C")]
	public AlveoliDiseaseController()
	{
	}
}
[Token(Token = "0x20001AD")]
public class LungController : MonoBehaviour
{
	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13A54", Offset = "0xD13A54")]
	public bool COPD;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13A8C", Offset = "0xD13A8C")]
	public bool exteriorLungScene;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13AC4", Offset = "0xD13AC4")]
	public ZoneManager zMan;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13AFC", Offset = "0xD13AFC")]
	public TofuPadController tofuPadController;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13B34", Offset = "0xD13B34")]
	public Slider diseaseSlide;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle airflowToggle;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle inhalerToggle;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image inhalerFill;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle zoomOutToggle;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle zoomInToggle;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float healTime;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool healing;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float lingerTime;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool lingering;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float burnTime;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool burning;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float processTime;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13B6C", Offset = "0xD13B6C")]
	public GameObject inhaler;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject cameraInhalerEffects;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13BA4", Offset = "0xD13BA4")]
	public Animator[] animators;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationClip inhalerAnimation;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Animator inhalerBroncTubes;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool usingInhaler;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float breathSpeedAccumulator;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float animationLength;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float animationTime;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float severityRepairAmount;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13BDC", Offset = "0xD13BDC")]
	public Animator breathingAnim;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Animator[] blendingAnim;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SimpleMaterialPropertyController[] breathControllers;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int currentDisease;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13C14", Offset = "0xD13C14")]
	public Renderer[] healthyMeshFull;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Renderer[] healthyMeshSlice;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13C4C", Offset = "0xD13C4C")]
	[SerializeField]
	private bool hideBronchiolesGlassInCirculatoryOnFX;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Renderer[] bronchiolesMeshGlass;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13CA8", Offset = "0xD13CA8")]
	public SimpleMaterialPropertyController[] diseaseControllers;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Renderer[] diseaseMeshFull;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Renderer[] diseaseMeshSlice;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SkinnedMeshRenderer[] diseaseDeformation;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float deformationMin;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float deformationMax;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool updateBreathingRate;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	public bool updateDeformation;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	public bool isMainLung;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
	public bool isAsthma;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool isBroncs;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float asthmaSpeedIncrease;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float preAnimationSpeed;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float opacityVal;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float healthyAlpha;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float diseasedAlpha;

	[Token(Token = "0x4000D57")]
	private const string OPACITY_PROPERTY = "_Opacity";

	[Token(Token = "0x4000D58")]
	private const string CURRENT_DISEASE_PROPERTY = "currentDisease";

	[Token(Token = "0x4000D59")]
	private const string BLEND_PROPERTY = "Blend";

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x13D9CB8", Offset = "0x13D9CB8", VA = "0x13D9CB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x13D9D78", Offset = "0x13D9D78", VA = "0x13D9D78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x13D9E20", Offset = "0x13D9E20", VA = "0x13D9E20")]
	private void HandleZoneChange(int newZone, int oldZone)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x13D9F4C", Offset = "0x13D9F4C", VA = "0x13D9F4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x13DA418", Offset = "0x13DA418", VA = "0x13DA418")]
	public void ExitInhalerSettings()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x13DA55C", Offset = "0x13DA55C", VA = "0x13DA55C")]
	public void InitUI()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x13DA870", Offset = "0x13DA870", VA = "0x13DA870")]
	private void UpdateAlphas(float val)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x13DA888", Offset = "0x13DA888", VA = "0x13DA888")]
	private void UpdateFXOpacities()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x13DA8D0", Offset = "0x13DA8D0", VA = "0x13DA8D0")]
	private void UpdateFXOpacity(Renderer[] rends, float val)
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x13DAA3C", Offset = "0x13DAA3C", VA = "0x13DAA3C")]
	private void UpdateDisease(float val)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x13DAA88", Offset = "0x13DAA88", VA = "0x13DAA88")]
	private void UpdateMaterials(float val)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x13DAB84", Offset = "0x13DAB84", VA = "0x13DAB84")]
	private void UpdateDeformations(float val)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x13DACF8", Offset = "0x13DACF8", VA = "0x13DACF8")]
	private void UpdateBlendAnimator(float val)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x13DADE8", Offset = "0x13DADE8", VA = "0x13DADE8")]
	private void UpdateAnimationSpeed(float val)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x13DA810", Offset = "0x13DA810", VA = "0x13DA810")]
	public void OnDiseaseSliderValueChanged(float val)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x13DA788", Offset = "0x13DA788", VA = "0x13DA788")]
	public void OnAirToggled(bool val)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x13D9E24", Offset = "0x13D9E24", VA = "0x13D9E24")]
	private void HandleVirtualZone()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x13DB06C", Offset = "0x13DB06C", VA = "0x13DB06C")]
	public void OnInhalerToggle(bool val)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x13DAF00", Offset = "0x13DAF00", VA = "0x13DAF00")]
	private void ShowFXMesh()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x13DAF60", Offset = "0x13DAF60", VA = "0x13DAF60")]
	private void HideFXMesh()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x13DB25C", Offset = "0x13DB25C", VA = "0x13DB25C")]
	private void ShowMesh(Renderer[] mesh)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x13DB2CC", Offset = "0x13DB2CC", VA = "0x13DB2CC")]
	private void HideMesh(Renderer[] mesh)
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x13DB33C", Offset = "0x13DB33C", VA = "0x13DB33C")]
	public LungController()
	{
	}
}
[Token(Token = "0x20001AE")]
public class MecanimInhalerExit : StateMachineBehaviour
{
	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LungController lungControl;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x13DE108", Offset = "0x13DE108", VA = "0x13DE108", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x13DE17C", Offset = "0x13DE17C", VA = "0x13DE17C", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x13DE180", Offset = "0x13DE180", VA = "0x13DE180", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x13DE198", Offset = "0x13DE198", VA = "0x13DE198")]
	public MecanimInhalerExit()
	{
	}
}
[Token(Token = "0x20001AF")]
public class MouthController : MonoBehaviour
{
	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13CE0", Offset = "0xD13CE0")]
	public Animator mouthAnimator;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator glassAnimator;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13D18", Offset = "0xD13D18")]
	public Toggle chewToggle;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image fillChewingImage;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle swallowToggle;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image fillSwallowImage;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle mouthToggle;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle tongueToggle;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider chewSlider;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider swallowSlider;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider openSlider;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Slider tongueSlider;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool chewing;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool swallowing;

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xFBA2B0", Offset = "0xFBA2B0", VA = "0xFBA2B0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xFBA750", Offset = "0xFBA750", VA = "0xFBA750")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xFBA8F0", Offset = "0xFBA8F0", VA = "0xFBA8F0")]
	private void OnChewToggled(bool val)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xFBAB14", Offset = "0xFBAB14", VA = "0xFBAB14")]
	private void OnSwallowToggled(bool val)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xFBAC9C", Offset = "0xFBAC9C", VA = "0xFBAC9C")]
	private void OnMouthToggled(bool val)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xFBADF8", Offset = "0xFBADF8", VA = "0xFBADF8")]
	private void OnTongueToggled(bool val)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xFBAF54", Offset = "0xFBAF54", VA = "0xFBAF54")]
	private void OnSpeedChanged(float val)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xFBAFD8", Offset = "0xFBAFD8", VA = "0xFBAFD8")]
	private void OnTimeChanged(float val)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xFBAB10", Offset = "0xFBAB10", VA = "0xFBAB10")]
	private void OnChewSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xFBAC98", Offset = "0xFBAC98", VA = "0xFBAC98")]
	private void OnSwallowSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xFBB0C4", Offset = "0xFBB0C4", VA = "0xFBB0C4")]
	private void OnOpenSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xFBB0C8", Offset = "0xFBB0C8", VA = "0xFBB0C8")]
	private void OnTongueSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xFBAA74", Offset = "0xFBAA74", VA = "0xFBAA74")]
	private void TurnOffSliders()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xFBB0CC", Offset = "0xFBB0CC", VA = "0xFBB0CC")]
	public MouthController()
	{
	}
}
[Token(Token = "0x20001B0")]
public class FlipBookShaderController : MonoBehaviour
{
	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayLow;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float delayHigh;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fpsHigh;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fpsLow;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float frames;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cycleDuration;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delay;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float frameRate;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float frameTime;

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x22FBA08", Offset = "0x22FBA08", VA = "0x22FBA08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x22FBAF8", Offset = "0x22FBAF8", VA = "0x22FBAF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x22FBC48", Offset = "0x22FBC48", VA = "0x22FBC48")]
	public FlipBookShaderController()
	{
	}
}
[Token(Token = "0x20001B1")]
public class NeuronController : MonoBehaviour
{
	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13D50", Offset = "0xD13D50")]
	public Slider diseaseSlide;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle breakToggle;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle firingToggle;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle resetToggle;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image firingBackgroundImage;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image darkFill;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Slider speedSlider;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minSpeed;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxSpeed;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color backgroundColorWithPPP;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color backgroundColorNoPPP;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PostProcessingBehaviour pppBehaviour;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Camera camera;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13D88", Offset = "0xD13D88")]
	public Animator animNeuron;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool firing;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool broken;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool camTriggered;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CameraPositioner camPos;

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xFBEC90", Offset = "0xFBEC90", VA = "0xFBEC90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xFBEE30", Offset = "0xFBEE30", VA = "0xFBEE30")]
	private void UpdateBreakToggle()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xFBEEF0", Offset = "0xFBEEF0", VA = "0xFBEEF0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xFBF2E4", Offset = "0xFBF2E4", VA = "0xFBF2E4")]
	public void OnFiringToggled(bool val)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xFBF494", Offset = "0xFBF494", VA = "0xFBF494")]
	public void OnBreakToggled(bool val)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xFBF5A8", Offset = "0xFBF5A8", VA = "0xFBF5A8")]
	public void OnSpeedChange(float val)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xFBF270", Offset = "0xFBF270", VA = "0xFBF270")]
	public void OnDiseaseSliderValueChanged(float val)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xFBF67C", Offset = "0xFBF67C", VA = "0xFBF67C")]
	public void ResetToggle(bool val)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xFBF8F8", Offset = "0xFBF8F8", VA = "0xFBF8F8")]
	public NeuronController()
	{
	}
}
[Token(Token = "0x20001B2")]
public class NeuronSpawnController : MonoBehaviour
{
	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13DC0", Offset = "0xD13DC0")]
	public GameObject mainNeuron;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13DF8", Offset = "0xD13DF8")]
	public float diseaseBeginInSeconds;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13E30", Offset = "0xD13E30")]
	public float healthyToDiseaseInSeconds;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13E68", Offset = "0xD13E68")]
	public float BreakAfterDiseasedInSeconds;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool broken;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13EA0", Offset = "0xD13EA0")]
	public float joltSpeed;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13ED8", Offset = "0xD13ED8")]
	public bool repeatJolts;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delayPerMeter;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] timers;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool jolt;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool done;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool firing;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13F10", Offset = "0xD13F10")]
	public GameObject neuronPrefab;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13F48", Offset = "0xD13F48")]
	public Transform[] targets;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13F80", Offset = "0xD13F80")]
	public GameObject[] deactivates;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] spawns;

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xFBF90C", Offset = "0xFBF90C", VA = "0xFBF90C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xFBFACC", Offset = "0xFBFACC", VA = "0xFBFACC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xFBFD7C", Offset = "0xFBFD7C", VA = "0xFBFD7C")]
	public NeuronSpawnController()
	{
	}
}
[Token(Token = "0x20001B3")]
public class NeuronSpawnControllerMS : MonoBehaviour
{
	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13FB8", Offset = "0xD13FB8")]
	public GameObject mainNeuron;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD13FF0", Offset = "0xD13FF0")]
	public float diseaseBeginInSeconds;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14028", Offset = "0xD14028")]
	public float healthyToDiseaseInSeconds;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14060", Offset = "0xD14060")]
	public float BreakAfterDiseasedInSeconds;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool broken;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14098", Offset = "0xD14098")]
	public float joltSpeed;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD140D0", Offset = "0xD140D0")]
	public bool repeatJolts;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool Jolt2;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float delayPerMeter;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] timers;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool jolt;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool done;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool firing;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14108", Offset = "0xD14108")]
	public GameObject neuronPrefab;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14140", Offset = "0xD14140")]
	public Transform[] targets;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject[] _spawns;

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xFBFD84", Offset = "0xFBFD84", VA = "0xFBFD84")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xFBFF14", Offset = "0xFBFF14", VA = "0xFBFF14")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xFC043C", Offset = "0xFC043C", VA = "0xFC043C")]
	public NeuronSpawnControllerMS()
	{
	}
}
[Token(Token = "0x20001B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A804", Offset = "0xD0A804")]
public class ColliderPointerEventsListener : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
{
	[Token(Token = "0x2000592")]
	public delegate void delegatePointerEvent(PointerEventData eventData);

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public delegatePointerEvent pointerEnterEvent;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public delegatePointerEvent pointerExitEvent;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public delegatePointerEvent pointerDownEvent;

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xF8CBBC", Offset = "0xF8CBBC", VA = "0xF8CBBC", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xF8CF60", Offset = "0xF8CF60", VA = "0xF8CF60", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xF8CF70", Offset = "0xF8CF70", VA = "0xF8CF70", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xF8CF94", Offset = "0xF8CF94", VA = "0xF8CF94")]
	public ColliderPointerEventsListener()
	{
	}
}
[Token(Token = "0x20001B5")]
public class ColumnMovementControl : MonoBehaviour
{
	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 clampPosition;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float movementSpeed;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform column;

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xF8DC24", Offset = "0xF8DC24", VA = "0xF8DC24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xF8DC8C", Offset = "0xF8DC8C", VA = "0xF8DC8C")]
	public void MoveColumn(float amount, Action callback)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xF8DDE8", Offset = "0xF8DDE8", VA = "0xF8DDE8")]
	private void SetYPosition(float value)
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xF8DE34", Offset = "0xF8DE34", VA = "0xF8DE34")]
	public ColumnMovementControl()
	{
	}
}
[Token(Token = "0x20001B6")]
public class Flake : MonoBehaviour
{
	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isActive;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public FlakeFactory flakeFactory;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	public int stage;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected SkinnedMeshRenderer r;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector3 originalPos;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected Quaternion originalRot;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Quaternion targetRotation;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Vector3 risePosition;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 targetPosition;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected float min;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected float max;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected int selectedBlendShape;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int maxBlendShapes;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected float rotAmt;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected bool start;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected Vector3 offset;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected float lerpVal;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected float floatLerp;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected float fadeLerp;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected bool isFlying;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected float additionalHeight;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string transparencyProperty;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected float visible;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected float notVisible;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected bool dontHide;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected float speedStuff;

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x22FA5BC", Offset = "0x22FA5BC", VA = "0x22FA5BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x22FA618", Offset = "0x22FA618", VA = "0x22FA618")]
	protected void Initalize()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x22FAAB8", Offset = "0x22FAAB8", VA = "0x22FAAB8")]
	public void Animate()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x22FAB10", Offset = "0x22FAB10", VA = "0x22FAB10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x22FAB40", Offset = "0x22FAB40", VA = "0x22FAB40")]
	protected void fadeIn()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x22FAC80", Offset = "0x22FAC80", VA = "0x22FAC80")]
	protected void crinkle()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x22FAD08", Offset = "0x22FAD08", VA = "0x22FAD08")]
	protected void floatAway()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x22FAF7C", Offset = "0x22FAF7C", VA = "0x22FAF7C")]
	protected void fadeAway()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x22FB0A0", Offset = "0x22FB0A0", VA = "0x22FB0A0")]
	protected void AnimationOver()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x22FB1A4", Offset = "0x22FB1A4", VA = "0x22FB1A4")]
	public void UpdateStartPosition()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x22FA8A4", Offset = "0x22FA8A4", VA = "0x22FA8A4")]
	protected Vector3 SkinPositionAboveFlake()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x22FB36C", Offset = "0x22FB36C", VA = "0x22FB36C")]
	public Flake()
	{
	}
}
[Token(Token = "0x20001B7")]
public class FlakeFactory : MonoBehaviour
{
	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14198", Offset = "0xD14198")]
	public bool start;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeDelay;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool doSpecial;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float specialTime;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD141D0", Offset = "0xD141D0")]
	public float extraHeightMin;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float extraHeightMax;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14208", Offset = "0xD14208")]
	public float xMin;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float xMax;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float zMin;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float zMax;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleMin;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float scaleMax;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rotateZMin;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float rotateZMax;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14240", Offset = "0xD14240")]
	public Flake[] flakes;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14278", Offset = "0xD14278")]
	public float fadeInSpeed;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD142B0", Offset = "0xD142B0")]
	public float crinkleSpeed;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float crinkleStartFloat;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD142E8", Offset = "0xD142E8")]
	public float floatAwaySpeedMin;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float floatAwaySpeedMax;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float floatAwayStartFade;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14320", Offset = "0xD14320")]
	public float fadeAwaySpeed;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14358", Offset = "0xD14358")]
	public float zOffset;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float lastTime;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int normalMax;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int mildMax;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int severeMax;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[ReadOnly]
	public int flakeMax;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int mildCutOff;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int moderateCutoff;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x22FB400", Offset = "0x22FB400", VA = "0x22FB400")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x22FB704", Offset = "0x22FB704", VA = "0x22FB704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x22FB7F8", Offset = "0x22FB7F8", VA = "0x22FB7F8")]
	public void UpdateFlakesPosition()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x22FB860", Offset = "0x22FB860", VA = "0x22FB860")]
	public void HideFlakes()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x22FB8E4", Offset = "0x22FB8E4", VA = "0x22FB8E4")]
	public void ShowFlakes()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x22FB960", Offset = "0x22FB960", VA = "0x22FB960")]
	public void OnSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x22FB9A4", Offset = "0x22FB9A4", VA = "0x22FB9A4")]
	public FlakeFactory()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B8")]
public class MaterialPropertyAdjuster
{
	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD143A0", Offset = "0xD143A0")]
	public string propertyName;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD143D8", Offset = "0xD143D8")]
	public float normalMin;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float normalMax;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mildMin;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mildMax;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moderateMin;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float moderateMax;

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x13DD230", Offset = "0x13DD230", VA = "0x13DD230")]
	public void SetProperty(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x13DD328", Offset = "0x13DD328", VA = "0x13DD328")]
	public void SetPropertyNormal(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x13DD368", Offset = "0x13DD368", VA = "0x13DD368")]
	public void SetPropertyMild(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x13DD3A8", Offset = "0x13DD3A8", VA = "0x13DD3A8")]
	public void SetPropertyModerate(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x13DD3E8", Offset = "0x13DD3E8", VA = "0x13DD3E8")]
	public void SetPropertyZero(SkinnedMeshRenderer m)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x13DD3F0", Offset = "0x13DD3F0", VA = "0x13DD3F0")]
	public MaterialPropertyAdjuster()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B9")]
public class MaterialTilingAdjuster
{
	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14410", Offset = "0xD14410")]
	public string textureName;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14448", Offset = "0xD14448")]
	public float normalMin;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float normalMax;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mildMin;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mildMax;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moderateMin;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float moderateMax;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14480", Offset = "0xD14480")]
	public float normalMin_offset;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float normalMax_offset;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float mildMin_offset;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float mildMax_offset;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float moderateMin_offset;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float moderateMax_offset;

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x13DDDCC", Offset = "0x13DDDCC", VA = "0x13DDDCC")]
	public void SetYTiling(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x13DDE8C", Offset = "0x13DDE8C", VA = "0x13DDE8C")]
	public void SetYOffset(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x13DDF4C", Offset = "0x13DDF4C", VA = "0x13DDF4C")]
	public void SetYTilingNormal(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x13DDFC0", Offset = "0x13DDFC0", VA = "0x13DDFC0")]
	public void SetYTilingMild(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x13DE034", Offset = "0x13DE034", VA = "0x13DE034")]
	public void SetYTilingModerate(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x13DE0A8", Offset = "0x13DE0A8", VA = "0x13DE0A8")]
	public MaterialTilingAdjuster()
	{
	}
}
[Token(Token = "0x20001BA")]
public class MildFlake : Flake
{
	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xFB9F7C", Offset = "0xFB9F7C", VA = "0xFB9F7C")]
	public MildFlake()
	{
	}
}
[Token(Token = "0x20001BB")]
public class NormalFlake : Flake
{
	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xFC1504", Offset = "0xFC1504", VA = "0xFC1504")]
	public NormalFlake()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BC")]
public class ParticleRateAdjuster
{
	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem ps;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD144B8", Offset = "0xD144B8")]
	public float normalMin;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float normalMax;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mildMin;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mildMax;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moderateMin;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float moderateMax;

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x230C3F4", Offset = "0x230C3F4", VA = "0x230C3F4")]
	public void SetRate(float val)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x230C4C0", Offset = "0x230C4C0", VA = "0x230C4C0")]
	public void SetNormalRate(float val)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x230C4F8", Offset = "0x230C4F8", VA = "0x230C4F8")]
	public void SetMildRate(float val)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x230C530", Offset = "0x230C530", VA = "0x230C530")]
	public void SetModerateRate(float val)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x230C568", Offset = "0x230C568", VA = "0x230C568")]
	public ParticleRateAdjuster()
	{
	}
}
[Token(Token = "0x20001BD")]
public class PsoriasisBackgroundFX : MonoBehaviour
{
	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shrink;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float grow;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float back;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float forward;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float left;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float right;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float thin;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int shrinkID;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int growID;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int backID;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected int forwardID;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected int leftID;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int rightID;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected int thinID;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float slideMin;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected float slideMax;

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x2313CB4", Offset = "0x2313CB4", VA = "0x2313CB4")]
	public void UpdateMesh(float val)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x2313D64", Offset = "0x2313D64", VA = "0x2313D64")]
	protected void ApplyBlend(float max, float current, int ID)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x2313DC8", Offset = "0x2313DC8", VA = "0x2313DC8")]
	public PsoriasisBackgroundFX()
	{
	}
}
[Token(Token = "0x20001BE")]
public class PsoriasisBackgroundMildFX : PsoriasisBackgroundFX
{
	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x2313DF0", Offset = "0x2313DF0", VA = "0x2313DF0")]
	public PsoriasisBackgroundMildFX()
	{
	}
}
[Token(Token = "0x20001BF")]
public class PsoriasisBackgroundModerateFX : PsoriasisBackgroundFX
{
	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x2313E18", Offset = "0x2313E18", VA = "0x2313E18")]
	public PsoriasisBackgroundModerateFX()
	{
	}
}
[Token(Token = "0x20001C0")]
public class PsoriasisBackgroundNormalFX : PsoriasisBackgroundFX
{
	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x2313E40", Offset = "0x2313E40", VA = "0x2313E40")]
	public PsoriasisBackgroundNormalFX()
	{
	}
}
[Token(Token = "0x20001C1")]
public class PsoriasisBackgroundSevereFX : PsoriasisBackgroundFX
{
	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x2313E68", Offset = "0x2313E68", VA = "0x2313E68")]
	public PsoriasisBackgroundSevereFX()
	{
	}
}
[Token(Token = "0x20001C2")]
public class PsoriasisController : MonoBehaviour
{
	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C7D0", Offset = "0xD0C7D0")]
	private sealed class <LerpUpToNormal>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float val;

		[Token(Token = "0x4002BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PsoriasisController <>4__this;

		[Token(Token = "0x4002BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinnedMeshRenderer m;

		[Token(Token = "0x4002BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <j>5__2;

		[Token(Token = "0x17000267")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002282")]
			[Address(RVA = "0x2315F8C", Offset = "0x2315F8C", VA = "0x2315F8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002284")]
			[Address(RVA = "0x2315FF4", Offset = "0x2315FF4", VA = "0x2315FF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x23156A0", Offset = "0x23156A0", VA = "0x23156A0")]
		[DebuggerHidden]
		public <LerpUpToNormal>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x2315D50", Offset = "0x2315D50", VA = "0x2315D50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x2315D54", Offset = "0x2315D54", VA = "0x2315D54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x2315F94", Offset = "0x2315F94", VA = "0x2315F94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C7E0", Offset = "0xD0C7E0")]
	private sealed class <LerpUpToMild>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float val;

		[Token(Token = "0x4002BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PsoriasisController <>4__this;

		[Token(Token = "0x4002BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinnedMeshRenderer m;

		[Token(Token = "0x4002BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <j>5__2;

		[Token(Token = "0x17000269")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002288")]
			[Address(RVA = "0x2315B08", Offset = "0x2315B08", VA = "0x2315B08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600228A")]
			[Address(RVA = "0x2315B70", Offset = "0x2315B70", VA = "0x2315B70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x2315758", Offset = "0x2315758", VA = "0x2315758")]
		[DebuggerHidden]
		public <LerpUpToMild>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x23159A0", Offset = "0x23159A0", VA = "0x23159A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x23159A4", Offset = "0x23159A4", VA = "0x23159A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x2315B10", Offset = "0x2315B10", VA = "0x2315B10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C7F0", Offset = "0xD0C7F0")]
	private sealed class <LerpUpToModerate>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float val;

		[Token(Token = "0x4002BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PsoriasisController <>4__this;

		[Token(Token = "0x4002BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinnedMeshRenderer m;

		[Token(Token = "0x4002BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <j>5__2;

		[Token(Token = "0x1700026B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600228E")]
			[Address(RVA = "0x2315CE0", Offset = "0x2315CE0", VA = "0x2315CE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002290")]
			[Address(RVA = "0x2315D48", Offset = "0x2315D48", VA = "0x2315D48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x2315810", Offset = "0x2315810", VA = "0x2315810")]
		[DebuggerHidden]
		public <LerpUpToModerate>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x2315B78", Offset = "0x2315B78", VA = "0x2315B78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x2315B7C", Offset = "0x2315B7C", VA = "0x2315B7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x2315CE8", Offset = "0x2315CE8", VA = "0x2315CE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD144F0", Offset = "0xD144F0")]
	public Slider slide;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14528", Offset = "0xD14528")]
	public SkinnedMeshRenderer skinTop;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SkinnedMeshRenderer skinCover;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer skinMid;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SkinnedMeshRenderer skinOuter;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14560", Offset = "0xD14560")]
	public SkinnedMeshRenderer sideNormal;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SkinnedMeshRenderer sideMild;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SkinnedMeshRenderer sideModerate;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14598", Offset = "0xD14598")]
	public SkinnedMeshRenderer[] Hair_Follicle;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD145D0", Offset = "0xD145D0")]
	public string[] topProperties;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string sidePropertyName;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14608", Offset = "0xD14608")]
	public float normalMax;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float mildMax;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float modererateMax;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float tolerance;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14640", Offset = "0xD14640")]
	public float Dissolve_Normal_Min;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float Dissolve_Normal_Max;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float Dissolve_Mild_Min;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float Dissolve_Mild_Max;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float Dissolve_Moderate_Min;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float Dissolve_Moderate_Max;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14678", Offset = "0xD14678")]
	public float Reveal_Normal_Min;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float Reveal_Normal_Max;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float Reveal_Mild_Min;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float Reveal_Mild_Max;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float Reveal_Moderate_Min;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float Reveal_Moderate_Max;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD146B0", Offset = "0xD146B0")]
	public FlakeFactory fFact;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float flakeNormalMin;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float flakeNormalMax;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD146E8", Offset = "0xD146E8")]
	public PsoriasisBackgroundNormalFX[] FX_Normal;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14720", Offset = "0xD14720")]
	public PsoriasisBackgroundMildFX[] FX_Mild;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14758", Offset = "0xD14758")]
	public PsoriasisBackgroundModerateFX[] FX_Moderate;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14790", Offset = "0xD14790")]
	public PsoriasisBackgroundSevereFX[] FX_Severe;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD147C8", Offset = "0xD147C8")]
	public Animator[] anims;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string animationName;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14800", Offset = "0xD14800")]
	public SkinnedMeshRenderer theRing;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14838", Offset = "0xD14838")]
	public SkinnedMeshRenderer dermisWall;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14870", Offset = "0xD14870")]
	public SkinnedMeshRenderer capilaries;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD148A8", Offset = "0xD148A8")]
	public ParticleRateAdjuster[] particles;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD148E0", Offset = "0xD148E0")]
	public MaterialTilingAdjuster[] mTA;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14918", Offset = "0xD14918")]
	public MaterialPropertyAdjuster[] mPA;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int visible;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int notvisibile;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private MeshCollider Top_Mesh_Collider;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14950", Offset = "0xD14950")]
	public bool isMovie;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string dissolveProperty;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private string revealProperty;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool dragStarted;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool dragging;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x2313E90", Offset = "0x2313E90", VA = "0x2313E90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x23141D0", Offset = "0x23141D0", VA = "0x23141D0")]
	public void onSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x2314898", Offset = "0x2314898", VA = "0x2314898")]
	private void UpdateSkinTopBlend(SkinnedMeshRenderer m, float val)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x2314150", Offset = "0x2314150", VA = "0x2314150")]
	private void setSideBlendsMaterial(Renderer mesh, float val)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x2314DD8", Offset = "0x2314DD8", VA = "0x2314DD8")]
	private void ApplyDissolve(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x2314E80", Offset = "0x2314E80", VA = "0x2314E80")]
	private void ApplyReveal(Renderer m, float val)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x2314390", Offset = "0x2314390", VA = "0x2314390")]
	private void NormalFX(float val)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x23144B0", Offset = "0x23144B0", VA = "0x23144B0")]
	private void MildFX(float val)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x231463C", Offset = "0x231463C", VA = "0x231463C")]
	private void ModerateFX(float val)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x2314F28", Offset = "0x2314F28", VA = "0x2314F28")]
	private void UpdateFollicles(float val)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x2314B68", Offset = "0x2314B68", VA = "0x2314B68")]
	private void UpdateFX(PsoriasisBackgroundFX[] FX, float val)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x231493C", Offset = "0x231493C", VA = "0x231493C")]
	public void UpdateCollision()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x231532C", Offset = "0x231532C", VA = "0x231532C")]
	public void OnDragBegin()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x2315338", Offset = "0x2315338", VA = "0x2315338")]
	public void OnDrag()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x2315344", Offset = "0x2315344", VA = "0x2315344")]
	public void OnHoldingDrag()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x2315348", Offset = "0x2315348", VA = "0x2315348")]
	public void OnDragEnd()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x23147A4", Offset = "0x23147A4", VA = "0x23147A4")]
	private void OnDragUpateSpeed()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x2314A4C", Offset = "0x2314A4C", VA = "0x2314A4C")]
	private void UpdateFlakes()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x23154F4", Offset = "0x23154F4", VA = "0x23154F4")]
	private void HideFlakes()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x2315584", Offset = "0x2315584", VA = "0x2315584")]
	private void ShowFlakes()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x2314ADC", Offset = "0x2314ADC", VA = "0x2314ADC")]
	private void UpdateAnimators(float val)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x2314BE0", Offset = "0x2314BE0", VA = "0x2314BE0")]
	private void UpdateRing(float val)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x2314C88", Offset = "0x2314C88", VA = "0x2314C88")]
	private void UpdateDermisWall(float val)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x2314D30", Offset = "0x2314D30", VA = "0x2314D30")]
	private void UpdateCapilaries(float val)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x2314FA8", Offset = "0x2314FA8", VA = "0x2314FA8")]
	private void UpdateParticlesNormal(float val)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x23150D4", Offset = "0x23150D4", VA = "0x23150D4")]
	private void UpdateParticlesMild(float val)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x2315200", Offset = "0x2315200", VA = "0x2315200")]
	private void UpdateParticlesModerate(float val)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x2315048", Offset = "0x2315048", VA = "0x2315048")]
	private void UpdateTilingNormal(SkinnedMeshRenderer m, float val)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x2315174", Offset = "0x2315174", VA = "0x2315174")]
	private void UpdateTilingMild(SkinnedMeshRenderer m, float val)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x23152A0", Offset = "0x23152A0", VA = "0x23152A0")]
	private void UpdateTilingModerate(SkinnedMeshRenderer m, float val)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x2315614", Offset = "0x2315614", VA = "0x2315614")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21D0C", Offset = "0xD21D0C")]
	private IEnumerator LerpUpToNormal(SkinnedMeshRenderer m, float val)
	{
		return null;
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x23156CC", Offset = "0x23156CC", VA = "0x23156CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21D70", Offset = "0xD21D70")]
	private IEnumerator LerpUpToMild(SkinnedMeshRenderer m, float val)
	{
		return null;
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x2315784", Offset = "0x2315784", VA = "0x2315784")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21DD4", Offset = "0xD21DD4")]
	private IEnumerator LerpUpToModerate(SkinnedMeshRenderer m, float val)
	{
		return null;
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x2315350", Offset = "0x2315350", VA = "0x2315350")]
	private void UpdateMatSpeedNormal(SkinnedMeshRenderer m, float val)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x231583C", Offset = "0x231583C", VA = "0x231583C")]
	private void ForceSpeedToZero(SkinnedMeshRenderer m)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x23153DC", Offset = "0x23153DC", VA = "0x23153DC")]
	private void UpdateMatSpeedMild(SkinnedMeshRenderer m, float val)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x2315468", Offset = "0x2315468", VA = "0x2315468")]
	private void UpdateMatSpeedModerate(SkinnedMeshRenderer m, float val)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x23158B8", Offset = "0x23158B8", VA = "0x23158B8")]
	public PsoriasisController()
	{
	}
}
[Token(Token = "0x20001C3")]
public class PsoriasisSliderEvents : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IEndDragHandler, IBeginDragHandler, IDragHandler
{
	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PsoriasisController pCon;

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x2315FFC", Offset = "0x2315FFC", VA = "0x2315FFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x2316070", Offset = "0x2316070", VA = "0x2316070", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x23160DC", Offset = "0x23160DC", VA = "0x23160DC", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x2316148", Offset = "0x2316148", VA = "0x2316148", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x23161CC", Offset = "0x23161CC", VA = "0x23161CC", Slot = "7")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x2316254", Offset = "0x2316254", VA = "0x2316254", Slot = "8")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x23162DC", Offset = "0x23162DC", VA = "0x23162DC")]
	public PsoriasisSliderEvents()
	{
	}
}
[Token(Token = "0x20001C4")]
public class SevereFlake : Flake
{
	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x22E1318", Offset = "0x22E1318", VA = "0x22E1318")]
	public SevereFlake()
	{
	}
}
[Token(Token = "0x20001C5")]
public class AxisTracker : MonoBehaviour
{
	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpineController spineController;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spineGeo;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spineGlass;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform geoParent;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tempParent;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform localTransform;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 posOffset;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion rotOffset;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 localOrigin;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion localOriginRotation;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float zoomScale;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 startScale;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 endScale;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 startPos;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion startRot;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 endPos;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion endRot;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AnimationCurve changeCurve;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float changetime;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int sectionIndex;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 camPosOffset;

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xF7A4F0", Offset = "0xF7A4F0", VA = "0xF7A4F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xF7A594", Offset = "0xF7A594", VA = "0xF7A594")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xF7AC08", Offset = "0xF7AC08", VA = "0xF7AC08")]
	private void UpdateGeoTransforms()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xF7AE54", Offset = "0xF7AE54", VA = "0xF7AE54")]
	public AxisTracker()
	{
	}
}
[Token(Token = "0x20001C6")]
public class ElevatorLabels : MonoBehaviour
{
	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpineController spineController;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform pad;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14988", Offset = "0xD14988")]
	public Color topColor;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color bottomColor;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color textColor;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float rowHeight;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float textHeight;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD149C0", Offset = "0xD149C0")]
	public Color selectedColor;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color selectedTextColor;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float selectedRowHeight;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float selectedTextHeight;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float changeDuration;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VerticalLayoutGroup _VerticalLayoutGroup;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RectTransform[] _revealRects;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image[] _backgrounds;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color[] _backgroundColors;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshProUGUI[] _textMeshProTexts;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RectTransform[] _textRects;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float changeTime;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int currentRevealRowIndex;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int newRevealRowIndex;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool mouseDownInPad;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector2 tempSize;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x22F416C", Offset = "0x22F416C", VA = "0x22F416C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x22F4688", Offset = "0x22F4688", VA = "0x22F4688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x22F4C24", Offset = "0x22F4C24", VA = "0x22F4C24")]
	public ElevatorLabels()
	{
	}
}
[Token(Token = "0x20001C7")]
public class MaterialDimmer : MonoBehaviour
{
	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AdvancedVisibilityManager vizManager;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpineController spineControl;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer glassCopy;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer skinnedMesh;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer staticMesh;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] meshMats;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material glassMat;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material[] glassMats;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useGlass;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string shaderParam;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color[] originalColors;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float dimAmount;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int[] fullBrightReveals;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int currentReveal;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float multiplier;

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x13DC164", Offset = "0x13DC164", VA = "0x13DC164")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x13DC44C", Offset = "0x13DC44C", VA = "0x13DC44C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x13DC620", Offset = "0x13DC620", VA = "0x13DC620")]
	public MaterialDimmer()
	{
	}
}
[Token(Token = "0x20001C8")]
public class SpineController : MonoBehaviour
{
	[Token(Token = "0x2000596")]
	private struct CameraTargetValue
	{
		[Token(Token = "0x4002BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 distanceMinMax;

		[Token(Token = "0x4002BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 rotationYMinMax;

		[Token(Token = "0x4002BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 panYMinMax;
	}

	[Token(Token = "0x2000597")]
	private enum CameraTargetIndex
	{
		[Token(Token = "0x4002BF8")]
		Sacrum,
		[Token(Token = "0x4002BF9")]
		Lumbar,
		[Token(Token = "0x4002BFA")]
		Thorasic,
		[Token(Token = "0x4002BFB")]
		Cervical,
		[Token(Token = "0x4002BFC")]
		All,
		[Token(Token = "0x4002BFD")]
		Vertebrae,
		[Token(Token = "0x4002BFE")]
		Default
	}

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZoneManager zman;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TofuPadController pad;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator2;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider positionSlider;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] skelIcons;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocalizeStringEvent elevatorLabelLocalize;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LocalizedString[] elevatorStringsLocalize;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool resetSkelPosition;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD149F8", Offset = "0xD149F8")]
	public Toggle csfToggle;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] spinalFluidModels;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] spinalFluidSlicedModels;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool spinalFluidOn;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14A30", Offset = "0xD14A30")]
	public Toggle vertebraeToggle;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Toggle resetToggle;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform spineTop;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform spineBottom;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform[] poseCenters;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14A68", Offset = "0xD14A68")]
	public Slider bendSlider;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Slider sideSlider;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Slider twistSlider;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int sectionIndex;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int oldSectionIndex;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3[] poses;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3[] currentPose;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MaterialDimmer[] matDimmers;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MeshRenderer[] t12StaticGeo;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SkinnedMeshRenderer[] t12SkinnedGeo;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float t12ReturnTime;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14AA0", Offset = "0xD14AA0")]
	public bool AOFadeOut;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float AOFadeDuration;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float AOFadeTime;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float[] AOValue;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Renderer[] AOBoneMats;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public LegacyCameraControl cam;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float camStartDistance;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private CameraTarget _cameraTarget;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private CameraTargetValue[] _cameraTargetValues;

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x233AB74", Offset = "0x233AB74", VA = "0x233AB74")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x233B180", Offset = "0x233B180", VA = "0x233B180")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x233B960", Offset = "0x233B960", VA = "0x233B960")]
	public void OnLabelsToggle(bool value)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x233C100", Offset = "0x233C100", VA = "0x233C100")]
	public void UpdateAnimatorPoses()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x233BA84", Offset = "0x233BA84", VA = "0x233BA84")]
	public void OnPositionSliderChanged(float val)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x233C6B4", Offset = "0x233C6B4", VA = "0x233C6B4")]
	public void onCSFTogglePressed(bool val)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x233BE40", Offset = "0x233BE40", VA = "0x233BE40")]
	public void onVertebraeTogglePressed(bool val)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x233C918", Offset = "0x233C918", VA = "0x233C918")]
	public void OnResetPressed(bool val)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x233C8BC", Offset = "0x233C8BC", VA = "0x233C8BC")]
	private void FadeAO()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x233C0A4", Offset = "0x233C0A4", VA = "0x233C0A4")]
	private void RestoreAO()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x233CEF8", Offset = "0x233CEF8", VA = "0x233CEF8")]
	private void InitializeCameraTargets()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x233D3E0", Offset = "0x233D3E0", VA = "0x233D3E0")]
	private void SetCameraTargetValue(int index)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x233D488", Offset = "0x233D488", VA = "0x233D488")]
	public SpineController()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C9")]
public class PositionScale
{
	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private Vector3 pos;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 scale;

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x230F6F0", Offset = "0x230F6F0", VA = "0x230F6F0")]
	public PositionScale()
	{
	}
}
[Token(Token = "0x20001CA")]
public class PGID_Checker_Mac : MonoBehaviour
{
	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x23099E4", Offset = "0x23099E4", VA = "0x23099E4")]
	public PGID_Checker_Mac()
	{
	}
}
[Token(Token = "0x20001CB")]
public enum DiabetesReveal
{
	[Token(Token = "0x4000EA6")]
	All = 0,
	[Token(Token = "0x4000EA7")]
	Glucose = 2,
	[Token(Token = "0x4000EA8")]
	Insulin = 4,
	[Token(Token = "0x4000EA9")]
	Glucagon = 8,
	[Token(Token = "0x4000EAA")]
	Enzymes = 0x10
}
[Serializable]
[Token(Token = "0x20001CC")]
public struct DiabetesAnimationStruct
{
	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PancreasState meal_or_fast_State;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public DiabetesState disease_State;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float time_in_seconds;
}
[Token(Token = "0x20001CD")]
public class DiabetesManagerAnimationSystem : MonoBehaviour
{
	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14AF8", Offset = "0xD14AF8")]
	public DiabetesManager dMan;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14B30", Offset = "0xD14B30")]
	public Toggle glucoseDisabler;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle insulinDisabler;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle glucagonDisabler;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle enzymeDisabler;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle mealToggle;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14B68", Offset = "0xD14B68")]
	public DiabetesReveal[] reveal_types;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14BA0", Offset = "0xD14BA0")]
	public DiabetesAnimationStruct[] structs;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float StartTime;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int StartIndex;

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x108AEEC", Offset = "0x108AEEC", VA = "0x108AEEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x108AFB4", Offset = "0x108AFB4", VA = "0x108AFB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x108B22C", Offset = "0x108B22C", VA = "0x108B22C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x108B2C8", Offset = "0x108B2C8", VA = "0x108B2C8")]
	private void ExecuteStruct(DiabetesAnimationStruct s)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x108B36C", Offset = "0x108B36C", VA = "0x108B36C")]
	private void ExecuteMealFast(DiabetesAnimationStruct s)
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x108B46C", Offset = "0x108B46C", VA = "0x108B46C")]
	private void ExecuteDisease(DiabetesAnimationStruct s)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x108AFE0", Offset = "0x108AFE0", VA = "0x108AFE0")]
	private void SetupRevealTypes()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x108B564", Offset = "0x108B564", VA = "0x108B564")]
	public DiabetesManagerAnimationSystem()
	{
	}
}
[Token(Token = "0x20001CE")]
public class FadeLabel : MonoBehaviour
{
	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle labelToggle;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color fadeColor;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color originalColor;

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x22F8FDC", Offset = "0x22F8FDC", VA = "0x22F8FDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x22F9138", Offset = "0x22F9138", VA = "0x22F9138")]
	private void CheckVal(bool value)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x22F91D8", Offset = "0x22F91D8", VA = "0x22F91D8")]
	public FadeLabel()
	{
	}
}
[Token(Token = "0x20001CF")]
public class MasterSliderController : MonoBehaviour
{
	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text[] stateLabels;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DiabetesManager manager;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	public int state;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color activeColor;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color defaultColor;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider transitionSlider;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text hypoText;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text normalText;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text preText;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text diabetesText;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x13DBD70", Offset = "0x13DBD70", VA = "0x13DBD70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x13DBED0", Offset = "0x13DBED0", VA = "0x13DBED0")]
	private void TransitionSliderChanged(float value)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x13DC0B4", Offset = "0x13DC0B4", VA = "0x13DC0B4")]
	public MasterSliderController()
	{
	}
}
[Token(Token = "0x20001D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A868", Offset = "0xD0A868")]
public class EnableDisableObjectsOnAnimatorTransition : MonoBehaviour
{
	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int layer;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ifInTransition;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> objectsToEnable;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> objectsToDisable;

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x22F4C2C", Offset = "0x22F4C2C", VA = "0x22F4C2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x22F4C84", Offset = "0x22F4C84", VA = "0x22F4C84")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x22F4EAC", Offset = "0x22F4EAC", VA = "0x22F4EAC")]
	public EnableDisableObjectsOnAnimatorTransition()
	{
	}
}
[Token(Token = "0x20001D1")]
public class InputBlocker : MonoBehaviour
{
	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool blocksRaycasts;

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x2304C78", Offset = "0x2304C78", VA = "0x2304C78")]
	public InputBlocker()
	{
	}
}
[Token(Token = "0x20001D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A8CC", Offset = "0xD0A8CC")]
public class MeshSlicer : MonoBehaviour
{
	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool slicesAsChildren;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD14BE8", Offset = "0xD14BE8")]
	public int XSlices;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD14C00", Offset = "0xD14C00")]
	public int YSlices;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD14C18", Offset = "0xD14C18")]
	public int ZSlices;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer orgRenderer;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<MeshRenderer> sliceResults;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Bounds> resBounds;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xFB8508", Offset = "0xFB8508", VA = "0xFB8508")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xFB8560", Offset = "0xFB8560", VA = "0xFB8560")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xFB9D34", Offset = "0xFB9D34", VA = "0xFB9D34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xFB8564", Offset = "0xFB8564", VA = "0xFB8564")]
	public void Slice()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xFB9E98", Offset = "0xFB9E98", VA = "0xFB9E98")]
	public MeshSlicer()
	{
	}
}
[Token(Token = "0x20001D3")]
public class PancreasController : MonoBehaviour
{
	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x230A658", Offset = "0x230A658", VA = "0x230A658")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x230A65C", Offset = "0x230A65C", VA = "0x230A65C")]
	public PancreasController()
	{
	}
}
[Token(Token = "0x20001D4")]
public class RestoreMaterialsRQ : MonoBehaviour
{
	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xF0CEF8", Offset = "0xF0CEF8", VA = "0xF0CEF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xF0D2D8", Offset = "0xF0D2D8", VA = "0xF0D2D8")]
	public RestoreMaterialsRQ()
	{
	}
}
[Token(Token = "0x20001D5")]
public class UISliderPancreas : MonoBehaviour
{
	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialParametersController targetController;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int snapCount;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScrollRect inScroll;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float durationSnapping;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetPositionH;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool lerpH;

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x2332F5C", Offset = "0x2332F5C", VA = "0x2332F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x2332F60", Offset = "0x2332F60", VA = "0x2332F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x2333060", Offset = "0x2333060", VA = "0x2333060")]
	public void OnScrollValueChanged(Vector2 inValue)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x233310C", Offset = "0x233310C", VA = "0x233310C")]
	public void Draging()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x2333114", Offset = "0x2333114", VA = "0x2333114")]
	public void EndDragging()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x2333118", Offset = "0x2333118", VA = "0x2333118")]
	public UISliderPancreas()
	{
	}
}
[Token(Token = "0x20001D6")]
public class patchScript_setBoolInAnimatorIfTargetAnimatorInTransition : MonoBehaviour
{
	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator targetAnimator;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int targetLayer;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string targetBool;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x21C6A78", Offset = "0x21C6A78", VA = "0x21C6A78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x21C6AD0", Offset = "0x21C6AD0", VA = "0x21C6AD0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x21C6BE0", Offset = "0x21C6BE0", VA = "0x21C6BE0")]
	public patchScript_setBoolInAnimatorIfTargetAnimatorInTransition()
	{
	}
}
[Token(Token = "0x20001D7")]
public class BeamAngleController : MonoBehaviour
{
	[Token(Token = "0x2000598")]
	[Flags]
	public enum enumArcFlags
	{
		[Token(Token = "0x4002C00")]
		None = 0,
		[Token(Token = "0x4002C01")]
		bothDirections = 1,
		[Token(Token = "0x4002C02")]
		ClockWise = 2,
		[Token(Token = "0x4002C03")]
		CounterClockWise = 4
	}

	[Token(Token = "0x2000599")]
	public enum enumArcMovementDirection
	{
		[Token(Token = "0x4002C05")]
		Default = 1,
		[Token(Token = "0x4002C06")]
		DefaultClockWise = 3,
		[Token(Token = "0x4002C07")]
		DefaultCounterClockWise = 5,
		[Token(Token = "0x4002C08")]
		ClockWise = 2,
		[Token(Token = "0x4002C09")]
		CounterClockWise = 4
	}

	[Token(Token = "0x200059A")]
	public enum workingVariantType
	{
		[Token(Token = "0x4002C0B")]
		A,
		[Token(Token = "0x4002C0C")]
		B,
		[Token(Token = "0x4002C0D")]
		C
	}

	[Serializable]
	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C810", Offset = "0xD0C810")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<BeamAngleController, BeamAngleController> <>9__29_0;

		[Token(Token = "0x4002C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<BeamAngleController, float>, float> <>9__29_2;

		[Token(Token = "0x4002C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<BeamAngleController, float>, BeamAngleController> <>9__29_3;

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xF7F364", Offset = "0xF7F364", VA = "0xF7F364")]
		public <>c()
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xF7F36C", Offset = "0xF7F36C", VA = "0xF7F36C")]
		internal BeamAngleController <Start>b__29_0(BeamAngleController ctrl)
		{
			return null;
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xF7F374", Offset = "0xF7F374", VA = "0xF7F374")]
		internal float <Start>b__29_2(KeyValuePair<BeamAngleController, float> i)
		{
			return default(float);
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0xF7F3C0", Offset = "0xF7F3C0", VA = "0xF7F3C0")]
		internal BeamAngleController <Start>b__29_3(KeyValuePair<BeamAngleController, float> e)
		{
			return null;
		}
	}

	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C820", Offset = "0xD0C820")]
	private sealed class <SmoothNudgeAngleFrom>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BeamAngleController <>4__this;

		[Token(Token = "0x4002C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onCheckFinishedCallback;

		[Token(Token = "0x4002C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animation <anim>5__2;

		[Token(Token = "0x4002C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <end>5__3;

		[Token(Token = "0x1700026D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002299")]
			[Address(RVA = "0xF7F70C", Offset = "0xF7F70C", VA = "0xF7F70C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0xF7F774", Offset = "0xF7F774", VA = "0xF7F774", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xF7F0D8", Offset = "0xF7F0D8", VA = "0xF7F0D8")]
		[DebuggerHidden]
		public <SmoothNudgeAngleFrom>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0xF7F404", Offset = "0xF7F404", VA = "0xF7F404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xF7F408", Offset = "0xF7F408", VA = "0xF7F408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xF7F714", Offset = "0xF7F714", VA = "0xF7F714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 planeNormal;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 planeZeroDirection;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float angle;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceToTarget;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color color;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float sectorEnd;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float sectorStart;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float beamAngularSpeed;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public enumArcMovementDirection arcMovementDirection;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WeakReference weakPrevCtrl;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WeakReference weakNextCtrl;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string prevCtrlName;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string nextCtrlName;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float dragStartAngle;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _sectorMode;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static workingVariantType workingVariant;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float prevNextAngleDiff;

	[Token(Token = "0x17000054")]
	public bool sectorMode
	{
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xF7C964", Offset = "0xF7C964", VA = "0xF7C964")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xF7C96C", Offset = "0xF7C96C", VA = "0xF7C96C")]
		set
		{
		}
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xF7C980", Offset = "0xF7C980", VA = "0xF7C980")]
	public void clearSettingInPlayerPrefs()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xF7CA90", Offset = "0xF7CA90", VA = "0xF7CA90")]
	public void storeSettingsToPlayerPrefs()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xF7CBB0", Offset = "0xF7CBB0", VA = "0xF7CBB0")]
	public bool hasSettingsStoredInPlayerPrefs()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xF7CC24", Offset = "0xF7CC24", VA = "0xF7CC24")]
	private void readSettingsFromPlayerPrefs()
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xF7CD5C", Offset = "0xF7CD5C", VA = "0xF7CD5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xF7CD60", Offset = "0xF7CD60", VA = "0xF7CD60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xF7D200", Offset = "0xF7D200", VA = "0xF7D200")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xF7D348", Offset = "0xF7D348", VA = "0xF7D348")]
	public void setDirection(Vector3 inDir)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xF7D600", Offset = "0xF7D600", VA = "0xF7D600")]
	private void getMinMaxAngles(out float minAngle, out float dMin, out float maxAngle, out float dMax, bool includeSectors = false)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xF7DDA0", Offset = "0xF7DDA0", VA = "0xF7DDA0")]
	public void clampSector()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xF7DA04", Offset = "0xF7DA04", VA = "0xF7DA04")]
	private void nudgePrevNextCtrl(float inDelta)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xF7D204", Offset = "0xF7D204", VA = "0xF7D204")]
	private void updateBeamTransform()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xF7D560", Offset = "0xF7D560", VA = "0xF7D560")]
	private Vector3 vectorForAngle(float inAngle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xF7DEA4", Offset = "0xF7DEA4", VA = "0xF7DEA4")]
	public Vector3 worldPosForAngle(float inAngle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xF7DFA4", Offset = "0xF7DFA4", VA = "0xF7DFA4")]
	public void clearSectorAnimation()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xF7E088", Offset = "0xF7E088", VA = "0xF7E088")]
	public static void SetCurveLinear(AnimationCurve curve)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xF7E3EC", Offset = "0xF7E3EC", VA = "0xF7E3EC")]
	public void makeSectorAnimation()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xF7E5F4", Offset = "0xF7E5F4", VA = "0xF7E5F4")]
	public float[] getArcAngles()
	{
		return null;
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xF7D0D4", Offset = "0xF7D0D4", VA = "0xF7D0D4")]
	public void setPrevNextBeams(BeamAngleController prevCtrl, BeamAngleController nextCtrl)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xF7E754", Offset = "0xF7E754", VA = "0xF7E754")]
	public void onDragBegin()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xF7E760", Offset = "0xF7E760", VA = "0xF7E760")]
	public static float convAngleToAngleSpace(float inAngle, float inTargetAngle)
	{
		return default(float);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xF7E78C", Offset = "0xF7E78C", VA = "0xF7E78C")]
	private bool IsAngleOverlapsCtrl(float inAngle, BeamAngleController inCtrl)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xF7E8E4", Offset = "0xF7E8E4", VA = "0xF7E8E4")]
	public void checkForOverlap(Action onCheckFinishedCallback)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xF7F05C", Offset = "0xF7F05C", VA = "0xF7F05C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21E38", Offset = "0xD21E38")]
	private IEnumerator SmoothNudgeAngleFrom(Action onCheckFinishedCallback)
	{
		return null;
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xF7F104", Offset = "0xF7F104", VA = "0xF7F104")]
	public BeamAngleController()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xF7F254", Offset = "0xF7F254", VA = "0xF7F254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21E9C", Offset = "0xD21E9C")]
	private float <Start>b__29_1(BeamAngleController ctrl)
	{
		return default(float);
	}
}
[Token(Token = "0x20001D8")]
public class BreathAdapter : MonoBehaviour
{
	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD14C40", Offset = "0xD14C40")]
	public float depth;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD14C58", Offset = "0xD14C58")]
	public float rate;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onInhale;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onExhale;

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xF849D4", Offset = "0xF849D4", VA = "0xF849D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xF84A2C", Offset = "0xF84A2C", VA = "0xF84A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xF84B6C", Offset = "0xF84B6C", VA = "0xF84B6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xF84B70", Offset = "0xF84B70", VA = "0xF84B70")]
	public void breath(bool inOn)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xF84A34", Offset = "0xF84A34", VA = "0xF84A34")]
	public void adjustDepthRate(float inDepth, float inRate)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xF84D08", Offset = "0xF84D08", VA = "0xF84D08")]
	public void inhale()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xF84D24", Offset = "0xF84D24", VA = "0xF84D24")]
	public void exhale()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xF84D40", Offset = "0xF84D40", VA = "0xF84D40")]
	public BreathAdapter()
	{
	}
}
[Token(Token = "0x20001D9")]
[ExecuteInEditMode]
public class BreathLimiter : MonoBehaviour
{
	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool limiting;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color colorActive;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color colorInactive;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image targetImage;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DragPad targetPad;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 minSize;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 maxSize;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD14C70", Offset = "0xD14C70")]
	public float minWidth;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD14C88", Offset = "0xD14C88")]
	public float maxWidth;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD14CA0", Offset = "0xD14CA0")]
	public float minHeight;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD14CB8", Offset = "0xD14CB8")]
	public float maxHeight;

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xF84D48", Offset = "0xF84D48", VA = "0xF84D48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xF84E94", Offset = "0xF84E94", VA = "0xF84E94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xF84EB8", Offset = "0xF84EB8", VA = "0xF84EB8")]
	private void updateTargetImage()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xF85164", Offset = "0xF85164", VA = "0xF85164")]
	private void updateTargetPad()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xF85260", Offset = "0xF85260", VA = "0xF85260")]
	public void turnOnOff(bool inOn)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xF8531C", Offset = "0xF8531C", VA = "0xF8531C")]
	public bool withinLimits()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xF853E8", Offset = "0xF853E8", VA = "0xF853E8")]
	public BreathLimiter()
	{
	}
}
[Token(Token = "0x20001DA")]
public class CanvasGroupAlphaToTransparency : MonoBehaviour
{
	[Token(Token = "0x200059D")]
	private struct originalValues
	{
		[Token(Token = "0x4002C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float _Transparency;

		[Token(Token = "0x4002C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float _Transparent;

		[Token(Token = "0x4002C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color _Color;
	}

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useUniqueMaterialsInPlayer;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer curRenderer;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Material, originalValues> orgValues;

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xF8BD9C", Offset = "0xF8BD9C", VA = "0xF8BD9C")]
	private Material[] getMaterials()
	{
		return null;
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xF8BE00", Offset = "0xF8BE00", VA = "0xF8BE00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xF8BFE8", Offset = "0xF8BFE8", VA = "0xF8BFE8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xF8C268", Offset = "0xF8C268", VA = "0xF8C268")]
	public CanvasGroupAlphaToTransparency()
	{
	}
}
[Token(Token = "0x20001DB")]
public class DragPad : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Serializable]
	[Token(Token = "0x200059E")]
	public class DragPadEvent : UnityEvent<Vector2>
	{
		[Token(Token = "0x600229C")]
		[Address(RVA = "0x22EEDBC", Offset = "0x22EEDBC", VA = "0x22EEDBC")]
		public DragPadEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200059F")]
	public class DragPadEventSingle : UnityEvent<float>
	{
		[Token(Token = "0x600229D")]
		[Address(RVA = "0x22EEE0C", Offset = "0x22EEE0C", VA = "0x22EEE0C")]
		public DragPadEventSingle()
		{
		}
	}

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform contentViewRect;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform markerImage;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 startValue;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 minValue;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 maxValue;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 normalizedPosition;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool flipOutX;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool flipOutY;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool resetToStartOnDragEnd;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startPos;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 pointerOffset;

	[NonSerialized]
	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RectTransform m_Rect;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private DragPadEvent m_OnValueChanged;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private DragPadEventSingle m_OnValueChangedX;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private DragPadEventSingle m_OnValueChangedY;

	[Token(Token = "0x17000055")]
	private RectTransform rectTransform
	{
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x22EDE08", Offset = "0x22EDE08", VA = "0x22EDE08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000056")]
	public DragPadEvent onValueChanged
	{
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x22EDEA0", Offset = "0x22EDEA0", VA = "0x22EDEA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x22EDEA8", Offset = "0x22EDEA8", VA = "0x22EDEA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public DragPadEventSingle onValueChangedX
	{
		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x22EDEB0", Offset = "0x22EDEB0", VA = "0x22EDEB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x22EDEB8", Offset = "0x22EDEB8", VA = "0x22EDEB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public DragPadEventSingle onValueChangedY
	{
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x22EDEC0", Offset = "0x22EDEC0", VA = "0x22EDEC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x22EDEC8", Offset = "0x22EDEC8", VA = "0x22EDEC8")]
		set
		{
		}
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x22EDED0", Offset = "0x22EDED0", VA = "0x22EDED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x22EDED4", Offset = "0x22EDED4", VA = "0x22EDED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x22EE114", Offset = "0x22EE114", VA = "0x22EE114")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x22EE118", Offset = "0x22EE118", VA = "0x22EE118")]
	private Vector3 convertedMousePos(Vector3 inMousePos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x22EE374", Offset = "0x22EE374", VA = "0x22EE374", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x22EE674", Offset = "0x22EE674", VA = "0x22EE674", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x22EE4E8", Offset = "0x22EE4E8", VA = "0x22EE4E8")]
	private void SetDraggedPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x22EE710", Offset = "0x22EE710", VA = "0x22EE710")]
	public void updateContentPosition()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x22EDFC4", Offset = "0x22EDFC4", VA = "0x22EDFC4")]
	public void SetDragPadValue(Vector2 normalizedValue)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x22EE99C", Offset = "0x22EE99C", VA = "0x22EE99C", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x22EEA40", Offset = "0x22EEA40", VA = "0x22EEA40")]
	public void saveSettings(string inName)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x22EEB08", Offset = "0x22EEB08", VA = "0x22EEB08")]
	public void loadSettings(string inName)
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x22EEC14", Offset = "0x22EEC14", VA = "0x22EEC14")]
	public void clearSettings(string inName)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x22EEC90", Offset = "0x22EEC90", VA = "0x22EEC90")]
	public DragPad()
	{
	}
}
[Token(Token = "0x20001DC")]
public class Explore_Planning_Manager : MonoBehaviour
{
	[Token(Token = "0x20005A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C830", Offset = "0xD0C830")]
	private sealed class <goToBeamView>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explore_Planning_Manager <>4__this;

		[Token(Token = "0x4002C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Treatment_RayBtn inObj;

		[Token(Token = "0x4002C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animation <camAnim>5__2;

		[Token(Token = "0x1700026F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x22F7028", Offset = "0x22F7028", VA = "0x22F7028", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x22F7090", Offset = "0x22F7090", VA = "0x22F7090", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x22F6948", Offset = "0x22F6948", VA = "0x22F6948")]
		[DebuggerHidden]
		public <goToBeamView>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x22F6B50", Offset = "0x22F6B50", VA = "0x22F6B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x22F6B54", Offset = "0x22F6B54", VA = "0x22F6B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x22F7030", Offset = "0x22F7030", VA = "0x22F7030", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C840", Offset = "0xD0C840")]
	private sealed class <returnFromBeamView>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Explore_Planning_Manager <>4__this;

		[Token(Token = "0x4002C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation <camAnim>5__2;

		[Token(Token = "0x17000271")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0x22F7358", Offset = "0x22F7358", VA = "0x22F7358", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000272")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0x22F73C0", Offset = "0x22F73C0", VA = "0x22F73C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022A4")]
		[Address(RVA = "0x22F6A38", Offset = "0x22F6A38", VA = "0x22F6A38")]
		[DebuggerHidden]
		public <returnFromBeamView>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x22F7098", Offset = "0x22F7098", VA = "0x22F7098", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A6")]
		[Address(RVA = "0x22F709C", Offset = "0x22F709C", VA = "0x22F709C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x22F7360", Offset = "0x22F7360", VA = "0x22F7360", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pancreatic_Cancer_States.state state;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Pancreatic_Cancer_States.state> allowedStates;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LegacyCameraControl mainCamera;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CameraTarget targetExplore;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CameraTarget targetPlanning;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float cameraTransitionTime;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BeamsPanel;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject BeamsSectors;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject BeamsRoot;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject lblExplore;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject lblPlanning;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Toggle tglExplore;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Toggle tglPlanning;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool wasPadOpen;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button closePadButton;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button openPadButton;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] beamsNonStreetViewUI;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] beamsStreetViewUI;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CameraTarget prevCamTarget;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public DragPad mainDragPad;

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x22F5924", Offset = "0x22F5924", VA = "0x22F5924")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x22F59D0", Offset = "0x22F59D0", VA = "0x22F59D0")]
	private void setAnimBool(GameObject inObj, string inBoolName, bool inValue)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x22F5B48", Offset = "0x22F5B48", VA = "0x22F5B48")]
	private void setAnim(GameObject inObj, string inAnimName)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x22F5C5C", Offset = "0x22F5C5C", VA = "0x22F5C5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x22F613C", Offset = "0x22F613C", VA = "0x22F613C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x22F6140", Offset = "0x22F6140", VA = "0x22F6140")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x22F6290", Offset = "0x22F6290", VA = "0x22F6290")]
	public void onExplore(bool isOn)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x22F6428", Offset = "0x22F6428", VA = "0x22F6428")]
	public void onPlanning(bool isOn)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x22F64D8", Offset = "0x22F64D8", VA = "0x22F64D8")]
	public void onRadiation(bool isOn)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x22F6348", Offset = "0x22F6348", VA = "0x22F6348")]
	private void moveCameraToTarget(CameraTarget inTarget, [Optional] Action onFinishedCallback)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x22F65A8", Offset = "0x22F65A8", VA = "0x22F65A8")]
	public void onBeamBtn_DblClick(Treatment_RayBtn inObj)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x22F6650", Offset = "0x22F6650", VA = "0x22F6650")]
	private void startAnimOnObjects(GameObject[] inArray, string inAnim)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x22F674C", Offset = "0x22F674C", VA = "0x22F674C")]
	private bool isAnimationsFinishedOnObjects(GameObject[] inArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x22F6850", Offset = "0x22F6850", VA = "0x22F6850")]
	private void setObjectsActive(GameObject[] inArray, bool inActive)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x22F68CC", Offset = "0x22F68CC", VA = "0x22F68CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21EAC", Offset = "0xD21EAC")]
	private IEnumerator goToBeamView(Treatment_RayBtn inObj)
	{
		return null;
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x22F6974", Offset = "0x22F6974", VA = "0x22F6974")]
	public void onReturnFromBeamView()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x22F69C8", Offset = "0x22F69C8", VA = "0x22F69C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21F10", Offset = "0xD21F10")]
	private IEnumerator returnFromBeamView()
	{
		return null;
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x22F6144", Offset = "0x22F6144", VA = "0x22F6144")]
	public void clearSettings()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x22F650C", Offset = "0x22F650C", VA = "0x22F650C")]
	private void saveSettings()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x22F60A0", Offset = "0x22F60A0", VA = "0x22F60A0")]
	private void loadSettings()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x22F6A64", Offset = "0x22F6A64", VA = "0x22F6A64")]
	public Explore_Planning_Manager()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x22F6ADC", Offset = "0x22F6ADC", VA = "0x22F6ADC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD21F74", Offset = "0xD21F74")]
	private void <onPlanning>b__20_0()
	{
	}
}
[Token(Token = "0x20001DD")]
public class FaceCamera : MonoBehaviour
{
	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x22F8EA4", Offset = "0x22F8EA4", VA = "0x22F8EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x22F8EA8", Offset = "0x22F8EA8", VA = "0x22F8EA8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x22F8FD4", Offset = "0x22F8FD4", VA = "0x22F8FD4")]
	public FaceCamera()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DE")]
public class DoubleTapEvent : UnityEvent<MonoBehaviour>
{
	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x22EDDB8", Offset = "0x22EDDB8", VA = "0x22EDDB8")]
	public DoubleTapEvent()
	{
	}
}
[Token(Token = "0x20001DF")]
public class Invoker_DoubleTap : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float doubleClickTime;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastClickTime;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DoubleTapEvent onDoubleClick;

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xFDF6A4", Offset = "0xFDF6A4", VA = "0xFDF6A4", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xFDF728", Offset = "0xFDF728", VA = "0xFDF728")]
	public Invoker_DoubleTap()
	{
	}
}
[Token(Token = "0x20001E0")]
public class PancreaticCancerSceneSwitch : MonoBehaviour
{
	[Token(Token = "0x20005A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C850", Offset = "0xD0C850")]
	private sealed class <startTransition>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PancreaticCancerSceneSwitch <>4__this;

		[Token(Token = "0x4002C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startTime>5__2;

		[Token(Token = "0x17000273")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022AD")]
			[Address(RVA = "0x230BECC", Offset = "0x230BECC", VA = "0x230BECC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x230BF34", Offset = "0x230BF34", VA = "0x230BF34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x230A984", Offset = "0x230A984", VA = "0x230A984")]
		[DebuggerHidden]
		public <startTransition>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x230BAC4", Offset = "0x230BAC4", VA = "0x230BAC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x230BAC8", Offset = "0x230BAC8", VA = "0x230BAC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x230BED4", Offset = "0x230BED4", VA = "0x230BED4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C860", Offset = "0xD0C860")]
	private sealed class <_LoadScene>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PancreaticCancerSceneSwitch <>4__this;

		[Token(Token = "0x4002C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <loadingOP>5__2;

		[Token(Token = "0x4002C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <orgWidth>5__3;

		[Token(Token = "0x17000275")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x230B5A4", Offset = "0x230B5A4", VA = "0x230B5A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x230B60C", Offset = "0x230B60C", VA = "0x230B60C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x230AA20", Offset = "0x230AA20", VA = "0x230AA20")]
		[DebuggerHidden]
		public <_LoadScene>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x230B090", Offset = "0x230B090", VA = "0x230B090", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x230B094", Offset = "0x230B094", VA = "0x230B094", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x230B5AC", Offset = "0x230B5AC", VA = "0x230B5AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C870", Offset = "0xD0C870")]
	private sealed class <finishTransition>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PancreaticCancerSceneSwitch <>4__this;

		[Token(Token = "0x4002C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LegacyCameraControl <mainCamCtrl>5__2;

		[Token(Token = "0x4002C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CameraTarget <mainCamCtrlTgt>5__3;

		[Token(Token = "0x4002C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startTime>5__4;

		[Token(Token = "0x17000277")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0x230BA54", Offset = "0x230BA54", VA = "0x230BA54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0x230BABC", Offset = "0x230BABC", VA = "0x230BABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x230AABC", Offset = "0x230AABC", VA = "0x230AABC")]
		[DebuggerHidden]
		public <finishTransition>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x230B614", Offset = "0x230B614", VA = "0x230B614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x230B618", Offset = "0x230B618", VA = "0x230B618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x230BA5C", Offset = "0x230BA5C", VA = "0x230BA5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string targetSceneName;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Additive;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool Async;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Canvas inputBlockerCanvas;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform progressBar;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RawImage curtainImage;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float curtainImageFadeTime;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Camera[] camerasForCurtain;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LegacyCameraControl transitionCamera;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool useSubScene;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LegacyCameraControl subSceneCamera;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject subSceneRoot;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator subSceneAnimator;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string animatorStartState;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool camAnimBeforeSubScene;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool camAnimAfterSubScene;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x230A664", Offset = "0x230A664", VA = "0x230A664")]
	public void switchScene(bool inValue)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x230A914", Offset = "0x230A914", VA = "0x230A914")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21F84", Offset = "0xD21F84")]
	private IEnumerator startTransition()
	{
		return null;
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x230A9B0", Offset = "0x230A9B0", VA = "0x230A9B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD21FE8", Offset = "0xD21FE8")]
	private IEnumerator _LoadScene()
	{
		return null;
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x230AA4C", Offset = "0x230AA4C", VA = "0x230AA4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2204C", Offset = "0xD2204C")]
	private IEnumerator finishTransition()
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x230AAE8", Offset = "0x230AAE8", VA = "0x230AAE8")]
	private void transitionCompleted()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x230AC10", Offset = "0x230AC10", VA = "0x230AC10")]
	private Texture2D screenShotFromCamera(Camera[] inCameras)
	{
		return null;
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x230AE50", Offset = "0x230AE50", VA = "0x230AE50")]
	private void setCurtainImage(Camera[] inCameras)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x230AEC0", Offset = "0x230AEC0", VA = "0x230AEC0")]
	private void clearCurtainImage()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x230AF04", Offset = "0x230AF04", VA = "0x230AF04")]
	public PancreaticCancerSceneSwitch()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x230AF90", Offset = "0x230AF90", VA = "0x230AF90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD220B0", Offset = "0xD220B0")]
	private void <switchScene>b__16_0()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x230AFE4", Offset = "0x230AFE4", VA = "0x230AFE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD220C0", Offset = "0xD220C0")]
	private void <finishTransition>b__19_0()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Pancreatic_Cancer_States
{
	[Token(Token = "0x20005A5")]
	public enum state
	{
		[Token(Token = "0x4002C34")]
		UNKNOWN,
		[Token(Token = "0x4002C35")]
		EXPLORING,
		[Token(Token = "0x4002C36")]
		PLANNING,
		[Token(Token = "0x4002C37")]
		RADIATION
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x230BF3C", Offset = "0x230BF3C", VA = "0x230BF3C")]
	public static void setStartState(state inState)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x230BFA8", Offset = "0x230BFA8", VA = "0x230BFA8")]
	public static bool useStartState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x230C01C", Offset = "0x230C01C", VA = "0x230C01C")]
	public static state getStartState()
	{
		return default(state);
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x230C06C", Offset = "0x230C06C", VA = "0x230C06C")]
	public Pancreatic_Cancer_States()
	{
	}
}
[Token(Token = "0x20001E2")]
public class TreatmentManager : MonoBehaviour
{
	[Token(Token = "0x20005A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C880", Offset = "0xD0C880")]
	private sealed class <goToBeamView>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TreatmentManager <>4__this;

		[Token(Token = "0x4002C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Treatment_RayBtn inObj;

		[Token(Token = "0x4002C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animation <camAnim>5__2;

		[Token(Token = "0x17000279")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022BF")]
			[Address(RVA = "0x232D9CC", Offset = "0x232D9CC", VA = "0x232D9CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x232DA34", Offset = "0x232DA34", VA = "0x232DA34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x232C86C", Offset = "0x232C86C", VA = "0x232C86C")]
		[DebuggerHidden]
		public <goToBeamView>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x232D4D8", Offset = "0x232D4D8", VA = "0x232D4D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x232D4DC", Offset = "0x232D4DC", VA = "0x232D4DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x232D9D4", Offset = "0x232D9D4", VA = "0x232D9D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C890", Offset = "0xD0C890")]
	private sealed class <returnFromBeamView>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TreatmentManager <>4__this;

		[Token(Token = "0x4002C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation <camAnim>5__2;

		[Token(Token = "0x1700027B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x232DCD8", Offset = "0x232DCD8", VA = "0x232DCD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x232DD40", Offset = "0x232DD40", VA = "0x232DD40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x232C95C", Offset = "0x232C95C", VA = "0x232C95C")]
		[DebuggerHidden]
		public <returnFromBeamView>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x232DA3C", Offset = "0x232DA3C", VA = "0x232DA3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x232DA40", Offset = "0x232DA40", VA = "0x232DA40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x232DCE0", Offset = "0x232DCE0", VA = "0x232DCE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C8A0", Offset = "0xD0C8A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<BeamAngleController, BeamAngleController> <>9__58_0;

		[Token(Token = "0x4002C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<BeamAngleController, float> <>9__58_1;

		[Token(Token = "0x4002C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<BeamAngleController, float>, float> <>9__58_2;

		[Token(Token = "0x4002C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<KeyValuePair<BeamAngleController, float>, BeamAngleController> <>9__58_3;

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x232D3B8", Offset = "0x232D3B8", VA = "0x232D3B8")]
		public <>c()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x232D3C0", Offset = "0x232D3C0", VA = "0x232D3C0")]
		internal BeamAngleController <buildNewBeamsAnim>b__58_0(BeamAngleController ctrl)
		{
			return null;
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x232D3C8", Offset = "0x232D3C8", VA = "0x232D3C8")]
		internal float <buildNewBeamsAnim>b__58_1(BeamAngleController ctrl)
		{
			return default(float);
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x232D448", Offset = "0x232D448", VA = "0x232D448")]
		internal float <buildNewBeamsAnim>b__58_2(KeyValuePair<BeamAngleController, float> i)
		{
			return default(float);
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x232D494", Offset = "0x232D494", VA = "0x232D494")]
		internal BeamAngleController <buildNewBeamsAnim>b__58_3(KeyValuePair<BeamAngleController, float> e)
		{
			return null;
		}
	}

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pancreatic_Cancer_States.state state;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Pancreatic_Cancer_States.state> allowedStates;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] NonStreetViewUI;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] StreetViewUI;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CameraTarget planningTarget;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CameraTarget radiationTarget;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool newAnimCreated;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float cameraTransitionTime;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CameraTarget prevCamTarget;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject BeamsPanel;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject BeamsSectors;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject BreathPad;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject TransparencyPad;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BreathAdapter breathAdapter;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BreathLimiter breathLimiter;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject belt;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject BeamsRoot;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float beamCycleTime;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float beamCyclePause;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] shortBeams;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] longBeams;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool showLongBeams;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool beamsOn;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool beamsAnimationOn;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Toggle tglExplore;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Toggle tglPlan;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Toggle tglRadiation;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool wasPadOpen;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Button closePadButton;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Button openPadButton;

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x232AC00", Offset = "0x232AC00", VA = "0x232AC00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x232ACAC", Offset = "0x232ACAC", VA = "0x232ACAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x232B974", Offset = "0x232B974", VA = "0x232B974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x232C4CC", Offset = "0x232C4CC", VA = "0x232C4CC")]
	public void onBeamBtn_DblClick(Treatment_RayBtn inObj)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x232C574", Offset = "0x232C574", VA = "0x232C574")]
	private void setObjectsActive(GameObject[] inArray, bool inActive)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x232C5F0", Offset = "0x232C5F0", VA = "0x232C5F0")]
	private void startAnimOnObjects(GameObject[] inArray, string inAnim)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x232C6EC", Offset = "0x232C6EC", VA = "0x232C6EC")]
	private bool isAnimationsFinishedOnObjects(GameObject[] inArray)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x232C7F0", Offset = "0x232C7F0", VA = "0x232C7F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD220D0", Offset = "0xD220D0")]
	private IEnumerator goToBeamView(Treatment_RayBtn inObj)
	{
		return null;
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x232C898", Offset = "0x232C898", VA = "0x232C898")]
	public void onReturnFromBeamView()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x232C8EC", Offset = "0x232C8EC", VA = "0x232C8EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22134", Offset = "0xD22134")]
	private IEnumerator returnFromBeamView()
	{
		return null;
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x232B134", Offset = "0x232B134", VA = "0x232B134")]
	private void setAnimBool(GameObject inObj, string inBoolName, bool inValue)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x232B2AC", Offset = "0x232B2AC", VA = "0x232B2AC")]
	private void setAnim(GameObject inObj, string inAnimName)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x232C988", Offset = "0x232C988", VA = "0x232C988")]
	public void OnExploreBtn(bool isOn)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x232C99C", Offset = "0x232C99C", VA = "0x232C99C")]
	public void OnPlanBtnGState(bool isOn)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x232C9B0", Offset = "0x232C9B0", VA = "0x232C9B0")]
	public void OnPlanBtn(bool isOn)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x232CB34", Offset = "0x232CB34", VA = "0x232CB34")]
	public void OnRadiationBtn(bool isOn)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x232B970", Offset = "0x232B970", VA = "0x232B970")]
	private void activateRaySectors(bool inActivate)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x232CD08", Offset = "0x232CD08", VA = "0x232CD08")]
	public void OnBackBtn()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x232CDF4", Offset = "0x232CDF4", VA = "0x232CDF4")]
	public void adjustBreath(Vector2 inValue)
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x232B3C0", Offset = "0x232B3C0", VA = "0x232B3C0")]
	private void turnBeamsOnOff()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x232CE9C", Offset = "0x232CE9C", VA = "0x232CE9C")]
	public void onInhale()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x232CEA4", Offset = "0x232CEA4", VA = "0x232CEA4")]
	public void onExhale()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x232CEB0", Offset = "0x232CEB0", VA = "0x232CEB0")]
	public void OnRadiationGating(bool isOn)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x232CEB4", Offset = "0x232CEB4", VA = "0x232CEB4")]
	public void OnRadiationBelt(bool isOn)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x232CFA8", Offset = "0x232CFA8", VA = "0x232CFA8")]
	public void onBeamVariant(int inVariant)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x232D014", Offset = "0x232D014", VA = "0x232D014")]
	public void onEnteringScene()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x232D0AC", Offset = "0x232D0AC", VA = "0x232D0AC")]
	public void onEnteringSceneFinished()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x232D154", Offset = "0x232D154", VA = "0x232D154")]
	private string transPath(Transform inObj, Transform inRoot)
	{
		return null;
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x232B984", Offset = "0x232B984", VA = "0x232B984")]
	private void buildNewBeamsAnim()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x232D298", Offset = "0x232D298", VA = "0x232D298")]
	public TreatmentManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E3")]
public class RayBtnEvent : UnityEvent<Treatment_RayBtn>
{
	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x2318884", Offset = "0x2318884", VA = "0x2318884")]
	public RayBtnEvent()
	{
	}
}
[Token(Token = "0x20001E4")]
public class Treatment_RayBtn : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler
{
	[Serializable]
	[Token(Token = "0x20005A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C8B0", Offset = "0xD0C8B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<Treatment_RayBtn, float>, float> <>9__19_0;

		[Token(Token = "0x4002C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Treatment_RayBtn, float>, Treatment_RayBtn> <>9__19_1;

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x23308F0", Offset = "0x23308F0", VA = "0x23308F0")]
		public <>c()
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x23308F8", Offset = "0x23308F8", VA = "0x23308F8")]
		internal float <recalcPrevNextCtrls>b__19_0(KeyValuePair<Treatment_RayBtn, float> i)
		{
			return default(float);
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x2330944", Offset = "0x2330944", VA = "0x2330944")]
		internal Treatment_RayBtn <recalcPrevNextCtrls>b__19_1(KeyValuePair<Treatment_RayBtn, float> e)
		{
			return null;
		}
	}

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 pointerOffset;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float radius;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BeamAngleController beamCtrl;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD14D00", Offset = "0xD14D00")]
	public bool parentCanvasPlaneToBeamCtrls;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD14D38", Offset = "0xD14D38")]
	public bool flipParentCanvasesPlane;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastPointerDownTime;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image backImage;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer btnMesh;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string btnMeshMatProperty;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform beamRect;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float sectorOpacity;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject sectorObject;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material material;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh sectorMesh;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Texture2D sectorTexture;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Canvas parentCanvas;

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x232DD48", Offset = "0x232DD48", VA = "0x232DD48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x232DE50", Offset = "0x232DE50", VA = "0x232DE50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x232E988", Offset = "0x232E988", VA = "0x232E988")]
	private void recalcPrevNextCtrls(bool forAll = false)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x232E1F0", Offset = "0x232E1F0", VA = "0x232E1F0")]
	private void updateSelfPositionToBeam()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x232F084", Offset = "0x232F084", VA = "0x232F084")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x232E4C8", Offset = "0x232E4C8", VA = "0x232E4C8")]
	private void updateBeamPosition()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x232FD38", Offset = "0x232FD38", VA = "0x232FD38", Slot = "7")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x232FD74", Offset = "0x232FD74", VA = "0x232FD74", Slot = "8")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x232FD78", Offset = "0x232FD78", VA = "0x232FD78", Slot = "9")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x232FE48", Offset = "0x232FE48", VA = "0x232FE48")]
	private Vector3 convertScreenPosToBtnPlane(PointerEventData eventData)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x232FFE8", Offset = "0x232FFE8", VA = "0x232FFE8", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x23302B0", Offset = "0x23302B0", VA = "0x23302B0", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x2330170", Offset = "0x2330170", VA = "0x2330170")]
	private void SetDraggedPosition(PointerEventData data)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x233034C", Offset = "0x233034C", VA = "0x233034C", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x2330430", Offset = "0x2330430", VA = "0x2330430")]
	private Vector3 correctWorldPosition(Vector3 position, Camera camera)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x232EE78", Offset = "0x232EE78", VA = "0x232EE78")]
	private Vector3 worldPosToBtnPlane(Vector3 inPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x232F2B0", Offset = "0x232F2B0", VA = "0x232F2B0")]
	public void updateSector()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x233066C", Offset = "0x233066C", VA = "0x233066C")]
	public void activateRaySector()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x2330718", Offset = "0x2330718", VA = "0x2330718")]
	public void deactivateRaySector()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x23307AC", Offset = "0x23307AC", VA = "0x23307AC")]
	public Treatment_RayBtn()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x2330850", Offset = "0x2330850", VA = "0x2330850")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22198", Offset = "0xD22198")]
	private void <OnEndDrag>b__30_0()
	{
	}
}
[Token(Token = "0x20001E5")]
public static class V3
{
	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xFD5540", Offset = "0xFD5540", VA = "0xFD5540")]
	public static float Angle(Vector3 v0, Vector3 v1, Vector3 normal)
	{
		return default(float);
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xFD5650", Offset = "0xFD5650", VA = "0xFD5650")]
	public static void Rotate(this Vector3 v, float angle, Vector3 axis)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xFD5710", Offset = "0xFD5710", VA = "0xFD5710")]
	public static Vector3 rotated(this Vector3 v, float angle, Vector3 axis)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20001E6")]
public class animBhvr_playingTransition : StateMachineBehaviour
{
	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x21C6930", Offset = "0x21C6930", VA = "0x21C6930", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x21C69D0", Offset = "0x21C69D0", VA = "0x21C69D0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x21C6A70", Offset = "0x21C6A70", VA = "0x21C6A70")]
	public animBhvr_playingTransition()
	{
	}
}
[Token(Token = "0x20001E7")]
public class SceneToggle : MonoBehaviour
{
	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Scene sceneOne;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Scene sceneTwo;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Scene sceneThree;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14D70", Offset = "0xD14D70")]
	public PlayableDirector masterDirector;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayableDirector directorOne;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayableDirector directorTwo;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayableDirector directorThree;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14DA8", Offset = "0xD14DA8")]
	public Material scene1Mat;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material scene2Mat;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material scene3Mat;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14DE0", Offset = "0xD14DE0")]
	public bool triggerSceneOne;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool triggerSceneTwo;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool triggerSceneThree;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool triggerReset;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14E18", Offset = "0xD14E18")]
	public float sceneOneStartInSeconds;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float sceneTwoStartInSeconds;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float sceneThreeStartInSeconds;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14E50", Offset = "0xD14E50")]
	public Canvas loadingCanvas;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text loadingText;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool loading;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int dots;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float dotsTime;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float dotStartTime;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14E88", Offset = "0xD14E88")]
	public HMDDetection hmd;

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x22DD710", Offset = "0x22DD710", VA = "0x22DD710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x22DD868", Offset = "0x22DD868", VA = "0x22DD868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x22DDA78", Offset = "0x22DDA78", VA = "0x22DDA78")]
	private void updateDots()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x22DDB70", Offset = "0x22DDB70", VA = "0x22DDB70")]
	private void showScene(int val)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x22DE110", Offset = "0x22DE110", VA = "0x22DE110")]
	private void disableScene(Scene s)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x22DDFB0", Offset = "0x22DDFB0", VA = "0x22DDFB0")]
	private void enableScene(Scene s, Material mat, PlayableDirector dir)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x22DDE94", Offset = "0x22DDE94", VA = "0x22DDE94")]
	private void resetScenes()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x22DE198", Offset = "0x22DE198", VA = "0x22DE198")]
	public void OnSceneLoaded(Scene s, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x22DE4FC", Offset = "0x22DE4FC", VA = "0x22DE4FC")]
	private void InitScenes()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x22DDF20", Offset = "0x22DDF20", VA = "0x22DDF20")]
	private void StartMasterDirector()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x22DDCC4", Offset = "0x22DDCC4", VA = "0x22DDCC4")]
	private void resetDirectors()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x22DE3AC", Offset = "0x22DE3AC", VA = "0x22DE3AC")]
	private void grabDirector(Scene s, out PlayableDirector dir)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x22DE5B8", Offset = "0x22DE5B8", VA = "0x22DE5B8")]
	public SceneToggle()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E8")]
public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, ISerializationCallbackReceiver
{
	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private List<TKey> keys;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private List<TValue> values;

	[Token(Token = "0x6000B90")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000B91")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000B92")]
	public SerializableDictionary()
	{
	}
}
[Token(Token = "0x20001E9")]
[ExecuteInEditMode]
public class ShaderPositionPropertySetter : MonoBehaviour
{
	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string shaderDataName;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxSubMaterialsCount;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gameObjectToReadPosition;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] objectToWriteShaderData;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject gameObjectToReadPositionOld;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material[] objectToWriteShaderDataOld;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material[,] objectMaterials;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastVector;

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x22E1320", Offset = "0x22E1320", VA = "0x22E1320")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x22E1324", Offset = "0x22E1324", VA = "0x22E1324")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x22E1694", Offset = "0x22E1694", VA = "0x22E1694")]
	private void UpdateShader()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x22E1950", Offset = "0x22E1950", VA = "0x22E1950")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x22E1A3C", Offset = "0x22E1A3C", VA = "0x22E1A3C")]
	public ShaderPositionPropertySetter()
	{
	}
}
[Token(Token = "0x20001EA")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x2341390", Offset = "0x2341390", VA = "0x2341390")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20001EB")]
public class EndMeal : StateMachineBehaviour
{
	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Stomach_Diabetes stomach;

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x22F5380", Offset = "0x22F5380", VA = "0x22F5380", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x22F53F4", Offset = "0x22F53F4", VA = "0x22F53F4", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x22F5434", Offset = "0x22F5434", VA = "0x22F5434", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x22F547C", Offset = "0x22F547C", VA = "0x22F547C")]
	public EndMeal()
	{
	}
}
[Token(Token = "0x20001EC")]
public class Stomach_Diabetes : MonoBehaviour
{
	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14EE0", Offset = "0xD14EE0")]
	public Toggle mealToggle;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image mealBackgroundImage;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider speedSlider;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minSpeed;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxSpeed;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14F18", Offset = "0xD14F18")]
	public Animator animStomach;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator animStomachGlass;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool digesting;

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x22C55A4", Offset = "0x22C55A4", VA = "0x22C55A4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x22C5714", Offset = "0x22C5714", VA = "0x22C5714")]
	public void OnSpeedChange(float val)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x22C5838", Offset = "0x22C5838", VA = "0x22C5838")]
	public void OnMealToggled(bool val)
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x22C5A0C", Offset = "0x22C5A0C", VA = "0x22C5A0C")]
	public void ResetToggle()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x22C5AE8", Offset = "0x22C5AE8", VA = "0x22C5AE8")]
	public Stomach_Diabetes()
	{
	}
}
[Token(Token = "0x20001ED")]
public class ButtonAsset : PlayableAsset
{
	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Button> ButtonReference;

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xF85494", Offset = "0xF85494", VA = "0xF85494", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xF855EC", Offset = "0xF855EC", VA = "0xF855EC")]
	public ButtonAsset()
	{
	}
}
[Token(Token = "0x20001EE")]
public class ButtonListenerAsset : PlayableAsset
{
	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Button> ButtonReference;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<PlayableDirector> directorReference;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent uEvent;

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xF855F4", Offset = "0xF855F4", VA = "0xF855F4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xF858AC", Offset = "0xF858AC", VA = "0xF858AC")]
	public ButtonListenerAsset()
	{
	}
}
[Token(Token = "0x20001EF")]
public class ButtonListenerPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Button but;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool pressed;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEvent uEvent;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayableDirector director;

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xF857B8", Offset = "0xF857B8", VA = "0xF857B8")]
	public void Initialize(Button b, UnityEvent u, PlayableDirector d)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xF858B4", Offset = "0xF858B4", VA = "0xF858B4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xF85AF0", Offset = "0xF85AF0", VA = "0xF85AF0")]
	public void OnButtonClicked()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xF85AFC", Offset = "0xF85AFC", VA = "0xF85AFC")]
	public ButtonListenerPlayable()
	{
	}
}
[Token(Token = "0x20001F0")]
public class ButtonPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Button but;

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xF85B04", Offset = "0xF85B04", VA = "0xF85B04")]
	public void Initialize(Button b)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xF85B0C", Offset = "0xF85B0C", VA = "0xF85B0C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xF85C28", Offset = "0xF85C28", VA = "0xF85C28")]
	public ButtonPlayable()
	{
	}
}
[Token(Token = "0x20001F1")]
public class GameObjectOnClickListenerAsset : PlayableAsset
{
	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14F50", Offset = "0xD14F50")]
	public ExposedReference<PlayableDirector> DirectorReference;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14F88", Offset = "0xD14F88")]
	public ExposedReference<HelpGameObjectSelection> TrueGameObjectReference;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExposedReference<HelpGameObjectSelection> FalseGameObjectReference;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14FC0", Offset = "0xD14FC0")]
	public float trueResult;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float falseResult;

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x22FC5A4", Offset = "0x22FC5A4", VA = "0x22FC5A4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x22FC8E0", Offset = "0x22FC8E0", VA = "0x22FC8E0")]
	public GameObjectOnClickListenerAsset()
	{
	}
}
[Token(Token = "0x20001F2")]
public class GameObjectOnClickListenerPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HelpGameObjectSelection trueGO;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HelpGameObjectSelection falseGO;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool result;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool somethingClicked;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayableDirector director;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float trueResult;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float falseResult;

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x22FC7BC", Offset = "0x22FC7BC", VA = "0x22FC7BC")]
	public void Initialize(HelpGameObjectSelection tg, HelpGameObjectSelection fg, PlayableDirector d, float t, float f)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x22FC904", Offset = "0x22FC904", VA = "0x22FC904", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x22FCB18", Offset = "0x22FCB18", VA = "0x22FCB18", Slot = "22")]
	public virtual void NodeSelected(bool val)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x22FCBD4", Offset = "0x22FCBD4", VA = "0x22FCBD4")]
	public GameObjectOnClickListenerPlayable()
	{
	}
}
[Token(Token = "0x20001F3")]
public class HelpGameObjectSelection : MonoBehaviour
{
	[Token(Token = "0x20005AA")]
	public delegate void NodeSelected(bool val);

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD14FF8", Offset = "0xD14FF8")]
	public bool result;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NodeSelected OnNodeSelected;

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x230155C", Offset = "0x230155C", VA = "0x230155C")]
	public void OnMouseUpAsButton()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x230187C", Offset = "0x230187C", VA = "0x230187C")]
	public HelpGameObjectSelection()
	{
	}
}
[Token(Token = "0x20001F4")]
public class MaterialPropertyAsset : PlayableAsset
{
	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Renderer> RendererReference;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string materialName;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string materialProperty;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float min;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float max;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve curve;

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x13DD450", Offset = "0x13DD450", VA = "0x13DD450", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x13DD574", Offset = "0x13DD574", VA = "0x13DD574")]
	public MaterialPropertyAsset()
	{
	}
}
[Token(Token = "0x20001F5")]
public class MaterialPropertyPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Renderer rend;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string materialName;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string materialProperty;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float min;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float max;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AnimationCurve curve;

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x13DD560", Offset = "0x13DD560", VA = "0x13DD560")]
	public void Initialize(Renderer r, string material, string property, float mn, float mx, AnimationCurve c)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x13DD604", Offset = "0x13DD604", VA = "0x13DD604", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x13DD800", Offset = "0x13DD800", VA = "0x13DD800")]
	public MaterialPropertyPlayable()
	{
	}
}
[Token(Token = "0x20001F6")]
public class PadControlAsset : PlayableAsset
{
	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<ScrollRect> ScrollRectReference;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve horzCurve;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve vertCurve;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 min;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 max;

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x23099EC", Offset = "0x23099EC", VA = "0x23099EC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x2309B68", Offset = "0x2309B68", VA = "0x2309B68")]
	public PadControlAsset()
	{
	}
}
[Token(Token = "0x20001F7")]
public class PadControlPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ScrollRect sRect;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 min;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 max;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AnimationCurve curveHorz;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AnimationCurve curveVert;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x2309B54", Offset = "0x2309B54", VA = "0x2309B54")]
	public void Initialize(ScrollRect s, Vector2 mn, Vector2 mx, AnimationCurve c1, AnimationCurve c2)
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x2309C2C", Offset = "0x2309C2C", VA = "0x2309C2C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x2309DEC", Offset = "0x2309DEC", VA = "0x2309DEC")]
	public PadControlPlayable()
	{
	}
}
[Token(Token = "0x20001F8")]
public class PauseTimelineAsset : PlayableAsset
{
	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<PlayableDirector> directorReference;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<Button> NextButtonReferance;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExposedReference<Button> PrevButtonReferance;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15030", Offset = "0xD15030")]
	public float nextVal;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float prevVal;

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x230E300", Offset = "0x230E300", VA = "0x230E300", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x230E68C", Offset = "0x230E68C", VA = "0x230E68C")]
	public PauseTimelineAsset()
	{
	}
}
[Token(Token = "0x20001F9")]
public class PauseTimelinePlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PlayableDirector director;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button nextBut;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button prevBut;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int id;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float next;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float prev;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentId;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float frameToGoTo;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int pausedId;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x230E500", Offset = "0x230E500", VA = "0x230E500")]
	public void Initialize(PlayableDirector d, Button n, Button p, int i, float nt, float pv)
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x230E69C", Offset = "0x230E69C", VA = "0x230E69C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x230E7CC", Offset = "0x230E7CC", VA = "0x230E7CC", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x230E934", Offset = "0x230E934", VA = "0x230E934")]
	public void OnNextClicked(int id)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x230E94C", Offset = "0x230E94C", VA = "0x230E94C")]
	public void OnPrevClicked(int id)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x230E964", Offset = "0x230E964", VA = "0x230E964")]
	public PauseTimelinePlayable()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x230E990", Offset = "0x230E990", VA = "0x230E990")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD221C8", Offset = "0xD221C8")]
	private void <Initialize>b__9_0()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x230E9AC", Offset = "0x230E9AC", VA = "0x230E9AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD221D8", Offset = "0xD221D8")]
	private void <Initialize>b__9_1()
	{
	}
}
[Token(Token = "0x20001FA")]
public class SliderAsset : PlayableAsset
{
	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Slider> SliderReference;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float min;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float max;

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x22EA6D4", Offset = "0x22EA6D4", VA = "0x22EA6D4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x22EA844", Offset = "0x22EA844", VA = "0x22EA844")]
	public SliderAsset()
	{
	}
}
[Token(Token = "0x20001FB")]
public class SliderPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Slider slide;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float min;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float max;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationCurve curve;

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x22EA834", Offset = "0x22EA834", VA = "0x22EA834")]
	public void Initialize(Slider s, float mn, float mx, AnimationCurve c)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x22EA8C0", Offset = "0x22EA8C0", VA = "0x22EA8C0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x22EAA18", Offset = "0x22EAA18", VA = "0x22EAA18")]
	public SliderPlayable()
	{
	}
}
[Token(Token = "0x20001FC")]
public class TextPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Text textUI;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string text;

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x22C8F70", Offset = "0x22C8F70", VA = "0x22C8F70")]
	public void Initialize(Text ui, string t)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x22C8F78", Offset = "0x22C8F78", VA = "0x22C8F78", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x22C9090", Offset = "0x22C9090", VA = "0x22C9090")]
	public TextPlayable()
	{
	}
}
[Token(Token = "0x20001FD")]
public class TextPlayableAsset : PlayableAsset
{
	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Text> TextReference;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x22C90F0", Offset = "0x22C90F0", VA = "0x22C90F0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x22C924C", Offset = "0x22C924C", VA = "0x22C924C")]
	public TextPlayableAsset()
	{
	}
}
[Token(Token = "0x20001FE")]
public class ToggleAsset : PlayableAsset
{
	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Toggle> ToggleReference;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool state;

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x2327124", Offset = "0x2327124", VA = "0x2327124", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x2327294", Offset = "0x2327294", VA = "0x2327294")]
	public ToggleAsset()
	{
	}
}
[Token(Token = "0x20001FF")]
public class TogglePlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Toggle tog;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool state;

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x2327284", Offset = "0x2327284", VA = "0x2327284")]
	public void Initialize(Toggle t, bool b)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x2327980", Offset = "0x2327980", VA = "0x2327980", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x2327AA8", Offset = "0x2327AA8", VA = "0x2327AA8")]
	public TogglePlayable()
	{
	}
}
[Token(Token = "0x2000200")]
public class UIGraphicColorAsset : PlayableAsset
{
	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Graphic> SelectableReference;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color startColor;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color endColor;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve curve;

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x2332280", Offset = "0x2332280", VA = "0x2332280", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x233240C", Offset = "0x233240C", VA = "0x233240C")]
	public UIGraphicColorAsset()
	{
	}
}
[Token(Token = "0x2000201")]
public class UIGraphicColorPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Graphic ui;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color startColor;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color endColor;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AnimationCurve curve;

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x23323F0", Offset = "0x23323F0", VA = "0x23323F0")]
	public void Initialize(Graphic g, Color sC, Color eC, AnimationCurve c)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x233246C", Offset = "0x233246C", VA = "0x233246C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x23325F0", Offset = "0x23325F0", VA = "0x23325F0")]
	public UIGraphicColorPlayable()
	{
	}
}
[Token(Token = "0x2000202")]
public class UISelectableColorAsset : PlayableAsset
{
	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Selectable> SelectableReference;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color startColor;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color endColor;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve curve;

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x23327CC", Offset = "0x23327CC", VA = "0x23327CC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x2332A30", Offset = "0x2332A30", VA = "0x2332A30")]
	public UISelectableColorAsset()
	{
	}
}
[Token(Token = "0x2000203")]
public class UISelectableColorPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Selectable ui;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color startColor;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color endColor;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AnimationCurve curve;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ColorBlock cBlock;

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x233293C", Offset = "0x233293C", VA = "0x233293C")]
	public void Initialize(Selectable s, Color sC, Color eC, AnimationCurve c)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x2332A90", Offset = "0x2332A90", VA = "0x2332A90", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x2332C38", Offset = "0x2332C38", VA = "0x2332C38")]
	public UISelectableColorPlayable()
	{
	}
}
[Token(Token = "0x2000204")]
public class UnityEventAsset : PlayableAsset
{
	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent uEvent;

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xFCB780", Offset = "0xFCB780", VA = "0xFCB780", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xFCB888", Offset = "0xFCB888", VA = "0xFCB888")]
	public UnityEventAsset()
	{
	}
}
[Token(Token = "0x2000205")]
public class UnityEventPlayable : PlayableBehaviour
{
	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private UnityEvent uEvent;

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xFCB890", Offset = "0xFCB890", VA = "0xFCB890")]
	public void Initialize(UnityEvent u)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xFCB898", Offset = "0xFCB898", VA = "0xFCB898", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xFCB980", Offset = "0xFCB980", VA = "0xFCB980")]
	public UnityEventPlayable()
	{
	}
}
[Token(Token = "0x2000206")]
public class TransformGlue : MonoBehaviour
{
	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToFollow;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useStartPosition;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool updateRotation;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 distance;

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x2329674", Offset = "0x2329674", VA = "0x2329674")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x2329768", Offset = "0x2329768", VA = "0x2329768")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x2329684", Offset = "0x2329684", VA = "0x2329684")]
	public void InitDistance()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x23298B4", Offset = "0x23298B4", VA = "0x23298B4")]
	public TransformGlue()
	{
	}
}
[Token(Token = "0x2000207")]
public class TransformGlueV2 : MonoBehaviour
{
	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15068", Offset = "0xD15068")]
	public Transform targetTransform;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD150A0", Offset = "0xD150A0")]
	public bool updatePosition;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool maintainPosition;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD150D8", Offset = "0xD150D8")]
	public bool updateRotation;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool maintainRotation;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _distanceToTargetVector3;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _container;

	[Token(Token = "0x4000FFB")]
	private const string ContainerName = " (TransformGlue)";

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x2329934", Offset = "0x2329934", VA = "0x2329934")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x2329C74", Offset = "0x2329C74", VA = "0x2329C74")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x23299B8", Offset = "0x23299B8", VA = "0x23299B8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x2329E08", Offset = "0x2329E08", VA = "0x2329E08")]
	public TransformGlueV2()
	{
	}
}
[Serializable]
[Token(Token = "0x2000208")]
public class TransparencyControllerEntry
{
	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer renderer;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float amount;

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x232ABC0", Offset = "0x232ABC0", VA = "0x232ABC0")]
	public TransparencyControllerEntry()
	{
	}
}
[Token(Token = "0x2000209")]
[ExecuteInEditMode]
public class TransparencyController : MonoBehaviour
{
	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useMaterialsInPlayer;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amount;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TransparencyControllerEntry> targetObjects;

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x232A88C", Offset = "0x232A88C", VA = "0x232A88C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x232AB50", Offset = "0x232AB50", VA = "0x232AB50")]
	public TransparencyController()
	{
	}
}
[Token(Token = "0x200020A")]
public enum PlatformTypes
{
	[Token(Token = "0x4001003")]
	PC,
	[Token(Token = "0x4001004")]
	Mac,
	[Token(Token = "0x4001005")]
	iOS,
	[Token(Token = "0x4001006")]
	Android,
	[Token(Token = "0x4001007")]
	Vive,
	[Token(Token = "0x4001008")]
	Oculus,
	[Token(Token = "0x4001009")]
	WebGL
}
[Token(Token = "0x200020B")]
public enum SceneType
{
	[Token(Token = "0x400100B")]
	Anatomy,
	[Token(Token = "0x400100C")]
	Physiology,
	[Token(Token = "0x400100D")]
	Microscopic
}
[Token(Token = "0x200020C")]
public class BlurPanelCameraController : MonoBehaviour
{
	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform rectTransform;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera blurCamera;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Canvas guiCanvas;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rect calcRect;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CanvasScaler canvasScalar;

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xF826D4", Offset = "0xF826D4", VA = "0xF826D4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xF82788", Offset = "0xF82788", VA = "0xF82788")]
	private void DoScalePanel()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xF82968", Offset = "0xF82968", VA = "0xF82968")]
	public BlurPanelCameraController()
	{
	}
}
[Token(Token = "0x200020D")]
public class ExitApp : MonoBehaviour
{
	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject confirmationDialog;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle dontAskToggle;

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x22F5718", Offset = "0x22F5718", VA = "0x22F5718")]
	private void OnExitConfirmed()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x22F5720", Offset = "0x22F5720", VA = "0x22F5720")]
	public void OnExitToggle(bool value)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x22F5878", Offset = "0x22F5878", VA = "0x22F5878")]
	public void OnDialogExitConfirmation()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x22F591C", Offset = "0x22F591C", VA = "0x22F591C")]
	public ExitApp()
	{
	}
}
[Token(Token = "0x200020E")]
public class FpsCounterSwitch : MonoBehaviour
{
	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject fpsCounterGameObject;

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x22FC57C", Offset = "0x22FC57C", VA = "0x22FC57C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x22FC59C", Offset = "0x22FC59C", VA = "0x22FC59C")]
	public FpsCounterSwitch()
	{
	}
}
[Token(Token = "0x200020F")]
public class VRToggleFilter : MonoBehaviour
{
	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fireOnTrueOnly;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onFire;

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x12367E8", Offset = "0x12367E8", VA = "0x12367E8")]
	public void OnValueChanged(bool inValue)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x1236808", Offset = "0x1236808", VA = "0x1236808")]
	public VRToggleFilter()
	{
	}
}
[Token(Token = "0x2000210")]
public class VRToggleTeleporter : MonoBehaviour
{
	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeleportationProvider teleportProvider;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Camera startingCameraPosition;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15130", Offset = "0xD15130")]
	public Transform[] transformsToRestore;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] deltaPos;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion[] deltaRot;

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x1236878", Offset = "0x1236878", VA = "0x1236878")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x1236900", Offset = "0x1236900", VA = "0x1236900")]
	public void TeleportTo(Camera inTargetCamera)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x1236DC4", Offset = "0x1236DC4", VA = "0x1236DC4")]
	private void onLocomotionEnd(LocomotionSystem obj)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x12371EC", Offset = "0x12371EC", VA = "0x12371EC")]
	public VRToggleTeleporter()
	{
	}
}
[Token(Token = "0x2000211")]
public class CleanWebCamActiveValue : MonoBehaviour
{
	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xF8C364", Offset = "0xF8C364", VA = "0xF8C364")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xF8C3D8", Offset = "0xF8C3D8", VA = "0xF8C3D8")]
	public CleanWebCamActiveValue()
	{
	}
}
[Token(Token = "0x2000212")]
public class InfoBoxDataManager : MonoBehaviour
{
	[Token(Token = "0x20005AB")]
	public struct InfoBoxInfo
	{
		[Token(Token = "0x4002C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4002C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string infoHeader;

		[Token(Token = "0x4002C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string infoText;
	}

	[Token(Token = "0x20005AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C8C0", Offset = "0xD0C8C0")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4002C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dictionaryName;

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x23034CC", Offset = "0x23034CC", VA = "0x23034CC")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x2303538", Offset = "0x2303538", VA = "0x2303538")]
		internal bool <ParseRevealsDictionary>b__0(string value)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400101D")]
	[HideInInspector]
	public const int allRevealsIndex = -1;

	[Token(Token = "0x400101E")]
	private const string allRevealsKey = "[ALL]";

	[Token(Token = "0x400101F")]
	private const string fileNameFormat = "SceneInfo_YOU2020_{0}.csv";

	[Token(Token = "0x4001020")]
	private const string folderName = "SceneInfo/";

	[Token(Token = "0x4001021")]
	private const char csvDataDelimiter = ';';

	[Token(Token = "0x4001022")]
	private const char dictionaryDataDelimiter = ',';

	[Token(Token = "0x4001023")]
	private const char dictionaryValueDelimiter = '=';

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string SPLIT_RE;

	[Token(Token = "0x4001025")]
	private const int idCol = 2;

	[Token(Token = "0x4001026")]
	private const int revealsForInfoCol = 3;

	[Token(Token = "0x4001027")]
	private const int headerCol = 4;

	[Token(Token = "0x4001028")]
	private const int infoCol = 5;

	[Token(Token = "0x4001029")]
	private const string revealsDictionarySufix = "_RevealsDictionary";

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x2302A84", Offset = "0x2302A84", VA = "0x2302A84")]
	public static Dictionary<int, InfoBoxInfo> GetSceneInfo(string scene, string condition, string locale = "en-US")
	{
		return null;
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x2302B00", Offset = "0x2302B00", VA = "0x2302B00")]
	private static Dictionary<int, InfoBoxInfo> LoadInfoData(string sceneName, string condition, string locale)
	{
		return null;
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x23030E0", Offset = "0x23030E0", VA = "0x23030E0")]
	private static Dictionary<string, int> ParseRevealsDictionary(string sceneName, string condition, List<string> fileData)
	{
		return null;
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x23034A4", Offset = "0x23034A4", VA = "0x23034A4")]
	private static string GetKeyFromString(string value)
	{
		return null;
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x23034D4", Offset = "0x23034D4", VA = "0x23034D4")]
	public InfoBoxDataManager()
	{
	}
}
[Token(Token = "0x2000213")]
public class InfoBoxVideoControl : MonoBehaviour
{
	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MediaPlayer videoPlayer;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button playButton;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button pauseButton;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider _videoSeekSlider;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _setVideoSeekSliderValue;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _wasPlayingOnScrub;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider _audioVolumeSlider;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite posterSprite;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float posterFadeOutTime;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image posterFrame;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool initialized;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TofuSettingsAudioController _tofuSettingsAudiController;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TofuBackgroundAudioController _musicControl;

	[Token(Token = "0x17000059")]
	private TofuSettingsAudioController tofuSettingsAudiController
	{
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x230355C", Offset = "0x230355C", VA = "0x230355C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	private TofuBackgroundAudioController musicControl
	{
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x2303610", Offset = "0x2303610", VA = "0x2303610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x23036C0", Offset = "0x23036C0", VA = "0x23036C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x230376C", Offset = "0x230376C", VA = "0x230376C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x2303940", Offset = "0x2303940", VA = "0x2303940")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x2303A48", Offset = "0x2303A48", VA = "0x2303A48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x23038A4", Offset = "0x23038A4", VA = "0x23038A4")]
	public bool VideoFileAssigned()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x2303E50", Offset = "0x2303E50", VA = "0x2303E50")]
	public void OnPlayButton()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x23040E0", Offset = "0x23040E0", VA = "0x23040E0")]
	public void OnPauseButton()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x2304240", Offset = "0x2304240", VA = "0x2304240")]
	public void OnVideoPanelBecomeInactive()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x2304244", Offset = "0x2304244", VA = "0x2304244")]
	public void OnVideoSeekSlider()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x2304578", Offset = "0x2304578", VA = "0x2304578")]
	public void OnVideoSliderDown()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x2304720", Offset = "0x2304720", VA = "0x2304720")]
	public void OnVideoSliderUp()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x230482C", Offset = "0x230482C", VA = "0x230482C")]
	public void OnAudioVolumeSlider()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x2304AB0", Offset = "0x2304AB0", VA = "0x2304AB0")]
	public void OnVolumeChangedInSettings(float value)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x2303CE4", Offset = "0x2303CE4", VA = "0x2303CE4")]
	private void UpdatePlayButtonsState()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x22ED86C", Offset = "0x22ED86C", VA = "0x22ED86C")]
	public void LoadVolumeSettings()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x23049BC", Offset = "0x23049BC", VA = "0x23049BC")]
	private void UpdateVolumeSettings()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x23036C4", Offset = "0x23036C4", VA = "0x23036C4")]
	private void SetPosterImage()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x2304C68", Offset = "0x2304C68", VA = "0x2304C68")]
	public InfoBoxVideoControl()
	{
	}
}
[Token(Token = "0x2000214")]
public class WebcamViewController : MonoBehaviour
{
	[Token(Token = "0x20005AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C8D0", Offset = "0xD0C8D0")]
	private sealed class <DelayedActivation>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WebcamViewController <>4__this;

		[Token(Token = "0x4002C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700027D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x13324E4", Offset = "0x13324E4", VA = "0x13324E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0x133254C", Offset = "0x133254C", VA = "0x133254C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x1332324", Offset = "0x1332324", VA = "0x1332324")]
		[DebuggerHidden]
		public <DelayedActivation>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x13323F8", Offset = "0x13323F8", VA = "0x13323F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x13323FC", Offset = "0x13323FC", VA = "0x13323FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x13324EC", Offset = "0x13324EC", VA = "0x13324EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Toggle onWebcamToggle;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle offWebcamToggle;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TMP_Dropdown camPicker;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RawImage webcamViewImage;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject accessWarningPanel;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject webcamTogglesPanel;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject webcamPickerPanel;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject webcamAccessPanel;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WebCamDevice[] webCams;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WebCamTexture webcamTextture;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine deviceListCheck;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int camSelected;

	[Token(Token = "0x4001043")]
	private const string prefsKeyLastCam = "WebcamView_lastCam";

	[Token(Token = "0x4001044")]
	public const string prefsKeyWasActive = "WebcamView_camActive";

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int targetFPS;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int activityCheckDelayFrames;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int authorizationCheckIntervalFrames;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool devicesUpdated;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector2 imageResolution;

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x1331A34", Offset = "0x1331A34", VA = "0x1331A34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x1331A38", Offset = "0x1331A38", VA = "0x1331A38")]
	private void UpdateDevicesList()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x1331DFC", Offset = "0x1331DFC", VA = "0x1331DFC")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x1331E00", Offset = "0x1331E00", VA = "0x1331E00")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x1331E4C", Offset = "0x1331E4C", VA = "0x1331E4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x1331EF4", Offset = "0x1331EF4", VA = "0x1331EF4")]
	public bool WebcamActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x1331F64", Offset = "0x1331F64", VA = "0x1331F64")]
	public void SetWebcamActive(bool value)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x1332028", Offset = "0x1332028", VA = "0x1332028")]
	private void CheckAccessAndStart()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x133202C", Offset = "0x133202C", VA = "0x133202C")]
	private void StartWebcam()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x1332154", Offset = "0x1332154", VA = "0x1332154")]
	public void SetPlaying(bool value)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x1332208", Offset = "0x1332208", VA = "0x1332208")]
	public void OnCamPickerSelect(int value)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x1332318", Offset = "0x1332318", VA = "0x1332318")]
	public void OnCameraAccessSettingsButton()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x133231C", Offset = "0x133231C", VA = "0x133231C")]
	public void OnCameraAccessRequestButton()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x1332320", Offset = "0x1332320", VA = "0x1332320")]
	private void UpdateUIAccordingToCurrentAccessStatus()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x1331D8C", Offset = "0x1331D8C", VA = "0x1331D8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD221E8", Offset = "0xD221E8")]
	private IEnumerator DelayedActivation()
	{
		return null;
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x1331E50", Offset = "0x1331E50", VA = "0x1331E50")]
	private void StopTexture()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x1331B5C", Offset = "0x1331B5C", VA = "0x1331B5C")]
	private void UpdateCamPicker()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x1331AF4", Offset = "0x1331AF4", VA = "0x1331AF4")]
	private void SetWebcamSettingsActive(bool value)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x1331C84", Offset = "0x1331C84", VA = "0x1331C84")]
	private void LoadSettings()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x1332350", Offset = "0x1332350", VA = "0x1332350")]
	public WebcamViewController()
	{
	}
}
[Token(Token = "0x2000215")]
public enum PadState
{
	[Token(Token = "0x400104B")]
	Normal,
	[Token(Token = "0x400104C")]
	Verticle,
	[Token(Token = "0x400104D")]
	Horizonal
}
[Token(Token = "0x2000216")]
public class MultiPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x20005AE")]
	public delegate void EventHandler(Vector2 value);

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15208", Offset = "0xD15208")]
	[ReadOnly]
	public Vector2 normalizedPosition;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	public float horizontalNormalizedPosition;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[ReadOnly]
	public float verticalNormalizedPosition;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15274", Offset = "0xD15274")]
	public Image background;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image overlay;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas canvas;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD152AC", Offset = "0xD152AC")]
	public MultiPadCursor cursor;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD152E4", Offset = "0xD152E4")]
	public Texture2D restrictionMap;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1531C", Offset = "0xD1531C")]
	public PadState state;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool enableRestriction;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 InitalPosition;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RectTransform rT;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Rect saveRect;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RectTransform cursor_rT;

	[Token(Token = "0x14000012")]
	public event EventHandler onValueChanged
	{
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xFBC304", Offset = "0xFBC304", VA = "0xFBC304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD2224C", Offset = "0xD2224C")]
		add
		{
		}
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xFBC3A8", Offset = "0xFBC3A8", VA = "0xFBC3A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD2225C", Offset = "0xD2225C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xFBC44C", Offset = "0xFBC44C", VA = "0xFBC44C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xFBC4FC", Offset = "0xFBC4FC", VA = "0xFBC4FC")]
	private void setupPad()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xFBC524", Offset = "0xFBC524", VA = "0xFBC524")]
	private void setupNormalPad()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xFBC628", Offset = "0xFBC628", VA = "0xFBC628")]
	private void setupHorizonalPad()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xFBC7C0", Offset = "0xFBC7C0", VA = "0xFBC7C0")]
	private void setupVerticlePad()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xFBD1C4", Offset = "0xFBD1C4", VA = "0xFBD1C4")]
	public RectTransform getRT()
	{
		return null;
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xFBD1CC", Offset = "0xFBD1CC", VA = "0xFBD1CC")]
	public void valueChanged()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xFBD458", Offset = "0xFBD458", VA = "0xFBD458")]
	public bool isRectTotalyInsidePad(Vector3 center, RectTransform rTC)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xFBD934", Offset = "0xFBD934", VA = "0xFBD934")]
	public bool isRectTotalyBelowTopOfPad(Vector3 center, RectTransform rTC)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xFBDCD4", Offset = "0xFBDCD4", VA = "0xFBDCD4")]
	public bool isRectTotalyLeftOfRightSideOfPad(Vector3 center, RectTransform rTC)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xFBDC1C", Offset = "0xFBDC1C", VA = "0xFBDC1C")]
	private void moveOverlayVertically(Vector2 center, Vector2 scaledSize)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xFBDFB8", Offset = "0xFBDFB8", VA = "0xFBDFB8")]
	private void moveOverlayHorizonally(Vector2 center, Vector2 scaledSize)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xFBE070", Offset = "0xFBE070", VA = "0xFBE070", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xFBC958", Offset = "0xFBC958", VA = "0xFBC958")]
	public void CalulatePositionFromNormal(Vector2 pos)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xFBCC04", Offset = "0xFBCC04", VA = "0xFBCC04")]
	public void CalulateHorzPositionFromNormal(Vector2 pos)
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xFBCEE4", Offset = "0xFBCEE4", VA = "0xFBCEE4")]
	public void CalulateVertPositionFromNormal(Vector2 pos)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xFBD868", Offset = "0xFBD868", VA = "0xFBD868")]
	private bool lookUpPositionOnColorMap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xFBE284", Offset = "0xFBE284", VA = "0xFBE284")]
	public MultiPad()
	{
	}
}
[Token(Token = "0x2000217")]
public class MultiPadCursor : MonoBehaviour, IDragHandler, IEventSystemHandler
{
	[Token(Token = "0x20005AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C8E0", Offset = "0xD0C8E0")]
	private sealed class <moveTo>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiPadCursor <>4__this;

		[Token(Token = "0x4002C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 destination;

		[Token(Token = "0x4002C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <i>5__2;

		[Token(Token = "0x1700027F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0xFBEC18", Offset = "0xFBEC18", VA = "0xFBEC18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0xFBEC80", Offset = "0xFBEC80", VA = "0xFBEC80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xFBE624", Offset = "0xFBE624", VA = "0xFBE624")]
		[DebuggerHidden]
		public <moveTo>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xFBE9F8", Offset = "0xFBE9F8", VA = "0xFBE9F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0xFBE9FC", Offset = "0xFBE9FC", VA = "0xFBE9FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0xFBEC20", Offset = "0xFBEC20", VA = "0xFBEC20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MultiPad pad;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas canvas;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	public RectTransform rT;

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xFBE3AC", Offset = "0xFBE3AC", VA = "0xFBE3AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xFBE154", Offset = "0xFBE154", VA = "0xFBE154")]
	public void OnPadPressed(Vector3 pos)
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xFBE404", Offset = "0xFBE404", VA = "0xFBE404")]
	private void moveToNormalPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xFBE4E0", Offset = "0xFBE4E0", VA = "0xFBE4E0")]
	private void moveToVerticlePosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xFBE430", Offset = "0xFBE430", VA = "0xFBE430")]
	private void moveToHorizonalPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xFBE590", Offset = "0xFBE590", VA = "0xFBE590")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2226C", Offset = "0xD2226C")]
	private IEnumerator moveTo(Vector3 destination)
	{
		return null;
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xFBE650", Offset = "0xFBE650", VA = "0xFBE650", Slot = "4")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xFBE73C", Offset = "0xFBE73C", VA = "0xFBE73C")]
	private void dragToNextPositionNormal(PointerEventData data)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xFBE8B8", Offset = "0xFBE8B8", VA = "0xFBE8B8")]
	private void dragToNextVerticleNormal(PointerEventData data)
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xFBE7F8", Offset = "0xFBE7F8", VA = "0xFBE7F8")]
	private void dragToNextHorizonalNormal(PointerEventData data)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xFBE9F0", Offset = "0xFBE9F0", VA = "0xFBE9F0")]
	public MultiPadCursor()
	{
	}
}
[Token(Token = "0x2000218")]
public class PadTickOverlay : MonoBehaviour
{
	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15364", Offset = "0xD15364")]
	public Sprite tickSprite;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform padRect;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text text;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1539C", Offset = "0xD1539C")]
	public int horizontalSlices;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int verticalSlices;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string overlayText;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ZoneManager zMan;

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x2309E6C", Offset = "0x2309E6C", VA = "0x2309E6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x2309F14", Offset = "0x2309F14", VA = "0x2309F14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x230A0C4", Offset = "0x230A0C4", VA = "0x230A0C4")]
	private void DrawTicksH()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x230A358", Offset = "0x230A358", VA = "0x230A358")]
	private void DrawTicksV()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x230A650", Offset = "0x230A650", VA = "0x230A650")]
	public PadTickOverlay()
	{
	}
}
[Token(Token = "0x2000219")]
public class ProgressMeter : StateMachineBehaviour
{
	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CADController cadControl;

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x230F738", Offset = "0x230F738", VA = "0x230F738", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x230F7B0", Offset = "0x230F7B0", VA = "0x230F7B0", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x230F7F0", Offset = "0x230F7F0", VA = "0x230F7F0", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x230F81C", Offset = "0x230F81C", VA = "0x230F81C")]
	public ProgressMeter()
	{
	}
}
[Token(Token = "0x200021A")]
public class QuizLabels_HintButton : MonoBehaviour, IPointerExitHandler, IEventSystemHandler, IPointerEnterHandler, IScrollHandler
{
	[Token(Token = "0x20005B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C8F0", Offset = "0xD0C8F0")]
	private sealed class <WaitToShow>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuizLabels_HintButton <>4__this;

		[Token(Token = "0x17000281")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x23173D0", Offset = "0x23173D0", VA = "0x23173D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x2317438", Offset = "0x2317438", VA = "0x2317438", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x23172D4", Offset = "0x23172D4", VA = "0x23172D4")]
		[DebuggerHidden]
		public <WaitToShow>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x2317308", Offset = "0x2317308", VA = "0x2317308", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x231730C", Offset = "0x231730C", VA = "0x231730C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x23173D8", Offset = "0x23173D8", VA = "0x23173D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject hintGameObject;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI correctAnswerTextField;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI userAnswerTextField;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform transformToShowUnder;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform hintParking;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine showRoutine;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ScrollRect parentScrollRect;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool shouldShow;

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x231703C", Offset = "0x231703C", VA = "0x231703C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x23170B8", Offset = "0x23170B8", VA = "0x23170B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x2317138", Offset = "0x2317138", VA = "0x2317138")]
	public void SetAnswers(string correctAnswer, string userAnswer)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x231718C", Offset = "0x231718C", VA = "0x231718C", Slot = "4")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x2317190", Offset = "0x2317190", VA = "0x2317190", Slot = "5")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x23171F4", Offset = "0x23171F4", VA = "0x23171F4", Slot = "6")]
	public void OnScroll(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x2317194", Offset = "0x2317194", VA = "0x2317194")]
	private void RequestShow()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x2317280", Offset = "0x2317280", VA = "0x2317280")]
	private void ShowHint()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x23170BC", Offset = "0x23170BC", VA = "0x23170BC")]
	private void HideHint()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x2317210", Offset = "0x2317210", VA = "0x2317210")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD222D0", Offset = "0xD222D0")]
	private IEnumerator WaitToShow()
	{
		return null;
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x2317300", Offset = "0x2317300", VA = "0x2317300")]
	public QuizLabels_HintButton()
	{
	}
}
[Token(Token = "0x200021B")]
public class QuizLabels_ObjectToHideMarker : MonoBehaviour
{
	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x2317440", Offset = "0x2317440", VA = "0x2317440")]
	public QuizLabels_ObjectToHideMarker()
	{
	}
}
[Token(Token = "0x200021C")]
public class QuizLabels_ProgressPanel : MonoBehaviour
{
	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private QuizLables_StepIndicator stepIndicator;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button nextButton;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button resultsButton;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI correctAnswerTextField;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI editorAnswerHint;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject incorrectResultMsg;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject correctResultMsg;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject progressPanel;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action nextButtonAction;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action closeButtonAction;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action ResultsButtonAction;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<QuizLables_StepIndicator> availableIndicators;

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x2317448", Offset = "0x2317448", VA = "0x2317448")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x23174A4", Offset = "0x23174A4", VA = "0x23174A4")]
	public void ShowWithNumberOfSteps(int value)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x23178CC", Offset = "0x23178CC", VA = "0x23178CC")]
	public void SetStepActive(int stepNum)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x2317960", Offset = "0x2317960", VA = "0x2317960")]
	public void SetStepResult(int stepNum, bool wasCorrect, string correctAnswer = "")
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x2317A54", Offset = "0x2317A54", VA = "0x2317A54")]
	public void SetAnswerHintText(string text)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x2317AA8", Offset = "0x2317AA8", VA = "0x2317AA8")]
	public void SetQuizFinished()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x2317B04", Offset = "0x2317B04", VA = "0x2317B04")]
	public void HideProgessPanel()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x2317B24", Offset = "0x2317B24", VA = "0x2317B24")]
	public void OnNextButton()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x2317B84", Offset = "0x2317B84", VA = "0x2317B84")]
	public void OnCloseButton()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x2317B98", Offset = "0x2317B98", VA = "0x2317B98")]
	public void OnResultsButton()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x2317BAC", Offset = "0x2317BAC", VA = "0x2317BAC")]
	public QuizLabels_ProgressPanel()
	{
	}
}
[Token(Token = "0x200021D")]
public class QuizLables_StepIndicator : MonoBehaviour
{
	[Token(Token = "0x20005B1")]
	public enum State
	{
		[Token(Token = "0x4002C5A")]
		inactive,
		[Token(Token = "0x4002C5B")]
		active,
		[Token(Token = "0x4002C5C")]
		incorrect,
		[Token(Token = "0x4002C5D")]
		correct
	}

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image backroundImage;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI numberTextField;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD154B4", Offset = "0xD154B4")]
	[SerializeField]
	private Color activeBgColor;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color inactiveBgColor;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Color correctBgColor;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color incorrectBgColor;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD15530", Offset = "0xD15530")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15530", Offset = "0xD15530")]
	[SerializeField]
	private Color pendingTextColor;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color completedTextColor;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1559C", Offset = "0xD1559C")]
	[SerializeField]
	private float punchScaleFactor;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float punchScaleDuration;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private int punchScaleVibrato;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float punchScaleElacisity;

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x2317734", Offset = "0x2317734", VA = "0x2317734")]
	public void SetState(State state)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x23176E8", Offset = "0x23176E8", VA = "0x23176E8")]
	public void SetNumber(int value)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x2317C1C", Offset = "0x2317C1C", VA = "0x2317C1C")]
	public QuizLables_StepIndicator()
	{
	}
}
[Token(Token = "0x200021E")]
public class SceneDetectorControl : MonoBehaviour
{
	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x22DD1AC", Offset = "0x22DD1AC", VA = "0x22DD1AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x22DD248", Offset = "0x22DD248", VA = "0x22DD248")]
	public void OnSceneLoaded(Scene s, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x22DD2E4", Offset = "0x22DD2E4", VA = "0x22DD2E4")]
	public SceneDetectorControl()
	{
	}
}
[Token(Token = "0x200021F")]
public class ScenePersistentCanvas : MonoBehaviour
{
	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ScenePersistentCanvas _instance;

	[Token(Token = "0x4001089")]
	private const string prefabName = "Prefabs/UI/ScenePersistentCanvas";

	[Token(Token = "0x1700005B")]
	public static ScenePersistentCanvas Instance
	{
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x22DD38C", Offset = "0x22DD38C", VA = "0x22DD38C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x22DD4C8", Offset = "0x22DD4C8", VA = "0x22DD4C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x22DD564", Offset = "0x22DD564", VA = "0x22DD564")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x22DD6A0", Offset = "0x22DD6A0", VA = "0x22DD6A0")]
	public void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x22DD708", Offset = "0x22DD708", VA = "0x22DD708")]
	public ScenePersistentCanvas()
	{
	}
}
[Token(Token = "0x2000220")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A980", Offset = "0xD0A980")]
public class ScrollRectButtonsControl : MonoBehaviour
{
	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float sensitivity;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool reversed;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool horizontalControl;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool verticalControl;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15618", Offset = "0xD15618")]
	public Button buttonUp;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button buttonDown;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button buttonLeft;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button buttonRight;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isScrolling;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float deltaH;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float deltaV;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ScrollRect scrRect;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float scrRectValueX;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float scrRectValueY;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float valueDelta;

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x22DE5E0", Offset = "0x22DE5E0", VA = "0x22DE5E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x22DE7E8", Offset = "0x22DE7E8", VA = "0x22DE7E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x22DEACC", Offset = "0x22DEACC", VA = "0x22DEACC")]
	public void OnButtonRight()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x22DEAFC", Offset = "0x22DEAFC", VA = "0x22DEAFC")]
	public void OnButtonLeft()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x22DEB2C", Offset = "0x22DEB2C", VA = "0x22DEB2C")]
	public void OnButtonUp()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x22DEB5C", Offset = "0x22DEB5C", VA = "0x22DEB5C")]
	public void OnButtonDown()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x22DEB8C", Offset = "0x22DEB8C", VA = "0x22DEB8C")]
	public void StopScrolling()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x22DE7C8", Offset = "0x22DE7C8", VA = "0x22DE7C8")]
	private void SetButtonEnabled(Button button, bool value)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x22DEB94", Offset = "0x22DEB94", VA = "0x22DEB94")]
	public void OnButtonDownClicked()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x22DEC4C", Offset = "0x22DEC4C", VA = "0x22DEC4C")]
	public void OnButtonUpClicked()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x22DED04", Offset = "0x22DED04", VA = "0x22DED04")]
	public ScrollRectButtonsControl()
	{
	}
}
[Token(Token = "0x2000221")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0A9E4", Offset = "0xD0A9E4")]
public class ButtonWithMultipleTargetGraphic : Button
{
	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SelectableMultipleTargetGraphicItem[] dependentGraphics;

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xF860B4", Offset = "0xF860B4", VA = "0xF860B4", Slot = "26")]
	protected override void DoStateTransition(SelectionState state, bool instant)
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xF86140", Offset = "0xF86140", VA = "0xF86140")]
	private void FindDependentGraphics()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xF86198", Offset = "0xF86198", VA = "0xF86198")]
	private void UpdateDependentGraphicsForState(SelectionState state, bool instant)
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xF8632C", Offset = "0xF8632C", VA = "0xF8632C")]
	public ButtonWithMultipleTargetGraphic()
	{
	}
}
[Token(Token = "0x2000222")]
public class SelectableMultipleTargetGraphicItem : MonoBehaviour
{
	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Graphic secondTargetGraphic;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ColorBlock secondGraphicTintColors;

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x22DED50", Offset = "0x22DED50", VA = "0x22DED50")]
	public void SetGraphicColor(Color tintColor, bool instant)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x22DEDE0", Offset = "0x22DEDE0", VA = "0x22DEDE0")]
	private void StartColorTween(Color targetColor, bool instant)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x22DEEB4", Offset = "0x22DEEB4", VA = "0x22DEEB4")]
	public SelectableMultipleTargetGraphicItem()
	{
	}
}
[Token(Token = "0x2000223")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0AA48", Offset = "0xD0AA48")]
public class TMP_DropdownMultipleTargetGraphic : TMP_Dropdown
{
	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private SelectableMultipleTargetGraphicItem[] dependentGraphics;

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x22C8C90", Offset = "0x22C8C90", VA = "0x22C8C90", Slot = "26")]
	protected override void DoStateTransition(SelectionState state, bool instant)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x22C8D1C", Offset = "0x22C8D1C", VA = "0x22C8D1C")]
	private void FindDependentGraphics()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x22C8D74", Offset = "0x22C8D74", VA = "0x22C8D74")]
	private void UpdateDependentGraphicsForState(SelectionState state, bool instant)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x22C8F08", Offset = "0x22C8F08", VA = "0x22C8F08")]
	public TMP_DropdownMultipleTargetGraphic()
	{
	}
}
[Token(Token = "0x2000224")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0AAAC", Offset = "0xD0AAAC")]
public class ToggleWithMultipleTargetGraphic : Toggle
{
	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private SelectableMultipleTargetGraphicItem[] dependentGraphics;

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x23290EC", Offset = "0x23290EC", VA = "0x23290EC", Slot = "26")]
	protected override void DoStateTransition(SelectionState state, bool instant)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x2329178", Offset = "0x2329178", VA = "0x2329178")]
	private void FindDependentGraphics()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x23291D0", Offset = "0x23291D0", VA = "0x23291D0")]
	private void UpdateDependentGraphicsForState(SelectionState state, bool instant)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x2329364", Offset = "0x2329364", VA = "0x2329364")]
	public ToggleWithMultipleTargetGraphic()
	{
	}
}
[Token(Token = "0x2000225")]
public class SkinUI : MonoBehaviour
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15650", Offset = "0xD15650")]
	public Animator anim;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15688", Offset = "0xD15688")]
	public Button UpColumnButton;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button DownColumnButton;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD156C0", Offset = "0xD156C0")]
	public Toggle OpaqueViewButton;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle OffLablesButton;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slider Slide;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int columnState;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxColumnStates;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool viewOpaque;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool labelsOff;

	[Token(Token = "0x40010A8")]
	private const string COLUMN_UP_DOWN_PROPERTY = "columnHeightState";

	[Token(Token = "0x40010A9")]
	private const string OPAQUE_PROPERTY = "opaqueState";

	[Token(Token = "0x40010AA")]
	private const string LABELS_PROPERTY = "labelsState";

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x22EA22C", Offset = "0x22EA22C", VA = "0x22EA22C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x22EA230", Offset = "0x22EA230", VA = "0x22EA230")]
	private void SetupUI()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x22EA4A4", Offset = "0x22EA4A4", VA = "0x22EA4A4")]
	public void UpColumnButtonOnClicked()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x22EA59C", Offset = "0x22EA59C", VA = "0x22EA59C")]
	public void DownColumnButtonOnClicked()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x22EA5B0", Offset = "0x22EA5B0", VA = "0x22EA5B0")]
	public void OpaqueViewButtonOnClicked(bool val)
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x22EA5BC", Offset = "0x22EA5BC", VA = "0x22EA5BC")]
	public void OffLablesButtonOnClicked(bool val)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x22EA4BC", Offset = "0x22EA4BC", VA = "0x22EA4BC")]
	private void UpdateAnimator()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x22EA5C8", Offset = "0x22EA5C8", VA = "0x22EA5C8")]
	public SkinUI()
	{
	}
}
[Token(Token = "0x2000226")]
public class SliderAnimatorValue : MonoBehaviour
{
	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD156F8", Offset = "0xD156F8")]
	public Slider slider;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15730", Offset = "0xD15730")]
	public Animator animator;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15768", Offset = "0xD15768")]
	public string animatorValueName;

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x22EA5E0", Offset = "0x22EA5E0", VA = "0x22EA5E0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x22EA6A4", Offset = "0x22EA6A4", VA = "0x22EA6A4")]
	private void SliderChanged(float value)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x22EA6C8", Offset = "0x22EA6C8", VA = "0x22EA6C8")]
	public SliderAnimatorValue()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x22EA6D0", Offset = "0x22EA6D0", VA = "0x22EA6D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22334", Offset = "0xD22334")]
	private void <Start>b__3_0(float data)
	{
	}
}
[Token(Token = "0x2000227")]
[ExecuteInEditMode]
public class SliderValue : MonoBehaviour
{
	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD157A0", Offset = "0xD157A0")]
	public Slider slider;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text displayedText;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI displayedTextMeshPro;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD157D8", Offset = "0xD157D8")]
	public string displayedPostText;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public byte decimals;

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x22EAAE4", Offset = "0x22EAAE4", VA = "0x22EAAE4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x22EAD38", Offset = "0x22EAD38", VA = "0x22EAD38")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x22EABEC", Offset = "0x22EABEC", VA = "0x22EABEC")]
	private void ChangeValue(float value)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x22EAE20", Offset = "0x22EAE20", VA = "0x22EAE20")]
	public SliderValue()
	{
	}
}
[Token(Token = "0x2000228")]
public class Storefront_UIController : MonoBehaviour
{
	[Token(Token = "0x20005B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C900", Offset = "0xD0C900")]
	private sealed class <WaitAndPaste>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Storefront_UIController <>4__this;

		[Token(Token = "0x4002C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action completionAction;

		[Token(Token = "0x17000283")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x22C8520", Offset = "0x22C8520", VA = "0x22C8520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x22C8588", Offset = "0x22C8588", VA = "0x22C8588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x22C805C", Offset = "0x22C805C", VA = "0x22C805C")]
		[DebuggerHidden]
		public <WaitAndPaste>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x22C8450", Offset = "0x22C8450", VA = "0x22C8450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x22C8454", Offset = "0x22C8454", VA = "0x22C8454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x22C8528", Offset = "0x22C8528", VA = "0x22C8528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TMP_InputField[] codeInputFields;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI versionTextFiled;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI resultHeaderFiled;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI resultMsgFiled;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CanvasGroup codeActivationPanel;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject resultPanel;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject activationPanel;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button upgradeButton;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject pasteButton;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject activateButton;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject purchaseButton;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private IStorefront _storefront;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private StorefrontSubscription currentLicense;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool ignoreFieldChange;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string[] codeBlocks;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int initialSibling;

	[Token(Token = "0x40010C3")]
	private const int codeStringLength = 22;

	[Token(Token = "0x40010C4")]
	private const char codeStringDelimiter = '-';

	[Token(Token = "0x40010C5")]
	private const string supportURL = "https://www.sharecareyou.com/#section-contact-us";

	[Token(Token = "0x40010C6")]
	private const string purchaseURL = "https://www.sharecareyou.com/#section-purchase";

	[Token(Token = "0x40010C7")]
	private const string validDateFormatStringKey = "Storefront.ValidDate";

	[Token(Token = "0x40010C8")]
	private const string nextBillingFormatStringKey = "Storefront.BillingDate";

	[Token(Token = "0x40010C9")]
	private const string successActivationHeaderKey = "Storefront.SuccessActivation";

	[Token(Token = "0x40010CA")]
	private const string failedActivationMsgKey = "Storefront.FailActivation";

	[Token(Token = "0x40010CB")]
	public const string prefsVersionCheck = "VersionCheckedForThisLaunch";

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string[] versionsNames;

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x22C7170", Offset = "0x22C7170", VA = "0x22C7170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x22C7174", Offset = "0x22C7174", VA = "0x22C7174")]
	public void SetUIActive(bool value)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x22C71E0", Offset = "0x22C71E0", VA = "0x22C71E0")]
	public void OnPasteButton()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x22C7364", Offset = "0x22C7364", VA = "0x22C7364")]
	public void OnActivateButton()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x22C75AC", Offset = "0x22C75AC", VA = "0x22C75AC")]
	public void OnPurchaseButton()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x22C769C", Offset = "0x22C769C", VA = "0x22C769C")]
	public void OnSupportButton()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x22C76E8", Offset = "0x22C76E8", VA = "0x22C76E8")]
	public void OnFieldTextChanged(TMP_InputField field)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x22C7BC0", Offset = "0x22C7BC0", VA = "0x22C7BC0")]
	public void OnResultOkButton()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x22C7C10", Offset = "0x22C7C10", VA = "0x22C7C10")]
	private void OnSuccessfulActivation(StorefrontSubscription activatedLicense, string activationMsg)
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x22C7F90", Offset = "0x22C7F90", VA = "0x22C7F90")]
	private void OnCodePurchased(string code)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x22C7F94", Offset = "0x22C7F94", VA = "0x22C7F94")]
	private void OnErrorActivation(string errorMsg)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x22C8010", Offset = "0x22C8010", VA = "0x22C8010")]
	private void OnCurrentSubscriptionUpdated(StorefrontSubscription licenseValue, string ignore)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x22C7E0C", Offset = "0x22C7E0C", VA = "0x22C7E0C")]
	private void UpdateVersionText()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x22C7CB0", Offset = "0x22C7CB0", VA = "0x22C7CB0")]
	private void ShowResult(string header, string msg = "")
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x22C7858", Offset = "0x22C7858", VA = "0x22C7858")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22344", Offset = "0xD22344")]
	private IEnumerator WaitAndPaste(Action completionAction)
	{
		return null;
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x22C722C", Offset = "0x22C722C", VA = "0x22C722C")]
	private bool ValidateCodeAndPaste(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x22C78D4", Offset = "0x22C78D4", VA = "0x22C78D4")]
	private void FocusNextSelectable(TMP_InputField currentFocusedField)
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x22C8088", Offset = "0x22C8088", VA = "0x22C8088")]
	private void SetReadyToActivateButtonsLayout(bool value)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x22C7AAC", Offset = "0x22C7AAC", VA = "0x22C7AAC")]
	private void CheckAllFieldsAreFilled()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x22C7D5C", Offset = "0x22C7D5C", VA = "0x22C7D5C")]
	private void CleanInputFields()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x22C74C0", Offset = "0x22C74C0", VA = "0x22C74C0")]
	private string GetCodeFromFields()
	{
		return null;
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x22C80F4", Offset = "0x22C80F4", VA = "0x22C80F4")]
	private void FindStorefrontController()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x22C81F0", Offset = "0x22C81F0", VA = "0x22C81F0")]
	private void CheckForNewVersion()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x22C8324", Offset = "0x22C8324", VA = "0x22C8324")]
	public Storefront_UIController()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x22C8448", Offset = "0x22C8448", VA = "0x22C8448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD223A8", Offset = "0xD223A8")]
	private void <OnFieldTextChanged>b__32_0()
	{
	}
}
[Token(Token = "0x2000229")]
[ExecuteInEditMode]
public class TextSizer : MonoBehaviour
{
	[Token(Token = "0x20005B3")]
	[Flags]
	public enum Mode
	{
		[Token(Token = "0x4002C63")]
		None = 0,
		[Token(Token = "0x4002C64")]
		Horizontal = 1,
		[Token(Token = "0x4002C65")]
		Vertical = 2,
		[Token(Token = "0x4002C66")]
		Both = 3
	}

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text Text;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ResizeTextObject;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 Padding;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 MaxSize;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 MinSize;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Mode ControlAxes;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _lastText;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mode _lastControlAxes;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 _lastSize;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _forceRefresh;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _isTextNull;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RectTransform _textRectTransform;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RectTransform _selfRectTransform;

	[Token(Token = "0x1700005C")]
	protected virtual float MinX
	{
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x22C92AC", Offset = "0x22C92AC", VA = "0x22C92AC", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005D")]
	protected virtual float MinY
	{
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x22C9314", Offset = "0x22C9314", VA = "0x22C9314", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005E")]
	protected virtual float MaxX
	{
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x22C937C", Offset = "0x22C937C", VA = "0x22C937C", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005F")]
	protected virtual float MaxY
	{
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x22C93E4", Offset = "0x22C93E4", VA = "0x22C93E4", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x22C944C", Offset = "0x22C944C", VA = "0x22C944C", Slot = "8")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x22C9458", Offset = "0x22C9458", VA = "0x22C9458", Slot = "9")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x22C9764", Offset = "0x22C9764", VA = "0x22C9764", Slot = "10")]
	public virtual void Refresh()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x22C9834", Offset = "0x22C9834", VA = "0x22C9834")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x22C9840", Offset = "0x22C9840", VA = "0x22C9840")]
	public TextSizer()
	{
	}
}
[Token(Token = "0x200022A")]
public class TofuTutorialActivator : MonoBehaviour
{
	[Token(Token = "0x40010DA")]
	public const string prefsActivatedThisLaunch = "TutorialWasActivatedThisLaunch";

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x2324870", Offset = "0x2324870", VA = "0x2324870")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x23248FC", Offset = "0x23248FC", VA = "0x23248FC")]
	public TofuTutorialActivator()
	{
	}
}
[Token(Token = "0x200022B")]
public class TofuTutorialController : MonoBehaviour
{
	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool tutorialIsActive;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TofuTutorialPlaylistDots playlistDots;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MediaPlayer videoPlayer;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI videoDescriptioTextField;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TofuTutorialMenuItem menuItemExample;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool loopItemPlaylist;

	[Token(Token = "0x40010E1")]
	public const string prefsDontShowOnStartKey = "DontShowTutorialOnStart";

	[Token(Token = "0x40010E2")]
	public const string videoSubFolder = "Video/Tutorial";

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LocalizedString localizeEventListener;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IEnumerator<TutorialPlaylistItem> currentItemPlaylist;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TofuTutorialItemData[] tutorialItems;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<TofuTutorialMenuItem> itemsList;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string loadedLocale;

	[Token(Token = "0x17000060")]
	private string currentAppLocale
	{
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x2324904", Offset = "0x2324904", VA = "0x2324904")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x23249A8", Offset = "0x23249A8", VA = "0x23249A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x2324AC4", Offset = "0x2324AC4", VA = "0x2324AC4")]
	private void UpdateItemsList()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x2324DB8", Offset = "0x2324DB8", VA = "0x2324DB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x2324E2C", Offset = "0x2324E2C", VA = "0x2324E2C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x2324F18", Offset = "0x2324F18", VA = "0x2324F18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x2324F68", Offset = "0x2324F68", VA = "0x2324F68")]
	private void OnLocaleChanged(string aString)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x2324FC4", Offset = "0x2324FC4", VA = "0x2324FC4")]
	public void OnLeftBarTutorialToggle(bool value)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x2325184", Offset = "0x2325184", VA = "0x2325184")]
	public void OnMenuItemSelected(TofuTutorialItemData itemData)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x23257A8", Offset = "0x23257A8", VA = "0x23257A8")]
	public void OnDontShowOnStartToggle(bool value)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x23257FC", Offset = "0x23257FC", VA = "0x23257FC")]
	public void OnVolumeChangedInSettings(float value)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x23258B8", Offset = "0x23258B8", VA = "0x23258B8")]
	public void OnMediaPlayerEvent(MediaPlayer player, MediaPlayerEvent.EventType eventType, ErrorCode errorCode)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x23254DC", Offset = "0x23254DC", VA = "0x23254DC")]
	private void TryPlayNextItem()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x232502C", Offset = "0x232502C", VA = "0x232502C")]
	private void TryResumePlayback()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x23250D8", Offset = "0x23250D8", VA = "0x23250D8")]
	private void PausePlayback()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x2325AD4", Offset = "0x2325AD4", VA = "0x2325AD4")]
	public TofuTutorialController()
	{
	}
}
[Serializable]
[Token(Token = "0x200022C")]
public class TofuTutorialItemData
{
	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string menuEntryName;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TutorialPlaylistItem> playlist;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x2326088", Offset = "0x2326088", VA = "0x2326088")]
	public TofuTutorialItemData()
	{
	}
}
[Serializable]
[Token(Token = "0x200022D")]
public class TutorialPlaylistItem
{
	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string fileName;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string descriptionText;

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x23260F8", Offset = "0x23260F8", VA = "0x23260F8")]
	public TutorialPlaylistItem()
	{
	}
}
[Token(Token = "0x200022E")]
public class TofuTutorialDataManager : MonoBehaviour
{
	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _curremtPlatform;

	[Token(Token = "0x40010ED")]
	private const string fileNameFormat = "YOU_Tutorial_{0}.csv";

	[Token(Token = "0x40010EE")]
	private const char csvDataDelimiter = ';';

	[Token(Token = "0x40010EF")]
	private const int ColNumPlatform = 0;

	[Token(Token = "0x40010F0")]
	private const int ColNumTitle = 1;

	[Token(Token = "0x40010F1")]
	private const int ColNumFileName = 2;

	[Token(Token = "0x40010F2")]
	private const int ColNumDescription = 3;

	[Token(Token = "0x17000061")]
	private static string currentPlatform
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x2325B44", Offset = "0x2325B44", VA = "0x2325B44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x2324AC0", Offset = "0x2324AC0", VA = "0x2324AC0")]
	public static TofuTutorialItemData[] GetTutorialItems(string locale)
	{
		return null;
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x2325C54", Offset = "0x2325C54", VA = "0x2325C54")]
	private static TofuTutorialItemData[] LoadTutorialItems(string locale)
	{
		return null;
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x2326100", Offset = "0x2326100", VA = "0x2326100")]
	public TofuTutorialDataManager()
	{
	}
}
[Token(Token = "0x200022F")]
public class TofuTutorialMenuItem : MonoBehaviour
{
	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<TofuTutorialItemData> itemToggleAction;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI offTextField;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI onTextField;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Toggle itemToggle;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Animator itemAnimator;

	[Token(Token = "0x40010F8")]
	private const string itemOnAnimatorParam = "itemIsOn";

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TofuTutorialItemData _itemDataData;

	[Token(Token = "0x17000062")]
	public TofuTutorialItemData ItemDataData
	{
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x2326108", Offset = "0x2326108", VA = "0x2326108")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x2324D54", Offset = "0x2324D54", VA = "0x2324D54")]
		set
		{
		}
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x2326110", Offset = "0x2326110", VA = "0x2326110")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x2326178", Offset = "0x2326178", VA = "0x2326178")]
	public void OnMenuItemToggle(bool value)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x2326204", Offset = "0x2326204", VA = "0x2326204")]
	public TofuTutorialMenuItem()
	{
	}
}
[Token(Token = "0x2000230")]
public class TofuTutorialPlaylistDots : MonoBehaviour
{
	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TofuTutorialPlaylistDotsItem dotExample;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<TofuTutorialPlaylistDotsItem> availableDots;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentHighlightedDotIndex;

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x232620C", Offset = "0x232620C", VA = "0x232620C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x2325284", Offset = "0x2325284", VA = "0x2325284")]
	public void SetVisibleDotsNum(int value, bool resetHighlight = true)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x23258EC", Offset = "0x23258EC", VA = "0x23258EC")]
	public void HighlightNextDot()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x23262A8", Offset = "0x23262A8", VA = "0x23262A8")]
	public void HighlightPreviousDot()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x2325A28", Offset = "0x2325A28", VA = "0x2325A28")]
	public void ResetDotsHighlight()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x23263E4", Offset = "0x23263E4", VA = "0x23263E4")]
	public TofuTutorialPlaylistDots()
	{
	}
}
[Token(Token = "0x2000231")]
public class TofuTutorialPlaylistDotsItem : MonoBehaviour
{
	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image filedImage;

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x2326288", Offset = "0x2326288", VA = "0x2326288")]
	public void SetHighlighted(bool value)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x232645C", Offset = "0x232645C", VA = "0x232645C")]
	public TofuTutorialPlaylistDotsItem()
	{
	}
}
[Token(Token = "0x2000232")]
public class UpgradePreview_Controller : MonoBehaviour
{
	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float imageRotationInterval;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float imageFadeTime;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UpgradePreview_ImageCarousel mediaImagePresenter;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TofuTutorialPlaylistDots playlistDots;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI mediaDescriptionHeaderTextField;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI mediaDescriptionTextField;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UpgradePreview_MenuItem menuItemExample;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool loopItemPlaylist;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button homeCloseButton;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LocalizedString localizeEventListener;

	[Token(Token = "0x4001108")]
	public const string mediaSubfolder = "UpgradePreview/Sprites";

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IEnumerator<UpgradePreview_PlaylistItem> currentItemPlaylist;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UpgradePreview_ItemData[] upgradePreviewItems;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, Sprite> cachedSprites;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> menuItems;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float rotationTimer;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool timerActive;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private IAP_UIController _iapUiController;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Storefront_UIController _storefrontUiController;

	[Token(Token = "0x4001111")]
	private const string panelPrefabName = "UpgradePreview/UpgradePreviewPanel";

	[Token(Token = "0x17000063")]
	private string currentAppLocale
	{
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xFD01D4", Offset = "0xFD01D4", VA = "0xFD01D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xFD0278", Offset = "0xFD0278", VA = "0xFD0278")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xFD05A8", Offset = "0xFD05A8", VA = "0xFD05A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xFD0990", Offset = "0xFD0990", VA = "0xFD0990")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xFD0A1C", Offset = "0xFD0A1C", VA = "0xFD0A1C")]
	private void OnLocaleChanged(string aString)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xFD0B44", Offset = "0xFD0B44", VA = "0xFD0B44")]
	private void OnMenuItemSelected(UpgradePreview_ItemData itemData)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xFD0C5C", Offset = "0xFD0C5C", VA = "0xFD0C5C")]
	public void OnPurchaseButtonPressed()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xFD0608", Offset = "0xFD0608", VA = "0xFD0608")]
	private void TryShowNextItem()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xFD030C", Offset = "0xFD030C", VA = "0xFD030C")]
	private void GenerateItems()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xFD0F98", Offset = "0xFD0F98", VA = "0xFD0F98")]
	public UpgradePreview_Controller()
	{
	}
}
[Token(Token = "0x2000233")]
public class UpgradePreview_ItemData
{
	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string organName;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string conditionName;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly List<UpgradePreview_PlaylistItem> mediaPlaylist;

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xFD161C", Offset = "0xFD161C", VA = "0xFD161C")]
	public UpgradePreview_ItemData()
	{
	}
}
[Token(Token = "0x2000234")]
public class UpgradePreview_PlaylistItem
{
	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string mediaPath;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string mediaDescriptionHeader;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string mediaDescription;

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xFD168C", Offset = "0xFD168C", VA = "0xFD168C")]
	public UpgradePreview_PlaylistItem()
	{
	}
}
[Token(Token = "0x2000235")]
public class UpgradePreview_DataManager : MonoBehaviour
{
	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _curremtPlatform;

	[Token(Token = "0x4001119")]
	private const string fileName = "UpgradePreview/YOU_UpgradePreview_{0}.csv";

	[Token(Token = "0x400111A")]
	private const char csvDataDelimiter = ';';

	[Token(Token = "0x400111B")]
	private const int ColNumPlatform = 2;

	[Token(Token = "0x400111C")]
	private const int ColNumOrgan = 0;

	[Token(Token = "0x400111D")]
	private const int ColNumCondition = 1;

	[Token(Token = "0x400111E")]
	private const int ColNumMediaPath = 3;

	[Token(Token = "0x400111F")]
	private const int ColNumMediaDescriptionHeader = 4;

	[Token(Token = "0x4001120")]
	private const int ColNumDescription = 5;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static UpgradePreview_ItemData[] currentPlatformUpgradePreviewItems;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string currentLocale;

	[Token(Token = "0x17000064")]
	private static string currentPlatform
	{
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xFD1038", Offset = "0xFD1038", VA = "0xFD1038")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xFD0E00", Offset = "0xFD0E00", VA = "0xFD0E00")]
	public static UpgradePreview_ItemData[] GetPreviewItems(string locale)
	{
		return null;
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xFD11AC", Offset = "0xFD11AC", VA = "0xFD11AC")]
	private static void LoadUpgradePreviewItems(string locale)
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xFD1694", Offset = "0xFD1694", VA = "0xFD1694")]
	public UpgradePreview_DataManager()
	{
	}
}
[Token(Token = "0x2000236")]
public class UpgradePreview_ImageCarousel : MonoBehaviour
{
	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image[] imagesPool;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<Image> imagesQueue;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Color colorTransparent;

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xFD0D50", Offset = "0xFD0D50", VA = "0xFD0D50")]
	public void ShowImage(Sprite sprite, float fadeTime = 0f)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xFD16F8", Offset = "0xFD16F8", VA = "0xFD16F8")]
	private Image GetFreeImage()
	{
		return null;
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xFD17D4", Offset = "0xFD17D4", VA = "0xFD17D4")]
	public UpgradePreview_ImageCarousel()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xFD1830", Offset = "0xFD1830", VA = "0xFD1830")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD223B8", Offset = "0xD223B8")]
	private Queue<Image> <GetFreeImage>b__4_0()
	{
		return null;
	}
}
[Token(Token = "0x2000237")]
public class UpgradePreview_MenuItem : MonoBehaviour
{
	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<UpgradePreview_ItemData> itemToggleAction;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI offLeftTextField;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI offRightTextField;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI onLeftTextField;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI onRightTextField;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator itemAnimator;

	[Token(Token = "0x400112C")]
	private const string itemOnAnimatorParam = "itemIsOn";

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UpgradePreview_ItemData _itemDataData;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int ItemIsOn;

	[Token(Token = "0x17000065")]
	public UpgradePreview_ItemData ItemDataData
	{
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xFD18A0", Offset = "0xFD18A0", VA = "0xFD18A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xFD0EEC", Offset = "0xFD0EEC", VA = "0xFD0EEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xFD18A8", Offset = "0xFD18A8", VA = "0xFD18A8")]
	public void OnMenuItemToggle(bool value)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xFD1958", Offset = "0xFD1958", VA = "0xFD1958")]
	public UpgradePreview_MenuItem()
	{
	}
}
[Token(Token = "0x2000238")]
public class ToggleAnimatorBoolean : MonoBehaviour
{
	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15A80", Offset = "0xD15A80")]
	public Toggle toggle;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15AB8", Offset = "0xD15AB8")]
	public Animator animator;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15AF0", Offset = "0xD15AF0")]
	public string aniatorBooleanName;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15B28", Offset = "0xD15B28")]
	public bool invertValue;

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x2326D44", Offset = "0x2326D44", VA = "0x2326D44")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x2326DE8", Offset = "0x2326DE8", VA = "0x2326DE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x2326E04", Offset = "0x2326E04", VA = "0x2326E04")]
	private void ToggleSelected(bool value)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x2326E40", Offset = "0x2326E40", VA = "0x2326E40")]
	public ToggleAnimatorBoolean()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x2326E48", Offset = "0x2326E48", VA = "0x2326E48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD223C8", Offset = "0xD223C8")]
	private void <Start>b__4_0(bool data)
	{
	}
}
[Token(Token = "0x2000239")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0AB30", Offset = "0xD0AB30")]
public class ToggleMeshVisibility : MonoBehaviour
{
	[Token(Token = "0x20005B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C920", Offset = "0xD0C920")]
	private sealed class <FadeMesh>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float min;

		[Token(Token = "0x4002C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer r;

		[Token(Token = "0x4002C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ToggleMeshVisibility <>4__this;

		[Token(Token = "0x4002C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float max;

		[Token(Token = "0x4002C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <totalTime>5__2;

		[Token(Token = "0x17000285")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x2327910", Offset = "0x2327910", VA = "0x2327910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F9")]
			[Address(RVA = "0x2327978", Offset = "0x2327978", VA = "0x2327978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x2327678", Offset = "0x2327678", VA = "0x2327678")]
		[DebuggerHidden]
		public <FadeMesh>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x23276B8", Offset = "0x23276B8", VA = "0x23276B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x23276BC", Offset = "0x23276BC", VA = "0x23276BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x2327918", Offset = "0x2327918", VA = "0x2327918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useFade;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float duration;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] mesh;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle tog;

	[Token(Token = "0x4001137")]
	private const string PROPERTY = "_Transparency";

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x23273A0", Offset = "0x23273A0", VA = "0x23273A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x23274A0", Offset = "0x23274A0", VA = "0x23274A0")]
	public void OnToggled(bool val)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x23275E4", Offset = "0x23275E4", VA = "0x23275E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD223D8", Offset = "0xD223D8")]
	private IEnumerator FadeMesh(Renderer r, float min, float max)
	{
		return null;
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x23276A4", Offset = "0x23276A4", VA = "0x23276A4")]
	public ToggleMeshVisibility()
	{
	}
}
[Token(Token = "0x200023A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0AB94", Offset = "0xD0AB94")]
public class ToggleSwap : MonoBehaviour
{
	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle toggle;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sprite original;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color origColor;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool onStateSprite;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite onSprite;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color color;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool toggleText;

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x2328D2C", Offset = "0x2328D2C", VA = "0x2328D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x2328E70", Offset = "0x2328E70", VA = "0x2328E70")]
	public void OnValueChanged(bool inValue)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x2328FE8", Offset = "0x2328FE8", VA = "0x2328FE8")]
	public void SwitchToOnBG()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x23290E4", Offset = "0x23290E4", VA = "0x23290E4")]
	public ToggleSwap()
	{
	}
}
[Token(Token = "0x200023B")]
public class UILookAtCamera : MonoBehaviour
{
	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera target;

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x23325F8", Offset = "0x23325F8", VA = "0x23325F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x2332620", Offset = "0x2332620", VA = "0x2332620")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x23327C4", Offset = "0x23327C4", VA = "0x23327C4")]
	public UILookAtCamera()
	{
	}
}
[Token(Token = "0x200023C")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject divertToOtherInstead;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool vrActive;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 extraDeltaMultiplier;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XR_OrganManipulator manipulator;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AimConstraint aimConstraint;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider collider;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startPos;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 lastDragPoint;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool gripped;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool gripStarted;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 gripPos;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3[] gripSmoothArray;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int gripSmoothIndex;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Ray ray;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private RaycastHit hit;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 startingHandPos;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PanelStateData[] panelData;

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x22FE6F8", Offset = "0x22FE6F8", VA = "0x22FE6F8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x22FE840", Offset = "0x22FE840", VA = "0x22FE840")]
	private void clearGrip()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x22FE868", Offset = "0x22FE868", VA = "0x22FE868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x22FEE68", Offset = "0x22FEE68", VA = "0x22FEE68")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x200023D")]
public class VR3DButton : MonoBehaviour
{
	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool vrActive;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject panel;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator buttonAnimator;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle toggle;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isOn;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool startOn;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material greyButtonMat;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FingerTipControl[] fingertips;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float contactDistance;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float rayScale;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool touched;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool touchedAndToggled;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public XR_OrganManipulator manipulator;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rightHandTransform;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform leftHandTransform;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD15B70", Offset = "0xD15B70")]
	public float triggerThreshold;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public InputDevice leftHandController;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public InputDevice rightHandController;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 startPos;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 lastDragPoint;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool rightTriggered;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool leftTriggered;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
	public bool triggerStarted;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Collider collider;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Ray ray;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private RaycastHit hit;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool initialized;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xFD57D0", Offset = "0xFD57D0", VA = "0xFD57D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xFD5DE8", Offset = "0xFD5DE8", VA = "0xFD5DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xFD5BAC", Offset = "0xFD5BAC", VA = "0xFD5BAC")]
	public void TogglePanelOnOff()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xFD632C", Offset = "0xFD632C", VA = "0xFD632C")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xFD63E0", Offset = "0xFD63E0", VA = "0xFD63E0")]
	public VR3DButton()
	{
	}
}
[Token(Token = "0x200023E")]
public class VR_AssignCanvasCameraToChildren : MonoBehaviour
{
	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x12381EC", Offset = "0x12381EC", VA = "0x12381EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x12382D0", Offset = "0x12382D0", VA = "0x12382D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x12382D4", Offset = "0x12382D4", VA = "0x12382D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x12382D8", Offset = "0x12382D8", VA = "0x12382D8")]
	public VR_AssignCanvasCameraToChildren()
	{
	}
}
[Token(Token = "0x200023F")]
public class VR_GuiHelper : MonoBehaviour
{
	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VR_GuiHelper Instance;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Toggle resetToggle;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Toggle exitToggle;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xD15BA8", Offset = "0xD15BA8")]
	[SerializeField]
	private Toggle homeToggle;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Toggle helpToggle;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Toggle labelsToggle;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Toggle quizToggle;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool processClearCommands;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Toggle[] togglesToSwitchOff;

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x12382E0", Offset = "0x12382E0", VA = "0x12382E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x12384F4", Offset = "0x12384F4", VA = "0x12384F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x1238590", Offset = "0x1238590", VA = "0x1238590")]
	public void ClearAllDialogs([Optional] Toggle toggleToSkip)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x1238794", Offset = "0x1238794", VA = "0x1238794")]
	public void OnArchTogglePressed(Toggle sender)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x123861C", Offset = "0x123861C", VA = "0x123861C")]
	private void SwitchAllTogglesOff([Optional] Toggle toggleToSkip)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x12387B4", Offset = "0x12387B4", VA = "0x12387B4")]
	public VR_GuiHelper()
	{
	}
}
[Token(Token = "0x2000240")]
public class VR_UI3DPanelScaler : MonoBehaviour
{
	[Token(Token = "0x20005B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C930", Offset = "0xD0C930")]
	private sealed class <UpdateScale>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VR_UI3DPanelScaler <>4__this;

		[Token(Token = "0x17000287")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022FD")]
			[Address(RVA = "0x1238D4C", Offset = "0x1238D4C", VA = "0x1238D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x1238DB4", Offset = "0x1238DB4", VA = "0x1238DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x12389A8", Offset = "0x12389A8", VA = "0x12389A8")]
		[DebuggerHidden]
		public <UpdateScale>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x12389DC", Offset = "0x12389DC", VA = "0x12389DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x12389E0", Offset = "0x12389E0", VA = "0x12389E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x1238D54", Offset = "0x1238D54", VA = "0x1238D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform targetRectTransform;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform[] panel3DCorners;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector2 margins;

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x123890C", Offset = "0x123890C", VA = "0x123890C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1238938", Offset = "0x1238938", VA = "0x1238938")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2243C", Offset = "0xD2243C")]
	private IEnumerator UpdateScale()
	{
		return null;
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x12389D4", Offset = "0x12389D4", VA = "0x12389D4")]
	public VR_UI3DPanelScaler()
	{
	}
}
[Token(Token = "0x2000241")]
public class VrResetButton : MonoBehaviour
{
	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VrResetButton Instance;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform XRRig;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15C54", Offset = "0xD15C54")]
	public Transform[] transformsToRestore;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PanelStateData[] panelData;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] _savedPositions;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] _savedScale;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion[] _savedRotations;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _viewPosition;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _currentViewPosition;

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x1330C20", Offset = "0x1330C20", VA = "0x1330C20")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x13310E4", Offset = "0x13310E4", VA = "0x13310E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x1331238", Offset = "0x1331238", VA = "0x1331238")]
	public void ResenterView()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x1331368", Offset = "0x1331368", VA = "0x1331368")]
	public void RestoreTransforms()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x133168C", Offset = "0x133168C", VA = "0x133168C")]
	public void ResetButtonSelected()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x133185C", Offset = "0x133185C", VA = "0x133185C")]
	public void RestoreSingleTransform(Transform targetTransform)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x13318C8", Offset = "0x13318C8", VA = "0x13318C8")]
	public void SetView(int val)
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x1331414", Offset = "0x1331414", VA = "0x1331414")]
	private void RestoreTransformWithIndex(int indexToRestore)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x13318D0", Offset = "0x13318D0", VA = "0x13318D0")]
	public VrResetButton()
	{
	}
}
[Serializable]
[Token(Token = "0x2000242")]
public class PanelTM
{
	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform panel;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 targetPos;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 pos;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Quaternion rot;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 scale;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform parentOverride;

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x230C3EC", Offset = "0x230C3EC", VA = "0x230C3EC")]
	public PanelTM()
	{
	}
}
[Serializable]
[Token(Token = "0x2000243")]
public class PanelStateData
{
	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform parent;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PanelTM[] panels;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enablePointScaling;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] disables;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] enables;

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x230C3E4", Offset = "0x230C3E4", VA = "0x230C3E4")]
	public PanelStateData()
	{
	}
}
[Token(Token = "0x2000244")]
public class VideoSourceAdjuster : MonoBehaviour
{
	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD15C8C", Offset = "0xD15C8C")]
	[SerializeField]
	private bool autoStartPlayback;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x101E8E8", Offset = "0x101E8E8", VA = "0x101E8E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x101EA30", Offset = "0x101EA30", VA = "0x101EA30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x101EACC", Offset = "0x101EACC", VA = "0x101EACC")]
	public VideoSourceAdjuster()
	{
	}
}
[Token(Token = "0x2000245")]
public class UpdateEyeAnchors : MonoBehaviour
{
	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] eyes;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] eyeAnchorNames;

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xFCFCA0", Offset = "0xFCFCA0", VA = "0xFCFCA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xFD00CC", Offset = "0xFD00CC", VA = "0xFD00CC")]
	public UpdateEyeAnchors()
	{
	}
}
[Token(Token = "0x2000246")]
[ExecuteInEditMode]
public class LabelObject : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
{
	[Token(Token = "0x20005B6")]
	public class VerticeData
	{
		[Token(Token = "0x4002C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] bonesTFs;

		[Token(Token = "0x4002C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] boneIndexes;

		[Token(Token = "0x4002C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] localPosition;

		[Token(Token = "0x4002C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] weights;

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xFE8B7C", Offset = "0xFE8B7C", VA = "0xFE8B7C")]
		public VerticeData()
		{
		}
	}

	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C940", Offset = "0xD0C940")]
	private sealed class <ShowHintAfterDelay>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LabelObject <>4__this;

		[Token(Token = "0x17000289")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002304")]
			[Address(RVA = "0xFE91C0", Offset = "0xFE91C0", VA = "0xFE91C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002306")]
			[Address(RVA = "0xFE9228", Offset = "0xFE9228", VA = "0xFE9228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xFE88A4", Offset = "0xFE88A4", VA = "0xFE88A4")]
		[DebuggerHidden]
		public <ShowHintAfterDelay>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0xFE9104", Offset = "0xFE9104", VA = "0xFE9104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xFE9108", Offset = "0xFE9108", VA = "0xFE9108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xFE91C8", Offset = "0xFE91C8", VA = "0xFE91C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15CD8", Offset = "0xD15CD8")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xD15CD8", Offset = "0xD15CD8")]
	public string hintText;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LabelsController.LabelRotationType labelRotation;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 textPivot;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD15D2C", Offset = "0xD15D2C")]
	public float scaleMultiplier;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD15D48", Offset = "0xD15D48")]
	public GameObject alternateHintPosition;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15D80", Offset = "0xD15D80")]
	public Transform manualLineEndPosition;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xD15DB8", Offset = "0xD15DB8")]
	public Vector3 manualLineEndOffset;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public LabelsController.OffsetType offset;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD15E00", Offset = "0xD15E00")]
	public short XAxisOffset;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD15E18", Offset = "0xD15E18")]
	public short YAxisOffset;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD15E30", Offset = "0xD15E30")]
	public short ZAxisOffset;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float lineLength;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool multiLine;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool noLine;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool useForkBracket;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 forkHandleLength;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SkinnedMeshRenderer hookRootToMesh;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD15E48", Offset = "0xD15E48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD15E48", Offset = "0xD15E48")]
	public Transform midPoint;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isShowing;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[SerializeField]
	private bool forcedShow;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD15E90", Offset = "0xD15E90")]
	public bool ignoreHideEvents;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD15EC8", Offset = "0xD15EC8")]
	[SerializeField]
	private Transform remoteEventCollider;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD15F00", Offset = "0xD15F00")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15F00", Offset = "0xD15F00")]
	public bool showPosition;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Color sphereColor;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float sphereRadius;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public LabelsController hintsController;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public float appearDelay;

	[NonSerialized]
	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Transform> startAnchors;

	[NonSerialized]
	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<VerticeData> alignedVerticesData;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool initialized;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine initCoroutine;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<int> alignedVerticesIndex;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private bool isUpdated;

	[Token(Token = "0x17000066")]
	public bool ForcedShow
	{
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xFE6D28", Offset = "0xFE6D28", VA = "0xFE6D28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xFE6D30", Offset = "0xFE6D30", VA = "0xFE6D30")]
		set
		{
		}
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xFE6DFC", Offset = "0xFE6DFC", VA = "0xFE6DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xFE713C", Offset = "0xFE713C", VA = "0xFE713C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xFE76EC", Offset = "0xFE76EC", VA = "0xFE76EC")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xFE702C", Offset = "0xFE702C", VA = "0xFE702C")]
	public void InitializeHint()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xFE6D3C", Offset = "0xFE6D3C", VA = "0xFE6D3C")]
	public void SetHintActive(bool value)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xFE872C", Offset = "0xFE872C", VA = "0xFE872C", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xFE8784", Offset = "0xFE8784", VA = "0xFE8784", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xFE8788", Offset = "0xFE8788", VA = "0xFE8788", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xFE8730", Offset = "0xFE8730", VA = "0xFE8730")]
	private void CancelHint()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xFE8834", Offset = "0xFE8834", VA = "0xFE8834")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD224A0", Offset = "0xD224A0")]
	private IEnumerator ShowHintAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xFE8824", Offset = "0xFE8824", VA = "0xFE8824")]
	private bool isEnabledInSettings()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xFE882C", Offset = "0xFE882C", VA = "0xFE882C")]
	private bool isTutorialActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xFE78D0", Offset = "0xFE78D0", VA = "0xFE78D0")]
	private void CalculateNearestVertices()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xFE79F8", Offset = "0xFE79F8", VA = "0xFE79F8")]
	private void CalculateVerticesData()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xFE88D0", Offset = "0xFE88D0", VA = "0xFE88D0")]
	private List<int> GetPointsVertices(List<Vector3> points)
	{
		return null;
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xFE8C24", Offset = "0xFE8C24", VA = "0xFE8C24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xFE8E34", Offset = "0xFE8E34", VA = "0xFE8E34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xFE9044", Offset = "0xFE9044", VA = "0xFE9044")]
	public LabelObject()
	{
	}
}
[Token(Token = "0x2000247")]
public class LabelsController : MonoBehaviour
{
	[Token(Token = "0x20005B8")]
	private class TextLabelInfo
	{
		[Token(Token = "0x4002C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject textHintObject;

		[Token(Token = "0x4002C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> textStartAnchors;

		[Token(Token = "0x4002C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 textPivot;

		[Token(Token = "0x4002C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform textEndAnchor;

		[Token(Token = "0x4002C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform textPanel;

		[Token(Token = "0x4002C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform manualLineEnd;

		[Token(Token = "0x4002C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 textEndOffsetDir;

		[Token(Token = "0x4002C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform canvasOffset;

		[Token(Token = "0x4002C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform midPoint;

		[Token(Token = "0x4002C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OffsetType offset;

		[Token(Token = "0x4002C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 offsetDirection;

		[Token(Token = "0x4002C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 manualOffset;

		[Token(Token = "0x4002C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LabelRotationType labelRotation;

		[Token(Token = "0x4002C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float scaleMultiplier;

		[Token(Token = "0x4002C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SkinnedMeshRenderer alignToMesh;

		[Token(Token = "0x4002C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LabelObject.VerticeData[] verticesData;

		[Token(Token = "0x4002C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Text text;

		[Token(Token = "0x4002C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TextMesh textMesh;

		[Token(Token = "0x4002C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Canvas textCanvas;

		[Token(Token = "0x4002C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x4002C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<LineRenderer> lines;

		[Token(Token = "0x4002C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool useForkBracket;

		[Token(Token = "0x4002C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 lineBaseOffset;

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xFECA70", Offset = "0xFECA70", VA = "0xFECA70")]
		public TextLabelInfo()
		{
		}
	}

	[Token(Token = "0x20005B9")]
	private class meshBakeInfo
	{
		[Token(Token = "0x4002C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bakedOnFrame;

		[Token(Token = "0x4002C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] bakedVertices;

		[Token(Token = "0x6002308")]
		[Address(RVA = "0xFED710", Offset = "0xFED710", VA = "0xFED710")]
		public meshBakeInfo()
		{
		}
	}

	[Token(Token = "0x20005BA")]
	public enum OffsetType
	{
		[Token(Token = "0x4002C92")]
		Up,
		[Token(Token = "0x4002C93")]
		UpBack,
		[Token(Token = "0x4002C94")]
		Right,
		[Token(Token = "0x4002C95")]
		Left,
		[Token(Token = "0x4002C96")]
		Forward,
		[Token(Token = "0x4002C97")]
		Back,
		[Token(Token = "0x4002C98")]
		BackRightUp,
		[Token(Token = "0x4002C99")]
		MidPointSpreading,
		[Token(Token = "0x4002C9A")]
		BackLeftUp,
		[Token(Token = "0x4002C9B")]
		BackLeftDown,
		[Token(Token = "0x4002C9C")]
		BackRightDown,
		[Token(Token = "0x4002C9D")]
		ForwardRight,
		[Token(Token = "0x4002C9E")]
		ForwardLeft,
		[Token(Token = "0x4002C9F")]
		BackLeft,
		[Token(Token = "0x4002CA0")]
		BackRight,
		[Token(Token = "0x4002CA1")]
		LeftUp,
		[Token(Token = "0x4002CA2")]
		Down,
		[Token(Token = "0x4002CA3")]
		DownLeft,
		[Token(Token = "0x4002CA4")]
		DownRight,
		[Token(Token = "0x4002CA5")]
		DownForward,
		[Token(Token = "0x4002CA6")]
		DownBack,
		[Token(Token = "0x4002CA7")]
		DownLeftForward,
		[Token(Token = "0x4002CA8")]
		DownRightForward,
		[Token(Token = "0x4002CA9")]
		ForwardLeftUp
	}

	[Token(Token = "0x20005BB")]
	public enum LabelRotationType
	{
		[Token(Token = "0x4002CAB")]
		ForwardBackward,
		[Token(Token = "0x4002CAC")]
		LineDirection,
		[Token(Token = "0x4002CAD")]
		CamPosition,
		[Token(Token = "0x4002CAE")]
		UpDown
	}

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject labelPrefab;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool flipGUIToggle;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hmdOculus;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform hmdVive;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<LabelObject, TextLabelInfo> existingHints;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<LabelObject> activeHints;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<TextLabelInfo, float> fadingCanvas;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float hintAppearDelay;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lineWidth;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fadeDuration;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float scale;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool updateRequired;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentFrame;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 V3Scale;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 point_scale;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 point_localPoint;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 point_newPos;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Mesh bakedMesh;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform playerTransform;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<SkinnedMeshRenderer, meshBakeInfo> bakedMeshes;

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xFEAF54", Offset = "0xFEAF54", VA = "0xFEAF54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xFEB0E4", Offset = "0xFEB0E4", VA = "0xFEB0E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xFEB798", Offset = "0xFEB798", VA = "0xFEB798")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xFE838C", Offset = "0xFE838C", VA = "0xFE838C")]
	public void ShowText(LabelObject hintTarget)
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xFE8604", Offset = "0xFE8604", VA = "0xFE8604")]
	public void HideText(LabelObject hintTarget)
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xFEBBDC", Offset = "0xFEBBDC", VA = "0xFEBBDC")]
	private void CreateHintAt(LabelObject target)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xFECB48", Offset = "0xFECB48", VA = "0xFECB48")]
	private void ComputeTextEndTransforms(TextLabelInfo hintInfo)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xFEB438", Offset = "0xFEB438", VA = "0xFEB438")]
	private void UpdateTextHint(TextLabelInfo hintInfo)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xFEB86C", Offset = "0xFEB86C", VA = "0xFEB86C")]
	private void UpdateTextHintRootPoint(TextLabelInfo hintInfo)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xFED610", Offset = "0xFED610", VA = "0xFED610")]
	public LabelsController()
	{
	}
}
[Token(Token = "0x2000248")]
public static class LabelsHelpers
{
	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xFE7598", Offset = "0xFE7598", VA = "0xFE7598")]
	public static Vector3 GetLineDirection(LabelObject hintsObject)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000249")]
public class LabelsWatcher : MonoBehaviour
{
	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] labelsToControl;

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xFF27B4", Offset = "0xFF27B4", VA = "0xFF27B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xFF2838", Offset = "0xFF2838", VA = "0xFF2838")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xFF27BC", Offset = "0xFF27BC", VA = "0xFF27BC")]
	private void SetLabelsActive(bool value)
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xFF2840", Offset = "0xFF2840", VA = "0xFF2840")]
	public LabelsWatcher()
	{
	}
}
[Token(Token = "0x200024A")]
public class VideoCapture : MonoBehaviour
{
	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool captureFrames;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string folder;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int frameRate;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD15F7C", Offset = "0xD15F7C")]
	public int superSize;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useMaxFrames;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxFrames;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int count;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string realFolder;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int initialFrameRate;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int frameCounter;

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x101E6B8", Offset = "0x101E6B8", VA = "0x101E6B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x101E790", Offset = "0x101E790", VA = "0x101E790")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x101E854", Offset = "0x101E854", VA = "0x101E854")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x101E860", Offset = "0x101E860", VA = "0x101E860")]
	public VideoCapture()
	{
	}
}
[Token(Token = "0x200024B")]
public class Video_Player_360 : MonoBehaviour
{
	[Token(Token = "0x20005BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C950", Offset = "0xD0C950")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4002CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Video_Player_360 <>4__this;

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x101F11C", Offset = "0x101F11C", VA = "0x101F11C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x101F644", Offset = "0x101F644", VA = "0x101F644")]
		internal void <InitButtons>b__0()
		{
		}
	}

	[Token(Token = "0x20005BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C960", Offset = "0xD0C960")]
	private sealed class <LoadAndPlay>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Video_Player_360 <>4__this;

		[Token(Token = "0x4002CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string videoToLoad;

		[Token(Token = "0x4002CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ResourceRequest <videoResource>5__2;

		[Token(Token = "0x4002CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <f>5__3;

		[Token(Token = "0x1700028B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600230E")]
			[Address(RVA = "0x101FBF4", Offset = "0x101FBF4", VA = "0x101FBF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002310")]
			[Address(RVA = "0x101FC5C", Offset = "0x101FC5C", VA = "0x101FC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x101F3E4", Offset = "0x101F3E4", VA = "0x101F3E4")]
		[DebuggerHidden]
		public <LoadAndPlay>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x101F76C", Offset = "0x101F76C", VA = "0x101F76C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x101F770", Offset = "0x101F770", VA = "0x101F770", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x101FBFC", Offset = "0x101FBFC", VA = "0x101FBFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C970", Offset = "0xD0C970")]
	private sealed class <FadeOutAndIn>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700028D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002314")]
			[Address(RVA = "0x101F6FC", Offset = "0x101F6FC", VA = "0x101F6FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002316")]
			[Address(RVA = "0x101F764", Offset = "0x101F764", VA = "0x101F764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x101F470", Offset = "0x101F470", VA = "0x101F470")]
		[DebuggerHidden]
		public <FadeOutAndIn>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x101F664", Offset = "0x101F664", VA = "0x101F664", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x101F668", Offset = "0x101F668", VA = "0x101F668", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x101F704", Offset = "0x101F704", VA = "0x101F704", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lookVal;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15FB4", Offset = "0xD15FB4")]
	public VideoPlayer player;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] videos;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD15FEC", Offset = "0xD15FEC")]
	public Image fadePanel;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator[] UIAnimators;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button[] videoButtons;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button exitButton;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Canvas ButtonCanvas;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderTexture texture;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected string videoPath;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float amount;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected int videoIndex;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected string playingProperty;

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x101EADC", Offset = "0x101EADC", VA = "0x101EADC", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x101ED00", Offset = "0x101ED00", VA = "0x101ED00", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x101EAE0", Offset = "0x101EAE0", VA = "0x101EAE0")]
	protected void InitButtons()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x101F0E4", Offset = "0x101F0E4", VA = "0x101F0E4")]
	protected void OnExitButtonPressed()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x101F124", Offset = "0x101F124", VA = "0x101F124")]
	protected void OnButtonPressed(string level)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x101EF50", Offset = "0x101EF50", VA = "0x101EF50")]
	protected void CreateVideoPlayer(int index)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x101F220", Offset = "0x101F220", VA = "0x101F220")]
	protected void CreateVideoPlayer(string videoName)
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x101F368", Offset = "0x101F368", VA = "0x101F368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22504", Offset = "0xD22504")]
	protected IEnumerator LoadAndPlay(string videoToLoad)
	{
		return null;
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x101F410", Offset = "0x101F410", VA = "0x101F410")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22568", Offset = "0xD22568")]
	protected IEnumerator FadeOutAndIn(string videoToLoad)
	{
		return null;
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x101F49C", Offset = "0x101F49C", VA = "0x101F49C")]
	protected void OnVideoOver(VideoPlayer vp)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x101F584", Offset = "0x101F584", VA = "0x101F584")]
	public Video_Player_360()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x101F628", Offset = "0x101F628", VA = "0x101F628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD225CC", Offset = "0xD225CC")]
	private bool <LoadAndPlay>b__21_0()
	{
		return default(bool);
	}
}
[Token(Token = "0x200024C")]
[DisallowMultipleComponent]
public class VivePortEntitlements : MonoBehaviour
{
	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x101FD68", Offset = "0x101FD68", VA = "0x101FD68")]
	public VivePortEntitlements()
	{
	}
}
[Token(Token = "0x200024D")]
public class VoiceOverControl : MonoBehaviour
{
	[Token(Token = "0x20005BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C980", Offset = "0xD0C980")]
	private sealed class <LoadClipCoroutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string file;

		[Token(Token = "0x4002CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<AudioClip> onLoadingCompleted;

		[Token(Token = "0x4002CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <request>5__2;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600231A")]
			[Address(RVA = "0x1330AD4", Offset = "0x1330AD4", VA = "0x1330AD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600231C")]
			[Address(RVA = "0x1330B3C", Offset = "0x1330B3C", VA = "0x1330B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x13308D8", Offset = "0x13308D8", VA = "0x13308D8")]
		[DebuggerHidden]
		public <LoadClipCoroutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x13309E0", Offset = "0x13309E0", VA = "0x13309E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x13309E4", Offset = "0x13309E4", VA = "0x13309E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1330ADC", Offset = "0x1330ADC", VA = "0x1330ADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action onVoiceOverPlaybackEnd;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool lastPlayedIsVoiceOver;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool wasPlayingLastFrame;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VoiceOverControl _instance;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource _audioSource;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TofuSettingsAudioController _tofuSettingsAudioController;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string lastPlayedClipPath;

	[Token(Token = "0x40011E8")]
	private const string sfxGroup = "Video";

	[Token(Token = "0x40011E9")]
	private const string rootFolder = "Voice";

	[Token(Token = "0x40011EA")]
	private const string pronunciationLabelsMarker = "_p_label";

	[Token(Token = "0x40011EB")]
	private const string voiceOverSceneinfoMarker = "_vo_sceneinfo";

	[Token(Token = "0x40011EC")]
	private const string filesMask = "*.ogg";

	[Token(Token = "0x40011ED")]
	private const float minVolumeValue = 0.25f;

	[Token(Token = "0x40011EE")]
	private const float clipTimePrecision = 0.01f;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, string> voiceOverSceneinfoClips;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, string> pronunciationLabelsClips;

	[Token(Token = "0x17000067")]
	public static VoiceOverControl Instance
	{
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x132F860", Offset = "0x132F860", VA = "0x132F860")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	private TofuSettingsAudioController tofuSettingsAudioController
	{
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x132F974", Offset = "0x132F974", VA = "0x132F974")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x132FA24", Offset = "0x132FA24", VA = "0x132FA24")]
	public static bool IsExist()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x132FAA0", Offset = "0x132FAA0", VA = "0x132FAA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x13300A8", Offset = "0x13300A8", VA = "0x13300A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x1330144", Offset = "0x1330144", VA = "0x1330144")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x132FFB4", Offset = "0x132FFB4", VA = "0x132FFB4")]
	private void SetupAudioSource()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x1330244", Offset = "0x1330244", VA = "0x1330244")]
	private void CheckVolume()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x133029C", Offset = "0x133029C", VA = "0x133029C")]
	public void StopPlaying()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x13302B0", Offset = "0x13302B0", VA = "0x13302B0")]
	public void StopVoiceOver()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x13302D8", Offset = "0x13302D8", VA = "0x13302D8")]
	public void ToggleVoiceOverPlay(bool value, int id, [Optional] Action playbackEndAction)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x1330614", Offset = "0x1330614", VA = "0x1330614")]
	public void PlayPronunciation(int id)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x1330734", Offset = "0x1330734", VA = "0x1330734")]
	public bool IsVoiceOverAvailable(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x133079C", Offset = "0x133079C", VA = "0x133079C")]
	public bool IsPronunciationAvailable(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x13301C0", Offset = "0x13301C0", VA = "0x13301C0")]
	public bool IsPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x132FBF8", Offset = "0x132FBF8", VA = "0x132FBF8")]
	private void ScanAudioClips()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x1330804", Offset = "0x1330804", VA = "0x1330804")]
	private string[] GetFolderFiles(string path)
	{
		return null;
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x1330440", Offset = "0x1330440", VA = "0x1330440")]
	private void CheckVolumeAndPlay()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x1330470", Offset = "0x1330470", VA = "0x1330470")]
	private void Play(string fileName)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x133085C", Offset = "0x133085C", VA = "0x133085C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD225DC", Offset = "0xD225DC")]
	private IEnumerator LoadClipCoroutine(string file, Action<AudioClip> onLoadingCompleted)
	{
		return null;
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x1330904", Offset = "0x1330904", VA = "0x1330904")]
	public VoiceOverControl()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x13309AC", Offset = "0x13309AC", VA = "0x13309AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22640", Offset = "0xD22640")]
	private void <Play>b__36_0(AudioClip clip)
	{
	}
}
[Token(Token = "0x200024E")]
public class Windows_Channel_Video_Player : Video_Player_360
{
	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x1332554", Offset = "0x1332554", VA = "0x1332554", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x133255C", Offset = "0x133255C", VA = "0x133255C", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x1332564", Offset = "0x1332564", VA = "0x1332564")]
	public Windows_Channel_Video_Player()
	{
	}
}
[Token(Token = "0x200024F")]
public class CullMe : MonoBehaviour
{
	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] cullers;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool updateRequired;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Matrix4x4[] mats;

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xF8E6B4", Offset = "0xF8E6B4", VA = "0xF8E6B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xF8E71C", Offset = "0xF8E71C", VA = "0xF8E71C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xF8E888", Offset = "0xF8E888", VA = "0xF8E888")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xF8E930", Offset = "0xF8E930", VA = "0xF8E930")]
	public CullMe()
	{
	}
}
[Token(Token = "0x2000250")]
public class MetastaticCancer_DiseaseSphere : MonoBehaviour
{
	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 fullSizeScale;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int hashID;

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xFB9F38", Offset = "0xFB9F38", VA = "0xFB9F38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xFB9F74", Offset = "0xFB9F74", VA = "0xFB9F74")]
	public MetastaticCancer_DiseaseSphere()
	{
	}
}
[Token(Token = "0x2000251")]
public class TransformScaler : MonoBehaviour
{
	[Token(Token = "0x20005C0")]
	private class TransformScalingData
	{
		[Token(Token = "0x4002CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transformToScale;

		[Token(Token = "0x4002CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 targetScale;

		[Token(Token = "0x4002CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float timeToScale;

		[Token(Token = "0x4002CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timePassed;

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x232A57C", Offset = "0x232A57C", VA = "0x232A57C")]
		public TransformScalingData()
		{
		}
	}

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<TransformScalingData> transformsToScale;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool listNotEmpty;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 newScale;

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x2329E88", Offset = "0x2329E88", VA = "0x2329E88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x232A2F4", Offset = "0x232A2F4", VA = "0x232A2F4")]
	public void ScaleTransform(Transform transformToScale, Vector3 targetScale, float scaleDuration)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x232A584", Offset = "0x232A584", VA = "0x232A584")]
	public TransformScaler()
	{
	}
}
[Token(Token = "0x2000252")]
public class YWoman_MetastaticCancer_SceneManager : MonoBehaviour
{
	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 padPosition;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectsToMoveManager objToMoveManager;

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x21C6624", Offset = "0x21C6624", VA = "0x21C6624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x21C6654", Offset = "0x21C6654", VA = "0x21C6654")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x21C6658", Offset = "0x21C6658", VA = "0x21C6658")]
	public YWoman_MetastaticCancer_SceneManager()
	{
	}
}
[Token(Token = "0x2000253")]
public class ZoneScaler : MonoBehaviour
{
	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ZoneManager zoneMan;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16044", Offset = "0xD16044")]
	public int[] unscaledReveals;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useNormalScale;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scaleTime;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bigScale;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1607C", Offset = "0xD1607C")]
	public float currentValue;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objectToScale;

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x21C6660", Offset = "0x21C6660", VA = "0x21C6660")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x21C670C", Offset = "0x21C670C", VA = "0x21C670C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x21C6920", Offset = "0x21C6920", VA = "0x21C6920")]
	public ZoneScaler()
	{
	}
}
[Token(Token = "0x2000254")]
[ExecuteInEditMode]
public class shaderPositionLoader : MonoBehaviour
{
	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxSubMaterialsCount;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int maxSubMaterialsCountOld;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gameObjectToReadPosition;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject gameObjectToReadPositionOld;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEngine.Object[] objectToWriteShaderData;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UnityEngine.Object[] objectToWriteShaderDataOld;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string shaderDataName;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material[,] objectMaterials;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool restartScript;

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x21C6C40", Offset = "0x21C6C40", VA = "0x21C6C40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x21C6C4C", Offset = "0x21C6C4C", VA = "0x21C6C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x21C6FE0", Offset = "0x21C6FE0", VA = "0x21C6FE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x21C7284", Offset = "0x21C7284", VA = "0x21C7284")]
	public shaderPositionLoader()
	{
	}
}
[Token(Token = "0x2000255")]
public class SliderScript : MonoBehaviour
{
	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Sharpen _sharpen;

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x22EAA28", Offset = "0x22EAA28", VA = "0x22EAA28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x22EAA98", Offset = "0x22EAA98", VA = "0x22EAA98")]
	public void MoveSlider(Slider a)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x22EAADC", Offset = "0x22EAADC", VA = "0x22EAADC")]
	public SliderScript()
	{
	}
}
[Token(Token = "0x2000256")]
[ExecuteInEditMode]
public class Sharpen : MonoBehaviour
{
	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD160B4", Offset = "0xD160B4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD160B4", Offset = "0xD160B4")]
	public float Sharpness;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x22E7FF8", Offset = "0x22E7FF8", VA = "0x22E7FF8")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x22E80E4", Offset = "0x22E80E4", VA = "0x22E80E4")]
	public Sharpen()
	{
	}
}
[Token(Token = "0x2000257")]
public class SteamVR : IDisposable
{
	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _enabled;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR _instance;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16108", Offset = "0xD16108")]
	private CVRSystem <hmd>k__BackingField;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16118", Offset = "0xD16118")]
	private CVRCompositor <compositor>k__BackingField;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16128", Offset = "0xD16128")]
	private CVROverlay <overlay>k__BackingField;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16138", Offset = "0xD16138")]
	private static bool <initializing>k__BackingField;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16148", Offset = "0xD16148")]
	private static bool <calibrating>k__BackingField;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16158", Offset = "0xD16158")]
	private static bool <outOfRange>k__BackingField;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] connected;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16168", Offset = "0xD16168")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16178", Offset = "0xD16178")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16188", Offset = "0xD16188")]
	private float <aspect>k__BackingField;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16198", Offset = "0xD16198")]
	private float <fieldOfView>k__BackingField;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD161A8", Offset = "0xD161A8")]
	private Vector2 <tanHalfFov>k__BackingField;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD161B8", Offset = "0xD161B8")]
	private VRTextureBounds_t[] <textureBounds>k__BackingField;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD161C8", Offset = "0xD161C8")]
	private SteamVR_Utils.RigidTransform[] <eyes>k__BackingField;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ETextureType textureType;

	[Token(Token = "0x17000069")]
	public static bool active
	{
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x2341398", Offset = "0x2341398", VA = "0x2341398")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006A")]
	public static bool enabled
	{
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x2341408", Offset = "0x2341408", VA = "0x2341408")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x23414A4", Offset = "0x23414A4", VA = "0x23414A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public static SteamVR instance
	{
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x23415E8", Offset = "0x23415E8", VA = "0x23415E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public static bool usingNativeSupport
	{
		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x2341928", Offset = "0x2341928", VA = "0x2341928")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006D")]
	public CVRSystem hmd
	{
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x23422F8", Offset = "0x23422F8", VA = "0x23422F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22650", Offset = "0xD22650")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x2342300", Offset = "0x2342300", VA = "0x2342300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22660", Offset = "0xD22660")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public CVRCompositor compositor
	{
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x2342308", Offset = "0x2342308", VA = "0x2342308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22670", Offset = "0xD22670")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x2342310", Offset = "0x2342310", VA = "0x2342310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22680", Offset = "0xD22680")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public CVROverlay overlay
	{
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x2342318", Offset = "0x2342318", VA = "0x2342318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22690", Offset = "0xD22690")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x2342320", Offset = "0x2342320", VA = "0x2342320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD226A0", Offset = "0xD226A0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public static bool initializing
	{
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x2342328", Offset = "0x2342328", VA = "0x2342328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD226B0", Offset = "0xD226B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x2342390", Offset = "0x2342390", VA = "0x2342390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD226C0", Offset = "0xD226C0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public static bool calibrating
	{
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x2342400", Offset = "0x2342400", VA = "0x2342400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD226D0", Offset = "0xD226D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x2342468", Offset = "0x2342468", VA = "0x2342468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD226E0", Offset = "0xD226E0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public static bool outOfRange
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x23424D8", Offset = "0x23424D8", VA = "0x23424D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD226F0", Offset = "0xD226F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x2342540", Offset = "0x2342540", VA = "0x2342540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22700", Offset = "0xD22700")]
		private set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public float sceneWidth
	{
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x23425B0", Offset = "0x23425B0", VA = "0x23425B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22710", Offset = "0xD22710")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x23425B8", Offset = "0x23425B8", VA = "0x23425B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22720", Offset = "0xD22720")]
		private set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public float sceneHeight
	{
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x23425C0", Offset = "0x23425C0", VA = "0x23425C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22730", Offset = "0xD22730")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x23425C8", Offset = "0x23425C8", VA = "0x23425C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22740", Offset = "0xD22740")]
		private set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public float aspect
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x23425D0", Offset = "0x23425D0", VA = "0x23425D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22750", Offset = "0xD22750")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x23425D8", Offset = "0x23425D8", VA = "0x23425D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22760", Offset = "0xD22760")]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public float fieldOfView
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x23425E0", Offset = "0x23425E0", VA = "0x23425E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22770", Offset = "0xD22770")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x23425E8", Offset = "0x23425E8", VA = "0x23425E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22780", Offset = "0xD22780")]
		private set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public Vector2 tanHalfFov
	{
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x23425F0", Offset = "0x23425F0", VA = "0x23425F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22790", Offset = "0xD22790")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x23425F8", Offset = "0x23425F8", VA = "0x23425F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD227A0", Offset = "0xD227A0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public VRTextureBounds_t[] textureBounds
	{
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x2342600", Offset = "0x2342600", VA = "0x2342600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD227B0", Offset = "0xD227B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x2342608", Offset = "0x2342608", VA = "0x2342608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD227C0", Offset = "0xD227C0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public SteamVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x2342610", Offset = "0x2342610", VA = "0x2342610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD227D0", Offset = "0xD227D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x2342618", Offset = "0x2342618", VA = "0x2342618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD227E0", Offset = "0xD227E0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public string hmd_TrackingSystemName
	{
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x2342620", Offset = "0x2342620", VA = "0x2342620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public string hmd_ModelNumber
	{
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x2342774", Offset = "0x2342774", VA = "0x2342774")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007C")]
	public string hmd_SerialNumber
	{
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x2342780", Offset = "0x2342780", VA = "0x2342780")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007D")]
	public float hmd_SecondsFromVsyncToPhotons
	{
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x234278C", Offset = "0x234278C", VA = "0x234278C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700007E")]
	public float hmd_DisplayFrequency
	{
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x23427D8", Offset = "0x23427D8", VA = "0x23427D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x2341700", Offset = "0x2341700", VA = "0x2341700")]
	private static SteamVR CreateInstance()
	{
		return null;
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x2341994", Offset = "0x2341994", VA = "0x2341994")]
	private static void ReportError(EVRInitError error)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x23427E4", Offset = "0x23427E4", VA = "0x23427E4")]
	public string GetTrackedDeviceString(uint deviceId)
	{
		return null;
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x234262C", Offset = "0x234262C", VA = "0x234262C")]
	public string GetStringProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return null;
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x2342798", Offset = "0x2342798", VA = "0x2342798")]
	public float GetFloatProperty(ETrackedDeviceProperty prop, uint deviceId = 0u)
	{
		return default(float);
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x23428CC", Offset = "0x23428CC", VA = "0x23428CC")]
	private void OnInitializing(bool initializing)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x2342980", Offset = "0x2342980", VA = "0x2342980")]
	private void OnCalibrating(bool calibrating)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x2342A34", Offset = "0x2342A34", VA = "0x2342A34")]
	private void OnOutOfRange(bool outOfRange)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x2342AE8", Offset = "0x2342AE8", VA = "0x2342AE8")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x2342B8C", Offset = "0x2342B8C", VA = "0x2342B8C")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x2341AE8", Offset = "0x2341AE8", VA = "0x2341AE8")]
	private SteamVR()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x2343038", Offset = "0x2343038", VA = "0x2343038", Slot = "1")]
	~SteamVR()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x23432E8", Offset = "0x23432E8", VA = "0x23432E8", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x23430A4", Offset = "0x23430A4", VA = "0x23430A4")]
	private void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x2341544", Offset = "0x2341544", VA = "0x2341544")]
	public static void SafeDispose()
	{
	}
}
[Token(Token = "0x2000258")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0AC38", Offset = "0xD0AC38")]
public class SteamVR_Camera : MonoBehaviour
{
	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _head;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD161E8", Offset = "0xD161E8")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _ears;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool wireframe;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Hashtable values;

	[Token(Token = "0x4001226")]
	private const string eyeSuffix = " (eye)";

	[Token(Token = "0x4001227")]
	private const string earsSuffix = " (ears)";

	[Token(Token = "0x4001228")]
	private const string headSuffix = " (head)";

	[Token(Token = "0x4001229")]
	private const string originSuffix = " (origin)";

	[Token(Token = "0x1700007F")]
	public Transform head
	{
		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x2343D24", Offset = "0x2343D24", VA = "0x2343D24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000080")]
	public Transform offset
	{
		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x2343D2C", Offset = "0x2343D2C", VA = "0x2343D2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000081")]
	public Transform origin
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x2343D34", Offset = "0x2343D34", VA = "0x2343D34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000082")]
	public Camera camera
	{
		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x2343D50", Offset = "0x2343D50", VA = "0x2343D50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD227F0", Offset = "0xD227F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x2343D58", Offset = "0x2343D58", VA = "0x2343D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22800", Offset = "0xD22800")]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public Transform ears
	{
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x2343D60", Offset = "0x2343D60", VA = "0x2343D60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000084")]
	public static float sceneResolutionScale
	{
		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x2343DF0", Offset = "0x2343DF0", VA = "0x2343DF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x2343DF8", Offset = "0x2343DF8", VA = "0x2343DF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public string baseName
	{
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x2344FFC", Offset = "0x2344FFC", VA = "0x2344FFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x2343D68", Offset = "0x2343D68", VA = "0x2343D68")]
	public Ray GetRay()
	{
		return default(Ray);
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x2343E00", Offset = "0x2343E00", VA = "0x2343E00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x2343EB0", Offset = "0x2343EB0", VA = "0x2343EB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x23449A8", Offset = "0x23449A8", VA = "0x23449A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x2344A04", Offset = "0x2344A04", VA = "0x2344A04")]
	public void ForceLast()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x2344208", Offset = "0x2344208", VA = "0x2344208")]
	public void Expand()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x23450CC", Offset = "0x23450CC", VA = "0x23450CC")]
	public void Collapse()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x23454CC", Offset = "0x23454CC", VA = "0x23454CC")]
	public SteamVR_Camera()
	{
	}
}
[Token(Token = "0x2000259")]
[ExecuteInEditMode]
public class SteamVR_CameraFlip : MonoBehaviour
{
	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x23454D4", Offset = "0x23454D4", VA = "0x23454D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x2345570", Offset = "0x2345570", VA = "0x2345570")]
	public SteamVR_CameraFlip()
	{
	}
}
[Token(Token = "0x200025A")]
[ExecuteInEditMode]
public class SteamVR_CameraMask : MonoBehaviour
{
	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x2345578", Offset = "0x2345578", VA = "0x2345578")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x2345614", Offset = "0x2345614", VA = "0x2345614")]
	public SteamVR_CameraMask()
	{
	}
}
[Token(Token = "0x200025B")]
public class SteamVR_Controller
{
	[Token(Token = "0x20005C1")]
	public class ButtonMask
	{
		[Token(Token = "0x4002CC2")]
		public const ulong System = 1uL;

		[Token(Token = "0x4002CC3")]
		public const ulong ApplicationMenu = 2uL;

		[Token(Token = "0x4002CC4")]
		public const ulong Grip = 4uL;

		[Token(Token = "0x4002CC5")]
		public const ulong Axis0 = 4294967296uL;

		[Token(Token = "0x4002CC6")]
		public const ulong Axis1 = 8589934592uL;

		[Token(Token = "0x4002CC7")]
		public const ulong Axis2 = 17179869184uL;

		[Token(Token = "0x4002CC8")]
		public const ulong Axis3 = 34359738368uL;

		[Token(Token = "0x4002CC9")]
		public const ulong Axis4 = 68719476736uL;

		[Token(Token = "0x4002CCA")]
		public const ulong Touchpad = 4294967296uL;

		[Token(Token = "0x4002CCB")]
		public const ulong Trigger = 8589934592uL;

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x2345D48", Offset = "0x2345D48", VA = "0x2345D48")]
		public ButtonMask()
		{
		}
	}

	[Token(Token = "0x20005C2")]
	public class Device
	{
		[Token(Token = "0x4002CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EDEC", Offset = "0xD1EDEC")]
		private uint <index>k__BackingField;

		[Token(Token = "0x4002CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EDFC", Offset = "0xD1EDFC")]
		private bool <valid>k__BackingField;

		[Token(Token = "0x4002CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VRControllerState_t state;

		[Token(Token = "0x4002CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRControllerState_t prevState;

		[Token(Token = "0x4002CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TrackedDevicePose_t pose;

		[Token(Token = "0x4002CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int prevFrameCount;

		[Token(Token = "0x4002CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float hairTriggerDelta;

		[Token(Token = "0x4002CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float hairTriggerLimit;

		[Token(Token = "0x4002CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool hairTriggerState;

		[Token(Token = "0x4002CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		private bool hairTriggerPrevState;

		[Token(Token = "0x17000291")]
		public uint index
		{
			[Token(Token = "0x6002320")]
			[Address(RVA = "0x2345D50", Offset = "0x2345D50", VA = "0x2345D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD285CC", Offset = "0xD285CC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002321")]
			[Address(RVA = "0x2345D58", Offset = "0x2345D58", VA = "0x2345D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD285DC", Offset = "0xD285DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public bool valid
		{
			[Token(Token = "0x6002322")]
			[Address(RVA = "0x2345D60", Offset = "0x2345D60", VA = "0x2345D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD285EC", Offset = "0xD285EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002323")]
			[Address(RVA = "0x2345D68", Offset = "0x2345D68", VA = "0x2345D68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD285FC", Offset = "0xD285FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000293")]
		public bool connected
		{
			[Token(Token = "0x6002324")]
			[Address(RVA = "0x2345D1C", Offset = "0x2345D1C", VA = "0x2345D1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000294")]
		public bool hasTracking
		{
			[Token(Token = "0x6002325")]
			[Address(RVA = "0x2345D74", Offset = "0x2345D74", VA = "0x2345D74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000295")]
		public bool outOfRange
		{
			[Token(Token = "0x6002326")]
			[Address(RVA = "0x2345D98", Offset = "0x2345D98", VA = "0x2345D98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000296")]
		public bool calibrating
		{
			[Token(Token = "0x6002327")]
			[Address(RVA = "0x2345DD0", Offset = "0x2345DD0", VA = "0x2345DD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000297")]
		public bool uninitialized
		{
			[Token(Token = "0x6002328")]
			[Address(RVA = "0x2345E00", Offset = "0x2345E00", VA = "0x2345E00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000298")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6002329")]
			[Address(RVA = "0x2345CC0", Offset = "0x2345CC0", VA = "0x2345CC0")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000299")]
		public Vector3 velocity
		{
			[Token(Token = "0x600232A")]
			[Address(RVA = "0x2345E2C", Offset = "0x2345E2C", VA = "0x2345E2C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029A")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x600232B")]
			[Address(RVA = "0x2345E7C", Offset = "0x2345E7C", VA = "0x2345E7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x2345768", Offset = "0x2345768", VA = "0x2345768")]
		public Device(uint i)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x2345ED0", Offset = "0x2345ED0", VA = "0x2345ED0")]
		public VRControllerState_t GetState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x2345F0C", Offset = "0x2345F0C", VA = "0x2345F0C")]
		public VRControllerState_t GetPrevState()
		{
			return default(VRControllerState_t);
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x2345F48", Offset = "0x2345F48", VA = "0x2345F48")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x23457DC", Offset = "0x23457DC", VA = "0x23457DC")]
		public void Update()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x23461AC", Offset = "0x23461AC", VA = "0x23461AC")]
		public bool GetPress(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x23461DC", Offset = "0x23461DC", VA = "0x23461DC")]
		public bool GetPressDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x2346220", Offset = "0x2346220", VA = "0x2346220")]
		public bool GetPressUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x2346264", Offset = "0x2346264", VA = "0x2346264")]
		public bool GetPress(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x2346298", Offset = "0x2346298", VA = "0x2346298")]
		public bool GetPressDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x23462E0", Offset = "0x23462E0", VA = "0x23462E0")]
		public bool GetPressUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x2346328", Offset = "0x2346328", VA = "0x2346328")]
		public bool GetTouch(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x2346358", Offset = "0x2346358", VA = "0x2346358")]
		public bool GetTouchDown(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x234639C", Offset = "0x234639C", VA = "0x234639C")]
		public bool GetTouchUp(ulong buttonMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x23463E0", Offset = "0x23463E0", VA = "0x23463E0")]
		public bool GetTouch(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x2346414", Offset = "0x2346414", VA = "0x2346414")]
		public bool GetTouchDown(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x234645C", Offset = "0x234645C", VA = "0x234645C")]
		public bool GetTouchUp(EVRButtonId buttonId)
		{
			return default(bool);
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x23464A4", Offset = "0x23464A4", VA = "0x23464A4")]
		public Vector2 GetAxis(EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x2346580", Offset = "0x2346580", VA = "0x2346580")]
		public void TriggerHapticPulse(ushort durationMicroSec = 500, EVRButtonId buttonId = EVRButtonId.k_EButton_Axis0)
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x23460AC", Offset = "0x23460AC", VA = "0x23460AC")]
		private void UpdateHairTrigger()
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x234661C", Offset = "0x234661C", VA = "0x234661C")]
		public bool GetHairTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x2346640", Offset = "0x2346640", VA = "0x2346640")]
		public bool GetHairTriggerDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x234667C", Offset = "0x234667C", VA = "0x234667C")]
		public bool GetHairTriggerUp()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005C3")]
	public enum DeviceRelation
	{
		[Token(Token = "0x4002CD7")]
		First,
		[Token(Token = "0x4002CD8")]
		Leftmost,
		[Token(Token = "0x4002CD9")]
		Rightmost,
		[Token(Token = "0x4002CDA")]
		FarthestLeft,
		[Token(Token = "0x4002CDB")]
		FarthestRight
	}

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Device[] devices;

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x234561C", Offset = "0x234561C", VA = "0x234561C")]
	public static Device Input(int deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x23457A0", Offset = "0x23457A0", VA = "0x23457A0")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x2345964", Offset = "0x2345964", VA = "0x2345964")]
	public static int GetDeviceIndex(DeviceRelation relation, ETrackedDeviceClass deviceClass = ETrackedDeviceClass.Controller, int relativeTo = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x2345D40", Offset = "0x2345D40", VA = "0x2345D40")]
	public SteamVR_Controller()
	{
	}
}
[Token(Token = "0x200025C")]
public class SteamVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject left;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject right;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD16208", Offset = "0xD16208")]
	public GameObject[] objects;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD16240", Offset = "0xD16240")]
	public bool assignAllBeforeIdentified;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint[] indices;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] connected;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint leftIndex;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint rightIndex;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action inputFocusAction;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SteamVR_Events.Action trackedDeviceRoleChangedAction;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string hiddenPrefix;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string hiddenPostfix;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string[] labels;

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x23466B8", Offset = "0x23466B8", VA = "0x23466B8")]
	private void SetUniqueObject(GameObject o, int index)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x23467CC", Offset = "0x23467CC", VA = "0x23467CC")]
	public void UpdateTargets()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x2346908", Offset = "0x2346908", VA = "0x2346908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x234690C", Offset = "0x234690C", VA = "0x234690C")]
	private SteamVR_ControllerManager()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x2346C50", Offset = "0x2346C50", VA = "0x2346C50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x23471F0", Offset = "0x23471F0", VA = "0x23471F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x2347254", Offset = "0x2347254", VA = "0x2347254")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x2347604", Offset = "0x2347604", VA = "0x2347604")]
	private void HideObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x2347510", Offset = "0x2347510", VA = "0x2347510")]
	private void ShowObject(Transform t, string name)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x2347774", Offset = "0x2347774", VA = "0x2347774")]
	private void SetTrackedDeviceIndex(int objectIndex, uint trackedDeviceIndex)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x23479C0", Offset = "0x23479C0", VA = "0x23479C0")]
	private void OnTrackedDeviceRoleChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x23470CC", Offset = "0x23470CC", VA = "0x23470CC")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x2346E30", Offset = "0x2346E30", VA = "0x2346E30")]
	public void Refresh()
	{
	}
}
[Token(Token = "0x200025D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0ACBC", Offset = "0xD0ACBC")]
public class SteamVR_Ears : MonoBehaviour
{
	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_Camera vrcam;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool usingSpeakers;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion offset;

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x2347AE8", Offset = "0x2347AE8", VA = "0x2347AE8")]
	private void OnNewPosesApplied()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x2347C5C", Offset = "0x2347C5C", VA = "0x2347C5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x2347E00", Offset = "0x2347E00", VA = "0x2347E00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x2347ED4", Offset = "0x2347ED4", VA = "0x2347ED4")]
	public SteamVR_Ears()
	{
	}
}
[Token(Token = "0x200025E")]
public static class SteamVR_Events
{
	[Token(Token = "0x20005C4")]
	public abstract class Action
	{
		[Token(Token = "0x1700029B")]
		public bool enabled
		{
			[Token(Token = "0x6002343")]
			[Address(RVA = "0x23471E0", Offset = "0x23471E0", VA = "0x23471E0")]
			set
			{
			}
		}

		[Token(Token = "0x6002342")]
		public abstract void Enable(bool enabled);

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x2348A70", Offset = "0x2348A70", VA = "0x2348A70")]
		protected Action()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C5")]
	public class ActionNoArgs : Action
	{
		[Token(Token = "0x4002CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Event _event;

		[Token(Token = "0x4002CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityAction action;

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x23480BC", Offset = "0x23480BC", VA = "0x23480BC")]
		public ActionNoArgs(Event _event, UnityAction action)
		{
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x2348A78", Offset = "0x2348A78", VA = "0x2348A78", Slot = "4")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C6")]
	public class Action<T> : Action
	{
		[Token(Token = "0x4002CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T> _event;

		[Token(Token = "0x4002CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T> action;

		[Token(Token = "0x6002347")]
		public Action(Event<T> _event, UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002348")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C7")]
	public class Action<T0, T1> : Action
	{
		[Token(Token = "0x4002CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1> _event;

		[Token(Token = "0x4002CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1> action;

		[Token(Token = "0x6002349")]
		public Action(Event<T0, T1> _event, UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x600234A")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C8")]
	public class Action<T0, T1, T2> : Action
	{
		[Token(Token = "0x4002CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Event<T0, T1, T2> _event;

		[Token(Token = "0x4002CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityAction<T0, T1, T2> action;

		[Token(Token = "0x600234B")]
		public Action(Event<T0, T1, T2> _event, UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x600234C")]
		public override void Enable(bool enabled)
		{
		}
	}

	[Token(Token = "0x20005C9")]
	public class Event : UnityEvent
	{
		[Token(Token = "0x600234D")]
		[Address(RVA = "0x2347DF8", Offset = "0x2347DF8", VA = "0x2347DF8")]
		public void Listen(UnityAction action)
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x2347ECC", Offset = "0x2347ECC", VA = "0x2347ECC")]
		public void Remove(UnityAction action)
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x2348AA8", Offset = "0x2348AA8", VA = "0x2348AA8")]
		public void Send()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x2348A68", Offset = "0x2348A68", VA = "0x2348A68")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20005CA")]
	public class Event<T> : UnityEvent<T>
	{
		[Token(Token = "0x6002351")]
		public void Listen(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002352")]
		public void Remove(UnityAction<T> action)
		{
		}

		[Token(Token = "0x6002353")]
		public void Send(T arg0)
		{
		}

		[Token(Token = "0x6002354")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20005CB")]
	public class Event<T0, T1> : UnityEvent<T0, T1>
	{
		[Token(Token = "0x6002355")]
		public void Listen(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6002356")]
		public void Remove(UnityAction<T0, T1> action)
		{
		}

		[Token(Token = "0x6002357")]
		public void Send(T0 arg0, T1 arg1)
		{
		}

		[Token(Token = "0x6002358")]
		public Event()
		{
		}
	}

	[Token(Token = "0x20005CC")]
	public class Event<T0, T1, T2> : UnityEvent<T0, T1, T2>
	{
		[Token(Token = "0x6002359")]
		public void Listen(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x600235A")]
		public void Remove(UnityAction<T0, T1, T2> action)
		{
		}

		[Token(Token = "0x600235B")]
		public void Send(T0 arg0, T1 arg1, T2 arg2)
		{
		}

		[Token(Token = "0x600235C")]
		public Event()
		{
		}
	}

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Event<bool> Calibrating;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Event<int, bool> DeviceConnected;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Event<Color, float, bool> Fade;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Event FadeReady;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Event<bool> HideRenderModels;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Event<bool> Initializing;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Event<bool> InputFocus;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Event<bool> Loading;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Event<float> LoadingFadeIn;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Event<float> LoadingFadeOut;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Event<TrackedDevicePose_t[]> NewPoses;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static Event NewPosesApplied;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Event<bool> OutOfRange;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Event<SteamVR_RenderModel, bool> RenderModelLoaded;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Dictionary<EVREventType, Event<VREvent_t>> systemEvents;

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x2347EDC", Offset = "0x2347EDC", VA = "0x2347EDC")]
	public static Action CalibratingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x2346B00", Offset = "0x2346B00", VA = "0x2346B00")]
	public static Action DeviceConnectedAction(UnityAction<int, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x2347F80", Offset = "0x2347F80", VA = "0x2347F80")]
	public static Action FadeAction(UnityAction<Color, float, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x2348024", Offset = "0x2348024", VA = "0x2348024")]
	public static Action FadeReadyAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x23480F4", Offset = "0x23480F4", VA = "0x23480F4")]
	public static Action HideRenderModelsAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x2348198", Offset = "0x2348198", VA = "0x2348198")]
	public static Action InitializingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x2346A5C", Offset = "0x2346A5C", VA = "0x2346A5C")]
	public static Action InputFocusAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x234823C", Offset = "0x234823C", VA = "0x234823C")]
	public static Action LoadingAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x23482E0", Offset = "0x23482E0", VA = "0x23482E0")]
	public static Action LoadingFadeInAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x2348384", Offset = "0x2348384", VA = "0x2348384")]
	public static Action LoadingFadeOutAction(UnityAction<float> action)
	{
		return null;
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x2348428", Offset = "0x2348428", VA = "0x2348428")]
	public static Action NewPosesAction(UnityAction<TrackedDevicePose_t[]> action)
	{
		return null;
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x23484CC", Offset = "0x23484CC", VA = "0x23484CC")]
	public static Action NewPosesAppliedAction(UnityAction action)
	{
		return null;
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x2348564", Offset = "0x2348564", VA = "0x2348564")]
	public static Action OutOfRangeAction(UnityAction<bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x2348608", Offset = "0x2348608", VA = "0x2348608")]
	public static Action RenderModelLoadedAction(UnityAction<SteamVR_RenderModel, bool> action)
	{
		return null;
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x23486AC", Offset = "0x23486AC", VA = "0x23486AC")]
	public static Event<VREvent_t> System(EVREventType eventType)
	{
		return null;
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x2346BA4", Offset = "0x2346BA4", VA = "0x2346BA4")]
	public static Action SystemAction(EVREventType eventType, UnityAction<VREvent_t> action)
	{
		return null;
	}
}
[Token(Token = "0x200025F")]
public class SteamVR_ExternalCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005CD")]
	public struct Config
	{
		[Token(Token = "0x4002CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4002CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4002CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4002CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rx;

		[Token(Token = "0x4002CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ry;

		[Token(Token = "0x4002CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rz;

		[Token(Token = "0x4002CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fov;

		[Token(Token = "0x4002CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float near;

		[Token(Token = "0x4002CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float far;

		[Token(Token = "0x4002CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sceneResolutionScale;

		[Token(Token = "0x4002CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float frameSkip;

		[Token(Token = "0x4002CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float nearOffset;

		[Token(Token = "0x4002CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float farOffset;

		[Token(Token = "0x4002CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float hmdOffset;

		[Token(Token = "0x4002CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float r;

		[Token(Token = "0x4002CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float g;

		[Token(Token = "0x4002CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float b;

		[Token(Token = "0x4002CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float a;

		[Token(Token = "0x4002CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool disableStandardAssets;
	}

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Config config;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string configPath;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FileSystemWatcher watcher;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera cam;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Transform target;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject clipQuad;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material clipMaterial;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material colorMat;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material alphaMat;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Camera[] cameras;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Rect[] cameraRects;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float sceneResolutionScale;

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x2348AB0", Offset = "0x2348AB0", VA = "0x2348AB0")]
	public void ReadConfig()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x23493B8", Offset = "0x23493B8", VA = "0x23493B8")]
	private void OnChanged(object source, FileSystemEventArgs e)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x23493BC", Offset = "0x23493BC", VA = "0x23493BC")]
	public void AttachToCamera(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x234996C", Offset = "0x234996C", VA = "0x234996C")]
	public float GetTargetDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x2349C18", Offset = "0x2349C18", VA = "0x2349C18")]
	public void RenderNear()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x234A370", Offset = "0x234A370", VA = "0x234A370")]
	public void RenderFar()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x234A490", Offset = "0x234A490", VA = "0x234A490")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x234A494", Offset = "0x234A494", VA = "0x234A494")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x234A6E4", Offset = "0x234A6E4", VA = "0x234A6E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x234A820", Offset = "0x234A820", VA = "0x234A820")]
	public SteamVR_ExternalCamera()
	{
	}
}
[Token(Token = "0x2000260")]
public class SteamVR_Fade : MonoBehaviour
{
	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool fadeOverlay;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material fadeMaterial;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x234A828", Offset = "0x234A828", VA = "0x234A828")]
	public static void Start(Color newColor, float duration, bool fadeOverlay = false)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x234A8EC", Offset = "0x234A8EC", VA = "0x234A8EC")]
	public static void View(Color newColor, float duration)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x234A9B4", Offset = "0x234A9B4", VA = "0x234A9B4")]
	public void OnStartFade(Color newColor, float duration, bool fadeOverlay)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x234AA1C", Offset = "0x234AA1C", VA = "0x234AA1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x234ABDC", Offset = "0x234ABDC", VA = "0x234ABDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x234ACA0", Offset = "0x234ACA0", VA = "0x234ACA0")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x234AFC8", Offset = "0x234AFC8", VA = "0x234AFC8")]
	public SteamVR_Fade()
	{
	}
}
[Token(Token = "0x2000261")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0AD20", Offset = "0xD0AD20")]
public class SteamVR_Frustum : MonoBehaviour
{
	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fovLeft;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fovRight;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fovTop;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fovBottom;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float nearZ;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float farZ;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x234B0D0", Offset = "0x234B0D0", VA = "0x234B0D0")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x234B8B8", Offset = "0x234B8B8", VA = "0x234B8B8")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x234BA74", Offset = "0x234BA74", VA = "0x234BA74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x234BB5C", Offset = "0x234BB5C", VA = "0x234BB5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x234BC44", Offset = "0x234BC44", VA = "0x234BC44")]
	public SteamVR_Frustum()
	{
	}
}
[Token(Token = "0x2000262")]
[ExecuteInEditMode]
public class SteamVR_GameView : MonoBehaviour
{
	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x234BC64", Offset = "0x234BC64", VA = "0x234BC64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x234BD00", Offset = "0x234BD00", VA = "0x234BD00")]
	public SteamVR_GameView()
	{
	}
}
[Token(Token = "0x2000263")]
public class SteamVR_IK : MonoBehaviour
{
	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform start;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform joint;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform end;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform poleVector;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform upVector;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float blendPct;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Transform startXform;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Transform jointXform;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform endXform;

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x234BD08", Offset = "0x234BD08", VA = "0x234BD08")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x234C6B0", Offset = "0x234C6B0", VA = "0x234C6B0")]
	public static bool Solve(Vector3 start, Vector3 end, Vector3 poleVector, float jointDist, float targetDist, ref Vector3 result, out Vector3 forward, out Vector3 up)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x234CBC8", Offset = "0x234CBC8", VA = "0x234CBC8")]
	public SteamVR_IK()
	{
	}
}
[Token(Token = "0x2000264")]
public class SteamVR_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x20005CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C990", Offset = "0xD0C990")]
	private sealed class <LoadLevel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_LoadLevel <>4__this;

		[Token(Token = "0x4002CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVROverlay <overlay>5__2;

		[Token(Token = "0x4002CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <fadedForeground>5__3;

		[Token(Token = "0x4002CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRCompositor <compositor>5__4;

		[Token(Token = "0x4002CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_Controller.Device <hmd>5__5;

		[Token(Token = "0x1700029C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002360")]
			[Address(RVA = "0x234E910", Offset = "0x234E910", VA = "0x234E910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002362")]
			[Address(RVA = "0x234E978", Offset = "0x234E978", VA = "0x234E978", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x234D930", Offset = "0x234D930", VA = "0x234D930")]
		[DebuggerHidden]
		public <LoadLevel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x234DAAC", Offset = "0x234DAAC", VA = "0x234DAAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x234DAB0", Offset = "0x234DAB0", VA = "0x234DAB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x234E918", Offset = "0x234E918", VA = "0x234E918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SteamVR_LoadLevel _active;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string levelName;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string internalProcessPath;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string internalProcessArgs;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadAdditive;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool loadAsync;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture loadingScreen;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture progressBarEmpty;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture progressBarFull;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float loadingScreenWidthInMeters;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float progressBarWidthInMeters;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float loadingScreenDistance;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform loadingScreenTransform;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform progressBarTransform;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture front;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture back;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture left;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture right;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture top;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture bottom;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color backgroundColor;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool showGrid;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float fadeOutTime;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float fadeInTime;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float postLoadSettleTime;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float loadingScreenFadeInTime;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float loadingScreenFadeOutTime;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float fadeRate;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float alpha;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AsyncOperation async;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private RenderTexture renderTexture;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ulong loadingScreenOverlayHandle;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ulong progressBarOverlayHandle;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool autoTriggerOnEnable;

	[Token(Token = "0x17000086")]
	public static bool loading
	{
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x234CBD8", Offset = "0x234CBD8", VA = "0x234CBD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000087")]
	public static float progress
	{
		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x234CC70", Offset = "0x234CC70", VA = "0x234CC70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000088")]
	public static Texture progressTexture
	{
		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x234CD84", Offset = "0x234CD84", VA = "0x234CD84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x234CE5C", Offset = "0x234CE5C", VA = "0x234CE5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x2343C1C", Offset = "0x2343C1C", VA = "0x2343C1C")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x234CEDC", Offset = "0x234CEDC", VA = "0x234CEDC")]
	public static void Begin(string levelName, bool showGrid = false, float fadeOutTime = 0.5f, float r = 0f, float g = 0f, float b = 0f, float a = 1f)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x234CFE8", Offset = "0x234CFE8", VA = "0x234CFE8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x234D7C8", Offset = "0x234D7C8", VA = "0x234D7C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x234CE6C", Offset = "0x234CE6C", VA = "0x234CE6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22810", Offset = "0xD22810")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x234D42C", Offset = "0x234D42C", VA = "0x234D42C")]
	private ulong GetOverlayHandle(string overlayName, Transform transform, float widthInMeters = 1f)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x234DA44", Offset = "0x234DA44", VA = "0x234DA44")]
	public SteamVR_LoadLevel()
	{
	}
}
[Token(Token = "0x2000265")]
public class SteamVR_Menu : MonoBehaviour
{
	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture cursor;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture background;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture logo;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float logoHeight;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float menuOffset;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 scaleLimits;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleRate;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Overlay overlay;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera overlayCam;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 uvOffset;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float distance;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD162A8", Offset = "0xD162A8")]
	private float <scale>k__BackingField;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string scaleLimitX;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string scaleLimitY;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string scaleRateText;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CursorLockMode savedCursorLockState;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool savedCursorVisible;

	[Token(Token = "0x17000089")]
	public RenderTexture texture
	{
		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x234E980", Offset = "0x234E980", VA = "0x234E980")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	public float scale
	{
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x234EA4C", Offset = "0x234EA4C", VA = "0x234EA4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22874", Offset = "0xD22874")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x234EA54", Offset = "0x234EA54", VA = "0x234EA54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22884", Offset = "0xD22884")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x234EA5C", Offset = "0x234EA5C", VA = "0x234EA5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x234EBC4", Offset = "0x234EBC4", VA = "0x234EBC4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x2350780", Offset = "0x2350780", VA = "0x2350780")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x235067C", Offset = "0x235067C", VA = "0x235067C")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x2350B38", Offset = "0x2350B38", VA = "0x2350B38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x2350590", Offset = "0x2350590", VA = "0x2350590")]
	private void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x2350AD0", Offset = "0x2350AD0", VA = "0x2350AD0")]
	private void SaveCursorState()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x2350B08", Offset = "0x2350B08", VA = "0x2350B08")]
	private void RestoreCursorState()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x2350D08", Offset = "0x2350D08", VA = "0x2350D08")]
	public SteamVR_Menu()
	{
	}
}
[Token(Token = "0x2000266")]
public class SteamVR_Overlay : MonoBehaviour
{
	[Token(Token = "0x20005CF")]
	public struct IntersectionResults
	{
		[Token(Token = "0x4002CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 point;

		[Token(Token = "0x4002CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 normal;

		[Token(Token = "0x4002D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 UVs;

		[Token(Token = "0x4002D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;
	}

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool curved;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool antialias;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool highquality;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD162B8", Offset = "0xD162B8")]
	public float scale;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD162F0", Offset = "0xD162F0")]
	public float distance;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD16328", Offset = "0xD16328")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16328", Offset = "0xD16328")]
	public float alpha;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 uvOffset;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 mouseScale;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 curvedRange;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VROverlayInputMethod inputMethod;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1637C", Offset = "0xD1637C")]
	private static SteamVR_Overlay <instance>k__BackingField;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong handle;

	[Token(Token = "0x1700008B")]
	public static SteamVR_Overlay instance
	{
		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x2350D5C", Offset = "0x2350D5C", VA = "0x2350D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22894", Offset = "0xD22894")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x2350DAC", Offset = "0x2350DAC", VA = "0x2350DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD228A4", Offset = "0xD228A4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public static string key
	{
		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x234D95C", Offset = "0x234D95C", VA = "0x234D95C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x2350E00", Offset = "0x2350E00", VA = "0x2350E00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x2350F50", Offset = "0x2350F50", VA = "0x2350F50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x235100C", Offset = "0x235100C", VA = "0x235100C")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x2351448", Offset = "0x2351448", VA = "0x2351448")]
	public bool PollNextEvent(ref VREvent_t pEvent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x2351554", Offset = "0x2351554", VA = "0x2351554")]
	public bool ComputeIntersection(Vector3 source, Vector3 direction, ref IntersectionResults results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x2351710", Offset = "0x2351710", VA = "0x2351710")]
	public SteamVR_Overlay()
	{
	}
}
[Token(Token = "0x2000267")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0ADC0", Offset = "0xD0ADC0")]
public class SteamVR_PlayArea : MonoBehaviour
{
	[Token(Token = "0x20005D0")]
	public enum Size
	{
		[Token(Token = "0x4002D03")]
		Calibrated,
		[Token(Token = "0x4002D04")]
		_400x300,
		[Token(Token = "0x4002D05")]
		_300x225,
		[Token(Token = "0x4002D06")]
		_200x150
	}

	[Token(Token = "0x20005D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C9A0", Offset = "0xD0C9A0")]
	private sealed class <UpdateBounds>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_PlayArea <>4__this;

		[Token(Token = "0x4002D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CVRChaperone <chaperone>5__2;

		[Token(Token = "0x1700029E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002366")]
			[Address(RVA = "0x23528E0", Offset = "0x23528E0", VA = "0x23528E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002368")]
			[Address(RVA = "0x2352948", Offset = "0x2352948", VA = "0x2352948", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x235276C", Offset = "0x235276C", VA = "0x235276C")]
		[DebuggerHidden]
		public <UpdateBounds>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x23527E0", Offset = "0x23527E0", VA = "0x23527E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x23527E4", Offset = "0x23527E4", VA = "0x23527E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x23528E8", Offset = "0x23528E8", VA = "0x23528E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float borderThickness;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float wireframeHeight;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool drawWireframeWhenSelectedOnly;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawInGame;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Size size;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3[] vertices;

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x23517D8", Offset = "0x23517D8", VA = "0x23517D8")]
	public static bool GetBounds(Size size, ref HmdQuad_t pRect)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x2351B5C", Offset = "0x2351B5C", VA = "0x2351B5C")]
	public void BuildMesh()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x23523A4", Offset = "0x23523A4", VA = "0x23523A4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x2352638", Offset = "0x2352638", VA = "0x2352638")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x23523B4", Offset = "0x23523B4", VA = "0x23523B4")]
	public void DrawWireframe()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x2352648", Offset = "0x2352648", VA = "0x2352648")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x23526FC", Offset = "0x23526FC", VA = "0x23526FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD228B4", Offset = "0xD228B4")]
	private IEnumerator UpdateBounds()
	{
		return null;
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x2352798", Offset = "0x2352798", VA = "0x2352798")]
	public SteamVR_PlayArea()
	{
	}
}
[Token(Token = "0x2000268")]
public class SteamVR_Render : MonoBehaviour
{
	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C9B0", Offset = "0xD0C9B0")]
	private sealed class <RenderLoop>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SteamVR_Render <>4__this;

		[Token(Token = "0x170002A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600236C")]
			[Address(RVA = "0x22BB840", Offset = "0x22BB840", VA = "0x22BB840", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0x22BB8A8", Offset = "0x22BB8A8", VA = "0x22BB8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x22BB65C", Offset = "0x22BB65C", VA = "0x22BB65C")]
		[DebuggerHidden]
		public <RenderLoop>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x22BB688", Offset = "0x22BB688", VA = "0x22BB688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x22BB68C", Offset = "0x22BB68C", VA = "0x22BB68C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x22BB848", Offset = "0x22BB848", VA = "0x22BB848", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pauseGameWhenDashboardIsVisible;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockPhysicsUpdateRateToRenderFrequency;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SteamVR_ExternalCamera externalCamera;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string externalCameraConfigPath;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ETrackingUniverseOrigin trackingSpace;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1639C", Offset = "0xD1639C")]
	private static EVREye <eye>k__BackingField;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SteamVR_Render _instance;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isQuitting;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SteamVR_Camera[] cameras;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedDevicePose_t[] poses;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedDevicePose_t[] gamePoses;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool _pauseRendering;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sceneResolutionScale;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeScale;

	[Token(Token = "0x1700008D")]
	public static EVREye eye
	{
		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x2352950", Offset = "0x2352950", VA = "0x2352950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22918", Offset = "0xD22918")]
		get
		{
			return default(EVREye);
		}
		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x23529A0", Offset = "0x23529A0", VA = "0x23529A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22928", Offset = "0xD22928")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public static SteamVR_Render instance
	{
		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x2345F78", Offset = "0x2345F78", VA = "0x2345F78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008F")]
	public static bool pauseRendering
	{
		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x2352EBC", Offset = "0x2352EBC", VA = "0x2352EBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x234E878", Offset = "0x234E878", VA = "0x234E878")]
		set
		{
		}
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x23529F4", Offset = "0x23529F4", VA = "0x23529F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x2352A44", Offset = "0x2352A44", VA = "0x2352A44")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x2344934", Offset = "0x2344934", VA = "0x2344934")]
	public static void Add(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x2343E04", Offset = "0x2343E04", VA = "0x2343E04")]
	public static void Remove(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x234D9D4", Offset = "0x234D9D4", VA = "0x234D9D4")]
	public static SteamVR_Camera Top()
	{
		return null;
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x2352AB8", Offset = "0x2352AB8", VA = "0x2352AB8")]
	private void AddInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x2352CBC", Offset = "0x2352CBC", VA = "0x2352CBC")]
	private void RemoveInternal(SteamVR_Camera vrcam)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x2352E70", Offset = "0x2352E70", VA = "0x2352E70")]
	private SteamVR_Camera TopInternal()
	{
		return null;
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x2352F0C", Offset = "0x2352F0C", VA = "0x2352F0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22938", Offset = "0xD22938")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x2352F7C", Offset = "0x2352F7C", VA = "0x2352F7C")]
	private void RenderExternalCamera()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x23530D0", Offset = "0x23530D0", VA = "0x23530D0")]
	private void OnInputFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x2353140", Offset = "0x2353140", VA = "0x2353140")]
	private void OnQuit(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x2353148", Offset = "0x2353148", VA = "0x2353148")]
	private string GetScreenshotFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames screenshotPropertyFilename)
	{
		return null;
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x2353294", Offset = "0x2353294", VA = "0x2353294")]
	private void OnRequestScreenshot(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x2353474", Offset = "0x2353474", VA = "0x2353474")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x23536F0", Offset = "0x23536F0", VA = "0x23536F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x23538A8", Offset = "0x23538A8", VA = "0x23538A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x2353A0C", Offset = "0x2353A0C", VA = "0x2353A0C")]
	public void UpdatePoses()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x2353AEC", Offset = "0x2353AEC", VA = "0x2353AEC")]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x2353AF0", Offset = "0x2353AF0", VA = "0x2353AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x2353EF4", Offset = "0x2353EF4", VA = "0x2353EF4")]
	public SteamVR_Render()
	{
	}
}
[Token(Token = "0x2000269")]
[ExecuteInEditMode]
public class SteamVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x20005D3")]
	public class RenderModel
	{
		[Token(Token = "0x4002D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EE0C", Offset = "0xD1EE0C")]
		private Mesh <mesh>k__BackingField;

		[Token(Token = "0x4002D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EE1C", Offset = "0xD1EE1C")]
		private Material <material>k__BackingField;

		[Token(Token = "0x170002A2")]
		public Mesh mesh
		{
			[Token(Token = "0x6002370")]
			[Address(RVA = "0x22BF1EC", Offset = "0x22BF1EC", VA = "0x22BF1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD286FC", Offset = "0xD286FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002371")]
			[Address(RVA = "0x22BF1F4", Offset = "0x22BF1F4", VA = "0x22BF1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD2870C", Offset = "0xD2870C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public Material material
		{
			[Token(Token = "0x6002372")]
			[Address(RVA = "0x22BF1FC", Offset = "0x22BF1FC", VA = "0x22BF1FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD2871C", Offset = "0xD2871C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002373")]
			[Address(RVA = "0x22BF204", Offset = "0x22BF204", VA = "0x22BF204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD2872C", Offset = "0xD2872C")]
			private set
			{
			}
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x22BDE98", Offset = "0x22BDE98", VA = "0x22BDE98")]
		public RenderModel(Mesh mesh, Material material)
		{
		}
	}

	[Token(Token = "0x20005D4")]
	public sealed class RenderModelInterfaceHolder : IDisposable
	{
		[Token(Token = "0x4002D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool needsShutdown;

		[Token(Token = "0x4002D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool failedLoadInterface;

		[Token(Token = "0x4002D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CVRRenderModels _instance;

		[Token(Token = "0x170002A4")]
		public CVRRenderModels instance
		{
			[Token(Token = "0x6002374")]
			[Address(RVA = "0x22BC990", Offset = "0x22BC990", VA = "0x22BC990")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x22BF20C", Offset = "0x22BF20C", VA = "0x22BF20C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x22BC2CC", Offset = "0x22BC2CC", VA = "0x22BC2CC")]
		public RenderModelInterfaceHolder()
		{
		}
	}

	[Token(Token = "0x20005D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C9C0", Offset = "0xD0C9C0")]
	private sealed class <SetModelAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string renderModelName;

		[Token(Token = "0x4002D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SteamVR_RenderModel <>4__this;

		[Token(Token = "0x4002D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderModelInterfaceHolder <holder>5__2;

		[Token(Token = "0x4002D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CVRRenderModels <renderModels>5__3;

		[Token(Token = "0x4002D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string[] <renderModelNames>5__4;

		[Token(Token = "0x170002A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600237B")]
			[Address(RVA = "0x22BF17C", Offset = "0x22BF17C", VA = "0x22BF17C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600237D")]
			[Address(RVA = "0x22BF1E4", Offset = "0x22BF1E4", VA = "0x22BF1E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x22BBCAC", Offset = "0x22BBCAC", VA = "0x22BBCAC")]
		[DebuggerHidden]
		public <SetModelAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x22BE7FC", Offset = "0x22BE7FC", VA = "0x22BE7FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x22BE8D8", Offset = "0x22BE8D8", VA = "0x22BE8D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x22BE818", Offset = "0x22BE818", VA = "0x22BE818")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x22BF184", Offset = "0x22BF184", VA = "0x22BF184", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C9D0", Offset = "0xD0C9D0")]
	private sealed class <FreeRenderModel>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr pRenderModel;

		[Token(Token = "0x170002A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002381")]
			[Address(RVA = "0x22BE78C", Offset = "0x22BE78C", VA = "0x22BE78C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0x22BE7F4", Offset = "0x22BE7F4", VA = "0x22BE7F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x22BDED0", Offset = "0x22BDED0", VA = "0x22BDED0")]
		[DebuggerHidden]
		public <FreeRenderModel>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x22BE610", Offset = "0x22BE610", VA = "0x22BE610", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x22BE614", Offset = "0x22BE614", VA = "0x22BE614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x22BE794", Offset = "0x22BE794", VA = "0x22BE794", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SteamVR_TrackedObject.EIndex index;

	[Token(Token = "0x40012C5")]
	public const string modelOverrideWarning = "Model override is really only meant to be used in the scene view for lining things up; using it at runtime is discouraged.  Use tracked device index instead to ensure the correct model is displayed for all users.";

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD163AC", Offset = "0xD163AC")]
	public string modelOverride;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD163E4", Offset = "0xD163E4")]
	public Shader shader;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1641C", Offset = "0xD1641C")]
	public bool verbose;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD16454", Offset = "0xD16454")]
	public bool createComponents;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1648C", Offset = "0xD1648C")]
	public bool updateDynamically;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public RenderModel_ControllerMode_State_t controllerModeState;

	[Token(Token = "0x40012CC")]
	public const string k_localTransformName = "attach";

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD164C4", Offset = "0xD164C4")]
	private string <renderModelName>k__BackingField;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Hashtable models;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Hashtable materials;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SteamVR_Events.Action deviceConnectedAction;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_Events.Action hideRenderModelsAction;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_Events.Action modelSkinSettingsHaveChangedAction;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, string> nameCache;

	[Token(Token = "0x17000090")]
	public string renderModelName
	{
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x22BB8B0", Offset = "0x22BB8B0", VA = "0x22BB8B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD2299C", Offset = "0xD2299C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x22BB8B8", Offset = "0x22BB8B8", VA = "0x22BB8B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD229AC", Offset = "0xD229AC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x22BB8C0", Offset = "0x22BB8C0", VA = "0x22BB8C0")]
	private void OnModelSkinSettingsHaveChanged(VREvent_t vrEvent)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x22BBAE4", Offset = "0x22BBAE4", VA = "0x22BBAE4")]
	private void OnHideRenderModels(bool hidden)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x22BBC18", Offset = "0x22BBC18", VA = "0x22BBC18")]
	private void OnDeviceConnected(int i, bool connected)
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x22BB930", Offset = "0x22BB930", VA = "0x22BB930")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x22BBC30", Offset = "0x22BBC30", VA = "0x22BBC30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD229BC", Offset = "0xD229BC")]
	private IEnumerator SetModelAsync(string renderModelName)
	{
		return null;
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x22BBCD8", Offset = "0x22BBCD8", VA = "0x22BBCD8")]
	private bool SetModel(string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x22BCF34", Offset = "0x22BCF34", VA = "0x22BCF34")]
	private RenderModel LoadRenderModel(CVRRenderModels renderModels, string renderModelName, string baseName)
	{
		return null;
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x22BDE28", Offset = "0x22BDE28", VA = "0x22BDE28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22A20", Offset = "0xD22A20")]
	private IEnumerator FreeRenderModel(IntPtr pRenderModel)
	{
		return null;
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x22BDEFC", Offset = "0x22BDEFC", VA = "0x22BDEFC")]
	public Transform FindComponent(string componentName)
	{
		return null;
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x22BC190", Offset = "0x22BC190", VA = "0x22BC190")]
	private void StripMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x22BC2D4", Offset = "0x22BC2D4", VA = "0x22BC2D4")]
	private bool LoadComponents(RenderModelInterfaceHolder holder, string renderModelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x22BDF98", Offset = "0x22BDF98", VA = "0x22BDF98")]
	private SteamVR_RenderModel()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x22BE0E4", Offset = "0x22BE0E4", VA = "0x22BE0E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x22BE200", Offset = "0x22BE200", VA = "0x22BE200")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x22BE258", Offset = "0x22BE258", VA = "0x22BE258")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x22BCAF0", Offset = "0x22BCAF0", VA = "0x22BCAF0")]
	public void UpdateComponents(CVRRenderModels renderModels)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x22BE4F8", Offset = "0x22BE4F8", VA = "0x22BE4F8")]
	public void SetDeviceIndex(int index)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x22BDA18", Offset = "0x22BDA18", VA = "0x22BDA18")]
	private static void Sleep()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x22BDA24", Offset = "0x22BDA24", VA = "0x22BDA24")]
	private RenderModel_t MarshalRenderModel(IntPtr pRenderModel)
	{
		return default(RenderModel_t);
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x22BDC2C", Offset = "0x22BDC2C", VA = "0x22BDC2C")]
	private RenderModel_TextureMap_t MarshalRenderModel_TextureMap(IntPtr pRenderModel)
	{
		return default(RenderModel_TextureMap_t);
	}
}
[Token(Token = "0x200026A")]
public class SteamVR_Skybox : MonoBehaviour
{
	[Token(Token = "0x20005D7")]
	public enum CellSize
	{
		[Token(Token = "0x4002D1E")]
		x1024,
		[Token(Token = "0x4002D1F")]
		x64,
		[Token(Token = "0x4002D20")]
		x32,
		[Token(Token = "0x4002D21")]
		x16,
		[Token(Token = "0x4002D22")]
		x8
	}

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture front;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture back;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture left;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture right;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture top;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture bottom;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CellSize StereoCellSize;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float StereoIpdMm;

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x22BF284", Offset = "0x22BF284", VA = "0x22BF284")]
	public void SetTextureByIndex(int i, Texture t)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x22BF2D8", Offset = "0x22BF2D8", VA = "0x22BF2D8")]
	public Texture GetTextureByIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x22BF334", Offset = "0x22BF334", VA = "0x22BF334")]
	public static void SetOverride([Optional] Texture front, [Optional] Texture back, [Optional] Texture left, [Optional] Texture right, [Optional] Texture top, [Optional] Texture bottom)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x22BF6CC", Offset = "0x22BF6CC", VA = "0x22BF6CC")]
	public static void ClearOverride()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x22BF744", Offset = "0x22BF744", VA = "0x22BF744")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x22BF758", Offset = "0x22BF758", VA = "0x22BF758")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x22BF75C", Offset = "0x22BF75C", VA = "0x22BF75C")]
	public SteamVR_Skybox()
	{
	}
}
[Token(Token = "0x200026B")]
[ExecuteInEditMode]
public class SteamVR_SphericalProjection : MonoBehaviour
{
	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material material;

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x22BF770", Offset = "0x22BF770", VA = "0x22BF770")]
	public void Set(Vector3 N, float phi0, float phi1, float theta0, float theta1, Vector3 uAxis, Vector3 uOrigin, float uScale, Vector3 vAxis, Vector3 vOrigin, float vScale)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x22BFB10", Offset = "0x22BFB10", VA = "0x22BFB10")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x22BFBA0", Offset = "0x22BFBA0", VA = "0x22BFBA0")]
	public SteamVR_SphericalProjection()
	{
	}
}
[Token(Token = "0x200026C")]
[ExecuteInEditMode]
public class SteamVR_Stats : MonoBehaviour
{
	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x22BFBA8", Offset = "0x22BFBA8", VA = "0x22BFBA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x22BFC44", Offset = "0x22BFC44", VA = "0x22BFC44")]
	public SteamVR_Stats()
	{
	}
}
[Token(Token = "0x200026D")]
public class SteamVR_TestController : MonoBehaviour
{
	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> controllerIndices;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EVRButtonId[] buttonIds;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private EVRButtonId[] axisIds;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform point;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform pointer;

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x22BFC4C", Offset = "0x22BFC4C", VA = "0x22BFC4C")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x22C0200", Offset = "0x22C0200", VA = "0x22C0200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x22C02C4", Offset = "0x22C02C4", VA = "0x22C02C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x22BFE00", Offset = "0x22BFE00", VA = "0x22BFE00")]
	private void PrintControllerStatus(int index)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x22C0388", Offset = "0x22C0388", VA = "0x22C0388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x22C0C68", Offset = "0x22C0C68", VA = "0x22C0C68")]
	public SteamVR_TestController()
	{
	}
}
[Token(Token = "0x200026E")]
public class SteamVR_TrackedCamera
{
	[Token(Token = "0x20005D8")]
	public class VideoStreamTexture
	{
		[Token(Token = "0x4002D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EE2C", Offset = "0xD1EE2C")]
		private bool <undistorted>k__BackingField;

		[Token(Token = "0x4002D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EE3C", Offset = "0xD1EE3C")]
		private VRTextureBounds_t <frameBounds>k__BackingField;

		[Token(Token = "0x4002D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _texture;

		[Token(Token = "0x4002D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevFrameCount;

		[Token(Token = "0x4002D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint glTextureId;

		[Token(Token = "0x4002D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VideoStream videostream;

		[Token(Token = "0x4002D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraVideoStreamFrameHeader_t header;

		[Token(Token = "0x170002A9")]
		public bool undistorted
		{
			[Token(Token = "0x6002385")]
			[Address(RVA = "0x22C139C", Offset = "0x22C139C", VA = "0x22C139C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD287DC", Offset = "0xD287DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002386")]
			[Address(RVA = "0x22C13A4", Offset = "0x22C13A4", VA = "0x22C13A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD287EC", Offset = "0xD287EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public uint deviceIndex
		{
			[Token(Token = "0x6002387")]
			[Address(RVA = "0x22C13B0", Offset = "0x22C13B0", VA = "0x22C13B0")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170002AB")]
		public bool hasCamera
		{
			[Token(Token = "0x6002388")]
			[Address(RVA = "0x22C13CC", Offset = "0x22C13CC", VA = "0x22C13CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AC")]
		public bool hasTracking
		{
			[Token(Token = "0x6002389")]
			[Address(RVA = "0x22C13E8", Offset = "0x22C13E8", VA = "0x22C13E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AD")]
		public uint frameId
		{
			[Token(Token = "0x600238A")]
			[Address(RVA = "0x22C1768", Offset = "0x22C1768", VA = "0x22C1768")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170002AE")]
		public VRTextureBounds_t frameBounds
		{
			[Token(Token = "0x600238B")]
			[Address(RVA = "0x22C178C", Offset = "0x22C178C", VA = "0x22C178C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD287FC", Offset = "0xD287FC")]
			get
			{
				return default(VRTextureBounds_t);
			}
			[Token(Token = "0x600238C")]
			[Address(RVA = "0x22C1798", Offset = "0x22C1798", VA = "0x22C1798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD2880C", Offset = "0xD2880C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public EVRTrackedCameraFrameType frameType
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0x22C17A4", Offset = "0x22C17A4", VA = "0x22C17A4")]
			get
			{
				return default(EVRTrackedCameraFrameType);
			}
		}

		[Token(Token = "0x170002B0")]
		public Texture2D texture
		{
			[Token(Token = "0x600238E")]
			[Address(RVA = "0x22C17AC", Offset = "0x22C17AC", VA = "0x22C17AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		public SteamVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0x22C17D0", Offset = "0x22C17D0", VA = "0x22C17D0")]
			get
			{
				return default(SteamVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170002B2")]
		public Vector3 velocity
		{
			[Token(Token = "0x6002390")]
			[Address(RVA = "0x22C1828", Offset = "0x22C1828", VA = "0x22C1828")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002B3")]
		public Vector3 angularVelocity
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x22C1878", Offset = "0x22C1878", VA = "0x22C1878")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x22C0EA4", Offset = "0x22C0EA4", VA = "0x22C0EA4")]
		public VideoStreamTexture(uint deviceIndex, bool undistorted)
		{
		}

		[Token(Token = "0x6002392")]
		[Address(RVA = "0x22C18CC", Offset = "0x22C18CC", VA = "0x22C18CC")]
		public TrackedDevicePose_t GetPose()
		{
			return default(TrackedDevicePose_t);
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0x22C18FC", Offset = "0x22C18FC", VA = "0x22C18FC")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x22C1914", Offset = "0x22C1914", VA = "0x22C1914")]
		public ulong Release()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x22C140C", Offset = "0x22C140C", VA = "0x22C140C")]
		private void Update()
		{
		}
	}

	[Token(Token = "0x20005D9")]
	private class VideoStream
	{
		[Token(Token = "0x4002D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EE4C", Offset = "0xD1EE4C")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x4002D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong _handle;

		[Token(Token = "0x4002D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasCamera;

		[Token(Token = "0x4002D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong refCount;

		[Token(Token = "0x170002B4")]
		public uint deviceIndex
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0x22C1238", Offset = "0x22C1238", VA = "0x22C1238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD2881C", Offset = "0xD2881C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6002398")]
			[Address(RVA = "0x22C1240", Offset = "0x22C1240", VA = "0x22C1240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD2882C", Offset = "0xD2882C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public ulong handle
		{
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x22C1248", Offset = "0x22C1248", VA = "0x22C1248")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170002B6")]
		public bool hasCamera
		{
			[Token(Token = "0x600239A")]
			[Address(RVA = "0x22C1250", Offset = "0x22C1250", VA = "0x22C1250")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x22C118C", Offset = "0x22C118C", VA = "0x22C118C")]
		public VideoStream(uint deviceIndex)
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x22C1258", Offset = "0x22C1258", VA = "0x22C1258")]
		public ulong Acquire()
		{
			return default(ulong);
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x22C12F8", Offset = "0x22C12F8", VA = "0x22C12F8")]
		public ulong Release()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VideoStreamTexture[] distorted;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VideoStreamTexture[] undistorted;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static VideoStream[] videostreams;

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x22C0D54", Offset = "0x22C0D54", VA = "0x22C0D54")]
	public static VideoStreamTexture Distorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x22C0EF4", Offset = "0x22C0EF4", VA = "0x22C0EF4")]
	public static VideoStreamTexture Undistorted(int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x22C1044", Offset = "0x22C1044", VA = "0x22C1044")]
	public static VideoStreamTexture Source(bool undistorted, int deviceIndex = 0)
	{
		return null;
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x22C1058", Offset = "0x22C1058", VA = "0x22C1058")]
	private static VideoStream Stream(uint deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x22C1230", Offset = "0x22C1230", VA = "0x22C1230")]
	public SteamVR_TrackedCamera()
	{
	}
}
[Token(Token = "0x200026F")]
public class SteamVR_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x20005DA")]
	public enum EIndex
	{
		[Token(Token = "0x4002D2F")]
		None = -1,
		[Token(Token = "0x4002D30")]
		Hmd,
		[Token(Token = "0x4002D31")]
		Device1,
		[Token(Token = "0x4002D32")]
		Device2,
		[Token(Token = "0x4002D33")]
		Device3,
		[Token(Token = "0x4002D34")]
		Device4,
		[Token(Token = "0x4002D35")]
		Device5,
		[Token(Token = "0x4002D36")]
		Device6,
		[Token(Token = "0x4002D37")]
		Device7,
		[Token(Token = "0x4002D38")]
		Device8,
		[Token(Token = "0x4002D39")]
		Device9,
		[Token(Token = "0x4002D3A")]
		Device10,
		[Token(Token = "0x4002D3B")]
		Device11,
		[Token(Token = "0x4002D3C")]
		Device12,
		[Token(Token = "0x4002D3D")]
		Device13,
		[Token(Token = "0x4002D3E")]
		Device14,
		[Token(Token = "0x4002D3F")]
		Device15
	}

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EIndex index;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD164D4", Offset = "0xD164D4")]
	public Transform origin;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1650C", Offset = "0xD1650C")]
	private bool <isValid>k__BackingField;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SteamVR_Events.Action newPosesAction;

	[Token(Token = "0x17000091")]
	public bool isValid
	{
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x22C19B8", Offset = "0x22C19B8", VA = "0x22C19B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22A84", Offset = "0xD22A84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x22C19C0", Offset = "0x22C19C0", VA = "0x22C19C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22A94", Offset = "0xD22A94")]
		private set
		{
		}
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x22C19CC", Offset = "0x22C19CC", VA = "0x22C19CC")]
	private void OnNewPoses(TrackedDevicePose_t[] poses)
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x22C1C28", Offset = "0x22C1C28", VA = "0x22C1C28")]
	private SteamVR_TrackedObject()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x22C1CD8", Offset = "0x22C1CD8", VA = "0x22C1CD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x22C1D88", Offset = "0x22C1D88", VA = "0x22C1D88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x22C1DC0", Offset = "0x22C1DC0", VA = "0x22C1DC0")]
	public void SetDeviceIndex(int index)
	{
	}
}
[Token(Token = "0x2000270")]
[ExecuteInEditMode]
public class SteamVR_UpdatePoses : MonoBehaviour
{
	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x22C1EA8", Offset = "0x22C1EA8", VA = "0x22C1EA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x22C1F44", Offset = "0x22C1F44", VA = "0x22C1F44")]
	public SteamVR_UpdatePoses()
	{
	}
}
[Token(Token = "0x2000271")]
public static class SteamVR_Utils
{
	[Serializable]
	[Token(Token = "0x20005DB")]
	public struct RigidTransform
	{
		[Token(Token = "0x4002D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4002D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x170002B7")]
		public static RigidTransform identity
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x22C3E20", Offset = "0x22C3E20", VA = "0x22C3E20")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x22C3EF0", Offset = "0x22C3EF0", VA = "0x22C3EF0")]
		public static RigidTransform FromLocal(Transform t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x22C3EDC", Offset = "0x22C3EDC", VA = "0x22C3EDC")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x22C3F58", Offset = "0x22C3F58", VA = "0x22C3F58")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x22C3FA8", Offset = "0x22C3FA8", VA = "0x22C3FA8")]
		public RigidTransform(Transform from, Transform to)
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x22BE2DC", Offset = "0x22BE2DC", VA = "0x22BE2DC")]
		public RigidTransform(HmdMatrix34_t pose)
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x22C4168", Offset = "0x22C4168", VA = "0x22C4168")]
		public RigidTransform(HmdMatrix44_t pose)
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x22C43E8", Offset = "0x22C43E8", VA = "0x22C43E8")]
		public HmdMatrix44_t ToHmdMatrix44()
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x22C46DC", Offset = "0x22C46DC", VA = "0x22C46DC")]
		public HmdMatrix34_t ToHmdMatrix34()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x22C4950", Offset = "0x22C4950", VA = "0x22C4950", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x22C4AB4", Offset = "0x22C4AB4", VA = "0x22C4AB4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x22C4AEC", Offset = "0x22C4AEC", VA = "0x22C4AEC")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x22C4C24", Offset = "0x22C4C24", VA = "0x22C4C24")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x22C4D5C", Offset = "0x22C4D5C", VA = "0x22C4D5C")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x22C4EC0", Offset = "0x22C4EC0", VA = "0x22C4EC0")]
		public void Inverse()
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x22C4FB0", Offset = "0x22C4FB0", VA = "0x22C4FB0")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x22C5004", Offset = "0x22C5004", VA = "0x22C5004")]
		public void Multiply(RigidTransform a, RigidTransform b)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x22C5148", Offset = "0x22C5148", VA = "0x22C5148")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x22C526C", Offset = "0x22C526C", VA = "0x22C526C")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x22C5380", Offset = "0x22C5380", VA = "0x22C5380")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x22C5384", Offset = "0x22C5384", VA = "0x22C5384")]
		public static RigidTransform Interpolate(RigidTransform a, RigidTransform b, float t)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x22C54E0", Offset = "0x22C54E0", VA = "0x22C54E0")]
		public void Interpolate(RigidTransform to, float t)
		{
		}
	}

	[Token(Token = "0x20005DC")]
	public delegate object SystemFn(CVRSystem system, params object[] args);

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x22C1F4C", Offset = "0x22C1F4C", VA = "0x22C1F4C")]
	public static Quaternion Slerp(Quaternion A, Quaternion B, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x22C2114", Offset = "0x22C2114", VA = "0x22C2114")]
	public static Vector3 Lerp(Vector3 A, Vector3 B, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x22C216C", Offset = "0x22C216C", VA = "0x22C216C")]
	public static float Lerp(float A, float B, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x22C217C", Offset = "0x22C217C", VA = "0x22C217C")]
	public static double Lerp(double A, double B, double t)
	{
		return default(double);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x22C218C", Offset = "0x22C218C", VA = "0x22C218C")]
	public static float InverseLerp(Vector3 A, Vector3 B, Vector3 result)
	{
		return default(float);
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x22C2290", Offset = "0x22C2290", VA = "0x22C2290")]
	public static float InverseLerp(float A, float B, float result)
	{
		return default(float);
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x22C22A0", Offset = "0x22C22A0", VA = "0x22C22A0")]
	public static double InverseLerp(double A, double B, double result)
	{
		return default(double);
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x22C22B0", Offset = "0x22C22B0", VA = "0x22C22B0")]
	public static float Saturate(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x22C22CC", Offset = "0x22C22CC", VA = "0x22C22CC")]
	public static Vector2 Saturate(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x22C2318", Offset = "0x22C2318", VA = "0x22C2318")]
	public static float Abs(float A)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x22C2328", Offset = "0x22C2328", VA = "0x22C2328")]
	public static Vector2 Abs(Vector2 A)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x22C236C", Offset = "0x22C236C", VA = "0x22C236C")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x22C2428", Offset = "0x22C2428", VA = "0x22C2428")]
	public static Quaternion GetRotation(this Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x22C25F4", Offset = "0x22C25F4", VA = "0x22C25F4")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x22C2630", Offset = "0x22C2630", VA = "0x22C2630")]
	public static Vector3 GetScale(this Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x22C2768", Offset = "0x22C2768", VA = "0x22C2768")]
	public static object CallSystemFn(SystemFn fn, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x22C2CBC", Offset = "0x22C2CBC", VA = "0x22C2CBC")]
	public static void TakeStereoScreenshot(uint screenshotHandle, GameObject target, int cellSize, float ipd, ref string previewFilename, ref string VRFilename)
	{
	}
}
[Token(Token = "0x2000272")]
public class ToggleBool : StateMachineBehaviour
{
	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string boolName;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool boolVal;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float animTime;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float elapsedTime;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool boolUsed;

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x232729C", Offset = "0x232729C", VA = "0x232729C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x23272A8", Offset = "0x23272A8", VA = "0x23272A8", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x2327368", Offset = "0x2327368", VA = "0x2327368")]
	public ToggleBool()
	{
	}
}
[Token(Token = "0x2000273")]
public class ToggleBool_RNA : StateMachineBehaviour
{
	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string boolName;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool boolVal;

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x2327370", Offset = "0x2327370", VA = "0x2327370", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x2327398", Offset = "0x2327398", VA = "0x2327398")]
	public ToggleBool_RNA()
	{
	}
}
[Token(Token = "0x2000274")]
public class LODPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005DD")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4002D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AutomaticLOD m_automaticLOD;

		[Token(Token = "0x4002D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x4002D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x4002D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4002D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0xFE20F8", Offset = "0xFE20F8", VA = "0xFE20F8")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x20005DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C9E0", Offset = "0xD0C9E0")]
	private sealed class <ComputeLODWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODPreview <>4__this;

		[Token(Token = "0x4002D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4002D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4002D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AutomaticLOD <automaticLOD>5__3;

		[Token(Token = "0x4002D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4002D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4002D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x170002B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023BC")]
			[Address(RVA = "0xFE2088", Offset = "0xFE2088", VA = "0xFE2088", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023BE")]
			[Address(RVA = "0xFE20F0", Offset = "0xFE20F0", VA = "0xFE20F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0xFE1978", Offset = "0xFE1978", VA = "0xFE1978")]
		[DebuggerHidden]
		public <ComputeLODWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0xFE1A24", Offset = "0xFE1A24", VA = "0xFE1A24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0xFE1A98", Offset = "0xFE1A98", VA = "0xFE1A98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0xFE1A40", Offset = "0xFE1A40", VA = "0xFE1A40")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0xFE2090", Offset = "0xFE2090", VA = "0xFE2090", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AutomaticLOD m_selectedAutomaticLOD;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xFE0094", Offset = "0xFE0094", VA = "0xFE0094")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xFE03D4", Offset = "0xFE03D4", VA = "0xFE03D4")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xFE04A4", Offset = "0xFE04A4", VA = "0xFE04A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xFE0938", Offset = "0xFE0938", VA = "0xFE0938")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xFE01E4", Offset = "0xFE01E4", VA = "0xFE01E4")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xFE17D4", Offset = "0xFE17D4", VA = "0xFE17D4")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xFE0704", Offset = "0xFE0704", VA = "0xFE0704")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xFE1754", Offset = "0xFE1754", VA = "0xFE1754")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22AD4", Offset = "0xD22AD4")]
	private IEnumerator ComputeLODWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xFE19A4", Offset = "0xFE19A4", VA = "0xFE19A4")]
	public LODPreview()
	{
	}
}
[Token(Token = "0x2000275")]
public class LODSampleLODScene : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005DF")]
	public class SceneCamera
	{
		[Token(Token = "0x4002D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera m_camera;

		[Token(Token = "0x4002D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_near;

		[Token(Token = "0x4002D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_far;

		[Token(Token = "0x4002D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3 m_v3InitialCameraPosition;

		[Token(Token = "0x4002D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Vector3 m_v3ViewDir;

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xFE38EC", Offset = "0xFE38EC", VA = "0xFE38EC")]
		public SceneCamera()
		{
		}
	}

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneCamera[] SceneCameras;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SceneCamera m_selectedCamera;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_bWireframe;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AutomaticLOD> m_sceneLODObjects;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_nMaxLODLevels;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fCurrentDistanceSlider;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_nCamMode;

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xFE2170", Offset = "0xFE2170", VA = "0xFE2170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xFE2690", Offset = "0xFE2690", VA = "0xFE2690")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xFE2B68", Offset = "0xFE2B68", VA = "0xFE2B68")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xFE256C", Offset = "0xFE256C", VA = "0xFE256C")]
	private void SetActiveCamera(int index)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xFE27B4", Offset = "0xFE27B4", VA = "0xFE27B4")]
	private void UpdateCamera(float fPos)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xFE239C", Offset = "0xFE239C", VA = "0xFE239C")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xFE2934", Offset = "0xFE2934", VA = "0xFE2934")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xFE38E4", Offset = "0xFE38E4", VA = "0xFE38E4")]
	public LODSampleLODScene()
	{
	}
}
[Token(Token = "0x2000276")]
public class LODSceneSelection : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005E0")]
	public class SceneOption
	{
		[Token(Token = "0x4002D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_sceneName;

		[Token(Token = "0x4002D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_sceneDisplayName;

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xFE3D80", Offset = "0xFE3D80", VA = "0xFE3D80")]
		public SceneOption()
		{
		}
	}

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int BoxWidth;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int BoxHeight;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MarginH;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int MarginV;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneOption[] SceneOptions;

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xFE38F4", Offset = "0xFE38F4", VA = "0xFE38F4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xFE3D6C", Offset = "0xFE3D6C", VA = "0xFE3D6C")]
	public LODSceneSelection()
	{
	}
}
[Token(Token = "0x2000277")]
public class AutomaticLOD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005E1")]
	public enum EvalMode
	{
		[Token(Token = "0x4002D58")]
		CameraDistance,
		[Token(Token = "0x4002D59")]
		ScreenCoverage
	}

	[Serializable]
	[Token(Token = "0x20005E2")]
	public enum LevelsToGenerate
	{
		[Token(Token = "0x4002D5B")]
		_1 = 1,
		[Token(Token = "0x4002D5C")]
		_2,
		[Token(Token = "0x4002D5D")]
		_3,
		[Token(Token = "0x4002D5E")]
		_4,
		[Token(Token = "0x4002D5F")]
		_5,
		[Token(Token = "0x4002D60")]
		_6
	}

	[Serializable]
	[Token(Token = "0x20005E3")]
	public enum SwitchMode
	{
		[Token(Token = "0x4002D62")]
		SwitchMesh,
		[Token(Token = "0x4002D63")]
		SwitchGameObject,
		[Token(Token = "0x4002D64")]
		UnityLODGroup
	}

	[Serializable]
	[Token(Token = "0x20005E4")]
	public class LODLevelData
	{
		[Token(Token = "0x4002D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_fScreenCoverage;

		[Token(Token = "0x4002D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_fMaxCameraDistance;

		[Token(Token = "0x4002D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fMeshVerticesAmount;

		[Token(Token = "0x4002D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_nColorEditorBarIndex;

		[Token(Token = "0x4002D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh m_mesh;

		[Token(Token = "0x4002D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_bUsesOriginalMesh;

		[Token(Token = "0x4002D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_gameObject;

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0xF7A450", Offset = "0xF7A450", VA = "0xF7A450")]
		public LODLevelData GetCopy()
		{
			return null;
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xF7A4E8", Offset = "0xF7A4E8", VA = "0xF7A4E8")]
		public LODLevelData()
		{
		}
	}

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public EvalMode m_evalMode;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float m_fMaxCameraDistance;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int m_nColorEditorBarNewIndex;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public List<LODLevelData> m_listLODLevels;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AutomaticLOD m_LODObjectRoot;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<AutomaticLOD> m_listDependentChildren;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private LevelsToGenerate m_levelsToGenerate;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SwitchMode m_switchMode;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLODDataDirty;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[HideInInspector]
	private AutomaticLOD m_LODObjectRootPersist;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[HideInInspector]
	private LODGroup m_LODGroup;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool m_bUseAutomaticCameraLODSwitch;

	[Token(Token = "0x4001321")]
	private const int k_MaxLODChecksPerFrame = 4;

	[Token(Token = "0x4001322")]
	private const int k_MaxFrameCheckLoop = 100;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_currentCheckIndex;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int s_currentFrameCheckIndex;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int s_checkLoopLength;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int s_lastFrameComputedModulus;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int s_currentFrameInLoop;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Camera s_userDefinedCamera;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Camera m_renderCamera;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int m_nCurrentLOD;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<Camera, int> m_cachedFrameLODLevel;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 m_localCenter;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3[] _corners;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int m_frameToCheck;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool b_performCheck;

	[Token(Token = "0x17000092")]
	public static Camera UserDefinedLODCamera
	{
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x1188548", Offset = "0x1188548", VA = "0x1188548")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x11885B0", Offset = "0x11885B0", VA = "0x11885B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public SwitchMode LODSwitchMode
	{
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x118861C", Offset = "0x118861C", VA = "0x118861C")]
		get
		{
			return default(SwitchMode);
		}
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x11886E8", Offset = "0x11886E8", VA = "0x11886E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x1188E64", Offset = "0x1188E64", VA = "0x1188E64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x118972C", Offset = "0x118972C", VA = "0x118972C")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x1189754", Offset = "0x1189754", VA = "0x1189754")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x1189848", Offset = "0x1189848", VA = "0x1189848")]
	public static bool IsRootOrBelongsToLODTree(AutomaticLOD automaticLOD, AutomaticLOD root)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x11899A8", Offset = "0x11899A8", VA = "0x11899A8")]
	public int GetNumberOfLevelsToGenerate()
	{
		return default(int);
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x11899B0", Offset = "0x11899B0", VA = "0x11899B0")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x11899B8", Offset = "0x11899B8", VA = "0x11899B8")]
	public bool IsRootAutomaticLOD()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x1189A28", Offset = "0x1189A28", VA = "0x1189A28")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x1189A84", Offset = "0x1189A84", VA = "0x1189A84")]
	public bool HasLODDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x1189A8C", Offset = "0x1189A8C", VA = "0x1189A8C")]
	public bool SetLODDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x1189A9C", Offset = "0x1189A9C", VA = "0x1189A9C")]
	public int GetLODLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x1189AF0", Offset = "0x1189AF0", VA = "0x1189AF0")]
	public float ComputeScreenCoverage(Camera camera)
	{
		return default(float);
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x11889EC", Offset = "0x11889EC", VA = "0x11889EC")]
	public Vector3 ComputeWorldCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x118A3EC", Offset = "0x118A3EC", VA = "0x118A3EC")]
	public float ComputeViewSpaceBounds(Vector3 v3CameraPos, Vector3 v3CameraDir, Vector3 v3CameraUp, out Vector3 v3Min, out Vector3 v3Max, out Vector3 v3Center)
	{
		return default(float);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x118A9A4", Offset = "0x118A9A4", VA = "0x118A9A4")]
	public void SetAutomaticCameraLODSwitch(bool bEnabled)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x118AA30", Offset = "0x118AA30", VA = "0x118AA30")]
	private static void SetAutomaticCameraLODSwitchRecursive(AutomaticLOD root, GameObject gameObject, bool bEnabled)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x118ABB4", Offset = "0x118ABB4", VA = "0x118ABB4")]
	public void SetLODLevels(List<LODLevelData> listLODLevelData, EvalMode evalMode, float fMaxCameraDistance, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x118AD00", Offset = "0x118AD00", VA = "0x118AD00")]
	private static void SetLODLevelsRecursive(AutomaticLOD root, GameObject gameObject)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x118B498", Offset = "0x118B498", VA = "0x118B498")]
	public void AddLODLevel(int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x118B544", Offset = "0x118B544", VA = "0x118B544")]
	public static void AddLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x118C03C", Offset = "0x118C03C", VA = "0x118C03C")]
	public void RemoveLODLevel(int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x118C0E0", Offset = "0x118C0E0", VA = "0x118C0E0")]
	public static void RemoveLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x118C5F0", Offset = "0x118C5F0", VA = "0x118C5F0")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x118C5F8", Offset = "0x118C5F8", VA = "0x118C5F8")]
	public void ComputeLODData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x118C640", Offset = "0x118C640", VA = "0x118C640")]
	private void ComputeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x118CF9C", Offset = "0x118CF9C", VA = "0x118CF9C")]
	public bool HasLODData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x11893B8", Offset = "0x11893B8", VA = "0x11893B8")]
	public int GetLODLevelUsingCamera(Camera currentCamera)
	{
		return default(int);
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x118D030", Offset = "0x118D030", VA = "0x118D030")]
	public int GetCurrentLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x118963C", Offset = "0x118963C", VA = "0x118963C")]
	public void SwitchToLOD(int nLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x118D038", Offset = "0x118D038", VA = "0x118D038")]
	private static void SwitchToLODRecursive(AutomaticLOD root, GameObject gameObject, int nLODLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x118D694", Offset = "0x118D694", VA = "0x118D694")]
	public void ComputeAllLODMeshes(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x118E428", Offset = "0x118E428", VA = "0x118E428")]
	public void ComputeLODMesh(int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x118D804", Offset = "0x118D804", VA = "0x118D804")]
	private static void ComputeLODMeshRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x118E4D4", Offset = "0x118E4D4", VA = "0x118E4D4")]
	public void RestoreOriginalMesh(bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x118E5B8", Offset = "0x118E5B8", VA = "0x118E5B8")]
	private static void RestoreOriginalMeshRecursive(AutomaticLOD root, GameObject gameObject, bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x118E9C0", Offset = "0x118E9C0", VA = "0x118E9C0")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x118EA4C", Offset = "0x118EA4C", VA = "0x118EA4C")]
	private static bool HasOriginalMeshActiveRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x118ED10", Offset = "0x118ED10", VA = "0x118ED10")]
	public bool HasVertexData(int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x118EDA4", Offset = "0x118EDA4", VA = "0x118EDA4")]
	private static bool HasVertexDataRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x118F05C", Offset = "0x118F05C", VA = "0x118F05C")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x118F0F8", Offset = "0x118F0F8", VA = "0x118F0F8")]
	private static void GetOriginalVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x118F2CC", Offset = "0x118F2CC", VA = "0x118F2CC")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x118F368", Offset = "0x118F368", VA = "0x118F368")]
	private static void GetOriginalTriangleCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x118F55C", Offset = "0x118F55C", VA = "0x118F55C")]
	public int GetCurrentVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x118F5F8", Offset = "0x118F5F8", VA = "0x118F5F8")]
	private static void GetCurrentVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x118F8D8", Offset = "0x118F8D8", VA = "0x118F8D8")]
	public int GetLODVertexCount(int nLevel, bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x118F984", Offset = "0x118F984", VA = "0x118F984")]
	private static void GetLODVertexCountRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x118FC40", Offset = "0x118FC40", VA = "0x118FC40")]
	public int GetLODTriangleCount(int nLevel, bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x118FCEC", Offset = "0x118FCEC", VA = "0x118FCEC")]
	private static void GetLODTriangleCountRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x118FFC8", Offset = "0x118FFC8", VA = "0x118FFC8")]
	public void RemoveFromLODTree()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x118CF10", Offset = "0x118CF10", VA = "0x118CF10")]
	public void FreeLODData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x1190074", Offset = "0x1190074", VA = "0x1190074")]
	private static void FreeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x118B0B8", Offset = "0x118B0B8", VA = "0x118B0B8")]
	private static Mesh CreateNewEmptyMesh(AutomaticLOD automaticLOD)
	{
		return null;
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x119056C", Offset = "0x119056C", VA = "0x119056C")]
	private static GameObject CreateBasicObjectCopy(GameObject gameObject, Mesh mesh, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x118B1A4", Offset = "0x118B1A4", VA = "0x118B1A4")]
	private static void CheckForAdditionalLODSetup(AutomaticLOD root, AutomaticLOD automaticLOD, LODLevelData levelData, int level)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x118E0D8", Offset = "0x118E0D8", VA = "0x118E0D8")]
	public void SetupLODGroup()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x11909F8", Offset = "0x11909F8", VA = "0x11909F8")]
	private static void SetupLODGroupRecursive(AutomaticLOD root, GameObject gameObject, ref List<List<Renderer>> renderers)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x11909F0", Offset = "0x11909F0", VA = "0x11909F0")]
	private static Component CopyComponent(Component original, GameObject destination)
	{
		return null;
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x118A060", Offset = "0x118A060", VA = "0x118A060")]
	private void BuildCornerData(ref Vector3[] av3Corners, Bounds bounds)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1188DA8", Offset = "0x1188DA8", VA = "0x1188DA8")]
	private bool IsDependent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1190D64", Offset = "0x1190D64", VA = "0x1190D64")]
	public AutomaticLOD()
	{
	}
}
[Token(Token = "0x2000278")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005E5")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4002D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x4002D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x4002D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x4002D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4002D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x22EA1B4", Offset = "0x22EA1B4", VA = "0x22EA1B4")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x20005E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0C9F0", Offset = "0xD0C9F0")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x4002D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4002D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4002D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x4002D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4002D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4002D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x170002BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x22EA144", Offset = "0x22EA144", VA = "0x22EA144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x22EA1AC", Offset = "0x22EA1AC", VA = "0x22EA1AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x22E99C8", Offset = "0x22E99C8", VA = "0x22E99C8")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x22E9A7C", Offset = "0x22E9A7C", VA = "0x22E9A7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x22E9AF0", Offset = "0x22E9AF0", VA = "0x22E9AF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x22E9A98", Offset = "0x22E9A98", VA = "0x22E9A98")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x22EA14C", Offset = "0x22EA14C", VA = "0x22EA14C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x22E80EC", Offset = "0x22E80EC", VA = "0x22E80EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x22E841C", Offset = "0x22E841C", VA = "0x22E841C")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x22E84EC", Offset = "0x22E84EC", VA = "0x22E84EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x22E899C", Offset = "0x22E899C", VA = "0x22E899C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x22E823C", Offset = "0x22E823C", VA = "0x22E823C")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x22E9824", Offset = "0x22E9824", VA = "0x22E9824")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x22E8768", Offset = "0x22E8768", VA = "0x22E8768")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x22E97A4", Offset = "0x22E97A4", VA = "0x22E97A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22B38", Offset = "0xD22B38")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x22E99F4", Offset = "0x22E99F4", VA = "0x22E99F4")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x2000279")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	[HideInInspector]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseCurvature;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[SerializeField]
	[HideInInspector]
	private bool m_bDataDirty;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x17000094")]
	public bool RecurseIntoChildren
	{
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xFB59D4", Offset = "0xFB59D4", VA = "0xFB59D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000095")]
	public Simplifier MeshSimplifier
	{
		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xFB59DC", Offset = "0xFB59DC", VA = "0xFB59DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xFB59E4", Offset = "0xFB59E4", VA = "0xFB59E4")]
		set
		{
		}
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xFB59EC", Offset = "0xFB59EC", VA = "0xFB59EC")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xFB5AE0", Offset = "0xFB5AE0", VA = "0xFB5AE0")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xFB5C48", Offset = "0xFB5C48", VA = "0xFB5C48")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xFB5C50", Offset = "0xFB5C50", VA = "0xFB5C50")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xFB5CAC", Offset = "0xFB5CAC", VA = "0xFB5CAC")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xFB5CB4", Offset = "0xFB5CB4", VA = "0xFB5CB4")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xFB5CC4", Offset = "0xFB5CC4", VA = "0xFB5CC4")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xFB5CF4", Offset = "0xFB5CF4", VA = "0xFB5CF4")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xFB5E28", Offset = "0xFB5E28", VA = "0xFB5E28")]
	public void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xFB5FD4", Offset = "0xFB5FD4", VA = "0xFB5FD4")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xFB5FDC", Offset = "0xFB5FDC", VA = "0xFB5FDC")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xFB6020", Offset = "0xFB6020", VA = "0xFB6020")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xFB6904", Offset = "0xFB6904", VA = "0xFB6904")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xFB69D8", Offset = "0xFB69D8", VA = "0xFB69D8")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xFB6A74", Offset = "0xFB6A74", VA = "0xFB6A74")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xFB6AB8", Offset = "0xFB6AB8", VA = "0xFB6AB8")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xFB7028", Offset = "0xFB7028", VA = "0xFB7028")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xFB705C", Offset = "0xFB705C", VA = "0xFB705C")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xFB7284", Offset = "0xFB7284", VA = "0xFB7284")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xFB72C8", Offset = "0xFB72C8", VA = "0xFB72C8")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xFB7538", Offset = "0xFB7538", VA = "0xFB7538")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xFB756C", Offset = "0xFB756C", VA = "0xFB756C")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xFB77E8", Offset = "0xFB77E8", VA = "0xFB77E8")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xFB781C", Offset = "0xFB781C", VA = "0xFB781C")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xFB79B4", Offset = "0xFB79B4", VA = "0xFB79B4")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xFB7A00", Offset = "0xFB7A00", VA = "0xFB7A00")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xFB7B8C", Offset = "0xFB7B8C", VA = "0xFB7B8C")]
	public int GetOriginalTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xFB7BD8", Offset = "0xFB7BD8", VA = "0xFB7BD8")]
	private static void GetOriginalTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xFB7D84", Offset = "0xFB7D84", VA = "0xFB7D84")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xFB7DD0", Offset = "0xFB7DD0", VA = "0xFB7DD0")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xFB7F5C", Offset = "0xFB7F5C", VA = "0xFB7F5C")]
	public int GetSimplifiedTriangleCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xFB7FA8", Offset = "0xFB7FA8", VA = "0xFB7FA8")]
	private static void GetSimplifiedTriangleCountRecursive(MeshSimplify root, GameObject gameObject, ref int nTriangleCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xFB8154", Offset = "0xFB8154", VA = "0xFB8154")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xFB68D0", Offset = "0xFB68D0", VA = "0xFB68D0")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xFB821C", Offset = "0xFB821C", VA = "0xFB821C")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xFB6F3C", Offset = "0xFB6F3C", VA = "0xFB6F3C")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xFB8478", Offset = "0xFB8478", VA = "0xFB8478")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x200027A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0AEA0", Offset = "0xD0AEA0")]
public class RuntimeMeshSimplifier : MonoBehaviour
{
	[Token(Token = "0x20005E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA00", Offset = "0xD0CA00")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeMeshSimplifier <>4__this;

		[Token(Token = "0x4002D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4002D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4002D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private KeyValuePair<GameObject, Material[]> <pair>5__3;

		[Token(Token = "0x4002D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshSimplify <meshSimplify>5__4;

		[Token(Token = "0x4002D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshFilter <meshFilter>5__5;

		[Token(Token = "0x4002D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SkinnedMeshRenderer <skin>5__6;

		[Token(Token = "0x4002D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Mesh <newMesh>5__7;

		[Token(Token = "0x170002BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0xF0E6A4", Offset = "0xF0E6A4", VA = "0xF0E6A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0xF0E70C", Offset = "0xF0E70C", VA = "0xF0E70C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xF0DBC0", Offset = "0xF0DBC0", VA = "0xF0DBC0")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xF0DC4C", Offset = "0xF0DC4C", VA = "0xF0DC4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xF0DCD0", Offset = "0xF0DCD0", VA = "0xF0DCD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0xF0DC78", Offset = "0xF0DC78", VA = "0xF0DC78")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xF0E6AC", Offset = "0xF0E6AC", VA = "0xF0E6AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_bFinished;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh m_newMesh;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nLastProgress;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string m_strLastTitle;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string m_strLastMessage;

	[Token(Token = "0x17000096")]
	public string ProgressTitle
	{
		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xF0D734", Offset = "0xF0D734", VA = "0xF0D734")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000097")]
	public string ProgressMessage
	{
		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xF0D73C", Offset = "0xF0D73C", VA = "0xF0D73C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000098")]
	public int ProgressPercent
	{
		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xF0D744", Offset = "0xF0D744", VA = "0xF0D744")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000099")]
	public bool Finished
	{
		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xF0D74C", Offset = "0xF0D74C", VA = "0xF0D74C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xF0D754", Offset = "0xF0D754", VA = "0xF0D754")]
	public void Simplify(float percent)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xF0D880", Offset = "0xF0D880", VA = "0xF0D880")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xF0D928", Offset = "0xF0D928", VA = "0xF0D928")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xF0DAF0", Offset = "0xF0DAF0", VA = "0xF0DAF0")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xF0D800", Offset = "0xF0D800", VA = "0xF0D800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22B9C", Offset = "0xD22B9C")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xF0DBEC", Offset = "0xF0DBEC", VA = "0xF0DBEC")]
	public RuntimeMeshSimplifier()
	{
	}
}
[Token(Token = "0x200027B")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x20005E8")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x1329EEC", Offset = "0x1329EEC", VA = "0x1329EEC", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x132A054", Offset = "0x132A054", VA = "0x132A054", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x1328E2C", Offset = "0x1328E2C", VA = "0x1328E2C")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nInitValue;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nResult;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nWidth;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nHeight;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int nXStart;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int nYStart;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string stringToEdit;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string StatsCount;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string achivToEdit;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string leaderboardToEdit;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string leaderboardUserName;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string leaderboardScore;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_ID;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string APP_KEY;

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x1326104", Offset = "0x1326104", VA = "0x1326104")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x13261BC", Offset = "0x13261BC", VA = "0x13261BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x1326280", Offset = "0x1326280", VA = "0x1326280")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x1326284", Offset = "0x1326284", VA = "0x1326284")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1328E34", Offset = "0x1328E34", VA = "0x1328E34")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x1328F8C", Offset = "0x1328F8C", VA = "0x1328F8C")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x13290D8", Offset = "0x13290D8", VA = "0x13290D8")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x1329218", Offset = "0x1329218", VA = "0x1329218")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x1329304", Offset = "0x1329304", VA = "0x1329304")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x1329540", Offset = "0x1329540", VA = "0x1329540")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x132972C", Offset = "0x132972C", VA = "0x132972C")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x1329878", Offset = "0x1329878", VA = "0x1329878")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x13299A4", Offset = "0x13299A4", VA = "0x13299A4")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x1329A98", Offset = "0x1329A98", VA = "0x1329A98")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x1329B8C", Offset = "0x1329B8C", VA = "0x1329B8C")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x1329C80", Offset = "0x1329C80", VA = "0x1329C80")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x1329D74", Offset = "0x1329D74", VA = "0x1329D74")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x200027C")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x132A128", Offset = "0x132A128", VA = "0x132A128")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x132A1F0", Offset = "0x132A1F0", VA = "0x132A1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x132A1F4", Offset = "0x132A1F4", VA = "0x132A1F4")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x132A2F0", Offset = "0x132A2F0", VA = "0x132A2F0")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x200027D")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x132A360", Offset = "0x132A360", VA = "0x132A360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x132A424", Offset = "0x132A424", VA = "0x132A424")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x132A80C", Offset = "0x132A80C", VA = "0x132A80C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x132A810", Offset = "0x132A810", VA = "0x132A810")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x132A814", Offset = "0x132A814", VA = "0x132A814")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x132A818", Offset = "0x132A818", VA = "0x132A818")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x200027E")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x20005E9")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x2000836")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E9C8", Offset = "0xD0E9C8")]
		private sealed class <>c
		{
			[Token(Token = "0x40031B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40031B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6002C89")]
			[Address(RVA = "0x132B778", Offset = "0x132B778", VA = "0x132B778")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0x132B780", Offset = "0x132B780", VA = "0x132B780")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000837")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E9D8", Offset = "0xD0E9D8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40031B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x40031B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0x132B70C", Offset = "0x132B70C", VA = "0x132B70C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0x132B7EC", Offset = "0x132B7EC", VA = "0x132B7EC")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x132B514", Offset = "0x132B514", VA = "0x132B514", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x132B628", Offset = "0x132B628", VA = "0x132B628", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x132AF98", Offset = "0x132AF98", VA = "0x132AF98")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x20005EA")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x2000838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E9E8", Offset = "0xD0E9E8")]
		private sealed class <>c
		{
			[Token(Token = "0x40031B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40031B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0x132BBE8", Offset = "0x132BBE8", VA = "0x132BBE8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0x132BBF0", Offset = "0x132BBF0", VA = "0x132BBF0")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x2000839")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E9F8", Offset = "0xD0E9F8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40031B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x40031B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6002C90")]
			[Address(RVA = "0x132BB7C", Offset = "0x132BB7C", VA = "0x132BB7C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002C91")]
			[Address(RVA = "0x132BC5C", Offset = "0x132BC5C", VA = "0x132BC5C")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x132B984", Offset = "0x132B984", VA = "0x132B984", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x132BA98", Offset = "0x132BA98", VA = "0x132BA98", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x132AFA0", Offset = "0x132AFA0", VA = "0x132AFA0")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x20005EB")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x200083A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0EA08", Offset = "0xD0EA08")]
		private sealed class <>c
		{
			[Token(Token = "0x40031B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40031BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6002C93")]
			[Address(RVA = "0x132B308", Offset = "0x132B308", VA = "0x132B308")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C94")]
			[Address(RVA = "0x132B310", Offset = "0x132B310", VA = "0x132B310")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x200083B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0EA18", Offset = "0xD0EA18")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40031BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int errorCode;

			[Token(Token = "0x40031BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorMessage;

			[Token(Token = "0x6002C95")]
			[Address(RVA = "0x132B29C", Offset = "0x132B29C", VA = "0x132B29C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002C96")]
			[Address(RVA = "0x132B37C", Offset = "0x132B37C", VA = "0x132B37C")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x132B0A4", Offset = "0x132B0A4", VA = "0x132B0A4", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x132B1B8", Offset = "0x132B1B8", VA = "0x132B1B8", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x132AFA8", Offset = "0x132AFA8", VA = "0x132AFA8")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LaunchData;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string LaunchBranchName;

	[Token(Token = "0x400137E")]
	private const int SUCCESS = 0;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInitComplete;

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x132A898", Offset = "0x132A898", VA = "0x132A898")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x132A968", Offset = "0x132A968", VA = "0x132A968")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x132AA10", Offset = "0x132AA10", VA = "0x132AA10")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x132AAD4", Offset = "0x132AAD4", VA = "0x132AAD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x132AB64", Offset = "0x132AB64", VA = "0x132AB64")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x132AC3C", Offset = "0x132AC3C", VA = "0x132AC3C")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x132AD18", Offset = "0x132AD18", VA = "0x132AD18")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x132AD1C", Offset = "0x132AD1C", VA = "0x132AD1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x132AFB0", Offset = "0x132AFB0", VA = "0x132AFB0")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x200027F")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x20005EC")]
	public class Item
	{
		[Token(Token = "0x4002D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string ticket;

		[Token(Token = "0x4002D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] items;

		[Token(Token = "0x4002D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string subscription_ticket;

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x132CECC", Offset = "0x132CECC", VA = "0x132CECC")]
		public Item()
		{
		}
	}

	[Token(Token = "0x20005ED")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x4002D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item mItem;

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x132CF34", Offset = "0x132CF34", VA = "0x132CF34", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x132CFEC", Offset = "0x132CFEC", VA = "0x132CFEC", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x132D0A8", Offset = "0x132D0A8", VA = "0x132D0A8", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x132D198", Offset = "0x132D198", VA = "0x132D198", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x132D234", Offset = "0x132D234", VA = "0x132D234", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x132D8CC", Offset = "0x132D8CC", VA = "0x132D8CC", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x132D954", Offset = "0x132D954", VA = "0x132D954", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x132DA10", Offset = "0x132DA10", VA = "0x132DA10", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x132DACC", Offset = "0x132DACC", VA = "0x132DACC", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x132DBBC", Offset = "0x132DBBC", VA = "0x132DBBC", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x132DF94", Offset = "0x132DF94", VA = "0x132DF94", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x132E36C", Offset = "0x132E36C", VA = "0x132E36C", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x132E40C", Offset = "0x132E40C", VA = "0x132E40C", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x132BF44", Offset = "0x132BF44", VA = "0x132BF44")]
		public Result()
		{
		}
	}

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Result mListener;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool bInit_Done;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool bIsReady_Done;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool bShutdown_Done;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text winText;

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x132BDF4", Offset = "0x132BDF4", VA = "0x132BDF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x132BFA8", Offset = "0x132BFA8", VA = "0x132BFA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x132BFAC", Offset = "0x132BFAC", VA = "0x132BFAC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x132CC4C", Offset = "0x132CC4C", VA = "0x132CC4C")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x132CD34", Offset = "0x132CD34", VA = "0x132CD34")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x132CE24", Offset = "0x132CE24", VA = "0x132CE24")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x2000280")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x20005EE")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x132E7A4", Offset = "0x132E7A4", VA = "0x132E7A4", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x132E844", Offset = "0x132E844", VA = "0x132E844")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x20005EF")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x200083C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0EA28", Offset = "0xD0EA28")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40031BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x6002C97")]
			[Address(RVA = "0x132E91C", Offset = "0x132E91C", VA = "0x132E91C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002C98")]
			[Address(RVA = "0x132E924", Offset = "0x132E924", VA = "0x132E924")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x132E84C", Offset = "0x132E84C", VA = "0x132E84C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x132E724", Offset = "0x132E724", VA = "0x132E724")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x20005F0")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x200083D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0EA38", Offset = "0xD0EA38")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pchCurrencyName;

			[Token(Token = "0x1700039F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C9C")]
				[Address(RVA = "0x132EBC4", Offset = "0x132EBC4", VA = "0x132EBC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C9E")]
				[Address(RVA = "0x132EC2C", Offset = "0x132EC2C", VA = "0x132EC2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C99")]
			[Address(RVA = "0x132EAB4", Offset = "0x132EAB4", VA = "0x132EAB4")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0x132EAE8", Offset = "0x132EAE8", VA = "0x132EAE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0x132EAEC", Offset = "0x132EAEC", VA = "0x132EAEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0x132EBCC", Offset = "0x132EBCC", VA = "0x132EBCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x132E9C4", Offset = "0x132E9C4", VA = "0x132E9C4", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x132EA44", Offset = "0x132EA44", VA = "0x132EA44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2892C", Offset = "0xD2892C")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x132EAE0", Offset = "0x132EAE0", VA = "0x132EAE0")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text uiText;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string appId;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string apiKey;

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x132E5A8", Offset = "0x132E5A8", VA = "0x132E5A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x132E684", Offset = "0x132E684", VA = "0x132E684")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x132E72C", Offset = "0x132E72C", VA = "0x132E72C")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x2000281")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nWidth;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nHeight;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nXStart;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int nYStart;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_ID;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool bInit;

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x132EC34", Offset = "0x132EC34", VA = "0x132EC34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x132ECF8", Offset = "0x132ECF8", VA = "0x132ECF8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x132F484", Offset = "0x132F484", VA = "0x132F484")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x132F5CC", Offset = "0x132F5CC", VA = "0x132F5CC")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x132F5D0", Offset = "0x132F5D0", VA = "0x132F5D0")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x132F7D8", Offset = "0x132F7D8", VA = "0x132F7D8")]
	public ViveportDemo_Subscription()
	{
	}
}
[Token(Token = "0x2000282")]
public class HandAnimator : MonoBehaviour
{
	[Token(Token = "0x4001397")]
	private const string ANIM_PARAM_NAME_GRIP = "Grip";

	[Token(Token = "0x4001398")]
	private const string ANIM_PARAM_NAME_INDEXTOUCH = "IndexTouch";

	[Token(Token = "0x4001399")]
	private const string ANIM_PARAM_NAME_TRIGGER = "Trigger";

	[Token(Token = "0x400139A")]
	private const string ANIM_PARAM_NAME_THUMBTOUCH = "ThumbTouch";

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int m_animParamIndexGrip;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int m_animParamIndexIndexTouch;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_animParamIndexTrigger;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_animParamIndexThumbTouch;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRController controller;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator animator;

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x2300F84", Offset = "0x2300F84", VA = "0x2300F84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x230108C", Offset = "0x230108C", VA = "0x230108C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x2301090", Offset = "0x2301090", VA = "0x2301090")]
	private void UpdateAnimStates()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x2301324", Offset = "0x2301324", VA = "0x2301324")]
	public HandAnimator()
	{
	}
}
[Token(Token = "0x2000283")]
public class FingerTipControl : MonoBehaviour
{
	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x22FA5AC", Offset = "0x22FA5AC", VA = "0x22FA5AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x22FA5B0", Offset = "0x22FA5B0", VA = "0x22FA5B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x22FA5B4", Offset = "0x22FA5B4", VA = "0x22FA5B4")]
	public FingerTipControl()
	{
	}
}
[Token(Token = "0x2000284")]
public class GrabAndRotateObject : MonoBehaviour
{
	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject labelObject;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text label;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yRotation;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 pos;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float scale;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle toggle;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform rig;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform rightHandTransform;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftHandTransform;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator rightHandAnimator;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator leftHandAnimator;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve spinForceCurveStart;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve spinForceCurveRelease;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float spinForce;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1691C", Offset = "0xD1691C")]
	public float triggerThreshold;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public InputDevice leftHandController;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public InputDevice rightHandController;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 startPos;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 lastDragPoint;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool triggered;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool triggerStarted;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
	public bool gripped;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
	public bool gripStarted;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 gripPos;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Quaternion gripRot;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector3[] gripSmoothArray;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int gripSmoothIndex;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Vector3 startingPos;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool initialized;

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x22FD788", Offset = "0x22FD788", VA = "0x22FD788")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x22FD8D0", Offset = "0x22FD8D0", VA = "0x22FD8D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x22FE51C", Offset = "0x22FE51C", VA = "0x22FE51C")]
	private void OnDeviceConnected(InputDevice device)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x22FE520", Offset = "0x22FE520", VA = "0x22FE520")]
	private void OnDeviceDisconnected(InputDevice device)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x22FE524", Offset = "0x22FE524", VA = "0x22FE524")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x22FE5D8", Offset = "0x22FE5D8", VA = "0x22FE5D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x22FE68C", Offset = "0x22FE68C", VA = "0x22FE68C")]
	public GrabAndRotateObject()
	{
	}
}
[Token(Token = "0x2000285")]
public class LoadTest : MonoBehaviour
{
	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool test;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string scene;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timer;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool doLoad;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SceneNameHolder sceneHolder;

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x11AC94C", Offset = "0x11AC94C", VA = "0x11AC94C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x11AC9D8", Offset = "0x11AC9D8", VA = "0x11AC9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x11ACAC8", Offset = "0x11ACAC8", VA = "0x11ACAC8")]
	public void LoadScene()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x11ACADC", Offset = "0x11ACADC", VA = "0x11ACADC")]
	public LoadTest()
	{
	}
}
[Token(Token = "0x2000286")]
public class OVRManagerSpawner : MonoBehaviour
{
	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject OVRManagerPrefab;

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xFC2728", Offset = "0xFC2728", VA = "0xFC2728")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xFC28D8", Offset = "0xFC28D8", VA = "0xFC28D8")]
	public OVRManagerSpawner()
	{
	}
}
[Token(Token = "0x2000287")]
public class SceneNameHolder : MonoBehaviour
{
	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 xrCameraRotation;

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x22DD2FC", Offset = "0x22DD2FC", VA = "0x22DD2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x22DD378", Offset = "0x22DD378", VA = "0x22DD378")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x22DD37C", Offset = "0x22DD37C", VA = "0x22DD37C")]
	public SceneNameHolder()
	{
	}
}
[Token(Token = "0x2000288")]
[ExecuteInEditMode]
public class PanelSizer : MonoBehaviour
{
	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform topLeft;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform topRight;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform bottomLeft;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform bottomRight;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform rectTM;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Canvas canvas;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float width;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float height;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool stretchCanvas;

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x230C074", Offset = "0x230C074", VA = "0x230C074")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x230C270", Offset = "0x230C270", VA = "0x230C270")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x230C3DC", Offset = "0x230C3DC", VA = "0x230C3DC")]
	public PanelSizer()
	{
	}
}
[Token(Token = "0x2000289")]
public class New_VR_PAD : MonoBehaviour
{
	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform pad;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform pip;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16934", Offset = "0xD16934")]
	public Color topColor;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color bottomColor;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color textColor;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float rowHeight;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float textHeight;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1696C", Offset = "0xD1696C")]
	public Color selectedColor;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color selectedTextColor;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float selectedRowHeight;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float selectedTextHeight;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float changeDuration;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private VerticalLayoutGroup _VerticalLayoutGroup;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RectTransform[] _revealRects;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image[] _backgrounds;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color[] _backgroundColors;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshProUGUI[] _textMeshProTexts;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RectTransform[] _textRects;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float changeTime;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int currentRevealRowIndex;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int newRevealRowIndex;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool mouseDownInPad;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector2 tempSize;

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xFC0444", Offset = "0xFC0444", VA = "0xFC0444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xFC092C", Offset = "0xFC092C", VA = "0xFC092C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xFC14FC", Offset = "0xFC14FC", VA = "0xFC14FC")]
	public New_VR_PAD()
	{
	}
}
[Token(Token = "0x200028A")]
public class ToggleScaler : EventTrigger
{
	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Toggle toggle;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x2327AB0", Offset = "0x2327AB0", VA = "0x2327AB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x2327B78", Offset = "0x2327B78", VA = "0x2327B78", Slot = "34")]
	public override void OnBeginDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x2327BE4", Offset = "0x2327BE4", VA = "0x2327BE4", Slot = "37")]
	public override void OnCancel(BaseEventData data)
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x2327C50", Offset = "0x2327C50", VA = "0x2327C50", Slot = "29")]
	public override void OnDeselect(BaseEventData data)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x2327CBC", Offset = "0x2327CBC", VA = "0x2327CBC", Slot = "23")]
	public override void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x2327D28", Offset = "0x2327D28", VA = "0x2327D28", Slot = "24")]
	public override void OnDrop(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x2327D94", Offset = "0x2327D94", VA = "0x2327D94", Slot = "35")]
	public override void OnEndDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x2327E00", Offset = "0x2327E00", VA = "0x2327E00", Slot = "33")]
	public override void OnInitializePotentialDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x2327E6C", Offset = "0x2327E6C", VA = "0x2327E6C", Slot = "31")]
	public override void OnMove(AxisEventData data)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x2327ED8", Offset = "0x2327ED8", VA = "0x2327ED8", Slot = "27")]
	public override void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x2327F44", Offset = "0x2327F44", VA = "0x2327F44", Slot = "25")]
	public override void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x2327FB0", Offset = "0x2327FB0", VA = "0x2327FB0", Slot = "21")]
	public override void OnPointerEnter(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x2328044", Offset = "0x2328044", VA = "0x2328044", Slot = "22")]
	public override void OnPointerExit(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x23280D8", Offset = "0x23280D8", VA = "0x23280D8", Slot = "26")]
	public override void OnPointerUp(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x2328144", Offset = "0x2328144", VA = "0x2328144", Slot = "30")]
	public override void OnScroll(PointerEventData data)
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x23281B0", Offset = "0x23281B0", VA = "0x23281B0", Slot = "28")]
	public override void OnSelect(BaseEventData data)
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x232821C", Offset = "0x232821C", VA = "0x232821C", Slot = "36")]
	public override void OnSubmit(BaseEventData data)
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x2328288", Offset = "0x2328288", VA = "0x2328288", Slot = "32")]
	public override void OnUpdateSelected(BaseEventData data)
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x23282F4", Offset = "0x23282F4", VA = "0x23282F4")]
	public void ToggleState(bool val)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x23283A4", Offset = "0x23283A4", VA = "0x23283A4")]
	public ToggleScaler()
	{
	}
}
[Token(Token = "0x200028B")]
public class VRLookAtCamera : MonoBehaviour
{
	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera camera;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform refUpObj;

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xFD9E9C", Offset = "0xFD9E9C", VA = "0xFD9E9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xFD9F20", Offset = "0xFD9F20", VA = "0xFD9F20")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xFDA060", Offset = "0xFDA060", VA = "0xFDA060")]
	public VRLookAtCamera()
	{
	}
}
[Token(Token = "0x200028C")]
public class VR_LoadScreenAdjuster : MonoBehaviour
{
	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x12387C4", Offset = "0x12387C4", VA = "0x12387C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x1238904", Offset = "0x1238904", VA = "0x1238904")]
	public VR_LoadScreenAdjuster()
	{
	}
}
[Token(Token = "0x200028D")]
public class XRControllerComponentsDisabler : MonoBehaviour
{
	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startVisible;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int delayFrames;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Behaviour[] componentsToDisable;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] renderersToDisable;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] objectsToDisable;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int startFrame;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool wasValid;

	[Token(Token = "0x1700009A")]
	private bool isValid
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x133256C", Offset = "0x133256C", VA = "0x133256C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x13325EC", Offset = "0x13325EC", VA = "0x13325EC")]
	private void propagateState(bool inValid)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x13327E4", Offset = "0x13327E4", VA = "0x13327E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x13328A8", Offset = "0x13328A8", VA = "0x13328A8")]
	public XRControllerComponentsDisabler()
	{
	}
}
[Token(Token = "0x200028E")]
[SelectionBase]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0AF14", Offset = "0xD0AF14")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0AF14", Offset = "0xD0AF14")]
public class XR_BasicSelectorForYManYWoman : XRBaseInteractable
{
	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float clickDuration;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BasicSelector _basicSelector;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private XR_OrganManipulator _organManipulator;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float selectTime;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool selectEntered;

	[Token(Token = "0x1700009B")]
	private XR_OrganManipulator organManipulator
	{
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1333B68", Offset = "0x1333B68", VA = "0x1333B68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1333BFC", Offset = "0x1333BFC", VA = "0x1333BFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x1333C04", Offset = "0x1333C04", VA = "0x1333C04")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x1333C9C", Offset = "0x1333C9C", VA = "0x1333C9C", Slot = "10")]
	protected override void OnSelectEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x1333FEC", Offset = "0x1333FEC", VA = "0x1333FEC", Slot = "11")]
	protected override void OnSelectExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x1334110", Offset = "0x1334110", VA = "0x1334110", Slot = "12")]
	protected override void OnActivate(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x133419C", Offset = "0x133419C", VA = "0x133419C", Slot = "8")]
	protected override void OnHoverEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x1334228", Offset = "0x1334228", VA = "0x1334228", Slot = "9")]
	protected override void OnHoverExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x13342BC", Offset = "0x13342BC", VA = "0x13342BC")]
	public XR_BasicSelectorForYManYWoman()
	{
	}
}
[Token(Token = "0x200028F")]
public class XR_OrganManipulator : MonoBehaviour
{
	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD169A4", Offset = "0xD169A4")]
	public bool lockRotation;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lockMove;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool lockScale;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[HideInInspector]
	public bool forceInputIgnore;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD169EC", Offset = "0xD169EC")]
	public bool lockVerticalAxis;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool clampRotation;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 rotationMinMax;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16A24", Offset = "0xD16A24")]
	public bool clampXPan;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 panXMinMax;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool clampYPan;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 panYMinMax;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool clampZPan;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 panZMinMax;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16A5C", Offset = "0xD16A5C")]
	public bool clampScale;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2 ScaleMinMax;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LayerMask targetCollidersLayer;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Collider[] vrButtonColliders;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Collider[] grabObjectColliders;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool focusLocked;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject focusedGameObject;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform organRoot;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 rotationEuler;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float initialRotation;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Collider collider;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float rotOffset;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float hitOffset;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float[] lookSmoothArray;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int lookSmoothIndex;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float rotSpeedReduction;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float[] YSpeedArray;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int ySpeedIndex;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool waitingForDecelration;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float ySpeed;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float ySpeedDecelerationDuration;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float ySpeedDecelerationTime;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Vector2 thumbstick;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform rig;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int handIndex;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform[] handTransforms;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Animator[] handAnimators;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public InputDevice leftHandController;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public InputDevice rightHandController;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public InputDevice[] handControllers;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16A94", Offset = "0xD16A94")]
	public float triggerThreshold;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool[] triggered;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool triggerStarted;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool[] gripped;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool gripStarted;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public Vector3 gripPos;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Quaternion gripRot;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Vector3[] gripSmoothArray;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public int gripSmoothIndex;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Vector3 startingPos;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool initialized;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool[] scrolled;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Ray ray;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private RaycastHit hit;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private RaycastHit[] hits;

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x13342D0", Offset = "0x13342D0", VA = "0x13342D0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x13344A0", Offset = "0x13344A0", VA = "0x13344A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x133599C", Offset = "0x133599C", VA = "0x133599C")]
	public void RotateOrgan(Vector2 rotationAngles)
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x13359FC", Offset = "0x13359FC", VA = "0x13359FC")]
	public void MoveOrgan(Vector3 offset, bool respectLimits = true)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x13355B0", Offset = "0x13355B0", VA = "0x13355B0")]
	public void LimitRotation()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x1335918", Offset = "0x1335918", VA = "0x1335918")]
	public void LimitTranslation()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x133573C", Offset = "0x133573C", VA = "0x133573C")]
	public void LimitScale()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x1335850", Offset = "0x1335850", VA = "0x1335850")]
	private void GetObjectFocus()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x1335404", Offset = "0x1335404", VA = "0x1335404")]
	private GameObject RaycastAgainstUI(int controlIndex)
	{
		return null;
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x1333E70", Offset = "0x1333E70", VA = "0x1333E70")]
	public bool UIObjectFocusedBy(XRBaseInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x1335A68", Offset = "0x1335A68", VA = "0x1335A68")]
	private void OnDeviceConnected(InputDevice device)
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x1335A6C", Offset = "0x1335A6C", VA = "0x1335A6C")]
	private void OnDeviceDisconnected(InputDevice device)
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x1335A70", Offset = "0x1335A70", VA = "0x1335A70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x1335B24", Offset = "0x1335B24", VA = "0x1335B24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x1335BD8", Offset = "0x1335BD8", VA = "0x1335BD8")]
	public XR_OrganManipulator()
	{
	}
}
[Token(Token = "0x2000290")]
public class XR_PoseProvider : BasePoseProvider
{
	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 eulerInOpenVR;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDevice m_InputDevice;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_isInOpenVR;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool m_isVrApiSet;

	[Token(Token = "0x1700009C")]
	public InputDevice inputDevice
	{
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x21C04C0", Offset = "0x21C04C0", VA = "0x21C04C0")]
		get
		{
			return default(InputDevice);
		}
	}

	[Token(Token = "0x1700009D")]
	public bool isInOpenVR
	{
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x21C0544", Offset = "0x21C0544", VA = "0x21C0544")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x21C05C8", Offset = "0x21C05C8", VA = "0x21C05C8", Slot = "4")]
	public override PoseDataFlags GetPoseFromProvider(out Pose output)
	{
		return default(PoseDataFlags);
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x21C07AC", Offset = "0x21C07AC", VA = "0x21C07AC")]
	public XR_PoseProvider()
	{
	}
}
[Token(Token = "0x2000291")]
public class XR_TriggerInteractable : XRBaseInteractable
{
	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16AAC", Offset = "0xD16AAC")]
	public float triggerThreshold;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<InputDevice> trackTriggerDownDevices;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<InputDevice> trackTriggerUpDevices;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<XRBaseInteractor, InputDevice> devices;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IPointerClickHandler clickHandler;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private IPointerEnterHandler enterHandler;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IPointerExitHandler exitHandler;

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x21C0824", Offset = "0x21C0824", VA = "0x21C0824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x21C08AC", Offset = "0x21C08AC", VA = "0x21C08AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x21C0BA0", Offset = "0x21C0BA0", VA = "0x21C0BA0", Slot = "8")]
	protected override void OnHoverEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x21C0D7C", Offset = "0x21C0D7C", VA = "0x21C0D7C", Slot = "9")]
	protected override void OnHoverExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x21C0F78", Offset = "0x21C0F78", VA = "0x21C0F78", Slot = "12")]
	protected override void OnActivate(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x21C1004", Offset = "0x21C1004", VA = "0x21C1004", Slot = "10")]
	protected override void OnSelectEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x21C0AF8", Offset = "0x21C0AF8", VA = "0x21C0AF8")]
	private bool IsTriggerPressed(InputDevice inputDevice)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x21C1090", Offset = "0x21C1090", VA = "0x21C1090")]
	public XR_TriggerInteractable()
	{
	}
}
[Token(Token = "0x2000292")]
public class XR_UI_AlignAndMoveToCamera : MonoBehaviour
{
	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3[] smoothArray;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _smoothIndex;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform refUpObj;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x21C1154", Offset = "0x21C1154", VA = "0x21C1154")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x21C1344", Offset = "0x21C1344", VA = "0x21C1344")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x21C1854", Offset = "0x21C1854", VA = "0x21C1854")]
	public XR_UI_AlignAndMoveToCamera()
	{
	}
}
[Token(Token = "0x2000293")]
public class XR_UserGuidePanel : MonoBehaviour
{
	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16AC4", Offset = "0xD16AC4")]
	public float maxDistance;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minDistance;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve distanceCurve;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnly]
	public float curDistance;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16B0C", Offset = "0xD16B0C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16B0C", Offset = "0xD16B0C")]
	public float maxAngle;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16B64", Offset = "0xD16B64")]
	public float minAngle;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve angleCurve;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ReadOnly]
	public float curAngle;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[ReadOnly]
	public float resAlpha;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16BA0", Offset = "0xD16BA0")]
	public bool toCanvases;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool toMeshes;

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x21C18BC", Offset = "0x21C18BC", VA = "0x21C18BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x21C18C0", Offset = "0x21C18C0", VA = "0x21C18C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x21C1CD8", Offset = "0x21C1CD8", VA = "0x21C1CD8")]
	public XR_UserGuidePanel()
	{
	}
}
[Token(Token = "0x2000294")]
public class XR_UserGuidePanel_v2 : MonoBehaviour
{
	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16BD8", Offset = "0xD16BD8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16BD8", Offset = "0xD16BD8")]
	public float distanceFadeIn;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16C2C", Offset = "0xD16C2C")]
	public float distanceFadeOut;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public float currentDistance;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16C54", Offset = "0xD16C54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16C54", Offset = "0xD16C54")]
	public float angleFadeIn;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16CAC", Offset = "0xD16CAC")]
	public float angleFadeOut;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[ReadOnly]
	public float currentAngle;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16CD8", Offset = "0xD16CD8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16CD8", Offset = "0xD16CD8")]
	public float cameraFadeIn;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16D30", Offset = "0xD16D30")]
	public float cameraFadeOut;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ReadOnly]
	public float currentCamera;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16D5C", Offset = "0xD16D5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16D5C", Offset = "0xD16D5C")]
	public float delayFadeIn;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16DB0", Offset = "0xD16DB0")]
	public float timeFadeIn;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve curveFadeIn;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16DCC", Offset = "0xD16DCC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16DCC", Offset = "0xD16DCC")]
	public float delayFadeOut;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD16E20", Offset = "0xD16E20")]
	public float timeFadeOut;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve curveFadeOut;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD16E3C", Offset = "0xD16E3C")]
	[ReadOnly]
	public bool prevState;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[ReadOnly]
	public bool curState;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[ReadOnly]
	public float resAlpha;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD16E94", Offset = "0xD16E94")]
	public bool toCanvases;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool toMeshes;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float stFadeOut;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float stFadeIn;

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x21C1D5C", Offset = "0x21C1D5C", VA = "0x21C1D5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x21C1D84", Offset = "0x21C1D84", VA = "0x21C1D84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x21C1D70", Offset = "0x21C1D70", VA = "0x21C1D70")]
	private void ResetFade()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x21C1D98", Offset = "0x21C1D98", VA = "0x21C1D98")]
	private void PropagateAlpha(float inAlpha)
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x21C1F28", Offset = "0x21C1F28", VA = "0x21C1F28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x21C23BC", Offset = "0x21C23BC", VA = "0x21C23BC")]
	public XR_UserGuidePanel_v2()
	{
	}
}
[Token(Token = "0x2000295")]
public class XR_VRInputFocusHandler : MonoBehaviour
{
	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onFocusAquired;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onFocusLost;

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x21C2454", Offset = "0x21C2454", VA = "0x21C2454")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x21C2550", Offset = "0x21C2550", VA = "0x21C2550")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x21C264C", Offset = "0x21C264C", VA = "0x21C264C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x21C280C", Offset = "0x21C280C", VA = "0x21C280C")]
	private void OVRManagerOnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x21C27F8", Offset = "0x21C27F8", VA = "0x21C27F8")]
	private void OVRManagerOnInputFocusLost()
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x21C2820", Offset = "0x21C2820", VA = "0x21C2820")]
	public XR_VRInputFocusHandler()
	{
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x2000296")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x23162E4", Offset = "0x23162E4", VA = "0x23162E4")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x2316360", Offset = "0x2316360", VA = "0x2316360")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x2316834", Offset = "0x2316834", VA = "0x2316834")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x2316948", Offset = "0x2316948", VA = "0x2316948")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x2000297")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA10", Offset = "0xD0CA10")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4002D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IEnumerator action;

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0x132438C", Offset = "0x132438C", VA = "0x132438C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60023F5")]
			[Address(RVA = "0x13244E0", Offset = "0x13244E0", VA = "0x13244E0")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA20", Offset = "0xD0CA20")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x170002BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023F9")]
				[Address(RVA = "0x132456C", Offset = "0x132456C", VA = "0x132456C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023FB")]
				[Address(RVA = "0x13245D4", Offset = "0x13245D4", VA = "0x13245D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F6")]
			[Address(RVA = "0x132442C", Offset = "0x132442C", VA = "0x132442C")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60023F7")]
			[Address(RVA = "0x1324504", Offset = "0x1324504", VA = "0x1324504", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0x1324508", Offset = "0x1324508", VA = "0x1324508", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023FA")]
			[Address(RVA = "0x1324574", Offset = "0x1324574", VA = "0x1324574", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA30", Offset = "0xD0CA30")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4002D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x170002C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023FF")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002401")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023FC")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60023FD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023FE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002400")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA40", Offset = "0xD0CA40")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4002D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x170002C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002405")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002407")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002402")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002403")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002404")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002406")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA50", Offset = "0xD0CA50")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4002D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4002D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x170002C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600240B")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600240D")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002408")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002409")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600240A")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600240C")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA60", Offset = "0xD0CA60")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4002D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4002DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4002DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x170002C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002411")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002413")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600240E")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600240F")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002410")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002412")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x1323E30", Offset = "0x1323E30", VA = "0x1323E30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x1323F44", Offset = "0x1323F44", VA = "0x1323F44")]
		public void Update()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x13240AC", Offset = "0x13240AC", VA = "0x13240AC")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x13241AC", Offset = "0x13241AC", VA = "0x13241AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x1324214", Offset = "0x1324214", VA = "0x1324214")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x1324394", Offset = "0x1324394", VA = "0x1324394")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6001002")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6001003")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6001004")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6001005")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x13243BC", Offset = "0x13243BC", VA = "0x13243BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22C00", Offset = "0xD22C00")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6001007")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22C64", Offset = "0xD22C64")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6001008")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22CC8", Offset = "0xD22CC8")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6001009")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22D2C", Offset = "0xD22D2C")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x600100A")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD22D90", Offset = "0xD22D90")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x1324458", Offset = "0x1324458", VA = "0x1324458")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public enum Locale
	{
		[Token(Token = "0x4001467")]
		US,
		[Token(Token = "0x4001468")]
		DE,
		[Token(Token = "0x4001469")]
		JP,
		[Token(Token = "0x400146A")]
		KR,
		[Token(Token = "0x400146B")]
		RU,
		[Token(Token = "0x400146C")]
		CN,
		[Token(Token = "0x400146D")]
		TW,
		[Token(Token = "0x400146E")]
		FR
	}
	[Token(Token = "0x2000299")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x200029A")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x200029B")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x200029C")]
	public class Leaderboard
	{
		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16ECC", Offset = "0xD16ECC")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16EDC", Offset = "0xD16EDC")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16EEC", Offset = "0xD16EEC")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x1700009E")]
		public int Rank
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x1323E00", Offset = "0x1323E00", VA = "0x1323E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22DF4", Offset = "0xD22DF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x1323E08", Offset = "0x1323E08", VA = "0x1323E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22E04", Offset = "0xD22E04")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public int Score
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x1323E10", Offset = "0x1323E10", VA = "0x1323E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22E14", Offset = "0xD22E14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x1323E18", Offset = "0x1323E18", VA = "0x1323E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22E24", Offset = "0xD22E24")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public string UserName
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0x1323E20", Offset = "0x1323E20", VA = "0x1323E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22E34", Offset = "0xD22E34")]
			get
			{
				return null;
			}
			[Token(Token = "0x600101E")]
			[Address(RVA = "0x1323E28", Offset = "0x1323E28", VA = "0x1323E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22E44", Offset = "0xD22E44")]
			set
			{
			}
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1323AFC", Offset = "0x1323AFC", VA = "0x1323AFC")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x20005F7")]
		public enum Platform
		{
			[Token(Token = "0x4002DA4")]
			Windows,
			[Token(Token = "0x4002DA5")]
			Android
		}

		[Token(Token = "0x20005F8")]
		public enum TransactionType
		{
			[Token(Token = "0x4002DA7")]
			Unknown,
			[Token(Token = "0x4002DA8")]
			Paid,
			[Token(Token = "0x4002DA9")]
			Redeem,
			[Token(Token = "0x4002DAA")]
			FreeTrial
		}

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16EFC", Offset = "0xD16EFC")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16F0C", Offset = "0xD16F0C")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x170000A1")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x6001020")]
			[Address(RVA = "0x1325284", Offset = "0x1325284", VA = "0x1325284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22E54", Offset = "0xD22E54")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001021")]
			[Address(RVA = "0x132528C", Offset = "0x132528C", VA = "0x132528C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22E64", Offset = "0xD22E64")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public TransactionType Type
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0x1325294", Offset = "0x1325294", VA = "0x1325294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22E74", Offset = "0xD22E74")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x6001023")]
			[Address(RVA = "0x132529C", Offset = "0x132529C", VA = "0x132529C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD22E84", Offset = "0xD22E84")]
			set
			{
			}
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1325204", Offset = "0x1325204", VA = "0x1325204")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class Api
	{
		[Token(Token = "0x20005F9")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x6002414")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6002415")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6002416")]
			[Address(RVA = "0x1020420", Offset = "0x1020420", VA = "0x1020420")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly string VERSION;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string _appId;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string _appKey;

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x101FE68", Offset = "0x101FE68", VA = "0x101FE68")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x101FD70", Offset = "0x101FD70", VA = "0x101FD70")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD22E94", Offset = "0xD22E94")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x101FF5C", Offset = "0x101FF5C", VA = "0x101FF5C")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x101FDEC", Offset = "0x101FDEC", VA = "0x101FDEC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD22EF8", Offset = "0xD22EF8")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x10200CC", Offset = "0x10200CC", VA = "0x10200CC")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x102021C", Offset = "0x102021C", VA = "0x102021C")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x10202B4", Offset = "0x10202B4", VA = "0x10202B4")]
		public Api()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class User
	{
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x132560C", Offset = "0x132560C", VA = "0x132560C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD22F5C", Offset = "0xD22F5C")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x132566C", Offset = "0x132566C", VA = "0x132566C")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x13257B4", Offset = "0x13257B4", VA = "0x13257B4")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x13257D8", Offset = "0x13257D8", VA = "0x13257D8")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x13257FC", Offset = "0x13257FC", VA = "0x13257FC")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x1325820", Offset = "0x1325820", VA = "0x1325820")]
		public User()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class UserStats
	{
		[Token(Token = "0x20005FA")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4002DAC")]
			GlobalData,
			[Token(Token = "0x4002DAD")]
			GlobalDataAroundUser,
			[Token(Token = "0x4002DAE")]
			LocalData,
			[Token(Token = "0x4002DAF")]
			LocalDataAroundUser
		}

		[Token(Token = "0x20005FB")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4002DB1")]
			AllTime,
			[Token(Token = "0x4002DB2")]
			Daily,
			[Token(Token = "0x4002DB3")]
			Weekly,
			[Token(Token = "0x4002DB4")]
			Monthly
		}

		[Token(Token = "0x20005FC")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4002DB6")]
			None,
			[Token(Token = "0x4002DB7")]
			Ascending,
			[Token(Token = "0x4002DB8")]
			Descending
		}

		[Token(Token = "0x20005FD")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4002DBA")]
			None,
			[Token(Token = "0x4002DBB")]
			Numeric,
			[Token(Token = "0x4002DBC")]
			TimeSeconds,
			[Token(Token = "0x4002DBD")]
			TimeMilliSeconds
		}

		[Token(Token = "0x20005FE")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4002DBF")]
			None,
			[Token(Token = "0x4002DC0")]
			KeepBest,
			[Token(Token = "0x4002DC1")]
			ForceUpdate
		}

		[Token(Token = "0x20005FF")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4002DC3")]
			Name,
			[Token(Token = "0x4002DC4")]
			Desc,
			[Token(Token = "0x4002DC5")]
			Hidden
		}

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x1325828", Offset = "0x1325828", VA = "0x1325828")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD22FC0", Offset = "0xD22FC0")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x1325A08", Offset = "0x1325A08", VA = "0x1325A08")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x1325888", Offset = "0x1325888", VA = "0x1325888")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23024", Offset = "0xD23024")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x1325B50", Offset = "0x1325B50", VA = "0x1325B50")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x1325C98", Offset = "0x1325C98", VA = "0x1325C98")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x1325C9C", Offset = "0x1325C9C", VA = "0x1325C9C")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x1325CA0", Offset = "0x1325CA0", VA = "0x1325CA0")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x1325CA4", Offset = "0x1325CA4", VA = "0x1325CA4")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x13258E8", Offset = "0x13258E8", VA = "0x13258E8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23088", Offset = "0xD23088")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x1325CA8", Offset = "0x1325CA8", VA = "0x1325CA8")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1325DF0", Offset = "0x1325DF0", VA = "0x1325DF0")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1325DF4", Offset = "0x1325DF4", VA = "0x1325DF4")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1325DF8", Offset = "0x1325DF8", VA = "0x1325DF8")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1325DFC", Offset = "0x1325DFC", VA = "0x1325DFC")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1325E00", Offset = "0x1325E00", VA = "0x1325E00")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x1325E04", Offset = "0x1325E04", VA = "0x1325E04")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1325E08", Offset = "0x1325E08", VA = "0x1325E08")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1325948", Offset = "0x1325948", VA = "0x1325948")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD230EC", Offset = "0xD230EC")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1325E0C", Offset = "0x1325E0C", VA = "0x1325E0C")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x13259A8", Offset = "0x13259A8", VA = "0x13259A8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23150", Offset = "0xD23150")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1325F8C", Offset = "0x1325F8C", VA = "0x1325F8C")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x13260EC", Offset = "0x13260EC", VA = "0x13260EC")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x13260F0", Offset = "0x13260F0", VA = "0x13260F0")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x13260F4", Offset = "0x13260F4", VA = "0x13260F4")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x13260F8", Offset = "0x13260F8", VA = "0x13260F8")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x13260FC", Offset = "0x13260FC", VA = "0x13260FC")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1020430", Offset = "0x1020430", VA = "0x1020430")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class IAPurchase
	{
		[Token(Token = "0x2000600")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4002DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6002417")]
			[Address(RVA = "0x1318640", Offset = "0x1318640", VA = "0x1318640")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6002418")]
			[Address(RVA = "0x13186AC", Offset = "0x13186AC", VA = "0x13186AC")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6002419")]
			[Address(RVA = "0x1318728", Offset = "0x1318728", VA = "0x1318728", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x600241A")]
			[Address(RVA = "0x1318C0C", Offset = "0x1318C0C", VA = "0x1318C0C")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x600241B")]
			[Address(RVA = "0x1318C78", Offset = "0x1318C78", VA = "0x1318C78", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x600241C")]
			[Address(RVA = "0x131915C", Offset = "0x131915C", VA = "0x131915C")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x600241D")]
			[Address(RVA = "0x13191C8", Offset = "0x13191C8", VA = "0x13191C8", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x600241E")]
			[Address(RVA = "0x13197C4", Offset = "0x13197C4", VA = "0x13197C4")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x600241F")]
			[Address(RVA = "0x1319830", Offset = "0x1319830", VA = "0x1319830", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002420")]
			[Address(RVA = "0x131A148", Offset = "0x131A148", VA = "0x131A148")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x6002421")]
			[Address(RVA = "0x131A1B4", Offset = "0x131A1B4", VA = "0x131A1B4", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002422")]
			[Address(RVA = "0x131B02C", Offset = "0x131B02C", VA = "0x131B02C")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x6002423")]
			[Address(RVA = "0x131B098", Offset = "0x131B098", VA = "0x131B098", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002424")]
			[Address(RVA = "0x131B698", Offset = "0x131B698", VA = "0x131B698")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6002425")]
			[Address(RVA = "0x131B704", Offset = "0x131B704", VA = "0x131B704", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002426")]
			[Address(RVA = "0x131BBD0", Offset = "0x131BBD0", VA = "0x131BBD0")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6002427")]
			[Address(RVA = "0x131BC3C", Offset = "0x131BC3C", VA = "0x131BC3C", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002428")]
			[Address(RVA = "0x131C108", Offset = "0x131C108", VA = "0x131C108")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6002429")]
			[Address(RVA = "0x131C174", Offset = "0x131C174", VA = "0x131C174", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x600242A")]
			[Address(RVA = "0x131C818", Offset = "0x131C818", VA = "0x131C818")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600242B")]
			[Address(RVA = "0x131C884", Offset = "0x131C884", VA = "0x131C884", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x600242C")]
			[Address(RVA = "0x131CD68", Offset = "0x131CD68", VA = "0x131CD68")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x600242D")]
			[Address(RVA = "0x131CDD4", Offset = "0x131CDD4", VA = "0x131CDD4", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x600242E")]
			[Address(RVA = "0x131D2B8", Offset = "0x131D2B8", VA = "0x131D2B8")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600242F")]
			[Address(RVA = "0x131D324", Offset = "0x131D324", VA = "0x131D324", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x2000601")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x6002430")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x6002431")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x6002432")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x6002433")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x6002434")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6002435")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6002436")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6002437")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6002438")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6002439")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x600243A")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x600243B")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x600243C")]
			[Address(RVA = "0x1318638", Offset = "0x1318638", VA = "0x1318638")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x2000602")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x600243D")]
			[Address(RVA = "0x131D738", Offset = "0x131D738", VA = "0x131D738", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x600243E")]
			[Address(RVA = "0x131D73C", Offset = "0x131D73C", VA = "0x131D73C", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600243F")]
			[Address(RVA = "0x131D740", Offset = "0x131D740", VA = "0x131D740", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x6002440")]
			[Address(RVA = "0x131D744", Offset = "0x131D744", VA = "0x131D744", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x6002441")]
			[Address(RVA = "0x131D748", Offset = "0x131D748", VA = "0x131D748", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x6002442")]
			[Address(RVA = "0x131D74C", Offset = "0x131D74C", VA = "0x131D74C", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x6002443")]
			[Address(RVA = "0x131D750", Offset = "0x131D750", VA = "0x131D750", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x6002444")]
			[Address(RVA = "0x131D754", Offset = "0x131D754", VA = "0x131D754", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6002445")]
			[Address(RVA = "0x131D758", Offset = "0x131D758", VA = "0x131D758", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0x131D75C", Offset = "0x131D75C", VA = "0x131D75C", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x6002447")]
			[Address(RVA = "0x131D760", Offset = "0x131D760", VA = "0x131D760", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6002448")]
			[Address(RVA = "0x131D764", Offset = "0x131D764", VA = "0x131D764", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x6002449")]
			[Address(RVA = "0x131D768", Offset = "0x131D768", VA = "0x131D768", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x600244A")]
			[Address(RVA = "0x131D76C", Offset = "0x131D76C", VA = "0x131D76C")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x2000603")]
		public class QueryResponse
		{
			[Token(Token = "0x4002DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EE7C", Offset = "0xD1EE7C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4002DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EE8C", Offset = "0xD1EE8C")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4002DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EE9C", Offset = "0xD1EE9C")]
			private string <status>k__BackingField;

			[Token(Token = "0x4002DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EEAC", Offset = "0xD1EEAC")]
			private string <price>k__BackingField;

			[Token(Token = "0x4002DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EEBC", Offset = "0xD1EEBC")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4002DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EECC", Offset = "0xD1EECC")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170002C8")]
			public string order_id
			{
				[Token(Token = "0x600244B")]
				[Address(RVA = "0x131D7A4", Offset = "0x131D7A4", VA = "0x131D7A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28B20", Offset = "0xD28B20")]
				get
				{
					return null;
				}
				[Token(Token = "0x600244C")]
				[Address(RVA = "0x131D7AC", Offset = "0x131D7AC", VA = "0x131D7AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28B30", Offset = "0xD28B30")]
				set
				{
				}
			}

			[Token(Token = "0x170002C9")]
			public string purchase_id
			{
				[Token(Token = "0x600244D")]
				[Address(RVA = "0x131D7B4", Offset = "0x131D7B4", VA = "0x131D7B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28B40", Offset = "0xD28B40")]
				get
				{
					return null;
				}
				[Token(Token = "0x600244E")]
				[Address(RVA = "0x131D7BC", Offset = "0x131D7BC", VA = "0x131D7BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28B50", Offset = "0xD28B50")]
				set
				{
				}
			}

			[Token(Token = "0x170002CA")]
			public string status
			{
				[Token(Token = "0x600244F")]
				[Address(RVA = "0x131D7C4", Offset = "0x131D7C4", VA = "0x131D7C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28B60", Offset = "0xD28B60")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002450")]
				[Address(RVA = "0x131D7CC", Offset = "0x131D7CC", VA = "0x131D7CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28B70", Offset = "0xD28B70")]
				set
				{
				}
			}

			[Token(Token = "0x170002CB")]
			public string price
			{
				[Token(Token = "0x6002451")]
				[Address(RVA = "0x131D7D4", Offset = "0x131D7D4", VA = "0x131D7D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28B80", Offset = "0xD28B80")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002452")]
				[Address(RVA = "0x131D7DC", Offset = "0x131D7DC", VA = "0x131D7DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28B90", Offset = "0xD28B90")]
				set
				{
				}
			}

			[Token(Token = "0x170002CC")]
			public string currency
			{
				[Token(Token = "0x6002453")]
				[Address(RVA = "0x131D7E4", Offset = "0x131D7E4", VA = "0x131D7E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28BA0", Offset = "0xD28BA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002454")]
				[Address(RVA = "0x131D7EC", Offset = "0x131D7EC", VA = "0x131D7EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28BB0", Offset = "0xD28BB0")]
				set
				{
				}
			}

			[Token(Token = "0x170002CD")]
			public long paid_timestamp
			{
				[Token(Token = "0x6002455")]
				[Address(RVA = "0x131D7F4", Offset = "0x131D7F4", VA = "0x131D7F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28BC0", Offset = "0xD28BC0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002456")]
				[Address(RVA = "0x131D7FC", Offset = "0x131D7FC", VA = "0x131D7FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28BD0", Offset = "0xD28BD0")]
				set
				{
				}
			}

			[Token(Token = "0x6002457")]
			[Address(RVA = "0x131A140", Offset = "0x131A140", VA = "0x131A140")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x2000604")]
		public class QueryResponse2
		{
			[Token(Token = "0x4002DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EEDC", Offset = "0xD1EEDC")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4002DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EEEC", Offset = "0xD1EEEC")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4002DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EEFC", Offset = "0xD1EEFC")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4002DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF0C", Offset = "0xD1EF0C")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4002DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF1C", Offset = "0xD1EF1C")]
			private string <price>k__BackingField;

			[Token(Token = "0x4002DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF2C", Offset = "0xD1EF2C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4002DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF3C", Offset = "0xD1EF3C")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x170002CE")]
			public string order_id
			{
				[Token(Token = "0x6002458")]
				[Address(RVA = "0x131D804", Offset = "0x131D804", VA = "0x131D804")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28BE0", Offset = "0xD28BE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002459")]
				[Address(RVA = "0x131D80C", Offset = "0x131D80C", VA = "0x131D80C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28BF0", Offset = "0xD28BF0")]
				set
				{
				}
			}

			[Token(Token = "0x170002CF")]
			public string app_id
			{
				[Token(Token = "0x600245A")]
				[Address(RVA = "0x131D814", Offset = "0x131D814", VA = "0x131D814")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C00", Offset = "0xD28C00")]
				get
				{
					return null;
				}
				[Token(Token = "0x600245B")]
				[Address(RVA = "0x131D81C", Offset = "0x131D81C", VA = "0x131D81C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C10", Offset = "0xD28C10")]
				set
				{
				}
			}

			[Token(Token = "0x170002D0")]
			public string purchase_id
			{
				[Token(Token = "0x600245C")]
				[Address(RVA = "0x131D824", Offset = "0x131D824", VA = "0x131D824")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C20", Offset = "0xD28C20")]
				get
				{
					return null;
				}
				[Token(Token = "0x600245D")]
				[Address(RVA = "0x131D82C", Offset = "0x131D82C", VA = "0x131D82C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C30", Offset = "0xD28C30")]
				set
				{
				}
			}

			[Token(Token = "0x170002D1")]
			public string user_data
			{
				[Token(Token = "0x600245E")]
				[Address(RVA = "0x131D834", Offset = "0x131D834", VA = "0x131D834")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C40", Offset = "0xD28C40")]
				get
				{
					return null;
				}
				[Token(Token = "0x600245F")]
				[Address(RVA = "0x131D83C", Offset = "0x131D83C", VA = "0x131D83C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C50", Offset = "0xD28C50")]
				set
				{
				}
			}

			[Token(Token = "0x170002D2")]
			public string price
			{
				[Token(Token = "0x6002460")]
				[Address(RVA = "0x131D844", Offset = "0x131D844", VA = "0x131D844")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C60", Offset = "0xD28C60")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002461")]
				[Address(RVA = "0x131D84C", Offset = "0x131D84C", VA = "0x131D84C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C70", Offset = "0xD28C70")]
				set
				{
				}
			}

			[Token(Token = "0x170002D3")]
			public string currency
			{
				[Token(Token = "0x6002462")]
				[Address(RVA = "0x131D854", Offset = "0x131D854", VA = "0x131D854")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C80", Offset = "0xD28C80")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002463")]
				[Address(RVA = "0x131D85C", Offset = "0x131D85C", VA = "0x131D85C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28C90", Offset = "0xD28C90")]
				set
				{
				}
			}

			[Token(Token = "0x170002D4")]
			public long paid_timestamp
			{
				[Token(Token = "0x6002464")]
				[Address(RVA = "0x131D864", Offset = "0x131D864", VA = "0x131D864")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28CA0", Offset = "0xD28CA0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002465")]
				[Address(RVA = "0x131D86C", Offset = "0x131D86C", VA = "0x131D86C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28CB0", Offset = "0xD28CB0")]
				set
				{
				}
			}

			[Token(Token = "0x6002466")]
			[Address(RVA = "0x131B01C", Offset = "0x131B01C", VA = "0x131B01C")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x2000605")]
		public class QueryListResponse
		{
			[Token(Token = "0x4002DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF4C", Offset = "0xD1EF4C")]
			private int <total>k__BackingField;

			[Token(Token = "0x4002DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF5C", Offset = "0xD1EF5C")]
			private int <from>k__BackingField;

			[Token(Token = "0x4002DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF6C", Offset = "0xD1EF6C")]
			private int <to>k__BackingField;

			[Token(Token = "0x4002DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x170002D5")]
			public int total
			{
				[Token(Token = "0x6002467")]
				[Address(RVA = "0x131D774", Offset = "0x131D774", VA = "0x131D774")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28CC0", Offset = "0xD28CC0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002468")]
				[Address(RVA = "0x131D77C", Offset = "0x131D77C", VA = "0x131D77C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28CD0", Offset = "0xD28CD0")]
				set
				{
				}
			}

			[Token(Token = "0x170002D6")]
			public int from
			{
				[Token(Token = "0x6002469")]
				[Address(RVA = "0x131D784", Offset = "0x131D784", VA = "0x131D784")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28CE0", Offset = "0xD28CE0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600246A")]
				[Address(RVA = "0x131D78C", Offset = "0x131D78C", VA = "0x131D78C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28CF0", Offset = "0xD28CF0")]
				set
				{
				}
			}

			[Token(Token = "0x170002D7")]
			public int to
			{
				[Token(Token = "0x600246B")]
				[Address(RVA = "0x131D794", Offset = "0x131D794", VA = "0x131D794")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D00", Offset = "0xD28D00")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600246C")]
				[Address(RVA = "0x131D79C", Offset = "0x131D79C", VA = "0x131D79C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D10", Offset = "0xD28D10")]
				set
				{
				}
			}

			[Token(Token = "0x600246D")]
			[Address(RVA = "0x131B024", Offset = "0x131B024", VA = "0x131B024")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x2000606")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4002DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF7C", Offset = "0xD1EF7C")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4002DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF8C", Offset = "0xD1EF8C")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4002DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EF9C", Offset = "0xD1EF9C")]
			private string <status>k__BackingField;

			[Token(Token = "0x170002D8")]
			public long create_time
			{
				[Token(Token = "0x600246E")]
				[Address(RVA = "0x131D8E4", Offset = "0x131D8E4", VA = "0x131D8E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D20", Offset = "0xD28D20")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600246F")]
				[Address(RVA = "0x131D8EC", Offset = "0x131D8EC", VA = "0x131D8EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D30", Offset = "0xD28D30")]
				set
				{
				}
			}

			[Token(Token = "0x170002D9")]
			public string payment_method
			{
				[Token(Token = "0x6002470")]
				[Address(RVA = "0x131D8F4", Offset = "0x131D8F4", VA = "0x131D8F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D40", Offset = "0xD28D40")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002471")]
				[Address(RVA = "0x131D8FC", Offset = "0x131D8FC", VA = "0x131D8FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D50", Offset = "0xD28D50")]
				set
				{
				}
			}

			[Token(Token = "0x170002DA")]
			public string status
			{
				[Token(Token = "0x6002472")]
				[Address(RVA = "0x131D904", Offset = "0x131D904", VA = "0x131D904")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D60", Offset = "0xD28D60")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002473")]
				[Address(RVA = "0x131D90C", Offset = "0x131D90C", VA = "0x131D90C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D70", Offset = "0xD28D70")]
				set
				{
				}
			}

			[Token(Token = "0x6002474")]
			[Address(RVA = "0x131D914", Offset = "0x131D914", VA = "0x131D914")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x2000607")]
		public class StatusDetail
		{
			[Token(Token = "0x4002DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EFAC", Offset = "0xD1EFAC")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4002DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EFBC", Offset = "0xD1EFBC")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4002DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EFCC", Offset = "0xD1EFCC")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x170002DB")]
			public long date_next_charge
			{
				[Token(Token = "0x6002475")]
				[Address(RVA = "0x131D8AC", Offset = "0x131D8AC", VA = "0x131D8AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D80", Offset = "0xD28D80")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6002476")]
				[Address(RVA = "0x131D8B4", Offset = "0x131D8B4", VA = "0x131D8B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28D90", Offset = "0xD28D90")]
				set
				{
				}
			}

			[Token(Token = "0x170002DC")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x6002477")]
				[Address(RVA = "0x131D8BC", Offset = "0x131D8BC", VA = "0x131D8BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28DA0", Offset = "0xD28DA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002478")]
				[Address(RVA = "0x131D8C4", Offset = "0x131D8C4", VA = "0x131D8C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28DB0", Offset = "0xD28DB0")]
				set
				{
				}
			}

			[Token(Token = "0x170002DD")]
			public string cancel_reason
			{
				[Token(Token = "0x6002479")]
				[Address(RVA = "0x131D8CC", Offset = "0x131D8CC", VA = "0x131D8CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28DC0", Offset = "0xD28DC0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600247A")]
				[Address(RVA = "0x131D8D4", Offset = "0x131D8D4", VA = "0x131D8D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28DD0", Offset = "0xD28DD0")]
				set
				{
				}
			}

			[Token(Token = "0x600247B")]
			[Address(RVA = "0x131D8DC", Offset = "0x131D8DC", VA = "0x131D8DC")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x2000608")]
		public class TimePeriod
		{
			[Token(Token = "0x4002DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EFDC", Offset = "0xD1EFDC")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4002DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EFEC", Offset = "0xD1EFEC")]
			private int <value>k__BackingField;

			[Token(Token = "0x170002DE")]
			public string time_type
			{
				[Token(Token = "0x600247C")]
				[Address(RVA = "0x131D9F4", Offset = "0x131D9F4", VA = "0x131D9F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28DE0", Offset = "0xD28DE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600247D")]
				[Address(RVA = "0x131D9FC", Offset = "0x131D9FC", VA = "0x131D9FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28DF0", Offset = "0xD28DF0")]
				set
				{
				}
			}

			[Token(Token = "0x170002DF")]
			public int value
			{
				[Token(Token = "0x600247E")]
				[Address(RVA = "0x131DA04", Offset = "0x131DA04", VA = "0x131DA04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E00", Offset = "0xD28E00")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600247F")]
				[Address(RVA = "0x131DA0C", Offset = "0x131DA0C", VA = "0x131DA0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E10", Offset = "0xD28E10")]
				set
				{
				}
			}

			[Token(Token = "0x6002480")]
			[Address(RVA = "0x131DA14", Offset = "0x131DA14", VA = "0x131DA14")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x2000609")]
		public class Subscription
		{
			[Token(Token = "0x4002DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EFFC", Offset = "0xD1EFFC")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4002DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F00C", Offset = "0xD1F00C")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4002DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F01C", Offset = "0xD1F01C")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4002DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F02C", Offset = "0xD1F02C")]
			private string <price>k__BackingField;

			[Token(Token = "0x4002DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F03C", Offset = "0xD1F03C")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4002DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F04C", Offset = "0xD1F04C")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4002DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F05C", Offset = "0xD1F05C")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4002DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F06C", Offset = "0xD1F06C")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4002DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F07C", Offset = "0xD1F07C")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4002DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F08C", Offset = "0xD1F08C")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4002DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F09C", Offset = "0xD1F09C")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4002DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F0AC", Offset = "0xD1F0AC")]
			private string <status>k__BackingField;

			[Token(Token = "0x4002DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F0BC", Offset = "0xD1F0BC")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x170002E0")]
			public string app_id
			{
				[Token(Token = "0x6002481")]
				[Address(RVA = "0x131D91C", Offset = "0x131D91C", VA = "0x131D91C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E20", Offset = "0xD28E20")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002482")]
				[Address(RVA = "0x131D924", Offset = "0x131D924", VA = "0x131D924")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E30", Offset = "0xD28E30")]
				set
				{
				}
			}

			[Token(Token = "0x170002E1")]
			public string order_id
			{
				[Token(Token = "0x6002483")]
				[Address(RVA = "0x131D92C", Offset = "0x131D92C", VA = "0x131D92C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E40", Offset = "0xD28E40")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002484")]
				[Address(RVA = "0x131D934", Offset = "0x131D934", VA = "0x131D934")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E50", Offset = "0xD28E50")]
				set
				{
				}
			}

			[Token(Token = "0x170002E2")]
			public string subscription_id
			{
				[Token(Token = "0x6002485")]
				[Address(RVA = "0x131D93C", Offset = "0x131D93C", VA = "0x131D93C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E60", Offset = "0xD28E60")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002486")]
				[Address(RVA = "0x131D944", Offset = "0x131D944", VA = "0x131D944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E70", Offset = "0xD28E70")]
				set
				{
				}
			}

			[Token(Token = "0x170002E3")]
			public string price
			{
				[Token(Token = "0x6002487")]
				[Address(RVA = "0x131D94C", Offset = "0x131D94C", VA = "0x131D94C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E80", Offset = "0xD28E80")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002488")]
				[Address(RVA = "0x131D954", Offset = "0x131D954", VA = "0x131D954")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28E90", Offset = "0xD28E90")]
				set
				{
				}
			}

			[Token(Token = "0x170002E4")]
			public string currency
			{
				[Token(Token = "0x6002489")]
				[Address(RVA = "0x131D95C", Offset = "0x131D95C", VA = "0x131D95C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28EA0", Offset = "0xD28EA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600248A")]
				[Address(RVA = "0x131D964", Offset = "0x131D964", VA = "0x131D964")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28EB0", Offset = "0xD28EB0")]
				set
				{
				}
			}

			[Token(Token = "0x170002E5")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x600248B")]
				[Address(RVA = "0x131D96C", Offset = "0x131D96C", VA = "0x131D96C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28EC0", Offset = "0xD28EC0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x600248C")]
				[Address(RVA = "0x131D974", Offset = "0x131D974", VA = "0x131D974")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28ED0", Offset = "0xD28ED0")]
				set
				{
				}
			}

			[Token(Token = "0x170002E6")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x600248D")]
				[Address(RVA = "0x131D97C", Offset = "0x131D97C", VA = "0x131D97C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28EE0", Offset = "0xD28EE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600248E")]
				[Address(RVA = "0x131D984", Offset = "0x131D984", VA = "0x131D984")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28EF0", Offset = "0xD28EF0")]
				set
				{
				}
			}

			[Token(Token = "0x170002E7")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x600248F")]
				[Address(RVA = "0x131D98C", Offset = "0x131D98C", VA = "0x131D98C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F00", Offset = "0xD28F00")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002490")]
				[Address(RVA = "0x131D994", Offset = "0x131D994", VA = "0x131D994")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F10", Offset = "0xD28F10")]
				set
				{
				}
			}

			[Token(Token = "0x170002E8")]
			public int number_of_charge_period
			{
				[Token(Token = "0x6002491")]
				[Address(RVA = "0x131D99C", Offset = "0x131D99C", VA = "0x131D99C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F20", Offset = "0xD28F20")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002492")]
				[Address(RVA = "0x131D9A4", Offset = "0x131D9A4", VA = "0x131D9A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F30", Offset = "0xD28F30")]
				set
				{
				}
			}

			[Token(Token = "0x170002E9")]
			public string plan_id
			{
				[Token(Token = "0x6002493")]
				[Address(RVA = "0x131D9AC", Offset = "0x131D9AC", VA = "0x131D9AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F40", Offset = "0xD28F40")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002494")]
				[Address(RVA = "0x131D9B4", Offset = "0x131D9B4", VA = "0x131D9B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F50", Offset = "0xD28F50")]
				set
				{
				}
			}

			[Token(Token = "0x170002EA")]
			public string plan_name
			{
				[Token(Token = "0x6002495")]
				[Address(RVA = "0x131D9BC", Offset = "0x131D9BC", VA = "0x131D9BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F60", Offset = "0xD28F60")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002496")]
				[Address(RVA = "0x131D9C4", Offset = "0x131D9C4", VA = "0x131D9C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F70", Offset = "0xD28F70")]
				set
				{
				}
			}

			[Token(Token = "0x170002EB")]
			public string status
			{
				[Token(Token = "0x6002497")]
				[Address(RVA = "0x131D9CC", Offset = "0x131D9CC", VA = "0x131D9CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F80", Offset = "0xD28F80")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002498")]
				[Address(RVA = "0x131D9D4", Offset = "0x131D9D4", VA = "0x131D9D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28F90", Offset = "0xD28F90")]
				set
				{
				}
			}

			[Token(Token = "0x170002EC")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x6002499")]
				[Address(RVA = "0x131D9DC", Offset = "0x131D9DC", VA = "0x131D9DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28FA0", Offset = "0xD28FA0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600249A")]
				[Address(RVA = "0x131D9E4", Offset = "0x131D9E4", VA = "0x131D9E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28FB0", Offset = "0xD28FB0")]
				set
				{
				}
			}

			[Token(Token = "0x600249B")]
			[Address(RVA = "0x131D9EC", Offset = "0x131D9EC", VA = "0x131D9EC")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x200060A")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4002DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F0CC", Offset = "0xD1F0CC")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4002DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F0DC", Offset = "0xD1F0DC")]
			private string <message>k__BackingField;

			[Token(Token = "0x4002DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1F0EC", Offset = "0xD1F0EC")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x170002ED")]
			public int statusCode
			{
				[Token(Token = "0x600249C")]
				[Address(RVA = "0x131D874", Offset = "0x131D874", VA = "0x131D874")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28FC0", Offset = "0xD28FC0")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600249D")]
				[Address(RVA = "0x131D87C", Offset = "0x131D87C", VA = "0x131D87C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28FD0", Offset = "0xD28FD0")]
				set
				{
				}
			}

			[Token(Token = "0x170002EE")]
			public string message
			{
				[Token(Token = "0x600249E")]
				[Address(RVA = "0x131D884", Offset = "0x131D884", VA = "0x131D884")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28FE0", Offset = "0xD28FE0")]
				get
				{
					return null;
				}
				[Token(Token = "0x600249F")]
				[Address(RVA = "0x131D88C", Offset = "0x131D88C", VA = "0x131D88C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD28FF0", Offset = "0xD28FF0")]
				set
				{
				}
			}

			[Token(Token = "0x170002EF")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x60024A0")]
				[Address(RVA = "0x131D894", Offset = "0x131D894", VA = "0x131D894")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD29000", Offset = "0xD29000")]
				get
				{
					return null;
				}
				[Token(Token = "0x60024A1")]
				[Address(RVA = "0x131D89C", Offset = "0x131D89C", VA = "0x131D89C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD29010", Offset = "0xD29010")]
				set
				{
				}
			}

			[Token(Token = "0x60024A2")]
			[Address(RVA = "0x131D8A4", Offset = "0x131D8A4", VA = "0x131D8A4")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1020F1C", Offset = "0x1020F1C", VA = "0x1020F1C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD231B4", Offset = "0xD231B4")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x1021500", Offset = "0x1021500", VA = "0x1021500")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x1020F90", Offset = "0x1020F90", VA = "0x1020F90")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23218", Offset = "0xD23218")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x10215CC", Offset = "0x10215CC", VA = "0x10215CC")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x1021004", Offset = "0x1021004", VA = "0x1021004")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD2327C", Offset = "0xD2327C")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1021698", Offset = "0x1021698", VA = "0x1021698")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1021078", Offset = "0x1021078", VA = "0x1021078")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD232E0", Offset = "0xD232E0")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x102176C", Offset = "0x102176C", VA = "0x102176C")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x10210EC", Offset = "0x10210EC", VA = "0x10210EC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23344", Offset = "0xD23344")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1021838", Offset = "0x1021838", VA = "0x1021838")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x1021160", Offset = "0x1021160", VA = "0x1021160")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD233A8", Offset = "0xD233A8")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x1021904", Offset = "0x1021904", VA = "0x1021904")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x10211D4", Offset = "0x10211D4", VA = "0x10211D4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD2340C", Offset = "0xD2340C")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x10219C0", Offset = "0x10219C0", VA = "0x10219C0")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1021248", Offset = "0x1021248", VA = "0x1021248")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23470", Offset = "0xD23470")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1021A7C", Offset = "0x1021A7C", VA = "0x1021A7C")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x10212BC", Offset = "0x10212BC", VA = "0x10212BC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD234D4", Offset = "0xD234D4")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1021B90", Offset = "0x1021B90", VA = "0x1021B90")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1021330", Offset = "0x1021330", VA = "0x1021330")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23538", Offset = "0xD23538")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1021C5C", Offset = "0x1021C5C", VA = "0x1021C5C")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x10213A4", Offset = "0x10213A4", VA = "0x10213A4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD2359C", Offset = "0xD2359C")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1021D28", Offset = "0x1021D28", VA = "0x1021D28")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1021418", Offset = "0x1021418", VA = "0x1021418")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23600", Offset = "0xD23600")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1021DF4", Offset = "0x1021DF4", VA = "0x1021DF4")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x102148C", Offset = "0x102148C", VA = "0x102148C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23664", Offset = "0xD23664")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1021EB0", Offset = "0x1021EB0", VA = "0x1021EB0")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x1021F7C", Offset = "0x1021F7C", VA = "0x1021F7C")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class DLC
	{
		[Token(Token = "0x6001069")]
		[Address(RVA = "0x1020A94", Offset = "0x1020A94", VA = "0x1020A94")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class Subscription
	{
		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1324F4C", Offset = "0x1324F4C", VA = "0x1324F4C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD236C8", Offset = "0xD236C8")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1324FBC", Offset = "0x1324FBC", VA = "0x1324FBC")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1325104", Offset = "0x1325104", VA = "0x1325104")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x132527C", Offset = "0x132527C", VA = "0x132527C")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class Deeplink
	{
		[Token(Token = "0x200060B")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x60024A3")]
			public abstract void OnSuccess();

			[Token(Token = "0x60024A4")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x1020F14", Offset = "0x1020F14", VA = "0x1020F14")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4001493")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x1020A9C", Offset = "0x1020A9C", VA = "0x1020A9C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD2372C", Offset = "0xD2372C")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x1020B00", Offset = "0x1020B00", VA = "0x1020B00")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x1020C5C", Offset = "0x1020C5C", VA = "0x1020C5C")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x1020D0C", Offset = "0x1020D0C", VA = "0x1020D0C")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x1020DBC", Offset = "0x1020DBC", VA = "0x1020DBC")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x1020E54", Offset = "0x1020E54", VA = "0x1020E54")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x1020F04", Offset = "0x1020F04", VA = "0x1020F04")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x1020F0C", Offset = "0x1020F0C", VA = "0x1020F0C")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	internal class Token
	{
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback;

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x13252A4", Offset = "0x13252A4", VA = "0x13252A4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD23790", Offset = "0xD23790")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x1325374", Offset = "0x1325374", VA = "0x1325374")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x1325304", Offset = "0x1325304", VA = "0x1325304")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xD237F4", Offset = "0xD237F4")]
		private static void GetSessionTokenIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x13254BC", Offset = "0x13254BC", VA = "0x13254BC")]
		public static void GetSessionToken(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1325604", Offset = "0x1325604", VA = "0x1325604")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0AFC0", Offset = "0xD0AFC0")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0AFD4", Offset = "0xD0AFD4")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0AFE8", Offset = "0xD0AFE8")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0AFFC", Offset = "0xD0AFFC")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x20002AB")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x400149C")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x400149D")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x400149E")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x400149F")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x20002AC")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x40014A1")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x40014A2")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x40014A3")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x40014A4")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x20002AD")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x40014A6")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x40014A7")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x40014A8")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x20002AE")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x40014AA")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x40014AB")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x40014AC")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x40014AD")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x20002AF")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x40014AF")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x40014B0")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x40014B1")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x20002B0")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x40014B3")]
		UNKNOWN,
		[Token(Token = "0x40014B4")]
		PAID,
		[Token(Token = "0x40014B5")]
		REDEEM,
		[Token(Token = "0x40014B6")]
		FREEE_TRIAL
	}
	[Token(Token = "0x20002B1")]
	internal enum ELocale
	{
		[Token(Token = "0x40014B8")]
		k_ELocaleUS,
		[Token(Token = "0x40014B9")]
		k_ELocaleDE,
		[Token(Token = "0x40014BA")]
		k_ELocaleJP,
		[Token(Token = "0x40014BB")]
		k_ELocaleKR,
		[Token(Token = "0x40014BC")]
		k_ELocaleRU,
		[Token(Token = "0x40014BD")]
		k_ELocaleCN,
		[Token(Token = "0x40014BE")]
		k_ELocaleTW,
		[Token(Token = "0x40014BF")]
		k_ELocaleFR
	}
	[Token(Token = "0x20002B2")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x40014C1")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x40014C2")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x40014C3")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x20002B3")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0B010", Offset = "0xD0B010")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x20002B5")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x20002B6")]
	internal class Api
	{
		[Token(Token = "0x200060C")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4002DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x131F2B8", Offset = "0x131F2B8", VA = "0x131F2B8")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x131F348", Offset = "0x131F348", VA = "0x131F348")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x131F530", Offset = "0x131F530", VA = "0x131F530")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x131EDFC", Offset = "0x131EDFC", VA = "0x131EDFC")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x131EF50", Offset = "0x131EF50", VA = "0x131EF50")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x131F044", Offset = "0x131F044", VA = "0x131F044")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x131F140", Offset = "0x131F140", VA = "0x131F140")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x131F340", Offset = "0x131F340", VA = "0x131F340")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	internal class User
	{
		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1322234", Offset = "0x1322234", VA = "0x1322234")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1322354", Offset = "0x1322354", VA = "0x1322354")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x132242C", Offset = "0x132242C", VA = "0x132242C")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1322504", Offset = "0x1322504", VA = "0x1322504")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x13225DC", Offset = "0x13225DC", VA = "0x13225DC")]
		public User()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	internal class UserStats
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x13225E4", Offset = "0x13225E4", VA = "0x13225E4")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1322704", Offset = "0x1322704", VA = "0x1322704")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1322824", Offset = "0x1322824", VA = "0x1322824")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1322944", Offset = "0x1322944", VA = "0x1322944")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x1322A6C", Offset = "0x1322A6C", VA = "0x1322A6C")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1322B9C", Offset = "0x1322B9C", VA = "0x1322B9C")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1322CC4", Offset = "0x1322CC4", VA = "0x1322CC4")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x1322DF4", Offset = "0x1322DF4", VA = "0x1322DF4")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1322EC8", Offset = "0x1322EC8", VA = "0x1322EC8")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1322F9C", Offset = "0x1322F9C", VA = "0x1322F9C")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1323070", Offset = "0x1323070", VA = "0x1323070")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x1323144", Offset = "0x1323144", VA = "0x1323144")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x132326C", Offset = "0x132326C", VA = "0x132326C")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x13233D4", Offset = "0x13233D4", VA = "0x13233D4")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x13234A8", Offset = "0x13234A8", VA = "0x13234A8")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1323720", Offset = "0x1323720", VA = "0x1323720")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x13238C8", Offset = "0x13238C8", VA = "0x13238C8")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x1323B04", Offset = "0x1323B04", VA = "0x1323B04")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1323C00", Offset = "0x1323C00", VA = "0x1323C00")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x1323CFC", Offset = "0x1323CFC", VA = "0x1323CFC")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x1323DF8", Offset = "0x1323DF8", VA = "0x1323DF8")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	internal class Deeplink
	{
		[Token(Token = "0x200060D")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4002DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x131F950", Offset = "0x131F950", VA = "0x131F950")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x60024AA")]
			[Address(RVA = "0x131FD7C", Offset = "0x131FD7C", VA = "0x131FD7C")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x131FE0C", Offset = "0x131FE0C", VA = "0x131FE0C")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x131F6EC", Offset = "0x131F6EC", VA = "0x131F6EC")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x131F7D8", Offset = "0x131F7D8", VA = "0x131F7D8")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x131F9D8", Offset = "0x131F9D8", VA = "0x131F9D8")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x131FB24", Offset = "0x131FB24", VA = "0x131FB24")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x131FC9C", Offset = "0x131FC9C", VA = "0x131FC9C")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x131FD74", Offset = "0x131FD74", VA = "0x131FD74")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	internal class IAPurchase
	{
		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x13203FC", Offset = "0x13203FC", VA = "0x13203FC")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x1320548", Offset = "0x1320548", VA = "0x1320548")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x1320694", Offset = "0x1320694", VA = "0x1320694")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x132080C", Offset = "0x132080C", VA = "0x132080C")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x1320958", Offset = "0x1320958", VA = "0x1320958")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x1320AA4", Offset = "0x1320AA4", VA = "0x1320AA4")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1320BBC", Offset = "0x1320BBC", VA = "0x1320BBC")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1320CD4", Offset = "0x1320CD4", VA = "0x1320CD4")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x1320F8C", Offset = "0x1320F8C", VA = "0x1320F8C")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x13210D8", Offset = "0x13210D8", VA = "0x13210D8")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1321224", Offset = "0x1321224", VA = "0x1321224")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1321370", Offset = "0x1321370", VA = "0x1321370")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1321488", Offset = "0x1321488", VA = "0x1321488")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x13215D4", Offset = "0x13215D4", VA = "0x13215D4")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	internal class Subscription
	{
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1321B14", Offset = "0x1321B14", VA = "0x1321B14")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1321C34", Offset = "0x1321C34", VA = "0x1321C34")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1321D30", Offset = "0x1321D30", VA = "0x1321D30")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1321E2C", Offset = "0x1321E2C", VA = "0x1321E2C")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1321FE4", Offset = "0x1321FE4", VA = "0x1321FE4")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	internal class Token
	{
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1321FEC", Offset = "0x1321FEC", VA = "0x1321FEC")]
		internal static int IsReady(StatusCallback IsReadyCallback)
		{
			return default(int);
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x132210C", Offset = "0x132210C", VA = "0x132210C")]
		internal static int GetSessionToken(StatusCallback2 GetSessionTokenCallback)
		{
			return default(int);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x132222C", Offset = "0x132222C", VA = "0x132222C")]
		public Token()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	internal class Android
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject _sessionToken;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x170000A3")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x131E238", Offset = "0x131E238", VA = "0x131E238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x131E2C8", Offset = "0x131E2C8", VA = "0x131E2C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x131E328", Offset = "0x131E328", VA = "0x131E328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x131DA1C", Offset = "0x131DA1C", VA = "0x131DA1C")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x131DB48", Offset = "0x131DB48", VA = "0x131DB48")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x131DC70", Offset = "0x131DC70", VA = "0x131DC70")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x131DD98", Offset = "0x131DD98", VA = "0x131DD98")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x131DEC0", Offset = "0x131DEC0", VA = "0x131DEC0")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x131DFE8", Offset = "0x131DFE8", VA = "0x131DFE8")]
		internal static AndroidJavaObject GetJavaSessionToken()
		{
			return null;
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x131E110", Offset = "0x131E110", VA = "0x131E110")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x131E32C", Offset = "0x131E32C", VA = "0x131E32C")]
		public Android()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StatusCallback statusCallback;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x131E334", Offset = "0x131E334", VA = "0x131E334")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x131E3BC", Offset = "0x131E3BC", VA = "0x131E3BC")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x131E444", Offset = "0x131E444", VA = "0x131E444")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x131E4CC", Offset = "0x131E4CC", VA = "0x131E4CC")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x20002BF")]
	internal class Session
	{
		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1020428", Offset = "0x1020428", VA = "0x1020428")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x20002C0")]
	public class Logger
	{
		[Token(Token = "0x40014D4")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Type _unityLogType;

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1020438", Offset = "0x1020438", VA = "0x1020438")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x1020838", Offset = "0x1020838", VA = "0x1020838")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1020508", Offset = "0x1020508", VA = "0x1020508")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x10208D4", Offset = "0x10208D4", VA = "0x10208D4")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1020A38", Offset = "0x1020A38", VA = "0x1020A38")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x20002C1")]
	public enum JsonType
	{
		[Token(Token = "0x40014D9")]
		None,
		[Token(Token = "0x40014DA")]
		Object,
		[Token(Token = "0x40014DB")]
		Array,
		[Token(Token = "0x40014DC")]
		String,
		[Token(Token = "0x40014DD")]
		Int,
		[Token(Token = "0x40014DE")]
		Long,
		[Token(Token = "0x40014DF")]
		Double,
		[Token(Token = "0x40014E0")]
		Boolean
	}
	[Token(Token = "0x20002C2")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x170000A6")]
		bool IsArray
		{
			[Token(Token = "0x60010E0")]
			get;
		}

		[Token(Token = "0x170000A7")]
		bool IsBoolean
		{
			[Token(Token = "0x60010E1")]
			get;
		}

		[Token(Token = "0x170000A8")]
		bool IsDouble
		{
			[Token(Token = "0x60010E2")]
			get;
		}

		[Token(Token = "0x170000A9")]
		bool IsInt
		{
			[Token(Token = "0x60010E3")]
			get;
		}

		[Token(Token = "0x170000AA")]
		bool IsLong
		{
			[Token(Token = "0x60010E4")]
			get;
		}

		[Token(Token = "0x170000AB")]
		bool IsObject
		{
			[Token(Token = "0x60010E5")]
			get;
		}

		[Token(Token = "0x170000AC")]
		bool IsString
		{
			[Token(Token = "0x60010E6")]
			get;
		}

		[Token(Token = "0x60010E7")]
		bool GetBoolean();

		[Token(Token = "0x60010E8")]
		double GetDouble();

		[Token(Token = "0x60010E9")]
		int GetInt();

		[Token(Token = "0x60010EA")]
		JsonType GetJsonType();

		[Token(Token = "0x60010EB")]
		long GetLong();

		[Token(Token = "0x60010EC")]
		string GetString();

		[Token(Token = "0x60010ED")]
		void SetBoolean(bool val);

		[Token(Token = "0x60010EE")]
		void SetDouble(double val);

		[Token(Token = "0x60010EF")]
		void SetInt(int val);

		[Token(Token = "0x60010F0")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x60010F1")]
		void SetLong(long val);

		[Token(Token = "0x60010F2")]
		void SetString(string val);

		[Token(Token = "0x60010F3")]
		string ToJson();

		[Token(Token = "0x60010F4")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xD0B024", Offset = "0xD0B024")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inst_boolean;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double inst_double;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int inst_int;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long inst_long;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string inst_string;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string json;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonType type;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x170000AD")]
		public int Count
		{
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x119A76C", Offset = "0x119A76C", VA = "0x119A76C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AE")]
		public bool IsArray
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x119A8F4", Offset = "0x119A8F4", VA = "0x119A8F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AF")]
		public bool IsBoolean
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x119A904", Offset = "0x119A904", VA = "0x119A904")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B0")]
		public bool IsDouble
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x119A914", Offset = "0x119A914", VA = "0x119A914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B1")]
		public bool IsInt
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x119A924", Offset = "0x119A924", VA = "0x119A924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B2")]
		public bool IsLong
		{
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x119A934", Offset = "0x119A934", VA = "0x119A934")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B3")]
		public bool IsObject
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x119A944", Offset = "0x119A944", VA = "0x119A944")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B4")]
		public bool IsString
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x119A954", Offset = "0x119A954", VA = "0x119A954")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B5")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x119A964", Offset = "0x119A964", VA = "0x119A964", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B6")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0x119A968", Offset = "0x119A968", VA = "0x119A968", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x119AA24", Offset = "0x119AA24", VA = "0x119AA24", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x119AAE0", Offset = "0x119AAE0", VA = "0x119AAE0", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B9")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6001101")]
			[Address(RVA = "0x119ACEC", Offset = "0x119ACEC", VA = "0x119ACEC", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BA")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0x119ADA8", Offset = "0x119ADA8", VA = "0x119ADA8", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0x119B0D8", Offset = "0x119B0D8", VA = "0x119B0D8", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0x119B408", Offset = "0x119B408", VA = "0x119B408", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BD")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0x119B418", Offset = "0x119B418", VA = "0x119B418", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BE")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0x119B428", Offset = "0x119B428", VA = "0x119B428", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BF")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x119B438", Offset = "0x119B438", VA = "0x119B438", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C0")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x119B448", Offset = "0x119B448", VA = "0x119B448", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x119B458", Offset = "0x119B458", VA = "0x119B458", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C2")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x600110A")]
			[Address(RVA = "0x119B468", Offset = "0x119B468", VA = "0x119B468", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C3")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0x119B478", Offset = "0x119B478", VA = "0x119B478", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C4")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x600110C")]
			[Address(RVA = "0x119B650", Offset = "0x119B650", VA = "0x119B650", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0x119B70C", Offset = "0x119B70C", VA = "0x119B70C", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x600110E")]
			[Address(RVA = "0x119B7D4", Offset = "0x119B7D4", VA = "0x119B7D4", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0x119BCE0", Offset = "0x119BCE0", VA = "0x119BCE0", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001110")]
			[Address(RVA = "0x119BDB0", Offset = "0x119BDB0", VA = "0x119BDB0", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0x119BFB8", Offset = "0x119BFB8", VA = "0x119BFB8", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001112")]
			[Address(RVA = "0x119C080", Offset = "0x119C080", VA = "0x119C080", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public JsonData Item
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0x119C358", Offset = "0x119C358", VA = "0x119C358")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001114")]
			[Address(RVA = "0x119B944", Offset = "0x119B944", VA = "0x119B944")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public JsonData Item
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0x119C420", Offset = "0x119C420", VA = "0x119C420")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001116")]
			[Address(RVA = "0x119C0C4", Offset = "0x119C0C4", VA = "0x119C0C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x119C57C", Offset = "0x119C57C", VA = "0x119C57C")]
		public JsonData()
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x119C584", Offset = "0x119C584", VA = "0x119C584")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x119C5BC", Offset = "0x119C5BC", VA = "0x119C5BC")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x119C5F8", Offset = "0x119C5F8", VA = "0x119C5F8")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x119C62C", Offset = "0x119C62C", VA = "0x119C62C")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x119C660", Offset = "0x119C660", VA = "0x119C660")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x119C848", Offset = "0x119C848", VA = "0x119C848")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x119C87C", Offset = "0x119C87C", VA = "0x119C87C")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x119C8EC", Offset = "0x119C8EC", VA = "0x119C8EC")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x119C960", Offset = "0x119C960", VA = "0x119C960")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x119C9CC", Offset = "0x119C9CC", VA = "0x119C9CC")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x119CA38", Offset = "0x119CA38", VA = "0x119CA38")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x119CAA4", Offset = "0x119CAA4", VA = "0x119CAA4")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x119CB38", Offset = "0x119CB38", VA = "0x119CB38")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x119CBCC", Offset = "0x119CBCC", VA = "0x119CBCC")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x119CC60", Offset = "0x119CC60", VA = "0x119CC60")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x119CCF4", Offset = "0x119CCF4", VA = "0x119CCF4")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x119CD88", Offset = "0x119CD88", VA = "0x119CD88", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x119CE58", Offset = "0x119CE58", VA = "0x119CE58", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x119D00C", Offset = "0x119D00C", VA = "0x119D00C", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x119D144", Offset = "0x119D144", VA = "0x119D144", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x119D210", Offset = "0x119D210", VA = "0x119D210", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x119D2B8", Offset = "0x119D2B8", VA = "0x119D2B8", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x119D53C", Offset = "0x119D53C", VA = "0x119D53C", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x119D5F4", Offset = "0x119D5F4", VA = "0x119D5F4", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x119D680", Offset = "0x119D680", VA = "0x119D680", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x119D70C", Offset = "0x119D70C", VA = "0x119D70C", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x119D798", Offset = "0x119D798", VA = "0x119D798", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x119D824", Offset = "0x119D824", VA = "0x119D824", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x119D8B0", Offset = "0x119D8B0", VA = "0x119D8B0", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x119D8C8", Offset = "0x119D8C8", VA = "0x119D8C8", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x119D8DC", Offset = "0x119D8DC", VA = "0x119D8DC", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x119D8F0", Offset = "0x119D8F0", VA = "0x119D8F0", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x119D904", Offset = "0x119D904", VA = "0x119D904", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x119D914", Offset = "0x119D914", VA = "0x119D914", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x119D9D0", Offset = "0x119D9D0", VA = "0x119D9D0", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x119DA08", Offset = "0x119DA08", VA = "0x119DA08", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x119DAE8", Offset = "0x119DAE8", VA = "0x119DAE8", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x119DBAC", Offset = "0x119DBAC", VA = "0x119DBAC", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x119DC78", Offset = "0x119DC78", VA = "0x119DC78", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x119DD44", Offset = "0x119DD44", VA = "0x119DD44", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x119DE20", Offset = "0x119DE20", VA = "0x119DE20", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x119DEF4", Offset = "0x119DEF4", VA = "0x119DEF4", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x119DFC8", Offset = "0x119DFC8", VA = "0x119DFC8", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x119E0DC", Offset = "0x119E0DC", VA = "0x119E0DC", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x119E228", Offset = "0x119E228", VA = "0x119E228", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x119A828", Offset = "0x119A828", VA = "0x119A828")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x119AB9C", Offset = "0x119AB9C", VA = "0x119AB9C")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x119B534", Offset = "0x119B534", VA = "0x119B534")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x119B8A8", Offset = "0x119B8A8", VA = "0x119B8A8")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x119E3E4", Offset = "0x119E3E4", VA = "0x119E3E4")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x119DA0C", Offset = "0x119DA0C", VA = "0x119DA0C")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x119F780", Offset = "0x119F780", VA = "0x119F780")]
		public void Clear()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x119F89C", Offset = "0x119F89C", VA = "0x119F89C", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x119F988", Offset = "0x119F988", VA = "0x119F988", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x119F990", Offset = "0x119F990", VA = "0x119F990", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x119D918", Offset = "0x119D918", VA = "0x119D918")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x119D9D4", Offset = "0x119D9D4", VA = "0x119D9D4")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x119FB50", Offset = "0x119FB50", VA = "0x119FB50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002C4")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x170000CA")]
		public object Current
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x11AC420", Offset = "0x11AC420", VA = "0x11AC420", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x11AC48C", Offset = "0x11AC48C", VA = "0x11AC48C", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x170000CC")]
		public object Key
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x11AC56C", Offset = "0x11AC56C", VA = "0x11AC56C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public object Value
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x11AC61C", Offset = "0x11AC61C", VA = "0x11AC61C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x119E0B0", Offset = "0x119E0B0", VA = "0x119E0B0")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x11AC6D4", Offset = "0x11AC6D4", VA = "0x11AC6D4", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x11AC784", Offset = "0x11AC784", VA = "0x11AC784", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x6001159")]
		[Address(RVA = "0x119FC30", Offset = "0x119FC30", VA = "0x119FC30")]
		public JsonException()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x119FC38", Offset = "0x119FC38", VA = "0x119FC38")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x119FCC8", Offset = "0x119FCC8", VA = "0x119FCC8")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x119FD68", Offset = "0x119FD68", VA = "0x119FD68")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x119FDF8", Offset = "0x119FDF8", VA = "0x119FDF8")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x119FE98", Offset = "0x119FE98", VA = "0x119FE98")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x119FEA0", Offset = "0x119FEA0", VA = "0x119FEA0")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x20002C6")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsField;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type Type;
	}
	[Token(Token = "0x20002C7")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_array;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool is_list;

		[Token(Token = "0x170000CE")]
		public Type ElementType
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x1199E64", Offset = "0x1199E64", VA = "0x1199E64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001161")]
			[Address(RVA = "0x1199F24", Offset = "0x1199F24", VA = "0x1199F24")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public bool IsArray
		{
			[Token(Token = "0x6001162")]
			[Address(RVA = "0x1199F2C", Offset = "0x1199F2C", VA = "0x1199F2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001163")]
			[Address(RVA = "0x1199F34", Offset = "0x1199F34", VA = "0x1199F34")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public bool IsList
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0x1199F40", Offset = "0x1199F40", VA = "0x1199F40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x1199F48", Offset = "0x1199F48", VA = "0x1199F48")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20002C8")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool is_dictionary;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x170000D1")]
		public Type ElementType
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x11A49D0", Offset = "0x11A49D0", VA = "0x11A49D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001167")]
			[Address(RVA = "0x11AC3F4", Offset = "0x11AC3F4", VA = "0x11AC3F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public bool IsDictionary
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x11AC3FC", Offset = "0x11AC3FC", VA = "0x11AC3FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x11AC404", Offset = "0x11AC404", VA = "0x11AC404")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x11AC410", Offset = "0x11AC410", VA = "0x11AC410")]
			get
			{
				return null;
			}
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x11AC418", Offset = "0x11AC418", VA = "0x11AC418")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20002C9")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x20002CA")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x20002CB")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x20002CC")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x20002CD")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x20002CE")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA70", Offset = "0xD0CA70")]
		private sealed class <>c
		{
			[Token(Token = "0x4002DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4002DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4002DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4002DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4002DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4002DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4002DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4002DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4002DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4002DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4002DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4002DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4002DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4002E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4002E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4002E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4002E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4002E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4002E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4002E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4002E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4002E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4002E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4002E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4002E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4002E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x60024AD")]
			[Address(RVA = "0x11A74B4", Offset = "0x11A74B4", VA = "0x11A74B4")]
			public <>c()
			{
			}

			[Token(Token = "0x60024AE")]
			[Address(RVA = "0x11A74BC", Offset = "0x11A74BC", VA = "0x11A74BC")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024AF")]
			[Address(RVA = "0x11A7574", Offset = "0x11A7574", VA = "0x11A7574")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024B0")]
			[Address(RVA = "0x11A762C", Offset = "0x11A762C", VA = "0x11A762C")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x11A7718", Offset = "0x11A7718", VA = "0x11A7718")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x11A788C", Offset = "0x11A788C", VA = "0x11A788C")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x11A7944", Offset = "0x11A7944", VA = "0x11A7944")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x11A79FC", Offset = "0x11A79FC", VA = "0x11A79FC")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x11A7AB4", Offset = "0x11A7AB4", VA = "0x11A7AB4")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x11A7B6C", Offset = "0x11A7B6C", VA = "0x11A7B6C")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x11A7BF8", Offset = "0x11A7BF8", VA = "0x11A7BF8")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x11A7C88", Offset = "0x11A7C88", VA = "0x11A7C88")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x11A7D4C", Offset = "0x11A7D4C", VA = "0x11A7D4C")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x60024BA")]
			[Address(RVA = "0x11A7E10", Offset = "0x11A7E10", VA = "0x11A7E10")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x11A7ED4", Offset = "0x11A7ED4", VA = "0x11A7ED4")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x11A7F98", Offset = "0x11A7F98", VA = "0x11A7F98")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x60024BD")]
			[Address(RVA = "0x11A805C", Offset = "0x11A805C", VA = "0x11A805C")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x11A8120", Offset = "0x11A8120", VA = "0x11A8120")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x11A81E0", Offset = "0x11A81E0", VA = "0x11A81E0")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x11A82A4", Offset = "0x11A82A4", VA = "0x11A82A4")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x11A8364", Offset = "0x11A8364", VA = "0x11A8364")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x11A8428", Offset = "0x11A8428", VA = "0x11A8428")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x11A84EC", Offset = "0x11A84EC", VA = "0x11A84EC")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x11A85A8", Offset = "0x11A85A8", VA = "0x11A85A8")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x11A8698", Offset = "0x11A8698", VA = "0x11A8698")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x11A86F4", Offset = "0x11A86F4", VA = "0x11A86F4")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x11A8750", Offset = "0x11A8750", VA = "0x11A8750")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA80", Offset = "0xD0CA80")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4002E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x60024C8")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60024C9")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CA90", Offset = "0xD0CA90")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4002E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x60024CA")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60024CB")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x119FEA8", Offset = "0x119FEA8", VA = "0x119FEA8")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x11A1CD8", Offset = "0x11A1CD8", VA = "0x11A1CD8")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x11A2144", Offset = "0x11A2144", VA = "0x11A2144")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x11A2854", Offset = "0x11A2854", VA = "0x11A2854")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x11A2D64", Offset = "0x11A2D64", VA = "0x11A2D64")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x11A3638", Offset = "0x11A3638", VA = "0x11A3638")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x11A4A90", Offset = "0x11A4A90", VA = "0x11A4A90")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x11A0200", Offset = "0x11A0200", VA = "0x11A0200")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x11A0F94", Offset = "0x11A0F94", VA = "0x11A0F94")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x11A5334", Offset = "0x11A5334", VA = "0x11A5334")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x11A5578", Offset = "0x11A5578", VA = "0x11A5578")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x11A6A9C", Offset = "0x11A6A9C", VA = "0x11A6A9C")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x11A6CC0", Offset = "0x11A6CC0", VA = "0x11A6CC0")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x11A6D3C", Offset = "0x11A6D3C", VA = "0x11A6D3C")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x11A6EF8", Offset = "0x11A6EF8", VA = "0x11A6EF8")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x11A7058", Offset = "0x11A7058", VA = "0x11A7058")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x6001190")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6001191")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x6001192")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x11A6E84", Offset = "0x11A6E84", VA = "0x11A6E84")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x11A7190", Offset = "0x11A7190", VA = "0x11A7190")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x6001195")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x6001196")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x11A7298", Offset = "0x11A7298", VA = "0x11A7298")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x11A7370", Offset = "0x11A7370", VA = "0x11A7370")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x11A7448", Offset = "0x11A7448", VA = "0x11A7448")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public enum JsonToken
	{
		[Token(Token = "0x4001506")]
		None,
		[Token(Token = "0x4001507")]
		ObjectStart,
		[Token(Token = "0x4001508")]
		PropertyName,
		[Token(Token = "0x4001509")]
		ObjectEnd,
		[Token(Token = "0x400150A")]
		ArrayStart,
		[Token(Token = "0x400150B")]
		ArrayEnd,
		[Token(Token = "0x400150C")]
		Int,
		[Token(Token = "0x400150D")]
		Long,
		[Token(Token = "0x400150E")]
		Double,
		[Token(Token = "0x400150F")]
		String,
		[Token(Token = "0x4001510")]
		Boolean,
		[Token(Token = "0x4001511")]
		Null
	}
	[Token(Token = "0x20002D0")]
	public class JsonReader
	{
		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_input;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int current_symbol;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool end_of_json;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool end_of_input;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Lexer lexer;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool parser_in_string;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool parser_return;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool read_started;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextReader reader;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool reader_is_owned;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private object token_value;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private JsonToken token;

		[Token(Token = "0x170000D4")]
		public bool AllowComments
		{
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x11A87AC", Offset = "0x11A87AC", VA = "0x11A87AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x11A87C8", Offset = "0x11A87C8", VA = "0x11A87C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x11A87E8", Offset = "0x11A87E8", VA = "0x11A87E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x11A8804", Offset = "0x11A8804", VA = "0x11A8804")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public bool EndOfInput
		{
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x11A8824", Offset = "0x11A8824", VA = "0x11A8824")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D7")]
		public bool EndOfJson
		{
			[Token(Token = "0x600119F")]
			[Address(RVA = "0x11A882C", Offset = "0x11A882C", VA = "0x11A882C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D8")]
		public JsonToken Token
		{
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x11A8834", Offset = "0x11A8834", VA = "0x11A8834")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x170000D9")]
		public object Value
		{
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0x11A883C", Offset = "0x11A883C", VA = "0x11A883C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x11A8844", Offset = "0x11A8844", VA = "0x11A8844")]
		static JsonReader()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x11A7220", Offset = "0x11A7220", VA = "0x11A7220")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x11A7050", Offset = "0x11A7050", VA = "0x11A7050")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x11A8EBC", Offset = "0x11A8EBC", VA = "0x11A8EBC")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x11A8848", Offset = "0x11A8848", VA = "0x11A8848")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x11A91D4", Offset = "0x11A91D4", VA = "0x11A91D4")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x11A90C4", Offset = "0x11A90C4", VA = "0x11A90C4")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x11A933C", Offset = "0x11A933C", VA = "0x11A933C")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x11A94BC", Offset = "0x11A94BC", VA = "0x11A94BC")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x11A965C", Offset = "0x11A965C", VA = "0x11A965C")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x11A9890", Offset = "0x11A9890", VA = "0x11A9890")]
		public void Close()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x11A45A4", Offset = "0x11A45A4", VA = "0x11A45A4")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D1")]
	internal enum Condition
	{
		[Token(Token = "0x4001521")]
		InArray,
		[Token(Token = "0x4001522")]
		InObject,
		[Token(Token = "0x4001523")]
		NotAProperty,
		[Token(Token = "0x4001524")]
		Property,
		[Token(Token = "0x4001525")]
		Value
	}
	[Token(Token = "0x20002D2")]
	internal class WriterContext
	{
		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Count;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool InArray;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool InObject;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool ExpectingValue;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Padding;

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x11A9CA4", Offset = "0x11A9CA4", VA = "0x11A9CA4")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class JsonWriter
	{
		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WriterContext context;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool has_reached_end;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private char[] hex_seq;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int indentation;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int indent_value;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool pretty_print;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool validate;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextWriter writer;

		[Token(Token = "0x170000DA")]
		public int IndentValue
		{
			[Token(Token = "0x60011AF")]
			[Address(RVA = "0x11A98E0", Offset = "0x11A98E0", VA = "0x11A98E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011B0")]
			[Address(RVA = "0x11A98E8", Offset = "0x11A98E8", VA = "0x11A98E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public bool PrettyPrint
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x11A98FC", Offset = "0x11A98FC", VA = "0x11A98FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B2")]
			[Address(RVA = "0x11A9904", Offset = "0x11A9904", VA = "0x11A9904")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x11A9910", Offset = "0x11A9910", VA = "0x11A9910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		public bool Validate
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0x11A9918", Offset = "0x11A9918", VA = "0x11A9918")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x11A9920", Offset = "0x11A9920", VA = "0x11A9920")]
			set
			{
			}
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x11A992C", Offset = "0x11A992C", VA = "0x11A992C")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x11A0164", Offset = "0x11A0164", VA = "0x11A0164")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x11A9A58", Offset = "0x11A9A58", VA = "0x11A9A58")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x119FAB0", Offset = "0x119FAB0", VA = "0x119FAB0")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x11A9ACC", Offset = "0x11A9ACC", VA = "0x11A9ACC")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x11A9984", Offset = "0x11A9984", VA = "0x11A9984")]
		private void Init()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x11A9CAC", Offset = "0x11A9CAC", VA = "0x11A9CAC")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x11A9D34", Offset = "0x11A9D34", VA = "0x11A9D34")]
		private void Indent()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x11A9D4C", Offset = "0x11A9D4C", VA = "0x11A9D4C")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x11A9DE0", Offset = "0x11A9DE0", VA = "0x11A9DE0")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x11A9DE8", Offset = "0x11A9DE8", VA = "0x11A9DE8")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x11A9E78", Offset = "0x11A9E78", VA = "0x11A9E78")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x11AA124", Offset = "0x11AA124", VA = "0x11AA124")]
		private void Unindent()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x11AA13C", Offset = "0x11AA13C", VA = "0x11AA13C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x11A6BF4", Offset = "0x11A6BF4", VA = "0x11A6BF4")]
		public void Reset()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x119EF74", Offset = "0x119EF74", VA = "0x119EF74")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x11A77A4", Offset = "0x11A77A4", VA = "0x11A77A4")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x119F010", Offset = "0x119F010", VA = "0x119F010")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x119F14C", Offset = "0x119F14C", VA = "0x119F14C")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x119F22C", Offset = "0x119F22C", VA = "0x119F22C")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x119EED8", Offset = "0x119EED8", VA = "0x119EED8")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x11A69BC", Offset = "0x11A69BC", VA = "0x11A69BC")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x119F3E0", Offset = "0x119F3E0", VA = "0x119F3E0")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x119F30C", Offset = "0x119F30C", VA = "0x119F30C")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x119F6B0", Offset = "0x119F6B0", VA = "0x119F6B0")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x119F4B0", Offset = "0x119F4B0", VA = "0x119F4B0")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x119F584", Offset = "0x119F584", VA = "0x119F584")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x20002D4")]
	internal class FsmContext
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Return;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextState;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Lexer L;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int StateStack;

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x119A388", Offset = "0x119A388", VA = "0x119A388")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	internal class Lexer
	{
		[Token(Token = "0x2000611")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool allow_comments;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool end_of_input;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FsmContext fsm_context;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int input_buffer;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int input_char;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextReader reader;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int state;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StringBuilder string_buffer;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string string_value;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int token;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int unichar;

		[Token(Token = "0x170000DE")]
		public bool AllowComments
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x11AA1AC", Offset = "0x11AA1AC", VA = "0x11AA1AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x11AA1B4", Offset = "0x11AA1B4", VA = "0x11AA1B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x11AA1C0", Offset = "0x11AA1C0", VA = "0x11AA1C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x11AA1C8", Offset = "0x11AA1C8", VA = "0x11AA1C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public bool EndOfInput
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x11AA1D4", Offset = "0x11AA1D4", VA = "0x11AA1D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E1")]
		public int Token
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x11AA1DC", Offset = "0x11AA1DC", VA = "0x11AA1DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E2")]
		public string StringValue
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x11AA1E4", Offset = "0x11AA1E4", VA = "0x11AA1E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x11AA1EC", Offset = "0x11AA1EC", VA = "0x11AA1EC")]
		static Lexer()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x11A9000", Offset = "0x11A9000", VA = "0x11A9000")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x11AAB2C", Offset = "0x11AAB2C", VA = "0x11AAB2C")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x11AA1F0", Offset = "0x11AA1F0", VA = "0x11AA1F0")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x11AABB8", Offset = "0x11AABB8", VA = "0x11AABB8")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x11AACB8", Offset = "0x11AACB8", VA = "0x11AACB8")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x11AAEC8", Offset = "0x11AAEC8", VA = "0x11AAEC8")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x11AAF74", Offset = "0x11AAF74", VA = "0x11AAF74")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x11AB0B4", Offset = "0x11AB0B4", VA = "0x11AB0B4")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x11AB1B4", Offset = "0x11AB1B4", VA = "0x11AB1B4")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x11AB238", Offset = "0x11AB238", VA = "0x11AB238")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x11AB334", Offset = "0x11AB334", VA = "0x11AB334")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x11AB3CC", Offset = "0x11AB3CC", VA = "0x11AB3CC")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x11AB48C", Offset = "0x11AB48C", VA = "0x11AB48C")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x11AB4FC", Offset = "0x11AB4FC", VA = "0x11AB4FC")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x11AB56C", Offset = "0x11AB56C", VA = "0x11AB56C")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x11AB5DC", Offset = "0x11AB5DC", VA = "0x11AB5DC")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x11AB64C", Offset = "0x11AB64C", VA = "0x11AB64C")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x11AB6BC", Offset = "0x11AB6BC", VA = "0x11AB6BC")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x11AB72C", Offset = "0x11AB72C", VA = "0x11AB72C")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x11AB79C", Offset = "0x11AB79C", VA = "0x11AB79C")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x11AB80C", Offset = "0x11AB80C", VA = "0x11AB80C")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x11AB87C", Offset = "0x11AB87C", VA = "0x11AB87C")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x11AB8EC", Offset = "0x11AB8EC", VA = "0x11AB8EC")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x11AB998", Offset = "0x11AB998", VA = "0x11AB998")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x11ABA08", Offset = "0x11ABA08", VA = "0x11ABA08")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x11ABB54", Offset = "0x11ABB54", VA = "0x11ABB54")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x11ABCD8", Offset = "0x11ABCD8", VA = "0x11ABCD8")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x11ABD84", Offset = "0x11ABD84", VA = "0x11ABD84")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x11ABDFC", Offset = "0x11ABDFC", VA = "0x11ABDFC")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x11ABE7C", Offset = "0x11ABE7C", VA = "0x11ABE7C")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x11ABEE8", Offset = "0x11ABEE8", VA = "0x11ABEE8")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x11ABF54", Offset = "0x11ABF54", VA = "0x11ABF54")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x11AAE90", Offset = "0x11AAE90", VA = "0x11AAE90")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x11ABFD0", Offset = "0x11ABFD0", VA = "0x11ABFD0")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x11A96BC", Offset = "0x11A96BC", VA = "0x11A96BC")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x11AB0A8", Offset = "0x11AB0A8", VA = "0x11AB0A8")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	internal enum ParserToken
	{
		[Token(Token = "0x4001549")]
		None = 65536,
		[Token(Token = "0x400154A")]
		Number,
		[Token(Token = "0x400154B")]
		True,
		[Token(Token = "0x400154C")]
		False,
		[Token(Token = "0x400154D")]
		Null,
		[Token(Token = "0x400154E")]
		CharSeq,
		[Token(Token = "0x400154F")]
		Char,
		[Token(Token = "0x4001550")]
		Text,
		[Token(Token = "0x4001551")]
		Object,
		[Token(Token = "0x4001552")]
		ObjectPrime,
		[Token(Token = "0x4001553")]
		Pair,
		[Token(Token = "0x4001554")]
		PairRest,
		[Token(Token = "0x4001555")]
		Array,
		[Token(Token = "0x4001556")]
		ArrayPrime,
		[Token(Token = "0x4001557")]
		Value,
		[Token(Token = "0x4001558")]
		ValueRest,
		[Token(Token = "0x4001559")]
		String,
		[Token(Token = "0x400155A")]
		End,
		[Token(Token = "0x400155B")]
		Epsilon
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x20002D7")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x2000612")]
		public class ListIndices
		{
			[Token(Token = "0x4002E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> m_listIndices;

			[Token(Token = "0x60024D0")]
			[Address(RVA = "0x233391C", Offset = "0x233391C", VA = "0x233391C")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000613")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x4002E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex0;

			[Token(Token = "0x4002E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex1;

			[Token(Token = "0x4002E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int _boneIndex2;

			[Token(Token = "0x4002E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int _boneIndex3;

			[Token(Token = "0x4002E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight0;

			[Token(Token = "0x4002E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight1;

			[Token(Token = "0x4002E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _boneWeight2;

			[Token(Token = "0x4002E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _boneWeight3;

			[Token(Token = "0x60024D1")]
			[Address(RVA = "0x2333B24", Offset = "0x2333B24", VA = "0x2333B24")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x60024D2")]
			[Address(RVA = "0x2333BEC", Offset = "0x2333BEC", VA = "0x2333BEC")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x2000614")]
		public class UniqueVertex
		{
			[Token(Token = "0x4002E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedX;

			[Token(Token = "0x4002E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_nFixedY;

			[Token(Token = "0x4002E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nFixedZ;

			[Token(Token = "0x4002E1B")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x2333CA4", Offset = "0x2333CA4", VA = "0x2333CA4", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D4")]
			[Address(RVA = "0x2333D64", Offset = "0x2333D64", VA = "0x2333D64", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x2333990", Offset = "0x2333990", VA = "0x2333990")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x60024D6")]
			[Address(RVA = "0x2333DC4", Offset = "0x2333DC4", VA = "0x2333DC4")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60024D7")]
			[Address(RVA = "0x2333E74", Offset = "0x2333E74", VA = "0x2333E74")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D8")]
			[Address(RVA = "0x2333E90", Offset = "0x2333E90", VA = "0x2333E90")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x2333D78", Offset = "0x2333D78", VA = "0x2333D78")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x2333EBC", Offset = "0x2333EBC", VA = "0x2333EBC")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x2333E50", Offset = "0x2333E50", VA = "0x2333E50")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000615")]
		private class RepeatedVertex
		{
			[Token(Token = "0x4002E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _nFaceIndex;

			[Token(Token = "0x4002E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x170002F0")]
			public int FaceIndex
			{
				[Token(Token = "0x60024DC")]
				[Address(RVA = "0x2333BD4", Offset = "0x2333BD4", VA = "0x2333BD4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002F1")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x60024DD")]
				[Address(RVA = "0x2333BDC", Offset = "0x2333BDC", VA = "0x2333BDC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x23339E0", Offset = "0x23339E0", VA = "0x23339E0")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x2000616")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x4002E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nUniqueIndex;

			[Token(Token = "0x4002E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x170002F2")]
			public int UniqueIndex
			{
				[Token(Token = "0x60024DF")]
				[Address(RVA = "0x2333BE4", Offset = "0x2333BE4", VA = "0x2333BE4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x2333A80", Offset = "0x2333A80", VA = "0x2333A80")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x2333A18", Offset = "0x2333A18", VA = "0x2333A18")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x170000E3")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x2333360", Offset = "0x2333360", VA = "0x2333360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x2333368", Offset = "0x2333368", VA = "0x2333368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x6001200")]
			[Address(RVA = "0x2333370", Offset = "0x2333370", VA = "0x2333370")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0x2333378", Offset = "0x2333378", VA = "0x2333378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x2333380", Offset = "0x2333380", VA = "0x2333380")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x2333BCC", Offset = "0x2333BCC", VA = "0x2333BCC")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002D8")]
	public class RelevanceSphere
	{
		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bExpanded;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 m_v3Position;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fRelevance;

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x2333F54", Offset = "0x2333F54", VA = "0x2333F54")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x2333FD0", Offset = "0x2333FD0", VA = "0x2333FD0")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x2000617")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x2000618")]
		private class Triangle
		{
			[Token(Token = "0x4002E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x4002E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_bUVData;

			[Token(Token = "0x4002E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] m_aUV;

			[Token(Token = "0x4002E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] m_aIndices;

			[Token(Token = "0x4002E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x4002E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int m_nSubMesh;

			[Token(Token = "0x170002F3")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x60024E6")]
				[Address(RVA = "0xFC5B88", Offset = "0xFC5B88", VA = "0xFC5B88")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F4")]
			public bool HasUVData
			{
				[Token(Token = "0x60024E7")]
				[Address(RVA = "0xFC5B90", Offset = "0xFC5B90", VA = "0xFC5B90")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002F5")]
			public int[] IndicesUV
			{
				[Token(Token = "0x60024E8")]
				[Address(RVA = "0xFC5B98", Offset = "0xFC5B98", VA = "0xFC5B98")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			public Vector3 Normal
			{
				[Token(Token = "0x60024E9")]
				[Address(RVA = "0xFC5BA0", Offset = "0xFC5BA0", VA = "0xFC5BA0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170002F7")]
			public int[] Indices
			{
				[Token(Token = "0x60024EA")]
				[Address(RVA = "0xFC5BAC", Offset = "0xFC5BAC", VA = "0xFC5BAC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xFC5BB4", Offset = "0xFC5BB4", VA = "0xFC5BB4")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x60024EC")]
			[Address(RVA = "0xFC6094", Offset = "0xFC6094", VA = "0xFC6094")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xFC62F8", Offset = "0xFC62F8", VA = "0xFC62F8")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x60024EE")]
			[Address(RVA = "0xFC5F08", Offset = "0xFC5F08", VA = "0xFC5F08")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x60024EF")]
			[Address(RVA = "0xFC6364", Offset = "0xFC6364", VA = "0xFC6364")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x60024F0")]
			[Address(RVA = "0xFC6450", Offset = "0xFC6450", VA = "0xFC6450")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x60024F1")]
			[Address(RVA = "0xFC648C", Offset = "0xFC648C", VA = "0xFC648C")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x60024F2")]
			[Address(RVA = "0xFC6580", Offset = "0xFC6580", VA = "0xFC6580")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x60024F3")]
			[Address(RVA = "0xFC65BC", Offset = "0xFC65BC", VA = "0xFC65BC")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x2000619")]
		private class TriangleList
		{
			[Token(Token = "0x4002E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x60024F4")]
			[Address(RVA = "0xFC6824", Offset = "0xFC6824", VA = "0xFC6824")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x200061A")]
		private class Vertex
		{
			[Token(Token = "0x4002E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_v3Position;

			[Token(Token = "0x4002E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x4002E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x4002E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x4002E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int m_nID;

			[Token(Token = "0x4002E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x4002E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x4002E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m_fObjDist;

			[Token(Token = "0x4002E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vertex m_collapse;

			[Token(Token = "0x4002E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int m_nHeapSpot;

			[Token(Token = "0x60024F5")]
			[Address(RVA = "0xFC6898", Offset = "0xFC6898", VA = "0xFC6898")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x60024F6")]
			[Address(RVA = "0xFC69C8", Offset = "0xFC69C8", VA = "0xFC69C8")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x60024F7")]
			[Address(RVA = "0xFC620C", Offset = "0xFC620C", VA = "0xFC620C")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x60024F8")]
			[Address(RVA = "0xFC6A9C", Offset = "0xFC6A9C", VA = "0xFC6A9C")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200061B")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0xFC6EE8", Offset = "0xFC6EE8", VA = "0xFC6EE8", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x60024FA")]
			[Address(RVA = "0xFC7074", Offset = "0xFC7074", VA = "0xFC7074", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x60024FB")]
			[Address(RVA = "0xFC7094", Offset = "0xFC7094", VA = "0xFC7094")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x200061C")]
		private class VertexDataHash
		{
			[Token(Token = "0x4002E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x4002E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _v3Normal;

			[Token(Token = "0x4002E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x4002E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x4002E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color32 _color;

			[Token(Token = "0x4002E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x170002F8")]
			public Vector3 Vertex
			{
				[Token(Token = "0x60024FC")]
				[Address(RVA = "0xFC6BAC", Offset = "0xFC6BAC", VA = "0xFC6BAC")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170002F9")]
			public Vector3 Normal
			{
				[Token(Token = "0x60024FD")]
				[Address(RVA = "0xFC6BB8", Offset = "0xFC6BB8", VA = "0xFC6BB8")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170002FA")]
			public Vector2 UV1
			{
				[Token(Token = "0x60024FE")]
				[Address(RVA = "0xFC6BC4", Offset = "0xFC6BC4", VA = "0xFC6BC4")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170002FB")]
			public Vector2 UV2
			{
				[Token(Token = "0x60024FF")]
				[Address(RVA = "0xFC6BCC", Offset = "0xFC6BCC", VA = "0xFC6BCC")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170002FC")]
			public Color32 Color
			{
				[Token(Token = "0x6002500")]
				[Address(RVA = "0xFC6BD4", Offset = "0xFC6BD4", VA = "0xFC6BD4")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x6002501")]
			[Address(RVA = "0xFC6BDC", Offset = "0xFC6BDC", VA = "0xFC6BDC")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x6002502")]
			[Address(RVA = "0xFC6CC4", Offset = "0xFC6CC4", VA = "0xFC6CC4", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002503")]
			[Address(RVA = "0xFC6E80", Offset = "0xFC6E80", VA = "0xFC6E80", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x6002504")]
			[Address(RVA = "0xFC6EA0", Offset = "0xFC6EA0", VA = "0xFC6EA0")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002505")]
			[Address(RVA = "0xFC6EBC", Offset = "0xFC6EBC", VA = "0xFC6EBC")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CAA0", Offset = "0xD0CAA0")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh sourceMesh;

			[Token(Token = "0x4002E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gameObject;

			[Token(Token = "0x4002E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4002E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <nVertices>5__2;

			[Token(Token = "0x170002FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002509")]
				[Address(RVA = "0x233932C", Offset = "0x233932C", VA = "0x233932C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600250B")]
				[Address(RVA = "0x2339394", Offset = "0x2339394", VA = "0x2339394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002506")]
			[Address(RVA = "0x23343A0", Offset = "0x23343A0", VA = "0x23343A0")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002507")]
			[Address(RVA = "0x2338974", Offset = "0x2338974", VA = "0x2338974", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002508")]
			[Address(RVA = "0x2338978", Offset = "0x2338978", VA = "0x2338978", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600250A")]
			[Address(RVA = "0x2339334", Offset = "0x2339334", VA = "0x2339334", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CAB0", Offset = "0xD0CAB0")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nVertices;

			[Token(Token = "0x4002E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh meshOut;

			[Token(Token = "0x4002E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject gameObject;

			[Token(Token = "0x4002E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x4002E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x170002FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600250F")]
				[Address(RVA = "0x2337860", Offset = "0x2337860", VA = "0x2337860", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000300")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002511")]
				[Address(RVA = "0x23378C8", Offset = "0x23378C8", VA = "0x23378C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600250C")]
			[Address(RVA = "0x2334474", Offset = "0x2334474", VA = "0x2334474")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0x2336D50", Offset = "0x2336D50", VA = "0x2336D50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600250E")]
			[Address(RVA = "0x2336D54", Offset = "0x2336D54", VA = "0x2336D54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002510")]
			[Address(RVA = "0x2337868", Offset = "0x2337868", VA = "0x2337868", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CAC0", Offset = "0xD0CAC0")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshIn;

			[Token(Token = "0x4002E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x4002E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh meshOut;

			[Token(Token = "0x4002E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject gameObject;

			[Token(Token = "0x4002E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x4002E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x4002E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x4002E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x4002E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x4002E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x4002E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x4002E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x4002E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x4002E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x4002E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x4002E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x4002E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x4002E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x4002E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x4002E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <bUV1>5__17;

			[Token(Token = "0x4002E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
			private bool <bUV2>5__18;

			[Token(Token = "0x4002E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
			private bool <bNormal>5__19;

			[Token(Token = "0x4002E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
			private bool <bTangent>5__20;

			[Token(Token = "0x4002E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x4002E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x4002E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <strMesh>5__23;

			[Token(Token = "0x4002E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int <i>5__24;

			[Token(Token = "0x17000301")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002515")]
				[Address(RVA = "0x2338904", Offset = "0x2338904", VA = "0x2338904", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000302")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002517")]
				[Address(RVA = "0x233896C", Offset = "0x233896C", VA = "0x233896C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002512")]
			[Address(RVA = "0x2334E98", Offset = "0x2334E98", VA = "0x2334E98")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002513")]
			[Address(RVA = "0x23378D0", Offset = "0x23378D0", VA = "0x23378D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002514")]
			[Address(RVA = "0x23378D4", Offset = "0x23378D4", VA = "0x23378D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002516")]
			[Address(RVA = "0x233890C", Offset = "0x233890C", VA = "0x233890C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0CAD0", Offset = "0xD0CAD0")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform transform;

			[Token(Token = "0x4002E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x4002E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x17000303")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600251B")]
				[Address(RVA = "0x2336CE0", Offset = "0x2336CE0", VA = "0x2336CE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000304")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600251D")]
				[Address(RVA = "0x2336D48", Offset = "0x2336D48", VA = "0x2336D48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002518")]
			[Address(RVA = "0x23357C0", Offset = "0x23357C0", VA = "0x23357C0")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002519")]
			[Address(RVA = "0x233697C", Offset = "0x233697C", VA = "0x233697C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600251A")]
			[Address(RVA = "0x2336980", Offset = "0x2336980", VA = "0x2336980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600251C")]
			[Address(RVA = "0x2336CE8", Offset = "0x2336CE8", VA = "0x2336CE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16F5C", Offset = "0xD16F5C")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD16F6C", Offset = "0xD16F6C")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x4001568")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexMap;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_meshOriginal;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseCurvature;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[SerializeField]
		[HideInInspector]
		private bool m_bProtectTexture;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x170000E7")]
		public static bool Cancelled
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0x23340EC", Offset = "0x23340EC", VA = "0x23340EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23858", Offset = "0xD23858")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001207")]
			[Address(RVA = "0x2334154", Offset = "0x2334154", VA = "0x2334154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23868", Offset = "0xD23868")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0x23341C4", Offset = "0x23341C4", VA = "0x23341C4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001209")]
			[Address(RVA = "0x233422C", Offset = "0x233422C", VA = "0x233422C")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0x2334298", Offset = "0x2334298", VA = "0x2334298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23878", Offset = "0xD23878")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120B")]
			[Address(RVA = "0x23342A0", Offset = "0x23342A0", VA = "0x23342A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23888", Offset = "0xD23888")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0x23342AC", Offset = "0x23342AC", VA = "0x23342AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120D")]
			[Address(RVA = "0x23342B4", Offset = "0x23342B4", VA = "0x23342B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public bool UseCurvature
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0x23342C0", Offset = "0x23342C0", VA = "0x23342C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600120F")]
			[Address(RVA = "0x23342C8", Offset = "0x23342C8", VA = "0x23342C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public bool ProtectTexture
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0x23342D4", Offset = "0x23342D4", VA = "0x23342D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x23342DC", Offset = "0x23342DC", VA = "0x23342DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public bool LockBorder
		{
			[Token(Token = "0x6001212")]
			[Address(RVA = "0x23342E8", Offset = "0x23342E8", VA = "0x23342E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001213")]
			[Address(RVA = "0x23342F0", Offset = "0x23342F0", VA = "0x23342F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x23342FC", Offset = "0x23342FC", VA = "0x23342FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23898", Offset = "0xD23898")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x23343CC", Offset = "0x23343CC", VA = "0x23343CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD238FC", Offset = "0xD238FC")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x23344A0", Offset = "0x23344A0", VA = "0x23344A0")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x23344A8", Offset = "0x23344A8", VA = "0x23344A8")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x23344EC", Offset = "0x23344EC", VA = "0x23344EC")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x2334DF4", Offset = "0x2334DF4", VA = "0x2334DF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23960", Offset = "0xD23960")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x2334EC4", Offset = "0x2334EC4", VA = "0x2334EC4")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x2334F5C", Offset = "0x2334F5C", VA = "0x2334F5C")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x2335418", Offset = "0x2335418", VA = "0x2335418")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x2335728", Offset = "0x2335728", VA = "0x2335728")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD239C4", Offset = "0xD239C4")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x23357EC", Offset = "0x23357EC", VA = "0x23357EC")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x2336100", Offset = "0x2336100", VA = "0x2336100")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x23362B8", Offset = "0x23362B8", VA = "0x23362B8")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x2336558", Offset = "0x2336558", VA = "0x2336558")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x233676C", Offset = "0x233676C", VA = "0x233676C")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x2336810", Offset = "0x2336810", VA = "0x2336810")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x2335D34", Offset = "0x2335D34", VA = "0x2335D34")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x2335F08", Offset = "0x2335F08", VA = "0x2335F08")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x23368DC", Offset = "0x23368DC", VA = "0x23368DC")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x2336770", Offset = "0x2336770", VA = "0x2336770")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x233695C", Offset = "0x233695C", VA = "0x233695C")]
		public Simplifier()
		{
		}
	}
}
namespace UnityStandardAssets.Water
{
	[Token(Token = "0x20002DA")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B05C", Offset = "0xD0B05C")]
	public class Displace : MonoBehaviour
	{
		[Token(Token = "0x600122A")]
		[Address(RVA = "0xFCB988", Offset = "0xFCB988", VA = "0xFCB988")]
		public void Awake()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xFCB9AC", Offset = "0xFCB9AC", VA = "0xFCB9AC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xFCBA0C", Offset = "0xFCBA0C", VA = "0xFCBA0C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xFCBA6C", Offset = "0xFCBA6C", VA = "0xFCBA6C")]
		public Displace()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B0D0", Offset = "0xD0B0D0")]
	public class GerstnerDisplace : Displace
	{
		[Token(Token = "0x600122E")]
		[Address(RVA = "0xFCBA74", Offset = "0xFCBA74", VA = "0xFCBA74")]
		public GerstnerDisplace()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class MeshContainer
	{
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xFCBA7C", Offset = "0xFCBA7C", VA = "0xFCBA7C")]
		public MeshContainer(Mesh m)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xFCBAD0", Offset = "0xFCBAD0", VA = "0xFCBAD0")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B144", Offset = "0xD0B144")]
	public class PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask reflectionMask;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool reflectSkybox;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color clearColor;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string reflectionSampler;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float clipPlaneOffset;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_SharedMaterial;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xFCBB14", Offset = "0xFCBB14", VA = "0xFCBB14")]
		public void Start()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xFCBC04", Offset = "0xFCBC04", VA = "0xFCBC04")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xFCBF0C", Offset = "0xFCBF0C", VA = "0xFCBF0C")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xFCBFC0", Offset = "0xFCBFC0", VA = "0xFCBFC0")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xFCC0C8", Offset = "0xFCC0C8", VA = "0xFCC0C8")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xFCC990", Offset = "0xFCC990", VA = "0xFCC990")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xFCC9F0", Offset = "0xFCC9F0", VA = "0xFCC9F0")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xFCCAE8", Offset = "0xFCCAE8", VA = "0xFCCAE8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xFCCB48", Offset = "0xFCCB48", VA = "0xFCCB48")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xFCC230", Offset = "0xFCC230", VA = "0xFCC230")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xFCCBA8", Offset = "0xFCCBA8", VA = "0xFCCBA8")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xFCD0A8", Offset = "0xFCD0A8", VA = "0xFCD0A8")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xFCCC0C", Offset = "0xFCCC0C", VA = "0xFCCC0C")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xFCD2E0", Offset = "0xFCD2E0", VA = "0xFCD2E0")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xFCCEC4", Offset = "0xFCCEC4", VA = "0xFCCEC4")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xFCD300", Offset = "0xFCD300", VA = "0xFCD300")]
		public PlanarReflection()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B1B8", Offset = "0xD0B1B8")]
	[ExecuteInEditMode]
	public class SpecularLighting : MonoBehaviour
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform specularLight;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaterBase m_WaterBase;

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xFCD374", Offset = "0xFCD374", VA = "0xFCD374")]
		public void Start()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xFCD460", Offset = "0xFCD460", VA = "0xFCD460")]
		public void Update()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xFCD688", Offset = "0xFCD688", VA = "0xFCD688")]
		public SpecularLighting()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[ExecuteInEditMode]
	public class Water : MonoBehaviour
	{
		[Token(Token = "0x2000621")]
		public enum WaterMode
		{
			[Token(Token = "0x4002E72")]
			Simple,
			[Token(Token = "0x4002E73")]
			Reflective,
			[Token(Token = "0x4002E74")]
			Refractive
		}

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaterMode waterMode;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disablePixelLights;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int textureSize;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask refractLayers;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, Camera> m_RefractionCameras;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_RefractionTexture;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaterMode m_HardwareWaterSupport;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_OldRefractionTextureSize;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideWater;

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xFCD690", Offset = "0xFCD690", VA = "0xFCD690")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xFCF0C4", Offset = "0xFCF0C4", VA = "0xFCF0C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xFCF3B0", Offset = "0xFCF3B0", VA = "0xFCF3B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xFCE9E0", Offset = "0xFCE9E0", VA = "0xFCE9E0")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xFCDFD8", Offset = "0xFCDFD8", VA = "0xFCDFD8")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xFCDFC4", Offset = "0xFCDFC4", VA = "0xFCDFC4")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xFCDE7C", Offset = "0xFCDE7C", VA = "0xFCDE7C")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xFCEEE0", Offset = "0xFCEEE0", VA = "0xFCEEE0")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xFCEC3C", Offset = "0xFCEC3C", VA = "0xFCEC3C")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xFCF63C", Offset = "0xFCF63C", VA = "0xFCF63C")]
		public Water()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public enum WaterQuality
	{
		[Token(Token = "0x4001593")]
		High = 2,
		[Token(Token = "0x4001594")]
		Medium = 1,
		[Token(Token = "0x4001595")]
		Low = 0
	}
	[Token(Token = "0x20002E1")]
	[ExecuteInEditMode]
	public class WaterBase : MonoBehaviour
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material sharedMaterial;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterQuality waterQuality;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool edgeBlend;

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xFCF718", Offset = "0xFCF718", VA = "0xFCF718")]
		public void UpdateShader()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xFCF898", Offset = "0xFCF898", VA = "0xFCF898")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xFCF94C", Offset = "0xFCF94C", VA = "0xFCF94C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xFCF9D0", Offset = "0xFCF9D0", VA = "0xFCF9D0")]
		public WaterBase()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	[ExecuteInEditMode]
	public class WaterTile : MonoBehaviour
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlanarReflection reflection;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterBase waterBase;

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xFCF9E8", Offset = "0xFCF9E8", VA = "0xFCF9E8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xFCF9EC", Offset = "0xFCF9EC", VA = "0xFCF9EC")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xFCFB90", Offset = "0xFCFB90", VA = "0xFCFB90")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xFCFC98", Offset = "0xFCFC98", VA = "0xFCFC98")]
		public WaterTile()
		{
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20002E3")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CAE0", Offset = "0xD0CAE0")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CAF4", Offset = "0xD0CAF4")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CB08", Offset = "0xD0CB08")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CB1C", Offset = "0xD0CB1C")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CB30", Offset = "0xD0CB30")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CB44", Offset = "0xD0CB44")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CB58", Offset = "0xD0CB58")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CB6C", Offset = "0xD0CB6C")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CB80", Offset = "0xD0CB80")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CB94", Offset = "0xD0CB94")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CBA8", Offset = "0xD0CBA8")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CBBC", Offset = "0xD0CBBC")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CBD0", Offset = "0xD0CBD0")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CBE4", Offset = "0xD0CBE4")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CBF8", Offset = "0xD0CBF8")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CC0C", Offset = "0xD0CC0C")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CC20", Offset = "0xD0CC20")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CC34", Offset = "0xD0CC34")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CC48", Offset = "0xD0CC48")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CC5C", Offset = "0xD0CC5C")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CC70", Offset = "0xD0CC70")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CC84", Offset = "0xD0CC84")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CC98", Offset = "0xD0CC98")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CCAC", Offset = "0xD0CCAC")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CCC0", Offset = "0xD0CCC0")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CCD4", Offset = "0xD0CCD4")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CCE8", Offset = "0xD0CCE8")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CCFC", Offset = "0xD0CCFC")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CD10", Offset = "0xD0CD10")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CD24", Offset = "0xD0CD24")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CD38", Offset = "0xD0CD38")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CD4C", Offset = "0xD0CD4C")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CD60", Offset = "0xD0CD60")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CD74", Offset = "0xD0CD74")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CD88", Offset = "0xD0CD88")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CD9C", Offset = "0xD0CD9C")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CDB0", Offset = "0xD0CDB0")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CDC4", Offset = "0xD0CDC4")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CDD8", Offset = "0xD0CDD8")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CDEC", Offset = "0xD0CDEC")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CE00", Offset = "0xD0CE00")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CE14", Offset = "0xD0CE14")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CE28", Offset = "0xD0CE28")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CE3C", Offset = "0xD0CE3C")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CE50", Offset = "0xD0CE50")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CE64", Offset = "0xD0CE64")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x2000650")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CE78", Offset = "0xD0CE78")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x20002E4")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CE8C", Offset = "0xD0CE8C")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CEA0", Offset = "0xD0CEA0")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000653")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CEB4", Offset = "0xD0CEB4")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x20002E5")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CEC8", Offset = "0xD0CEC8")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CEDC", Offset = "0xD0CEDC")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CEF0", Offset = "0xD0CEF0")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CF04", Offset = "0xD0CF04")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CF18", Offset = "0xD0CF18")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CF2C", Offset = "0xD0CF2C")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CF40", Offset = "0xD0CF40")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CF54", Offset = "0xD0CF54")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CF68", Offset = "0xD0CF68")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CF7C", Offset = "0xD0CF7C")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CF90", Offset = "0xD0CF90")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200065F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CFA4", Offset = "0xD0CFA4")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x20002E6")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CFB8", Offset = "0xD0CFB8")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CFCC", Offset = "0xD0CFCC")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000662")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CFE0", Offset = "0xD0CFE0")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0CFF4", Offset = "0xD0CFF4")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D008", Offset = "0xD0D008")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D01C", Offset = "0xD0D01C")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D030", Offset = "0xD0D030")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D044", Offset = "0xD0D044")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D058", Offset = "0xD0D058")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D06C", Offset = "0xD0D06C")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D080", Offset = "0xD0D080")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D094", Offset = "0xD0D094")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D0A8", Offset = "0xD0D0A8")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D0BC", Offset = "0xD0D0BC")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D0D0", Offset = "0xD0D0D0")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D0E4", Offset = "0xD0D0E4")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D0F8", Offset = "0xD0D0F8")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D10C", Offset = "0xD0D10C")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D120", Offset = "0xD0D120")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D134", Offset = "0xD0D134")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D148", Offset = "0xD0D148")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D15C", Offset = "0xD0D15C")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D170", Offset = "0xD0D170")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D184", Offset = "0xD0D184")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D198", Offset = "0xD0D198")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D1AC", Offset = "0xD0D1AC")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D1C0", Offset = "0xD0D1C0")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D1D4", Offset = "0xD0D1D4")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D1E8", Offset = "0xD0D1E8")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D1FC", Offset = "0xD0D1FC")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D210", Offset = "0xD0D210")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x20002E7")]
	public struct IVRChaperone
	{
		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D224", Offset = "0xD0D224")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D238", Offset = "0xD0D238")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D24C", Offset = "0xD0D24C")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D260", Offset = "0xD0D260")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D274", Offset = "0xD0D274")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D288", Offset = "0xD0D288")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D29C", Offset = "0xD0D29C")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D2B0", Offset = "0xD0D2B0")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x20002E8")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D2C4", Offset = "0xD0D2C4")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D2D8", Offset = "0xD0D2D8")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D2EC", Offset = "0xD0D2EC")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D300", Offset = "0xD0D300")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D314", Offset = "0xD0D314")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D328", Offset = "0xD0D328")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D33C", Offset = "0xD0D33C")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D350", Offset = "0xD0D350")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D364", Offset = "0xD0D364")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D378", Offset = "0xD0D378")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D38C", Offset = "0xD0D38C")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D3A0", Offset = "0xD0D3A0")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D3B4", Offset = "0xD0D3B4")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D3C8", Offset = "0xD0D3C8")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D3DC", Offset = "0xD0D3DC")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D3F0", Offset = "0xD0D3F0")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D404", Offset = "0xD0D404")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D418", Offset = "0xD0D418")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D42C", Offset = "0xD0D42C")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D440", Offset = "0xD0D440")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x20002E9")]
	public struct IVRCompositor
	{
		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D454", Offset = "0xD0D454")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D468", Offset = "0xD0D468")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D47C", Offset = "0xD0D47C")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D490", Offset = "0xD0D490")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200069F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D4A4", Offset = "0xD0D4A4")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x20006A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D4B8", Offset = "0xD0D4B8")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D4CC", Offset = "0xD0D4CC")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D4E0", Offset = "0xD0D4E0")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D4F4", Offset = "0xD0D4F4")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D508", Offset = "0xD0D508")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D51C", Offset = "0xD0D51C")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x20006A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D530", Offset = "0xD0D530")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x20006A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D544", Offset = "0xD0D544")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x20006A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D558", Offset = "0xD0D558")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x20006A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D56C", Offset = "0xD0D56C")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x20006AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D580", Offset = "0xD0D580")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D594", Offset = "0xD0D594")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D5A8", Offset = "0xD0D5A8")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D5BC", Offset = "0xD0D5BC")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D5D0", Offset = "0xD0D5D0")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x20006AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D5E4", Offset = "0xD0D5E4")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D5F8", Offset = "0xD0D5F8")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x20006B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D60C", Offset = "0xD0D60C")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x20006B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D620", Offset = "0xD0D620")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D634", Offset = "0xD0D634")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D648", Offset = "0xD0D648")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D65C", Offset = "0xD0D65C")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D670", Offset = "0xD0D670")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x20006B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D684", Offset = "0xD0D684")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D698", Offset = "0xD0D698")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D6AC", Offset = "0xD0D6AC")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D6C0", Offset = "0xD0D6C0")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D6D4", Offset = "0xD0D6D4")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D6E8", Offset = "0xD0D6E8")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D6FC", Offset = "0xD0D6FC")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D710", Offset = "0xD0D710")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D724", Offset = "0xD0D724")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D738", Offset = "0xD0D738")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D74C", Offset = "0xD0D74C")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D760", Offset = "0xD0D760")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D774", Offset = "0xD0D774")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20006C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D788", Offset = "0xD0D788")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x20006C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D79C", Offset = "0xD0D79C")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x20002EA")]
	public struct IVROverlay
	{
		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D7B0", Offset = "0xD0D7B0")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D7C4", Offset = "0xD0D7C4")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D7D8", Offset = "0xD0D7D8")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D7EC", Offset = "0xD0D7EC")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D800", Offset = "0xD0D800")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D814", Offset = "0xD0D814")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D828", Offset = "0xD0D828")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20006CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D83C", Offset = "0xD0D83C")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x20006CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D850", Offset = "0xD0D850")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D864", Offset = "0xD0D864")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D878", Offset = "0xD0D878")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D88C", Offset = "0xD0D88C")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D8A0", Offset = "0xD0D8A0")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D8B4", Offset = "0xD0D8B4")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x20006D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D8C8", Offset = "0xD0D8C8")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x20006D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D8DC", Offset = "0xD0D8DC")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D8F0", Offset = "0xD0D8F0")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D904", Offset = "0xD0D904")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D918", Offset = "0xD0D918")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D92C", Offset = "0xD0D92C")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D940", Offset = "0xD0D940")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D954", Offset = "0xD0D954")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x20006DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D968", Offset = "0xD0D968")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x20006DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D97C", Offset = "0xD0D97C")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D990", Offset = "0xD0D990")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x20006DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D9A4", Offset = "0xD0D9A4")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x20006E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D9B8", Offset = "0xD0D9B8")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x20006E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D9CC", Offset = "0xD0D9CC")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D9E0", Offset = "0xD0D9E0")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20006E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0D9F4", Offset = "0xD0D9F4")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20006E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DA08", Offset = "0xD0DA08")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x20006E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DA1C", Offset = "0xD0DA1C")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x20006E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DA30", Offset = "0xD0DA30")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DA44", Offset = "0xD0DA44")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DA58", Offset = "0xD0DA58")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DA6C", Offset = "0xD0DA6C")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DA80", Offset = "0xD0DA80")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DA94", Offset = "0xD0DA94")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DAA8", Offset = "0xD0DAA8")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DABC", Offset = "0xD0DABC")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DAD0", Offset = "0xD0DAD0")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20006EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DAE4", Offset = "0xD0DAE4")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DAF8", Offset = "0xD0DAF8")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DB0C", Offset = "0xD0DB0C")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x20006F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DB20", Offset = "0xD0DB20")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DB34", Offset = "0xD0DB34")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DB48", Offset = "0xD0DB48")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x20006F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DB5C", Offset = "0xD0DB5C")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DB70", Offset = "0xD0DB70")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DB84", Offset = "0xD0DB84")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20006F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DB98", Offset = "0xD0DB98")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DBAC", Offset = "0xD0DBAC")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DBC0", Offset = "0xD0DBC0")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20006FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DBD4", Offset = "0xD0DBD4")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DBE8", Offset = "0xD0DBE8")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20006FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DBFC", Offset = "0xD0DBFC")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20006FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DC10", Offset = "0xD0DC10")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DC24", Offset = "0xD0DC24")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x2000700")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DC38", Offset = "0xD0DC38")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x2000701")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DC4C", Offset = "0xD0DC4C")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DC60", Offset = "0xD0DC60")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x2000703")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DC74", Offset = "0xD0DC74")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x2000704")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DC88", Offset = "0xD0DC88")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DC9C", Offset = "0xD0DC9C")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x2000706")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DCB0", Offset = "0xD0DCB0")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x2000707")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DCC4", Offset = "0xD0DCC4")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x2000708")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DCD8", Offset = "0xD0DCD8")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x2000709")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DCEC", Offset = "0xD0DCEC")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x200070A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DD00", Offset = "0xD0DD00")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x200070B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DD14", Offset = "0xD0DD14")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x200070C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DD28", Offset = "0xD0DD28")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x200070D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DD3C", Offset = "0xD0DD3C")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x200070E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DD50", Offset = "0xD0DD50")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x200070F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DD64", Offset = "0xD0DD64")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000710")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DD78", Offset = "0xD0DD78")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DD8C", Offset = "0xD0DD8C")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x2000712")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DDA0", Offset = "0xD0DDA0")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x2000713")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DDB4", Offset = "0xD0DDB4")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x2000714")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DDC8", Offset = "0xD0DDC8")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x2000715")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DDDC", Offset = "0xD0DDDC")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x2000716")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DDF0", Offset = "0xD0DDF0")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x2000717")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DE04", Offset = "0xD0DE04")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x20002EB")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x2000718")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DE18", Offset = "0xD0DE18")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x2000719")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DE2C", Offset = "0xD0DE2C")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x200071A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DE40", Offset = "0xD0DE40")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x200071B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DE54", Offset = "0xD0DE54")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x200071C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DE68", Offset = "0xD0DE68")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x200071D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DE7C", Offset = "0xD0DE7C")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x200071E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DE90", Offset = "0xD0DE90")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x200071F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DEA4", Offset = "0xD0DEA4")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000720")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DEB8", Offset = "0xD0DEB8")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000721")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DECC", Offset = "0xD0DECC")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000722")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DEE0", Offset = "0xD0DEE0")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000723")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DEF4", Offset = "0xD0DEF4")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000724")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DF08", Offset = "0xD0DF08")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x2000725")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DF1C", Offset = "0xD0DF1C")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DF30", Offset = "0xD0DF30")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000727")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DF44", Offset = "0xD0DF44")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x2000728")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DF58", Offset = "0xD0DF58")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x2000729")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DF6C", Offset = "0xD0DF6C")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x20002EC")]
	public struct IVRNotifications
	{
		[Token(Token = "0x200072A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DF80", Offset = "0xD0DF80")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x200072B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DF94", Offset = "0xD0DF94")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x20002ED")]
	public struct IVRSettings
	{
		[Token(Token = "0x200072C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DFA8", Offset = "0xD0DFA8")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x200072D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DFBC", Offset = "0xD0DFBC")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DFD0", Offset = "0xD0DFD0")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x200072F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DFE4", Offset = "0xD0DFE4")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000730")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0DFF8", Offset = "0xD0DFF8")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E00C", Offset = "0xD0E00C")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000732")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E020", Offset = "0xD0E020")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000733")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E034", Offset = "0xD0E034")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000734")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E048", Offset = "0xD0E048")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000735")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E05C", Offset = "0xD0E05C")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E070", Offset = "0xD0E070")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x2000737")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E084", Offset = "0xD0E084")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x20002EE")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x2000738")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E098", Offset = "0xD0E098")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000739")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E0AC", Offset = "0xD0E0AC")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x200073A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E0C0", Offset = "0xD0E0C0")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x200073B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E0D4", Offset = "0xD0E0D4")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x200073C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E0E8", Offset = "0xD0E0E8")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x200073D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E0FC", Offset = "0xD0E0FC")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200073E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E110", Offset = "0xD0E110")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20002EF")]
	public struct IVRResources
	{
		[Token(Token = "0x200073F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E124", Offset = "0xD0E124")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000740")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E138", Offset = "0xD0E138")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20002F0")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E14C", Offset = "0xD0E14C")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E160", Offset = "0xD0E160")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;
	}
	[Token(Token = "0x20002F1")]
	public class CVRSystem
	{
		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E174", Offset = "0xD0E174")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000744")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x4002E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x4002E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E188", Offset = "0xD0E188")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x2000746")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x4002E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x4002E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x2000747")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E19C", Offset = "0xD0E19C")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x2000748")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x4002E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x4002E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x1246468", Offset = "0x1246468", VA = "0x1246468")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1246570", Offset = "0x1246570", VA = "0x1246570")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1246594", Offset = "0x1246594", VA = "0x1246594")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x12465B0", Offset = "0x12465B0", VA = "0x12465B0")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x12465DC", Offset = "0x12465DC", VA = "0x12465DC")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x12465F8", Offset = "0x12465F8", VA = "0x12465F8")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1246614", Offset = "0x1246614", VA = "0x1246614")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1246638", Offset = "0x1246638", VA = "0x1246638")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x1246654", Offset = "0x1246654", VA = "0x1246654")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x1246674", Offset = "0x1246674", VA = "0x1246674")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x1246694", Offset = "0x1246694", VA = "0x1246694")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x12466B0", Offset = "0x12466B0", VA = "0x12466B0")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x12466D0", Offset = "0x12466D0", VA = "0x12466D0")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x12466F8", Offset = "0x12466F8", VA = "0x12466F8")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1246714", Offset = "0x1246714", VA = "0x1246714")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x1246730", Offset = "0x1246730", VA = "0x1246730")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x124674C", Offset = "0x124674C", VA = "0x124674C")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x1246778", Offset = "0x1246778", VA = "0x1246778")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x1246794", Offset = "0x1246794", VA = "0x1246794")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x12467B0", Offset = "0x12467B0", VA = "0x12467B0")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x12467CC", Offset = "0x12467CC", VA = "0x12467CC")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x12467E8", Offset = "0x12467E8", VA = "0x12467E8")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1246804", Offset = "0x1246804", VA = "0x1246804")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x1246820", Offset = "0x1246820", VA = "0x1246820")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x124683C", Offset = "0x124683C", VA = "0x124683C")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x1246858", Offset = "0x1246858", VA = "0x1246858")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x1246874", Offset = "0x1246874", VA = "0x1246874")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x1246890", Offset = "0x1246890", VA = "0x1246890")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x12468AC", Offset = "0x12468AC", VA = "0x12468AC")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x12468C8", Offset = "0x12468C8", VA = "0x12468C8")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x12468E4", Offset = "0x12468E4", VA = "0x12468E4")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x1246978", Offset = "0x1246978", VA = "0x1246978")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x1246D60", Offset = "0x1246D60", VA = "0x1246D60")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x1246D7C", Offset = "0x1246D7C", VA = "0x1246D7C")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1246E10", Offset = "0x1246E10", VA = "0x1246E10")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1246E2C", Offset = "0x1246E2C", VA = "0x1246E2C")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1247260", Offset = "0x1247260", VA = "0x1247260")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x124770C", Offset = "0x124770C", VA = "0x124770C")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x1247728", Offset = "0x1247728", VA = "0x1247728")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x12477BC", Offset = "0x12477BC", VA = "0x12477BC")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x1247850", Offset = "0x1247850", VA = "0x1247850")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x124786C", Offset = "0x124786C", VA = "0x124786C")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x1247888", Offset = "0x1247888", VA = "0x1247888")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x12478A4", Offset = "0x12478A4", VA = "0x12478A4")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x12478C0", Offset = "0x12478C0", VA = "0x12478C0")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x12478DC", Offset = "0x12478DC", VA = "0x12478DC")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x12478F8", Offset = "0x12478F8", VA = "0x12478F8")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x1247914", Offset = "0x1247914", VA = "0x1247914")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1244164", Offset = "0x1244164", VA = "0x1244164")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x124426C", Offset = "0x124426C", VA = "0x124426C")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x1244298", Offset = "0x1244298", VA = "0x1244298")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x12442C4", Offset = "0x12442C4", VA = "0x12442C4")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1247C90", Offset = "0x1247C90", VA = "0x1247C90")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x1247D98", Offset = "0x1247D98", VA = "0x1247D98")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1247E2C", Offset = "0x1247E2C", VA = "0x1247E2C")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1247E4C", Offset = "0x1247E4C", VA = "0x1247E4C")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1247E74", Offset = "0x1247E74", VA = "0x1247E74")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1247E90", Offset = "0x1247E90", VA = "0x1247E90")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x1247EAC", Offset = "0x1247EAC", VA = "0x1247EAC")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x1247ECC", Offset = "0x1247ECC", VA = "0x1247ECC")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x1247EE8", Offset = "0x1247EE8", VA = "0x1247EE8")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x1247F04", Offset = "0x1247F04", VA = "0x1247F04")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x1247F28", Offset = "0x1247F28", VA = "0x1247F28")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x1247F44", Offset = "0x1247F44", VA = "0x1247F44")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x1247F64", Offset = "0x1247F64", VA = "0x1247F64")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x20002F4")]
	public class CVRApplications
	{
		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1238DC4", Offset = "0x1238DC4", VA = "0x1238DC4")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1238ECC", Offset = "0x1238ECC", VA = "0x1238ECC")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x1239318", Offset = "0x1239318", VA = "0x1239318")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x12396CC", Offset = "0x12396CC", VA = "0x12396CC")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x1239A84", Offset = "0x1239A84", VA = "0x1239A84")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x1239CB0", Offset = "0x1239CB0", VA = "0x1239CB0")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x1239F68", Offset = "0x1239F68", VA = "0x1239F68")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x123A220", Offset = "0x123A220", VA = "0x123A220")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x123A5D4", Offset = "0x123A5D4", VA = "0x123A5D4")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x123AA38", Offset = "0x123AA38", VA = "0x123AA38")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x123AE40", Offset = "0x123AE40", VA = "0x123AE40")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x123B1F4", Offset = "0x123B1F4", VA = "0x123B1F4")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x123B5AC", Offset = "0x123B5AC", VA = "0x123B5AC")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x123B848", Offset = "0x123B848", VA = "0x123B848")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x123BBFC", Offset = "0x123BBFC", VA = "0x123BBFC")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x123BF04", Offset = "0x123BF04", VA = "0x123BF04")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x123C3AC", Offset = "0x123C3AC", VA = "0x123C3AC")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x123C804", Offset = "0x123C804", VA = "0x123C804")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x123CC58", Offset = "0x123CC58", VA = "0x123CC58")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x123D0A4", Offset = "0x123D0A4", VA = "0x123D0A4")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x123D45C", Offset = "0x123D45C", VA = "0x123D45C")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x123D864", Offset = "0x123D864", VA = "0x123D864")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x123DC98", Offset = "0x123DC98", VA = "0x123DC98")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x123E0CC", Offset = "0x123E0CC", VA = "0x123E0CC")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x123E4FC", Offset = "0x123E4FC", VA = "0x123E4FC")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x123E7B4", Offset = "0x123E7B4", VA = "0x123E7B4")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x123EBE0", Offset = "0x123EBE0", VA = "0x123EBE0")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x123EE0C", Offset = "0x123EE0C", VA = "0x123EE0C")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x123F1C0", Offset = "0x123F1C0", VA = "0x123F1C0")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x123F4C8", Offset = "0x123F4C8", VA = "0x123F4C8")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x123F6F8", Offset = "0x123F6F8", VA = "0x123F6F8")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x123FB28", Offset = "0x123FB28", VA = "0x123FB28")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002F5")]
	public class CVRChaperone
	{
		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x123FD54", Offset = "0x123FD54", VA = "0x123FD54")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x123FE5C", Offset = "0x123FE5C", VA = "0x123FE5C")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x1240088", Offset = "0x1240088", VA = "0x1240088")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x1240320", Offset = "0x1240320", VA = "0x1240320")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x1240598", Offset = "0x1240598", VA = "0x1240598")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x12407BC", Offset = "0x12407BC", VA = "0x12407BC")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x1240A84", Offset = "0x1240A84", VA = "0x1240A84")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x1240D4C", Offset = "0x1240D4C", VA = "0x1240D4C")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x1240F7C", Offset = "0x1240F7C", VA = "0x1240F7C")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x1241208", Offset = "0x1241208", VA = "0x1241208")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x1241310", Offset = "0x1241310", VA = "0x1241310")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x12415A4", Offset = "0x12415A4", VA = "0x12415A4")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x12415C0", Offset = "0x12415C0", VA = "0x12415C0")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x1241858", Offset = "0x1241858", VA = "0x1241858")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x1241AD0", Offset = "0x1241AD0", VA = "0x1241AD0")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x1241DE4", Offset = "0x1241DE4", VA = "0x1241DE4")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x12420F8", Offset = "0x12420F8", VA = "0x12420F8")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x1242370", Offset = "0x1242370", VA = "0x1242370")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x12425E8", Offset = "0x12425E8", VA = "0x12425E8")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x1242604", Offset = "0x1242604", VA = "0x1242604")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x124262C", Offset = "0x124262C", VA = "0x124262C")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x1242648", Offset = "0x1242648", VA = "0x1242648")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x1242664", Offset = "0x1242664", VA = "0x1242664")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x12428EC", Offset = "0x12428EC", VA = "0x12428EC")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x1242B64", Offset = "0x1242B64", VA = "0x1242B64")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1242B8C", Offset = "0x1242B8C", VA = "0x1242B8C")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x1242EA0", Offset = "0x1242EA0", VA = "0x1242EA0")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x1242EC8", Offset = "0x1242EC8", VA = "0x1242EC8")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x12431DC", Offset = "0x12431DC", VA = "0x12431DC")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x12435EC", Offset = "0x12435EC", VA = "0x12435EC")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002F7")]
	public class CVRCompositor
	{
		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x1243A1C", Offset = "0x1243A1C", VA = "0x1243A1C")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x1243B24", Offset = "0x1243B24", VA = "0x1243B24")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x1243B40", Offset = "0x1243B40", VA = "0x1243B40")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x1243B5C", Offset = "0x1243B5C", VA = "0x1243B5C")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x1243B90", Offset = "0x1243B90", VA = "0x1243B90")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1243BC4", Offset = "0x1243BC4", VA = "0x1243BC4")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x1243BE0", Offset = "0x1243BE0", VA = "0x1243BE0")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x1243BFC", Offset = "0x1243BFC", VA = "0x1243BFC")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x1243C18", Offset = "0x1243C18", VA = "0x1243C18")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x1243C34", Offset = "0x1243C34", VA = "0x1243C34")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x1243C50", Offset = "0x1243C50", VA = "0x1243C50")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x1243C6C", Offset = "0x1243C6C", VA = "0x1243C6C")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x1243C88", Offset = "0x1243C88", VA = "0x1243C88")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x1243CA4", Offset = "0x1243CA4", VA = "0x1243CA4")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x1243CC4", Offset = "0x1243CC4", VA = "0x1243CC4")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x1243CE4", Offset = "0x1243CE4", VA = "0x1243CE4")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x1243D04", Offset = "0x1243D04", VA = "0x1243D04")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x1243D20", Offset = "0x1243D20", VA = "0x1243D20")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x1243D48", Offset = "0x1243D48", VA = "0x1243D48")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x1243D64", Offset = "0x1243D64", VA = "0x1243D64")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x1243D80", Offset = "0x1243D80", VA = "0x1243D80")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x1243D9C", Offset = "0x1243D9C", VA = "0x1243D9C")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x1243DB8", Offset = "0x1243DB8", VA = "0x1243DB8")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x1243DD4", Offset = "0x1243DD4", VA = "0x1243DD4")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x1243DF0", Offset = "0x1243DF0", VA = "0x1243DF0")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x1243E0C", Offset = "0x1243E0C", VA = "0x1243E0C")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x1243E28", Offset = "0x1243E28", VA = "0x1243E28")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x1243E44", Offset = "0x1243E44", VA = "0x1243E44")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x1243E60", Offset = "0x1243E60", VA = "0x1243E60")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x1243E7C", Offset = "0x1243E7C", VA = "0x1243E7C")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x1243E98", Offset = "0x1243E98", VA = "0x1243E98")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x1243EB4", Offset = "0x1243EB4", VA = "0x1243EB4")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x1243ED4", Offset = "0x1243ED4", VA = "0x1243ED4")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x1243EF0", Offset = "0x1243EF0", VA = "0x1243EF0")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x1243F10", Offset = "0x1243F10", VA = "0x1243F10")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1243F2C", Offset = "0x1243F2C", VA = "0x1243F2C")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x1243F48", Offset = "0x1243F48", VA = "0x1243F48")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x1243F68", Offset = "0x1243F68", VA = "0x1243F68")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x1243F84", Offset = "0x1243F84", VA = "0x1243F84")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1243FA0", Offset = "0x1243FA0", VA = "0x1243FA0")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x1243FBC", Offset = "0x1243FBC", VA = "0x1243FBC")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1243FD8", Offset = "0x1243FD8", VA = "0x1243FD8")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x1243FF4", Offset = "0x1243FF4", VA = "0x1243FF4")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x1244010", Offset = "0x1244010", VA = "0x1244010")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x20002F8")]
	public class CVROverlay
	{
		[Token(Token = "0x2000749")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E1B0", Offset = "0xD0E1B0")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x200074A")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x4002E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x4002E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x1244428", Offset = "0x1244428", VA = "0x1244428")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x1244530", Offset = "0x1244530", VA = "0x1244530")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1244550", Offset = "0x1244550", VA = "0x1244550")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1244570", Offset = "0x1244570", VA = "0x1244570")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x124458C", Offset = "0x124458C", VA = "0x124458C")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x12445A8", Offset = "0x12445A8", VA = "0x12445A8")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x12445C4", Offset = "0x12445C4", VA = "0x12445C4")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x12445E0", Offset = "0x12445E0", VA = "0x12445E0")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x12445FC", Offset = "0x12445FC", VA = "0x12445FC")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1244618", Offset = "0x1244618", VA = "0x1244618")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x124463C", Offset = "0x124463C", VA = "0x124463C")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x12446D0", Offset = "0x12446D0", VA = "0x12446D0")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x12446EC", Offset = "0x12446EC", VA = "0x12446EC")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x1244708", Offset = "0x1244708", VA = "0x1244708")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x1244728", Offset = "0x1244728", VA = "0x1244728")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x1244748", Offset = "0x1244748", VA = "0x1244748")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x1244764", Offset = "0x1244764", VA = "0x1244764")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x124478C", Offset = "0x124478C", VA = "0x124478C")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x12447A8", Offset = "0x12447A8", VA = "0x12447A8")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x12447C8", Offset = "0x12447C8", VA = "0x12447C8")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x12447E4", Offset = "0x12447E4", VA = "0x12447E4")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1244804", Offset = "0x1244804", VA = "0x1244804")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x1244820", Offset = "0x1244820", VA = "0x1244820")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x1244840", Offset = "0x1244840", VA = "0x1244840")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x124485C", Offset = "0x124485C", VA = "0x124485C")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x124487C", Offset = "0x124487C", VA = "0x124487C")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x1244898", Offset = "0x1244898", VA = "0x1244898")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x12448BC", Offset = "0x12448BC", VA = "0x12448BC")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x12448D8", Offset = "0x12448D8", VA = "0x12448D8")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x12448F4", Offset = "0x12448F4", VA = "0x12448F4")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x1244910", Offset = "0x1244910", VA = "0x1244910")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x124492C", Offset = "0x124492C", VA = "0x124492C")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x1244948", Offset = "0x1244948", VA = "0x1244948")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x1244964", Offset = "0x1244964", VA = "0x1244964")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x1244980", Offset = "0x1244980", VA = "0x1244980")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x124499C", Offset = "0x124499C", VA = "0x124499C")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x12449B8", Offset = "0x12449B8", VA = "0x12449B8")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x12449D4", Offset = "0x12449D4", VA = "0x12449D4")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x12449F4", Offset = "0x12449F4", VA = "0x12449F4")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1244A10", Offset = "0x1244A10", VA = "0x1244A10")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x1244A30", Offset = "0x1244A30", VA = "0x1244A30")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1244A50", Offset = "0x1244A50", VA = "0x1244A50")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1244A6C", Offset = "0x1244A6C", VA = "0x1244A6C")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1244A88", Offset = "0x1244A88", VA = "0x1244A88")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1244AA4", Offset = "0x1244AA4", VA = "0x1244AA4")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1244AC0", Offset = "0x1244AC0", VA = "0x1244AC0")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1244ADC", Offset = "0x1244ADC", VA = "0x1244ADC")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1244EF8", Offset = "0x1244EF8", VA = "0x1244EF8")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1244F14", Offset = "0x1244F14", VA = "0x1244F14")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1244F30", Offset = "0x1244F30", VA = "0x1244F30")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x1244F4C", Offset = "0x1244F4C", VA = "0x1244F4C")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x1244F68", Offset = "0x1244F68", VA = "0x1244F68")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1244F84", Offset = "0x1244F84", VA = "0x1244F84")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x1244FA0", Offset = "0x1244FA0", VA = "0x1244FA0")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x1244FBC", Offset = "0x1244FBC", VA = "0x1244FBC")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1244FD8", Offset = "0x1244FD8", VA = "0x1244FD8")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x1244FF4", Offset = "0x1244FF4", VA = "0x1244FF4")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x1245010", Offset = "0x1245010", VA = "0x1245010")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x124502C", Offset = "0x124502C", VA = "0x124502C")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x124504C", Offset = "0x124504C", VA = "0x124504C")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1245068", Offset = "0x1245068", VA = "0x1245068")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1245084", Offset = "0x1245084", VA = "0x1245084")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x12450A0", Offset = "0x12450A0", VA = "0x12450A0")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x12450BC", Offset = "0x12450BC", VA = "0x12450BC")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x12450F0", Offset = "0x12450F0", VA = "0x12450F0")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x124510C", Offset = "0x124510C", VA = "0x124510C")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x1245130", Offset = "0x1245130", VA = "0x1245130")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x1245154", Offset = "0x1245154", VA = "0x1245154")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x1245170", Offset = "0x1245170", VA = "0x1245170")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x124518C", Offset = "0x124518C", VA = "0x124518C")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x12451A8", Offset = "0x12451A8", VA = "0x12451A8")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x12451C8", Offset = "0x12451C8", VA = "0x12451C8")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x12451E4", Offset = "0x12451E4", VA = "0x12451E4")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x1245200", Offset = "0x1245200", VA = "0x1245200")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x1245224", Offset = "0x1245224", VA = "0x1245224")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x124524C", Offset = "0x124524C", VA = "0x124524C")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1245268", Offset = "0x1245268", VA = "0x1245268")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1245284", Offset = "0x1245284", VA = "0x1245284")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x12452A0", Offset = "0x12452A0", VA = "0x12452A0")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x12452BC", Offset = "0x12452BC", VA = "0x12452BC")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x12452D8", Offset = "0x12452D8", VA = "0x12452D8")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x12452F8", Offset = "0x12452F8", VA = "0x12452F8")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1245314", Offset = "0x1245314", VA = "0x1245314")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class CVRRenderModels
	{
		[Token(Token = "0x200074B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xD0E1C4", Offset = "0xD0E1C4")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x200074C")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x4002E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x4002E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x124544C", Offset = "0x124544C", VA = "0x124544C")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x1245554", Offset = "0x1245554", VA = "0x1245554")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x1245570", Offset = "0x1245570", VA = "0x1245570")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x124558C", Offset = "0x124558C", VA = "0x124558C")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x12455A8", Offset = "0x12455A8", VA = "0x12455A8")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x12455C4", Offset = "0x12455C4", VA = "0x12455C4")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x12455E0", Offset = "0x12455E0", VA = "0x12455E0")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x12455FC", Offset = "0x12455FC", VA = "0x12455FC")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x1245618", Offset = "0x1245618", VA = "0x1245618")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1245634", Offset = "0x1245634", VA = "0x1245634")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1245650", Offset = "0x1245650", VA = "0x1245650")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x124566C", Offset = "0x124566C", VA = "0x124566C")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1245688", Offset = "0x1245688", VA = "0x1245688")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x12456A4", Offset = "0x12456A4", VA = "0x12456A4")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x12456C0", Offset = "0x12456C0", VA = "0x12456C0")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1245C4C", Offset = "0x1245C4C", VA = "0x1245C4C")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1245C68", Offset = "0x1245C68", VA = "0x1245C68")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x1245C84", Offset = "0x1245C84", VA = "0x1245C84")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x1245CA0", Offset = "0x1245CA0", VA = "0x1245CA0")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FA")]
	public class CVRNotifications
	{
		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x12442E8", Offset = "0x12442E8", VA = "0x12442E8")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x12443E8", Offset = "0x12443E8", VA = "0x12443E8")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x124440C", Offset = "0x124440C", VA = "0x124440C")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x20002FB")]
	public class CVRSettings
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1246190", Offset = "0x1246190", VA = "0x1246190")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1246298", Offset = "0x1246298", VA = "0x1246298")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x124632C", Offset = "0x124632C", VA = "0x124632C")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x124634C", Offset = "0x124634C", VA = "0x124634C")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x124636C", Offset = "0x124636C", VA = "0x124636C")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x1246388", Offset = "0x1246388", VA = "0x1246388")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x12463A4", Offset = "0x12463A4", VA = "0x12463A4")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x12463C0", Offset = "0x12463C0", VA = "0x12463C0")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x12463DC", Offset = "0x12463DC", VA = "0x12463DC")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x12463F8", Offset = "0x12463F8", VA = "0x12463F8")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1246414", Offset = "0x1246414", VA = "0x1246414")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1246430", Offset = "0x1246430", VA = "0x1246430")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x124644C", Offset = "0x124644C", VA = "0x124644C")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class CVRScreenshots
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x1245FA8", Offset = "0x1245FA8", VA = "0x1245FA8")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x12460B8", Offset = "0x12460B8", VA = "0x12460B8")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x12460D8", Offset = "0x12460D8", VA = "0x12460D8")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x1246100", Offset = "0x1246100", VA = "0x1246100")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x124611C", Offset = "0x124611C", VA = "0x124611C")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x1246138", Offset = "0x1246138", VA = "0x1246138")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x1246154", Offset = "0x1246154", VA = "0x1246154")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x1246174", Offset = "0x1246174", VA = "0x1246174")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x20002FD")]
	public class CVRResources
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1245E70", Offset = "0x1245E70", VA = "0x1245E70")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1245F70", Offset = "0x1245F70", VA = "0x1245F70")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1245F8C", Offset = "0x1245F8C", VA = "0x1245F8C")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002FE")]
	public class CVRDriverManager
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x124402C", Offset = "0x124402C", VA = "0x124402C")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x124412C", Offset = "0x124412C", VA = "0x124412C")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x1244148", Offset = "0x1244148", VA = "0x1244148")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002FF")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6001385")]
		[Address(RVA = "0x101CDB8", Offset = "0x101CDB8", VA = "0x101CDB8")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6001386")]
		[Address(RVA = "0x101CE4C", Offset = "0x101CE4C", VA = "0x101CE4C")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x6001387")]
		[Address(RVA = "0x101CEC0", Offset = "0x101CEC0", VA = "0x101CEC0")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x6001388")]
		[Address(RVA = "0x101CF40", Offset = "0x101CF40", VA = "0x101CF40")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x6001389")]
		[Address(RVA = "0x101D034", Offset = "0x101D034", VA = "0x101D034")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x600138A")]
		[Address(RVA = "0x101D0B8", Offset = "0x101D0B8", VA = "0x101D0B8")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x600138B")]
		[Address(RVA = "0x101D164", Offset = "0x101D164", VA = "0x101D164")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x600138C")]
		[Address(RVA = "0x101D204", Offset = "0x101D204", VA = "0x101D204")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x101E3C8", Offset = "0x101E3C8", VA = "0x101E3C8")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public enum EVREye
	{
		[Token(Token = "0x40016CB")]
		Eye_Left,
		[Token(Token = "0x40016CC")]
		Eye_Right
	}
	[Token(Token = "0x2000301")]
	public enum ETextureType
	{
		[Token(Token = "0x40016CE")]
		DirectX,
		[Token(Token = "0x40016CF")]
		OpenGL,
		[Token(Token = "0x40016D0")]
		Vulkan,
		[Token(Token = "0x40016D1")]
		IOSurface,
		[Token(Token = "0x40016D2")]
		DirectX12
	}
	[Token(Token = "0x2000302")]
	public enum EColorSpace
	{
		[Token(Token = "0x40016D4")]
		Auto,
		[Token(Token = "0x40016D5")]
		Gamma,
		[Token(Token = "0x40016D6")]
		Linear
	}
	[Token(Token = "0x2000303")]
	public enum ETrackingResult
	{
		[Token(Token = "0x40016D8")]
		Uninitialized = 1,
		[Token(Token = "0x40016D9")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x40016DA")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x40016DB")]
		Running_OK = 200,
		[Token(Token = "0x40016DC")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x2000304")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x40016DE")]
		Invalid,
		[Token(Token = "0x40016DF")]
		HMD,
		[Token(Token = "0x40016E0")]
		Controller,
		[Token(Token = "0x40016E1")]
		GenericTracker,
		[Token(Token = "0x40016E2")]
		TrackingReference,
		[Token(Token = "0x40016E3")]
		DisplayRedirect
	}
	[Token(Token = "0x2000305")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x40016E5")]
		Invalid,
		[Token(Token = "0x40016E6")]
		LeftHand,
		[Token(Token = "0x40016E7")]
		RightHand
	}
	[Token(Token = "0x2000306")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x40016E9")]
		TrackingUniverseSeated,
		[Token(Token = "0x40016EA")]
		TrackingUniverseStanding,
		[Token(Token = "0x40016EB")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x2000307")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x40016ED")]
		Prop_Invalid = 0,
		[Token(Token = "0x40016EE")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x40016EF")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x40016F0")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x40016F1")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x40016F2")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x40016F3")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x40016F4")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x40016F5")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x40016F6")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x40016F7")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x40016F8")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x40016F9")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x40016FA")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x40016FB")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x40016FC")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x40016FD")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x40016FE")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x40016FF")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001700")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4001701")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001702")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001703")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001704")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4001705")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4001706")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4001707")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4001708")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4001709")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x400170A")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x400170B")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x400170C")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x400170D")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x400170E")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x400170F")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001710")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001711")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001712")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001713")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001714")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001715")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001716")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001717")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001718")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001719")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x400171A")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x400171B")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x400171C")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x400171D")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x400171E")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x400171F")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4001720")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001721")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001722")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001723")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001724")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001725")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001726")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001727")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001728")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001729")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x400172A")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x400172B")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x400172C")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x400172D")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x400172E")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x400172F")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4001730")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001731")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001732")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001733")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001734")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001735")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001736")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001737")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001738")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001739")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x400173A")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x400173B")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x400173C")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x400173D")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x400173E")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x400173F")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x4001740")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4001741")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4001742")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001743")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001744")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4001745")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001746")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001747")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001748")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x4001749")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x400174A")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x400174B")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x400174C")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x400174D")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x400174E")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x400174F")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4001750")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4001751")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4001752")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4001753")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4001754")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x4001755")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4001756")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4001757")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4001758")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4001759")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x400175A")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x400175B")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x400175C")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x400175D")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x400175E")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x400175F")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4001760")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4001761")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4001762")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4001763")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4001764")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4001765")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4001766")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4001767")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x4001768")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x4001769")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x400176A")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x400176B")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x400176C")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x400176D")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x400176E")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x400176F")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4001770")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4001771")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001772")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4001773")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x2000308")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4001775")]
		TrackedProp_Success,
		[Token(Token = "0x4001776")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4001777")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4001778")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x4001779")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x400177A")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x400177B")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x400177C")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x400177D")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x400177E")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x400177F")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4001780")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4001781")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x2000309")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4001783")]
		Submit_Default = 0,
		[Token(Token = "0x4001784")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4001785")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4001786")]
		Submit_Reserved = 4,
		[Token(Token = "0x4001787")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x4001788")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x200030A")]
	public enum EVRState
	{
		[Token(Token = "0x400178A")]
		Undefined = -1,
		[Token(Token = "0x400178B")]
		Off,
		[Token(Token = "0x400178C")]
		Searching,
		[Token(Token = "0x400178D")]
		Searching_Alert,
		[Token(Token = "0x400178E")]
		Ready,
		[Token(Token = "0x400178F")]
		Ready_Alert,
		[Token(Token = "0x4001790")]
		NotReady,
		[Token(Token = "0x4001791")]
		Standby,
		[Token(Token = "0x4001792")]
		Ready_Alert_Low
	}
	[Token(Token = "0x200030B")]
	public enum EVREventType
	{
		[Token(Token = "0x4001794")]
		VREvent_None = 0,
		[Token(Token = "0x4001795")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4001796")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4001797")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4001798")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4001799")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x400179A")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x400179B")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x400179C")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x400179D")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x400179E")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x400179F")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x40017A0")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x40017A1")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x40017A2")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x40017A3")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x40017A4")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x40017A5")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x40017A6")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x40017A7")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x40017A8")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x40017A9")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x40017AA")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x40017AB")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x40017AC")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x40017AD")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x40017AE")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x40017AF")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x40017B0")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x40017B1")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x40017B2")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x40017B3")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x40017B4")]
		VREvent_Scroll = 305,
		[Token(Token = "0x40017B5")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x40017B6")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x40017B7")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x40017B8")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x40017B9")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x40017BA")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x40017BB")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x40017BC")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x40017BD")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x40017BE")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x40017BF")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x40017C0")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x40017C1")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x40017C2")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x40017C3")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x40017C4")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x40017C5")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x40017C6")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x40017C7")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x40017C8")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x40017C9")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x40017CA")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x40017CB")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x40017CC")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x40017CD")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x40017CE")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x40017CF")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x40017D0")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x40017D1")]
		VREvent_DashboardGuideButtonDown = 514,
		[Token(Token = "0x40017D2")]
		VREvent_DashboardGuideButtonUp = 515,
		[Token(Token = "0x40017D3")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x40017D4")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x40017D5")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x40017D6")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x40017D7")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x40017D8")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x40017D9")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x40017DA")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x40017DB")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x40017DC")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x40017DD")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x40017DE")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x40017DF")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x40017E0")]
		VREvent_Quit = 700,
		[Token(Token = "0x40017E1")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x40017E2")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x40017E3")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x40017E4")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x40017E5")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x40017E6")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x40017E7")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x40017E8")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x40017E9")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x40017EA")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x40017EB")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x40017EC")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x40017ED")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x40017EE")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x40017EF")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x40017F0")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x40017F1")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x40017F2")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x40017F3")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x40017F4")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x40017F5")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x40017F6")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x40017F7")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x40017F8")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x40017F9")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x40017FA")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x40017FB")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x40017FC")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x40017FD")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x40017FE")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x40017FF")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001800")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001801")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001802")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001803")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001804")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001805")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4001806")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4001807")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4001808")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001809")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x400180A")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x400180B")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x400180C")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x400180D")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x400180E")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x400180F")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001810")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001811")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001812")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001813")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001814")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001815")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001816")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001817")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001818")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001819")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x400181A")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x400181B")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x200030C")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x400181D")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x400181E")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x400181F")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001820")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001821")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x200030D")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001823")]
		k_EButton_System = 0,
		[Token(Token = "0x4001824")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001825")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001826")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001827")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001828")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001829")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x400182A")]
		k_EButton_A = 7,
		[Token(Token = "0x400182B")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x400182C")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x400182D")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x400182E")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x400182F")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001830")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001831")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001832")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001833")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001834")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x200030E")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001836")]
		Left = 1,
		[Token(Token = "0x4001837")]
		Right = 2,
		[Token(Token = "0x4001838")]
		Middle = 4
	}
	[Token(Token = "0x200030F")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x400183A")]
		k_EDualAnalog_Left,
		[Token(Token = "0x400183B")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x2000310")]
	public enum EVRInputError
	{
		[Token(Token = "0x400183D")]
		None,
		[Token(Token = "0x400183E")]
		NameNotFound,
		[Token(Token = "0x400183F")]
		WrongType,
		[Token(Token = "0x4001840")]
		InvalidHandle,
		[Token(Token = "0x4001841")]
		InvalidParam,
		[Token(Token = "0x4001842")]
		NoSteam,
		[Token(Token = "0x4001843")]
		MaxCapacityReached,
		[Token(Token = "0x4001844")]
		IPCError,
		[Token(Token = "0x4001845")]
		NoActiveActionSet,
		[Token(Token = "0x4001846")]
		InvalidDevice
	}
	[Token(Token = "0x2000311")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001848")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001849")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x400184A")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x400184B")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x2000312")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x400184D")]
		k_eControllerAxis_None,
		[Token(Token = "0x400184E")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x400184F")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4001850")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x2000313")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4001852")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4001853")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x2000314")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4001855")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001856")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001857")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001858")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001859")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x400185A")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x2000315")]
	public enum EVROverlayError
	{
		[Token(Token = "0x400185C")]
		None = 0,
		[Token(Token = "0x400185D")]
		UnknownOverlay = 10,
		[Token(Token = "0x400185E")]
		InvalidHandle = 11,
		[Token(Token = "0x400185F")]
		PermissionDenied = 12,
		[Token(Token = "0x4001860")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4001861")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4001862")]
		KeyTooLong = 15,
		[Token(Token = "0x4001863")]
		NameTooLong = 16,
		[Token(Token = "0x4001864")]
		KeyInUse = 17,
		[Token(Token = "0x4001865")]
		WrongTransformType = 18,
		[Token(Token = "0x4001866")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4001867")]
		InvalidParameter = 20,
		[Token(Token = "0x4001868")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001869")]
		ArrayTooSmall = 22,
		[Token(Token = "0x400186A")]
		RequestFailed = 23,
		[Token(Token = "0x400186B")]
		InvalidTexture = 24,
		[Token(Token = "0x400186C")]
		UnableToLoadFile = 25,
		[Token(Token = "0x400186D")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x400186E")]
		NoNeighbor = 27,
		[Token(Token = "0x400186F")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4001870")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4001871")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4001872")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4001873")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x2000316")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4001875")]
		VRApplication_Other,
		[Token(Token = "0x4001876")]
		VRApplication_Scene,
		[Token(Token = "0x4001877")]
		VRApplication_Overlay,
		[Token(Token = "0x4001878")]
		VRApplication_Background,
		[Token(Token = "0x4001879")]
		VRApplication_Utility,
		[Token(Token = "0x400187A")]
		VRApplication_VRMonitor,
		[Token(Token = "0x400187B")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x400187C")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x400187D")]
		VRApplication_Max
	}
	[Token(Token = "0x2000317")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x400187F")]
		None,
		[Token(Token = "0x4001880")]
		Success,
		[Token(Token = "0x4001881")]
		Fail
	}
	[Token(Token = "0x2000318")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4001883")]
		OK = 0,
		[Token(Token = "0x4001884")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4001885")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4001886")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4001887")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x2000319")]
	public enum EVRInitError
	{
		[Token(Token = "0x4001889")]
		None = 0,
		[Token(Token = "0x400188A")]
		Unknown = 1,
		[Token(Token = "0x400188B")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x400188C")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x400188D")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x400188E")]
		Init_FileNotFound = 103,
		[Token(Token = "0x400188F")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4001890")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4001891")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4001892")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4001893")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4001894")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4001895")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4001896")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4001897")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4001898")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4001899")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x400189A")]
		Init_Retry = 115,
		[Token(Token = "0x400189B")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x400189C")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x400189D")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x400189E")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x400189F")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x40018A0")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x40018A1")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x40018A2")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x40018A3")]
		Init_Internal = 124,
		[Token(Token = "0x40018A4")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x40018A5")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x40018A6")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x40018A7")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x40018A8")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x40018A9")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x40018AA")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x40018AB")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x40018AC")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x40018AD")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x40018AE")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x40018AF")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x40018B0")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x40018B1")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x40018B2")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x40018B3")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x40018B4")]
		Driver_Failed = 200,
		[Token(Token = "0x40018B5")]
		Driver_Unknown = 201,
		[Token(Token = "0x40018B6")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x40018B7")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x40018B8")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x40018B9")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x40018BA")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x40018BB")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x40018BC")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x40018BD")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x40018BE")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x40018BF")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x40018C0")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x40018C1")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x40018C2")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x40018C3")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x40018C4")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x40018C5")]
		IPC_Failed = 305,
		[Token(Token = "0x40018C6")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x40018C7")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x40018C8")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x40018C9")]
		Compositor_Failed = 400,
		[Token(Token = "0x40018CA")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x40018CB")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x40018CC")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x40018CD")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x40018CE")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x40018CF")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x40018D0")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x40018D1")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x40018D2")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x40018D3")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x40018D4")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x40018D5")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x40018D6")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x40018D7")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x40018D8")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x40018D9")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x40018DA")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x40018DB")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x40018DC")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x40018DD")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x40018DE")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x200031A")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x40018E0")]
		None,
		[Token(Token = "0x40018E1")]
		Mono,
		[Token(Token = "0x40018E2")]
		Stereo,
		[Token(Token = "0x40018E3")]
		Cubemap,
		[Token(Token = "0x40018E4")]
		MonoPanorama,
		[Token(Token = "0x40018E5")]
		StereoPanorama
	}
	[Token(Token = "0x200031B")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x40018E7")]
		Preview,
		[Token(Token = "0x40018E8")]
		VR
	}
	[Token(Token = "0x200031C")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x40018EA")]
		None = 0,
		[Token(Token = "0x40018EB")]
		OperationFailed = 100,
		[Token(Token = "0x40018EC")]
		InvalidHandle = 101,
		[Token(Token = "0x40018ED")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x40018EE")]
		OutOfHandles = 103,
		[Token(Token = "0x40018EF")]
		IPCFailure = 104,
		[Token(Token = "0x40018F0")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x40018F1")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x40018F2")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x40018F3")]
		StreamSetupFailure = 108,
		[Token(Token = "0x40018F4")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x40018F5")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x40018F6")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x40018F7")]
		SharedTextureFailure = 112,
		[Token(Token = "0x40018F8")]
		NoFrameAvailable = 113,
		[Token(Token = "0x40018F9")]
		InvalidArgument = 114,
		[Token(Token = "0x40018FA")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x200031D")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x40018FC")]
		Distorted,
		[Token(Token = "0x40018FD")]
		Undistorted,
		[Token(Token = "0x40018FE")]
		MaximumUndistorted,
		[Token(Token = "0x40018FF")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x200031E")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4001901")]
		None = 0,
		[Token(Token = "0x4001902")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4001903")]
		NoManifest = 101,
		[Token(Token = "0x4001904")]
		NoApplication = 102,
		[Token(Token = "0x4001905")]
		InvalidIndex = 103,
		[Token(Token = "0x4001906")]
		UnknownApplication = 104,
		[Token(Token = "0x4001907")]
		IPCFailed = 105,
		[Token(Token = "0x4001908")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001909")]
		InvalidManifest = 107,
		[Token(Token = "0x400190A")]
		InvalidApplication = 108,
		[Token(Token = "0x400190B")]
		LaunchFailed = 109,
		[Token(Token = "0x400190C")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x400190D")]
		LaunchInProgress = 111,
		[Token(Token = "0x400190E")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x400190F")]
		TransitionAborted = 113,
		[Token(Token = "0x4001910")]
		IsTemplate = 114,
		[Token(Token = "0x4001911")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4001912")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001913")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001914")]
		UnknownProperty = 202,
		[Token(Token = "0x4001915")]
		InvalidParameter = 203
	}
	[Token(Token = "0x200031F")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001917")]
		Name_String = 0,
		[Token(Token = "0x4001918")]
		LaunchType_String = 11,
		[Token(Token = "0x4001919")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x400191A")]
		BinaryPath_String = 13,
		[Token(Token = "0x400191B")]
		Arguments_String = 14,
		[Token(Token = "0x400191C")]
		URL_String = 15,
		[Token(Token = "0x400191D")]
		Description_String = 50,
		[Token(Token = "0x400191E")]
		NewsURL_String = 51,
		[Token(Token = "0x400191F")]
		ImagePath_String = 52,
		[Token(Token = "0x4001920")]
		Source_String = 53,
		[Token(Token = "0x4001921")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4001922")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4001923")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001924")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001925")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001926")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001927")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x2000320")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001929")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x400192A")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x400192B")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x400192C")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x2000321")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x400192E")]
		OK = 1,
		[Token(Token = "0x400192F")]
		Warning = 100,
		[Token(Token = "0x4001930")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4001931")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4001932")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4001933")]
		Error = 200,
		[Token(Token = "0x4001934")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001935")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001936")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001937")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x2000322")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001939")]
		Live = 1,
		[Token(Token = "0x400193A")]
		Temp
	}
	[Token(Token = "0x2000323")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x400193C")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x2000324")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x400193E")]
		None = 0,
		[Token(Token = "0x400193F")]
		RequestFailed = 1,
		[Token(Token = "0x4001940")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001941")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x4001942")]
		InvalidTexture = 102,
		[Token(Token = "0x4001943")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4001944")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4001945")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4001946")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001947")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001948")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001949")]
		InvalidBounds = 109
	}
	[Token(Token = "0x2000325")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x400194B")]
		Implicit,
		[Token(Token = "0x400194C")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x400194D")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x2000326")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x400194F")]
		None,
		[Token(Token = "0x4001950")]
		Mouse,
		[Token(Token = "0x4001951")]
		DualAnalog
	}
	[Token(Token = "0x2000327")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4001953")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4001954")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4001955")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4001956")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x2000328")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001958")]
		None,
		[Token(Token = "0x4001959")]
		Curved,
		[Token(Token = "0x400195A")]
		RGSS4X,
		[Token(Token = "0x400195B")]
		NoDashboardTab,
		[Token(Token = "0x400195C")]
		AcceptsGamepadEvents,
		[Token(Token = "0x400195D")]
		ShowGamepadFocus,
		[Token(Token = "0x400195E")]
		SendVRScrollEvents,
		[Token(Token = "0x400195F")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4001960")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4001961")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4001962")]
		SideBySide_Parallel,
		[Token(Token = "0x4001963")]
		SideBySide_Crossed,
		[Token(Token = "0x4001964")]
		Panorama,
		[Token(Token = "0x4001965")]
		StereoPanorama,
		[Token(Token = "0x4001966")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4001967")]
		VisibleInDashboard
	}
	[Token(Token = "0x2000329")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4001969")]
		ButtonPress_0,
		[Token(Token = "0x400196A")]
		ButtonPress_1,
		[Token(Token = "0x400196B")]
		ButtonPress_2,
		[Token(Token = "0x400196C")]
		ButtonPress_3,
		[Token(Token = "0x400196D")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x400196E")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x400196F")]
		ApplicationQuit
	}
	[Token(Token = "0x200032A")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4001971")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4001972")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4001973")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x200032B")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4001975")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4001976")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x200032C")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4001978")]
		Up,
		[Token(Token = "0x4001979")]
		Down,
		[Token(Token = "0x400197A")]
		Left,
		[Token(Token = "0x400197B")]
		Right,
		[Token(Token = "0x400197C")]
		Count
	}
	[Token(Token = "0x200032D")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x400197E")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x400197F")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x200032E")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4001981")]
		None = 0,
		[Token(Token = "0x4001982")]
		Loading = 100,
		[Token(Token = "0x4001983")]
		NotSupported = 200,
		[Token(Token = "0x4001984")]
		InvalidArg = 300,
		[Token(Token = "0x4001985")]
		InvalidModel = 301,
		[Token(Token = "0x4001986")]
		NoShapes = 302,
		[Token(Token = "0x4001987")]
		MultipleShapes = 303,
		[Token(Token = "0x4001988")]
		TooManyVertices = 304,
		[Token(Token = "0x4001989")]
		MultipleTextures = 305,
		[Token(Token = "0x400198A")]
		BufferTooSmall = 306,
		[Token(Token = "0x400198B")]
		NotEnoughNormals = 307,
		[Token(Token = "0x400198C")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x400198D")]
		InvalidTexture = 400
	}
	[Token(Token = "0x200032F")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x400198F")]
		IsStatic = 1,
		[Token(Token = "0x4001990")]
		IsVisible = 2,
		[Token(Token = "0x4001991")]
		IsTouched = 4,
		[Token(Token = "0x4001992")]
		IsPressed = 8,
		[Token(Token = "0x4001993")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x2000330")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4001995")]
		Transient,
		[Token(Token = "0x4001996")]
		Persistent,
		[Token(Token = "0x4001997")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x2000331")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001999")]
		None = 0,
		[Token(Token = "0x400199A")]
		Application = 100,
		[Token(Token = "0x400199B")]
		Contact_Disabled = 200,
		[Token(Token = "0x400199C")]
		Contact_Enabled = 201,
		[Token(Token = "0x400199D")]
		Contact_Active = 202
	}
	[Token(Token = "0x2000332")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x400199F")]
		None,
		[Token(Token = "0x40019A0")]
		IPCFailed,
		[Token(Token = "0x40019A1")]
		WriteFailed,
		[Token(Token = "0x40019A2")]
		ReadFailed,
		[Token(Token = "0x40019A3")]
		JsonParseFailed,
		[Token(Token = "0x40019A4")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x2000333")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x40019A6")]
		None = 0,
		[Token(Token = "0x40019A7")]
		RequestFailed = 1,
		[Token(Token = "0x40019A8")]
		IncompatibleVersion = 100,
		[Token(Token = "0x40019A9")]
		NotFound = 101,
		[Token(Token = "0x40019AA")]
		BufferTooSmall = 102,
		[Token(Token = "0x40019AB")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x2000334")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000335")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x2000336")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x2000337")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x2000338")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x2000339")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x200033A")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x200033B")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x200033C")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x200033D")]
	public struct HmdColor_t
	{
		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x200033E")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x200033F")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x2000340")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x2000341")]
	public struct Texture_t
	{
		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x2000342")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x2000343")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x2000344")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x2000345")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x2000346")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000347")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000348")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x2000349")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x200034A")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x200034B")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x200034C")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x200034D")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x200034E")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x200034F")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x2000350")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x2000351")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x2000352")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x2000353")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x2000354")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x2000355")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;
	}
	[Token(Token = "0x2000356")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000357")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000358")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x2000359")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x200035A")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x200035B")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x200035C")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x200035D")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x200035E")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x200035F")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x2000360")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000361")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x101E4E0", Offset = "0x101E4E0", VA = "0x101E4E0")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x101E520", Offset = "0x101E520", VA = "0x101E520")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000362")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000363")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x2000364")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x2000365")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x101E458", Offset = "0x101E458", VA = "0x101E458")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x101E49C", Offset = "0x101E49C", VA = "0x101E49C")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000366")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000367")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000368")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x2000369")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x200036A")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x200036B")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x200036C")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x200036D")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x200036E")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x200036F")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x2000370")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x2000371")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x2000372")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x2000373")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x2000374")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x101E3D0", Offset = "0x101E3D0", VA = "0x101E3D0")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x101E3E4", Offset = "0x101E3E4", VA = "0x101E3E4")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000375")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000376")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x101E400", Offset = "0x101E400", VA = "0x101E400")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x101E42C", Offset = "0x101E42C", VA = "0x101E42C")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000377")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000378")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x2000379")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x200037A")]
	public class OpenVR
	{
		[Token(Token = "0x200074D")]
		private class COpenVRContext
		{
			[Token(Token = "0x4002E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x4002E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x4002E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x4002E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x4002E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x4002E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x4002E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x4002E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x4002E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x4002E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x4002E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x60029B6")]
			[Address(RVA = "0x101D428", Offset = "0x101D428", VA = "0x101D428")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x60029B7")]
			[Address(RVA = "0x101E20C", Offset = "0x101E20C", VA = "0x101E20C")]
			public void Clear()
			{
			}

			[Token(Token = "0x60029B8")]
			[Address(RVA = "0x101E294", Offset = "0x101E294", VA = "0x101E294")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x101D4C0", Offset = "0x101D4C0", VA = "0x101D4C0")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x101D5E8", Offset = "0x101D5E8", VA = "0x101D5E8")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x60029BB")]
			[Address(RVA = "0x101D710", Offset = "0x101D710", VA = "0x101D710")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x60029BC")]
			[Address(RVA = "0x101D838", Offset = "0x101D838", VA = "0x101D838")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x60029BD")]
			[Address(RVA = "0x101D960", Offset = "0x101D960", VA = "0x101D960")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x60029BE")]
			[Address(RVA = "0x101DA20", Offset = "0x101DA20", VA = "0x101DA20")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x60029BF")]
			[Address(RVA = "0x101DB48", Offset = "0x101DB48", VA = "0x101DB48")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x60029C0")]
			[Address(RVA = "0x101DC70", Offset = "0x101DC70", VA = "0x101DC70")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x101DD98", Offset = "0x101DD98", VA = "0x101DD98")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x101DEC0", Offset = "0x101DEC0", VA = "0x101DEC0")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x101DFE8", Offset = "0x101DFE8", VA = "0x101DFE8")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4001AEF")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4001AF0")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4001AF1")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001AF2")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001AF3")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001AF4")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4001AF5")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4001AF6")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4001AF7")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4001AF8")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4001AF9")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4001AFA")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x4001AFB")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4001AFC")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4001AFD")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4001AFE")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4001AFF")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4001B00")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001B01")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001B02")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001B03")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4001B04")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001B05")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4001B06")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4001B07")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001B08")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001B09")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4001B0A")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4001B0B")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4001B0C")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x4001B0D")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4001B0E")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x4001B0F")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4001B10")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4001B11")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4001B12")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001B13")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001B14")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001B15")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001B16")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001B17")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001B18")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001B19")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001B1A")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x4001B1B")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001B1C")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4001B1D")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4001B1E")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4001B1F")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4001B20")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4001B21")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4001B22")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001B23")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001B24")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001B25")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001B26")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001B27")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001B28")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001B29")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001B2A")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4001B2B")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001B2C")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4001B2D")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4001B2E")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4001B2F")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4001B30")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4001B31")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4001B32")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001B33")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001B34")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001B35")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001B36")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001B37")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001B38")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001B39")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4001B3A")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4001B3B")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4001B3C")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4001B3D")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4001B3E")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4001B3F")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x4001B40")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4001B41")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4001B42")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4001B43")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4001B44")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4001B45")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001B46")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001B47")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001B48")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001B49")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001B4A")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4001B4B")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4001B4C")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4001B4D")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4001B4E")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4001B4F")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x4001B50")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4001B51")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4001B52")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4001B53")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4001B54")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4001B55")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4001B56")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4001B57")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4001B58")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4001B59")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4001B5A")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4001B5B")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4001B5C")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4001B5D")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4001B5E")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4001B5F")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4001B60")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4001B61")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4001B62")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4001B63")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4001B64")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4001B65")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4001B66")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4001B67")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4001B68")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4001B69")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4001B6A")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4001B6B")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4001B6C")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4001B6D")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4001B6E")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4001B6F")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4001B70")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4001B71")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4001B72")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4001B73")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4001B74")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4001B75")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4001B76")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4001B77")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4001B78")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4001B79")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4001B7A")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4001B7B")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4001B7C")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4001B7D")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4001B7E")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4001B7F")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4001B80")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4001B81")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4001B82")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4001B83")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4001B84")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4001B85")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4001B86")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4001B87")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4001B88")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4001B89")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4001B8A")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4001B8B")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4001B8C")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4001B8D")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4001B8E")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4001B8F")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4001B90")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x4001B91")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x4001B92")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4001B93")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4001B94")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4001B95")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4001B96")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4001B97")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4001B98")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4001B99")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4001B9A")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4001B9B")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4001B9C")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4001B9D")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4001B9E")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4001B9F")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4001BA0")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4001BA1")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4001BA2")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001BA3")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4001BA4")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4001BA5")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001BA6")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001BA7")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD171AC", Offset = "0xD171AC")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4001BA9")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170000EE")]
		private static uint VRToken
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x101D278", Offset = "0x101D278", VA = "0x101D278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23A28", Offset = "0xD23A28")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x101D2E0", Offset = "0x101D2E0", VA = "0x101D2E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23A38", Offset = "0xD23A38")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x60013A0")]
			[Address(RVA = "0x101D34C", Offset = "0x101D34C", VA = "0x101D34C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		public static CVRSystem System
		{
			[Token(Token = "0x60013A1")]
			[Address(RVA = "0x101D458", Offset = "0x101D458", VA = "0x101D458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x60013A2")]
			[Address(RVA = "0x101D580", Offset = "0x101D580", VA = "0x101D580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0x101D6A8", Offset = "0x101D6A8", VA = "0x101D6A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x101D7D0", Offset = "0x101D7D0", VA = "0x101D7D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x101D8F8", Offset = "0x101D8F8", VA = "0x101D8F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x10189D4", Offset = "0x10189D4", VA = "0x10189D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x101DAE0", Offset = "0x101DAE0", VA = "0x101DAE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x101DC08", Offset = "0x101DC08", VA = "0x101DC08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0x101DD30", Offset = "0x101DD30", VA = "0x101DD30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x101DE58", Offset = "0x101DE58", VA = "0x101DE58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x101DF80", Offset = "0x101DF80", VA = "0x101DF80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x101CDB4", Offset = "0x101CDB4", VA = "0x101CDB4")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x101CE48", Offset = "0x101CE48", VA = "0x101CE48")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x101CEBC", Offset = "0x101CEBC", VA = "0x101CEBC")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x101CF3C", Offset = "0x101CF3C", VA = "0x101CF3C")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x101CFBC", Offset = "0x101CFBC", VA = "0x101CFBC")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x101D0B4", Offset = "0x101D0B4", VA = "0x101D0B4")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x101D160", Offset = "0x101D160", VA = "0x101D160")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x101D200", Offset = "0x101D200", VA = "0x101D200")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x101E0A8", Offset = "0x101E0A8", VA = "0x101E0A8")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x101E22C", Offset = "0x101E22C", VA = "0x101E22C")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x101E288", Offset = "0x101E288", VA = "0x101E288")]
		public OpenVR()
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B25C", Offset = "0xD0B25C")]
	public class BodyCollider : MonoBehaviour
	{
		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform head;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CapsuleCollider capsuleCollider;

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x1B98B3C", Offset = "0x1B98B3C", VA = "0x1B98B3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x1B98B94", Offset = "0x1B98B94", VA = "0x1B98B94")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1B98D30", Offset = "0x1B98D30", VA = "0x1B98D30")]
		public BodyCollider()
		{
		}
	}
	[Token(Token = "0x200037C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B2C0", Offset = "0xD0B2C0")]
	public class CircularDrive : MonoBehaviour
	{
		[Token(Token = "0x200074E")]
		public enum Axis_t
		{
			[Token(Token = "0x4002E8B")]
			XAxis,
			[Token(Token = "0x4002E8C")]
			YAxis,
			[Token(Token = "0x4002E8D")]
			ZAxis
		}

		[Token(Token = "0x200074F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E1D8", Offset = "0xD0E1D8")]
		private sealed class <HapticPulses>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SteamVR_Controller.Device controller;

			[Token(Token = "0x4002E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float flMagnitude;

			[Token(Token = "0x4002E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int nCount;

			[Token(Token = "0x4002E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <nRangeMax>5__2;

			[Token(Token = "0x4002E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private ushort <i>5__3;

			[Token(Token = "0x17000305")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029C7")]
				[Address(RVA = "0x1B9A9F0", Offset = "0x1B9A9F0", VA = "0x1B9A9F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000306")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029C9")]
				[Address(RVA = "0x1B9AA58", Offset = "0x1B9AA58", VA = "0x1B9AA58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x1B99370", Offset = "0x1B99370", VA = "0x1B99370")]
			[DebuggerHidden]
			public <HapticPulses>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x1B9A874", Offset = "0x1B9A874", VA = "0x1B9A874", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x1B9A878", Offset = "0x1B9A878", VA = "0x1B9A878", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x1B9A9F8", Offset = "0x1B9A9F8", VA = "0x1B9A9F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD171BC", Offset = "0xD171BC")]
		public Axis_t axisOfRotation;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD171F4", Offset = "0xD171F4")]
		public Collider childCollider;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1722C", Offset = "0xD1722C")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17264", Offset = "0xD17264")]
		public bool hoverLock;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1729C", Offset = "0xD1729C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1729C", Offset = "0xD1729C")]
		public bool limited;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 frozenDistanceMinMaxThreshold;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onFrozenDistanceThreshold;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD172FC", Offset = "0xD172FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD172FC", Offset = "0xD172FC")]
		public float minAngle;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1735C", Offset = "0xD1735C")]
		public bool freezeOnMin;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17394", Offset = "0xD17394")]
		public UnityEvent onMinAngle;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD173CC", Offset = "0xD173CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD173CC", Offset = "0xD173CC")]
		public float maxAngle;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1742C", Offset = "0xD1742C")]
		public bool freezeOnMax;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17464", Offset = "0xD17464")]
		public UnityEvent onMaxAngle;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1749C", Offset = "0xD1749C")]
		public bool forceStart;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD174D4", Offset = "0xD174D4")]
		public float startAngle;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1750C", Offset = "0xD1750C")]
		public bool rotateGameObject;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17544", Offset = "0xD17544")]
		public bool debugPath;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1757C", Offset = "0xD1757C")]
		public int dbgPathLimit;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD175B4", Offset = "0xD175B4")]
		public TextMesh debugText;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD175EC", Offset = "0xD175EC")]
		public float outAngle;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion start;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 worldPlaneNormal;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 localPlaneNormal;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 lastHandProjected;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color red;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color green;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject[] dbgHandObjects;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject[] dbgProjObjects;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GameObject dbgObjectsParent;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int dbgObjectCount;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int dbgObjectIndex;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool driving;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float minMaxAngularThreshold;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool frozen;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float frozenAngle;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 frozenHandWorldPos;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector2 frozenSqDistanceMinMaxThreshold;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Hand handHoverLocked;

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x1B98D38", Offset = "0x1B98D38", VA = "0x1B98D38")]
		private void Freeze(Hand hand)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x1B98D98", Offset = "0x1B98D98", VA = "0x1B98D98")]
		private void UnFreeze()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1B98DB8", Offset = "0x1B98DB8", VA = "0x1B98DB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1B991F0", Offset = "0x1B991F0", VA = "0x1B991F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1B992E0", Offset = "0x1B992E0", VA = "0x1B992E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23A48", Offset = "0xD23A48")]
		private IEnumerator HapticPulses(SteamVR_Controller.Device controller, float flMagnitude, int nCount)
		{
			return null;
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1B9939C", Offset = "0x1B9939C", VA = "0x1B9939C")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x1B99420", Offset = "0x1B99420", VA = "0x1B99420")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x1B994F8", Offset = "0x1B994F8", VA = "0x1B994F8")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x1B996DC", Offset = "0x1B996DC", VA = "0x1B996DC")]
		private Vector3 ComputeToTransformProjected(Transform xForm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x1B99D40", Offset = "0x1B99D40", VA = "0x1B99D40")]
		private void DrawDebugPath(Transform xForm, Vector3 toTransformProjected)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x1B9A414", Offset = "0x1B9A414", VA = "0x1B9A414")]
		private void UpdateLinearMapping()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1B9A5D0", Offset = "0x1B9A5D0", VA = "0x1B9A5D0")]
		private void UpdateGameObject()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1B9A4D4", Offset = "0x1B9A4D4", VA = "0x1B9A4D4")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x1B991C4", Offset = "0x1B991C4", VA = "0x1B991C4")]
		private void UpdateAll()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1B99974", Offset = "0x1B99974", VA = "0x1B99974")]
		private void ComputeAngle(Hand hand)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x1B9A6EC", Offset = "0x1B9A6EC", VA = "0x1B9A6EC")]
		public CircularDrive()
		{
		}
	}
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B324", Offset = "0xD0B324")]
	public class ComplexThrowable : MonoBehaviour
	{
		[Token(Token = "0x2000750")]
		public enum AttachMode
		{
			[Token(Token = "0x4002E96")]
			FixedJoint,
			[Token(Token = "0x4002E97")]
			Force
		}

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float attachForce;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float attachForceDamper;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttachMode attachMode;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Hand> holdingHands;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Rigidbody> holdingBodies;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector3> holdingPoints;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Rigidbody> rigidBodies;

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x1B9AA60", Offset = "0x1B9AA60", VA = "0x1B9AA60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1B9AAB4", Offset = "0x1B9AAB4", VA = "0x1B9AAB4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x1B9AD48", Offset = "0x1B9AD48", VA = "0x1B9AD48")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x1B9ADE4", Offset = "0x1B9ADE4", VA = "0x1B9ADE4")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1B9AE80", Offset = "0x1B9AE80", VA = "0x1B9AE80")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x1B9AECC", Offset = "0x1B9AECC", VA = "0x1B9AECC")]
		private void PhysicsAttach(Hand hand)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1B9AB7C", Offset = "0x1B9AB7C", VA = "0x1B9AB7C")]
		private bool PhysicsDetach(Hand hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1B9B30C", Offset = "0x1B9B30C", VA = "0x1B9B30C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1B9B5D4", Offset = "0x1B9B5D4", VA = "0x1B9B5D4")]
		public ComplexThrowable()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class ControllerHoverHighlight : MonoBehaviour
	{
		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material highLightMaterial;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fireHapticsOnHightlight;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer bodyMeshRenderer;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer trackingHatMeshRenderer;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool renderModelLoaded;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x100D678", Offset = "0x100D678", VA = "0x100D678")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x100D6D0", Offset = "0x100D6D0", VA = "0x100D6D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x100D774", Offset = "0x100D774", VA = "0x100D774")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x100D794", Offset = "0x100D794", VA = "0x100D794")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x100D7B4", Offset = "0x100D7B4", VA = "0x100D7B4")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x100D844", Offset = "0x100D844", VA = "0x100D844")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x100DD80", Offset = "0x100DD80", VA = "0x100DD80")]
		private void OnParentHandHoverBegin(Interactable other)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x100DF80", Offset = "0x100DF80", VA = "0x100DF80")]
		private void OnParentHandHoverEnd(Interactable other)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x100E09C", Offset = "0x100E09C", VA = "0x100E09C")]
		private void OnParentHandInputFocusAcquired()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x100E1BC", Offset = "0x100E1BC", VA = "0x100E1BC")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x100DE68", Offset = "0x100DE68", VA = "0x100DE68")]
		public void ShowHighlight()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x100DF84", Offset = "0x100DF84", VA = "0x100DF84")]
		public void HideHighlight()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x100E1C0", Offset = "0x100E1C0", VA = "0x100E1C0")]
		public ControllerHoverHighlight()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public static class CustomEvents
	{
		[Serializable]
		[Token(Token = "0x2000751")]
		public class UnityEventSingleFloat : UnityEvent<float>
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x100E220", Offset = "0x100E220", VA = "0x100E220")]
			public UnityEventSingleFloat()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000752")]
		public class UnityEventHand : UnityEvent<Hand>
		{
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x100E1D0", Offset = "0x100E1D0", VA = "0x100E1D0")]
			public UnityEventHand()
			{
			}
		}
	}
	[Token(Token = "0x2000380")]
	public class DebugUI : MonoBehaviour
	{
		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Player player;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugUI _instance;

		[Token(Token = "0x170000FB")]
		public static DebugUI instance
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x100E270", Offset = "0x100E270", VA = "0x100E270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x100E33C", Offset = "0x100E33C", VA = "0x100E33C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x100E360", Offset = "0x100E360", VA = "0x100E360")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x100E4DC", Offset = "0x100E4DC", VA = "0x100E4DC")]
		public DebugUI()
		{
		}
	}
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B388", Offset = "0xD0B388")]
	public class DestroyOnDetachedFromHand : MonoBehaviour
	{
		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x100E4E4", Offset = "0x100E4E4", VA = "0x100E4E4")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x100E560", Offset = "0x100E560", VA = "0x100E560")]
		public DestroyOnDetachedFromHand()
		{
		}
	}
	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B3EC", Offset = "0xD0B3EC")]
	public class DestroyOnParticleSystemDeath : MonoBehaviour
	{
		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem particles;

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x100E568", Offset = "0x100E568", VA = "0x100E568")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x100E5E0", Offset = "0x100E5E0", VA = "0x100E5E0")]
		private void CheckParticleSystem()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x100E680", Offset = "0x100E680", VA = "0x100E680")]
		public DestroyOnParticleSystemDeath()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class DestroyOnTriggerEnter : MonoBehaviour
	{
		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tagFilter;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useTag;

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x100E688", Offset = "0x100E688", VA = "0x100E688")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x100E6BC", Offset = "0x100E6BC", VA = "0x100E6BC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x100E7B4", Offset = "0x100E7B4", VA = "0x100E7B4")]
		public DestroyOnTriggerEnter()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class DistanceHaptics : MonoBehaviour
	{
		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E1E8", Offset = "0xD0E1E8")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DistanceHaptics <>4__this;

			[Token(Token = "0x17000307")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029CF")]
				[Address(RVA = "0x100EAA4", Offset = "0x100EAA4", VA = "0x100EAA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000308")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029D1")]
				[Address(RVA = "0x100EB0C", Offset = "0x100EB0C", VA = "0x100EB0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x100E82C", Offset = "0x100E82C", VA = "0x100E82C")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x100E8C8", Offset = "0x100E8C8", VA = "0x100E8C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x100E8CC", Offset = "0x100E8CC", VA = "0x100E8CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x100EAAC", Offset = "0x100EAAC", VA = "0x100EAAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform firstTransform;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform secondTransform;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve distanceIntensityCurve;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve pulseIntervalCurve;

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x100E7BC", Offset = "0x100E7BC", VA = "0x100E7BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23AAC", Offset = "0xD23AAC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x100E858", Offset = "0x100E858", VA = "0x100E858")]
		public DistanceHaptics()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x100EB14", Offset = "0x100EB14", VA = "0x100EB14")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x100EB7C", Offset = "0x100EB7C", VA = "0x100EB7C")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class EnumFlags : PropertyAttribute
	{
		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x100EB84", Offset = "0x100EB84", VA = "0x100EB84")]
		public EnumFlags()
		{
		}
	}
	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B450", Offset = "0xD0B450")]
	public class FallbackCameraController : MonoBehaviour
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shiftSpeed;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showInstructions;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 startEulerAngles;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 startMousePosition;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float realTime;

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x100EB8C", Offset = "0x100EB8C", VA = "0x100EB8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x100EBB4", Offset = "0x100EBB4", VA = "0x100EBB4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x100EF1C", Offset = "0x100EF1C", VA = "0x100EF1C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x100EFD0", Offset = "0x100EFD0", VA = "0x100EFD0")]
		public FallbackCameraController()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class Hand : MonoBehaviour
	{
		[Token(Token = "0x2000754")]
		public enum HandType
		{
			[Token(Token = "0x4002E9C")]
			Left,
			[Token(Token = "0x4002E9D")]
			Right,
			[Token(Token = "0x4002E9E")]
			Any
		}

		[Token(Token = "0x2000755")]
		[Flags]
		public enum AttachmentFlags
		{
			[Token(Token = "0x4002EA0")]
			SnapOnAttach = 1,
			[Token(Token = "0x4002EA1")]
			DetachOthers = 2,
			[Token(Token = "0x4002EA2")]
			DetachFromOtherHand = 4,
			[Token(Token = "0x4002EA3")]
			ParentToHand = 8
		}

		[Token(Token = "0x2000756")]
		public struct AttachedObject
		{
			[Token(Token = "0x4002EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject attachedObject;

			[Token(Token = "0x4002EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject originalParent;

			[Token(Token = "0x4002EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isParentedToHand;
		}

		[Token(Token = "0x2000757")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E208", Offset = "0xD0E208")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4002EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject objectToDetach;

			[Token(Token = "0x60029D2")]
			[Address(RVA = "0x1010428", Offset = "0x1010428", VA = "0x1010428")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x1011ED4", Offset = "0x1011ED4", VA = "0x1011ED4")]
			internal bool <DetachObject>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E218", Offset = "0xD0E218")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<AttachedObject> <>9__45_0;

			[Token(Token = "0x60029D5")]
			[Address(RVA = "0x1011E5C", Offset = "0x1011E5C", VA = "0x1011E5C")]
			public <>c()
			{
			}

			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x1011E64", Offset = "0x1011E64", VA = "0x1011E64")]
			internal bool <CleanUpAttachedObjectStack>b__45_0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000759")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E228", Offset = "0xD0E228")]
		private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand <>4__this;

			[Token(Token = "0x17000309")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029DA")]
				[Address(RVA = "0x10122F4", Offset = "0x10122F4", VA = "0x10122F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029DC")]
				[Address(RVA = "0x101235C", Offset = "0x101235C", VA = "0x101235C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x1010770", Offset = "0x1010770", VA = "0x1010770")]
			[DebuggerHidden]
			public <Start>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x60029D8")]
			[Address(RVA = "0x1011FEC", Offset = "0x1011FEC", VA = "0x1011FEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029D9")]
			[Address(RVA = "0x1011FF0", Offset = "0x1011FF0", VA = "0x1011FF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029DB")]
			[Address(RVA = "0x10122FC", Offset = "0x10122FC", VA = "0x10122FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200075A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E238", Offset = "0xD0E238")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4002EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Interactable contacting;

			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x101079C", Offset = "0x101079C", VA = "0x101079C")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x60029DE")]
			[Address(RVA = "0x1011F54", Offset = "0x1011F54", VA = "0x1011F54")]
			internal bool <UpdateHovering>b__0(AttachedObject l)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BF2")]
		public const AttachmentFlags defaultAttachmentFlags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand otherHand;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandType startingHandType;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hoverSphereTransform;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hoverSphereRadius;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask hoverLayerMask;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float hoverUpdateInterval;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera noSteamVRFallbackCamera;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float noSteamVRFallbackMaxDistanceNoItem;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float noSteamVRFallbackMaxDistanceWithItem;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float noSteamVRFallbackInteractorDistance;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SteamVR_Controller.Device controller;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject controllerPrefab;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject controllerObject;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showDebugText;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool spewDebugText;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<AttachedObject> attachedObjects;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD17634", Offset = "0xD17634")]
		private bool <hoverLocked>k__BackingField;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Interactable _hoveringInteractable;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TextMesh debugText;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int prevOverlappingColliders;

		[Token(Token = "0x4001C07")]
		private const int ColliderArraySize = 16;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] overlappingColliders;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Player playerInstance;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject applicationLostFocusObject;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SteamVR_Events.Action inputFocusAction;

		[Token(Token = "0x170000FC")]
		public ReadOnlyCollection<AttachedObject> AttachedObjects
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x100EFEC", Offset = "0x100EFEC", VA = "0x100EFEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public bool hoverLocked
		{
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0x100F044", Offset = "0x100F044", VA = "0x100F044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23B10", Offset = "0xD23B10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0x100F04C", Offset = "0x100F04C", VA = "0x100F04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23B20", Offset = "0xD23B20")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public Interactable hoveringInteractable
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x100F058", Offset = "0x100F058", VA = "0x100F058")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x100F060", Offset = "0x100F060", VA = "0x100F060")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public GameObject currentAttachedObject
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x100F378", Offset = "0x100F378", VA = "0x100F378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x100F4E8", Offset = "0x100F4E8", VA = "0x100F4E8")]
		public Transform GetAttachmentTransform(string attachmentPoint = "")
		{
			return null;
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x100F5B8", Offset = "0x100F5B8", VA = "0x100F5B8")]
		public HandType GuessCurrentHandType()
		{
			return default(HandType);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x100F6DC", Offset = "0x100F6DC", VA = "0x100F6DC")]
		public void AttachObject(GameObject objectToAttach, AttachmentFlags flags = AttachmentFlags.SnapOnAttach | AttachmentFlags.DetachOthers | AttachmentFlags.DetachFromOtherHand | AttachmentFlags.ParentToHand, string attachmentPoint = "")
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x100FA44", Offset = "0x100FA44", VA = "0x100FA44")]
		public void DetachObject(GameObject objectToDetach, bool restoreOriginalParent = true)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x1010430", Offset = "0x1010430", VA = "0x1010430")]
		public Vector3 GetTrackedObjectVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x10104E8", Offset = "0x10104E8", VA = "0x10104E8")]
		public Vector3 GetTrackedObjectAngularVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x100F3F0", Offset = "0x100F3F0", VA = "0x100F3F0")]
		private void CleanUpAttachedObjectStack()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x10105A0", Offset = "0x10105A0", VA = "0x10105A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x1010700", Offset = "0x1010700", VA = "0x1010700")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23B30", Offset = "0xD23B30")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x100FDC8", Offset = "0x100FDC8", VA = "0x100FDC8")]
		private void UpdateHovering()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x10107A4", Offset = "0x10107A4", VA = "0x10107A4")]
		private void UpdateNoSteamVRFallback()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x1010B3C", Offset = "0x1010B3C", VA = "0x1010B3C")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x10110B8", Offset = "0x10110B8", VA = "0x10110B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x10111C4", Offset = "0x10111C4", VA = "0x10111C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1011200", Offset = "0x1011200", VA = "0x1011200")]
		private void Update()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x1011314", Offset = "0x1011314", VA = "0x1011314")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x10113C4", Offset = "0x10113C4", VA = "0x10113C4")]
		private void OnInputFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x1011604", Offset = "0x1011604", VA = "0x1011604")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x1011608", Offset = "0x1011608", VA = "0x1011608")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x100F2AC", Offset = "0x100F2AC", VA = "0x100F2AC")]
		private void HandDebugLog(string msg)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x10114A4", Offset = "0x10114A4", VA = "0x10114A4")]
		private void UpdateHandPoses()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x10116EC", Offset = "0x10116EC", VA = "0x10116EC")]
		public void HoverLock(Interactable interactable)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x101176C", Offset = "0x101176C", VA = "0x101176C")]
		public void HoverUnlock(Interactable interactable)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x1011818", Offset = "0x1011818", VA = "0x1011818")]
		public bool GetStandardInteractionButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x10118B8", Offset = "0x10118B8", VA = "0x10118B8")]
		public bool GetStandardInteractionButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x1011958", Offset = "0x1011958", VA = "0x1011958")]
		public bool GetStandardInteractionButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x10119F8", Offset = "0x10119F8", VA = "0x10119F8")]
		private void InitController(int index)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1011D50", Offset = "0x1011D50", VA = "0x1011D50")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B4B4", Offset = "0xD0B4B4")]
	public class HapticRack : MonoBehaviour
	{
		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17644", Offset = "0xD17644")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1767C", Offset = "0xD1767C")]
		public int teethCount;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD176B4", Offset = "0xD176B4")]
		public int minimumPulseDuration;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD176EC", Offset = "0xD176EC")]
		public int maximumPulseDuration;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17724", Offset = "0xD17724")]
		public UnityEvent onPulse;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hand hand;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousToothIndex;

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x1012364", Offset = "0x1012364", VA = "0x1012364")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x10123F4", Offset = "0x10123F4", VA = "0x10123F4")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x10123FC", Offset = "0x10123FC", VA = "0x10123FC")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x1012404", Offset = "0x1012404", VA = "0x1012404")]
		private void Update()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x10124B4", Offset = "0x10124B4", VA = "0x10124B4")]
		private void Pulse()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x101258C", Offset = "0x101258C", VA = "0x101258C")]
		public HapticRack()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class HideOnHandFocusLost : MonoBehaviour
	{
		[Token(Token = "0x6001416")]
		[Address(RVA = "0x10125B0", Offset = "0x10125B0", VA = "0x10125B0")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x10125D8", Offset = "0x10125D8", VA = "0x10125D8")]
		public HideOnHandFocusLost()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class IgnoreHovering : MonoBehaviour
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1775C", Offset = "0xD1775C")]
		public Hand onlyIgnoreHand;

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x10125E0", Offset = "0x10125E0", VA = "0x10125E0")]
		public IgnoreHovering()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class InputModule : BaseInputModule
	{
		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject submitObject;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InputModule _instance;

		[Token(Token = "0x17000100")]
		public static InputModule instance
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0x10125E8", Offset = "0x10125E8", VA = "0x10125E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x10126B4", Offset = "0x10126B4", VA = "0x10126B4", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x1012744", Offset = "0x1012744", VA = "0x1012744")]
		public void HoverBegin(GameObject gameObject)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x1012830", Offset = "0x1012830", VA = "0x1012830")]
		public void HoverEnd(GameObject gameObject)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x1012934", Offset = "0x1012934", VA = "0x1012934")]
		public void Submit(GameObject gameObject)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x101293C", Offset = "0x101293C", VA = "0x101293C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x1012A74", Offset = "0x1012A74", VA = "0x1012A74")]
		public InputModule()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class Interactable : MonoBehaviour
	{
		[Token(Token = "0x200075B")]
		public delegate void OnAttachedToHandDelegate(Hand hand);

		[Token(Token = "0x200075C")]
		public delegate void OnDetachedFromHandDelegate(Hand hand);

		[Token(Token = "0x14000013")]
		[HideInInspector]
		public event OnAttachedToHandDelegate onAttachedToHand
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x1012A7C", Offset = "0x1012A7C", VA = "0x1012A7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23B94", Offset = "0xD23B94")]
			add
			{
			}
			[Token(Token = "0x6001421")]
			[Address(RVA = "0x1012B20", Offset = "0x1012B20", VA = "0x1012B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23BA4", Offset = "0xD23BA4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		[HideInInspector]
		public event OnDetachedFromHandDelegate onDetachedFromHand
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x1012BC4", Offset = "0x1012BC4", VA = "0x1012BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23BB4", Offset = "0xD23BB4")]
			add
			{
			}
			[Token(Token = "0x6001423")]
			[Address(RVA = "0x1012C68", Offset = "0x1012C68", VA = "0x1012C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23BC4", Offset = "0xD23BC4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x1012D0C", Offset = "0x1012D0C", VA = "0x1012D0C")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x10130B0", Offset = "0x10130B0", VA = "0x10130B0")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x1013454", Offset = "0x1013454", VA = "0x1013454")]
		public Interactable()
		{
		}
	}
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B518", Offset = "0xD0B518")]
	public class InteractableButtonEvents : MonoBehaviour
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTriggerDown;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onTriggerUp;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onGripDown;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onGripUp;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onTouchpadDown;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent onTouchpadUp;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent onTouchpadTouch;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent onTouchpadRelease;

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x10134DC", Offset = "0x10134DC", VA = "0x10134DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x10137C0", Offset = "0x10137C0", VA = "0x10137C0")]
		public InteractableButtonEvents()
		{
		}
	}
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B57C", Offset = "0xD0B57C")]
	public class InteractableHoverEvents : MonoBehaviour
	{
		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onHandHoverBegin;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onHandHoverEnd;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onAttachedToHand;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onDetachedFromHand;

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x10137C8", Offset = "0x10137C8", VA = "0x10137C8")]
		private void OnHandHoverBegin()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x10137E4", Offset = "0x10137E4", VA = "0x10137E4")]
		private void OnHandHoverEnd()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1013800", Offset = "0x1013800", VA = "0x1013800")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x101381C", Offset = "0x101381C", VA = "0x101381C")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x1013838", Offset = "0x1013838", VA = "0x1013838")]
		public InteractableHoverEvents()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class ItemPackage : MonoBehaviour
	{
		[Token(Token = "0x200075D")]
		public enum ItemPackageType
		{
			[Token(Token = "0x4002EAF")]
			Unrestricted,
			[Token(Token = "0x4002EB0")]
			OneHanded,
			[Token(Token = "0x4002EB1")]
			TwoHanded
		}

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public new string name;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemPackageType packageType;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject itemPrefab;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject otherHandItemPrefab;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject previewPrefab;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fadedPreviewPrefab;

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x1013840", Offset = "0x1013840", VA = "0x1013840")]
		public ItemPackage()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class ItemPackageReference : MonoBehaviour
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage itemPackage;

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x1013848", Offset = "0x1013848", VA = "0x1013848")]
		public ItemPackageReference()
		{
		}
	}
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B5E0", Offset = "0xD0B5E0")]
	public class ItemPackageSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemPackage _itemPackage;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool useItemPackagePreview;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool useFadedPreview;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject previewObject;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool requireTriggerPressToTake;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool requireTriggerPressToReturn;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool showTriggerHint;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[EnumFlags]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string attachmentPoint;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool takeBackItem;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool acceptDifferentItems;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject spawnedItem;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool itemIsSpawned;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent pickupEvent;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent dropEvent;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool justPickedUpItem;

		[Token(Token = "0x17000101")]
		public ItemPackage itemPackage
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x1013850", Offset = "0x1013850", VA = "0x1013850")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x1013858", Offset = "0x1013858", VA = "0x1013858")]
			set
			{
			}
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x101385C", Offset = "0x101385C", VA = "0x101385C")]
		private void CreatePreviewObject()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x1013DB4", Offset = "0x1013DB4", VA = "0x1013DB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x1013DB8", Offset = "0x1013DB8", VA = "0x1013DB8")]
		private void VerifyItemPackage()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x1013E90", Offset = "0x1013E90", VA = "0x1013E90")]
		private void ItemPackageNotValid()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x1013AC4", Offset = "0x1013AC4", VA = "0x1013AC4")]
		private void ClearPreview()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x1013F84", Offset = "0x1013F84", VA = "0x1013F84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x1014030", Offset = "0x1014030", VA = "0x1014030")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x1014228", Offset = "0x1014228", VA = "0x1014228")]
		private void TakeBackItem(Hand hand)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x101412C", Offset = "0x101412C", VA = "0x101412C")]
		private ItemPackage GetAttachedItemPackage(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x1014714", Offset = "0x1014714", VA = "0x1014714")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x1014824", Offset = "0x1014824", VA = "0x1014824")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x101456C", Offset = "0x101456C", VA = "0x101456C")]
		private void RemoveMatchingItemsFromHandStack(ItemPackage package, Hand hand)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x1014868", Offset = "0x1014868", VA = "0x1014868")]
		private void RemoveMatchingItemTypesFromHand(ItemPackage.ItemPackageType packageType, Hand hand)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x1014284", Offset = "0x1014284", VA = "0x1014284")]
		private void SpawnAndAttachObject(Hand hand)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x10149C8", Offset = "0x10149C8", VA = "0x10149C8")]
		public ItemPackageSpawner()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class LinearAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation animation;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationState animState;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float animLength;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastValue;

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x10149E0", Offset = "0x10149E0", VA = "0x10149E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x1014B44", Offset = "0x1014B44", VA = "0x1014B44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x1014BA0", Offset = "0x1014BA0", VA = "0x1014BA0")]
		public LinearAnimation()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class LinearAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float currentLinearMapping;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int framesUnchanged;

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x1014BA8", Offset = "0x1014BA8", VA = "0x1014BA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x1014CA8", Offset = "0x1014CA8", VA = "0x1014CA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x1014D4C", Offset = "0x1014D4C", VA = "0x1014D4C")]
		public LinearAnimator()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class LinearAudioPitch : MonoBehaviour
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve pitchCurve;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minPitch;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxPitch;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool applyContinuously;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource audioSource;

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x1014D5C", Offset = "0x1014D5C", VA = "0x1014D5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x1014E3C", Offset = "0x1014E3C", VA = "0x1014E3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x1014E4C", Offset = "0x1014E4C", VA = "0x1014E4C")]
		private void Apply()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x1014F08", Offset = "0x1014F08", VA = "0x1014F08")]
		public LinearAudioPitch()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class LinearBlendshape : MonoBehaviour
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastValue;

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x1014F18", Offset = "0x1014F18", VA = "0x1014F18")]
		private void Awake()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x1014FF8", Offset = "0x1014FF8", VA = "0x1014FF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x101506C", Offset = "0x101506C", VA = "0x101506C")]
		public LinearBlendshape()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class LinearDisplacement : MonoBehaviour
	{
		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 displacement;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialPosition;

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x1015074", Offset = "0x1015074", VA = "0x1015074")]
		private void Start()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x1015128", Offset = "0x1015128", VA = "0x1015128")]
		private void Update()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x101526C", Offset = "0x101526C", VA = "0x101526C")]
		public LinearDisplacement()
		{
		}
	}
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B644", Offset = "0xD0B644")]
	public class LinearDrive : MonoBehaviour
	{
		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform startPosition;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform endPosition;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LinearMapping linearMapping;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool repositionGameObject;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool maintainMomemntum;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float momemtumDampenRate;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float initialMappingOffset;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int numMappingChangeSamples;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] mappingChangeSamples;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float prevMapping;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float mappingChangeRate;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int sampleCount;

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x1015274", Offset = "0x1015274", VA = "0x1015274")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x10152CC", Offset = "0x10152CC", VA = "0x10152CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x1015604", Offset = "0x1015604", VA = "0x1015604")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x1015898", Offset = "0x1015898", VA = "0x1015898")]
		private void CalculateMappingChangeRate()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1015408", Offset = "0x1015408", VA = "0x1015408")]
		private void UpdateLinearMapping(Transform tr)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1015724", Offset = "0x1015724", VA = "0x1015724")]
		private float CalculateLinearMapping(Transform tr)
		{
			return default(float);
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x1015984", Offset = "0x1015984", VA = "0x1015984")]
		private void Update()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x1015B3C", Offset = "0x1015B3C", VA = "0x1015B3C")]
		public LinearDrive()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class LinearMapping : MonoBehaviour
	{
		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x1015B5C", Offset = "0x1015B5C", VA = "0x1015B5C")]
		public LinearMapping()
		{
		}
	}
	[Token(Token = "0x200039A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B6A8", Offset = "0xD0B6A8")]
	public class PlaySound : MonoBehaviour
	{
		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD177C4", Offset = "0xD177C4")]
		public AudioClip[] waveFile;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD177FC", Offset = "0xD177FC")]
		public bool stopOnPlay;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17834", Offset = "0xD17834")]
		public bool disableOnEnd;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1786C", Offset = "0xD1786C")]
		public bool looping;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD178A4", Offset = "0xD178A4")]
		public bool stopOnEnd;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD178DC", Offset = "0xD178DC")]
		public bool playOnAwakeWithDelay;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD17914", Offset = "0xD17914")]
		public bool useRandomVolume;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1794C", Offset = "0xD1794C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1794C", Offset = "0xD1794C")]
		public float volMin;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD179A0", Offset = "0xD179A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD179A0", Offset = "0xD179A0")]
		public float volMax;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD179F4", Offset = "0xD179F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD179F4", Offset = "0xD179F4")]
		public bool useRandomPitch;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17A54", Offset = "0xD17A54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD17A54", Offset = "0xD17A54")]
		public float pitchMin;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17AA8", Offset = "0xD17AA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD17AA8", Offset = "0xD17AA8")]
		public float pitchMax;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD17AFC", Offset = "0xD17AFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17AFC", Offset = "0xD17AFC")]
		public bool useRetriggerTime;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17B5C", Offset = "0xD17B5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD17B5C", Offset = "0xD17B5C")]
		public float timeInitial;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17BB4", Offset = "0xD17BB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD17BB4", Offset = "0xD17BB4")]
		public float timeMin;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17C0C", Offset = "0xD17C0C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD17C0C", Offset = "0xD17C0C")]
		public float timeMax;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD17C64", Offset = "0xD17C64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17C64", Offset = "0xD17C64")]
		public bool useRandomSilence;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17CC4", Offset = "0xD17CC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD17CC4", Offset = "0xD17CC4")]
		public float percentToNotPlay;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD17D18", Offset = "0xD17D18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17D18", Offset = "0xD17D18")]
		public float delayOffsetTime;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioClip clip;

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1015B64", Offset = "0x1015B64", VA = "0x1015B64")]
		private void Awake()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x1015C94", Offset = "0x1015C94", VA = "0x1015C94")]
		public void Play()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x1015CA4", Offset = "0x1015CA4", VA = "0x1015CA4")]
		public void PlayWithDelay(float delayTime)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x1015DE0", Offset = "0x1015DE0", VA = "0x1015DE0")]
		public AudioClip PlayOneShotSound()
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x1015D1C", Offset = "0x1015D1C", VA = "0x1015D1C")]
		public AudioClip PlayLooping()
		{
			return null;
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x1015FC0", Offset = "0x1015FC0", VA = "0x1015FC0")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x1015FE8", Offset = "0x1015FE8", VA = "0x1015FE8")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x1015EA8", Offset = "0x1015EA8", VA = "0x1015EA8")]
		private void SetAudioSource()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x1016004", Offset = "0x1016004", VA = "0x1016004")]
		public PlaySound()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17D78", Offset = "0xD17D78")]
		public Transform trackingOriginTransform;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17DB0", Offset = "0xD17DB0")]
		public Transform[] hmdTransforms;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17DE8", Offset = "0xD17DE8")]
		public Hand[] hands;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17E20", Offset = "0xD17E20")]
		public Collider headCollider;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17E58", Offset = "0xD17E58")]
		public GameObject rigSteamVR;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17E90", Offset = "0xD17E90")]
		public GameObject rig2DFallback;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17EC8", Offset = "0xD17EC8")]
		public Transform audioListener;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool allowToggleTo2D;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Player _instance;

		[Token(Token = "0x17000102")]
		public static Player instance
		{
			[Token(Token = "0x6001463")]
			[Address(RVA = "0x1009160", Offset = "0x1009160", VA = "0x1009160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		public int handCount
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x1013730", Offset = "0x1013730", VA = "0x1013730")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000104")]
		public Hand leftHand
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x1016024", Offset = "0x1016024", VA = "0x1016024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		public Hand rightHand
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x10160EC", Offset = "0x10160EC", VA = "0x10160EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		public SteamVR_Controller.Device leftController
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x10161B8", Offset = "0x10161B8", VA = "0x10161B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		public SteamVR_Controller.Device rightController
		{
			[Token(Token = "0x6001469")]
			[Address(RVA = "0x101624C", Offset = "0x101624C", VA = "0x101624C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		public Transform hmdTransform
		{
			[Token(Token = "0x600146A")]
			[Address(RVA = "0x100C51C", Offset = "0x100C51C", VA = "0x100C51C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public float eyeHeight
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0x10162E0", Offset = "0x10162E0", VA = "0x10162E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700010A")]
		public Vector3 feetPositionGuess
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0x1016470", Offset = "0x1016470", VA = "0x1016470")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700010B")]
		public Vector3 bodyDirectionGuess
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0x101662C", Offset = "0x101662C", VA = "0x101662C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x1013680", Offset = "0x1013680", VA = "0x1013680")]
		public Hand GetHand(int i)
		{
			return null;
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x10167FC", Offset = "0x10167FC", VA = "0x10167FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x1016884", Offset = "0x1016884", VA = "0x1016884")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x1016AC0", Offset = "0x1016AC0", VA = "0x1016AC0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x100E378", Offset = "0x100E378", VA = "0x100E378")]
		public void Draw2DDebug()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x1016914", Offset = "0x1016914", VA = "0x1016914")]
		private void ActivateRig(GameObject rig)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1017028", Offset = "0x1017028", VA = "0x1017028")]
		public void PlayerShotSelf()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x101702C", Offset = "0x101702C", VA = "0x101702C")]
		public Player()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class SeeThru : MonoBehaviour
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material seeThruMaterial;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject seeThru;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable interactable;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer sourceRenderer;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer destRenderer;

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x101703C", Offset = "0x101703C", VA = "0x101703C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x1017614", Offset = "0x1017614", VA = "0x1017614")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x10176CC", Offset = "0x10176CC", VA = "0x10176CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x1017784", Offset = "0x1017784", VA = "0x1017784")]
		private void AttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x10177A4", Offset = "0x10177A4", VA = "0x10177A4")]
		private void DetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x10177C4", Offset = "0x10177C4", VA = "0x10177C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x1017A08", Offset = "0x1017A08", VA = "0x1017A08")]
		public SeeThru()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class SleepOnAwake : MonoBehaviour
	{
		[Token(Token = "0x600147C")]
		[Address(RVA = "0x1017A10", Offset = "0x1017A10", VA = "0x1017A10")]
		private void Awake()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1017AB8", Offset = "0x1017AB8", VA = "0x1017AB8")]
		public SleepOnAwake()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class SoundDeparent : MonoBehaviour
	{
		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroyAfterPlayOnce;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x1017AC0", Offset = "0x1017AC0", VA = "0x1017AC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x1017B18", Offset = "0x1017B18", VA = "0x1017B18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x1017C04", Offset = "0x1017C04", VA = "0x1017C04")]
		public SoundDeparent()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class SoundPlayOneshot : MonoBehaviour
	{
		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] waveFiles;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource thisAudioSource;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volMin;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float volMax;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float pitchMin;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitchMax;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool playOnAwake;

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x1017C14", Offset = "0x1017C14", VA = "0x1017C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x1017C84", Offset = "0x1017C84", VA = "0x1017C84")]
		public void Play()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x1017DC0", Offset = "0x1017DC0", VA = "0x1017DC0")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x1017E54", Offset = "0x1017E54", VA = "0x1017E54")]
		public void UnPause()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x1017EE8", Offset = "0x1017EE8", VA = "0x1017EE8")]
		public SoundPlayOneshot()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class SpawnAndAttachAfterControllerIsTracking : MonoBehaviour
	{
		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Hand hand;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject itemPrefab;

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x1017EF0", Offset = "0x1017EF0", VA = "0x1017EF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x1017F48", Offset = "0x1017F48", VA = "0x1017F48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x10180CC", Offset = "0x10180CC", VA = "0x10180CC")]
		public SpawnAndAttachAfterControllerIsTracking()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class SpawnAndAttachToHand : MonoBehaviour
	{
		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hand hand;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject prefab;

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x10180D4", Offset = "0x10180D4", VA = "0x10180D4")]
		public void SpawnAndAttach(Hand passedInhand)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x10181E4", Offset = "0x10181E4", VA = "0x10181E4")]
		public SpawnAndAttachToHand()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class SpawnRenderModel : MonoBehaviour
	{
		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] materials;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SteamVR_RenderModel[] renderModels;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Hand hand;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SpawnRenderModel> spawnRenderModels;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastFrameUpdated;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int spawnRenderModelUpdateIndex;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x10181EC", Offset = "0x10181EC", VA = "0x10181EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x10182B4", Offset = "0x10182B4", VA = "0x10182B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x10185EC", Offset = "0x10185EC", VA = "0x10185EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x1018788", Offset = "0x1018788", VA = "0x1018788")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x1018790", Offset = "0x1018790", VA = "0x1018790")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x1018798", Offset = "0x1018798", VA = "0x1018798")]
		private void Update()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x1018354", Offset = "0x1018354", VA = "0x1018354")]
		private void ShowController()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x101868C", Offset = "0x101868C", VA = "0x101868C")]
		private void HideController()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x1018B38", Offset = "0x1018B38", VA = "0x1018B38")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool success)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x1018E44", Offset = "0x1018E44", VA = "0x1018E44")]
		public SpawnRenderModel()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B70C", Offset = "0xD0B70C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B70C", Offset = "0xD0B70C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B70C", Offset = "0xD0B70C")]
	public class Throwable : MonoBehaviour
	{
		[Token(Token = "0x200075E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E248", Offset = "0xD0E248")]
		private sealed class <LateDetach>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Hand hand;

			[Token(Token = "0x4002EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Throwable <>4__this;

			[Token(Token = "0x1700030B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029EA")]
				[Address(RVA = "0x101A18C", Offset = "0x101A18C", VA = "0x101A18C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029EC")]
				[Address(RVA = "0x101A1F4", Offset = "0x101A1F4", VA = "0x101A1F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029E7")]
			[Address(RVA = "0x1019FB0", Offset = "0x1019FB0", VA = "0x1019FB0")]
			[DebuggerHidden]
			public <LateDetach>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x101A0C8", Offset = "0x101A0C8", VA = "0x101A0C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x101A0CC", Offset = "0x101A0CC", VA = "0x101A0CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x101A194", Offset = "0x101A194", VA = "0x101A194", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EnumFlags]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17F00", Offset = "0xD17F00")]
		public Hand.AttachmentFlags attachmentFlags;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17F4C", Offset = "0xD17F4C")]
		public string attachmentPoint;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17F84", Offset = "0xD17F84")]
		public float catchSpeedThreshold;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17FBC", Offset = "0xD17FBC")]
		public bool restoreOriginalParent;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool attachEaseIn;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve snapAttachEaseInCurve;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float snapAttachEaseInTime;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] attachEaseInAttachmentNames;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VelocityEstimator velocityEstimator;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool attached;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float attachTime;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 attachPosition;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion attachRotation;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform attachEaseInTransform;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent onPickUp;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent onDetachFromHand;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool snapAttachEaseInCompleted;

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x1018F28", Offset = "0x1018F28", VA = "0x1018F28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x1018FBC", Offset = "0x1018FBC", VA = "0x1018FBC")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x1019094", Offset = "0x1019094", VA = "0x1019094")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x1019114", Offset = "0x1019114", VA = "0x1019114")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x10191E0", Offset = "0x10191E0", VA = "0x10191E0")]
		private void OnAttachedToHand(Hand hand)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x1019474", Offset = "0x1019474", VA = "0x1019474")]
		private void OnDetachedFromHand(Hand hand)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x1019CC0", Offset = "0x1019CC0", VA = "0x1019CC0")]
		private void HandAttachedUpdate(Hand hand)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x1019F34", Offset = "0x1019F34", VA = "0x1019F34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23BD4", Offset = "0xD23BD4")]
		private IEnumerator LateDetach(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x1019FDC", Offset = "0x1019FDC", VA = "0x1019FDC")]
		private void OnHandFocusAcquired(Hand hand)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x101A01C", Offset = "0x101A01C", VA = "0x101A01C")]
		private void OnHandFocusLost(Hand hand)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x101A074", Offset = "0x101A074", VA = "0x101A074")]
		public Throwable()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B7C0", Offset = "0xD0B7C0")]
	public class UIElement : MonoBehaviour
	{
		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomEvents.UnityEventHand onHandClick;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Hand currentHand;

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x101A1FC", Offset = "0x101A1FC", VA = "0x101A1FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x101A2E8", Offset = "0x101A2E8", VA = "0x101A2E8")]
		private void OnHandHoverBegin(Hand hand)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x101A39C", Offset = "0x101A39C", VA = "0x101A39C")]
		private void OnHandHoverEnd(Hand hand)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x101A454", Offset = "0x101A454", VA = "0x101A454")]
		private void HandHoverUpdate(Hand hand)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x101A51C", Offset = "0x101A51C", VA = "0x101A51C")]
		private void OnButtonClick()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x101A578", Offset = "0x101A578", VA = "0x101A578")]
		public UIElement()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class Unparent : MonoBehaviour
	{
		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform oldParent;

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x101A580", Offset = "0x101A580", VA = "0x101A580")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x101A67C", Offset = "0x101A67C", VA = "0x101A67C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x101A740", Offset = "0x101A740", VA = "0x101A740")]
		public Transform GetOldParent()
		{
			return null;
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x101A748", Offset = "0x101A748", VA = "0x101A748")]
		public Unparent()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public static class Util
	{
		[Token(Token = "0x200075F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E258", Offset = "0xD0E258")]
		private sealed class <WrapCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator coroutine;

			[Token(Token = "0x4002EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCoroutineFinished;

			[Token(Token = "0x1700030D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029F0")]
				[Address(RVA = "0x101C5D0", Offset = "0x101C5D0", VA = "0x101C5D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029F2")]
				[Address(RVA = "0x101C638", Offset = "0x101C638", VA = "0x101C638", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x101BD28", Offset = "0x101BD28", VA = "0x101BD28")]
			[DebuggerHidden]
			public <WrapCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x101C468", Offset = "0x101C468", VA = "0x101C468", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029EF")]
			[Address(RVA = "0x101C46C", Offset = "0x101C46C", VA = "0x101C46C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029F1")]
			[Address(RVA = "0x101C5D8", Offset = "0x101C5D8", VA = "0x101C5D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E268", Offset = "0xD0E268")]
		private sealed class <>c__47<T>
		{
			[Token(Token = "0x4002EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__47<T> <>9;

			[Token(Token = "0x4002EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, T> <>9__47_0;

			[Token(Token = "0x60029F4")]
			public <>c__47()
			{
			}

			[Token(Token = "0x60029F5")]
			internal T <Median>b__47_0(T x)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x4001CA9")]
		public const float FeetToMeters = 0.3048f;

		[Token(Token = "0x4001CAA")]
		public const float FeetToCentimeters = 30.48f;

		[Token(Token = "0x4001CAB")]
		public const float InchesToMeters = 0.0254f;

		[Token(Token = "0x4001CAC")]
		public const float InchesToCentimeters = 2.54f;

		[Token(Token = "0x4001CAD")]
		public const float MetersToFeet = 3.28084f;

		[Token(Token = "0x4001CAE")]
		public const float MetersToInches = 39.3701f;

		[Token(Token = "0x4001CAF")]
		public const float CentimetersToFeet = 0.0328084f;

		[Token(Token = "0x4001CB0")]
		public const float CentimetersToInches = 0.393701f;

		[Token(Token = "0x4001CB1")]
		public const float KilometersToMiles = 0.621371f;

		[Token(Token = "0x4001CB2")]
		public const float MilesToKilometers = 1.60934f;

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x101A750", Offset = "0x101A750", VA = "0x101A750")]
		public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x100C154", Offset = "0x100C154", VA = "0x100C154")]
		public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
		{
			return default(float);
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x101A76C", Offset = "0x101A76C", VA = "0x101A76C")]
		public static float Approach(float target, float value, float speed)
		{
			return default(float);
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x101A794", Offset = "0x101A794", VA = "0x101A794")]
		public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x101A8AC", Offset = "0x101A8AC", VA = "0x101A8AC")]
		public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x101AA84", Offset = "0x101AA84", VA = "0x101AA84")]
		public static Vector3 Vector3FromString(string szString)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x101ABC0", Offset = "0x101ABC0", VA = "0x101ABC0")]
		public static Vector2 Vector2FromString(string szString)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x101ACFC", Offset = "0x101ACFC", VA = "0x101ACFC")]
		public static float Normalize(float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x101AD0C", Offset = "0x101AD0C", VA = "0x101AD0C")]
		public static Vector3 Vector2AsVector3(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x101AD48", Offset = "0x101AD48", VA = "0x101AD48")]
		public static Vector2 Vector3AsVector2(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x101AD78", Offset = "0x101AD78", VA = "0x101AD78")]
		public static float AngleOf(Vector2 v)
		{
			return default(float);
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x101AE30", Offset = "0x101AE30", VA = "0x101AE30")]
		public static float YawOf(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x60014B7")]
		public static void Swap<T>(ref T lhs, ref T rhs)
		{
		}

		[Token(Token = "0x60014B8")]
		public static void Shuffle<T>(T[] array)
		{
		}

		[Token(Token = "0x60014B9")]
		public static void Shuffle<T>(List<T> list)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x101AEF8", Offset = "0x101AEF8", VA = "0x101AEF8")]
		public static int RandomWithLookback(int min, int max, List<int> history, int historyCount)
		{
			return default(int);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x101AFF8", Offset = "0x101AFF8", VA = "0x101AFF8")]
		public static Transform FindChild(Transform parent, string name)
		{
			return null;
		}

		[Token(Token = "0x60014BC")]
		public static bool IsNullOrEmpty<T>(T[] array)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BD")]
		public static bool IsValidIndex<T>(T[] array, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		public static bool IsValidIndex<T>(List<T> list, int i)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BF")]
		public static int FindOrAdd<T>(List<T> list, T item)
		{
			return default(int);
		}

		[Token(Token = "0x60014C0")]
		public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match)
		{
			return null;
		}

		[Token(Token = "0x60014C1")]
		public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60014C2")]
		public static void FastRemove<T>(List<T> list, int index)
		{
		}

		[Token(Token = "0x60014C3")]
		public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : MonoBehaviour where U : MonoBehaviour
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x101B2F4", Offset = "0x101B2F4", VA = "0x101B2F4")]
		public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x101B3AC", Offset = "0x101B3AC", VA = "0x101B3AC")]
		public static void DrawCross(Vector3 origin, Color crossColor, float size)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x1018A3C", Offset = "0x1018A3C", VA = "0x1018A3C")]
		public static void ResetTransform(Transform t, bool resetScale = true)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x101B6A0", Offset = "0x101B6A0", VA = "0x101B6A0")]
		public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x101B88C", Offset = "0x101B88C", VA = "0x101B88C")]
		public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x101B918", Offset = "0x101B918", VA = "0x101B918")]
		public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x101BA34", Offset = "0x101BA34", VA = "0x101BA34")]
		public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x101BB64", Offset = "0x101BB64", VA = "0x101BB64")]
		public static void IgnoreCollisions(GameObject goA, GameObject goB)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x101BCAC", Offset = "0x101BCAC", VA = "0x101BCAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23C38", Offset = "0xD23C38")]
		public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished)
		{
			return null;
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x101BD54", Offset = "0x101BD54", VA = "0x101BD54")]
		public static Color ColorWithAlpha(this Color color, float alpha)
		{
			return default(Color);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x101BD5C", Offset = "0x101BD5C", VA = "0x101BD5C")]
		public static void Quit()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x101BD80", Offset = "0x101BD80", VA = "0x101BD80")]
		public static decimal FloatToDecimal(float value, int decimalPlaces = 2)
		{
			return default(decimal);
		}

		[Token(Token = "0x60014D0")]
		public static T Median<T>(this IEnumerable<T> source)
		{
			return (T)null;
		}

		[Token(Token = "0x60014D1")]
		public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x101BE38", Offset = "0x101BE38", VA = "0x101BE38")]
		public static string FixupNewlines(string text)
		{
			return null;
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x101BEE8", Offset = "0x101BEE8", VA = "0x101BEE8")]
		public static float PathLength(NavMeshPath path)
		{
			return default(float);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x101C064", Offset = "0x101C064", VA = "0x101C064")]
		public static bool HasCommandLineArgument(string argumentName)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x101C0F8", Offset = "0x101C0F8", VA = "0x101C0F8")]
		public static int GetCommandLineArgValue(string argumentName, int nDefaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x101C1C4", Offset = "0x101C1C4", VA = "0x101C1C4")]
		public static float GetCommandLineArgValue(string argumentName, float flDefaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x101C2D8", Offset = "0x101C2D8", VA = "0x101C2D8")]
		public static void SetActive(GameObject gameObject, bool active)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x101C37C", Offset = "0x101C37C", VA = "0x101C37C")]
		public static string CombinePaths(params string[] paths)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003A7")]
	public class AfterTimer_Component : MonoBehaviour
	{
		[Token(Token = "0x2000761")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E278", Offset = "0xD0E278")]
		private sealed class <Wait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AfterTimer_Component <>4__this;

			[Token(Token = "0x1700030F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029F9")]
				[Address(RVA = "0x1B98ACC", Offset = "0x1B98ACC", VA = "0x1B98ACC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000310")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029FB")]
				[Address(RVA = "0x1B98B34", Offset = "0x1B98B34", VA = "0x1B98B34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029F6")]
			[Address(RVA = "0x1B98944", Offset = "0x1B98944", VA = "0x1B98944")]
			[DebuggerHidden]
			public <Wait>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x60029F7")]
			[Address(RVA = "0x1B989D8", Offset = "0x1B989D8", VA = "0x1B989D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029F8")]
			[Address(RVA = "0x1B989DC", Offset = "0x1B989DC", VA = "0x1B989DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029FA")]
			[Address(RVA = "0x1B98AD4", Offset = "0x1B98AD4", VA = "0x1B98AD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action callback;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float triggerTime;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool timerActive;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool triggerOnEarlyDestroy;

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x1B98890", Offset = "0x1B98890", VA = "0x1B98890")]
		public void Init(float _time, Action _callback, bool earlydestroy)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x1B988D4", Offset = "0x1B988D4", VA = "0x1B988D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23CCC", Offset = "0xD23CCC")]
		private IEnumerator Wait()
		{
			return null;
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x1B98970", Offset = "0x1B98970", VA = "0x1B98970")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x1B989D0", Offset = "0x1B989D0", VA = "0x1B989D0")]
		public AfterTimer_Component()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x2000762")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E288", Offset = "0xD0E288")]
		private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VelocityEstimator <>4__this;

			[Token(Token = "0x4002EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4002EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x17000311")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029FF")]
				[Address(RVA = "0x101CD44", Offset = "0x101CD44", VA = "0x101CD44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000312")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A01")]
				[Address(RVA = "0x101CDAC", Offset = "0x101CDAC", VA = "0x101CDAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029FC")]
			[Address(RVA = "0x101C914", Offset = "0x101C914", VA = "0x101C914")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x101C954", Offset = "0x101C954", VA = "0x101C954", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029FE")]
			[Address(RVA = "0x101C958", Offset = "0x101C958", VA = "0x101C958", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A00")]
			[Address(RVA = "0x101CD4C", Offset = "0x101CD4C", VA = "0x101CD4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD17FF4", Offset = "0xD17FF4")]
		public int velocityAverageFrames;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1802C", Offset = "0xD1802C")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool estimateOnAwake;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine routine;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sampleCount;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x1019424", Offset = "0x1019424", VA = "0x1019424")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x1019900", Offset = "0x1019900", VA = "0x1019900")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x1019930", Offset = "0x1019930", VA = "0x1019930")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x1019AF8", Offset = "0x1019AF8", VA = "0x1019AF8")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x101C6B0", Offset = "0x101C6B0", VA = "0x101C6B0")]
		public Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x101C894", Offset = "0x101C894", VA = "0x101C894")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x101C640", Offset = "0x101C640", VA = "0x101C640")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23D30", Offset = "0xD23D30")]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x101C940", Offset = "0x101C940", VA = "0x101C940")]
		public VelocityEstimator()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class ControllerButtonHints : MonoBehaviour
	{
		[Token(Token = "0x2000763")]
		private enum OffsetType
		{
			[Token(Token = "0x4002EC5")]
			Up,
			[Token(Token = "0x4002EC6")]
			Right,
			[Token(Token = "0x4002EC7")]
			Forward,
			[Token(Token = "0x4002EC8")]
			Back
		}

		[Token(Token = "0x2000764")]
		private class ButtonHintInfo
		{
			[Token(Token = "0x4002EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string componentName;

			[Token(Token = "0x4002ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<MeshRenderer> renderers;

			[Token(Token = "0x4002ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform localTransform;

			[Token(Token = "0x4002ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject textHintObject;

			[Token(Token = "0x4002ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform textStartAnchor;

			[Token(Token = "0x4002ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform textEndAnchor;

			[Token(Token = "0x4002ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 textEndOffsetDir;

			[Token(Token = "0x4002ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform canvasOffset;

			[Token(Token = "0x4002ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Text text;

			[Token(Token = "0x4002ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public TextMesh textMesh;

			[Token(Token = "0x4002ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Canvas textCanvas;

			[Token(Token = "0x4002ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LineRenderer line;

			[Token(Token = "0x4002ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public float distanceFromCenter;

			[Token(Token = "0x4002ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public bool textHintActive;

			[Token(Token = "0x6002A02")]
			[Address(RVA = "0x100B574", Offset = "0x100B574", VA = "0x100B574")]
			public ButtonHintInfo()
			{
			}
		}

		[Token(Token = "0x2000765")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E298", Offset = "0xD0E298")]
		private sealed class <TestButtonHints>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x17000313")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A06")]
				[Address(RVA = "0x100D360", Offset = "0x100D360", VA = "0x100D360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A08")]
				[Address(RVA = "0x100D3C8", Offset = "0x100D3C8", VA = "0x100D3C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A03")]
			[Address(RVA = "0x100BD8C", Offset = "0x100BD8C", VA = "0x100BD8C")]
			[DebuggerHidden]
			public <TestButtonHints>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6002A04")]
			[Address(RVA = "0x100D0E4", Offset = "0x100D0E4", VA = "0x100D0E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x100D0E8", Offset = "0x100D0E8", VA = "0x100D0E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x100D368", Offset = "0x100D368", VA = "0x100D368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000766")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E2A8", Offset = "0xD0E2A8")]
		private sealed class <TestTextHints>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ControllerButtonHints <>4__this;

			[Token(Token = "0x17000315")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A0C")]
				[Address(RVA = "0x100D608", Offset = "0x100D608", VA = "0x100D608", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000316")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A0E")]
				[Address(RVA = "0x100D670", Offset = "0x100D670", VA = "0x100D670", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x100BE28", Offset = "0x100BE28", VA = "0x100BE28")]
			[DebuggerHidden]
			public <TestTextHints>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x100D3D0", Offset = "0x100D3D0", VA = "0x100D3D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0x100D3D4", Offset = "0x100D3D4", VA = "0x100D3D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x100D610", Offset = "0x100D610", VA = "0x100D610", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material controllerMaterial;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color flashColor;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject textHintPrefab;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18064", Offset = "0xD18064")]
		public bool debugHints;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SteamVR_RenderModel renderModel;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Player player;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<MeshRenderer> renderers;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<MeshRenderer> flashingRenderers;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float startTime;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float tickCount;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<EVRButtonId, ButtonHintInfo> buttonHintInfos;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform textHintParent;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<string, ulong>> componentButtonMasks;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int colorID;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1809C", Offset = "0xD1809C")]
		private bool <initialized>k__BackingField;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 centerPosition;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SteamVR_Events.Action renderModelLoadedAction;

		[Token(Token = "0x1700010C")]
		public bool initialized
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x100906C", Offset = "0x100906C", VA = "0x100906C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23D94", Offset = "0xD23D94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x1009074", Offset = "0x1009074", VA = "0x1009074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23DA4", Offset = "0xD23DA4")]
			private set
			{
			}
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x1009080", Offset = "0x1009080", VA = "0x1009080")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x100913C", Offset = "0x100913C", VA = "0x100913C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x100922C", Offset = "0x100922C", VA = "0x100922C")]
		private void HintDebugLog(string msg)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x10092D8", Offset = "0x10092D8", VA = "0x10092D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x10092F8", Offset = "0x10092F8", VA = "0x10092F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x1009398", Offset = "0x1009398", VA = "0x1009398")]
		private void OnParentHandInputFocusLost()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x1009524", Offset = "0x1009524", VA = "0x1009524")]
		private void OnHandInitialized(int deviceIndex)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x10096FC", Offset = "0x10096FC", VA = "0x10096FC")]
		private void OnRenderModelLoaded(SteamVR_RenderModel renderModel, bool succeess)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x1009FE4", Offset = "0x1009FE4", VA = "0x1009FE4")]
		private void CreateAndAddButtonInfo(EVRButtonId buttonID)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x100B01C", Offset = "0x100B01C", VA = "0x100B01C")]
		private void ComputeTextEndTransforms()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x100B57C", Offset = "0x100B57C", VA = "0x100B57C")]
		private void ShowButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x10093BC", Offset = "0x10093BC", VA = "0x10093BC")]
		private void HideAllButtonHints()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x100B91C", Offset = "0x100B91C", VA = "0x100B91C")]
		private void HideButtonHint(params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x100BBB4", Offset = "0x100BBB4", VA = "0x100BBB4")]
		private bool IsButtonHintActive(EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x100BD1C", Offset = "0x100BD1C", VA = "0x100BD1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23DB4", Offset = "0xD23DB4")]
		private IEnumerator TestButtonHints()
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x100BDB8", Offset = "0x100BDB8", VA = "0x100BDB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23E18", Offset = "0xD23E18")]
		private IEnumerator TestTextHints()
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x100BE54", Offset = "0x100BE54", VA = "0x100BE54")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x100C228", Offset = "0x100C228", VA = "0x100C228")]
		private void UpdateTextHint(ButtonHintInfo hintInfo)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x1009330", Offset = "0x1009330", VA = "0x1009330")]
		private void Clear()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x100C5C0", Offset = "0x100C5C0", VA = "0x100C5C0")]
		private void ShowText(EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x100C7A0", Offset = "0x100C7A0", VA = "0x100C7A0")]
		private void HideText(EVRButtonId button)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x10093FC", Offset = "0x10093FC", VA = "0x10093FC")]
		private void HideAllText()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x100C894", Offset = "0x100C894", VA = "0x100C894")]
		private string GetActiveHintText(EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x100C964", Offset = "0x100C964", VA = "0x100C964")]
		private static ControllerButtonHints GetControllerButtonHints(Hand hand)
		{
			return null;
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x100CA3C", Offset = "0x100CA3C", VA = "0x100CA3C")]
		public static void ShowButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x100CAEC", Offset = "0x100CAEC", VA = "0x100CAEC")]
		public static void HideButtonHint(Hand hand, params EVRButtonId[] buttons)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x100CB9C", Offset = "0x100CB9C", VA = "0x100CB9C")]
		public static void HideAllButtonHints(Hand hand)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x100CC38", Offset = "0x100CC38", VA = "0x100CC38")]
		public static bool IsButtonHintActive(Hand hand, EVRButtonId button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x100CCEC", Offset = "0x100CCEC", VA = "0x100CCEC")]
		public static void ShowTextHint(Hand hand, EVRButtonId button, string text, bool highlightButton = true)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x100CDB8", Offset = "0x100CDB8", VA = "0x100CDB8")]
		public static void HideTextHint(Hand hand, EVRButtonId button)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x100CE68", Offset = "0x100CE68", VA = "0x100CE68")]
		public static void HideAllTextHints(Hand hand)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x100CF04", Offset = "0x100CF04", VA = "0x100CF04")]
		public static string GetActiveHintText(Hand hand, EVRButtonId button)
		{
			return null;
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x100CFC8", Offset = "0x100CFC8", VA = "0x100CFC8")]
		public ControllerButtonHints()
		{
		}
	}
}
namespace CurveExtended
{
	[Token(Token = "0x20003AA")]
	public enum TangentMode
	{
		[Token(Token = "0x4001CD0")]
		Editable,
		[Token(Token = "0x4001CD1")]
		Smooth,
		[Token(Token = "0x4001CD2")]
		Linear,
		[Token(Token = "0x4001CD3")]
		Stepped
	}
	[Token(Token = "0x20003AB")]
	public enum TangentDirection
	{
		[Token(Token = "0x4001CD5")]
		Left,
		[Token(Token = "0x4001CD6")]
		Right
	}
	[Token(Token = "0x20003AC")]
	public class KeyframeUtil
	{
		[Token(Token = "0x6001508")]
		[Address(RVA = "0xF903F4", Offset = "0xF903F4", VA = "0xF903F4")]
		public static Keyframe GetNew(float time, float value, TangentMode leftAndRight)
		{
			return default(Keyframe);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xF903FC", Offset = "0xF903FC", VA = "0xF903FC")]
		public static Keyframe GetNew(float time, float value, TangentMode left, TangentMode right)
		{
			return default(Keyframe);
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xF906A0", Offset = "0xF906A0", VA = "0xF906A0")]
		public static void SetKeyTangentMode(object keyframe, int leftRight, TangentMode mode)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xF90830", Offset = "0xF90830", VA = "0xF90830")]
		public static TangentMode GetKeyTangentMode(int tangentMode, int leftRight)
		{
			return default(TangentMode);
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xF8F62C", Offset = "0xF8F62C", VA = "0xF8F62C")]
		public static TangentMode GetKeyTangentMode(Keyframe keyframe, int leftRight)
		{
			return default(TangentMode);
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xF9056C", Offset = "0xF9056C", VA = "0xF9056C")]
		public static void SetKeyBroken(object keyframe, bool broken)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xF90848", Offset = "0xF90848", VA = "0xF90848")]
		public KeyframeUtil()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public static class CurveExtension
	{
		[Token(Token = "0x600150F")]
		[Address(RVA = "0xF8F414", Offset = "0xF8F414", VA = "0xF8F414")]
		public static void UpdateAllLinearTangents(this AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xF8F474", Offset = "0xF8F474", VA = "0xF8F474")]
		public static void UpdateTangentsFromMode(AnimationCurve curve, int index)
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xF8F768", Offset = "0xF8F768", VA = "0xF8F768")]
		private static float CalculateLinearTangent(AnimationCurve curve, int index, int toIndex)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003AE")]
	public class CurveUtility
	{
		[Token(Token = "0x2000767")]
		[Flags]
		public enum TangentMode
		{
			[Token(Token = "0x4002EDE")]
			Editable = 0,
			[Token(Token = "0x4002EDF")]
			Smooth = 1,
			[Token(Token = "0x4002EE0")]
			Linear = 2,
			[Token(Token = "0x4002EE1")]
			Stepped = 3
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xF8F8A8", Offset = "0xF8F8A8", VA = "0xF8F8A8")]
		public static void UpdateTangentsFromMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xF8FACC", Offset = "0xF8FACC", VA = "0xF8FACC")]
		public static void UpdateTangentsToMode(AnimationCurve curve, TangentMode inMode)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xF8FCD8", Offset = "0xF8FCD8", VA = "0xF8FCD8")]
		private static float CalculateLinearTangent(AnimationCurve curve, int index, int toIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xF8F904", Offset = "0xF8F904", VA = "0xF8F904")]
		private static void UpdateTangentsFromMode(AnimationCurve curve, int index)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xF8FB38", Offset = "0xF8FB38", VA = "0xF8FB38")]
		public static void UpdateTangentsToMode(AnimationCurve curve, int index, TangentMode inMode)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xF8FE3C", Offset = "0xF8FE3C", VA = "0xF8FE3C")]
		public static void UpdateTangentsFromModeSurrounding(AnimationCurve curve, int index)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xF8FE90", Offset = "0xF8FE90", VA = "0xF8FE90")]
		public static float CalculateSmoothTangent(Keyframe key)
		{
			return default(float);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xF8FF28", Offset = "0xF8FF28", VA = "0xF8FF28")]
		public static void SetKeyBroken(ref Keyframe key, bool broken)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xF8FF68", Offset = "0xF8FF68", VA = "0xF8FF68")]
		public static bool GetKeyBroken(Keyframe key)
		{
			return default(bool);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xF8FF84", Offset = "0xF8FF84", VA = "0xF8FF84")]
		public static void SetKeyTangentMode(ref Keyframe key, int leftRight, TangentMode mode)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xF8FE04", Offset = "0xF8FE04", VA = "0xF8FE04")]
		public static TangentMode GetKeyTangentMode(Keyframe key, int leftRight)
		{
			return default(TangentMode);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xF90224", Offset = "0xF90224", VA = "0xF90224")]
		public static void SetTangent(int leftRight, TangentMode mode, AnimationCurve inCurve)
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xF903EC", Offset = "0xF903EC", VA = "0xF903EC")]
		public CurveUtility()
		{
		}
	}
}
namespace VRLineRendererInternal
{
	[Token(Token = "0x20003AF")]
	public class MeshChain
	{
		[Token(Token = "0x2000768")]
		[Flags]
		public enum MeshRefreshFlag
		{
			[Token(Token = "0x4002EE3")]
			None = 0,
			[Token(Token = "0x4002EE4")]
			Positions = 1,
			[Token(Token = "0x4002EE5")]
			Colors = 2,
			[Token(Token = "0x4002EE6")]
			Sizes = 4,
			[Token(Token = "0x4002EE7")]
			All = 7
		}

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] m_Verts;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color32[] m_Colors;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector4> m_ShapeData;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector3> m_NeighborPoints;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRefreshFlag m_DataThatNeedsUpdate;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh m_Mesh;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_OwnerTransform;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_WorldSpaceData;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD180AC", Offset = "0xD180AC")]
		private int <reservedElements>k__BackingField;

		[Token(Token = "0x1700010D")]
		public bool worldSpaceData
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0xFD9D00", Offset = "0xFD9D00", VA = "0xFD9D00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001520")]
			[Address(RVA = "0xFD9D08", Offset = "0xFD9D08", VA = "0xFD9D08")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public int reservedElements
		{
			[Token(Token = "0x6001521")]
			[Address(RVA = "0xFD9D14", Offset = "0xFD9D14", VA = "0xFD9D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23E8C", Offset = "0xD23E8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001522")]
			[Address(RVA = "0xFD9D1C", Offset = "0xFD9D1C", VA = "0xFD9D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23E9C", Offset = "0xD23E9C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xFD9664", Offset = "0xFD9664", VA = "0xFD9664")]
		public MeshChain()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xFD9694", Offset = "0xFD9694", VA = "0xFD9694")]
		public void GenerateMesh(GameObject owner, bool dynamic, int totalElements)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xFD84A4", Offset = "0xFD84A4", VA = "0xFD84A4")]
		public void RefreshMesh()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xFD8A44", Offset = "0xFD8A44", VA = "0xFD8A44")]
		public void SetMeshDataDirty(MeshRefreshFlag dataThatNeedsUpdate)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xFD8D4C", Offset = "0xFD8D4C", VA = "0xFD8D4C")]
		public void SetElementPosition(int elementIndex, ref Vector3 position)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xFD8BA4", Offset = "0xFD8BA4", VA = "0xFD8BA4")]
		public void SetElementPipe(int elementIndex, ref Vector3 startPoint, ref Vector3 endPoint)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xFD9380", Offset = "0xFD9380", VA = "0xFD9380")]
		public void SetElementSize(int elementIndex, float sizeModification)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xFD94F0", Offset = "0xFD94F0", VA = "0xFD94F0")]
		public void SetElementSize(int elementIndex, float startSize, float endSize)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xFD885C", Offset = "0xFD885C", VA = "0xFD885C")]
		public void SetElementColor(int elementIndex, ref Color color)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xFD9D24", Offset = "0xFD9D24", VA = "0xFD9D24")]
		public void SetElementColor32(int elementIndex, ref Color32 color)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xFD894C", Offset = "0xFD894C", VA = "0xFD894C")]
		public void SetElementColor(int elementIndex, ref Color startColor, ref Color endColor)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xFD9DD8", Offset = "0xFD9DD8", VA = "0xFD9DD8")]
		public void SetElementColor32(int elementIndex, ref Color32 startColor, ref Color32 endColor)
		{
		}
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x20003B0")]
	public class GUIArrows : MonoBehaviour
	{
		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_FadeDuration;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_ShowAngle;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_DesiredDirection;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_ArrowRenderers;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_CurrentAlpha;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_TargetAlpha;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_FadeSpeed;

		[Token(Token = "0x4001CE8")]
		private const string k_MaterialPropertyName = "_Alpha";

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xFDA798", Offset = "0xFDA798", VA = "0xFDA798")]
		private void Start()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xFDA7AC", Offset = "0xFDA7AC", VA = "0xFDA7AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xFDAA04", Offset = "0xFDAA04", VA = "0xFDAA04")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xFDAA2C", Offset = "0xFDAA2C", VA = "0xFDAA2C")]
		public void Show()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xFDAA54", Offset = "0xFDAA54", VA = "0xFDAA54")]
		public GUIArrows()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class InputWarnings : MonoBehaviour
	{
		[Token(Token = "0x2000769")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E2D8", Offset = "0xD0E2D8")]
		private sealed class <SingleClickCheckDelay>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputWarnings <>4__this;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A12")]
				[Address(RVA = "0xFDB52C", Offset = "0xFDB52C", VA = "0xFDB52C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A14")]
				[Address(RVA = "0xFDB594", Offset = "0xFDB594", VA = "0xFDB594", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0xFDAF7C", Offset = "0xFDAF7C", VA = "0xFDAF7C")]
			[DebuggerHidden]
			public <SingleClickCheckDelay>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002A10")]
			[Address(RVA = "0xFDB444", Offset = "0xFDB444", VA = "0xFDB444", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A11")]
			[Address(RVA = "0xFDB448", Offset = "0xFDB448", VA = "0xFDB448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A13")]
			[Address(RVA = "0xFDB534", Offset = "0xFDB534", VA = "0xFDB534", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200076A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E2E8", Offset = "0xD0E2E8")]
		private sealed class <DisplayWarning>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InputWarnings <>4__this;

			[Token(Token = "0x4002EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string message;

			[Token(Token = "0x17000319")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A18")]
				[Address(RVA = "0xFDB3D4", Offset = "0xFDB3D4", VA = "0xFDB3D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A1A")]
				[Address(RVA = "0xFDB43C", Offset = "0xFDB43C", VA = "0xFDB43C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A15")]
			[Address(RVA = "0xFDAFA8", Offset = "0xFDAFA8", VA = "0xFDAFA8")]
			[DebuggerHidden]
			public <DisplayWarning>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002A16")]
			[Address(RVA = "0xFDB180", Offset = "0xFDB180", VA = "0xFDB180", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A17")]
			[Address(RVA = "0xFDB184", Offset = "0xFDB184", VA = "0xFDB184", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A19")]
			[Address(RVA = "0xFDB3DC", Offset = "0xFDB3DC", VA = "0xFDB3DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_WarningDisplayTime;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_ShowDoubleTapWarnings;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_DoubleTapWarningMessage;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_ShowSingleTapWarnings;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_SingleTapWarningMessage;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text m_WarningText;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image m_BackgroundImage;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_TextTransform;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Reticle m_Reticle;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_WarningCoroutine;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_SingleClickDelayCoroutine;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_DisplayingWarning;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private VRInput.SwipeDirection m_CurrentSwipe;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_DownTime;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_WarningPosition;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_ScaleMultiplier;

		[Token(Token = "0x4001CFB")]
		private const float k_ClickIsHoldTime = 0.5f;

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xFDAA68", Offset = "0xFDAA68", VA = "0xFDAA68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xFDAB24", Offset = "0xFDAB24", VA = "0xFDAB24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xFDAC64", Offset = "0xFDAC64", VA = "0xFDAC64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xFDADA4", Offset = "0xFDADA4", VA = "0xFDADA4")]
		private void HandleDoubleClick()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xFDAE78", Offset = "0xFDAE78", VA = "0xFDAE78")]
		private void HandleClick()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xFDAF4C", Offset = "0xFDAF4C", VA = "0xFDAF4C")]
		private void HandleSwipe(VRInput.SwipeDirection swipe)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xFDAF54", Offset = "0xFDAF54", VA = "0xFDAF54")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xFDAEDC", Offset = "0xFDAEDC", VA = "0xFDAEDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23EAC", Offset = "0xD23EAC")]
		private IEnumerator SingleClickCheckDelay()
		{
			return null;
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xFDADFC", Offset = "0xFDADFC", VA = "0xFDADFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23F10", Offset = "0xD23F10")]
		private IEnumerator DisplayWarning(string message)
		{
			return null;
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xFDAFD4", Offset = "0xFDAFD4", VA = "0xFDAFD4")]
		public void TurnOnDoubleTapWarnings()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xFDB070", Offset = "0xFDB070", VA = "0xFDB070")]
		public void TurnOffDoubleTapWarnings()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xFDB078", Offset = "0xFDB078", VA = "0xFDB078")]
		public void TurnOnSingleTapWarnings()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xFDB114", Offset = "0xFDB114", VA = "0xFDB114")]
		public void TurnOffSingleTapWarnings()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xFDB11C", Offset = "0xFDB11C", VA = "0xFDB11C")]
		public InputWarnings()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_Prefabs;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_NumberInPool;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> m_Pool;

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xFDB59C", Offset = "0xFDB59C", VA = "0xFDB59C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xFDB5E0", Offset = "0xFDB5E0", VA = "0xFDB5E0")]
		private void AddToPool()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xFDB700", Offset = "0xFDB700", VA = "0xFDB700")]
		public GameObject GetGameObjectFromPool()
		{
			return null;
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xFDB7D0", Offset = "0xFDB7D0", VA = "0xFDB7D0")]
		public void ReturnGameObjectToPool(GameObject go)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xFDB87C", Offset = "0xFDB87C", VA = "0xFDB87C")]
		public ObjectPool()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class PlatformDependentText : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200076B")]
		public class PlatformTextPair
		{
			[Token(Token = "0x4002EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RuntimePlatform m_Platform;

			[Token(Token = "0x4002EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Multiline]
			public string m_Text;

			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0xFDBC6C", Offset = "0xFDBC6C", VA = "0xFDBC6C")]
			public PlatformTextPair(RuntimePlatform platform)
			{
			}
		}

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_TextComponent;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlatformTextPair[] m_PlatformTextPairs;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xFDB8EC", Offset = "0xFDB8EC", VA = "0xFDB8EC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xFDBA14", Offset = "0xFDBA14", VA = "0xFDBA14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xFDBACC", Offset = "0xFDBACC", VA = "0xFDBACC")]
		public PlatformDependentText()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class ReturnToMainMenu : MonoBehaviour
	{
		[Token(Token = "0x200076C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E2F8", Offset = "0xD0E2F8")]
		private sealed class <FadeToMenu>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReturnToMainMenu <>4__this;

			[Token(Token = "0x1700031B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A1F")]
				[Address(RVA = "0xFDBFB4", Offset = "0xFDBFB4", VA = "0xFDBFB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A21")]
				[Address(RVA = "0xFDC01C", Offset = "0xFDC01C", VA = "0xFDC01C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0xFDBE44", Offset = "0xFDBE44", VA = "0xFDBE44")]
			[DebuggerHidden]
			public <FadeToMenu>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0xFDBEC8", Offset = "0xFDBEC8", VA = "0xFDBEC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0xFDBECC", Offset = "0xFDBECC", VA = "0xFDBECC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A20")]
			[Address(RVA = "0xFDBFBC", Offset = "0xFDBFBC", VA = "0xFDBFBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_MenuSceneName;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRInput m_VRInput;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private VRCameraFade m_VRCameraFade;

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xFDBC98", Offset = "0xFDBC98", VA = "0xFDBC98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xFDBD20", Offset = "0xFDBD20", VA = "0xFDBD20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xFDBDA8", Offset = "0xFDBDA8", VA = "0xFDBDA8")]
		private void HandleCancel()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xFDBDD4", Offset = "0xFDBDD4", VA = "0xFDBDD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD23F74", Offset = "0xD23F74")]
		private IEnumerator FadeToMenu()
		{
			return null;
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xFDBE70", Offset = "0xFDBE70", VA = "0xFDBE70")]
		public ReturnToMainMenu()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class UIFader : MonoBehaviour
	{
		[Token(Token = "0x200076D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E308", Offset = "0xD0E308")]
		private sealed class <WaitForFadeIn>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x1700031D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A25")]
				[Address(RVA = "0xFDD114", Offset = "0xFDD114", VA = "0xFDD114", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A27")]
				[Address(RVA = "0xFDD17C", Offset = "0xFDD17C", VA = "0xFDD17C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A22")]
			[Address(RVA = "0xFDC338", Offset = "0xFDC338", VA = "0xFDC338")]
			[DebuggerHidden]
			public <WaitForFadeIn>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002A23")]
			[Address(RVA = "0xFDD084", Offset = "0xFDD084", VA = "0xFDD084", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A24")]
			[Address(RVA = "0xFDD088", Offset = "0xFDD088", VA = "0xFDD088", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A26")]
			[Address(RVA = "0xFDD11C", Offset = "0xFDD11C", VA = "0xFDD11C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200076E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E318", Offset = "0xD0E318")]
		private sealed class <InteruptAndFadeIn>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x1700031F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A2B")]
				[Address(RVA = "0xFDCF20", Offset = "0xFDCF20", VA = "0xFDCF20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A2D")]
				[Address(RVA = "0xFDCF88", Offset = "0xFDCF88", VA = "0xFDCF88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A28")]
			[Address(RVA = "0xFDC3D4", Offset = "0xFDC3D4", VA = "0xFDC3D4")]
			[DebuggerHidden]
			public <InteruptAndFadeIn>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002A29")]
			[Address(RVA = "0xFDCE9C", Offset = "0xFDCE9C", VA = "0xFDCE9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0xFDCEA0", Offset = "0xFDCEA0", VA = "0xFDCEA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0xFDCF28", Offset = "0xFDCF28", VA = "0xFDCF28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200076F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E328", Offset = "0xD0E328")]
		private sealed class <CheckAndFadeIn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000321")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A31")]
				[Address(RVA = "0xFDC90C", Offset = "0xFDC90C", VA = "0xFDC90C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000322")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A33")]
				[Address(RVA = "0xFDC974", Offset = "0xFDC974", VA = "0xFDC974", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0xFDC470", Offset = "0xFDC470", VA = "0xFDC470")]
			[DebuggerHidden]
			public <CheckAndFadeIn>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0xFDC884", Offset = "0xFDC884", VA = "0xFDC884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A30")]
			[Address(RVA = "0xFDC888", Offset = "0xFDC888", VA = "0xFDC888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A32")]
			[Address(RVA = "0xFDC914", Offset = "0xFDC914", VA = "0xFDC914", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E338", Offset = "0xD0E338")]
		private sealed class <FadeIn>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x4002F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lowestAlpha>5__2;

			[Token(Token = "0x17000323")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A37")]
				[Address(RVA = "0xFDCC20", Offset = "0xFDCC20", VA = "0xFDCC20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A39")]
				[Address(RVA = "0xFDCC88", Offset = "0xFDCC88", VA = "0xFDCC88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A34")]
			[Address(RVA = "0xFDC50C", Offset = "0xFDC50C", VA = "0xFDC50C")]
			[DebuggerHidden]
			public <FadeIn>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002A35")]
			[Address(RVA = "0xFDCA74", Offset = "0xFDCA74", VA = "0xFDCA74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A36")]
			[Address(RVA = "0xFDCA78", Offset = "0xFDCA78", VA = "0xFDCA78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A38")]
			[Address(RVA = "0xFDCC28", Offset = "0xFDCC28", VA = "0xFDCC28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E348", Offset = "0xD0E348")]
		private sealed class <WaitForFadeOut>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000325")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A3D")]
				[Address(RVA = "0x123529C", Offset = "0x123529C", VA = "0x123529C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A3F")]
				[Address(RVA = "0x1235304", Offset = "0x1235304", VA = "0x1235304", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0x12351DC", Offset = "0x12351DC", VA = "0x12351DC")]
			[DebuggerHidden]
			public <WaitForFadeOut>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0x1235208", Offset = "0x1235208", VA = "0x1235208", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0x123520C", Offset = "0x123520C", VA = "0x123520C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0x12352A4", Offset = "0x12352A4", VA = "0x12352A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E358", Offset = "0xD0E358")]
		private sealed class <InteruptAndFadeOut>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000327")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A43")]
				[Address(RVA = "0xFDD014", Offset = "0xFDD014", VA = "0xFDD014", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A45")]
				[Address(RVA = "0xFDD07C", Offset = "0xFDD07C", VA = "0xFDD07C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A40")]
			[Address(RVA = "0xFDC618", Offset = "0xFDC618", VA = "0xFDC618")]
			[DebuggerHidden]
			public <InteruptAndFadeOut>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002A41")]
			[Address(RVA = "0xFDCF90", Offset = "0xFDCF90", VA = "0xFDCF90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A42")]
			[Address(RVA = "0xFDCF94", Offset = "0xFDCF94", VA = "0xFDCF94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A44")]
			[Address(RVA = "0xFDD01C", Offset = "0xFDD01C", VA = "0xFDD01C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000773")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E368", Offset = "0xD0E368")]
		private sealed class <CheckAndFadeOut>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x17000329")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A49")]
				[Address(RVA = "0xFDCA04", Offset = "0xFDCA04", VA = "0xFDCA04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A4B")]
				[Address(RVA = "0xFDCA6C", Offset = "0xFDCA6C", VA = "0xFDCA6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A46")]
			[Address(RVA = "0xFDC6B4", Offset = "0xFDC6B4", VA = "0xFDC6B4")]
			[DebuggerHidden]
			public <CheckAndFadeOut>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002A47")]
			[Address(RVA = "0xFDC97C", Offset = "0xFDC97C", VA = "0xFDC97C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A48")]
			[Address(RVA = "0xFDC980", Offset = "0xFDC980", VA = "0xFDC980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0xFDCA0C", Offset = "0xFDCA0C", VA = "0xFDCA0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E378", Offset = "0xD0E378")]
		private sealed class <FadeOut>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIFader <>4__this;

			[Token(Token = "0x4002F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <highestAlpha>5__2;

			[Token(Token = "0x1700032B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A4F")]
				[Address(RVA = "0xFDCE2C", Offset = "0xFDCE2C", VA = "0xFDCE2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A51")]
				[Address(RVA = "0xFDCE94", Offset = "0xFDCE94", VA = "0xFDCE94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0xFDC750", Offset = "0xFDC750", VA = "0xFDC750")]
			[DebuggerHidden]
			public <FadeOut>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0xFDCC90", Offset = "0xFDCC90", VA = "0xFDCC90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0xFDCC94", Offset = "0xFDCC94", VA = "0xFDCC94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A50")]
			[Address(RVA = "0xFDCE34", Offset = "0xFDCE34", VA = "0xFDCE34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_FadeSpeed;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup[] m_GroupsToFade;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_Fading;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1826C", Offset = "0xD1826C")]
		private bool <Visible>k__BackingField;

		[Token(Token = "0x1700010F")]
		public bool Visible
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0xFDC2B4", Offset = "0xFDC2B4", VA = "0xFDC2B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24018", Offset = "0xD24018")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001554")]
			[Address(RVA = "0xFDC2BC", Offset = "0xFDC2BC", VA = "0xFDC2BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24028", Offset = "0xD24028")]
			private set
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action OnFadeInComplete
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0xFDC024", Offset = "0xFDC024", VA = "0xFDC024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23FD8", Offset = "0xD23FD8")]
			add
			{
			}
			[Token(Token = "0x6001550")]
			[Address(RVA = "0xFDC0C8", Offset = "0xFDC0C8", VA = "0xFDC0C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23FE8", Offset = "0xD23FE8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action OnFadeOutComplete
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0xFDC16C", Offset = "0xFDC16C", VA = "0xFDC16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD23FF8", Offset = "0xD23FF8")]
			add
			{
			}
			[Token(Token = "0x6001552")]
			[Address(RVA = "0xFDC210", Offset = "0xFDC210", VA = "0xFDC210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24008", Offset = "0xD24008")]
			remove
			{
			}
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xFDC2C8", Offset = "0xFDC2C8", VA = "0xFDC2C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24038", Offset = "0xD24038")]
		public IEnumerator WaitForFadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xFDC364", Offset = "0xFDC364", VA = "0xFDC364")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2409C", Offset = "0xD2409C")]
		public IEnumerator InteruptAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xFDC400", Offset = "0xFDC400", VA = "0xFDC400")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24100", Offset = "0xD24100")]
		public IEnumerator CheckAndFadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xFDC49C", Offset = "0xFDC49C", VA = "0xFDC49C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24164", Offset = "0xD24164")]
		public IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xFDC538", Offset = "0xFDC538", VA = "0xFDC538")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD241C8", Offset = "0xD241C8")]
		public IEnumerator WaitForFadeOut()
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xFDC5A8", Offset = "0xFDC5A8", VA = "0xFDC5A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2422C", Offset = "0xD2422C")]
		public IEnumerator InteruptAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xFDC644", Offset = "0xFDC644", VA = "0xFDC644")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24290", Offset = "0xD24290")]
		public IEnumerator CheckAndFadeOut()
		{
			return null;
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xFDC6E0", Offset = "0xFDC6E0", VA = "0xFDC6E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD242F4", Offset = "0xD242F4")]
		public IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xFDC77C", Offset = "0xFDC77C", VA = "0xFDC77C")]
		public void SetVisible()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xFDC800", Offset = "0xFDC800", VA = "0xFDC800")]
		public void SetInvisible()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xFDC874", Offset = "0xFDC874", VA = "0xFDC874")]
		public UIFader()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class VRCameraFade : MonoBehaviour
	{
		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E388", Offset = "0xD0E388")]
		private sealed class <BeginFadeOut>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x1700032D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A55")]
				[Address(RVA = "0x1236540", Offset = "0x1236540", VA = "0x1236540", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A57")]
				[Address(RVA = "0x12365A8", Offset = "0x12365A8", VA = "0x12365A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x1235BBC", Offset = "0x1235BBC", VA = "0x1235BBC")]
			[DebuggerHidden]
			public <BeginFadeOut>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002A53")]
			[Address(RVA = "0x123642C", Offset = "0x123642C", VA = "0x123642C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x1236430", Offset = "0x1236430", VA = "0x1236430", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x1236548", Offset = "0x1236548", VA = "0x1236548", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E398", Offset = "0xD0E398")]
		private sealed class <BeginFadeOut>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4002F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x1700032F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A5B")]
				[Address(RVA = "0x12366C4", Offset = "0x12366C4", VA = "0x12366C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000330")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A5D")]
				[Address(RVA = "0x123672C", Offset = "0x123672C", VA = "0x123672C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x1235C7C", Offset = "0x1235C7C", VA = "0x1235C7C")]
			[DebuggerHidden]
			public <BeginFadeOut>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002A59")]
			[Address(RVA = "0x12365B0", Offset = "0x12365B0", VA = "0x12365B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x12365B4", Offset = "0x12365B4", VA = "0x12365B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0x12366CC", Offset = "0x12366CC", VA = "0x12366CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E3A8", Offset = "0xD0E3A8")]
		private sealed class <BeginFadeIn>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x17000331")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A61")]
				[Address(RVA = "0x1236238", Offset = "0x1236238", VA = "0x1236238", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000332")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A63")]
				[Address(RVA = "0x12362A0", Offset = "0x12362A0", VA = "0x12362A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x1235D2C", Offset = "0x1235D2C", VA = "0x1235D2C")]
			[DebuggerHidden]
			public <BeginFadeIn>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0x1236124", Offset = "0x1236124", VA = "0x1236124", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x1236128", Offset = "0x1236128", VA = "0x1236128", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x1236240", Offset = "0x1236240", VA = "0x1236240", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E3B8", Offset = "0xD0E3B8")]
		private sealed class <BeginFadeIn>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool fadeAudio;

			[Token(Token = "0x4002F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x17000333")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A67")]
				[Address(RVA = "0x12363BC", Offset = "0x12363BC", VA = "0x12363BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000334")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A69")]
				[Address(RVA = "0x1236424", Offset = "0x1236424", VA = "0x1236424", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A64")]
			[Address(RVA = "0x1235DEC", Offset = "0x1235DEC", VA = "0x1235DEC")]
			[DebuggerHidden]
			public <BeginFadeIn>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x12362A8", Offset = "0x12362A8", VA = "0x12362A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x12362AC", Offset = "0x12362AC", VA = "0x12362AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x12363C4", Offset = "0x12363C4", VA = "0x12363C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000779")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E3C8", Offset = "0xD0E3C8")]
		private sealed class <BeginFade>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VRCameraFade <>4__this;

			[Token(Token = "0x4002F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startCol;

			[Token(Token = "0x4002F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color endCol;

			[Token(Token = "0x4002F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float duration;

			[Token(Token = "0x4002F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <timer>5__2;

			[Token(Token = "0x17000335")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A6D")]
				[Address(RVA = "0x12360B4", Offset = "0x12360B4", VA = "0x12360B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000336")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A6F")]
				[Address(RVA = "0x123611C", Offset = "0x123611C", VA = "0x123611C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x1235E18", Offset = "0x1235E18", VA = "0x1235E18")]
			[DebuggerHidden]
			public <BeginFade>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x1235FB8", Offset = "0x1235FB8", VA = "0x1235FB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x1235FBC", Offset = "0x1235FBC", VA = "0x1235FBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x12360BC", Offset = "0x12360BC", VA = "0x12360BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_FadeImage;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixerSnapshot m_DefaultSnapshot;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioMixerSnapshot m_FadedSnapshot;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color m_FadeColor;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float m_FadeDuration;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool m_FadeInOnSceneLoad;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool m_FadeInOnStart;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool m_IsFading;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_FadeStartTime;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_FadeOutColor;

		[Token(Token = "0x17000110")]
		public bool IsFading
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x1235454", Offset = "0x1235454", VA = "0x1235454")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000017")]
		public event Action OnFadeComplete
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x123530C", Offset = "0x123530C", VA = "0x123530C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24358", Offset = "0xD24358")]
			add
			{
			}
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x12353B0", Offset = "0x12353B0", VA = "0x12353B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24368", Offset = "0xD24368")]
			remove
			{
			}
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x123545C", Offset = "0x123545C", VA = "0x123545C")]
		public Image getImage()
		{
			return null;
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x1235464", Offset = "0x1235464", VA = "0x1235464")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x1235588", Offset = "0x1235588", VA = "0x1235588")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x1235664", Offset = "0x1235664", VA = "0x1235664")]
		private void Start()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x12356D0", Offset = "0x12356D0", VA = "0x12356D0")]
		private void HandleSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x1235788", Offset = "0x1235788", VA = "0x1235788")]
		private void HandleSceneUnloaded(Scene scene)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x1235874", Offset = "0x1235874", VA = "0x1235874")]
		public void FadeOut(bool fadeAudio)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x1235880", Offset = "0x1235880", VA = "0x1235880")]
		public void FadeOut(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x12356C4", Offset = "0x12356C4", VA = "0x12356C4")]
		public void FadeIn(bool fadeAudio)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1235A40", Offset = "0x1235A40", VA = "0x1235A40")]
		public void FadeIn(float duration, bool fadeAudio)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x1235B38", Offset = "0x1235B38", VA = "0x1235B38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24378", Offset = "0xD24378")]
		public IEnumerator BeginFadeOut(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1235BE8", Offset = "0x1235BE8", VA = "0x1235BE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD243DC", Offset = "0xD243DC")]
		public IEnumerator BeginFadeOut(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1235CA8", Offset = "0x1235CA8", VA = "0x1235CA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24440", Offset = "0xD24440")]
		public IEnumerator BeginFadeIn(bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x1235D58", Offset = "0x1235D58", VA = "0x1235D58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD244A4", Offset = "0xD244A4")]
		public IEnumerator BeginFadeIn(float duration, bool fadeAudio)
		{
			return null;
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1235978", Offset = "0x1235978", VA = "0x1235978")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24508", Offset = "0xD24508")]
		private IEnumerator BeginFade(Color startCol, Color endCol, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1235E44", Offset = "0x1235E44", VA = "0x1235E44")]
		public void clearListener()
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x1235EE0", Offset = "0x1235EE0", VA = "0x1235EE0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x1235F7C", Offset = "0x1235F7C", VA = "0x1235F7C")]
		public VRCameraFade()
		{
		}
	}
}
namespace Interactive360.Utils
{
	[Token(Token = "0x20003B7")]
	public class CameraEditorControl : MonoBehaviour
	{
		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E3D8", Offset = "0xD0E3D8")]
		private sealed class <ManageMovement>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraEditorControl <>4__this;

			[Token(Token = "0x17000337")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A73")]
				[Address(RVA = "0x2305058", Offset = "0x2305058", VA = "0x2305058", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000338")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A75")]
				[Address(RVA = "0x23050C0", Offset = "0x23050C0", VA = "0x23050C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x2304E04", Offset = "0x2304E04", VA = "0x2304E04")]
			[DebuggerHidden]
			public <ManageMovement>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x2304E70", Offset = "0x2304E70", VA = "0x2304E70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x2304E74", Offset = "0x2304E74", VA = "0x2304E74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x2305060", Offset = "0x2305060", VA = "0x2305060", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool mouseControl;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float camSpeed;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float movementSpeed;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform vrCamera;

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x2304C88", Offset = "0x2304C88", VA = "0x2304C88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x2304D94", Offset = "0x2304D94", VA = "0x2304D94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2456C", Offset = "0xD2456C")]
		private IEnumerator ManageMovement()
		{
			return null;
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x2304D70", Offset = "0x2304D70", VA = "0x2304D70")]
		private void LockCursor()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x2304E30", Offset = "0x2304E30", VA = "0x2304E30")]
		private void UnlockCursor()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x2304E54", Offset = "0x2304E54", VA = "0x2304E54")]
		public CameraEditorControl()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class Reticle : MonoBehaviour
	{
		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_DefaultDistance;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_UseNormal;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image m_Image;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_ReticleTransform;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_OriginalScale;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x17000111")]
		public bool UseNormal
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x23050C8", Offset = "0x23050C8", VA = "0x23050C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x23050D0", Offset = "0x23050D0", VA = "0x23050D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public Transform ReticleTransform
		{
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x23050DC", Offset = "0x23050DC", VA = "0x23050DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x23050E4", Offset = "0x23050E4", VA = "0x23050E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x2305134", Offset = "0x2305134", VA = "0x2305134")]
		public void Hide()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x2305154", Offset = "0x2305154", VA = "0x2305154")]
		public void Show()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x2305174", Offset = "0x2305174", VA = "0x2305174")]
		public void SetPosition()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x23052BC", Offset = "0x23052BC", VA = "0x23052BC")]
		public void SetPosition(RaycastHit hit)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x2305474", Offset = "0x2305474", VA = "0x2305474")]
		public Reticle()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class SelectionRadial : MonoBehaviour
	{
		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E3E8", Offset = "0xD0E3E8")]
		private sealed class <FillSelectionRadial>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x4002F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000339")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A79")]
				[Address(RVA = "0xFDE2AC", Offset = "0xFDE2AC", VA = "0xFDE2AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A7B")]
				[Address(RVA = "0xFDE314", Offset = "0xFDE314", VA = "0xFDE314", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A76")]
			[Address(RVA = "0xFDE184", Offset = "0xFDE184", VA = "0xFDE184")]
			[DebuggerHidden]
			public <FillSelectionRadial>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002A77")]
			[Address(RVA = "0xFDE1B0", Offset = "0xFDE1B0", VA = "0xFDE1B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A78")]
			[Address(RVA = "0xFDE1B4", Offset = "0xFDE1B4", VA = "0xFDE1B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0xFDE2B4", Offset = "0xFDE2B4", VA = "0xFDE2B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E3F8", Offset = "0xD0E3F8")]
		private sealed class <WaitForSelectionRadialToFill>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionRadial <>4__this;

			[Token(Token = "0x1700033B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A7F")]
				[Address(RVA = "0xFDE3D4", Offset = "0xFDE3D4", VA = "0xFDE3D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A81")]
				[Address(RVA = "0xFDE43C", Offset = "0xFDE43C", VA = "0xFDE43C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0xFDE31C", Offset = "0xFDE31C", VA = "0xFDE31C")]
			[DebuggerHidden]
			public <WaitForSelectionRadialToFill>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0xFDE348", Offset = "0xFDE348", VA = "0xFDE348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0xFDE34C", Offset = "0xFDE34C", VA = "0xFDE34C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A80")]
			[Address(RVA = "0xFDE3DC", Offset = "0xFDE3DC", VA = "0xFDE3DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_SelectionDuration;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_HideOnStart;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_Selection;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_SelectionFillRoutine;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_IsSelectionRadialActive;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_RadialFilled;

		[Token(Token = "0x17000113")]
		public float SelectionDuration
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x2305528", Offset = "0x2305528", VA = "0x2305528")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000018")]
		public event Action OnSelectionComplete
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x23004C0", Offset = "0x23004C0", VA = "0x23004C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD245D0", Offset = "0xD245D0")]
			add
			{
			}
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x2305484", Offset = "0x2305484", VA = "0x2305484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD245E0", Offset = "0xD245E0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x2305530", Offset = "0x2305530", VA = "0x2305530")]
		private void Start()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x2300AA4", Offset = "0x2300AA4", VA = "0x2300AA4")]
		public void Show()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x2300B80", Offset = "0x2300B80", VA = "0x2300B80")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x230557C", Offset = "0x230557C", VA = "0x230557C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD245F0", Offset = "0xD245F0")]
		private IEnumerator FillSelectionRadial()
		{
			return null;
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x23055EC", Offset = "0x23055EC", VA = "0x23055EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24654", Offset = "0xD24654")]
		public IEnumerator WaitForSelectionRadialToFill()
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x2300AEC", Offset = "0x2300AEC", VA = "0x2300AEC")]
		public void HandleDown()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x2300B28", Offset = "0x2300B28", VA = "0x2300B28")]
		public void HandleUp()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x230565C", Offset = "0x230565C", VA = "0x230565C")]
		public SelectionRadial()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class SelectionSlider : MonoBehaviour
	{
		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E408", Offset = "0xD0E408")]
		private sealed class <WaitForBarToFill>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x1700033D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A85")]
				[Address(RVA = "0xFDEEBC", Offset = "0xFDEEBC", VA = "0xFDEEBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A87")]
				[Address(RVA = "0xFDEF24", Offset = "0xFDEF24", VA = "0xFDEF24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A82")]
			[Address(RVA = "0xFDE80C", Offset = "0xFDE80C", VA = "0xFDE80C")]
			[DebuggerHidden]
			public <WaitForBarToFill>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002A83")]
			[Address(RVA = "0xFDED6C", Offset = "0xFDED6C", VA = "0xFDED6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A84")]
			[Address(RVA = "0xFDED70", Offset = "0xFDED70", VA = "0xFDED70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A86")]
			[Address(RVA = "0xFDEEC4", Offset = "0xFDEEC4", VA = "0xFDEEC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E418", Offset = "0xD0E418")]
		private sealed class <FillBar>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SelectionSlider <>4__this;

			[Token(Token = "0x4002F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fillTime>5__2;

			[Token(Token = "0x1700033F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A8B")]
				[Address(RVA = "0xFDECFC", Offset = "0xFDECFC", VA = "0xFDECFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000340")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A8D")]
				[Address(RVA = "0xFDED64", Offset = "0xFDED64", VA = "0xFDED64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A88")]
			[Address(RVA = "0xFDE8A8", Offset = "0xFDE8A8", VA = "0xFDE8A8")]
			[DebuggerHidden]
			public <FillBar>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002A89")]
			[Address(RVA = "0xFDEB78", Offset = "0xFDEB78", VA = "0xFDEB78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0xFDEB7C", Offset = "0xFDEB7C", VA = "0xFDEB7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0xFDED04", Offset = "0xFDED04", VA = "0xFDED04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_Duration;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_Interactable;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_Audio;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_OnOverClip;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip m_OnFilledClip;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Slider m_Slider;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_BarCanvas;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Renderer m_Renderer;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SelectionRadial m_SelectionRadial;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Collider m_Collider;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_DisableOnBarFill;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[SerializeField]
		private bool m_DisappearOnBarFill;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Button m_Button;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_BarFilled;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_GazeOver;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_Timer;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_FillBarRoutine;

		[Token(Token = "0x4001D3A")]
		private const string k_SliderMaterialPropertyName = "_SliderValue";

		[Token(Token = "0x14000019")]
		public event Action OnBarFilled
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0xFDE444", Offset = "0xFDE444", VA = "0xFDE444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD246B8", Offset = "0xD246B8")]
			add
			{
			}
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xFDE4E8", Offset = "0xFDE4E8", VA = "0xFDE4E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD246C8", Offset = "0xD246C8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xFDE58C", Offset = "0xFDE58C", VA = "0xFDE58C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xFDE60C", Offset = "0xFDE60C", VA = "0xFDE60C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xFDE6D4", Offset = "0xFDE6D4", VA = "0xFDE6D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xFDE79C", Offset = "0xFDE79C", VA = "0xFDE79C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD246D8", Offset = "0xD246D8")]
		public IEnumerator WaitForBarToFill()
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xFDE838", Offset = "0xFDE838", VA = "0xFDE838")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2473C", Offset = "0xD2473C")]
		private IEnumerator FillBar()
		{
			return null;
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xFDE8D4", Offset = "0xFDE8D4", VA = "0xFDE8D4")]
		private void SetSliderValue(float sliderValue)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xFDE9E4", Offset = "0xFDE9E4", VA = "0xFDE9E4")]
		private void HandleDown()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xFDEA20", Offset = "0xFDEA20", VA = "0xFDEA20")]
		private void HandleUp()
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xFDEA5C", Offset = "0xFDEA5C", VA = "0xFDEA5C")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xFDEB28", Offset = "0xFDEB28", VA = "0xFDEB28")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xFDEB68", Offset = "0xFDEB68", VA = "0xFDEB68")]
		public SelectionSlider()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class UIMovement : MonoBehaviour
	{
		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_LookatCamera;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_UIElement;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_Camera;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_RotateWithCamera;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_FollowSpeed;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_DistanceFromCamera;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xFDEF2C", Offset = "0xFDEF2C", VA = "0xFDEF2C")]
		private void Start()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xFDF004", Offset = "0xFDF004", VA = "0xFDF004")]
		private void Update()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xFDF2B0", Offset = "0xFDF2B0", VA = "0xFDF2B0")]
		public UIMovement()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class UITint : MonoBehaviour
	{
		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_Tint;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD184EC", Offset = "0xD184EC")]
		[SerializeField]
		private float m_TintPercent;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] m_ImagesToTint;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRInteractiveItem m_InteractiveItem;

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xFDF2C8", Offset = "0xFDF2C8", VA = "0xFDF2C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xFDF390", Offset = "0xFDF390", VA = "0xFDF390")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xFDF458", Offset = "0xFDF458", VA = "0xFDF458")]
		private void HandleOver()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xFDF54C", Offset = "0xFDF54C", VA = "0xFDF54C")]
		private void HandleOut()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xFDF640", Offset = "0xFDF640", VA = "0xFDF640")]
		public UITint()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class VRCameraUI : MonoBehaviour
	{
		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas m_Canvas;

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xFDF650", Offset = "0xFDF650", VA = "0xFDF650")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xFDF69C", Offset = "0xFDF69C", VA = "0xFDF69C")]
		public VRCameraUI()
		{
		}
	}
}
namespace UnityEngine.XR.Interaction.Toolkit
{
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0B844", Offset = "0xD0B844")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B844", Offset = "0xD0B844")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xD0B844", Offset = "0xD0B844")]
	public class XRInteractorLineVisual_SRL : MonoBehaviour, IXRCustomReticleProvider
	{
		[Token(Token = "0x4001D46")]
		private const float k_MinLineWidth = 0.0001f;

		[Token(Token = "0x4001D47")]
		private const float k_MaxLineWidth = 0.05f;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1855C", Offset = "0xD1855C")]
		private float m_LineWidth;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_OverrideInteractorLineLength;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool m_SubdivideLine;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD185C4", Offset = "0xD185C4")]
		private int m_LineSamples;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] m_SubdivisionPoints;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_LineLength;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve m_WidthCurve;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Gradient m_ValidColorGradient;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Gradient m_InvalidColorGradient;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_SmoothMovement;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_FollowTightness;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_SnapThresholdDistance;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_Reticle;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_StopLineAtFirstRaycastHit;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_ReticlePos;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_ReticleNormal;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_EndPositionInLine;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_SnapCurve;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_PerformSetup;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool m_PreviousHit;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		private bool m_CurrentHit;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject m_ReticleToUse;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LineRenderer m_LineRenderer;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ILineRenderable m_LineRenderable;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] m_TargetPoints;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_NoTargetPoints;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3[] m_RenderPoints;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_NoRenderPoints;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3[] m_PreviousRenderPoints;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int m_NoPreviousRenderPoints;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3[] m_ClearArray;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private XRController controller;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private XRRayInteractor interactor;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject m_CustomReticle;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool m_CustomReticleAttached;

		[Token(Token = "0x17000114")]
		public float lineWidth
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0xFC9EEC", Offset = "0xFC9EEC", VA = "0xFC9EEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0xFC9EF4", Offset = "0xFC9EF4", VA = "0xFC9EF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public bool overrideInteractorLineLength
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0xFC9F04", Offset = "0xFC9F04", VA = "0xFC9F04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0xFC9F0C", Offset = "0xFC9F0C", VA = "0xFC9F0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public bool subdivideLine
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0xFC9F18", Offset = "0xFC9F18", VA = "0xFC9F18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0xFC9F20", Offset = "0xFC9F20", VA = "0xFC9F20")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public int lineSamples
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xFC9F2C", Offset = "0xFC9F2C", VA = "0xFC9F2C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0xFC9F34", Offset = "0xFC9F34", VA = "0xFC9F34")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public float lineLength
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0xFC9F3C", Offset = "0xFC9F3C", VA = "0xFC9F3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0xFC9F44", Offset = "0xFC9F44", VA = "0xFC9F44")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		private AnimationCurve widthCurve
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0xFC9F4C", Offset = "0xFC9F4C", VA = "0xFC9F4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0xFC9F54", Offset = "0xFC9F54", VA = "0xFC9F54")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public Gradient validColorGradient
		{
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0xFC9F64", Offset = "0xFC9F64", VA = "0xFC9F64")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0xFC9F6C", Offset = "0xFC9F6C", VA = "0xFC9F6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public Gradient invalidColorGradient
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0xFC9F74", Offset = "0xFC9F74", VA = "0xFC9F74")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0xFC9F7C", Offset = "0xFC9F7C", VA = "0xFC9F7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public bool smoothMovement
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0xFC9F84", Offset = "0xFC9F84", VA = "0xFC9F84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0xFC9F8C", Offset = "0xFC9F8C", VA = "0xFC9F8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public float followTightness
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xFC9F98", Offset = "0xFC9F98", VA = "0xFC9F98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0xFC9FA0", Offset = "0xFC9FA0", VA = "0xFC9FA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public float snapThresholdDistance
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0xFC9FA8", Offset = "0xFC9FA8", VA = "0xFC9FA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0xFC9FB0", Offset = "0xFC9FB0", VA = "0xFC9FB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public GameObject reticle
		{
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0xFC9FB8", Offset = "0xFC9FB8", VA = "0xFC9FB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0xFC9FC0", Offset = "0xFC9FC0", VA = "0xFC9FC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public bool stopLineAtFirstRaycastHit
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xFC9FC8", Offset = "0xFC9FC8", VA = "0xFC9FC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0xFC9FD0", Offset = "0xFC9FD0", VA = "0xFC9FD0")]
			set
			{
			}
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xFC9FDC", Offset = "0xFC9FDC", VA = "0xFC9FDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xFCA114", Offset = "0xFCA114", VA = "0xFCA114")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xFCA1DC", Offset = "0xFCA1DC", VA = "0xFCA1DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xFCA2A4", Offset = "0xFCA2A4", VA = "0xFCA2A4", Slot = "6")]
		protected virtual void OnBeforeRender()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xFCA1A0", Offset = "0xFCA1A0", VA = "0xFCA1A0")]
		private void Reset()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xFCA438", Offset = "0xFCA438", VA = "0xFCA438")]
		private void ClearLineRenderer()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xFCA2FC", Offset = "0xFCA2FC", VA = "0xFCA2FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xFCA490", Offset = "0xFCA490", VA = "0xFCA490")]
		private void UpdateLineVisual()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xFCAE78", Offset = "0xFCAE78", VA = "0xFCAE78")]
		private void UpdateLineSubdivision()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xFCB148", Offset = "0xFCB148", VA = "0xFCB148")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xFCA0BC", Offset = "0xFCA0BC", VA = "0xFCA0BC")]
		private void UpdateSettings()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xFCA358", Offset = "0xFCA358", VA = "0xFCA358")]
		private bool TryFindLineRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xFCB14C", Offset = "0xFCB14C", VA = "0xFCB14C", Slot = "4")]
		public bool AttachCustomReticle(GameObject reticle)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xFCB28C", Offset = "0xFCB28C", VA = "0xFCB28C", Slot = "5")]
		public bool RemoveCustomReticle()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xFCB374", Offset = "0xFCB374", VA = "0xFCB374")]
		public XRInteractorLineVisual_SRL()
		{
		}
	}
}
namespace UnityEngine.UI.Extensions
{
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0B8F0", Offset = "0xD0B8F0")]
	public class Gradient2 : BaseMeshEffect
	{
		[Token(Token = "0x200077F")]
		public enum Type
		{
			[Token(Token = "0x4002F39")]
			Horizontal,
			[Token(Token = "0x4002F3A")]
			Vertical,
			[Token(Token = "0x4002F3B")]
			Radial,
			[Token(Token = "0x4002F3C")]
			Diamond
		}

		[Token(Token = "0x2000780")]
		public enum Blend
		{
			[Token(Token = "0x4002F3E")]
			Override,
			[Token(Token = "0x4002F3F")]
			Add,
			[Token(Token = "0x4002F40")]
			Multiply
		}

		[Serializable]
		[Token(Token = "0x2000781")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E428", Offset = "0xD0E428")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UIVertex, float> <>9__24_0;

			[Token(Token = "0x4002F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UIVertex, float> <>9__24_1;

			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0xFC9ED4", Offset = "0xFC9ED4", VA = "0xFC9ED4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A90")]
			[Address(RVA = "0xFC9EDC", Offset = "0xFC9EDC", VA = "0xFC9EDC")]
			internal float <ModifyMesh>b__24_0(UIVertex v)
			{
				return default(float);
			}

			[Token(Token = "0x6002A91")]
			[Address(RVA = "0xFC9EE4", Offset = "0xFC9EE4", VA = "0xFC9EE4")]
			internal float <ModifyMesh>b__24_1(UIVertex v)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD186B8", Offset = "0xD186B8")]
		private bool _modifyVertices;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18704", Offset = "0xD18704")]
		private float _offset;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18744", Offset = "0xD18744")]
		private float _zoom;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Gradient _effectGradient;

		[Token(Token = "0x17000121")]
		public Blend BlendMode
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0xFC7374", Offset = "0xFC7374", VA = "0xFC7374")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xFC737C", Offset = "0xFC737C", VA = "0xFC737C")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xFC73AC", Offset = "0xFC73AC", VA = "0xFC73AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xFC73B4", Offset = "0xFC73B4", VA = "0xFC73B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public Type GradientType
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xFC73E4", Offset = "0xFC73E4", VA = "0xFC73E4")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xFC73EC", Offset = "0xFC73EC", VA = "0xFC73EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public bool ModifyVertices
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xFC741C", Offset = "0xFC741C", VA = "0xFC741C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0xFC7424", Offset = "0xFC7424", VA = "0xFC7424")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public float Offset
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xFC7458", Offset = "0xFC7458", VA = "0xFC7458")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0xFC7460", Offset = "0xFC7460", VA = "0xFC7460")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public float Zoom
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0xFC7504", Offset = "0xFC7504", VA = "0xFC7504")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0xFC750C", Offset = "0xFC750C", VA = "0xFC750C")]
			set
			{
			}
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xFC75B4", Offset = "0xFC75B4", VA = "0xFC75B4", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xFC84F4", Offset = "0xFC84F4", VA = "0xFC84F4")]
		private Rect GetBounds(List<UIVertex> vertices)
		{
			return default(Rect);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xFC86AC", Offset = "0xFC86AC", VA = "0xFC86AC")]
		private void SplitTrianglesAtGradientStops(List<UIVertex> _vertexList, Rect bounds, float zoomOffset, VertexHelper helper)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xFC99F0", Offset = "0xFC99F0", VA = "0xFC99F0")]
		private float[] GetPositions(List<UIVertex> _vertexList, int index)
		{
			return null;
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xFC96C0", Offset = "0xFC96C0", VA = "0xFC96C0")]
		private List<float> FindStops(float zoomOffset, Rect bounds)
		{
			return null;
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xFC9BBC", Offset = "0xFC9BBC", VA = "0xFC9BBC")]
		private UIVertex CreateSplitVertex(UIVertex vertex1, UIVertex vertex2, float stop)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xFC9668", Offset = "0xFC9668", VA = "0xFC9668")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xFC9D08", Offset = "0xFC9D08", VA = "0xFC9D08")]
		public Gradient2()
		{
		}
	}
}
namespace UnityEngine.SpatialTracking
{
	[Token(Token = "0x20003C0")]
	public class SmoothTrackedPoseDriver : TrackedPoseDriver
	{
		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose lastPose;

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xFC709C", Offset = "0xFC709C", VA = "0xFC709C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xFC7130", Offset = "0xFC7130", VA = "0xFC7130", Slot = "11")]
		protected override void SetLocalTransform(Vector3 newPosition, Quaternion newRotation, PoseDataFlags poseFlags)
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xFC7260", Offset = "0xFC7260", VA = "0xFC7260")]
		public SmoothTrackedPoseDriver()
		{
		}
	}
}
namespace Sharecare.Diabetes
{
	[Token(Token = "0x20003C1")]
	public enum PancreasState
	{
		[Token(Token = "0x4001D73")]
		Fast,
		[Token(Token = "0x4001D74")]
		Meal
	}
	[Token(Token = "0x20003C2")]
	public enum DiabetesManagerState
	{
		[Token(Token = "0x4001D76")]
		Basic,
		[Token(Token = "0x4001D77")]
		Clinical
	}
	[Token(Token = "0x20003C3")]
	public enum DiabetesState
	{
		[Token(Token = "0x4001D79")]
		Hypoglycemic,
		[Token(Token = "0x4001D7A")]
		Normal,
		[Token(Token = "0x4001D7B")]
		PreDiabetes,
		[Token(Token = "0x4001D7C")]
		Diabetes
	}
	[Token(Token = "0x20003C4")]
	public class DiabetesManager : MonoBehaviour
	{
		[Token(Token = "0x2000782")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E438", Offset = "0xD0E438")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4002F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DiabetesManager <>4__this;

			[Token(Token = "0x4002F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DiabetesSliderMapper slider;

			[Token(Token = "0x6002A92")]
			[Address(RVA = "0x22E5618", Offset = "0x22E5618", VA = "0x22E5618")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x22E65A4", Offset = "0x22E65A4", VA = "0x22E65A4")]
			internal void <setupInputSlider>b__0(bool <p0>)
			{
			}

			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x22E65C4", Offset = "0x22E65C4", VA = "0x22E65C4")]
			internal void <setupInputSlider>b__1(bool <p0>)
			{
			}

			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x22E65E4", Offset = "0x22E65E4", VA = "0x22E65E4")]
			internal void <setupInputSlider>b__2(string <p0>)
			{
			}
		}

		[Token(Token = "0x2000783")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E448", Offset = "0xD0E448")]
		private sealed class <moveTo>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4002F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DiabetesManager <>4__this;

			[Token(Token = "0x4002F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float from;

			[Token(Token = "0x4002F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float to;

			[Token(Token = "0x4002F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <t>5__2;

			[Token(Token = "0x17000341")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A99")]
				[Address(RVA = "0x22E6770", Offset = "0x22E6770", VA = "0x22E6770", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000342")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A9B")]
				[Address(RVA = "0x22E67D8", Offset = "0x22E67D8", VA = "0x22E67D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x22E5FBC", Offset = "0x22E5FBC", VA = "0x22E5FBC")]
			[DebuggerHidden]
			public <moveTo>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x22E6604", Offset = "0x22E6604", VA = "0x22E6604", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A98")]
			[Address(RVA = "0x22E6608", Offset = "0x22E6608", VA = "0x22E6608", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x22E6778", Offset = "0x22E6778", VA = "0x22E6778", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000784")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E458", Offset = "0xD0E458")]
		private sealed class <waitAndChange>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4002F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DiabetesManager <>4__this;

			[Token(Token = "0x17000343")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A9F")]
				[Address(RVA = "0x22E68E8", Offset = "0x22E68E8", VA = "0x22E68E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AA1")]
				[Address(RVA = "0x22E6950", Offset = "0x22E6950", VA = "0x22E6950", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x22E5FE8", Offset = "0x22E5FE8", VA = "0x22E5FE8")]
			[DebuggerHidden]
			public <waitAndChange>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0x22E67E0", Offset = "0x22E67E0", VA = "0x22E67E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0x22E67E4", Offset = "0x22E67E4", VA = "0x22E67E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x22E68F0", Offset = "0x22E68F0", VA = "0x22E68F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18798", Offset = "0xD18798")]
		public Animator animatorFX;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator sliderLoader;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float mealLoadTime;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fastingLoadTime;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD187D0", Offset = "0xD187D0")]
		public RectTransform master_Panel;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform inputs_Panel;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform legend_Panel;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MasterSliderController master_labels;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[ReadOnly]
		public Text activeLabel;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18818", Offset = "0xD18818")]
		public bool openSliderOnArrowActivate;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool openSliderOnButtonActivate;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[ReadOnly]
		public bool useFPG;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[ReadOnly]
		public bool useOGT;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OGTMapper ogt;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FPGMapper fpg;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HbA1cMapper hba1c;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Slider masterSlide;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18870", Offset = "0xD18870")]
		public Toggle mealToggle;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Toggle clinical_toggle;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD188A8", Offset = "0xD188A8")]
		public Slider transitionSlide;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD188E0", Offset = "0xD188E0")]
		[ReadOnly]
		public DiabetesManagerState managerState;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[ReadOnly]
		public PancreasState pancreaseState;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[ReadOnly]
		public DiabetesState currentState;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[ReadOnly]
		public int lastDiabetesState;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float hypoMin;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float hypoMax;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float normalMin;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float normalMax;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float preMin;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float preMax;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float diabetesMin;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float diabetesMax;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float storedFPGValue;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float storedHbA1cValue;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float storedOGTValue;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float storedFPGValueCalculated;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float storedHbA1cValueCalculated;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float storedOGTValueCalculated;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool isLoading;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Coroutine transitionCoroutine;

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x22E4964", Offset = "0x22E4964", VA = "0x22E4964")]
		private void Start()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x22E4B70", Offset = "0x22E4B70", VA = "0x22E4B70")]
		private void AddListeners()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x22E50DC", Offset = "0x22E50DC", VA = "0x22E50DC")]
		private void OnClinicalToggleChanged(bool val)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x22E523C", Offset = "0x22E523C", VA = "0x22E523C")]
		public void OnMealToggleChanged(bool val)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x22E4F6C", Offset = "0x22E4F6C", VA = "0x22E4F6C")]
		private void SetUpToggles()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x22E4C14", Offset = "0x22E4C14", VA = "0x22E4C14")]
		private void setupMasterPanel(RectTransform panel)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x22E4CFC", Offset = "0x22E4CFC", VA = "0x22E4CFC")]
		private void setupInputSlider(DiabetesSliderMapper slider)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x22E5620", Offset = "0x22E5620", VA = "0x22E5620")]
		private void OnEditInput(DiabetesSliderMapper slider)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x22E57EC", Offset = "0x22E57EC", VA = "0x22E57EC")]
		private void OnArrowClicked(DiabetesSliderMapper slider)
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x22E5960", Offset = "0x22E5960", VA = "0x22E5960")]
		private void OnActivateClicked(DiabetesSliderMapper slider)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x22E56E4", Offset = "0x22E56E4", VA = "0x22E56E4")]
		private void ToggleUseSlider(DiabetesSliderMapper slider)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x22E5B14", Offset = "0x22E5B14", VA = "0x22E5B14")]
		private void OnMasterSliderChanged(float calculatedVal)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x22E5C58", Offset = "0x22E5C58", VA = "0x22E5C58")]
		public void OnSliderUpdated()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x22E5C98", Offset = "0x22E5C98", VA = "0x22E5C98")]
		public void onMasterBeginDrag()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x22E5CD0", Offset = "0x22E5CD0", VA = "0x22E5CD0")]
		public void onMasterEndDrag()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x22E5E80", Offset = "0x22E5E80", VA = "0x22E5E80")]
		private void ResetSliderAnimations()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x22E54EC", Offset = "0x22E54EC", VA = "0x22E54EC")]
		private void updateAnimator()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x22E5CF4", Offset = "0x22E5CF4", VA = "0x22E5CF4")]
		private void UpdateProgressSlider()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x22E5F28", Offset = "0x22E5F28", VA = "0x22E5F28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD247A0", Offset = "0xD247A0")]
		private IEnumerator moveTo(float to, float from, float duration)
		{
			return null;
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x22E533C", Offset = "0x22E533C", VA = "0x22E533C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24804", Offset = "0xD24804")]
		private IEnumerator waitAndChange(float duration)
		{
			return null;
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x22E53BC", Offset = "0x22E53BC", VA = "0x22E53BC")]
		private void updateMasterSlider()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x22E5B38", Offset = "0x22E5B38", VA = "0x22E5B38")]
		public DiabetesState GetDiabetesState(float value)
		{
			return default(DiabetesState);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x22E6014", Offset = "0x22E6014", VA = "0x22E6014")]
		private float BarValue()
		{
			return default(float);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x22E652C", Offset = "0x22E652C", VA = "0x22E652C")]
		private float calculateBarValue(float incriment, float input, float sliderMin, float sliderMax, float rangeMin)
		{
			return default(float);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x22E632C", Offset = "0x22E632C", VA = "0x22E632C")]
		private float getFPGVal()
		{
			return default(float);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x22E6230", Offset = "0x22E6230", VA = "0x22E6230")]
		private float getA1cVal()
		{
			return default(float);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x22E642C", Offset = "0x22E642C", VA = "0x22E642C")]
		private float getOGTVal()
		{
			return default(float);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x22E6554", Offset = "0x22E6554", VA = "0x22E6554")]
		public DiabetesManager()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class DiabetesMasterSliderEvents : MonoBehaviour, IEndDragHandler, IEventSystemHandler, IBeginDragHandler
	{
		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DiabetesManager man;

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x22E6958", Offset = "0x22E6958", VA = "0x22E6958")]
		private void Start()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x22E69CC", Offset = "0x22E69CC", VA = "0x22E69CC", Slot = "5")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x22E6A0C", Offset = "0x22E6A0C", VA = "0x22E6A0C", Slot = "4")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x22E6A3C", Offset = "0x22E6A3C", VA = "0x22E6A3C")]
		public DiabetesMasterSliderEvents()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class DiabetesPKFXDisabler : MonoBehaviour
	{
		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] attribute;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1895C", Offset = "0xD1895C")]
		public RectTransform panel;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18994", Offset = "0xD18994")]
		public Renderer[] mesh;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string shaderAttribute;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD189CC", Offset = "0xD189CC")]
		public float[] startValues;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] endValues;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[ReadOnly]
		public bool state;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool startState;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material[] mat;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle toggle;

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x22E6A44", Offset = "0x22E6A44", VA = "0x22E6A44")]
		private void Start()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x22E6EC8", Offset = "0x22E6EC8", VA = "0x22E6EC8", Slot = "4")]
		protected virtual void onClicked(bool val)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x22E6CE8", Offset = "0x22E6CE8", VA = "0x22E6CE8")]
		private void updateMesh(bool val)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x22E6CE4", Offset = "0x22E6CE4", VA = "0x22E6CE4")]
		private void updateEffect(bool val)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x22E6EE0", Offset = "0x22E6EE0", VA = "0x22E6EE0")]
		private void setupPopCornFX()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x22E6EE4", Offset = "0x22E6EE4", VA = "0x22E6EE4")]
		public DiabetesPKFXDisabler()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B928", Offset = "0xD0B928")]
	public class DiabetesSliderMapper : MonoBehaviour
	{
		[Token(Token = "0x2000785")]
		public delegate void OnSliderUpdated();

		[Token(Token = "0x2000786")]
		public delegate void OnInputEntered();

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18A14", Offset = "0xD18A14")]
		public Slider slide;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField tex;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform sliderPanel;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle arrowToggle;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle propertyToggle;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator sliderAnimator;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18A4C", Offset = "0xD18A4C")]
		public float max;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float min;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float val;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float defaultVal;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float hypoMin;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float hypoMax;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float normalMin;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float normalMax;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float preMin;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float preMax;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float diabetesMin;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float diabetesMax;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OnSliderUpdated onSliderUpdated;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OnInputEntered onInputEntered;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Text dialogueText;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected DiabetesManager dM;

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x22E6F4C", Offset = "0x22E6F4C", VA = "0x22E6F4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x22E6FCC", Offset = "0x22E6FCC", VA = "0x22E6FCC", Slot = "4")]
		protected virtual void Initalize()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x22E73CC", Offset = "0x22E73CC", VA = "0x22E73CC", Slot = "5")]
		protected virtual void SetDefaults()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x22E73D0", Offset = "0x22E73D0", VA = "0x22E73D0", Slot = "6")]
		protected virtual void OnSliderChanged(float val)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x22E7688", Offset = "0x22E7688", VA = "0x22E7688", Slot = "7")]
		protected virtual void UpdateText(float val)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x22E76CC", Offset = "0x22E76CC", VA = "0x22E76CC")]
		private void OnInputFieldEdited(string str)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x22E77C4", Offset = "0x22E77C4", VA = "0x22E77C4")]
		public DiabetesSliderMapper()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class FPGMapper : DiabetesSliderMapper
	{
		[Token(Token = "0x6001612")]
		[Address(RVA = "0x22E7A84", Offset = "0x22E7A84", VA = "0x22E7A84", Slot = "7")]
		protected override void UpdateText(float val)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x22E7B44", Offset = "0x22E7B44", VA = "0x22E7B44", Slot = "5")]
		protected override void SetDefaults()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x22E7B6C", Offset = "0x22E7B6C", VA = "0x22E7B6C")]
		public FPGMapper()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class HbA1cMapper : DiabetesSliderMapper
	{
		[Token(Token = "0x6001615")]
		[Address(RVA = "0x22E7BA0", Offset = "0x22E7BA0", VA = "0x22E7BA0", Slot = "7")]
		protected override void UpdateText(float val)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x22E7BE4", Offset = "0x22E7BE4", VA = "0x22E7BE4", Slot = "5")]
		protected override void SetDefaults()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x22E7C68", Offset = "0x22E7C68", VA = "0x22E7C68")]
		public HbA1cMapper()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class OGTMapper : DiabetesSliderMapper
	{
		[Token(Token = "0x6001618")]
		[Address(RVA = "0x22E7C9C", Offset = "0x22E7C9C", VA = "0x22E7C9C", Slot = "7")]
		protected override void UpdateText(float val)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x22E7D5C", Offset = "0x22E7D5C", VA = "0x22E7D5C", Slot = "5")]
		protected override void SetDefaults()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x22E7D8C", Offset = "0x22E7D8C", VA = "0x22E7D8C")]
		public OGTMapper()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0B98C", Offset = "0xD0B98C")]
	public class OpenCloseDiabetesPad : MonoBehaviour
	{
		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button openPadButton;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button closePadButton;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x22E7DC0", Offset = "0x22E7DC0", VA = "0x22E7DC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x22E7F28", Offset = "0x22E7F28", VA = "0x22E7F28")]
		private void PlayCloseAnimation()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x22E7F88", Offset = "0x22E7F88", VA = "0x22E7F88")]
		private void PlayOpenPadButton()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x22E7FE8", Offset = "0x22E7FE8", VA = "0x22E7FE8")]
		public OpenCloseDiabetesPad()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x22E7FF0", Offset = "0x22E7FF0", VA = "0x22E7FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24868", Offset = "0xD24868")]
		private void <OnEnable>b__3_0()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x22E7FF4", Offset = "0x22E7FF4", VA = "0x22E7FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24878", Offset = "0xD24878")]
		private void <OnEnable>b__3_1()
		{
		}
	}
}
namespace Sharecare.Cancer
{
	[Token(Token = "0x20003CC")]
	public enum TumorType
	{
		[Token(Token = "0x4001DCA")]
		DCIS,
		[Token(Token = "0x4001DCB")]
		LCIS,
		[Token(Token = "0x4001DCC")]
		T1mi,
		[Token(Token = "0x4001DCD")]
		T1a,
		[Token(Token = "0x4001DCE")]
		T1b,
		[Token(Token = "0x4001DCF")]
		T1c,
		[Token(Token = "0x4001DD0")]
		T2,
		[Token(Token = "0x4001DD1")]
		T3,
		[Token(Token = "0x4001DD2")]
		T4a,
		[Token(Token = "0x4001DD3")]
		T4b,
		[Token(Token = "0x4001DD4")]
		T4c,
		[Token(Token = "0x4001DD5")]
		T4d
	}
	[Token(Token = "0x20003CD")]
	public enum CancerStage
	{
		[Token(Token = "0x4001DD7")]
		O,
		[Token(Token = "0x4001DD8")]
		IA,
		[Token(Token = "0x4001DD9")]
		IB,
		[Token(Token = "0x4001DDA")]
		IIA,
		[Token(Token = "0x4001DDB")]
		IIB,
		[Token(Token = "0x4001DDC")]
		IIIA,
		[Token(Token = "0x4001DDD")]
		IIIB,
		[Token(Token = "0x4001DDE")]
		IIIC,
		[Token(Token = "0x4001DDF")]
		IV
	}
	[Token(Token = "0x20003CE")]
	public enum TIndex
	{
		[Token(Token = "0x4001DE1")]
		Tis,
		[Token(Token = "0x4001DE2")]
		TO,
		[Token(Token = "0x4001DE3")]
		T1,
		[Token(Token = "0x4001DE4")]
		T2,
		[Token(Token = "0x4001DE5")]
		T3,
		[Token(Token = "0x4001DE6")]
		T4
	}
	[Token(Token = "0x20003CF")]
	public enum MetsIndex
	{
		[Token(Token = "0x4001DE8")]
		MO,
		[Token(Token = "0x4001DE9")]
		M1
	}
	[Token(Token = "0x20003D0")]
	public enum PresetStages
	{
		[Token(Token = "0x4001DEB")]
		IA,
		[Token(Token = "0x4001DEC")]
		IIA,
		[Token(Token = "0x4001DED")]
		IIIA,
		[Token(Token = "0x4001DEE")]
		IIIB
	}
	[Token(Token = "0x20003D1")]
	public enum Stages
	{
		[Token(Token = "0x4001DF0")]
		NO,
		[Token(Token = "0x4001DF1")]
		N1,
		[Token(Token = "0x4001DF2")]
		N2,
		[Token(Token = "0x4001DF3")]
		N3a,
		[Token(Token = "0x4001DF4")]
		N3b,
		[Token(Token = "0x4001DF5")]
		N3c
	}
	[Token(Token = "0x20003D2")]
	public enum LymphGroup
	{
		[Token(Token = "0x4001DF7")]
		Axillary1,
		[Token(Token = "0x4001DF8")]
		Axillary2,
		[Token(Token = "0x4001DF9")]
		Axillary3,
		[Token(Token = "0x4001DFA")]
		Supraclavicular,
		[Token(Token = "0x4001DFB")]
		InternalMammary
	}
	[Token(Token = "0x20003D3")]
	public class CancerStagingAlgorithm : MonoBehaviour
	{
		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18A84", Offset = "0xD18A84")]
		public CancerStage cancerStage;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TIndex TStage;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stages lymphNodesStage;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18ABC", Offset = "0xD18ABC")]
		public TumorManager tumorManager;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18AF4", Offset = "0xD18AF4")]
		public Text stagingText;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text tumorText;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text lymphsText;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int N1NodesCount;

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x22E1A9C", Offset = "0x22E1A9C", VA = "0x22E1A9C")]
		private void UpdateLymphStage()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x22E1C34", Offset = "0x22E1C34", VA = "0x22E1C34")]
		public void UpdateStages()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x22E20B0", Offset = "0x22E20B0", VA = "0x22E20B0")]
		private void UpdateMIndex()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x22E1FEC", Offset = "0x22E1FEC", VA = "0x22E1FEC")]
		private void UpdateTIndex()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x22E21B4", Offset = "0x22E21B4", VA = "0x22E21B4")]
		private bool IV_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x22E21D8", Offset = "0x22E21D8", VA = "0x22E21D8")]
		private bool IIIC_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x22E2214", Offset = "0x22E2214", VA = "0x22E2214")]
		private bool IIIB_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x22E2258", Offset = "0x22E2258", VA = "0x22E2258")]
		private bool IIIA_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x22E22B4", Offset = "0x22E22B4", VA = "0x22E22B4")]
		private bool IIB_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x22E2308", Offset = "0x22E2308", VA = "0x22E2308")]
		private bool IIA_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x22E2370", Offset = "0x22E2370", VA = "0x22E2370")]
		private bool IB_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x22E23C8", Offset = "0x22E23C8", VA = "0x22E23C8")]
		private bool IA_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x22E2408", Offset = "0x22E2408", VA = "0x22E2408")]
		private bool O_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x22E2454", Offset = "0x22E2454", VA = "0x22E2454")]
		private int T4_Count()
		{
			return default(int);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x22E24BC", Offset = "0x22E24BC", VA = "0x22E24BC")]
		private int T3_Count()
		{
			return default(int);
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x22E24C4", Offset = "0x22E24C4", VA = "0x22E24C4")]
		private int T2_Count()
		{
			return default(int);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x22E24CC", Offset = "0x22E24CC", VA = "0x22E24CC")]
		private int T1_Count()
		{
			return default(int);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x22E2534", Offset = "0x22E2534", VA = "0x22E2534")]
		private int Tis_Count()
		{
			return default(int);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x22E256C", Offset = "0x22E256C", VA = "0x22E256C")]
		private int GetExistedTumorsCount(TumorType type)
		{
			return default(int);
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x22E2670", Offset = "0x22E2670", VA = "0x22E2670")]
		public CancerStagingAlgorithm()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class Tumor : MonoBehaviour
	{
		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TumorType type;

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x22E2678", Offset = "0x22E2678", VA = "0x22E2678")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x22E267C", Offset = "0x22E267C", VA = "0x22E267C")]
		public Tumor()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class TumorLocation : MonoBehaviour
	{
		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TumorType type;

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x22E2684", Offset = "0x22E2684", VA = "0x22E2684")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x22E2988", Offset = "0x22E2988", VA = "0x22E2988")]
		public TumorLocation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D6")]
	public struct TumorEffector
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Toggle tog;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject effector;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LymphGroup group;
	}
	[Token(Token = "0x20003D7")]
	public class TumorManager : MonoBehaviour
	{
		[Token(Token = "0x2000787")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E468", Offset = "0xD0E468")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4002F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TumorEffector fx;

			[Token(Token = "0x4002F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TumorManager <>4__this;

			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0x22E3504", Offset = "0x22E3504", VA = "0x22E3504")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x22E4940", Offset = "0x22E4940", VA = "0x22E4940")]
			internal void <AddEffectorListeners>b__0(bool state)
			{
			}
		}

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Tumor> existingTumors;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, List<Tumor>> octantTumors;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int metastasisCount;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18B2C", Offset = "0xD18B2C")]
		public TumorEffector[] effectors;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18B64", Offset = "0xD18B64")]
		public float T1miMax;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float T1aMax;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float T1bMax;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float T1cMax;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float T2Max;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float T3Max;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float T4aMax;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float T4bMax;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float T4cMax;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float T4dMax;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18B9C", Offset = "0xD18B9C")]
		public Slider tumorSlider;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Text tumorSliderText;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Button tumorCreateButton;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18BD4", Offset = "0xD18BD4")]
		public Button clearButton;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Button acceptButton;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD18C0C", Offset = "0xD18C0C")]
		public Toggle ductLobeToggle;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Toggle lymphToggle;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD18C1C", Offset = "0xD18C1C")]
		public Button DCISButton;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Button LCISButton;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18C2C", Offset = "0xD18C2C")]
		public GameObject T1MITumor;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject T1ATumor;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject T1BTumor;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject T1CTumor;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD18C64", Offset = "0xD18C64")]
		public GameObject T2Tumor;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject T3Tumor;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD18C74", Offset = "0xD18C74")]
		public GameObject T4ATumor;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject T4BTumor;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GameObject T4CTumor;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject T4DTumor;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18C84", Offset = "0xD18C84")]
		public GameObject[] lobesOctant;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18CBC", Offset = "0xD18CBC")]
		public GameObject[] ductsOctant;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18CF4", Offset = "0xD18CF4")]
		public string metsCountVarName;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18D2C", Offset = "0xD18D2C")]
		public OctantManager octMan;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public CancerStagingAlgorithm alg;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Tumor currentTumor;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Text clearButtonText;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private string clearButtonSelect;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string clearButtonClear;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool clearingZone;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Octant currentOctant;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool selectingLobeDuct;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private TumorType currentTumorType;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 hiddenScale;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 shownScale;

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x22E2990", Offset = "0x22E2990", VA = "0x22E2990")]
		private void Awake()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x22E2EE0", Offset = "0x22E2EE0", VA = "0x22E2EE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x22E2440", Offset = "0x22E2440", VA = "0x22E2440")]
		public void SaveMetastasisCount()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x22E30B0", Offset = "0x22E30B0", VA = "0x22E30B0")]
		private GameObject SelectTumor(TumorType type)
		{
			return null;
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x22E3204", Offset = "0x22E3204", VA = "0x22E3204")]
		public void AddTumor(TumorType type)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x22E2D10", Offset = "0x22E2D10", VA = "0x22E2D10")]
		private void AddEffectorListeners()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x22E29B4", Offset = "0x22E29B4", VA = "0x22E29B4")]
		private void AddTumorListeners()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x22E350C", Offset = "0x22E350C", VA = "0x22E350C")]
		public void OnEffectorToggled(bool val, GameObject effector)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x22E36B8", Offset = "0x22E36B8", VA = "0x22E36B8")]
		public void OnDuckButtonPressed()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x22E3754", Offset = "0x22E3754", VA = "0x22E3754")]
		public void OnLobeButtonPressed()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x22E37F0", Offset = "0x22E37F0", VA = "0x22E37F0")]
		public void OnTumorSliderChanged(float val)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x22E39A8", Offset = "0x22E39A8", VA = "0x22E39A8")]
		public void OnTumorCreateButtonClicked()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x22E3A3C", Offset = "0x22E3A3C", VA = "0x22E3A3C")]
		public void OnClearButtonPressed()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x22E3E48", Offset = "0x22E3E48", VA = "0x22E3E48")]
		public void OnAcceptButtonPressed()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x22E2EE4", Offset = "0x22E2EE4", VA = "0x22E2EE4")]
		private void InitalizeOctants()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x22E3454", Offset = "0x22E3454", VA = "0x22E3454")]
		private void ShowOctaves()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x22E3F04", Offset = "0x22E3F04", VA = "0x22E3F04")]
		private void OnOctantSelected(Octant o)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x22E4488", Offset = "0x22E4488", VA = "0x22E4488")]
		private void OnDuckLobeOctantSelected(Octant lastO, Octant curO, GameObject[] octants)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x22E3BE0", Offset = "0x22E3BE0", VA = "0x22E3BE0")]
		private void RemoveTumors(Octant o)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x22E33BC", Offset = "0x22E33BC", VA = "0x22E33BC")]
		private void RemoveTumor(Tumor t)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x22E46AC", Offset = "0x22E46AC", VA = "0x22E46AC")]
		private void OnTumorRemoved(Tumor t)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x22E41B0", Offset = "0x22E41B0", VA = "0x22E41B0")]
		private void GetOctantPositionForTumor(Octant o, Tumor t, out Vector3 pos, out Quaternion rot)
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x22E362C", Offset = "0x22E362C", VA = "0x22E362C")]
		private void UpdateStages()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x22E47A0", Offset = "0x22E47A0", VA = "0x22E47A0")]
		public TumorManager()
		{
		}
	}
}
namespace BioLucid
{
	[Token(Token = "0x20003D8")]
	[ExecuteInEditMode]
	public class BL_ShaderPositionData : MonoBehaviour
	{
		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18D64", Offset = "0xD18D64")]
		public string m_ShaderPositionPropertyName;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_ShaderAmountPropertyName;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_ShaderScalePropertyName;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18D9C", Offset = "0xD18D9C")]
		public Transform m_Effector;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18DD4", Offset = "0xD18DD4")]
		public bool m_ShowGizmos;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color m_GizmoColor;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_GizmoSize;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18E0C", Offset = "0xD18E0C")]
		public GameObject scaleObj;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject m_ObjectToEffect;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material[] m_Materials;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool lastActiveSelf;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float lastScale;

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xF7F77C", Offset = "0xF7F77C", VA = "0xF7F77C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xF7F788", Offset = "0xF7F788", VA = "0xF7F788")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xF7F794", Offset = "0xF7F794", VA = "0xF7F794")]
		private void Update()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xF7F940", Offset = "0xF7F940", VA = "0xF7F940")]
		public void SetEffectorPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xF7FA48", Offset = "0xF7FA48", VA = "0xF7FA48", Slot = "4")]
		protected virtual void InitEffector()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xF7FB4C", Offset = "0xF7FB4C", VA = "0xF7FB4C", Slot = "5")]
		protected virtual void HandleEffector()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xF7FE58", Offset = "0xF7FE58", VA = "0xF7FE58", Slot = "6")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xF7FF54", Offset = "0xF7FF54", VA = "0xF7FF54")]
		public BL_ShaderPositionData()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class SceneVariables : MonoBehaviour
	{
		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneVariables Instance;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, object> sceneVariables;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, object> fileVariables;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string savesFolderPath;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string sceneSaveFileName;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string loadedFileName;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string folderName;

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xF80118", Offset = "0xF80118", VA = "0xF80118")]
		private void Awake()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xF80350", Offset = "0xF80350", VA = "0xF80350")]
		private void OnSceneLoad()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xF8041C", Offset = "0xF8041C", VA = "0xF8041C")]
		public void AddSceneVariable(string varName, object variable)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xF8062C", Offset = "0xF8062C", VA = "0xF8062C")]
		public void AddFileVariable(string fileName, string varName, object variable)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xF80694", Offset = "0xF80694", VA = "0xF80694")]
		public void RemoveSceneVariable(string varName)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xF808E8", Offset = "0xF808E8", VA = "0xF808E8")]
		public void RemoveFileVariable(string fileName, string varName)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xF809B0", Offset = "0xF809B0", VA = "0xF809B0")]
		public object GetSceneVariable(string varName, [Optional] object output)
		{
			return null;
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xF80BB8", Offset = "0xF80BB8", VA = "0xF80BB8")]
		public object GetFileVariable(string fileName, string varName, [Optional] object output)
		{
			return null;
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xF80C20", Offset = "0xF80C20", VA = "0xF80C20")]
		public object GetFileVariableWithPath(string path, string fileName, string varName, [Optional] object output)
		{
			return null;
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xF809C4", Offset = "0xF809C4", VA = "0xF809C4")]
		private object GetVariable(Dictionary<string, object> dataDictionary, string varName, [Optional] object output)
		{
			return null;
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xF80430", Offset = "0xF80430", VA = "0xF80430")]
		private void AddVariable(Dictionary<string, object> dataDictionary, string varName, object variable)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xF80724", Offset = "0xF80724", VA = "0xF80724")]
		private void SaveVariables()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xF802D8", Offset = "0xF802D8", VA = "0xF802D8")]
		private Dictionary<string, object> LoadVariablesFromFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xF80C9C", Offset = "0xF80C9C", VA = "0xF80C9C")]
		private Dictionary<string, object> LoadVariablesFromFile(string fileName, string path)
		{
			return null;
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xF815C8", Offset = "0xF815C8", VA = "0xF815C8")]
		private object ConvertToCustomClass(object variable)
		{
			return null;
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xF80E50", Offset = "0xF80E50", VA = "0xF80E50")]
		private object ConvertToCommonClass(object variable, [Optional] object output)
		{
			return null;
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xF802AC", Offset = "0xF802AC", VA = "0xF802AC")]
		private string GetSavesPath()
		{
			return null;
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xF81BF8", Offset = "0xF81BF8", VA = "0xF81BF8")]
		public SceneVariables()
		{
		}
	}
}
namespace BioLucid.Heart
{
	[Token(Token = "0x20003DA")]
	public class ValvuloplastyController : MonoBehaviour
	{
		[Token(Token = "0x600166B")]
		[Address(RVA = "0xF8010C", Offset = "0xF8010C", VA = "0xF8010C")]
		public void OnAnimationFinish()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xF80110", Offset = "0xF80110", VA = "0xF80110")]
		public ValvuloplastyController()
		{
		}
	}
}
namespace BioLucid.Transparency
{
	[Token(Token = "0x20003DB")]
	public class DisableMeshOnZeroAlpha : MonoBehaviour
	{
		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialParametersController controller;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string propteryToWatch;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float tolerance;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer[] ignoreRenderer;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool ignore;

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xF81C98", Offset = "0xF81C98", VA = "0xF81C98", Slot = "4")]
		public virtual void OnSliderChanged()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xF821D0", Offset = "0xF821D0", VA = "0xF821D0")]
		public DisableMeshOnZeroAlpha()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DC")]
	public class RenderLevelControllerEntry
	{
		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xF82558", Offset = "0xF82558", VA = "0xF82558")]
		public RenderLevelControllerEntry()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	[ExecuteInEditMode]
	public class RenderLevelController : MonoBehaviour
	{
		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool useMaterialsInPlayer;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int deltaStart;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int deltaStep;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<RenderLevelControllerEntry> renderers;

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xF82234", Offset = "0xF82234", VA = "0xF82234")]
		public void updateRendererRQ(Renderer inRenderer, int inDelta)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xF82390", Offset = "0xF82390", VA = "0xF82390")]
		public void updateRenderQueue(bool set)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xF824D0", Offset = "0xF824D0", VA = "0xF824D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xF824D8", Offset = "0xF824D8", VA = "0xF824D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xF824E0", Offset = "0xF824E0", VA = "0xF824E0")]
		public RenderLevelController()
		{
		}
	}
}
namespace BioLucid.Breast
{
	[Token(Token = "0x20003DE")]
	public class BreastUISlider : MonoBehaviour
	{
		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialParametersController targetController;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableMeshOnZeroAlpha disableMesh;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xF80004", Offset = "0xF80004", VA = "0xF80004")]
		public void OnScrollValueChanged(Vector2 inValue)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xF80104", Offset = "0xF80104", VA = "0xF80104")]
		public BreastUISlider()
		{
		}
	}
}
namespace PathCreation.Examples
{
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0BA10", Offset = "0xD0BA10")]
	public class GeneratePathExample : MonoBehaviour
	{
		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool closedLoop;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] waypoints;

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x230C570", Offset = "0x230C570", VA = "0x230C570")]
		private void Start()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x230C628", Offset = "0x230C628", VA = "0x230C628")]
		public GeneratePathExample()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class PathFollower : MonoBehaviour
	{
		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathCreator pathCreator;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EndOfPathInstruction endOfPathInstruction;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float length;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float distanceTravelled;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool init;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject splineSegment;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject parent;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x230C638", Offset = "0x230C638", VA = "0x230C638")]
		private void Start()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x230C70C", Offset = "0x230C70C", VA = "0x230C70C")]
		private void Update()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x230CA9C", Offset = "0x230CA9C", VA = "0x230CA9C")]
		private void OnPathChanged()
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x230C880", Offset = "0x230C880", VA = "0x230C880")]
		private void Init()
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x230CAFC", Offset = "0x230CAFC", VA = "0x230CAFC")]
		public PathFollower()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	[ExecuteInEditMode]
	public class PathPlacer : PathSceneTool
	{
		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject prefab;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject holder;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float spacing;

		[Token(Token = "0x4001E67")]
		private const float minSpacing = 0.1f;

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x230CB0C", Offset = "0x230CB0C", VA = "0x230CB0C")]
		private void Generate()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x230CD48", Offset = "0x230CD48", VA = "0x230CD48")]
		private void DestroyObjects()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x230CE24", Offset = "0x230CE24", VA = "0x230CE24", Slot = "5")]
		protected override void PathUpdated()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x230CEAC", Offset = "0x230CEAC", VA = "0x230CEAC")]
		public PathPlacer()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	[ExecuteInEditMode]
	public abstract class PathSceneTool : MonoBehaviour
	{
		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathCreator pathCreator;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoUpdate;

		[Token(Token = "0x17000127")]
		protected VertexPath path
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0x230D01C", Offset = "0x230D01C", VA = "0x230D01C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action onDestroyed
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0x230CED4", Offset = "0x230CED4", VA = "0x230CED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24888", Offset = "0xD24888")]
			add
			{
			}
			[Token(Token = "0x6001683")]
			[Address(RVA = "0x230CF78", Offset = "0x230CF78", VA = "0x230CF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24898", Offset = "0xD24898")]
			remove
			{
			}
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x230D038", Offset = "0x230D038", VA = "0x230D038")]
		public void TriggerUpdate()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x230D044", Offset = "0x230D044", VA = "0x230D044", Slot = "4")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001687")]
		protected abstract void PathUpdated();

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x230CEC4", Offset = "0x230CEC4", VA = "0x230CEC4")]
		protected PathSceneTool()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class PathSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathCreator pathPrefab;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathFollower followerPrefab;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] spawnPoints;

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x230D058", Offset = "0x230D058", VA = "0x230D058")]
		private void Start()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x230D1E8", Offset = "0x230D1E8", VA = "0x230D1E8")]
		public PathSpawner()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class RoadMeshCreator : PathSceneTool
	{
		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18E54", Offset = "0xD18E54")]
		public float roadWidth;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18E8C", Offset = "0xD18E8C")]
		public float thickness;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool flattenSurface;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD18EA4", Offset = "0xD18EA4")]
		public Material roadMaterial;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material undersideMaterial;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float textureTiling;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private GameObject meshHolder;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh mesh;

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x230D1F0", Offset = "0x230D1F0", VA = "0x230D1F0", Slot = "5")]
		protected override void PathUpdated()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x230D78C", Offset = "0x230D78C", VA = "0x230D78C")]
		private void CreateRoadMesh()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x230D288", Offset = "0x230D288", VA = "0x230D288")]
		private void AssignMeshComponents()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x230D588", Offset = "0x230D588", VA = "0x230D588")]
		private void AssignMaterials()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x230E2DC", Offset = "0x230E2DC", VA = "0x230E2DC")]
		public RoadMeshCreator()
		{
		}
	}
}
namespace LiquidVolumeFX
{
	[Token(Token = "0x20003E5")]
	public class SpillController : MonoBehaviour
	{
		[Token(Token = "0x2000788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E478", Offset = "0xD0E478")]
		private sealed class <DestroySpill>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject spill;

			[Token(Token = "0x17000345")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AAF")]
				[Address(RVA = "0x1199A30", Offset = "0x1199A30", VA = "0x1199A30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000346")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AB1")]
				[Address(RVA = "0x1199A98", Offset = "0x1199A98", VA = "0x1199A98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x1199934", Offset = "0x1199934", VA = "0x1199934")]
			[DebuggerHidden]
			public <DestroySpill>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x1199968", Offset = "0x1199968", VA = "0x1199968", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0x119996C", Offset = "0x119996C", VA = "0x119996C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0x1199A38", Offset = "0x1199A38", VA = "0x1199A38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject spill;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LiquidVolume lv;

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x1199364", Offset = "0x1199364", VA = "0x1199364")]
		private void Start()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x11993BC", Offset = "0x11993BC", VA = "0x11993BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x1199550", Offset = "0x1199550", VA = "0x1199550")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x11998C4", Offset = "0x11998C4", VA = "0x11998C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD248A8", Offset = "0xD248A8")]
		private IEnumerator DestroySpill(GameObject spill)
		{
			return null;
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x1199960", Offset = "0x1199960", VA = "0x1199960")]
		public SpillController()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class CubeSpawn : MonoBehaviour
	{
		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instances;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float jitter;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float expansion;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float laps;

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1191E94", Offset = "0x1191E94", VA = "0x1191E94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x11921D4", Offset = "0x11921D4", VA = "0x11921D4")]
		public CubeSpawn()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class RandomRotation : MonoBehaviour
	{
		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18F14", Offset = "0xD18F14")]
		public float speed;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18F30", Offset = "0xD18F30")]
		public float randomChangeInterval;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float lastTime;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 v;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float randomization;

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x11991D8", Offset = "0x11991D8", VA = "0x11991D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x1199200", Offset = "0x1199200", VA = "0x1199200")]
		private void Update()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x1199354", Offset = "0x1199354", VA = "0x1199354")]
		public RandomRotation()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class CameraAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float baseHeight;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedY;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedX;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float distAcceleration;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distSpeed;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 lookAt;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float y;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float dy;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float distDirection;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float distSum;

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xFF70A0", Offset = "0xFF70A0", VA = "0xFF70A0")]
		private void Start()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xFF70D8", Offset = "0xFF70D8", VA = "0xFF70D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xFF7434", Offset = "0xFF7434", VA = "0xFF7434")]
		public CameraAnimator()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class CylinderManager : MonoBehaviour
	{
		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startingDelay;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numCylinders;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scale;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float heightMultiplier;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float circleRadius;

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x11921F0", Offset = "0x11921F0", VA = "0x11921F0")]
		private void Update()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x1192794", Offset = "0x1192794", VA = "0x1192794")]
		public CylinderManager()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class FishAnimator : MonoBehaviour
	{
		[Token(Token = "0x600169F")]
		[Address(RVA = "0x11927BC", Offset = "0x11927BC", VA = "0x11927BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x1192870", Offset = "0x1192870", VA = "0x1192870")]
		public FishAnimator()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class FlaskAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 initialPosition;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 finalPosition;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float duration;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float delay;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18F48", Offset = "0xD18F48")]
		public float level;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18F60", Offset = "0xD18F60")]
		public float minRange;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18F78", Offset = "0xD18F78")]
		public float maxRange;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18F90", Offset = "0xD18F90")]
		public float acceleration;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18FA8", Offset = "0xD18FA8")]
		public float rotationSpeed;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18FC0", Offset = "0xD18FC0")]
		public float alphaDuration;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18FD8", Offset = "0xD18FD8")]
		public float finalRefractionBlur;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LiquidVolume liquid;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float direction;

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x1192878", Offset = "0x1192878", VA = "0x1192878")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x11929A4", Offset = "0x11929A4", VA = "0x11929A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1192E18", Offset = "0x1192E18", VA = "0x1192E18")]
		public FlaskAnimator()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class PortalAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float duration;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayFadeOut;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 scale;

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x119877C", Offset = "0x119877C", VA = "0x119877C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x1198828", Offset = "0x1198828", VA = "0x1198828")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x1198978", Offset = "0x1198978", VA = "0x1198978")]
		public PortalAnimator()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class SpotlightAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lightOnDelay;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float targetIntensity;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float initialIntensity;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float nextColorInterval;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float colorChangeDuration;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Light spotLight;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float elapsedNextColor;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lastColorChange;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float colorChangeStarted;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color currentColor;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color nextColor;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool changingColor;

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x1199AA0", Offset = "0x1199AA0", VA = "0x1199AA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x1199B08", Offset = "0x1199B08", VA = "0x1199B08")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x1199D38", Offset = "0x1199D38", VA = "0x1199D38")]
		public SpotlightAnimator()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class VerticalBounce : MonoBehaviour
	{
		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD18FF0", Offset = "0xD18FF0")]
		public float acceleration;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float direction;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float y;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float speed;

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x1199D60", Offset = "0x1199D60", VA = "0x1199D60")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1199E44", Offset = "0x1199E44", VA = "0x1199E44")]
		public VerticalBounce()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class RandomMove : MonoBehaviour
	{
		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1900C", Offset = "0xD1900C")]
		public float right;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19024", Offset = "0xD19024")]
		public float left;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1903C", Offset = "0xD1903C")]
		public float back;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19054", Offset = "0xD19054")]
		public float front;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1906C", Offset = "0xD1906C")]
		public float speed;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19088", Offset = "0xD19088")]
		public float randomSpeed;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool automatic;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 velocity;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 accel;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int flaskType;

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x1198994", Offset = "0x1198994", VA = "0x1198994")]
		private void Update()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x119913C", Offset = "0x119913C", VA = "0x119913C")]
		public RandomMove()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public enum TOPOLOGY
	{
		[Token(Token = "0x4001EC1")]
		Sphere = 0,
		[Token(Token = "0x4001EC2")]
		Cylinder = 1,
		[Token(Token = "0x4001EC3")]
		Cube = 2,
		[Token(Token = "0x4001EC4")]
		Irregular = 10
	}
	[Token(Token = "0x20003F1")]
	public enum DETAIL
	{
		[Token(Token = "0x4001EC6")]
		Simple = 0,
		[Token(Token = "0x4001EC7")]
		Default = 10,
		[Token(Token = "0x4001EC8")]
		DefaultNoFlask = 11,
		[Token(Token = "0x4001EC9")]
		BumpTexture = 20,
		[Token(Token = "0x4001ECA")]
		Reflections = 30
	}
	[Token(Token = "0x20003F2")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0BA94", Offset = "0xD0BA94")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0BA94", Offset = "0xD0BA94")]
	[DisallowMultipleComponent]
	public class LiquidVolume : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000789")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E488", Offset = "0xD0E488")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector3> <>9__270_0;

			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x11985D4", Offset = "0x11985D4", VA = "0x11985D4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0x11985DC", Offset = "0x11985DC", VA = "0x11985DC")]
			internal int <ReadVertices>b__270_0(Vector3 v0, Vector3 v1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E498", Offset = "0xD0E498")]
		private sealed class <>c__DisplayClass287_0
		{
			[Token(Token = "0x4002F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CommandBuffer buf;

			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x1197BA8", Offset = "0x1197BA8", VA = "0x1197BA8")]
			public <>c__DisplayClass287_0()
			{
			}

			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0x1198610", Offset = "0x1198610", VA = "0x1198610")]
			internal void <SetupBackFacesBuffer>b__0(Renderer obj)
			{
			}
		}

		[Token(Token = "0x200078B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E4A8", Offset = "0xD0E4A8")]
		private sealed class <>c__DisplayClass293_0
		{
			[Token(Token = "0x4002F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CommandBuffer buf;

			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x1197D60", Offset = "0x1197D60", VA = "0x1197D60")]
			public <>c__DisplayClass293_0()
			{
			}

			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x11986EC", Offset = "0x11986EC", VA = "0x11986EC")]
			internal void <SetupFrontFacesBuffer>b__0(Renderer obj)
			{
			}
		}

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TOPOLOGY _topology;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private DETAIL _detail;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD190C4", Offset = "0xD190C4")]
		private float _level;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xD19104", Offset = "0xD19104")]
		private Color _liquidColor1;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19154", Offset = "0xD19154")]
		private float _liquidScale1;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xD1919C", Offset = "0xD1919C")]
		private Color _liquidColor2;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD191EC", Offset = "0xD191EC")]
		private float _liquidScale2;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19230", Offset = "0xD19230")]
		private float _alpha;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xD19270", Offset = "0xD19270")]
		private Color _emissionColor;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD192C0", Offset = "0xD192C0")]
		private float _emissionBrightness;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool _ditherShadows;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19310", Offset = "0xD19310")]
		private float _murkiness;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19350", Offset = "0xD19350")]
		private float _turbulence1;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19390", Offset = "0xD19390")]
		private float _turbulence2;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _frecuency;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD193E0", Offset = "0xD193E0")]
		private float _speed;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19420", Offset = "0xD19420")]
		private float _sparklingIntensity;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19460", Offset = "0xD19460")]
		private float _sparklingAmount;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD194A0", Offset = "0xD194A0")]
		private float _deepObscurance;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xD194E0", Offset = "0xD194E0")]
		private Color _foamColor;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19530", Offset = "0xD19530")]
		private float _foamScale;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19574", Offset = "0xD19574")]
		private float _foamThickness;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD195B8", Offset = "0xD195B8")]
		private float _foamDensity;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD195F8", Offset = "0xD195F8")]
		private float _foamWeight;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1963C", Offset = "0xD1963C")]
		private float _foamTurbulence;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool _foamVisibleFromBottom;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xD1968C", Offset = "0xD1968C")]
		[SerializeField]
		private Color _smokeColor;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD196DC", Offset = "0xD196DC")]
		private float _smokeScale;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19720", Offset = "0xD19720")]
		private float _smokeBaseObscurance;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19760", Offset = "0xD19760")]
		private float _smokeSpeed;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD197A0", Offset = "0xD197A0")]
		private float _upperLimit;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xD197E0", Offset = "0xD197E0")]
		private Color _flaskTint;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19830", Offset = "0xD19830")]
		private float _flaskThickness;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19870", Offset = "0xD19870")]
		private float _flaskGlossinessExternal;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD198B0", Offset = "0xD198B0")]
		private float _flaskGlossinessInternal;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool _refractionBlur;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19900", Offset = "0xD19900")]
		private float _blurIntensity;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int _liquidRaySteps;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private int _foamRaySteps;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private int _smokeRaySteps;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Texture2D _bumpMap;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Texture2D _distortionMap;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Texture2D _texture;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD199A0", Offset = "0xD199A0")]
		private float _distortionAmount;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool _depthAware;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
		[SerializeField]
		private bool _depthAwareCustomPass;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
		[SerializeField]
		private bool _ignoreGravity;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
		[SerializeField]
		private bool _reactToForces;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19A20", Offset = "0xD19A20")]
		private float _textureAlpha;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private Vector3 _extentsScale;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19A70", Offset = "0xD19A70")]
		private int _noiseVariation;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private bool _allowViewFromInside;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private int _renderQueue;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Cubemap _reflectionTexture;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19AE0", Offset = "0xD19AE0")]
		private float _physicsMass;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD19B20", Offset = "0xD19B20")]
		private float _physicsAngularDamp;

		[Token(Token = "0x4001F03")]
		private const string SHADER_KEYWORD_DEPTH_AWARE = "LIQUID_VOLUME_DEPTH_AWARE";

		[Token(Token = "0x4001F04")]
		private const string SHADER_KEYWORD_DEPTH_AWARE_CUSTOM_PASS = "LIQUID_VOLUME_DEPTH_AWARE_PASS";

		[Token(Token = "0x4001F05")]
		private const string SHADER_KEYWORD_NON_AABB = "LIQUID_VOLUME_NON_AABB";

		[Token(Token = "0x4001F06")]
		private const string SHADER_KEYWORD_IGNORE_GRAVITY = "LIQUID_VOLUME_IGNORE_GRAVITY";

		[Token(Token = "0x4001F07")]
		private const string SHADER_KEYWORD_SPHERE = "LIQUID_VOLUME_SPHERE";

		[Token(Token = "0x4001F08")]
		private const string SHADER_KEYWORD_CUBE = "LIQUID_VOLUME_CUBE";

		[Token(Token = "0x4001F09")]
		private const string SHADER_KEYWORD_CYLINDER = "LIQUID_VOLUME_CYLINDER";

		[Token(Token = "0x4001F0A")]
		private const string SHADER_KEYWORD_IRREGULAR = "LIQUID_VOLUME_IRREGULAR";

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Material liqMatSimple;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Material liqMatDefault;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Material liqMatDefaultNoFlask;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Material liqMatBump;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Material liqMatReflections;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Material liqMat;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Mesh mesh;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Renderer mr;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool wasRefractionBlur;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		private bool wasBackBuffer;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		private bool wasFrontBuffer;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 lastScale;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion lastRotation;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool camInside;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float lastDistanceToCam;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private DETAIL currentDetail;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector4 turb;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private float turbulenceSpeed;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float liquidLevelPos;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private List<Vector3> vertices;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private Vector3 prevVelocity;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Vector3 prev2Velocity;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector3 inertia;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 lastAvgVelocity;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private float angularVelocity;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float angularInertia;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private float turbulenceDueForces;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Quaternion liquidRot;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float prevThickness;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Camera, CommandBuffer> m_CamerasBlur;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material blurMat;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<Camera, CommandBuffer> m_CamerasBackBuffer;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Material backBufferMat;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<Renderer> bbRenderers;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Camera, CommandBuffer> m_CamerasFrontBuffer;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Material frontBufferMat;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<Renderer> fbRenderers;

		[Token(Token = "0x17000128")]
		public TOPOLOGY topology
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0x1192EE4", Offset = "0x1192EE4", VA = "0x1192EE4")]
			get
			{
				return default(TOPOLOGY);
			}
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0x1192EEC", Offset = "0x1192EEC", VA = "0x1192EEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public DETAIL detail
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0x119389C", Offset = "0x119389C", VA = "0x119389C")]
			get
			{
				return default(DETAIL);
			}
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x11938A4", Offset = "0x11938A4", VA = "0x11938A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public float level
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x11938BC", Offset = "0x11938BC", VA = "0x11938BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x1192C98", Offset = "0x1192C98", VA = "0x1192C98")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public Color liquidColor1
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0x11938C4", Offset = "0x11938C4", VA = "0x11938C4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016B5")]
			[Address(RVA = "0x1192650", Offset = "0x1192650", VA = "0x1192650")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public float liquidScale1
		{
			[Token(Token = "0x60016B6")]
			[Address(RVA = "0x11938D0", Offset = "0x11938D0", VA = "0x11938D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0x11938D8", Offset = "0x11938D8", VA = "0x11938D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public Color liquidColor2
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x11938F0", Offset = "0x11938F0", VA = "0x11938F0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x11926D4", Offset = "0x11926D4", VA = "0x11926D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public float liquidScale2
		{
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x11938FC", Offset = "0x11938FC", VA = "0x11938FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x1193904", Offset = "0x1193904", VA = "0x1193904")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public float alpha
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x119391C", Offset = "0x119391C", VA = "0x119391C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x11928E4", Offset = "0x11928E4", VA = "0x11928E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public Color emissionColor
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x1193924", Offset = "0x1193924", VA = "0x1193924")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x1193930", Offset = "0x1193930", VA = "0x1193930")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public float emissionBrightness
		{
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x11939B4", Offset = "0x11939B4", VA = "0x11939B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x11939BC", Offset = "0x11939BC", VA = "0x11939BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public bool ditherShadows
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0x11939D4", Offset = "0x11939D4", VA = "0x11939D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x11939DC", Offset = "0x11939DC", VA = "0x11939DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public float murkiness
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x1193A00", Offset = "0x1193A00", VA = "0x1193A00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x1193A08", Offset = "0x1193A08", VA = "0x1193A08")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public float turbulence1
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x1193A20", Offset = "0x1193A20", VA = "0x1193A20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x1193A28", Offset = "0x1193A28", VA = "0x1193A28")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public float turbulence2
		{
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x1193A40", Offset = "0x1193A40", VA = "0x1193A40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x1192758", Offset = "0x1192758", VA = "0x1192758")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float frecuency
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x1193A48", Offset = "0x1193A48", VA = "0x1193A48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x1193A50", Offset = "0x1193A50", VA = "0x1193A50")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public float speed
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x1193A68", Offset = "0x1193A68", VA = "0x1193A68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x1193A70", Offset = "0x1193A70", VA = "0x1193A70")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public float sparklingIntensity
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x1193A88", Offset = "0x1193A88", VA = "0x1193A88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x1193A90", Offset = "0x1193A90", VA = "0x1193A90")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public float sparklingAmount
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x1193AA8", Offset = "0x1193AA8", VA = "0x1193AA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x1193AB0", Offset = "0x1193AB0", VA = "0x1193AB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public float deepObscurance
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x1193AC8", Offset = "0x1193AC8", VA = "0x1193AC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x1193AD0", Offset = "0x1193AD0", VA = "0x1193AD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public Color foamColor
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x1193AE8", Offset = "0x1193AE8", VA = "0x1193AE8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x1193AF4", Offset = "0x1193AF4", VA = "0x1193AF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public float foamScale
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x1193B78", Offset = "0x1193B78", VA = "0x1193B78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x1193B80", Offset = "0x1193B80", VA = "0x1193B80")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public float foamThickness
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x1193B98", Offset = "0x1193B98", VA = "0x1193B98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x1193BA0", Offset = "0x1193BA0", VA = "0x1193BA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public float foamDensity
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x1193BB8", Offset = "0x1193BB8", VA = "0x1193BB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x1193BC0", Offset = "0x1193BC0", VA = "0x1193BC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public float foamWeight
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x1193BD8", Offset = "0x1193BD8", VA = "0x1193BD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x1193BE0", Offset = "0x1193BE0", VA = "0x1193BE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public float foamTurbulence
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0x1193BF8", Offset = "0x1193BF8", VA = "0x1193BF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0x1193C00", Offset = "0x1193C00", VA = "0x1193C00")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public bool foamVisibleFromBottom
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0x1193C18", Offset = "0x1193C18", VA = "0x1193C18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x1193C20", Offset = "0x1193C20", VA = "0x1193C20")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public Color smokeColor
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x1193C44", Offset = "0x1193C44", VA = "0x1193C44")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x1193C50", Offset = "0x1193C50", VA = "0x1193C50")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public float smokeScale
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x1193CD4", Offset = "0x1193CD4", VA = "0x1193CD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x1193CDC", Offset = "0x1193CDC", VA = "0x1193CDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public float smokeBaseObscurance
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x1193CF4", Offset = "0x1193CF4", VA = "0x1193CF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x1193CFC", Offset = "0x1193CFC", VA = "0x1193CFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public float smokeSpeed
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x1193D14", Offset = "0x1193D14", VA = "0x1193D14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x1193D1C", Offset = "0x1193D1C", VA = "0x1193D1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public float upperLimit
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x1193D34", Offset = "0x1193D34", VA = "0x1193D34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x1193D3C", Offset = "0x1193D3C", VA = "0x1193D3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public Color flaskTint
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x1193D54", Offset = "0x1193D54", VA = "0x1193D54")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x1193D60", Offset = "0x1193D60", VA = "0x1193D60")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public float flaskThickness
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x1193DE4", Offset = "0x1193DE4", VA = "0x1193DE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x1193DEC", Offset = "0x1193DEC", VA = "0x1193DEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public float flaskGlossinessExternal
		{
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x1193E04", Offset = "0x1193E04", VA = "0x1193E04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x1193E0C", Offset = "0x1193E0C", VA = "0x1193E0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public float flaskGlossinessInternal
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0x1193E24", Offset = "0x1193E24", VA = "0x1193E24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x1193E2C", Offset = "0x1193E2C", VA = "0x1193E2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public bool refractionBlur
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x1193E44", Offset = "0x1193E44", VA = "0x1193E44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0x1192770", Offset = "0x1192770", VA = "0x1192770")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public float blurIntensity
		{
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0x1193E4C", Offset = "0x1193E4C", VA = "0x1193E4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0x1192D58", Offset = "0x1192D58", VA = "0x1192D58")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public int liquidRaySteps
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0x1193E54", Offset = "0x1193E54", VA = "0x1193E54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0x1193E5C", Offset = "0x1193E5C", VA = "0x1193E5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public int foamRaySteps
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0x1193E74", Offset = "0x1193E74", VA = "0x1193E74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0x1193E7C", Offset = "0x1193E7C", VA = "0x1193E7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public int smokeRaySteps
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x1193E94", Offset = "0x1193E94", VA = "0x1193E94")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0x1193E9C", Offset = "0x1193E9C", VA = "0x1193E9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public Texture2D bumpMap
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0x1193EB4", Offset = "0x1193EB4", VA = "0x1193EB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0x1193EBC", Offset = "0x1193EBC", VA = "0x1193EBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public Texture2D distortionMap
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x1193F58", Offset = "0x1193F58", VA = "0x1193F58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001701")]
			[Address(RVA = "0x1193F60", Offset = "0x1193F60", VA = "0x1193F60")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public Texture2D texture
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0x1193FFC", Offset = "0x1193FFC", VA = "0x1193FFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001703")]
			[Address(RVA = "0x1194004", Offset = "0x1194004", VA = "0x1194004")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public float distortionAmount
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0x11940A0", Offset = "0x11940A0", VA = "0x11940A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001705")]
			[Address(RVA = "0x11940A8", Offset = "0x11940A8", VA = "0x11940A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public bool depthAware
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0x11940C0", Offset = "0x11940C0", VA = "0x11940C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x11940C8", Offset = "0x11940C8", VA = "0x11940C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public bool depthAwareCustomPass
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0x11940EC", Offset = "0x11940EC", VA = "0x11940EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001709")]
			[Address(RVA = "0x11940F4", Offset = "0x11940F4", VA = "0x11940F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public bool ignoreGravity
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0x1194118", Offset = "0x1194118", VA = "0x1194118")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600170B")]
			[Address(RVA = "0x1194120", Offset = "0x1194120", VA = "0x1194120")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public bool reactToForces
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0x1194144", Offset = "0x1194144", VA = "0x1194144")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600170D")]
			[Address(RVA = "0x119414C", Offset = "0x119414C", VA = "0x119414C")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public float textureAlpha
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0x1194170", Offset = "0x1194170", VA = "0x1194170")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600170F")]
			[Address(RVA = "0x1194178", Offset = "0x1194178", VA = "0x1194178")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public Vector3 extentsScale
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0x1194190", Offset = "0x1194190", VA = "0x1194190")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001711")]
			[Address(RVA = "0x11941A0", Offset = "0x11941A0", VA = "0x11941A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public int noiseVariation
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0x119427C", Offset = "0x119427C", VA = "0x119427C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001713")]
			[Address(RVA = "0x1194284", Offset = "0x1194284", VA = "0x1194284")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public bool allowViewFromInside
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0x119429C", Offset = "0x119429C", VA = "0x119429C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x11942A4", Offset = "0x11942A4", VA = "0x11942A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public int renderQueue
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x11945A4", Offset = "0x11945A4", VA = "0x11945A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001717")]
			[Address(RVA = "0x11945AC", Offset = "0x11945AC", VA = "0x11945AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public Cubemap reflectionTexture
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0x11945C4", Offset = "0x11945C4", VA = "0x11945C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x11945CC", Offset = "0x11945CC", VA = "0x11945CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public float physicsMass
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x1194668", Offset = "0x1194668", VA = "0x1194668")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x1194670", Offset = "0x1194670", VA = "0x1194670")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public float physicsAngularDamp
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x1194688", Offset = "0x1194688", VA = "0x1194688")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x1194690", Offset = "0x1194690", VA = "0x1194690")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public float liquidSurfaceYPosition
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0x1197F18", Offset = "0x1197F18", VA = "0x1197F18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x11946A8", Offset = "0x11946A8", VA = "0x11946A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x1194A28", Offset = "0x1194A28", VA = "0x1194A28")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x1194B70", Offset = "0x1194B70", VA = "0x1194B70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x1194D94", Offset = "0x1194D94", VA = "0x1194D94")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1196BF0", Offset = "0x1196BF0", VA = "0x1196BF0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1196C80", Offset = "0x1196C80", VA = "0x1196C80")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x11948A0", Offset = "0x11948A0", VA = "0x11948A0")]
		private void ReadVertices()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1195768", Offset = "0x1195768", VA = "0x1195768")]
		private void UpdateAnimations()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1192F04", Offset = "0x1192F04", VA = "0x1192F04")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1196C8C", Offset = "0x1196C8C", VA = "0x1196C8C")]
		private void UpdateLevels()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x11977BC", Offset = "0x11977BC", VA = "0x11977BC")]
		private void UpdateTurbulence()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x11942D0", Offset = "0x11942D0", VA = "0x11942D0")]
		private void CheckInsideOut()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x119790C", Offset = "0x119790C", VA = "0x119790C")]
		private bool PointInAABB(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1197A04", Offset = "0x1197A04", VA = "0x1197A04")]
		private bool PointInCylinder(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x11976A8", Offset = "0x11976A8", VA = "0x11976A8")]
		private void UpdateInsideOut()
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x119483C", Offset = "0x119483C", VA = "0x119483C")]
		private void CleanupCommandBuffer()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x119508C", Offset = "0x119508C", VA = "0x119508C")]
		internal static void CleanupRefractionBuffer()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x11952DC", Offset = "0x11952DC", VA = "0x11952DC")]
		internal static void SetupRefractionBuffer()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x1196288", Offset = "0x1196288", VA = "0x1196288")]
		internal static void SetupBackFacesBuffer(Renderer renderer)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x1196150", Offset = "0x1196150", VA = "0x1196150")]
		internal static void CleanupBackFacesBuffer()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x1197BB0", Offset = "0x1197BB0", VA = "0x1197BB0")]
		internal static void CleanupBackFacesCameras()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x11967D8", Offset = "0x11967D8", VA = "0x11967D8")]
		internal static void SetupFrontFacesBuffer(Renderer renderer)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x11966A0", Offset = "0x11966A0", VA = "0x11966A0")]
		internal static void CleanupFrontFacesBuffer()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1197D68", Offset = "0x1197D68", VA = "0x1197D68")]
		internal static void CleanupFrontFacesCameras()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x1197F20", Offset = "0x1197F20", VA = "0x1197F20")]
		public bool GetSpillPoint(out Vector3 spillPosition, float apertureStart = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x1197F48", Offset = "0x1197F48", VA = "0x1197F48")]
		public bool GetSpillPoint(out Vector3 spillPosition, out float spillAmount, float apertureStart = 1f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1198204", Offset = "0x1198204", VA = "0x1198204")]
		public LiquidVolume()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x20003F3")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x600173B")]
		[Address(RVA = "0xF90850", Offset = "0xF90850", VA = "0xF90850")]
		private void Update()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xF90A04", Offset = "0xF90A04", VA = "0xF90A04")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xF90A0C", Offset = "0xF90A0C", VA = "0xF90A0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xF90A60", Offset = "0xF90A60", VA = "0xF90A60")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class CUI_ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x600173F")]
		[Address(RVA = "0xF90A78", Offset = "0xF90A78", VA = "0xF90A78")]
		public void ChangeColorToBlue()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xF90AF4", Offset = "0xF90AF4", VA = "0xF90AF4")]
		public void ChangeColorToCyan()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xF90B70", Offset = "0xF90B70", VA = "0xF90B70")]
		public void ChangeColorToWhite()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xF90BEC", Offset = "0xF90BEC", VA = "0xF90BEC")]
		public CUI_ChangeColor()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xF90BF4", Offset = "0xF90BF4", VA = "0xF90BF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xF90C78", Offset = "0xF90C78", VA = "0xF90C78")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xF90DE0", Offset = "0xF90DE0", VA = "0xF90DE0", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xF90E74", Offset = "0xF90E74", VA = "0xF90E74", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xF90F04", Offset = "0xF90F04", VA = "0xF90F04")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xF90F0C", Offset = "0xF90F0C", VA = "0xF90F0C", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xF91250", Offset = "0xF91250", VA = "0xF91250", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xF916B0", Offset = "0xF916B0", VA = "0xF916B0", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xF91054", Offset = "0xF91054", VA = "0xF91054")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xF9171C", Offset = "0xF9171C", VA = "0xF9171C")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200078C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E4B8", Offset = "0xD0E4B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0xF91B78", Offset = "0xF91B78", VA = "0xF91B78")]
			public <>c()
			{
			}

			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0xF91B80", Offset = "0xF91B80", VA = "0xF91B80")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xF91724", Offset = "0xF91724", VA = "0xF91724")]
		private void Update()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xF91B0C", Offset = "0xF91B0C", VA = "0xF91B0C")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xF91C48", Offset = "0xF91C48", VA = "0xF91C48")]
		private void Start()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xF91C74", Offset = "0xF91C74", VA = "0xF91C74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xF91E90", Offset = "0xF91E90", VA = "0xF91E90")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xF91EA4", Offset = "0xF91EA4", VA = "0xF91EA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xF91EFC", Offset = "0xF91EFC", VA = "0xF91EFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xF920F4", Offset = "0xF920F4", VA = "0xF920F4")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xF920FC", Offset = "0xF920FC", VA = "0xF920FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xF92170", Offset = "0xF92170", VA = "0xF92170")]
		private void Update()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xF922C8", Offset = "0xF922C8", VA = "0xF922C8")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xF922D8", Offset = "0xF922D8", VA = "0xF922D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xF9234C", Offset = "0xF9234C", VA = "0xF9234C")]
		private void Update()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xF9244C", Offset = "0xF9244C", VA = "0xF9244C")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xF92460", Offset = "0xF92460", VA = "0xF92460")]
		public void PickThis()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xF92624", Offset = "0xF92624", VA = "0xF92624")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x1074A68", Offset = "0x1074A68", VA = "0x1074A68")]
		private void Start()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1074AC0", Offset = "0x1074AC0", VA = "0x1074AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x1074D70", Offset = "0x1074D70", VA = "0x1074D70")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x1074D78", Offset = "0x1074D78", VA = "0x1074D78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1074D7C", Offset = "0x1074D7C", VA = "0x1074D7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1074FAC", Offset = "0x1074FAC", VA = "0x1074FAC")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1074FC0", Offset = "0x1074FC0", VA = "0x1074FC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x107503C", Offset = "0x107503C", VA = "0x107503C")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x200078D")]
		private enum ViveButton
		{
			[Token(Token = "0x4002F5D")]
			Trigger,
			[Token(Token = "0x4002F5E")]
			TouchpadTouch,
			[Token(Token = "0x4002F5F")]
			TouchpadPress,
			[Token(Token = "0x4002F60")]
			Grip,
			[Token(Token = "0x4002F61")]
			Menu
		}

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x1075044", Offset = "0x1075044", VA = "0x1075044")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1075088", Offset = "0x1075088", VA = "0x1075088")]
		private void Start()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x1075094", Offset = "0x1075094", VA = "0x1075094")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1075118", Offset = "0x1075118", VA = "0x1075118")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x107511C", Offset = "0x107511C", VA = "0x107511C")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x1075124", Offset = "0x1075124", VA = "0x1075124")]
		private void Start()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x107538C", Offset = "0x107538C", VA = "0x107538C")]
		private void Update()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x107545C", Offset = "0x107545C", VA = "0x107545C")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x1075464", Offset = "0x1075464", VA = "0x1075464")]
		private void Update()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x10759B0", Offset = "0x10759B0", VA = "0x10759B0")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x10759B8", Offset = "0x10759B8", VA = "0x10759B8", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x1075CF8", Offset = "0x1075CF8", VA = "0x1075CF8", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x1075CFC", Offset = "0x1075CFC", VA = "0x1075CFC", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1075D74", Offset = "0x1075D74", VA = "0x1075D74")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x1075B08", Offset = "0x1075B08", VA = "0x1075B08")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x1075EF4", Offset = "0x1075EF4", VA = "0x1075EF4")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x1075EFC", Offset = "0x1075EFC", VA = "0x1075EFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x1075F4C", Offset = "0x1075F4C", VA = "0x1075F4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x1076214", Offset = "0x1076214", VA = "0x1076214")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x1076224", Offset = "0x1076224", VA = "0x1076224", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x1076284", Offset = "0x1076284", VA = "0x1076284", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x1076290", Offset = "0x1076290", VA = "0x1076290")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x600177C")]
		[Address(RVA = "0x10762F8", Offset = "0x10762F8", VA = "0x10762F8")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1076188", Offset = "0x1076188", VA = "0x1076188")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x10763C4", Offset = "0x10763C4", VA = "0x10763C4")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1076470", Offset = "0x1076470", VA = "0x1076470")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1076490", Offset = "0x1076490", VA = "0x1076490")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x10763E8", Offset = "0x10763E8", VA = "0x10763E8")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x10764AC", Offset = "0x10764AC", VA = "0x10764AC")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x1076534", Offset = "0x1076534", VA = "0x1076534")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x107659C", Offset = "0x107659C", VA = "0x107659C")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x1076608", Offset = "0x1076608", VA = "0x1076608")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1076678", Offset = "0x1076678", VA = "0x1076678")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x10766E8", Offset = "0x10766E8", VA = "0x10766E8")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x10761A4", Offset = "0x10761A4", VA = "0x10761A4")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x10761DC", Offset = "0x10761DC", VA = "0x10761DC")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x1074F74", Offset = "0x1074F74", VA = "0x1074F74")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x1076758", Offset = "0x1076758", VA = "0x1076758")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x10767F8", Offset = "0x10767F8", VA = "0x10767F8")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x1076898", Offset = "0x1076898", VA = "0x1076898")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x600178E")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600178F")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000409")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD19CF4", Offset = "0xD19CF4")]
		private bool autoSwitchHands;

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x1076958", Offset = "0x1076958", VA = "0x1076958")]
		private void Start()
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x1076BF8", Offset = "0x1076BF8", VA = "0x1076BF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x10769CC", Offset = "0x10769CC", VA = "0x10769CC")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x1076FC8", Offset = "0x1076FC8", VA = "0x1076FC8")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x200078E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E4C8", Offset = "0xD0E4C8")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x17000347")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ABF")]
				[Address(RVA = "0x1077C38", Offset = "0x1077C38", VA = "0x1077C38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000348")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AC1")]
				[Address(RVA = "0x1077CA0", Offset = "0x1077CA0", VA = "0x1077CA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0x10777F0", Offset = "0x10777F0", VA = "0x10777F0")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x1077B1C", Offset = "0x1077B1C", VA = "0x1077B1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x1077B20", Offset = "0x1077B20", VA = "0x1077B20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0x1077C40", Offset = "0x1077C40", VA = "0x1077C40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x17000161")]
		public Color CaretColor
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0x1077AA4", Offset = "0x1077AA4", VA = "0x1077AA4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600179D")]
			[Address(RVA = "0x1077AB0", Offset = "0x1077AB0", VA = "0x1077AB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public Color SelectionColor
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0x1077ABC", Offset = "0x1077ABC", VA = "0x1077ABC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600179F")]
			[Address(RVA = "0x1077AC8", Offset = "0x1077AC8", VA = "0x1077AC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x1077AD4", Offset = "0x1077AD4", VA = "0x1077AD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x1077AF0", Offset = "0x1077AF0", VA = "0x1077AF0")]
			set
			{
			}
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x1076FD8", Offset = "0x1076FD8", VA = "0x1076FD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x1077030", Offset = "0x1077030", VA = "0x1077030")]
		private void Update()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x1077370", Offset = "0x1077370", VA = "0x1077370", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x10777B8", Offset = "0x10777B8", VA = "0x10777B8", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1077748", Offset = "0x1077748", VA = "0x1077748")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24A4C", Offset = "0xD24A4C")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1077430", Offset = "0x1077430", VA = "0x1077430")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x1077040", Offset = "0x1077040", VA = "0x1077040")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x107781C", Offset = "0x107781C", VA = "0x107781C")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x1077B0C", Offset = "0x1077B0C", VA = "0x1077B0C")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200078F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E4D8", Offset = "0xD0E4D8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__4_0;

			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x107821C", Offset = "0x107821C", VA = "0x107821C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x1078224", Offset = "0x1078224", VA = "0x1078224")]
			internal bool <Update>b__4_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool CollideWithMyLayerOnly;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x1077CA8", Offset = "0x1077CA8", VA = "0x1077CA8")]
		protected void Update()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x10781B0", Offset = "0x10781B0", VA = "0x10781B0")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected LayerMask eventMask;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RaycastHit hitInfo;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastResult result;

		[Token(Token = "0x17000164")]
		public int CompoundEventMask
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x10787E0", Offset = "0x10787E0", VA = "0x10787E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000165")]
		public LayerMask EventMask
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x10788B4", Offset = "0x10788B4", VA = "0x10788B4")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x10788BC", Offset = "0x10788BC", VA = "0x10788BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public override Camera eventCamera
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x10788C4", Offset = "0x10788C4", VA = "0x10788C4", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		public virtual int Depth
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x107898C", Offset = "0x107898C", VA = "0x107898C", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000168")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x1078A64", Offset = "0x1078A64", VA = "0x1078A64", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x1078318", Offset = "0x1078318", VA = "0x1078318")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x1078350", Offset = "0x1078350", VA = "0x1078350", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x2000790")]
		public enum ControllerType
		{
			[Token(Token = "0x4002F68")]
			NONE = -1,
			[Token(Token = "0x4002F69")]
			VIVE
		}

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject Controller;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1078A6C", Offset = "0x1078A6C", VA = "0x1078A6C")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x2000791")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E4E8", Offset = "0xD0E4E8")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x4002F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x4002F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x1080F88", Offset = "0x1080F88", VA = "0x1080F88")]
			public <>c()
			{
			}

			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x1080F90", Offset = "0x1080F90", VA = "0x1080F90")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x1081054", Offset = "0x1081054", VA = "0x1081054")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x10810AC", Offset = "0x10810AC", VA = "0x10810AC")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x17000169")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x1079A60", Offset = "0x1079A60", VA = "0x1079A60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x108057C", Offset = "0x108057C", VA = "0x108057C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x1078AF4", Offset = "0x1078AF4", VA = "0x1078AF4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1078D78", Offset = "0x1078D78", VA = "0x1078D78", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x1079510", Offset = "0x1079510", VA = "0x1079510", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x10798B0", Offset = "0x10798B0", VA = "0x10798B0")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x1079884", Offset = "0x1079884", VA = "0x1079884")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x107A058", Offset = "0x107A058", VA = "0x107A058", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x107B380", Offset = "0x107B380", VA = "0x107B380", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x107BC34", Offset = "0x107BC34", VA = "0x107BC34", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x107C350", Offset = "0x107C350", VA = "0x107C350", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x107C904", Offset = "0x107C904", VA = "0x107C904", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x107ACF8", Offset = "0x107ACF8", VA = "0x107ACF8")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x107D42C", Offset = "0x107D42C", VA = "0x107D42C")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1079008", Offset = "0x1079008", VA = "0x1079008")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x107EED8", Offset = "0x107EED8", VA = "0x107EED8")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x107D8E4", Offset = "0x107D8E4", VA = "0x107D8E4")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x107E568", Offset = "0x107E568", VA = "0x107E568")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x107EF88", Offset = "0x107EF88", VA = "0x107EF88")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x107FADC", Offset = "0x107FADC", VA = "0x107FADC")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x107BA9C", Offset = "0x107BA9C", VA = "0x107BA9C")]
		private LayerMask GetLayerMaskForMyLayer()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x107BAF0", Offset = "0x107BAF0", VA = "0x107BAF0")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x107FB34", Offset = "0x107FB34", VA = "0x107FB34")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x107FC04", Offset = "0x107FC04", VA = "0x107FC04", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x107A824", Offset = "0x107A824", VA = "0x107A824")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x107FC1C", Offset = "0x107FC1C", VA = "0x107FC1C")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1080248", Offset = "0x1080248", VA = "0x1080248")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x10803F0", Offset = "0x10803F0", VA = "0x10803F0")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x1078E08", Offset = "0x1078E08", VA = "0x1078E08")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1080584", Offset = "0x1080584", VA = "0x1080584")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x10805F0", Offset = "0x10805F0", VA = "0x10805F0")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1080664", Offset = "0x1080664", VA = "0x1080664")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1080774", Offset = "0x1080774", VA = "0x1080774")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x1079ACC", Offset = "0x1079ACC", VA = "0x1079ACC")]
		public void Click()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x107F778", Offset = "0x107F778", VA = "0x107F778")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1080B98", Offset = "0x1080B98", VA = "0x1080B98")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x1080D8C", Offset = "0x1080D8C", VA = "0x1080D8C")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0BB24", Offset = "0xD0BB24")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0BB24", Offset = "0xD0BB24")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x2000792")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x4002F6F")]
			CYLINDER,
			[Token(Token = "0x4002F70")]
			RING,
			[Token(Token = "0x4002F71")]
			SPHERE,
			[Token(Token = "0x4002F72")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x4001F8C")]
		public const string Version = "3.0";

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool raycastMyLayerOnly;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x1700016B")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x108119C", Offset = "0x108119C", VA = "0x108119C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x10828DC", Offset = "0x10828DC", VA = "0x10828DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016D")]
		public int Angle
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x10828E4", Offset = "0x10828E4", VA = "0x10828E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x10828EC", Offset = "0x10828EC", VA = "0x10828EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public float Quality
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x1082900", Offset = "0x1082900", VA = "0x1082900")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x1082908", Offset = "0x1082908", VA = "0x1082908")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x1082924", Offset = "0x1082924", VA = "0x1082924")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x108292C", Offset = "0x108292C", VA = "0x108292C")]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public int VerticalAngle
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x108294C", Offset = "0x108294C", VA = "0x108294C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x1082954", Offset = "0x1082954", VA = "0x1082954")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public float RingFill
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x1082974", Offset = "0x1082974", VA = "0x1082974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x108297C", Offset = "0x108297C", VA = "0x108297C")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public float SavedRadius
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x1081B68", Offset = "0x1081B68", VA = "0x1081B68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000173")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x1082998", Offset = "0x1082998", VA = "0x1082998")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x10829A0", Offset = "0x10829A0", VA = "0x10829A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x10829C0", Offset = "0x10829C0", VA = "0x10829C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0x10829C8", Offset = "0x10829C8", VA = "0x10829C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public bool PreserveAspect
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x10829F4", Offset = "0x10829F4", VA = "0x10829F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x10829FC", Offset = "0x10829FC", VA = "0x10829FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public bool Interactable
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x1082A28", Offset = "0x1082A28", VA = "0x1082A28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x1082A30", Offset = "0x1082A30", VA = "0x1082A30")]
			set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x1082A3C", Offset = "0x1082A3C", VA = "0x1082A3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x1082A44", Offset = "0x1082A44", VA = "0x1082A44")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x1082A50", Offset = "0x1082A50", VA = "0x1082A50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x1082A58", Offset = "0x1082A58", VA = "0x1082A58")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x1082B40", Offset = "0x1082B40", VA = "0x1082B40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x1082B48", Offset = "0x1082B48", VA = "0x1082B48")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x1082C10", Offset = "0x1082C10", VA = "0x1082C10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017B")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x6001804")]
			[Address(RVA = "0x10801EC", Offset = "0x10801EC", VA = "0x10801EC")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x6001805")]
			[Address(RVA = "0x1082DC0", Offset = "0x1082DC0", VA = "0x1082DC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x1083118", Offset = "0x1083118", VA = "0x1083118")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x1083184", Offset = "0x1083184", VA = "0x1083184")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public float GazeClickTimer
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x10831F8", Offset = "0x10831F8", VA = "0x10831F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x1083264", Offset = "0x1083264", VA = "0x1083264")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x108335C", Offset = "0x108335C", VA = "0x108335C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x10833C8", Offset = "0x10833C8", VA = "0x10833C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x10834C0", Offset = "0x10834C0", VA = "0x10834C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1081104", Offset = "0x1081104", VA = "0x1081104")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x1081248", Offset = "0x1081248", VA = "0x1081248")]
		private void Start()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x108158C", Offset = "0x108158C", VA = "0x108158C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x108163C", Offset = "0x108163C", VA = "0x108163C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x10816EC", Offset = "0x10816EC", VA = "0x10816EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x1081840", Offset = "0x1081840", VA = "0x1081840")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x1081A38", Offset = "0x1081A38", VA = "0x1081A38")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1081B98", Offset = "0x1081B98", VA = "0x1081B98")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x1081CC8", Offset = "0x1081CC8", VA = "0x1081CC8")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x1081E00", Offset = "0x1081E00", VA = "0x1081E00")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1081FE8", Offset = "0x1081FE8", VA = "0x1081FE8")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x1082328", Offset = "0x1082328", VA = "0x1082328")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x10757F4", Offset = "0x10757F4", VA = "0x10757F4")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x1082458", Offset = "0x1082458", VA = "0x1082458")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1074BC0", Offset = "0x1074BC0", VA = "0x1074BC0")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x1078BFC", Offset = "0x1078BFC", VA = "0x1078BFC")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x107F544", Offset = "0x107F544", VA = "0x107F544")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x10827D8", Offset = "0x10827D8", VA = "0x10827D8")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x1082B54", Offset = "0x1082B54", VA = "0x1082B54")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x1082D04", Offset = "0x1082D04", VA = "0x1082D04")]
		public void Click()
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x10780CC", Offset = "0x10780CC", VA = "0x10780CC")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x1082EC0", Offset = "0x1082EC0", VA = "0x1082EC0")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x1083008", Offset = "0x1083008", VA = "0x1083008")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x108352C", Offset = "0x108352C", VA = "0x108352C")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD19E70", Offset = "0xD19E70")]
		public bool DoNotTesselate;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float[] m_weights;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedTextUV0;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector2 _uv0;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Vector2 _uv1;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 _pos;

		[Token(Token = "0x17000180")]
		private bool tesselationRequired
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0x1085C7C", Offset = "0x1085C7C", VA = "0x1085C7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001812")]
			[Address(RVA = "0x1085C84", Offset = "0x1085C84", VA = "0x1085C84")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6001825")]
			[Address(RVA = "0x1088988", Offset = "0x1088988", VA = "0x1088988")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001826")]
			[Address(RVA = "0x108897C", Offset = "0x108897C", VA = "0x108897C")]
			set
			{
			}
		}

		[Token(Token = "0x17000182")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x1088990", Offset = "0x1088990", VA = "0x1088990")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001828")]
			[Address(RVA = "0x1088998", Offset = "0x1088998", VA = "0x1088998")]
			set
			{
			}
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1085C90", Offset = "0x1085C90", VA = "0x1085C90", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1085D3C", Offset = "0x1085D3C", VA = "0x1085D3C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1085FDC", Offset = "0x1085FDC", VA = "0x1085FDC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1086554", Offset = "0x1086554", VA = "0x1086554", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x10866D4", Offset = "0x10866D4", VA = "0x10866D4")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x10866E0", Offset = "0x10866E0", VA = "0x10866E0")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1086784", Offset = "0x1086784", VA = "0x1086784")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x1086D34", Offset = "0x1086D34", VA = "0x1086D34", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x108443C", Offset = "0x108443C", VA = "0x108443C")]
		public void ModifyTMPMesh(ref List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x10873B0", Offset = "0x10873B0", VA = "0x10873B0")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x10874B4", Offset = "0x10874B4", VA = "0x10874B4")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1085EE0", Offset = "0x1085EE0", VA = "0x1085EE0")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1087930", Offset = "0x1087930", VA = "0x1087930")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1087758", Offset = "0x1087758", VA = "0x1087758")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1087F54", Offset = "0x1087F54", VA = "0x1087F54")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1087CF4", Offset = "0x1087CF4", VA = "0x1087CF4")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x10885F0", Offset = "0x10885F0", VA = "0x10885F0")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1081A2C", Offset = "0x1081A2C", VA = "0x1081A2C")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x10889A4", Offset = "0x10889A4", VA = "0x10889A4")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x600182A")]
		[Address(RVA = "0x1088A84", Offset = "0x1088A84", VA = "0x1088A84")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x2000413")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x2000414")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x2000415")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 savedSize;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 savedUp;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 savedPos;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool Dirty;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool curvingRequired;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool tesselationRequired;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		private bool quitting;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3[] vertices;

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x1083574", Offset = "0x1083574", VA = "0x1083574")]
		private void Start()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x1083604", Offset = "0x1083604", VA = "0x1083604")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x10838A8", Offset = "0x10838A8", VA = "0x10838A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x10839F4", Offset = "0x10839F4", VA = "0x10839F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x1083A00", Offset = "0x1083A00", VA = "0x1083A00")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x108421C", Offset = "0x108421C", VA = "0x108421C")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1084CC4", Offset = "0x1084CC4", VA = "0x1084CC4")]
		private void GetUIVertexFromMesh(ref UIVertex vert, int i)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x10846F0", Offset = "0x10846F0", VA = "0x10846F0")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1083788", Offset = "0x1083788", VA = "0x1083788")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1084844", Offset = "0x1084844", VA = "0x1084844")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1083E9C", Offset = "0x1083E9C", VA = "0x1083E9C")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x1084D14", Offset = "0x1084D14", VA = "0x1084D14")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x1084D30", Offset = "0x1084D30", VA = "0x1084D30")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1084D3C", Offset = "0x1084D3C", VA = "0x1084D3C")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000793")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E4F8", Offset = "0xD0E4F8")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x17000349")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ACD")]
				[Address(RVA = "0x1085C04", Offset = "0x1085C04", VA = "0x1085C04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ACF")]
				[Address(RVA = "0x1085C6C", Offset = "0x1085C6C", VA = "0x1085C6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x1085958", Offset = "0x1085958", VA = "0x1085958")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x1085AE8", Offset = "0x1085AE8", VA = "0x1085AE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0x1085AEC", Offset = "0x1085AEC", VA = "0x1085AEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0x1085C0C", Offset = "0x1085C0C", VA = "0x1085C0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x17000183")]
		public Color CaretColor
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x1085A78", Offset = "0x1085A78", VA = "0x1085A78")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600184B")]
			[Address(RVA = "0x1085A84", Offset = "0x1085A84", VA = "0x1085A84")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public Color SelectionColor
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0x1085A90", Offset = "0x1085A90", VA = "0x1085A90")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600184D")]
			[Address(RVA = "0x1085A9C", Offset = "0x1085A9C", VA = "0x1085A9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0x1085AA8", Offset = "0x1085AA8", VA = "0x1085AA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600184F")]
			[Address(RVA = "0x1085AC4", Offset = "0x1085AC4", VA = "0x1085AC4")]
			set
			{
			}
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x1084DD4", Offset = "0x1084DD4", VA = "0x1084DD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x108518C", Offset = "0x108518C", VA = "0x108518C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0x10854B8", Offset = "0x10854B8", VA = "0x10854B8", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0x1085920", Offset = "0x1085920", VA = "0x1085920", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x10858B0", Offset = "0x10858B0", VA = "0x10858B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24AB0", Offset = "0xD24AB0")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x1085578", Offset = "0x1085578", VA = "0x1085578")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x108519C", Offset = "0x108519C", VA = "0x108519C")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x1085984", Offset = "0x1085984", VA = "0x1085984")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1084E70", Offset = "0x1084E70", VA = "0x1084E70")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1085AE0", Offset = "0x1085AE0", VA = "0x1085AE0")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000417")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x1084950", Offset = "0x1084950", VA = "0x1084950")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x1085C74", Offset = "0x1085C74", VA = "0x1085C74")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xD0BBDC", Offset = "0xD0BBDC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xD0BBDC", Offset = "0xD0BBDC")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1088A8C", Offset = "0x1088A8C", VA = "0x1088A8C")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
namespace SRL
{
	[Token(Token = "0x2000419")]
	public class VRCamCaptureController : MonoBehaviour
	{
		[Token(Token = "0x2000794")]
		private enum RecState
		{
			[Token(Token = "0x4002F77")]
			Stopped,
			[Token(Token = "0x4002F78")]
			Recording,
			[Token(Token = "0x4002F79")]
			Paused
		}

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool captureWithUI;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD19FF8", Offset = "0xD19FF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD19FF8", Offset = "0xD19FF8")]
		[SerializeField]
		private Button recButton;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pauseButton;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button stopButton;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Dropdown resolutionPicker;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI notRecordingText;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI recordingText;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI pausedText;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI timerText;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject recButtonRedHighlight;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CaptureBase captureScript;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int selectedResolutionIndex;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int defaultResolutionIndex;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int resolutionPickerStartIndex;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int resolutionPickerLastIndex;

		[Token(Token = "0x4001FEC")]
		private const string prefsResolutionKey = "VR_Capture_SelectedResolution";

		[Token(Token = "0x17000186")]
		private static string subFolder
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0x22D6CB4", Offset = "0x22D6CB4", VA = "0x22D6CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x22D6CBC", Offset = "0x22D6CBC", VA = "0x22D6CBC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x22D6FC0", Offset = "0x22D6FC0", VA = "0x22D6FC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x22D7014", Offset = "0x22D7014", VA = "0x22D7014")]
		public void OnRecButton()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x22D7434", Offset = "0x22D7434", VA = "0x22D7434")]
		public void OnRecPauseButton()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x22D6FC4", Offset = "0x22D6FC4", VA = "0x22D6FC4")]
		public void OnRecStopButton()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x22D746C", Offset = "0x22D746C", VA = "0x22D746C")]
		public void OnResolutionPicker(int index)
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x22D7508", Offset = "0x22D7508", VA = "0x22D7508")]
		public void SetUIVisibleOnRecord(bool value)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x22D750C", Offset = "0x22D750C", VA = "0x22D750C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x22D7494", Offset = "0x22D7494", VA = "0x22D7494")]
		private void SetCaptureResolution()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x22D6E30", Offset = "0x22D6E30", VA = "0x22D6E30")]
		private void FillResolutionPicker()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x22D706C", Offset = "0x22D706C", VA = "0x22D706C")]
		private void AdjustUIForState(RecState state)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x22D7840", Offset = "0x22D7840", VA = "0x22D7840")]
		private void UpdateTimerText()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x22D6D54", Offset = "0x22D6D54", VA = "0x22D6D54")]
		private void SetCaptureSavePath()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x22D6CE8", Offset = "0x22D6CE8", VA = "0x22D6CE8")]
		private void LoadSettings()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x22D74B4", Offset = "0x22D74B4", VA = "0x22D74B4")]
		private void SaveSettings()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x22D756C", Offset = "0x22D756C", VA = "0x22D756C")]
		private bool IsRecordSessionActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x22D73A0", Offset = "0x22D73A0", VA = "0x22D73A0")]
		private bool IsRecordPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x22D7998", Offset = "0x22D7998", VA = "0x22D7998")]
		public VRCamCaptureController()
		{
		}
	}
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0BC3C", Offset = "0xD0BC3C")]
	public class AnchorVisibilityManager_pointBased : MonoBehaviour
	{
		[Token(Token = "0x2000795")]
		private enum OnScreenCheckBy
		{
			[Token(Token = "0x4002F7B")]
			Camera,
			[Token(Token = "0x4002F7C")]
			Rect
		}

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OnScreenCheckBy checkVisibilityBy;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CameraTarget camTarget;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RectTransform pointsViewRect;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float visibilityAngle;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform centerTF;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<LabelAnchor> allAnchors;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<LabelAnchor> currentRevealAnchors;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera mainCam;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform cameraTransform;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LabelsManager labelsManager;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ZoneManagerBase zoneManager;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int currentActiveRevealZone;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine anchorsUpdate;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rect viewRect;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 screenSize;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool isVR;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 visibilityDirectionReusable;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 camForwardReusable;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 boundSize;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 pointScreenPos;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool revealLocked;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int RevealOffset;

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xF0E714", Offset = "0xF0E714", VA = "0xF0E714")]
		private void Start()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xF0EF0C", Offset = "0xF0EF0C", VA = "0xF0EF0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xF0EFEC", Offset = "0xF0EFEC", VA = "0xF0EFEC")]
		private void Update()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xF0EBD4", Offset = "0xF0EBD4", VA = "0xF0EBD4")]
		public void OnRevealZoneChanged(int newZone, int oldZone)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xF0F454", Offset = "0xF0F454", VA = "0xF0F454")]
		public void LockRevealsOffset(int offset)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xF0F4D4", Offset = "0xF0F4D4", VA = "0xF0F4D4")]
		public void LockLabelsToReveal(int index)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xF0F4FC", Offset = "0xF0F4FC", VA = "0xF0F4FC")]
		public void UnlockRevealsUpdate()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xF0F274", Offset = "0xF0F274", VA = "0xF0F274")]
		private void UpdateAnchorsOnRevealSet()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xF0F0C4", Offset = "0xF0F0C4", VA = "0xF0F0C4")]
		private void UpdateAnchorsVisibility()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xF0F208", Offset = "0xF0F208", VA = "0xF0F208")]
		private void ToggleAnchor(LabelAnchor anchor, bool value)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xF0F574", Offset = "0xF0F574", VA = "0xF0F574")]
		private bool IsInsideViewRect(LabelAnchor anchor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xF0F6CC", Offset = "0xF0F6CC", VA = "0xF0F6CC")]
		private bool IsVisibleByAngle(LabelAnchor anchor)
		{
			return default(bool);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xF0EDA4", Offset = "0xF0EDA4", VA = "0xF0EDA4")]
		private Rect RectTransformToScreenSpace(RectTransform transform)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xF0EAB0", Offset = "0xF0EAB0", VA = "0xF0EAB0")]
		private List<LabelAnchor> GetAnchorsFromLabels()
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xF0F8A8", Offset = "0xF0F8A8", VA = "0xF0F8A8")]
		public AnchorVisibilityManager_pointBased()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class AnchorsStickToMeshController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000796")]
		private class AnchorMeshData
		{
			[Token(Token = "0x4002F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkinnedMeshRenderer skinnedMeshRenderer;

			[Token(Token = "0x4002F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x4002F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform nearestMeshTransform;

			[Token(Token = "0x4002F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nearestVertexIndex;

			[Token(Token = "0x4002F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VerticeData verticeData;

			[Token(Token = "0x4002F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<BlendShapeData> blendShapesData;

			[Token(Token = "0x4002F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 offset;

			[Token(Token = "0x4002F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 initialPos;

			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0xF106DC", Offset = "0xF106DC", VA = "0xF106DC")]
			public AnchorMeshData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000797")]
		public class VerticeData
		{
			[Token(Token = "0x4002F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform[] bonesTFs;

			[Token(Token = "0x4002F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] boneIndexes;

			[Token(Token = "0x4002F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3[] localPosition;

			[Token(Token = "0x4002F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float[] weights;

			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0xF115E0", Offset = "0xF115E0", VA = "0xF115E0")]
			public VerticeData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000798")]
		public class BlendShapeData
		{
			[Token(Token = "0x4002F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int framesCount;

			[Token(Token = "0x4002F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Vector3> framesVerticeDelta;

			[Token(Token = "0x4002F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<float> framesWeight;

			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0xF114B4", Offset = "0xF114B4", VA = "0xF114B4")]
			public BlendShapeData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000799")]
		private class DictionaryOfAnchorMeshData : SerializableDictionary<LabelAnchor, AnchorMeshData>
		{
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0xF1173C", Offset = "0xF1173C", VA = "0xF1173C")]
			public DictionaryOfAnchorMeshData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200079A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E508", Offset = "0xD0E508")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LabelAnchor, bool> <>9__13_0;

			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0xF1184C", Offset = "0xF1184C", VA = "0xF1184C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0xF11854", Offset = "0xF11854", VA = "0xF11854")]
			internal bool <Init>b__13_0(LabelAnchor anchor)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string prefsDisableEditorCalculationsKey;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LabelAnchor[] anchors;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DictionaryOfAnchorMeshData anchorsSkinnedMeshRenderers;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Transform> meshesTFs;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Mesh> skinnedMeshes;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SkinnedMeshRenderer[] sceneSkinnedMeshRenderers;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 point_newPos;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 blendDelta;

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xF0F980", Offset = "0xF0F980", VA = "0xF0F980")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xF0F98C", Offset = "0xF0F98C", VA = "0xF0F98C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xF0FEC0", Offset = "0xF0FEC0", VA = "0xF0FEC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xF0FF3C", Offset = "0xF0FF3C", VA = "0xF0FF3C")]
		private void UpdateAnchorPosition(LabelAnchor anchor)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xF0FE20", Offset = "0xF0FE20", VA = "0xF0FE20")]
		private AnchorMeshData CreateMeshData(LabelAnchor anchor)
		{
			return null;
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xF10754", Offset = "0xF10754", VA = "0xF10754")]
		private void FindNearestMesh(LabelAnchor anchor, AnchorMeshData meshData)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xF10C60", Offset = "0xF10C60", VA = "0xF10C60")]
		private void GetBlendShapeData(AnchorMeshData meshData)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xF10E9C", Offset = "0xF10E9C", VA = "0xF10E9C")]
		private void CalculateVerticesData(AnchorMeshData meshData)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xF0FD08", Offset = "0xF0FD08", VA = "0xF0FD08")]
		private SkinnedMeshRenderer[] FindSceneSkinnedMeshRenderers()
		{
			return null;
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xF11688", Offset = "0xF11688", VA = "0xF11688")]
		public AnchorsStickToMeshController()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class CrossSceneObjectDisabler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E518", Offset = "0xD0E518")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__2_0;

			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0xEF5610", Offset = "0xEF5610", VA = "0xEF5610")]
			public <>c()
			{
			}

			[Token(Token = "0x6002AD9")]
			[Address(RVA = "0xEF5618", Offset = "0xEF5618", VA = "0xEF5618")]
			internal bool <FindSingleAppRunner>b__2_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200079C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E528", Offset = "0xD0E528")]
		private sealed class <FindSingleAppRunner>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CrossSceneObjectDisabler <>4__this;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ADD")]
				[Address(RVA = "0xEF5880", Offset = "0xEF5880", VA = "0xEF5880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ADF")]
				[Address(RVA = "0xEF58E8", Offset = "0xEF58E8", VA = "0xEF58E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ADA")]
			[Address(RVA = "0xEF5460", Offset = "0xEF5460", VA = "0xEF5460")]
			[DebuggerHidden]
			public <FindSingleAppRunner>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0xEF5684", Offset = "0xEF5684", VA = "0xEF5684", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0xEF5688", Offset = "0xEF5688", VA = "0xEF5688", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0xEF5888", Offset = "0xEF5888", VA = "0xEF5888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AppRunner appRunner;

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xEF53C4", Offset = "0xEF53C4", VA = "0xEF53C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xEF53F0", Offset = "0xEF53F0", VA = "0xEF53F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24B14", Offset = "0xD24B14")]
		private IEnumerator FindSingleAppRunner()
		{
			return null;
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xEF548C", Offset = "0xEF548C", VA = "0xEF548C")]
		private void OnSceneFadeOut()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xEF54B4", Offset = "0xEF54B4", VA = "0xEF54B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xEF55A4", Offset = "0xEF55A4", VA = "0xEF55A4")]
		public CrossSceneObjectDisabler()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class DynamicPanelsPositionControl : MonoBehaviour
	{
		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int dotsModeOffset;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int allOnModeOffset;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int listModeOffset;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1A124", Offset = "0xD1A124")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A124", Offset = "0xD1A124")]
		[SerializeField]
		private RectTransform leftPanel;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RectTransform rightPanel;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 leftInitialPosision;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 rightInitialPosition;

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xEF5BA4", Offset = "0xEF5BA4", VA = "0xEF5BA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xEF5BEC", Offset = "0xEF5BEC", VA = "0xEF5BEC")]
		public void UpdatePanelsPosition(LabelsManager.LabelsPresentMode currentMode)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xEF5C74", Offset = "0xEF5C74", VA = "0xEF5C74")]
		public DynamicPanelsPositionControl()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class LabelsListEntry_Desktop : MonoBehaviour
	{
		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<int, bool> selectedAction;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle toggle;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject infoIconOff;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject infoIconOn;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image onBackgroundImage;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI textField;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RectMask2D itemMask;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Animator itemAnimator;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LabelData myLabelData;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool ignoreToggle;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool pointerDown;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color defaultTextColor;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color defaultHighlightColor;

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xEFBD08", Offset = "0xEFBD08", VA = "0xEFBD08")]
		private void Start()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xEFBDDC", Offset = "0xEFBDDC", VA = "0xEFBDDC")]
		public void Init(LabelData labelData)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xEFBEBC", Offset = "0xEFBEBC", VA = "0xEFBEBC")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xEFBEF0", Offset = "0xEFBEF0", VA = "0xEFBEF0")]
		public void OnToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xEFBF7C", Offset = "0xEFBF7C", VA = "0xEFBF7C")]
		public bool EntryTextContains(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xEFBFD8", Offset = "0xEFBFD8", VA = "0xEFBFD8")]
		public void SetToggleOn(bool value)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xEFC010", Offset = "0xEFC010", VA = "0xEFC010")]
		public void SetToggleInteractable(bool value)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xEFC030", Offset = "0xEFC030", VA = "0xEFC030")]
		public void SetMaskActive(bool value)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xEFC050", Offset = "0xEFC050", VA = "0xEFC050")]
		public void SetInfoOnIconActive(bool value)
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xEFC0A4", Offset = "0xEFC0A4", VA = "0xEFC0A4")]
		public void SetSelectedHighlightColor(Color color)
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xEFC0FC", Offset = "0xEFC0FC", VA = "0xEFC0FC")]
		public void ResetToDefaultHighlight()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xEFC158", Offset = "0xEFC158", VA = "0xEFC158")]
		public void suppressInfoIcon(bool value)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xEFBE64", Offset = "0xEFBE64", VA = "0xEFBE64")]
		private void SetInfoAvailable(bool value)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xEFC1A8", Offset = "0xEFC1A8", VA = "0xEFC1A8")]
		internal int GetId()
		{
			return default(int);
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xEFC1C4", Offset = "0xEFC1C4", VA = "0xEFC1C4")]
		public LabelsListEntry_Desktop()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class LabelsList_Desktop : MonoBehaviour
	{
		[Token(Token = "0x200079D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E538", Offset = "0xD0E538")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AlphanumComparatorFast comparator;

			[Token(Token = "0x4002F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<LabelData> <>9__0;

			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0xEFDA5C", Offset = "0xEFDA5C", VA = "0xEFDA5C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0xEFDC04", Offset = "0xEFDC04", VA = "0xEFDC04")]
			internal int <SortLabelsToCategories>b__0(LabelData x, LabelData y)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x200079E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E548", Offset = "0xD0E548")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<LabelData> <>9__33_1;

			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0xEFDBD0", Offset = "0xEFDBD0", VA = "0xEFDBD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0xEFDBD8", Offset = "0xEFDBD8", VA = "0xEFDBD8")]
			internal int <SortLabelsToCategories>b__33_1(LabelData x, LabelData y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<int, bool> listEntrySelectedAction;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CanvasGroup ListPanelCanvasGroup;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LabelsListEntry_Desktop listEntryExample;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LabelsListHeader_Desktop categoryHeaderExample;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject searchFieldRect;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject clearSearchButton;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject highlightRect;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI headerTextField;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<int, LabelsListEntry_Desktop> entryToggles;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SortedDictionary<string, List<LabelData>> labelsCategories;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, string> headersDisplayedText;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<LabelsListHeader_Desktop> categoryHeaders;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TMP_InputField searchInputField;

		[Token(Token = "0x400202D")]
		private const string ignoreCategorySortingMark = "_IgnoreSorting";

		[Token(Token = "0x400202E")]
		private const string LabelsListHeader = "Labels";

		[Token(Token = "0x400202F")]
		private const string QuizListHeader = "Quiz";

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xEFC1CC", Offset = "0xEFC1CC", VA = "0xEFC1CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xEFC284", Offset = "0xEFC284", VA = "0xEFC284")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xEFC290", Offset = "0xEFC290", VA = "0xEFC290")]
		public void FillList(LabelData[] labelsList)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xEFCE04", Offset = "0xEFCE04", VA = "0xEFCE04")]
		private void FilterListBy(string searchValue)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xEFD024", Offset = "0xEFD024", VA = "0xEFD024")]
		public void OnEntrySelected(int id, bool value)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xEFD0A0", Offset = "0xEFD0A0", VA = "0xEFD0A0")]
		public void OnSearchTextChanged(string value)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xEFD0EC", Offset = "0xEFD0EC", VA = "0xEFD0EC")]
		public void OnClearSearchButton()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xEFD1F8", Offset = "0xEFD1F8", VA = "0xEFD1F8")]
		public void OnLocaleDidChange()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xEFD3C0", Offset = "0xEFD3C0", VA = "0xEFD3C0")]
		public void SetEntrySelected(int id, bool value)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xEFD4B4", Offset = "0xEFD4B4", VA = "0xEFD4B4")]
		public void SetEntryInfoOnIconActive(int id, bool value)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xEFD58C", Offset = "0xEFD58C", VA = "0xEFD58C")]
		public void SetEntryHighlight(int id, Color color)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xEFD62C", Offset = "0xEFD62C", VA = "0xEFD62C")]
		public void RestoreEntryHighlight(int id)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xEFD69C", Offset = "0xEFD69C", VA = "0xEFD69C")]
		public void SetInfoIconsHidden(bool value)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xEFD7B8", Offset = "0xEFD7B8", VA = "0xEFD7B8")]
		public void SetAllEntriesOff()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xEFD890", Offset = "0xEFD890", VA = "0xEFD890")]
		public void SetInteractable(bool value)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xEFD9BC", Offset = "0xEFD9BC", VA = "0xEFD9BC")]
		public void SetQuizHeaderActive(bool value)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xEFDA3C", Offset = "0xEFDA3C", VA = "0xEFDA3C")]
		public void SetHighlightActive(bool value)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xEFC6FC", Offset = "0xEFC6FC", VA = "0xEFC6FC")]
		private void SortLabelsToCategories(LabelData[] labels)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xEFCBD4", Offset = "0xEFCBD4", VA = "0xEFCBD4")]
		private void FillDisplayedHeaders()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xEFDA64", Offset = "0xEFDA64", VA = "0xEFDA64")]
		public LabelsList_Desktop()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class LabelsPresenter_Desktop : LabelsPresenterProtocol
	{
		[Serializable]
		[Token(Token = "0x200079F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E558", Offset = "0xD0E558")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__44_0;

			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0xF04F58", Offset = "0xF04F58", VA = "0xF04F58")]
			public <>c()
			{
			}

			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0xF04F60", Offset = "0xF04F60", VA = "0xF04F60")]
			internal bool <ChangeLabelPanel>b__44_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E568", Offset = "0xD0E568")]
		private sealed class <ChangeLabelPanel>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LabelsPresenter_Desktop <>4__this;

			[Token(Token = "0x4002F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LabelData labelData;

			[Token(Token = "0x1700034D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AEB")]
				[Address(RVA = "0x22A3118", Offset = "0x22A3118", VA = "0x22A3118", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AED")]
				[Address(RVA = "0x22A3180", Offset = "0x22A3180", VA = "0x22A3180", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0x22A2E70", Offset = "0x22A2E70", VA = "0x22A2E70")]
			[DebuggerHidden]
			public <ChangeLabelPanel>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x22A2E9C", Offset = "0x22A2E9C", VA = "0x22A2E9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x22A2EA0", Offset = "0x22A2EA0", VA = "0x22A2EA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0x22A3120", Offset = "0x22A3120", VA = "0x22A3120", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E578", Offset = "0xD0E578")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4002F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 textPos;

			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x22A2D4C", Offset = "0x22A2D4C", VA = "0x22A2D4C")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x22A2D54", Offset = "0x22A2D54", VA = "0x22A2D54")]
			internal float <SortMarkersByDistanceToText>b__0(AnchorMarkerProtocol x)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] presenterPanels;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform labelMarkerExample;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RectTransform canvasRect;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float panelJumpDelay;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LabelData currentInfoPresented;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastInfoPresented;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int labelsInPanelLimit;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 panelDistanceThreshold;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<int> labelsInPanelTransition;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LabelsList_Desktop _labelsListView;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InfoBoxController _infoBox;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, List<AnchorMarkerProtocol>> activeMarkers;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<int, LabelText_Desktop> activeLabels;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<Transform, List<LabelText_Desktop>> labelsInPanels;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 panelDistanceVector;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float vectorSqrLength;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<LabelText_Desktop> panelLabels;

		[Token(Token = "0x17000187")]
		private float _panelJumpDelay
		{
			[Token(Token = "0x60018AD")]
			[Address(RVA = "0xF01CF0", Offset = "0xF01CF0", VA = "0xF01CF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000188")]
		private LabelsList_Desktop labelsListView
		{
			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xF01D44", Offset = "0xF01D44", VA = "0xF01D44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private InfoBoxController infoBox
		{
			[Token(Token = "0x60018AF")]
			[Address(RVA = "0xF01DF8", Offset = "0xF01DF8", VA = "0xF01DF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xF01F10", Offset = "0xF01F10", VA = "0xF01F10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xF01FF4", Offset = "0xF01FF4", VA = "0xF01FF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xF020A4", Offset = "0xF020A4", VA = "0xF020A4", Slot = "4")]
		public override void PresentMarkers(LabelData[] labelData, bool withInfoLook = false, [Optional] Action completionAction)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xF02468", Offset = "0xF02468", VA = "0xF02468", Slot = "5")]
		public override void PresentLabel(LabelData labelData, bool withInfoActive = false)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xF02930", Offset = "0xF02930", VA = "0xF02930", Slot = "6")]
		public override void RemoveLabel(LabelData labelData, [Optional] Action completionAction)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xF02B5C", Offset = "0xF02B5C", VA = "0xF02B5C", Slot = "7")]
		public override void RemoveAllLabelsExcept(int id, [Optional] Action completionAction)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xF02C98", Offset = "0xF02C98", VA = "0xF02C98", Slot = "8")]
		public override void RemoveMarkers(int id = -1, [Optional] Action completionAction)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xF02E78", Offset = "0xF02E78", VA = "0xF02E78", Slot = "9")]
		public override void SetLabelsLimitForPanel(int limit)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xF02E80", Offset = "0xF02E80", VA = "0xF02E80")]
		public void OnLabelTextDetailButton(LabelData labelData)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xF02E9C", Offset = "0xF02E9C", VA = "0xF02E9C")]
		public void OnInfoBoxClosed()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xF027F0", Offset = "0xF027F0", VA = "0xF027F0")]
		public void ToggleDetailText([Optional] LabelData labelData)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xF03300", Offset = "0xF03300", VA = "0xF03300", Slot = "10")]
		public override void ShowLabelInfo(LabelData labelData)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xF03338", Offset = "0xF03338", VA = "0xF03338", Slot = "11")]
		public override void ToggleLatinTranslations(bool value)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xF03444", Offset = "0xF03444", VA = "0xF03444", Slot = "12")]
		public override void OnLocaleDidChange()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xF02FA4", Offset = "0xF02FA4", VA = "0xF02FA4")]
		private void ToggleLabelsInfoLook(LabelData labelData)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xF02ED0", Offset = "0xF02ED0", VA = "0xF02ED0")]
		private void SetInfoButtonsEnabled(bool value)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xF02634", Offset = "0xF02634", VA = "0xF02634")]
		private void ShowLabel(LabelData labelData, bool toggleInfoLook = false)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xF029E4", Offset = "0xF029E4", VA = "0xF029E4")]
		private void HideLabel(LabelData labelData, bool hideDetails = true, [Optional] Action completionAction)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xF022C8", Offset = "0xF022C8", VA = "0xF022C8")]
		private List<AnchorMarkerProtocol> CreateMarkers(LabelData labelData)
		{
			return null;
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xF0358C", Offset = "0xF0358C", VA = "0xF0358C")]
		private LabelText_Desktop CreateLabelText(LabelData labelData)
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xF02068", Offset = "0xF02068", VA = "0xF02068")]
		private void UpdateVisualLayouts()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xF049B8", Offset = "0xF049B8", VA = "0xF049B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24B78", Offset = "0xD24B78")]
		private IEnumerator ChangeLabelPanel(LabelData labelData)
		{
			return null;
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xF039BC", Offset = "0xF039BC", VA = "0xF039BC")]
		private void CheckNearestPanels()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xF03C7C", Offset = "0xF03C7C", VA = "0xF03C7C")]
		private void SortMarkersByDistanceToText()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xF030C0", Offset = "0xF030C0", VA = "0xF030C0")]
		private void SetMarkersInfoLookActive(int id, bool value)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xF03E70", Offset = "0xF03E70", VA = "0xF03E70")]
		private void UpdateTextLabelsOrder()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xF0430C", Offset = "0xF0430C", VA = "0xF0430C")]
		private void UpdateMarkersLines()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xF0368C", Offset = "0xF0368C", VA = "0xF0368C")]
		private Transform FindNearestPanel(LabelData labelData, [Optional] Transform currentPanel)
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xF04AB4", Offset = "0xF04AB4", VA = "0xF04AB4")]
		private int GetPointsCount(LabelData labelData)
		{
			return default(int);
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xF04B50", Offset = "0xF04B50", VA = "0xF04B50")]
		private Vector3 GetPositionForPointWithIndex(LabelData labelData, int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xF0472C", Offset = "0xF0472C", VA = "0xF0472C")]
		private void CheckPanelsLimits()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xF04CB8", Offset = "0xF04CB8", VA = "0xF04CB8")]
		private Transform FindOtherPresenterPanel(Transform currentPanel)
		{
			return null;
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xF04A34", Offset = "0xF04A34", VA = "0xF04A34")]
		private bool lineSegmentsIntersect(Vector2 lineOneA, Vector2 lineOneB, Vector2 lineTwoA, Vector2 lineTwoB)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xF04DA8", Offset = "0xF04DA8", VA = "0xF04DA8")]
		public LabelsPresenter_Desktop()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class LabelPlacementUtility : MonoBehaviour
	{
		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0xD1A280", Offset = "0xD1A280")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1A280", Offset = "0xD1A280")]
		[SerializeField]
		private string pastedGoogleSheetData;

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xEFB2A8", Offset = "0xEFB2A8", VA = "0xEFB2A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD24BDC", Offset = "0xD24BDC")]
		private void PlaceLabels()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xEFB880", Offset = "0xEFB880", VA = "0xEFB880")]
		public LabelPlacementUtility()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class LabelsBodySelectorsDisabler : MonoBehaviour
	{
		[Token(Token = "0x20007A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E588", Offset = "0xD0E588")]
		private sealed class <SetSelectorsActive>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool value;

			[Token(Token = "0x4002FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LabelsBodySelectorsDisabler <>4__this;

			[Token(Token = "0x1700034F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AF3")]
				[Address(RVA = "0xEFBC98", Offset = "0xEFBC98", VA = "0xEFBC98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000350")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AF5")]
				[Address(RVA = "0xEFBD00", Offset = "0xEFBD00", VA = "0xEFBD00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0xEFBABC", Offset = "0xEFBABC", VA = "0xEFBABC")]
			[DebuggerHidden]
			public <SetSelectorsActive>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0xEFBB58", Offset = "0xEFBB58", VA = "0xEFBB58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0xEFBB5C", Offset = "0xEFBB5C", VA = "0xEFBB5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0xEFBCA0", Offset = "0xEFBCA0", VA = "0xEFBCA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle labelsToggle;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BasicSelector[] basicSelectors;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Collider> selectorsColliders;

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xEFB888", Offset = "0xEFB888", VA = "0xEFB888")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xEFBA04", Offset = "0xEFBA04", VA = "0xEFBA04")]
		public void OnLabelsToggle(bool value)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xEFBA38", Offset = "0xEFBA38", VA = "0xEFBA38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24C14", Offset = "0xD24C14")]
		private IEnumerator SetSelectorsActive(bool value)
		{
			return null;
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xEFBAE8", Offset = "0xEFBAE8", VA = "0xEFBAE8")]
		public LabelsBodySelectorsDisabler()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class LabelsManager : MonoBehaviour
	{
		[Token(Token = "0x20007A3")]
		public enum LabelsPresentMode
		{
			[Token(Token = "0x4002FA3")]
			Off,
			[Token(Token = "0x4002FA4")]
			Dots,
			[Token(Token = "0x4002FA5")]
			AllOn,
			[Token(Token = "0x4002FA6")]
			List,
			[Token(Token = "0x4002FA7")]
			Quiz
		}

		[Token(Token = "0x20007A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E598", Offset = "0xD0E598")]
		private sealed class <DelayedLabelsOn>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LabelsManager <>4__this;

			[Token(Token = "0x17000351")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AF9")]
				[Address(RVA = "0xF01C80", Offset = "0xF01C80", VA = "0xF01C80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AFB")]
				[Address(RVA = "0xF01CE8", Offset = "0xF01CE8", VA = "0xF01CE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0xEFEC88", Offset = "0xEFEC88", VA = "0xEFEC88")]
			[DebuggerHidden]
			public <DelayedLabelsOn>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0xF01A84", Offset = "0xF01A84", VA = "0xF01A84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AF8")]
			[Address(RVA = "0xF01A88", Offset = "0xF01A88", VA = "0xF01A88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0xF01C88", Offset = "0xF01C88", VA = "0xF01C88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E5A8", Offset = "0xD0E5A8")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x4002FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LabelsManager <>4__this;

			[Token(Token = "0x4002FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int id;

			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0xEFFF54", Offset = "0xEFFF54", VA = "0xEFFF54")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0xF015FC", Offset = "0xF015FC", VA = "0xF015FC")]
			internal void <SetLabelDotVisible>b__0()
			{
			}
		}

		[Token(Token = "0x20007A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E5B8", Offset = "0xD0E5B8")]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x4002FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LabelsManager <>4__this;

			[Token(Token = "0x4002FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int id;

			[Token(Token = "0x4002FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onRedyToDisplay;

			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0xF00B50", Offset = "0xF00B50", VA = "0xF00B50")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0xF0172C", Offset = "0xF0172C", VA = "0xF0172C")]
			internal void <UpdateStateForSelectedLabel>b__0()
			{
			}

			[Token(Token = "0x6002B00")]
			[Address(RVA = "0xF0186C", Offset = "0xF0186C", VA = "0xF0186C")]
			internal void <UpdateStateForSelectedLabel>b__1()
			{
			}
		}

		[Token(Token = "0x20007A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E5C8", Offset = "0xD0E5C8")]
		private sealed class <>c__DisplayClass67_0
		{
			[Token(Token = "0x4002FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LabelsManager <>4__this;

			[Token(Token = "0x4002FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int id;

			[Token(Token = "0x6002B01")]
			[Address(RVA = "0xF00EDC", Offset = "0xF00EDC", VA = "0xF00EDC")]
			public <>c__DisplayClass67_0()
			{
			}

			[Token(Token = "0x6002B02")]
			[Address(RVA = "0xF01924", Offset = "0xF01924", VA = "0xF01924")]
			internal void <ToggleLabel>b__0()
			{
			}
		}

		[Token(Token = "0x20007A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E5D8", Offset = "0xD0E5D8")]
		private sealed class <>c__DisplayClass71_0
		{
			[Token(Token = "0x4002FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LabelsManager <>4__this;

			[Token(Token = "0x4002FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int labelID;

			[Token(Token = "0x4002FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action completionAction;

			[Token(Token = "0x6002B03")]
			[Address(RVA = "0xF013B0", Offset = "0xF013B0", VA = "0xF013B0")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x6002B04")]
			[Address(RVA = "0xF019C8", Offset = "0xF019C8", VA = "0xF019C8")]
			internal void <HideLabel>b__0()
			{
			}
		}

		[Token(Token = "0x20007A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E5E8", Offset = "0xD0E5E8")]
		private sealed class <>c__DisplayClass79_0
		{
			[Token(Token = "0x4002FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LabelsManager <>4__this;

			[Token(Token = "0x4002FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LabelData data;

			[Token(Token = "0x6002B05")]
			[Address(RVA = "0xF01460", Offset = "0xF01460", VA = "0xF01460")]
			public <>c__DisplayClass79_0()
			{
			}

			[Token(Token = "0x6002B06")]
			[Address(RVA = "0xF01A5C", Offset = "0xF01A5C", VA = "0xF01A5C")]
			internal void <LabelDataForAnchor>b__0()
			{
			}
		}

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Selectable[] disableWhileCameraMovement;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToggleGroup modesToggleGroup;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Toggle dotsModeToggle;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Toggle listModeToggle;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Toggle labelsToggle;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button quizButton;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle quizToggle;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle latinToggle;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LabelsToggleZonesHandler toggleZonesHandler;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LocalizedString localizeEventListener;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool launchLabelsOnStart;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool keepListActive;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1A3A4", Offset = "0xD1A3A4")]
		public string sceneName;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int labelsPresentLimit;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int labelsInPanelPresentLimit;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool labelsAreActive;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LabelsPresenterProtocol labelsPresenter;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LabelsViewPositionerProtocol viewPositioner;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LabelsList_Desktop labelsListView;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<LabelAnchor> labelsAnchors;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LabelsToggleZonesHandler[] toggleZonesHandlers;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ZoneManagerBase _zoneManager;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string currentLocale;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private DynamicPanelsPositionControl panelsPositionControl;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<int> currentLabelsPresented;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<int, LabelData> labelsList;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> labelsSetActiveCallback;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<LabelsPresentMode> labelsModeChangedCallback;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool LatinTranslationEnabled;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Action<int, string> quizListSelectionAction;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private LabelsPresentMode _currentPresentationMode;

		[Token(Token = "0x4002065")]
		private const string PrefsLatinEnabled = "Labels_EnableLatin";

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int controlsActivityCounter;

		[Token(Token = "0x1700018A")]
		private ZoneManagerBase zoneManager
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xEFDC40", Offset = "0xEFDC40", VA = "0xEFDC40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private TofuPadController tofuPadController
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xEFDCF4", Offset = "0xEFDCF4", VA = "0xEFDCF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private LabelsPresentMode currentPresentationMode
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xEFDDA8", Offset = "0xEFDDA8", VA = "0xEFDDA8")]
			get
			{
				return default(LabelsPresentMode);
			}
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xEFDDB0", Offset = "0xEFDDB0", VA = "0xEFDDB0")]
			set
			{
			}
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xEFDC34", Offset = "0xEFDC34", VA = "0xEFDC34")]
		public void SetListAlwaysActive(bool value)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xEFDE50", Offset = "0xEFDE50", VA = "0xEFDE50")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xEFE900", Offset = "0xEFE900", VA = "0xEFE900")]
		private void Start()
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xEFEBBC", Offset = "0xEFEBBC", VA = "0xEFEBBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xEFEB4C", Offset = "0xEFEB4C", VA = "0xEFEB4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24C78", Offset = "0xD24C78")]
		private IEnumerator DelayedLabelsOn()
		{
			return null;
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xEFECB4", Offset = "0xEFECB4", VA = "0xEFECB4")]
		private void OnLocaleChanged(string someString)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xEFEED8", Offset = "0xEFEED8", VA = "0xEFEED8")]
		public bool IsListModeActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xEFEEE8", Offset = "0xEFEEE8", VA = "0xEFEEE8")]
		public bool IsQuizModeActive()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xEFEEF8", Offset = "0xEFEEF8", VA = "0xEFEEF8")]
		public void OnLatinTranslationsToggle(bool value)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xEFF010", Offset = "0xEFF010", VA = "0xEFF010")]
		public void OnDotsModeToggle(bool value)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xEFF74C", Offset = "0xEFF74C", VA = "0xEFF74C")]
		public void OnAllModeToggle(bool value)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xEFFA8C", Offset = "0xEFFA8C", VA = "0xEFFA8C")]
		public void OnListModeToggle(bool value)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xEFFBB4", Offset = "0xEFFBB4", VA = "0xEFFBB4")]
		public void SetQuizModeActive(bool value)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xEFFD34", Offset = "0xEFFD34", VA = "0xEFFD34")]
		public void SetLabelDotVisible(int id, bool value)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xF00118", Offset = "0xF00118", VA = "0xF00118")]
		public void SetLabelsActive(bool value)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xEFF1F8", Offset = "0xEFF1F8", VA = "0xEFF1F8")]
		public void SetAllLabelsOn(bool value)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xF00574", Offset = "0xF00574", VA = "0xF00574")]
		public void OnLabelSelectedFromList(int id, bool value)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xF00864", Offset = "0xF00864", VA = "0xF00864")]
		private void UpdateStateForSelectedLabel(int id)
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xF00CE0", Offset = "0xF00CE0", VA = "0xF00CE0")]
		public void OnAnchorClicked(int labelID)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xF00E30", Offset = "0xF00E30", VA = "0xF00E30")]
		public void SetMarkerAndListEntryHighlight(int id, Color color)
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xF00E48", Offset = "0xF00E48", VA = "0xF00E48")]
		public void RestoreListEntryHighlight(int id)
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xF00E60", Offset = "0xF00E60", VA = "0xF00E60")]
		public void SetListInfoIconsHidden(bool value)
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xF00E7C", Offset = "0xF00E7C", VA = "0xF00E7C")]
		public void ClearListSelection()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xF00E94", Offset = "0xF00E94", VA = "0xF00E94")]
		public void SetListInteractable(bool value)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xF00EB0", Offset = "0xF00EB0", VA = "0xF00EB0")]
		public void SetListHighlightActive(bool value)
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xF006DC", Offset = "0xF006DC", VA = "0xF006DC")]
		private void ToggleLabel(int id, bool autoShowInfo = false)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xF011E0", Offset = "0xF011E0", VA = "0xF011E0")]
		public void OnAnchorVisibilityChanged(LabelAnchor labelAnchor)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xF013A8", Offset = "0xF013A8", VA = "0xF013A8")]
		public LabelsPresentMode GetLabelsPresentMode()
		{
			return default(LabelsPresentMode);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xF00EE4", Offset = "0xF00EE4", VA = "0xF00EE4")]
		private void ShowLabel(LabelData labelData, bool withInfoActive = false)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xF0100C", Offset = "0xF0100C", VA = "0xF0100C")]
		private void HideLabel(int labelID, [Optional] Action completionAction)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xF00354", Offset = "0xF00354", VA = "0xF00354")]
		public void ShowAllVisibleLabels()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xF013B8", Offset = "0xF013B8", VA = "0xF013B8")]
		public void HideAllLabels()
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xEFF884", Offset = "0xEFF884", VA = "0xEFF884")]
		private void ShowMarkersForAllActiveAnchors([Optional] Action completionAction)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xEFF318", Offset = "0xEFF318", VA = "0xEFF318")]
		private void SetListPanelActive(bool value)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xF011B4", Offset = "0xF011B4", VA = "0xF011B4")]
		private void SetListEntrySelected(int id, bool value)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xEFF37C", Offset = "0xEFF37C", VA = "0xEFF37C")]
		private void ResetAllLabelsLastState()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xEFF45C", Offset = "0xEFF45C", VA = "0xEFF45C")]
		public void SetControlsInteractable(bool value)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xEFE5A0", Offset = "0xEFE5A0", VA = "0xEFE5A0")]
		private LabelData LabelDataForAnchor(LabelAnchor anchor)
		{
			return null;
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xEFEE44", Offset = "0xEFEE44", VA = "0xEFEE44")]
		private void UpdateLocalizedData(LabelData data)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xF00B58", Offset = "0xF00B58", VA = "0xF00B58")]
		private int GetTargetLabelZone(int id)
		{
			return default(int);
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xEFFF5C", Offset = "0xEFFF5C", VA = "0xEFFF5C")]
		private int GetTargetPadZone(int id)
		{
			return default(int);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xF01468", Offset = "0xF01468", VA = "0xF01468")]
		public LabelsManager()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xF01568", Offset = "0xF01568", VA = "0xF01568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24CDC", Offset = "0xD24CDC")]
		private void <OnDotsModeToggle>b__51_0()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xF015A0", Offset = "0xF015A0", VA = "0xF015A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24CEC", Offset = "0xD24CEC")]
		private void <OnAllModeToggle>b__52_0()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xF015A4", Offset = "0xF015A4", VA = "0xF015A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD24CFC", Offset = "0xD24CFC")]
		private void <SetAllLabelsOn>b__57_0()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class LabelsSliderHelper : MonoBehaviour
	{
		[Token(Token = "0x20007AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E5F8", Offset = "0xD0E5F8")]
		private sealed class <SetSelectorsActive>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool value;

			[Token(Token = "0x4002FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LabelsSliderHelper <>4__this;

			[Token(Token = "0x17000353")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B0A")]
				[Address(RVA = "0x22A37D4", Offset = "0x22A37D4", VA = "0x22A37D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000354")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B0C")]
				[Address(RVA = "0x22A383C", Offset = "0x22A383C", VA = "0x22A383C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x22A35F0", Offset = "0x22A35F0", VA = "0x22A35F0")]
			[DebuggerHidden]
			public <SetSelectorsActive>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002B08")]
			[Address(RVA = "0x22A3694", Offset = "0x22A3694", VA = "0x22A3694", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B09")]
			[Address(RVA = "0x22A3698", Offset = "0x22A3698", VA = "0x22A3698", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x22A37DC", Offset = "0x22A37DC", VA = "0x22A37DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle labelsToggle;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider[] dependentSliders;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool listenToSliders;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool listenToToggle;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BasicSelector[] basicSelectors;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Collider> selectorsColliders;

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x22A3188", Offset = "0x22A3188", VA = "0x22A3188")]
		private void Start()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x22A33EC", Offset = "0x22A33EC", VA = "0x22A33EC")]
		public void OnLabelsToggle(bool value)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x22A35A0", Offset = "0x22A35A0", VA = "0x22A35A0")]
		public void OnSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x22A351C", Offset = "0x22A351C", VA = "0x22A351C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24D0C", Offset = "0xD24D0C")]
		private IEnumerator SetSelectorsActive(bool value)
		{
			return null;
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x22A361C", Offset = "0x22A361C", VA = "0x22A361C")]
		public LabelsSliderHelper()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class LabelsToggleZonesHandler : MonoBehaviour
	{
		[Token(Token = "0x20007AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E608", Offset = "0xD0E608")]
		private sealed class <WaitForTransitionEnds>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LabelsToggleZonesHandler <>4__this;

			[Token(Token = "0x4002FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action completionAction;

			[Token(Token = "0x17000355")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B10")]
				[Address(RVA = "0x22A3D30", Offset = "0x22A3D30", VA = "0x22A3D30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000356")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B12")]
				[Address(RVA = "0x22A3D98", Offset = "0x22A3D98", VA = "0x22A3D98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0x22A3A88", Offset = "0x22A3A88", VA = "0x22A3A88")]
			[DebuggerHidden]
			public <WaitForTransitionEnds>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0x22A3C2C", Offset = "0x22A3C2C", VA = "0x22A3C2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0x22A3C30", Offset = "0x22A3C30", VA = "0x22A3C30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B11")]
			[Address(RVA = "0x22A3D38", Offset = "0x22A3D38", VA = "0x22A3D38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] toggleZoneIndex;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle zoneToggle;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool allowedInQuiz;

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x22A3844", Offset = "0x22A3844", VA = "0x22A3844")]
		public void SetToggleZoneActive(bool value, Action completionAction)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x22A3A0C", Offset = "0x22A3A0C", VA = "0x22A3A0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24D70", Offset = "0xD24D70")]
		public IEnumerator WaitForTransitionEnds(Action completionAction)
		{
			return null;
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x22A3AB4", Offset = "0x22A3AB4", VA = "0x22A3AB4")]
		public bool CanHandleZone(int zoneIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x22A3B8C", Offset = "0x22A3B8C", VA = "0x22A3B8C")]
		public bool ToggleIsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x22A3C24", Offset = "0x22A3C24", VA = "0x22A3C24")]
		public LabelsToggleZonesHandler()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class LabelsVisibilityUtility : MonoBehaviour
	{
		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LabelsVisibilityUtility Instance;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<LabelMeshPair> labelMeshPairs;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TofuPadController pad;

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x22A3DA0", Offset = "0x22A3DA0", VA = "0x22A3DA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x22A3E38", Offset = "0x22A3E38", VA = "0x22A3E38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x22A3EE4", Offset = "0x22A3EE4", VA = "0x22A3EE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x22A3F90", Offset = "0x22A3F90", VA = "0x22A3F90")]
		private void OnPadMoved(Vector2 pos)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x22A4100", Offset = "0x22A4100", VA = "0x22A4100")]
		internal void ShowMeshForLabel(int labelId)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x22A3F94", Offset = "0x22A3F94", VA = "0x22A3F94")]
		internal void RevealAll()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x22A4294", Offset = "0x22A4294", VA = "0x22A4294")]
		public LabelsVisibilityUtility()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000427")]
	public class LabelMeshPair
	{
		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LabelAnchor label;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] meshes;

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xEFB2A0", Offset = "0xEFB2A0", VA = "0xEFB2A0")]
		public LabelMeshPair()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class MovieCaptureController : MonoBehaviour
	{
		[Token(Token = "0x20007AC")]
		private enum RecState
		{
			[Token(Token = "0x4002FC0")]
			Stopped,
			[Token(Token = "0x4002FC1")]
			Recording,
			[Token(Token = "0x4002FC2")]
			Paused
		}

		[Token(Token = "0x20007AD")]
		public delegate void Callback();

		[Token(Token = "0x20007AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E618", Offset = "0xD0E618")]
		private sealed class <WaitAndSave>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000357")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B1A")]
				[Address(RVA = "0x22ADB8C", Offset = "0x22ADB8C", VA = "0x22ADB8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000358")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B1C")]
				[Address(RVA = "0x22ADBF4", Offset = "0x22ADBF4", VA = "0x22ADBF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B17")]
			[Address(RVA = "0x22AC4B0", Offset = "0x22AC4B0", VA = "0x22AC4B0")]
			[DebuggerHidden]
			public <WaitAndSave>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6002B18")]
			[Address(RVA = "0x22ADB54", Offset = "0x22ADB54", VA = "0x22ADB54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B19")]
			[Address(RVA = "0x22ADB58", Offset = "0x22ADB58", VA = "0x22ADB58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0x22ADB94", Offset = "0x22ADB94", VA = "0x22ADB94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E628", Offset = "0xD0E628")]
		private sealed class <RescanCameras>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MovieCaptureController <>4__this;

			[Token(Token = "0x17000359")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B20")]
				[Address(RVA = "0x22ADAE4", Offset = "0x22ADAE4", VA = "0x22ADAE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B22")]
				[Address(RVA = "0x22ADB4C", Offset = "0x22ADB4C", VA = "0x22ADB4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0x22AD2F0", Offset = "0x22AD2F0", VA = "0x22AD2F0")]
			[DebuggerHidden]
			public <RescanCameras>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0x22AD97C", Offset = "0x22AD97C", VA = "0x22AD97C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0x22AD980", Offset = "0x22AD980", VA = "0x22AD980", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B21")]
			[Address(RVA = "0x22ADAEC", Offset = "0x22ADAEC", VA = "0x22ADAEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool captureWithUI;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool captureWithoutUIActive;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action onCaptureStarted;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action onCaptureFinished;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string[] downScalePickerStrings;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly float[] downScaleRatios;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] downScaleResolutions;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] defaultAudioSources;

		[Token(Token = "0x400207D")]
		private const int appAudioSourceIndex = 1;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] inputAudioSources;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> allSources;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A40C", Offset = "0xD1A40C")]
		[SerializeField]
		private GameObject cameraCapturePrefab;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject screenCapturePrefab;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform brandingUI;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CaptureSavedPopup savedPopup;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MovieCapture_MouseCursorManager mouseCursorManager;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject copyrightWatermark;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1A4A8", Offset = "0xD1A4A8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A4A8", Offset = "0xD1A4A8")]
		[SerializeField]
		private Button recButton;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Button pauseButton;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button stopButton;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle capturePanelToggle;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle captureSettingsToggle;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Toggle leftbarSettingsToggle;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Toggle UIVisibleYesToggle;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle UIVisibleNoToggle;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private TofuToggleColorController UIVisibleYesToggleColor;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private TofuToggleColorController UIVisibleNoToggleColor;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private TMP_Dropdown audioSourcePicker;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private TMP_Dropdown downScalePicker;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TextMeshProUGUI notRecordingText;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private TextMeshProUGUI recordingText;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private TextMeshProUGUI pausedText;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private TextMeshProUGUI timerText;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject recButtonRedHighlight;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject lowDiskSpaceWarning;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject accessWarningPanel;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject foldersOpenPanel;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private CaptureBase captureScript;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private UnityAudioCapture audioCapture;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private AudioListener captureAudioListener;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AudioListener sceneAudioListener;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int audioSourceIndex;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int captureDownScaleIndex;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private QualityController qualityController;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Resolution originalResolution;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Transform initialBrandingParent;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int initialBrandingSiblingIndex;

		[Token(Token = "0x40020A4")]
		private const string prefsUIKey = "Capture_ui_is_visible";

		[Token(Token = "0x40020A5")]
		private const string prefsAudioKey = "Capture_audio_source";

		[Token(Token = "0x40020A6")]
		private const string prefsSownScaleKey = "Capture_down_scale";

		[Token(Token = "0x40020A7")]
		private const string prefsCapturePanelActive = "Capture_panel_active";

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int minimumDiskSpaceMB;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private long minimumDiskSpaceBytes;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int freeSpaceCheckInterval;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float lastCkeckTime;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private DriveInfo driveInfo;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int authorizationCheckIntervalFrames;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private bool userPicksSavePath;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		private bool pickersAreFilled;

		[Token(Token = "0x40020B0")]
		public const string iosDefaultAlbumName = "Sharecare";

		[Token(Token = "0x40020B1")]
		public const string iosSavedToGalleryText = "Video saved to your gallery.";

		[Token(Token = "0x40020B2")]
		public const string iosSavedToDocsText = "Video saved to application documents.";

		[Token(Token = "0x1700018D")]
		private static string subFolder
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0x22AAE64", Offset = "0x22AAE64", VA = "0x22AAE64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x22AAE6C", Offset = "0x22AAE6C", VA = "0x22AAE6C")]
		private void Start()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x22AB6D0", Offset = "0x22AB6D0", VA = "0x22AB6D0")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x22AB6D8", Offset = "0x22AB6D8", VA = "0x22AB6D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x22AB7CC", Offset = "0x22AB7CC", VA = "0x22AB7CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x22ABA90", Offset = "0x22ABA90", VA = "0x22ABA90")]
		public void OnRecButton()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x22ABCB8", Offset = "0x22ABCB8", VA = "0x22ABCB8")]
		public void OnRecPauseButton()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x22AC11C", Offset = "0x22AC11C", VA = "0x22AC11C")]
		public void OnRecStopButton()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x22AC450", Offset = "0x22AC450", VA = "0x22AC450")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24DD4", Offset = "0xD24DD4")]
		private IEnumerator WaitAndSave(string file)
		{
			return null;
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x22ABA94", Offset = "0x22ABA94", VA = "0x22ABA94")]
		private void StartRecord()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x22AC830", Offset = "0x22AC830", VA = "0x22AC830")]
		public void SetUIVisibleOnRecord(bool value)
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x22AC95C", Offset = "0x22AC95C", VA = "0x22AC95C")]
		public void OnAudioSourcePicker(int value)
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x22AC964", Offset = "0x22AC964", VA = "0x22AC964")]
		public void OnDownScalePicker(int value)
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x22AC96C", Offset = "0x22AC96C", VA = "0x22AC96C")]
		public void OnCapturePanelToggle(bool value)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x22AC9E8", Offset = "0x22AC9E8", VA = "0x22AC9E8")]
		public void OnCaptureSettingsToggle(bool value)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x22AD134", Offset = "0x22AD134", VA = "0x22AD134")]
		public void OnMicrophoneAccessSettingsButton()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x22AD138", Offset = "0x22AD138", VA = "0x22AD138")]
		public void OnResolutionChangedInSettings(Resolution resolution)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x22AD164", Offset = "0x22AD164", VA = "0x22AD164")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x22AC44C", Offset = "0x22AC44C", VA = "0x22AC44C")]
		private void ShowSavePathPicker(string capturedFilePath)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x22ABCF0", Offset = "0x22ABCF0", VA = "0x22ABCF0")]
		private void AdjustUIForState(RecState state)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x22AB968", Offset = "0x22AB968", VA = "0x22AB968")]
		private void UpdateTimerText()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x22ABA8C", Offset = "0x22ABA8C", VA = "0x22ABA8C")]
		private void CheckFreeSpace()
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x22AC4DC", Offset = "0x22AC4DC", VA = "0x22AC4DC")]
		private void CheckForCaptureScript(bool createIfNotFound)
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x22AB59C", Offset = "0x22AB59C", VA = "0x22AB59C")]
		private void CheckForActiveCapture()
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x22AD280", Offset = "0x22AD280", VA = "0x22AD280")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24E38", Offset = "0xD24E38")]
		private IEnumerator RescanCameras()
		{
			return null;
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x22AD1C4", Offset = "0x22AD1C4", VA = "0x22AD1C4")]
		private void SetCaptureSavePath()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x22AB460", Offset = "0x22AB460", VA = "0x22AB460")]
		private void LoadSettings()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x22AC8B0", Offset = "0x22AC8B0", VA = "0x22AC8B0")]
		private void SaveSettings()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x22ACB44", Offset = "0x22ACB44", VA = "0x22ACB44")]
		private void FillAudioSourcePicker()
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x22ACDF4", Offset = "0x22ACDF4", VA = "0x22ACDF4")]
		private void FillDownScalePicker()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x22AB0D0", Offset = "0x22AB0D0", VA = "0x22AB0D0")]
		private void FindSceneAudioListener()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x22AC6F8", Offset = "0x22AC6F8", VA = "0x22AC6F8")]
		private void SetMouseCursorActive(bool value)
		{
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x22AD31C", Offset = "0x22AD31C", VA = "0x22AD31C")]
		private Texture2D TextureFromSprite(Sprite sprite)
		{
			return null;
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0x22AB830", Offset = "0x22AB830", VA = "0x22AB830")]
		private bool IsRecordSessionActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0x22AB8D4", Offset = "0x22AB8D4", VA = "0x22AB8D4")]
		private bool IsRecordPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0x22AD56C", Offset = "0x22AD56C", VA = "0x22AD56C")]
		private void FallbackToAppAudioSource()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x22AB6D4", Offset = "0x22AB6D4", VA = "0x22AB6D4")]
		private void VerifyAudioSourceAccess()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x22AC308", Offset = "0x22AC308", VA = "0x22AC308")]
		private void MoveBrandingUIToCaptureCanvas(bool value)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x22AC6F0", Offset = "0x22AC6F0", VA = "0x22AC6F0")]
		private bool IsEnoughDiskSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x22AB22C", Offset = "0x22AB22C", VA = "0x22AB22C")]
		private void CalculateDownScaleResolutions()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x22AD618", Offset = "0x22AD618", VA = "0x22AD618")]
		private CaptureBase.DownScale GetDownScaleFromIndex(int index)
		{
			return default(CaptureBase.DownScale);
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x22AD60C", Offset = "0x22AD60C", VA = "0x22AD60C")]
		private int NextMultipleOf4(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x22AD63C", Offset = "0x22AD63C", VA = "0x22AD63C")]
		public static string GetCapturesSavePath()
		{
			return null;
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x22AD6E4", Offset = "0x22AD6E4", VA = "0x22AD6E4")]
		public MovieCaptureController()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class OpenCaptureFolders : MonoBehaviour
	{
		[Token(Token = "0x6001949")]
		[Address(RVA = "0x22ADE6C", Offset = "0x22ADE6C", VA = "0x22ADE6C")]
		public void OpenVideoCapturesFolder()
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x22ADF88", Offset = "0x22ADF88", VA = "0x22ADF88")]
		public void OpenScreenshotsFolder()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x22AE05C", Offset = "0x22AE05C", VA = "0x22AE05C")]
		public OpenCaptureFolders()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class LocalizedStringsHelper : MonoBehaviour
	{
		[Token(Token = "0x20007B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E638", Offset = "0xD0E638")]
		private sealed class <LoadDefaultTable>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizedStringsHelper <>4__this;

			[Token(Token = "0x4002FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onCompleted;

			[Token(Token = "0x4002FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperationHandle<StringTable> <tableLoading>5__2;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B26")]
				[Address(RVA = "0x22A9DD8", Offset = "0x22A9DD8", VA = "0x22A9DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B28")]
				[Address(RVA = "0x22A9E40", Offset = "0x22A9E40", VA = "0x22A9E40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x22A9C70", Offset = "0x22A9C70", VA = "0x22A9C70")]
			[DebuggerHidden]
			public <LoadDefaultTable>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002B24")]
			[Address(RVA = "0x22A9CC0", Offset = "0x22A9CC0", VA = "0x22A9CC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B25")]
			[Address(RVA = "0x22A9CC4", Offset = "0x22A9CC4", VA = "0x22A9CC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B27")]
			[Address(RVA = "0x22A9DE0", Offset = "0x22A9DE0", VA = "0x22A9DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LocalizedStringsHelper _instance;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onTableDidChange;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isReady;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizedStringTable _localizedStringTable;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringTable _currentStringTable;

		[Token(Token = "0x40020B8")]
		private const string defaultStringsTableName = "ScriptStringsLocalization";

		[Token(Token = "0x40020B9")]
		private const string stringNotFoundValue = "NO LOCALIZED STRING FOUND";

		[Token(Token = "0x1700018E")]
		public static LocalizedStringsHelper Instance
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0x22A9664", Offset = "0x22A9664", VA = "0x22A9664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x22A9740", Offset = "0x22A9740", VA = "0x22A9740")]
		private void Awake()
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x22A9A50", Offset = "0x22A9A50", VA = "0x22A9A50")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x22A9B78", Offset = "0x22A9B78", VA = "0x22A9B78")]
		public string GetLocalizedStringForKey(string localizationKey)
		{
			return null;
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x22A99D4", Offset = "0x22A99D4", VA = "0x22A99D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24E9C", Offset = "0xD24E9C")]
		private IEnumerator LoadDefaultTable([Optional] Action onCompleted)
		{
			return null;
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x22A9C9C", Offset = "0x22A9C9C", VA = "0x22A9C9C")]
		private void OnTableChanged(StringTable table)
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x22A9CB8", Offset = "0x22A9CB8", VA = "0x22A9CB8")]
		public LocalizedStringsHelper()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class BreastCancer_2DSpotsTo3DObjects : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007B1")]
		public class TumorObject
		{
			[Token(Token = "0x4002FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4002FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BreastCancer_TumorsPlacingController.tumorType type;

			[Token(Token = "0x4002FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BreastCancer_TumorsPlacingController.placeholderPosition placeholderPosition;

			[Token(Token = "0x4002FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject GO;

			[Token(Token = "0x6002B29")]
			[Address(RVA = "0xF1BF04", Offset = "0xF1BF04", VA = "0xF1BF04")]
			public TumorObject()
			{
			}
		}

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshCollider fatMeshCollider;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshCollider fatCapMeshCollider;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<TumorObject> tumorsInstances;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject t4dEffector;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject zeroPoint;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject xAxis;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject yAxis;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject zAxis;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform marker;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform markerLocalZBackward;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform markerLocalZForward;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform backPlaneCenterPoint;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public LayerMask depthCheckMask;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float xSize;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float ySize;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float zSize;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<BreastCancer_TumorsPlacingController.tumorType, List<GameObject>> activeFloatingSpots;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<BreastCancer_TumorsPlacingController.tumorType, List<GameObject>> inactiveFloatingSpots;

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xF1A1AC", Offset = "0xF1A1AC", VA = "0xF1A1AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xF1A36C", Offset = "0xF1A36C", VA = "0xF1A36C")]
		public void UpdateObjects(List<BreastCancer_TumorsPlacingController.DragableSpot> spots)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xF1A6DC", Offset = "0xF1A6DC", VA = "0xF1A6DC")]
		private void DisableAllTumors()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xF1B09C", Offset = "0xF1B09C", VA = "0xF1B09C")]
		private GameObject GetInactiveFloatingTumorForSpot(BreastCancer_TumorsPlacingController.DragableSpot spot)
		{
			return null;
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xF1ACFC", Offset = "0xF1ACFC", VA = "0xF1ACFC")]
		public GameObject GetTumorForSpot(BreastCancer_TumorsPlacingController.DragableSpot spot)
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xF1B3A0", Offset = "0xF1B3A0", VA = "0xF1B3A0")]
		private Vector3 CalculateTumorPositionForSpot(BreastCancer_TumorsPlacingController.DragableSpot spot, GameObject GO)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xF1B644", Offset = "0xF1B644", VA = "0xF1B644")]
		private void CalculateZOffset(GameObject GO)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xF1BA40", Offset = "0xF1BA40", VA = "0xF1BA40")]
		private void CalculateCenterOffset(GameObject GO)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xF1AF08", Offset = "0xF1AF08", VA = "0xF1AF08")]
		private Vector3 GetT4DEffectorPosition(BreastCancer_TumorsPlacingController.DragableSpot spot)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xF1BE74", Offset = "0xF1BE74", VA = "0xF1BE74")]
		public BreastCancer_2DSpotsTo3DObjects()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class BreastCancer_2DTumorSpot : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public BreastCancer_TumorsPlacingController placingController;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpringJoint2D springJoint;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SliderJoint2D sliderJoint;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DistanceJoint2D distanceJoint;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform spotImage;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject pointerImage;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RectTransform mainRect;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RectTransform jointRect;

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xF1BF0C", Offset = "0xF1BF0C", VA = "0xF1BF0C", Slot = "4")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xF1C014", Offset = "0xF1C014", VA = "0xF1C014", Slot = "5")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xF1C11C", Offset = "0xF1C11C", VA = "0xF1C11C", Slot = "6")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xF1C224", Offset = "0xF1C224", VA = "0xF1C224")]
		public BreastCancer_2DTumorSpot()
		{
		}
	}
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0BCA0", Offset = "0xD0BCA0")]
	public class BreastCancer_Lymphnode : MonoBehaviour
	{
		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform myCullSphere;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public int hashID;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public BreastCancer_LymphnodesControl nodesControl;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 sphereFullScale;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 sphereHiddenScale;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image[] selectionImages;

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xF1C22C", Offset = "0xF1C22C", VA = "0xF1C22C")]
		public void OnValueCanged(bool value)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xF1C4CC", Offset = "0xF1C4CC", VA = "0xF1C4CC")]
		public void ResizeSphere()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xF1C518", Offset = "0xF1C518", VA = "0xF1C518")]
		public void InitImages()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xF1C574", Offset = "0xF1C574", VA = "0xF1C574")]
		public BreastCancer_Lymphnode()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class BreastCancer_LymphnodesControl : MonoBehaviour
	{
		[Token(Token = "0x20007B2")]
		public enum stages
		{
			[Token(Token = "0x4002FD2")]
			NO,
			[Token(Token = "0x4002FD3")]
			N1,
			[Token(Token = "0x4002FD4")]
			N2,
			[Token(Token = "0x4002FD5")]
			N3a,
			[Token(Token = "0x4002FD6")]
			N3b,
			[Token(Token = "0x4002FD7")]
			N3c
		}

		[Token(Token = "0x20007B3")]
		public enum groups
		{
			[Token(Token = "0x4002FD9")]
			Axillary1,
			[Token(Token = "0x4002FDA")]
			Axillary2,
			[Token(Token = "0x4002FDB")]
			Axillary3,
			[Token(Token = "0x4002FDC")]
			Supraclavicular,
			[Token(Token = "0x4002FDD")]
			InternalMammary
		}

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform[] UIObjectsToHide;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BreastCancer_TumorsPlacingController placingController;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject breastModelRoot;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject lymphnodesSelectionRoot;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI nodesStagingText;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button metsButton;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A654", Offset = "0xD1A654")]
		public int padRevealZone;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public stages lymphnodesStage;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int N1NodesCount;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TofuPadController padController;

		[Token(Token = "0x40020E4")]
		private const int UI_PARKINGDISTANCE = 10000;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool loadingPreset;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private InfoBoxController _infobox;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<groups, List<Toggle>> activeToggles;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string nodesSaveVarName;

		[Token(Token = "0x1700018F")]
		private InfoBoxController infoBox
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0xF1C5D8", Offset = "0xF1C5D8", VA = "0xF1C5D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xF1C68C", Offset = "0xF1C68C", VA = "0xF1C68C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xF1CA58", Offset = "0xF1CA58", VA = "0xF1CA58")]
		public void LymphnodeCustomizingButton()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xF1CB40", Offset = "0xF1CB40", VA = "0xF1CB40")]
		public void DoneButton()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xF1D040", Offset = "0xF1D040", VA = "0xF1D040")]
		public void GlobalCancerReset()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xF1D0EC", Offset = "0xF1D0EC", VA = "0xF1D0EC")]
		public void ResetNodes()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xF1C378", Offset = "0xF1C378", VA = "0xF1C378")]
		public void LymphnodeSelected(Toggle sender)
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xF1CCA0", Offset = "0xF1CCA0", VA = "0xF1CCA0")]
		private void UpdateStage()
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xF1CFA4", Offset = "0xF1CFA4", VA = "0xF1CFA4")]
		private void SaveState()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xF1D36C", Offset = "0xF1D36C", VA = "0xF1D36C")]
		public void SaveStateToPreset(BreastCancer_TumorsPlacingController.presetStages preset)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xF1C998", Offset = "0xF1C998", VA = "0xF1C998")]
		private void LoadState()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xF1D528", Offset = "0xF1D528", VA = "0xF1D528")]
		public void LoadStateFromPreset(BreastCancer_TumorsPlacingController.presetStages preset)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xF1D430", Offset = "0xF1D430", VA = "0xF1D430")]
		private void SelectSavedIDs(List<int> savedIDs)
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xF1D238", Offset = "0xF1D238", VA = "0xF1D238")]
		private List<int> GetSelectedIDs()
		{
			return null;
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xF1D660", Offset = "0xF1D660", VA = "0xF1D660")]
		private Toggle GetToggleByID(int id)
		{
			return null;
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xF1D718", Offset = "0xF1D718", VA = "0xF1D718")]
		public BreastCancer_LymphnodesControl()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class BreastCancer_LymphnodesGroup : MonoBehaviour
	{
		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BreastCancer_LymphnodesControl.groups type;

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xF1D7A0", Offset = "0xF1D7A0", VA = "0xF1D7A0")]
		public BreastCancer_LymphnodesGroup()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class BreastCancer_MetsTogglesControl : MonoBehaviour
	{
		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle[] metsToggles;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BreastCancer_TumorsPlacingController tumorControl;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject metsSelectionUI;

		[Token(Token = "0x40020ED")]
		private const string MetsSaveVarName = "selectedMets";

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InfoBoxController _infobox;

		[Token(Token = "0x17000190")]
		private InfoBoxController infoBox
		{
			[Token(Token = "0x6001976")]
			[Address(RVA = "0xF1D7A8", Offset = "0xF1D7A8", VA = "0xF1D7A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xF1D85C", Offset = "0xF1D85C", VA = "0xF1D85C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xF1D928", Offset = "0xF1D928", VA = "0xF1D928")]
		public void SetSelectionUIActive(bool value)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xF1D974", Offset = "0xF1D974", VA = "0xF1D974")]
		public void OnMetToggle(bool value)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xF1DB58", Offset = "0xF1DB58", VA = "0xF1DB58")]
		public void OnDoneButton()
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xF1DB60", Offset = "0xF1DB60", VA = "0xF1DB60")]
		public void OnResetButton()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xF1DAB8", Offset = "0xF1DAB8", VA = "0xF1DAB8")]
		private void SaveState()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xF1D860", Offset = "0xF1D860", VA = "0xF1D860")]
		private void LoadState()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xF1DA34", Offset = "0xF1DA34", VA = "0xF1DA34")]
		private void UpdateStage()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xF1DD58", Offset = "0xF1DD58", VA = "0xF1DD58")]
		private void SelectSavedIDs(List<int> savedIDs)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xF1DC60", Offset = "0xF1DC60", VA = "0xF1DC60")]
		private List<int> GetSelectedIDs()
		{
			return null;
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xF1DE9C", Offset = "0xF1DE9C", VA = "0xF1DE9C")]
		public BreastCancer_MetsTogglesControl()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class BreastCancer_PresetButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerExitHandler
	{
		[Token(Token = "0x20007B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E648", Offset = "0xD0E648")]
		private sealed class <SavePreset>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BreastCancer_PresetButton <>4__this;

			[Token(Token = "0x1700035D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B2D")]
				[Address(RVA = "0xF1E37C", Offset = "0xF1E37C", VA = "0xF1E37C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B2F")]
				[Address(RVA = "0xF1E3E4", Offset = "0xF1E3E4", VA = "0xF1E3E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0xF1E00C", Offset = "0xF1E00C", VA = "0xF1E00C")]
			[DebuggerHidden]
			public <SavePreset>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0xF1E20C", Offset = "0xF1E20C", VA = "0xF1E20C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0xF1E210", Offset = "0xF1E210", VA = "0xF1E210", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0xF1E384", Offset = "0xF1E384", VA = "0xF1E384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E658", Offset = "0xD0E658")]
		private sealed class <HideText>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BreastCancer_PresetButton <>4__this;

			[Token(Token = "0x1700035F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B33")]
				[Address(RVA = "0xF1E19C", Offset = "0xF1E19C", VA = "0xF1E19C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B35")]
				[Address(RVA = "0xF1E204", Offset = "0xF1E204", VA = "0xF1E204", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B30")]
			[Address(RVA = "0xF1E0A8", Offset = "0xF1E0A8", VA = "0xF1E0A8")]
			[DebuggerHidden]
			public <HideText>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002B31")]
			[Address(RVA = "0xF1E0E4", Offset = "0xF1E0E4", VA = "0xF1E0E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B32")]
			[Address(RVA = "0xF1E0E8", Offset = "0xF1E0E8", VA = "0xF1E0E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B34")]
			[Address(RVA = "0xF1E1A4", Offset = "0xF1E1A4", VA = "0xF1E1A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BreastCancer_TumorsPlacingController.presetStages preset;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BreastCancer_TumorsPlacingController placingController;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BreastCancer_LymphnodesControl nodesController;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BreastCancer_MetsTogglesControl metsController;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool enablePresetSaving;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject savedText;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float delayToSave;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine saveCoroutine;

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xF1DEA4", Offset = "0xF1DEA4", VA = "0xF1DEA4", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xF1DF50", Offset = "0xF1DF50", VA = "0xF1DF50", Slot = "5")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xF1DF80", Offset = "0xF1DF80", VA = "0xF1DF80", Slot = "6")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xF1DF9C", Offset = "0xF1DF9C", VA = "0xF1DF9C")]
		public void OnToggleValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xF1DF6C", Offset = "0xF1DF6C", VA = "0xF1DF6C")]
		private void CancelSaveRoutine()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xF1DEE0", Offset = "0xF1DEE0", VA = "0xF1DEE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24F00", Offset = "0xD24F00")]
		private IEnumerator SavePreset()
		{
			return null;
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xF1E038", Offset = "0xF1E038", VA = "0xF1E038")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24F64", Offset = "0xD24F64")]
		private IEnumerator HideText()
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xF1E0D4", Offset = "0xF1E0D4", VA = "0xF1E0D4")]
		public BreastCancer_PresetButton()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class BreastCancer_SideViewIndicator : MonoBehaviour
	{
		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BreastCancer_TumorsPlacingController.tumorType type;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BreastCancer_TumorsPlacingController.placeholderPosition position;

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xF1E3EC", Offset = "0xF1E3EC", VA = "0xF1E3EC")]
		public BreastCancer_SideViewIndicator()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class BreastCancer_TumorButtonHandler : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
	{
		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BreastCancer_TumorsPlacingController.tumorType tumorType;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 alternateSpotSize;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BreastCancer_TumorsPlacingController placingController;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BreastCancer_TumorsPlacingController.DragableSpot currentSpot;

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xEEEA34", Offset = "0xEEEA34", VA = "0xEEEA34")]
		private void Start()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xEEEA8C", Offset = "0xEEEA8C", VA = "0xEEEA8C", Slot = "4")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xEEF228", Offset = "0xEEF228", VA = "0xEEF228", Slot = "5")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xEEF57C", Offset = "0xEEF57C", VA = "0xEEF57C", Slot = "6")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xEEFD00", Offset = "0xEEFD00", VA = "0xEEFD00")]
		public BreastCancer_TumorButtonHandler()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class BreastCancer_TumorPlaceholder : MonoBehaviour
	{
		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BreastCancer_TumorsPlacingController.placeholderPosition position;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BreastCancer_TumorsPlacingController.tumorType> tumorTypes;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject sideViewIndicator;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int hashID;

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xEEFD74", Offset = "0xEEFD74", VA = "0xEEFD74")]
		public void SideViewIndicatorSetActive(bool value, BreastCancer_TumorsPlacingController.tumorType type)
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xEEFE78", Offset = "0xEEFE78", VA = "0xEEFE78")]
		private void AdjustYPosition(Transform tf)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xEEFEE4", Offset = "0xEEFEE4", VA = "0xEEFEE4")]
		public BreastCancer_TumorPlaceholder()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class BreastCancer_TumorsPlacingController : MonoBehaviour
	{
		[Token(Token = "0x20007B6")]
		public enum tumorType
		{
			[Token(Token = "0x4002FE5")]
			DCIS,
			[Token(Token = "0x4002FE6")]
			LCIS,
			[Token(Token = "0x4002FE7")]
			T1mi,
			[Token(Token = "0x4002FE8")]
			T1a,
			[Token(Token = "0x4002FE9")]
			T1b,
			[Token(Token = "0x4002FEA")]
			T1c,
			[Token(Token = "0x4002FEB")]
			T2,
			[Token(Token = "0x4002FEC")]
			T3,
			[Token(Token = "0x4002FED")]
			T4a,
			[Token(Token = "0x4002FEE")]
			T4b,
			[Token(Token = "0x4002FEF")]
			T4c,
			[Token(Token = "0x4002FF0")]
			T4d
		}

		[Token(Token = "0x20007B7")]
		public enum cancerStages
		{
			[Token(Token = "0x4002FF2")]
			O,
			[Token(Token = "0x4002FF3")]
			IA,
			[Token(Token = "0x4002FF4")]
			IB,
			[Token(Token = "0x4002FF5")]
			IIA,
			[Token(Token = "0x4002FF6")]
			IIB,
			[Token(Token = "0x4002FF7")]
			IIIA,
			[Token(Token = "0x4002FF8")]
			IIIB,
			[Token(Token = "0x4002FF9")]
			IIIC,
			[Token(Token = "0x4002FFA")]
			IV
		}

		[Token(Token = "0x20007B8")]
		public enum TIndex
		{
			[Token(Token = "0x4002FFC")]
			Tis,
			[Token(Token = "0x4002FFD")]
			TO,
			[Token(Token = "0x4002FFE")]
			T1,
			[Token(Token = "0x4002FFF")]
			T2,
			[Token(Token = "0x4003000")]
			T3,
			[Token(Token = "0x4003001")]
			T4
		}

		[Token(Token = "0x20007B9")]
		public enum metsIndex
		{
			[Token(Token = "0x4003003")]
			MO,
			[Token(Token = "0x4003004")]
			M1
		}

		[Token(Token = "0x20007BA")]
		public enum presetStages
		{
			[Token(Token = "0x4003006")]
			IA,
			[Token(Token = "0x4003007")]
			IIA,
			[Token(Token = "0x4003008")]
			IIIA,
			[Token(Token = "0x4003009")]
			IIIB
		}

		[Token(Token = "0x20007BB")]
		public enum placingStage
		{
			[Token(Token = "0x400300B")]
			Initial,
			[Token(Token = "0x400300C")]
			Placing
		}

		[Token(Token = "0x20007BC")]
		public enum placeholderPosition
		{
			[Token(Token = "0x400300E")]
			Undefined,
			[Token(Token = "0x400300F")]
			TopLeft,
			[Token(Token = "0x4003010")]
			TopRight,
			[Token(Token = "0x4003011")]
			BottomLeft,
			[Token(Token = "0x4003012")]
			BottomRight
		}

		[Token(Token = "0x20007BD")]
		public class DragableSpot
		{
			[Token(Token = "0x4003013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform rectTransform;

			[Token(Token = "0x4003014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public tumorType type;

			[Token(Token = "0x4003015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public placingStage stage;

			[Token(Token = "0x4003016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragableSpot myPair;

			[Token(Token = "0x4003017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BreastCancer_2DTumorSpot spotController;

			[Token(Token = "0x4003018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CircleCollider2D circleCollider;

			[Token(Token = "0x4003019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject takenPlaceholder;

			[Token(Token = "0x400301A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector2 spotSize;

			[Token(Token = "0x400301B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int LCISSubPosition;

			[Token(Token = "0x6002B36")]
			[Address(RVA = "0xEF2EDC", Offset = "0xEF2EDC", VA = "0xEF2EDC")]
			public DragableSpot()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007BE")]
		public class DragableSpotSaveData
		{
			[Token(Token = "0x400301C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public tumorType type;

			[Token(Token = "0x400301D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int hashID;

			[Token(Token = "0x400301E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int LCISSubPosition;

			[Token(Token = "0x400301F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float spotWidth;

			[Token(Token = "0x4003020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float spotHeight;

			[Token(Token = "0x4003021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float xPosRatio;

			[Token(Token = "0x4003022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float yPosRatio;

			[Token(Token = "0x4003023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float zPosRatio;

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xEF2E14", Offset = "0xEF2E14", VA = "0xEF2E14")]
			public DragableSpotSaveData()
			{
			}
		}

		[Token(Token = "0x20007BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E668", Offset = "0xD0E668")]
		private sealed class <SnapToFixedPosition>d__92 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BreastCancer_TumorsPlacingController <>4__this;

			[Token(Token = "0x4003027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DragableSpot spot;

			[Token(Token = "0x4003028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <startPos>5__2;

			[Token(Token = "0x4003029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <targetPos>5__3;

			[Token(Token = "0x400302A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private GameObject <placeholder>5__4;

			[Token(Token = "0x400302B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <timeDelta>5__5;

			[Token(Token = "0x17000361")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B3B")]
				[Address(RVA = "0xEF3FBC", Offset = "0xEF3FBC", VA = "0xEF3FBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000362")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B3D")]
				[Address(RVA = "0xEF4024", Offset = "0xEF4024", VA = "0xEF4024", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B38")]
			[Address(RVA = "0xEF3394", Offset = "0xEF3394", VA = "0xEF3394")]
			[DebuggerHidden]
			public <SnapToFixedPosition>d__92(int <>1__state)
			{
			}

			[Token(Token = "0x6002B39")]
			[Address(RVA = "0xEF3AE8", Offset = "0xEF3AE8", VA = "0xEF3AE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0xEF3AEC", Offset = "0xEF3AEC", VA = "0xEF3AEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0xEF3FC4", Offset = "0xEF3FC4", VA = "0xEF3FC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] presetInfoIndex;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle[] togglesToSwitchOff;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool[] togglesStatesToRestore;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool[] togglesShouldRestoreInteractable;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RectTransform[] UIObjectsToHide;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject breastModelRoot;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A6BC", Offset = "0xD1A6BC")]
		public BreastCancer_2DSpotsTo3DObjects tumors3DPlacement;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BreastCancer_LymphnodesControl nodesControl;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BreastCancer_MetsTogglesControl metsControl;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TransformScaler tfScaler;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A6F4", Offset = "0xD1A6F4")]
		public GameObject placingUIRoot;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject spotToSpawn;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject background_16_9;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject background_4_3;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshProUGUI cancerStagingText;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshProUGUI tumorStagingText;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshProUGUI metsStagingText;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Button nodesButton;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Toggle[] emptyPresetsToggle;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A72C", Offset = "0xD1A72C")]
		public Vector2 padRevealPosition;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float pointSnapTime;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public DragableSpot currentDragableSpot;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public cancerStages cancerStage;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public TIndex TStage;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public int metastasisCount;

		[Token(Token = "0x400211A")]
		private const int UI_PARKINGDISTANCE = 10000;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<DragableSpot> existedSpots;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Dictionary<tumorType, GameObject> placeholdersRoots;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private BreastCancer_TumorPlaceholder[] placeholders;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private BoxCollider2D splitScreenCollider;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private EdgeCollider2D sideEdgeCollider;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private PolygonCollider2D sidePolyCollider;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private PolygonCollider2D frontPolyCollider;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private RectTransform frontViewSpotSpawnPoint;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RectTransform sideViewSpotSpawnPoint;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RectTransform frontViewRectTransform;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private RectTransform sideViewRectTransform;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 newPosition;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector2 resolutionScaler;

		[Token(Token = "0x4002128")]
		private const float bgSwithcRatio = 1.7f;

		[Token(Token = "0x4002129")]
		private const string spotsSaveVarName = "placedSpots";

		[Token(Token = "0x400212A")]
		private const string stageVarName = "SidebarCancerStageWithoutMets";

		[Token(Token = "0x400212B")]
		private const string tumorVarName = "SidebarTumorStage";

		[Token(Token = "0x400212C")]
		private const string nodesVarName = "SidebarNodesStage";

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private string leftBreastSceneName;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private string leftBreastActivity;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private string rightBreastActivity;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int padRevealZone;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private InfoBoxController _infobox;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private TofuPadController _padController;

		[Token(Token = "0x17000191")]
		private InfoBoxController infoBox
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0xEEFEEC", Offset = "0xEEFEEC", VA = "0xEEFEEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		private TofuPadController padController
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0xEEFFA0", Offset = "0xEEFFA0", VA = "0xEEFFA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xEF0050", Offset = "0xEF0050", VA = "0xEF0050")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xEF0054", Offset = "0xEF0054", VA = "0xEF0054")]
		private void Start()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xEEEC6C", Offset = "0xEEEC6C", VA = "0xEEEC6C")]
		public DragableSpot AddNewSpot(Vector3 position, tumorType type, Vector2 size)
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xEEEE30", Offset = "0xEEEE30", VA = "0xEEEE30")]
		public void BeginSpotDrag(RectTransform spotRectTransform, PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xEEF330", Offset = "0xEEF330", VA = "0xEEF330")]
		public void proceedSpotDrag(RectTransform spotRectTransform, PointerEventData eventData)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xEEF674", Offset = "0xEEF674", VA = "0xEEF674")]
		public void EndSpotDrag(RectTransform spotRectTransform, PointerEventData eventData)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xEF13F4", Offset = "0xEF13F4", VA = "0xEF13F4")]
		public void DoneButton()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xEF1C68", Offset = "0xEF1C68", VA = "0xEF1C68")]
		public void GlobalCancerReset(bool resetToggles = true)
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xEF1D30", Offset = "0xEF1D30", VA = "0xEF1D30")]
		public void ResetTumors()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xEF1E74", Offset = "0xEF1E74", VA = "0xEF1E74")]
		public void ResetMets()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xEF1E90", Offset = "0xEF1E90", VA = "0xEF1E90")]
		public void CustomizingButton()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xEF1F70", Offset = "0xEF1F70", VA = "0xEF1F70")]
		public void MetsToggle(string metsSceneName)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xEF20E4", Offset = "0xEF20E4", VA = "0xEF20E4")]
		public string GetSaveFileNameForPreset(presetStages preset)
		{
			return null;
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xEF1990", Offset = "0xEF1990", VA = "0xEF1990")]
		private void SaveSpots()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xEF25D8", Offset = "0xEF25D8", VA = "0xEF25D8")]
		public void SaveSpotsToPreset(presetStages preset)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xEF05AC", Offset = "0xEF05AC", VA = "0xEF05AC")]
		private void LoadSavedSpots()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xEF2AC4", Offset = "0xEF2AC4", VA = "0xEF2AC4")]
		public void LoadSpotsFromPreset(presetStages preset)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xEF26AC", Offset = "0xEF26AC", VA = "0xEF26AC")]
		private void CreateSpotsFromSavedData(List<DragableSpotSaveData> savedSpots)
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xEF21CC", Offset = "0xEF21CC", VA = "0xEF21CC")]
		private List<DragableSpotSaveData> GetSpotsSaveData(List<DragableSpot> spots)
		{
			return null;
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xEF0A7C", Offset = "0xEF0A7C", VA = "0xEF0A7C")]
		public void ClearPresetsToggles()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xEF16F4", Offset = "0xEF16F4", VA = "0xEF16F4")]
		public void SetUIElementsActive(bool value)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xEF2E1C", Offset = "0xEF2E1C", VA = "0xEF2E1C")]
		private int GetExistedTumorsCount(tumorType type)
		{
			return default(int);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xEF0DD0", Offset = "0xEF0DD0", VA = "0xEF0DD0")]
		private bool DestroyIfOutOfBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xEF0694", Offset = "0xEF0694", VA = "0xEF0694")]
		private DragableSpot CreateNewSpot(tumorType type, Vector2 size)
		{
			return null;
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xEF2DB4", Offset = "0xEF2DB4", VA = "0xEF2DB4")]
		private GameObject GetPlaceholderByHash(int value)
		{
			return null;
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xEF156C", Offset = "0xEF156C", VA = "0xEF156C")]
		private List<DragableSpot> GetFrontViewSposts()
		{
			return null;
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xEF2EE4", Offset = "0xEF2EE4", VA = "0xEF2EE4")]
		private Rect RectToScreenRect(RectTransform rectTransform, Canvas canvas)
		{
			return default(Rect);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xEF04F0", Offset = "0xEF04F0", VA = "0xEF04F0")]
		private void AdjustBackground()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xEF3244", Offset = "0xEF3244", VA = "0xEF3244")]
		private void UpdateBGReferences(GameObject activeBG)
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xEF1378", Offset = "0xEF1378", VA = "0xEF1378")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD24FC8", Offset = "0xD24FC8")]
		private IEnumerator SnapToFixedPosition(DragableSpot spot)
		{
			return null;
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xEF0B6C", Offset = "0xEF0B6C", VA = "0xEF0B6C")]
		private void SpotDragingImageSetActive(DragableSpot spot, bool value)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xEF0900", Offset = "0xEF0900", VA = "0xEF0900")]
		private void ChangeSpotStageToPlacing(DragableSpot spot, RectTransform parent)
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xEF1158", Offset = "0xEF1158", VA = "0xEF1158")]
		private void DestroySpot(DragableSpot spot)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xEF1A48", Offset = "0xEF1A48", VA = "0xEF1A48")]
		public void UpdateStages()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xEF35B0", Offset = "0xEF35B0", VA = "0xEF35B0")]
		private void UpdateMIndex()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xEF33C0", Offset = "0xEF33C0", VA = "0xEF33C0")]
		private void UpdateTIndex()
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xEF36B8", Offset = "0xEF36B8", VA = "0xEF36B8")]
		private bool IV_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xEF36C8", Offset = "0xEF36C8", VA = "0xEF36C8")]
		private bool IIIC_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xEF3704", Offset = "0xEF3704", VA = "0xEF3704")]
		private bool IIIB_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xEF3748", Offset = "0xEF3748", VA = "0xEF3748")]
		private bool IIIA_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xEF37A4", Offset = "0xEF37A4", VA = "0xEF37A4")]
		private bool IIB_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xEF3804", Offset = "0xEF3804", VA = "0xEF3804")]
		private bool IIA_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xEF3878", Offset = "0xEF3878", VA = "0xEF3878")]
		private bool IB_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xEF38D4", Offset = "0xEF38D4", VA = "0xEF38D4")]
		private bool IA_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xEF3914", Offset = "0xEF3914", VA = "0xEF3914")]
		private bool O_Condition()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xEF10F0", Offset = "0xEF10F0", VA = "0xEF10F0")]
		private int T4_Count()
		{
			return default(int);
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xEF3938", Offset = "0xEF3938", VA = "0xEF3938")]
		private int T3_Count()
		{
			return default(int);
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xEF3940", Offset = "0xEF3940", VA = "0xEF3940")]
		private int T2_Count()
		{
			return default(int);
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xEF3948", Offset = "0xEF3948", VA = "0xEF3948")]
		private int T1_Count()
		{
			return default(int);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xEF39B0", Offset = "0xEF39B0", VA = "0xEF39B0")]
		private int Tis_Count()
		{
			return default(int);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xEF39E8", Offset = "0xEF39E8", VA = "0xEF39E8")]
		public BreastCancer_TumorsPlacingController()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public static class AppGlobals
	{
		[Token(Token = "0x4002133")]
		public const string ROOT = "Root";

		[Token(Token = "0x4002134")]
		public const string CAMERA = "Camera";

		[Token(Token = "0x4002135")]
		public const string VR_CAMERA = "Main Camera";

		[Token(Token = "0x4002136")]
		public const string LIGHTING = "Lighting";

		[Token(Token = "0x4002137")]
		public const string UI = "UI";

		[Token(Token = "0x4002138")]
		public const string ASSETS = "Assets";

		[Token(Token = "0x4002139")]
		public const string BRIDGE = "AppBridge";

		[Token(Token = "0x400213A")]
		public const string FRONT_LIGHT = "Front_Light";

		[Token(Token = "0x400213B")]
		public const string BACK_LIGHT = "Back_Light";

		[Token(Token = "0x400213C")]
		public const string ASSET_WORLD_POS = "AssetWorldPosition";

		[Token(Token = "0x400213D")]
		public const string UI_3D_PLACEMENT = "UI3dPlacement";

		[Token(Token = "0x400213E")]
		public const string CAMERA_3D_PLACEMENT = "Camera3dPosition";

		[Token(Token = "0x400213F")]
		public const string APP_RUNNER = "AppRunner";

		[Token(Token = "0x4002140")]
		public const string GUI_CONTROLLER_BRIDGE = "GUIControllerBridge";
	}
	[Token(Token = "0x2000437")]
	public class AppRunner : MonoBehaviour
	{
		[Token(Token = "0x20007C0")]
		public delegate void Fade();

		[Token(Token = "0x20007C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E678", Offset = "0xD0E678")]
		private sealed class <FadeAndLoad>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400302C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400302D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400302E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppRunner <>4__this;

			[Token(Token = "0x400302F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string sceneName;

			[Token(Token = "0x4003030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float delay;

			[Token(Token = "0x4003031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <fadeOutStart>5__2;

			[Token(Token = "0x4003032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <status>5__3;

			[Token(Token = "0x17000363")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B45")]
				[Address(RVA = "0xF1603C", Offset = "0xF1603C", VA = "0xF1603C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000364")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B47")]
				[Address(RVA = "0xF160A4", Offset = "0xF160A4", VA = "0xF160A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B42")]
			[Address(RVA = "0xF15928", Offset = "0xF15928", VA = "0xF15928")]
			[DebuggerHidden]
			public <FadeAndLoad>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002B43")]
			[Address(RVA = "0xF15BAC", Offset = "0xF15BAC", VA = "0xF15BAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B44")]
			[Address(RVA = "0xF15BB0", Offset = "0xF15BB0", VA = "0xF15BB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B46")]
			[Address(RVA = "0xF16044", Offset = "0xF16044", VA = "0xF16044", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneTransition sceneTransition;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TofuSettingsAudioController tofuSettingsAudiController;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A7A4", Offset = "0xD1A7A4")]
		public Image transitionPanel;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1A7DC", Offset = "0xD1A7DC")]
		private float faderDuration;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A7EC", Offset = "0xD1A7EC")]
		[ReadOnly]
		public bool transitionMovieDone;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A838", Offset = "0xD1A838")]
		[ReadOnly]
		public bool fadeInDone;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Fade OnFadeIn;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Fade OnFadeOut;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public VR_SceneSetup vr_setup;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string currentSceneName;

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xF15818", Offset = "0xF15818", VA = "0xF15818")]
		private void ReportAnalytics(string sceneName)
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xF1589C", Offset = "0xF1589C", VA = "0xF1589C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2602C", Offset = "0xD2602C")]
		protected IEnumerator FadeAndLoad(string sceneName, float delay = 0f)
		{
			return null;
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xF11D90", Offset = "0xF11D90", VA = "0xF11D90")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xF15954", Offset = "0xF15954", VA = "0xF15954")]
		public bool isVR()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xF1595C", Offset = "0xF1595C", VA = "0xF1595C")]
		private void FadeOut()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xF15B84", Offset = "0xF15B84", VA = "0xF15B84")]
		private void FadeIn()
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xF15B94", Offset = "0xF15B94", VA = "0xF15B94")]
		public AppRunner()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public class AtlasAppRunner : AppRunner
	{
		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xF17190", Offset = "0xF17190", VA = "0xF17190")]
		public void PopulateButtons()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xF171FC", Offset = "0xF171FC", VA = "0xF171FC")]
		public AtlasAppRunner()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class Lung_COPD_AppRunner : AppRunner
	{
		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x22A9E48", Offset = "0x22A9E48", VA = "0x22A9E48")]
		public Lung_COPD_AppRunner()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class PreprocessorTarget : MonoBehaviour
	{
		[Token(Token = "0x20007C2")]
		public enum BuildMode
		{
			[Token(Token = "0x4003034")]
			Desktop,
			[Token(Token = "0x4003035")]
			VR
		}

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A884", Offset = "0xD1A884")]
		public BuildMode keepInBuildFor;

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x22AE814", Offset = "0x22AE814", VA = "0x22AE814")]
		public PreprocessorTarget()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class PerformanceDetector : MonoBehaviour
	{
		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A8BC", Offset = "0xD1A8BC")]
		public AFPSCounter aFpsCounter;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A8F4", Offset = "0xD1A8F4")]
		public QualityController qualityController;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A92C", Offset = "0xD1A92C")]
		public GameObject lowFpsWarningGui;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject criticalFpsWarningGui;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A964", Offset = "0xD1A964")]
		public int warningLevelValue;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int criticalLevelValue;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SceneController _sceneController;

		[Token(Token = "0x4002153")]
		private const string PrefsLowFpsWarningKey = "Application_LowFpsWarningGiven";

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x22AE064", Offset = "0x22AE064", VA = "0x22AE064")]
		private void DisplayPlayerPrefs()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x22AE16C", Offset = "0x22AE16C", VA = "0x22AE16C")]
		private void ResetPlayerPrefs()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x22AE1BC", Offset = "0x22AE1BC", VA = "0x22AE1BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x22AE3D4", Offset = "0x22AE3D4", VA = "0x22AE3D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x22AE4B4", Offset = "0x22AE4B4", VA = "0x22AE4B4")]
		private void OnFPSLevelChange(FPSLevel value)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x22AE7A0", Offset = "0x22AE7A0", VA = "0x22AE7A0")]
		public PerformanceDetector()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class QualityController : QualityController_Base
	{
		[Serializable]
		[Token(Token = "0x20007C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E688", Offset = "0xD0E688")]
		private sealed class <>c
		{
			[Token(Token = "0x4003036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__31_0;

			[Token(Token = "0x6002B49")]
			[Address(RVA = "0x22B0FBC", Offset = "0x22B0FBC", VA = "0x22B0FBC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0x22B0FC4", Offset = "0x22B0FC4", VA = "0x22B0FC4")]
			internal bool <UpdateQualityDropdown>b__31_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E698", Offset = "0xD0E698")]
		private sealed class <UpdateQualityDropdown>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400303A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QualityController <>4__this;

			[Token(Token = "0x17000365")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B4E")]
				[Address(RVA = "0x22B1130", Offset = "0x22B1130", VA = "0x22B1130", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000366")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B50")]
				[Address(RVA = "0x22B1198", Offset = "0x22B1198", VA = "0x22B1198", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0x22AF590", Offset = "0x22AF590", VA = "0x22AF590")]
			[DebuggerHidden]
			public <UpdateQualityDropdown>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0x22B0FE4", Offset = "0x22B0FE4", VA = "0x22B0FE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0x22B0FE8", Offset = "0x22B0FE8", VA = "0x22B0FE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x22B1138", Offset = "0x22B1138", VA = "0x22B1138", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A99C", Offset = "0xD1A99C")]
		public TMP_Dropdown resolutionDropdown;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject resolutionHeader;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Dropdown qualityDropdown;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _qualityIndex;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<Resolution> onResolutionChanged;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int currentResolutionIndex;

		[Token(Token = "0x400215A")]
		private const int minResolutionWidth = 1024;

		[Token(Token = "0x400215B")]
		private const string PrefsQualityKey = "Application_Quality";

		[Token(Token = "0x400215C")]
		private const string PrefsResolutionKey = "Application_ResolutionString";

		[Token(Token = "0x400215D")]
		private const string presetMinimal = "Minimal";

		[Token(Token = "0x400215E")]
		private const string presetLow = "Low";

		[Token(Token = "0x400215F")]
		private const string presetMedium = "Medium";

		[Token(Token = "0x4002160")]
		private const string presetHigh = "High";

		[Token(Token = "0x4002161")]
		private const string presetUltra = "Ultra";

		[Token(Token = "0x4002162")]
		private const string presetExtreme = "Extreme";

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string[] localizedQualityLevelKeys;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string[] LocalizedQualityLevelStrings;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Resolution> validResolutions;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<string> validResolutionsStrings;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SceneController _sceneController;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TofuDrawToolController _drawToolController;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TextMeshProUGUI _graphicQualityToggleText;

		[Token(Token = "0x17000193")]
		public int qualityIndex
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x22AEF5C", Offset = "0x22AEF5C", VA = "0x22AEF5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x22AEFF4", Offset = "0x22AEFF4", VA = "0x22AEFF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000194")]
		[HideInInspector]
		public Resolution currentSelectedResolution
		{
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x22AB054", Offset = "0x22AB054", VA = "0x22AB054")]
			get
			{
				return default(Resolution);
			}
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x22AEFFC", Offset = "0x22AEFFC", VA = "0x22AEFFC")]
		private void DisplayPlayerPrefs()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x22AF1B8", Offset = "0x22AF1B8", VA = "0x22AF1B8")]
		private void ResetPlayerPrefs()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x22AF21C", Offset = "0x22AF21C", VA = "0x22AF21C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x22AF3D0", Offset = "0x22AF3D0", VA = "0x22AF3D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x22AF520", Offset = "0x22AF520", VA = "0x22AF520")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26090", Offset = "0xD26090")]
		private IEnumerator UpdateQualityDropdown()
		{
			return null;
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x22AF5BC", Offset = "0x22AF5BC", VA = "0x22AF5BC")]
		private void LoadSettings()
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x22AF868", Offset = "0x22AF868", VA = "0x22AF868")]
		private int GetQualityPresetCount()
		{
			return default(int);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x22AF808", Offset = "0x22AF808", VA = "0x22AF808")]
		private int GetDefaultQualityLevel()
		{
			return default(int);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x22AF88C", Offset = "0x22AF88C", VA = "0x22AF88C")]
		private string GetDefaultIPadLevel()
		{
			return null;
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x22AFCA0", Offset = "0x22AFCA0", VA = "0x22AFCA0")]
		private string GetDefaultVrLevel()
		{
			return null;
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x22AFE34", Offset = "0x22AFE34", VA = "0x22AFE34")]
		private void SaveSettings()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x22AFF0C", Offset = "0x22AFF0C", VA = "0x22AFF0C")]
		private void OnResolutionDropdownSelection(int value)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x22B0180", Offset = "0x22B0180", VA = "0x22B0180")]
		private void OnGraphicQualityDropdownSelection(int index)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x22B0184", Offset = "0x22B0184", VA = "0x22B0184")]
		private void GraphicQualitySelected(int index)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x22B056C", Offset = "0x22B056C", VA = "0x22B056C")]
		private void FillQualityDropdown()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x22B0788", Offset = "0x22B0788", VA = "0x22B0788")]
		private void FillResolutionDropdown()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x22B0938", Offset = "0x22B0938", VA = "0x22B0938")]
		private void FilterSupportedResolutions()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x22AE6A8", Offset = "0x22AE6A8", VA = "0x22AE6A8")]
		public void SetQualityLevel(int value)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x22B0BB0", Offset = "0x22B0BB0", VA = "0x22B0BB0")]
		private void GenerateQualityLevelStrings()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x22B0CFC", Offset = "0x22B0CFC", VA = "0x22B0CFC")]
		private void OnLocaleDidChange()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x22B0D20", Offset = "0x22B0D20", VA = "0x22B0D20")]
		public QualityController()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class MagicLabelTool : MonoBehaviour
	{
		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x22A9EB0", Offset = "0x22A9EB0", VA = "0x22A9EB0")]
		public MagicLabelTool()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class SceneController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E6A8", Offset = "0xD0E6A8")]
		private sealed class <>c
		{
			[Token(Token = "0x400303B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400303C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Light> <>9__34_0;

			[Token(Token = "0x6002B52")]
			[Address(RVA = "0x22B57C4", Offset = "0x22B57C4", VA = "0x22B57C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0x22B57CC", Offset = "0x22B57CC", VA = "0x22B57CC")]
			internal bool <LightAndMagic>b__34_0(Light light)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1A9E4", Offset = "0xD1A9E4")]
		public GameObject eventSystem;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AA1C", Offset = "0xD1AA1C")]
		[SerializeField]
		private bool attachLightsToCamera;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Light[] lights;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AA78", Offset = "0xD1AA78")]
		[SerializeField]
		private bool disableDepthOfFieldAdjuster;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PostProcessingProfile desktopPostProcessingProfile;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PostProcessingProfile desktopHighPostProcessingProfile;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PostProcessingProfile desktopLowPostProcessingProfile;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PostProcessingProfile vrPostProcessingProfile;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AAF4", Offset = "0xD1AAF4")]
		[SerializeField]
		private GameObject desktopCamera;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject vrCamera;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AB40", Offset = "0xD1AB40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1AB40", Offset = "0xD1AB40")]
		public GameObject meshRoot;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject labelsPointsRoot;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1ABB0", Offset = "0xD1ABB0")]
		[SerializeField]
		private GameObject lookAtPrefab;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1ABFC", Offset = "0xD1ABFC")]
		[SerializeField]
		private bool activateLookAt;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[ReadOnly]
		private SceneTransition sceneTransition;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[ReadOnly]
		private AppRunner appRunner;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[ReadOnly]
		public bool vrActive;

		[Token(Token = "0x400217B")]
		private const string VrGuiObjectName = "UI3dPlacement";

		[Token(Token = "0x400217C")]
		private const string VrCameraObjectName = "Camera3dPosition";

		[Token(Token = "0x400217D")]
		private const string TransitionForMovieCapture = "TransitionForMovieCapture";

		[Token(Token = "0x400217E")]
		private const string XrEventSystemObjectName = "XR_EventSystem";

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string _sceneName;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private EventSystem[] allEventSystems;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Light> pendingLights;

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x22B3FB8", Offset = "0x22B3FB8", VA = "0x22B3FB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x22B41B0", Offset = "0x22B41B0", VA = "0x22B41B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x22B424C", Offset = "0x22B424C", VA = "0x22B424C")]
		private void OnSceneLoaded(Scene currentScene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x22B4D3C", Offset = "0x22B4D3C", VA = "0x22B4D3C")]
		private void AttachLights(GameObject cameraObject)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x22B475C", Offset = "0x22B475C", VA = "0x22B475C")]
		private void SetPostProcessingProfile(GameObject cameraGameObject, PostProcessingProfile postProcessingProfile)
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x22B4E9C", Offset = "0x22B4E9C", VA = "0x22B4E9C")]
		public void CheckQualityToSetDesktopPpp()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x22B4C00", Offset = "0x22B4C00", VA = "0x22B4C00")]
		private void CheckQualityToSetPpp(GameObject cameraObject)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x22B04BC", Offset = "0x22B04BC", VA = "0x22B04BC")]
		public void UpdatePostProcessingProfileAndLights(int qualityIndex)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x22B4EA4", Offset = "0x22B4EA4", VA = "0x22B4EA4")]
		private void AddDofDistanceAdjuster(PostProcessingBehaviour behaviour, PostProcessingProfile profile)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x22B56B8", Offset = "0x22B56B8", VA = "0x22B56B8")]
		private void SetupCurvedUIOnObject(GameObject value)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x22B4F84", Offset = "0x22B4F84", VA = "0x22B4F84")]
		private void LightAndMagic(int qualityIndex)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x22B5750", Offset = "0x22B5750", VA = "0x22B5750")]
		public SceneController()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class SkinnedMeshFreezer : MonoBehaviour
	{
		[Token(Token = "0x20007C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E6B8", Offset = "0xD0E6B8")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400303D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400303E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400303F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkinnedMeshFreezer <>4__this;

			[Token(Token = "0x17000367")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B57")]
				[Address(RVA = "0x22B9A5C", Offset = "0x22B9A5C", VA = "0x22B9A5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000368")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B59")]
				[Address(RVA = "0x22B9AC4", Offset = "0x22B9AC4", VA = "0x22B9AC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B54")]
			[Address(RVA = "0x22B97B4", Offset = "0x22B97B4", VA = "0x22B97B4")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x22B97E8", Offset = "0x22B97E8", VA = "0x22B97E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B56")]
			[Address(RVA = "0x22B97EC", Offset = "0x22B97EC", VA = "0x22B97EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B58")]
			[Address(RVA = "0x22B9A64", Offset = "0x22B9A64", VA = "0x22B9A64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isNextGenQuest;

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x22B9618", Offset = "0x22B9618", VA = "0x22B9618")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x22B9744", Offset = "0x22B9744", VA = "0x22B9744")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD260F4", Offset = "0xD260F4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x22B97E0", Offset = "0x22B97E0", VA = "0x22B97E0")]
		public SkinnedMeshFreezer()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class SubMeshTrimmer : MonoBehaviour
	{
		[Token(Token = "0x4002183")]
		private const string InvisiblePrefix = "invisible";

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xE6EF4C", Offset = "0xE6EF4C", VA = "0xE6EF4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xE6F2CC", Offset = "0xE6F2CC", VA = "0xE6F2CC")]
		public SubMeshTrimmer()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class SubscriptionTestPanelController : MonoBehaviour
	{
		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1ACC8", Offset = "0xD1ACC8")]
		public Toggle freeToggle;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle normalToggle;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle proToggle;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AD00", Offset = "0xD1AD00")]
		public GameObject subscriptionControllerPrefab;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TofuLibraryController _tofuLibraryController;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TofuLeftBarToggleContoller _tofuLeftBarToggleController;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SystemSubscriptionController _systemSubscriptionController;

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xE6F2D4", Offset = "0xE6F2D4", VA = "0xE6F2D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xE6F3EC", Offset = "0xE6F3EC", VA = "0xE6F3EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xE6F568", Offset = "0xE6F568", VA = "0xE6F568")]
		private void FreeToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xE6F588", Offset = "0xE6F588", VA = "0xE6F588")]
		private void NormalToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xE6F5A8", Offset = "0xE6F5A8", VA = "0xE6F5A8")]
		private void ProToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xE6F5C8", Offset = "0xE6F5C8", VA = "0xE6F5C8")]
		public SubscriptionTestPanelController()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class DisableInDemo : MonoBehaviour
	{
		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SystemSubscriptionController _systemSubscriptionController;

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xEF58F0", Offset = "0xEF58F0", VA = "0xEF58F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xEF59E8", Offset = "0xEF59E8", VA = "0xEF59E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xEF5AD4", Offset = "0xEF5AD4", VA = "0xEF5AD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xEF5B58", Offset = "0xEF5B58", VA = "0xEF5B58")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xEF5B9C", Offset = "0xEF5B9C", VA = "0xEF5B9C")]
		public DisableInDemo()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class TofuGuiBridgeBladderOAB : MonoBehaviour
	{
		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Urinator_OB _urineController;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle _urineToggle;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _emptyToggle;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Slider _severitySlider;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AD38", Offset = "0xD1AD38")]
		[SerializeField]
		private string SeveritySliderName;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AD84", Offset = "0xD1AD84")]
		[SerializeField]
		private string UrineToggleName;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string UrineToggleFillName;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string EmptyToggleName;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string EmptyToggleFillName;

		[Token(Token = "0x4002199")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xE77570", Offset = "0xE77570", VA = "0xE77570")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xE77720", Offset = "0xE77720", VA = "0xE77720")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xE77B28", Offset = "0xE77B28", VA = "0xE77B28")]
		private void SetupUrineController()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xE7790C", Offset = "0xE7790C", VA = "0xE7790C")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xE77A5C", Offset = "0xE77A5C", VA = "0xE77A5C")]
		private void SetUpSeveritySlider()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xE77DAC", Offset = "0xE77DAC", VA = "0xE77DAC")]
		public TofuGuiBridgeBladderOAB()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class TofuGuiBridgeBrain : MonoBehaviour
	{
		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BrainController _brainController;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle _csfToggle;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _dyeToggle;

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle _broadmanToggle;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image _dyeToggleFill;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AE00", Offset = "0xD1AE00")]
		[SerializeField]
		private string CsfToggleName;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string BroadmanToggleName;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AE5C", Offset = "0xD1AE5C")]
		[SerializeField]
		private string DyeToggleName;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string DyeToggleFillImageName;

		[Token(Token = "0x40021A7")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xE77E44", Offset = "0xE77E44", VA = "0xE77E44")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xE77F00", Offset = "0xE77F00", VA = "0xE77F00")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xE7832C", Offset = "0xE7832C", VA = "0xE7832C")]
		private void SetupBrainController()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xE780EC", Offset = "0xE780EC", VA = "0xE780EC")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xE78448", Offset = "0xE78448", VA = "0xE78448")]
		public TofuGuiBridgeBrain()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class TofuGuiBridgeBrainWhiteMatter : MonoBehaviour
	{
		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BrainWhiteMatterController _brainController;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle _xyzToggle;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AEB8", Offset = "0xD1AEB8")]
		[SerializeField]
		private string XYZToggleName;

		[Token(Token = "0x40021AF")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xE784D0", Offset = "0xE784D0", VA = "0xE784D0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xE7858C", Offset = "0xE7858C", VA = "0xE7858C")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xE78844", Offset = "0xE78844", VA = "0xE78844")]
		private void SetupBrainController()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xE78778", Offset = "0xE78778", VA = "0xE78778")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xE78944", Offset = "0xE78944", VA = "0xE78944")]
		public TofuGuiBridgeBrainWhiteMatter()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class TofuGuiBridgeCADDiabetes : MonoBehaviour
	{
		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AF04", Offset = "0xD1AF04")]
		public string outSceneName;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CADController _cadController;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Slider _plaqueSlider;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Slider _glucoseSlider;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Slider _cholesterolSlider;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _treatmentToggle;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Image _treatmentToggleFill;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AppRunner _appRunner;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Toggle _outToggle;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Toggle _resetToggle;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AF3C", Offset = "0xD1AF3C")]
		[SerializeField]
		private string GlucoseSliderName;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string CholesterolSliderName;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string OutToggleName;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1AFA8", Offset = "0xD1AFA8")]
		[SerializeField]
		private string PlaqueSliderName;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string TreatmentToggleName;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string TreatmentToggleFillName;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string ResetButtonName;

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xE7899C", Offset = "0xE7899C", VA = "0xE7899C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xE78A60", Offset = "0xE78A60", VA = "0xE78A60")]
		private void SetupSliders()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xE78C28", Offset = "0xE78C28", VA = "0xE78C28")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xE78E50", Offset = "0xE78E50", VA = "0xE78E50")]
		private void SetupButton()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xE78F1C", Offset = "0xE78F1C", VA = "0xE78F1C")]
		private void SetupCadController()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xE79048", Offset = "0xE79048", VA = "0xE79048")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xE79074", Offset = "0xE79074", VA = "0xE79074")]
		public TofuGuiBridgeCADDiabetes()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class TofuGuiBridgeColonInterior : MonoBehaviour
	{
		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B024", Offset = "0xD1B024")]
		public string outSceneName;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string outSceneNameMobileVR;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AppRunner _appRunner;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Toggle _outToggle;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B05C", Offset = "0xD1B05C")]
		[SerializeField]
		private string OutToggleName;

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xE7912C", Offset = "0xE7912C", VA = "0xE7912C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xE791D8", Offset = "0xE791D8", VA = "0xE791D8")]
		private void SetupToggle()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xE7936C", Offset = "0xE7936C", VA = "0xE7936C")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xE793CC", Offset = "0xE793CC", VA = "0xE793CC")]
		public TofuGuiBridgeColonInterior()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class TofuGuiBridgeColonPhysiology : MonoBehaviour
	{
		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LinearLargeIntestineFXController _colonController;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Slider _timeScaleSlider;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _fillNormalToggle;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle _fillConstipationToggle;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _fillDiarrheaToggle;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AppRunner _appRunner;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Toggle _inToggle;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Toggle _waterToggle;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Toggle _resetToggle;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B0A8", Offset = "0xD1B0A8")]
		[SerializeField]
		private string TimeScaleSliderName;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string WaterToggleName;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x40021D8")]
		private const string FillNormalToggleName = "Tofu_Fill_Toggle_Normal";

		[Token(Token = "0x40021D9")]
		private const string FillConstipationToggleName = "Tofu_Fill_Toggle_Constipation";

		[Token(Token = "0x40021DA")]
		private const string FillDiarrheaToggleName = "Tofu_Fill_Toggle_Diarrhea";

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string ResetToggleName;

		[Token(Token = "0x40021DC")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xE79424", Offset = "0xE79424", VA = "0xE79424")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xE79564", Offset = "0xE79564", VA = "0xE79564")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xE79AAC", Offset = "0xE79AAC", VA = "0xE79AAC")]
		private void SetupColonController()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xE79750", Offset = "0xE79750", VA = "0xE79750")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xE79C34", Offset = "0xE79C34", VA = "0xE79C34")]
		public TofuGuiBridgeColonPhysiology()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class TofuGuiBridgeHeart : MonoBehaviour
	{
		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B124", Offset = "0xD1B124")]
		public string inSceneName;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string inSceneNameMobileVR;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TofuGuiController _otherTofuGuiController;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AppRunner _appRunner;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _inToggle;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CCSControl _ccsControl;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ECGController _ecgController;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BpmSpeedControlWithFX _bpmSpeedControlWithFx;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Canvas _ecgParentCanvas;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SceneController _sceneController;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Slider _bpmSlider;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Slider _timeSlider;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B15C", Offset = "0xD1B15C")]
		[SerializeField]
		private string EcgToggleName;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string ControlsToggleName;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private string BpmSliderName;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private string TimeSliderName;

		[Token(Token = "0x40021F2")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x40021F3")]
		private const string GuiObjectName = "GUI_Scene_Container_Variant_Heart_Desktop";

		[Token(Token = "0x40021F4")]
		private const string OtherPadObjectName = "PadUI";

		[Token(Token = "0x40021F5")]
		private const string RealHeartSceneName = "Heart";

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _realHeartScene;

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xE79CBC", Offset = "0xE79CBC", VA = "0xE79CBC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xE7A2FC", Offset = "0xE7A2FC", VA = "0xE7A2FC")]
		private void SetupCcsControl()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xE7A3DC", Offset = "0xE7A3DC", VA = "0xE7A3DC")]
		private void SetupBpmController()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xE7A4C8", Offset = "0xE7A4C8", VA = "0xE7A4C8")]
		private void SetupEcgController()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xE79F1C", Offset = "0xE79F1C", VA = "0xE79F1C")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xE7A124", Offset = "0xE7A124", VA = "0xE7A124")]
		private void SetupInToggle()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xE7A754", Offset = "0xE7A754", VA = "0xE7A754")]
		private void OnInToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xE7A7B4", Offset = "0xE7A7B4", VA = "0xE7A7B4")]
		public TofuGuiBridgeHeart()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class TofuGuiBridgeHeartAorticStenosis : MonoBehaviour
	{
		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AorticStenosisController _aorticStenosisController;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Slider severitySlider;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Slider _lValveSlider;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Slider _nValveSlider;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Slider _rValveSlider;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _treatmentToggle;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Image _treatmentFillImage;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _resetToggle;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B1E8", Offset = "0xD1B1E8")]
		[SerializeField]
		private string severitySliderName;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string TreatmentToggleName;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string TreatmentFillImageName;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string ResetButtonName;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B264", Offset = "0xD1B264")]
		[SerializeField]
		private string LValveSliderName;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string NValveSliderName;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string RValveSliderName;

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xE7A84C", Offset = "0xE7A84C", VA = "0xE7A84C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xE7A910", Offset = "0xE7A910", VA = "0xE7A910")]
		private void SetupSliders()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xE7AB50", Offset = "0xE7AB50", VA = "0xE7AB50")]
		private void SetupToggle()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xE7ACA0", Offset = "0xE7ACA0", VA = "0xE7ACA0")]
		private void SetupButtons()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xE7AD6C", Offset = "0xE7AD6C", VA = "0xE7AD6C")]
		private void SetupAorticStenosisController()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xE7AEA8", Offset = "0xE7AEA8", VA = "0xE7AEA8")]
		public TofuGuiBridgeHeartAorticStenosis()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class TofuGuiBridgeHeartArrhythmia : MonoBehaviour
	{
		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ArrhythmiaControl _arrhythmiaControl;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ArrhythmiaCCSControl _arrhythmiaCcsControl;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ArrhythmiaECGController _arrhythmiaEcgController;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BpmSpeedControlWithFX _bpmSpeedControlWithFx;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Canvas _ecgParentCanvas;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SceneController _sceneController;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Slider _bpmSlider;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Slider _timeSlider;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Slider _fakeBpmSlider;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Toggle _bpmToggle;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Toggle _speedToggle;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B2D0", Offset = "0xD1B2D0")]
		[SerializeField]
		private string EcgToggleName;

		[Token(Token = "0x4002217")]
		private const string BpmToggleName = "BPM_Toggle";

		[Token(Token = "0x4002218")]
		private const string SpeedToggleName = "Time_Toggle";

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string ControlsToggleName;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string BpmSliderName;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string TimeSliderName;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private string FakeBpmSliderName;

		[Token(Token = "0x400221D")]
		private const string ArrhythmiaStateTextName = "Arrhythmia_State_Text";

		[Token(Token = "0x400221E")]
		private const string ZoneManagerName = "ZoneManager";

		[Token(Token = "0x400221F")]
		private const string BpmPanelName = "BPM_Panel";

		[Token(Token = "0x4002220")]
		private const string FakeBpmPanelName = "Fake_BPM_Panel";

		[Token(Token = "0x4002221")]
		private const string TimePanelName = "Time_Panel";

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xE7AF60", Offset = "0xE7AF60", VA = "0xE7AF60")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xE7B418", Offset = "0xE7B418", VA = "0xE7B418")]
		private void SetupArrhythmiaControl()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xE7B24C", Offset = "0xE7B24C", VA = "0xE7B24C")]
		private void SetupArrhythmiaCcsControl()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xE7B32C", Offset = "0xE7B32C", VA = "0xE7B32C")]
		private void SetupBpmController()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xE7B7EC", Offset = "0xE7B7EC", VA = "0xE7B7EC")]
		private void SetupArrhythmiaEcgController()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xE7B060", Offset = "0xE7B060", VA = "0xE7B060")]
		public void SetupPad()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xE7BA7C", Offset = "0xE7BA7C", VA = "0xE7BA7C")]
		public TofuGuiBridgeHeartArrhythmia()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class TofuGuiBridgeHeartDiabetes : MonoBehaviour
	{
		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B35C", Offset = "0xD1B35C")]
		public string inSceneName;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DiabeticHeartControllerV2 _diabeticHeartControllerV2;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ECGController _ecgController;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BpmSpeedControlForHeartFailure _bpmSpeedControlForHeartFailure;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Canvas _ecgParentCanvas;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SceneController _sceneController;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Slider _bpmSlider;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Slider _timeSlider;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AppRunner _appRunner;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Toggle _inToggle;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B394", Offset = "0xD1B394")]
		[SerializeField]
		private string EcgToggleName;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string BpmSliderName;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string TimeSliderName;

		[Token(Token = "0x4002234")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xE7BB14", Offset = "0xE7BB14", VA = "0xE7BB14")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xE7BFB8", Offset = "0xE7BFB8", VA = "0xE7BFB8")]
		private void SetupBpmController()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xE7C0A4", Offset = "0xE7C0A4", VA = "0xE7C0A4")]
		private void SetupEcgController()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xE7BD7C", Offset = "0xE7BD7C", VA = "0xE7BD7C")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xE7C2DC", Offset = "0xE7C2DC", VA = "0xE7C2DC")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xE7C308", Offset = "0xE7C308", VA = "0xE7C308")]
		public TofuGuiBridgeHeartDiabetes()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class TofuGuiBridgeHeartFailure : MonoBehaviour
	{
		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HFv2_Manager_FullHeart _failureControl;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CCSControl _ccsControl;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ECGController _ecgController;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BpmSpeedControlForHeartFailure _bpmSpeedControl;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _padScrollRectObject;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScrollRect _padScrollRect;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas _ecgParentCanvas;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SceneController _sceneController;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Slider _bpmSlider;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Slider _timeSlider;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Slider _heartFailureSlider;

		[Token(Token = "0x4002241")]
		private const string PadScrollRectName = "Tofu_Heart_Failure_Pad_Scroll_Rect";

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B410", Offset = "0xD1B410")]
		[SerializeField]
		private string EcgToggleName;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string BpmSliderName;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string TimeSliderName;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string HeartFailureSliderName;

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xE7C390", Offset = "0xE7C390", VA = "0xE7C390")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xE7C488", Offset = "0xE7C488", VA = "0xE7C488")]
		private void SetupFailureControl()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xE7C68C", Offset = "0xE7C68C", VA = "0xE7C68C")]
		private void SetupCcsControl()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xE7C76C", Offset = "0xE7C76C", VA = "0xE7C76C")]
		private void SetupBpmController()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xE7C858", Offset = "0xE7C858", VA = "0xE7C858")]
		private void SetupEcgController()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xE7CAB8", Offset = "0xE7CAB8", VA = "0xE7CAB8")]
		public TofuGuiBridgeHeartFailure()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class TofuGuiBridgeHeartInterior : MonoBehaviour
	{
		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B48C", Offset = "0xD1B48C")]
		public string outSceneName;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string outSceneNameMobileVR;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CombinedManager _combinedManager;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Toggle _pauseToggle;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AppRunner _appRunner;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _outToggle;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B4C4", Offset = "0xD1B4C4")]
		[SerializeField]
		private string PauseToggleName;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string OutToggleName;

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xE7CB40", Offset = "0xE7CB40", VA = "0xE7CB40")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xE7CBF4", Offset = "0xE7CBF4", VA = "0xE7CBF4")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xE7CE00", Offset = "0xE7CE00", VA = "0xE7CE00")]
		private void SetupCombinedManager()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xE7CEEC", Offset = "0xE7CEEC", VA = "0xE7CEEC")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xE7CF4C", Offset = "0xE7CF4C", VA = "0xE7CF4C")]
		public TofuGuiBridgeHeartInterior()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class TofuGuiBridgeLungs : MonoBehaviour
	{
		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B520", Offset = "0xD1B520")]
		public string inSceneName;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LungController _lungController;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _airflowToggle;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AppRunner _appRunner;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _inToggle;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B558", Offset = "0xD1B558")]
		[SerializeField]
		private string AirflowToggleName;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x400225A")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xE7CFB4", Offset = "0xE7CFB4", VA = "0xE7CFB4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xE7D070", Offset = "0xE7D070", VA = "0xE7D070")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xE7D25C", Offset = "0xE7D25C", VA = "0xE7D25C")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xE7D468", Offset = "0xE7D468", VA = "0xE7D468")]
		private void SetupLungController()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xE7D554", Offset = "0xE7D554", VA = "0xE7D554")]
		private void OnInToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xE7D580", Offset = "0xE7D580", VA = "0xE7D580")]
		public TofuGuiBridgeLungs()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class TofuGuiBridgeLungsAlveoli : MonoBehaviour
	{
		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B5B4", Offset = "0xD1B5B4")]
		public string outSceneName;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AlveoliBreathingController _alveoliBreathingController;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _airflowToggle;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AppRunner _appRunner;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _outToggle;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B5EC", Offset = "0xD1B5EC")]
		[SerializeField]
		private string AirflowToggleName;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string OutToggleName;

		[Token(Token = "0x4002266")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xE7D5E8", Offset = "0xE7D5E8", VA = "0xE7D5E8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xE7D6A4", Offset = "0xE7D6A4", VA = "0xE7D6A4")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xE7D890", Offset = "0xE7D890", VA = "0xE7D890")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xE7DA9C", Offset = "0xE7DA9C", VA = "0xE7DA9C")]
		private void SetupAlveoliBreathingController()
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xE7DB88", Offset = "0xE7DB88", VA = "0xE7DB88")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xE7DBB4", Offset = "0xE7DBB4", VA = "0xE7DBB4")]
		public TofuGuiBridgeLungsAlveoli()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class TofuGuiBridgeLungsAlveoliDisease : MonoBehaviour
	{
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B648", Offset = "0xD1B648")]
		public string outSceneName;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AlveoliBreathingController _alveoliBreathingController;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AlveoliDiseaseController _alveoliDiseaseController;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle _airflowToggle;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AppRunner _appRunner;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Toggle _outToggle;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Slider _severitySlider;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B680", Offset = "0xD1B680")]
		[SerializeField]
		private string AirflowToggleName;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string OutToggleName;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string SeveritySliderName;

		[Token(Token = "0x4002275")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xE7DC1C", Offset = "0xE7DC1C", VA = "0xE7DC1C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xE7DCF8", Offset = "0xE7DCF8", VA = "0xE7DCF8")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xE7DEE4", Offset = "0xE7DEE4", VA = "0xE7DEE4")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xE7E0F0", Offset = "0xE7E0F0", VA = "0xE7E0F0")]
		private void SetupAlveoliBreathingController()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xE7E1DC", Offset = "0xE7E1DC", VA = "0xE7E1DC")]
		private void SetupAlveoliDiseaseController()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xE7E2B8", Offset = "0xE7E2B8", VA = "0xE7E2B8")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xE7E2E4", Offset = "0xE7E2E4", VA = "0xE7E2E4")]
		public TofuGuiBridgeLungsAlveoliDisease()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class TofuGuiBridgeLungsAsthma : MonoBehaviour
	{
		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B6EC", Offset = "0xD1B6EC")]
		public string inSceneName;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LungController _lungController;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _airflowToggle;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AppRunner _appRunner;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _inToggle;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Toggle _inhalerToggle;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Image _inhalerToggleFill;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Slider _severitySlider;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B724", Offset = "0xD1B724")]
		[SerializeField]
		private string AirflowToggleName;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B780", Offset = "0xD1B780")]
		[SerializeField]
		private string SeveritySliderName;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string InhalerToggleName;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string InhalerFillToggleName;

		[Token(Token = "0x4002287")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xE7E35C", Offset = "0xE7E35C", VA = "0xE7E35C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xE7E430", Offset = "0xE7E430", VA = "0xE7E430")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xE7E61C", Offset = "0xE7E61C", VA = "0xE7E61C")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xE7E918", Offset = "0xE7E918", VA = "0xE7E918")]
		private void SetupLungController()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xE7EA34", Offset = "0xE7EA34", VA = "0xE7EA34")]
		private void OnInToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xE7EA60", Offset = "0xE7EA60", VA = "0xE7EA60")]
		public TofuGuiBridgeLungsAsthma()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class TofuGuiBridgeLungsBronchial : MonoBehaviour
	{
		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B7EC", Offset = "0xD1B7EC")]
		public string inSceneName;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string outSceneName;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LungController _lungController;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle _airflowToggle;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AppRunner _appRunner;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Toggle _inToggle;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Toggle _outToggle;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B824", Offset = "0xD1B824")]
		[SerializeField]
		private string AirflowToggleName;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string OutToggleName;

		[Token(Token = "0x4002296")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xE7EAF8", Offset = "0xE7EAF8", VA = "0xE7EAF8")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xE7EBB4", Offset = "0xE7EBB4", VA = "0xE7EBB4")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xE7EDA0", Offset = "0xE7EDA0", VA = "0xE7EDA0")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xE7F084", Offset = "0xE7F084", VA = "0xE7F084")]
		private void SetupLungController()
		{
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xE7F160", Offset = "0xE7F160", VA = "0xE7F160")]
		private void OnInToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xE7F18C", Offset = "0xE7F18C", VA = "0xE7F18C")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xE7F1B8", Offset = "0xE7F1B8", VA = "0xE7F1B8")]
		public TofuGuiBridgeLungsBronchial()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class TofuGuiBridgeLungsBronchialAsthma : MonoBehaviour
	{
		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B890", Offset = "0xD1B890")]
		public string inSceneName;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string outSceneName;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LungController _lungController;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle _airflowToggle;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AppRunner _appRunner;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Toggle _inToggle;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Toggle _outToggle;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Toggle _inhalerToggle;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Image _inhalerToggleFill;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Slider _severitySlider;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B8C8", Offset = "0xD1B8C8")]
		[SerializeField]
		private string AirflowToggleName;

		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string OutToggleName;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B934", Offset = "0xD1B934")]
		[SerializeField]
		private string SeveritySliderName;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string InhalerToggleName;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private string InhalerFillToggleName;

		[Token(Token = "0x40022AB")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xE7F230", Offset = "0xE7F230", VA = "0xE7F230")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xE7F304", Offset = "0xE7F304", VA = "0xE7F304")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xE7F4F0", Offset = "0xE7F4F0", VA = "0xE7F4F0")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xE7F8C4", Offset = "0xE7F8C4", VA = "0xE7F8C4")]
		private void SetupLungController()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xE7F9D0", Offset = "0xE7F9D0", VA = "0xE7F9D0")]
		private void OnInToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xE7F9FC", Offset = "0xE7F9FC", VA = "0xE7F9FC")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xE7FA28", Offset = "0xE7FA28", VA = "0xE7FA28")]
		public TofuGuiBridgeLungsBronchialAsthma()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class TofuGuiBridgeLungsBronchialCOPD : MonoBehaviour
	{
		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B9A0", Offset = "0xD1B9A0")]
		public string inSceneName;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string outSceneName;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LungController _lungController;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle _airflowToggle;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AppRunner _appRunner;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Toggle _inToggle;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Toggle _outToggle;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Slider _severitySlider;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1B9D8", Offset = "0xD1B9D8")]
		[SerializeField]
		private string AirflowToggleName;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string OutToggleName;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string SeveritySliderName;

		[Token(Token = "0x40022BC")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xE7FAD0", Offset = "0xE7FAD0", VA = "0xE7FAD0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xE7FBA4", Offset = "0xE7FBA4", VA = "0xE7FBA4")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xE7FD90", Offset = "0xE7FD90", VA = "0xE7FD90")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xE80074", Offset = "0xE80074", VA = "0xE80074")]
		private void SetupLungController()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xE80160", Offset = "0xE80160", VA = "0xE80160")]
		private void OnInToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xE8018C", Offset = "0xE8018C", VA = "0xE8018C")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xE801B8", Offset = "0xE801B8", VA = "0xE801B8")]
		public TofuGuiBridgeLungsBronchialCOPD()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class TofuGuiBridgeLungsCOPD : MonoBehaviour
	{
		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BA54", Offset = "0xD1BA54")]
		public string inSceneName;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LungController _lungController;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _airflowToggle;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AppRunner _appRunner;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _inToggle;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Slider _severitySlider;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BA8C", Offset = "0xD1BA8C")]
		[SerializeField]
		private string AirflowToggleName;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string SeveritySliderName;

		[Token(Token = "0x40022CA")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xE80240", Offset = "0xE80240", VA = "0xE80240")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xE80314", Offset = "0xE80314", VA = "0xE80314")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xE80500", Offset = "0xE80500", VA = "0xE80500")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xE8070C", Offset = "0xE8070C", VA = "0xE8070C")]
		private void SetupLungController()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xE80808", Offset = "0xE80808", VA = "0xE80808")]
		private void OnInToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xE80834", Offset = "0xE80834", VA = "0xE80834")]
		public TofuGuiBridgeLungsCOPD()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class TofuGuiBridgeNeuron : MonoBehaviour
	{
		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TofuGuiController _tofuGuiController;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NeuronController _neuronController;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Slider _speedSlider;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Slider _diseaseSlider;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Toggle _firingToggle;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Image _firingToggleFill;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _breakToggle;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle _resetToggle;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BAF8", Offset = "0xD1BAF8")]
		[SerializeField]
		private string SpeedSliderName;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BB44", Offset = "0xD1BB44")]
		[SerializeField]
		private string FiringToggleName;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string FiringToggleFillName;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BBA0", Offset = "0xD1BBA0")]
		[SerializeField]
		private string DiseaseSliderName;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string breakToggleName;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string resetToggleName;

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xE808AC", Offset = "0xE808AC", VA = "0xE808AC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xE80968", Offset = "0xE80968", VA = "0xE80968")]
		private void SetupSlider()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xE80AB8", Offset = "0xE80AB8", VA = "0xE80AB8")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xE80BD8", Offset = "0xE80BD8", VA = "0xE80BD8")]
		private void SetupNeuronController()
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xE80D04", Offset = "0xE80D04", VA = "0xE80D04")]
		public TofuGuiBridgeNeuron()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class TofuGuiBridgePancreas : MonoBehaviour
	{
		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PancreasController _pancreasController;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x40022DE")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xE80DAC", Offset = "0xE80DAC", VA = "0xE80DAC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xE80E60", Offset = "0xE80E60", VA = "0xE80E60")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xE8104C", Offset = "0xE8104C", VA = "0xE8104C")]
		private void SetupSlider()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xE81050", Offset = "0xE81050", VA = "0xE81050")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xE81054", Offset = "0xE81054", VA = "0xE81054")]
		private void SetupStomachController()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xE81120", Offset = "0xE81120", VA = "0xE81120")]
		public TofuGuiBridgePancreas()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class TofuGuiBridgeSkinEczema : MonoBehaviour
	{
		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SkinEczemaController _skinEczemaController;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Slider _timeSlider;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _fillAtopicToggle;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle _fillContactToggle;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _fillDyshridoticToggle;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AppRunner _appRunner;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BC0C", Offset = "0xD1BC0C")]
		[SerializeField]
		private string TimeSliderName;

		[Token(Token = "0x40022EA")]
		private const string FillAtopicToggleName = "Tofu_Fill_Toggle_Atopic";

		[Token(Token = "0x40022EB")]
		private const string FillContactToggleName = "Tofu_Fill_Toggle_Contact";

		[Token(Token = "0x40022EC")]
		private const string FillDyshridoticToggleName = "Tofu_Fill_Toggle_Dyshridotic";

		[Token(Token = "0x40022ED")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xE81128", Offset = "0xE81128", VA = "0xE81128")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xE81260", Offset = "0xE81260", VA = "0xE81260")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xE81698", Offset = "0xE81698", VA = "0xE81698")]
		private void SetupskinEczemaController()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xE8144C", Offset = "0xE8144C", VA = "0xE8144C")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xE817B4", Offset = "0xE817B4", VA = "0xE817B4")]
		public TofuGuiBridgeSkinEczema()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class TofuGuiBridgeSmallIntestine : MonoBehaviour
	{
		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SmallIntestineController _smallIntestineController;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InfoBoxController _infoBoxController;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Slider _timeSlider;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Toggle _normalToggle;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _singleToggle;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Toggle _contractionToggle;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Toggle _resetToggle;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BC58", Offset = "0xD1BC58")]
		[SerializeField]
		private string TimeSliderName;

		[Token(Token = "0x40022FA")]
		private const string NormalToggleName = "Tofu_Fill_Toggle_Normal";

		[Token(Token = "0x40022FB")]
		private const string SingleToggleName = "Tofu_Fill_Toggle_Single";

		[Token(Token = "0x40022FC")]
		private const string ContractionToggleName = "Tofu_Fill_Toggle_Contraction";

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string ResetToggleName;

		[Token(Token = "0x40022FE")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xE8180C", Offset = "0xE8180C", VA = "0xE8180C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xE8190C", Offset = "0xE8190C", VA = "0xE8190C")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xE81E1C", Offset = "0xE81E1C", VA = "0xE81E1C")]
		private void SetupSmallIntestineController()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xE81AF8", Offset = "0xE81AF8", VA = "0xE81AF8")]
		private void SetupSlider()
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xE81BC4", Offset = "0xE81BC4", VA = "0xE81BC4")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xE81F48", Offset = "0xE81F48", VA = "0xE81F48")]
		public TofuGuiBridgeSmallIntestine()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class TofuGuiBridgeStomach : MonoBehaviour
	{
		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BCB4", Offset = "0xD1BCB4")]
		public string inSceneName;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string inSceneNameMobileVR;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stomach_Diabetes _stomachController;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Slider _speedSlider;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Toggle _mealToggle;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Image _mealFill;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AppRunner _appRunner;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Toggle _inToggle;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BCEC", Offset = "0xD1BCEC")]
		[SerializeField]
		private string SpeedSliderName;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BD48", Offset = "0xD1BD48")]
		[SerializeField]
		private string MealToggleName;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string MealToggleFillName;

		[Token(Token = "0x400230F")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xE81FB0", Offset = "0xE81FB0", VA = "0xE81FB0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xE82074", Offset = "0xE82074", VA = "0xE82074")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xE82260", Offset = "0xE82260", VA = "0xE82260")]
		private void SetupSlider()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xE8232C", Offset = "0xE8232C", VA = "0xE8232C")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xE82650", Offset = "0xE82650", VA = "0xE82650")]
		private void OnInToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xE82554", Offset = "0xE82554", VA = "0xE82554")]
		private void SetupStomachController()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xE826B0", Offset = "0xE826B0", VA = "0xE826B0")]
		public TofuGuiBridgeStomach()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class TofuGuiBridgeStomachInterior : MonoBehaviour
	{
		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BDA4", Offset = "0xD1BDA4")]
		public string outSceneName;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string outSceneNameMobileVR;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AppRunner _appRunner;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Toggle _outToggle;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BDDC", Offset = "0xD1BDDC")]
		[SerializeField]
		private string OutToggleName;

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xE82738", Offset = "0xE82738", VA = "0xE82738")]
		public void Start()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xE827E4", Offset = "0xE827E4", VA = "0xE827E4")]
		private void SetupToggle()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xE82978", Offset = "0xE82978", VA = "0xE82978")]
		private void OnOutToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xE829D8", Offset = "0xE829D8", VA = "0xE829D8")]
		public TofuGuiBridgeStomachInterior()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class TofuGuiBridgeUlcerativeColitis : MonoBehaviour
	{
		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZoneManager _zoneManager;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TofuPadController _tofuPadController;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LinearLargeIntestineFXController _colonController;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SplineBlendShapeControl _blendShapeControl;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Slider _severitySlider;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Slider _locationSlider;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LocalizeStringEvent _locationLabel;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AppRunner _appRunner;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Toggle _inToggle;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Toggle _waterToggle;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BE28", Offset = "0xD1BE28")]
		[SerializeField]
		private string SeveritySliderName;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string LocationSliderName;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string LocationSliderLabelName;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string WaterToggleName;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string InToggleName;

		[Token(Token = "0x4002327")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xE82A30", Offset = "0xE82A30", VA = "0xE82A30")]
		public void Start()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xE82BBC", Offset = "0xE82BBC", VA = "0xE82BBC")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xE82F00", Offset = "0xE82F00", VA = "0xE82F00")]
		private void SetupColonController()
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xE82DA8", Offset = "0xE82DA8", VA = "0xE82DA8")]
		private void SetupToggles()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xE83100", Offset = "0xE83100", VA = "0xE83100")]
		public TofuGuiBridgeUlcerativeColitis()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class TofuGuiBridgeVirusInfluenza : MonoBehaviour
	{
		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TofuGuiController _tofuGuiController;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _rnaZoneId;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VirusInfluenzaController _virusController;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ZoneManager _zoneManager;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _zoneManagerObject;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TofuPadController _tofuPadController;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Toggle _rnaToggle;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BEB4", Offset = "0xD1BEB4")]
		[SerializeField]
		private string RnaToggleName;

		[Token(Token = "0x4002330")]
		private const string ZoneManager = "ZoneManager";

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xE83198", Offset = "0xE83198", VA = "0xE83198")]
		public void Start()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xE83254", Offset = "0xE83254", VA = "0xE83254")]
		private void SetupPad()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xE83440", Offset = "0xE83440", VA = "0xE83440")]
		private void SetupToggle()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xE8364C", Offset = "0xE8364C", VA = "0xE8364C")]
		private void OnRNAToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xE83570", Offset = "0xE83570", VA = "0xE83570")]
		private void SetupVirusController()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xE83738", Offset = "0xE83738", VA = "0xE83738")]
		public TofuGuiBridgeVirusInfluenza()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class HomeGuiController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E6C8", Offset = "0xD0E6C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4003040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4003041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<ToggleWithMultipleTargetGraphic> <>9__13_0;

			[Token(Token = "0x4003042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__22_0;

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0xEF8BE4", Offset = "0xEF8BE4", VA = "0xEF8BE4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0xEF8BEC", Offset = "0xEF8BEC", VA = "0xEF8BEC")]
			internal bool <Awake>b__13_0(ToggleWithMultipleTargetGraphic component)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0xEF8C5C", Offset = "0xEF8C5C", VA = "0xEF8C5C")]
			internal bool <ActivateTutorial>b__22_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E6D8", Offset = "0xD0E6D8")]
		private sealed class <ActivateTutorial>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomeGuiController <>4__this;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B61")]
				[Address(RVA = "0xEF8EC8", Offset = "0xEF8EC8", VA = "0xEF8EC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B63")]
				[Address(RVA = "0xEF8F30", Offset = "0xEF8F30", VA = "0xEF8F30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0xEF8A64", Offset = "0xEF8A64", VA = "0xEF8A64")]
			[DebuggerHidden]
			public <ActivateTutorial>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0xEF8CE0", Offset = "0xEF8CE0", VA = "0xEF8CE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B60")]
			[Address(RVA = "0xEF8CE4", Offset = "0xEF8CE4", VA = "0xEF8CE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B62")]
			[Address(RVA = "0xEF8ED0", Offset = "0xEF8ED0", VA = "0xEF8ED0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E6E8", Offset = "0xD0E6E8")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4003046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup canvasGroup;

			[Token(Token = "0x6002B64")]
			[Address(RVA = "0xEF8AF4", Offset = "0xEF8AF4", VA = "0xEF8AF4")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6002B65")]
			[Address(RVA = "0xEF8C80", Offset = "0xEF8C80", VA = "0xEF8C80")]
			internal void <HideCanvasGroup>b__0()
			{
			}

			[Token(Token = "0x6002B66")]
			[Address(RVA = "0xEF8CB0", Offset = "0xEF8CB0", VA = "0xEF8CB0")]
			internal void <HideCanvasGroup>b__1()
			{
			}
		}

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SystemSubscriptionController _systemSubscriptionController;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool showAtStart;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _showedTutorial;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float blurAmount;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int BlurSize;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _blurMat;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BF10", Offset = "0xD1BF10")]
		[SerializeField]
		private float transitionInDuration;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float transitionOutDuration;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1BF6C", Offset = "0xD1BF6C")]
		[SerializeField]
		private CanvasGroup fadedBackground;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CanvasGroup homePanel;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Toggle homeToggle;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InfoBoxController infoBox;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SrlToggle[] navigationButtons;

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xEF7CC8", Offset = "0xEF7CC8", VA = "0xEF7CC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xEF7EAC", Offset = "0xEF7EAC", VA = "0xEF7EAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xEF826C", Offset = "0xEF826C", VA = "0xEF826C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xEF8358", Offset = "0xEF8358", VA = "0xEF8358")]
		public void ShowHomePanel(bool show)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xEF84B0", Offset = "0xEF84B0", VA = "0xEF84B0")]
		public void ResetNavigationButtons(bool inReset)
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xEF80F4", Offset = "0xEF80F4", VA = "0xEF80F4")]
		private void ShowHomePanel()
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xEF8364", Offset = "0xEF8364", VA = "0xEF8364")]
		private void HideHomePanel()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xEF89B0", Offset = "0xEF89B0", VA = "0xEF89B0")]
		internal void ShowUpgradePanel()
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xEF8240", Offset = "0xEF8240", VA = "0xEF8240")]
		public void ShowTutorialPanel()
		{
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xEF89F4", Offset = "0xEF89F4", VA = "0xEF89F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26158", Offset = "0xD26158")]
		private IEnumerator ActivateTutorial()
		{
			return null;
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xEF8A90", Offset = "0xEF8A90", VA = "0xEF8A90")]
		public void ShowSettingsPanel()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xEF8560", Offset = "0xEF8560", VA = "0xEF8560")]
		private void ShowCanvasGroup(CanvasGroup canvasGroup, bool fade, bool scale)
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xEF8808", Offset = "0xEF8808", VA = "0xEF8808")]
		private void HideCanvasGroup(CanvasGroup canvasGroup, bool fade, bool scale)
		{
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xEF8AFC", Offset = "0xEF8AFC", VA = "0xEF8AFC")]
		private void OnSubscriptionDidChange()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xEF8088", Offset = "0xEF8088", VA = "0xEF8088")]
		private void SetUpgradeToggleVisibility()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xEF7EA4", Offset = "0xEF7EA4", VA = "0xEF7EA4")]
		private bool DeviceCanHandleBlur()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xEF8B00", Offset = "0xEF8B00", VA = "0xEF8B00")]
		public HomeGuiController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000460")]
	public class HomeGuiTrackedToggle
	{
		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Toggle toggle;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool wasOn;

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xEF8F38", Offset = "0xEF8F38", VA = "0xEF8F38")]
		public HomeGuiTrackedToggle()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class LeftBarVisibilityControl : MonoBehaviour
	{
		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LeftBarVisibilityControl Instance;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HomeGuiTrackedToggle[] trackedToggles;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject leftNavBar;

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x22A46F8", Offset = "0x22A46F8", VA = "0x22A46F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x22A4804", Offset = "0x22A4804", VA = "0x22A4804")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x22A48A0", Offset = "0x22A48A0", VA = "0x22A48A0")]
		public void HideLeftBar()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x22A4A54", Offset = "0x22A4A54", VA = "0x22A4A54")]
		public void ShowLeftBar()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x22A48A8", Offset = "0x22A48A8", VA = "0x22A48A8")]
		public void SetLeftBarVisible(bool value)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x22A4A5C", Offset = "0x22A4A5C", VA = "0x22A4A5C")]
		public LeftBarVisibilityControl()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class LibraryGridView : LibraryViewBase
	{
		[Token(Token = "0x20007CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E6F8", Offset = "0xD0E6F8")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4003047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TofuLibraryOrgan tempOrgan;

			[Token(Token = "0x4003048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LibraryGridView <>4__this;

			[Token(Token = "0x6002B67")]
			[Address(RVA = "0x22A5320", Offset = "0x22A5320", VA = "0x22A5320")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002B68")]
			[Address(RVA = "0x22A5D2C", Offset = "0x22A5D2C", VA = "0x22A5D2C")]
			internal void <CreateMainMenuEntry>b__0()
			{
			}
		}

		[Token(Token = "0x20007CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E708", Offset = "0xD0E708")]
		private sealed class <>c__DisplayClass18_1
		{
			[Token(Token = "0x4003049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TofuLibraryOrgan tempOrgan;

			[Token(Token = "0x400304A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LibraryGridView <>4__this;

			[Token(Token = "0x6002B69")]
			[Address(RVA = "0x22A5328", Offset = "0x22A5328", VA = "0x22A5328")]
			public <>c__DisplayClass18_1()
			{
			}

			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0x22A5D4C", Offset = "0x22A5D4C", VA = "0x22A5D4C")]
			internal void <CreateMainMenuEntry>b__1(bool x)
			{
			}
		}

		[Token(Token = "0x20007CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E718", Offset = "0xD0E718")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400304B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LibraryGridView <>4__this;

			[Token(Token = "0x400304C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool requiresUpgrade;

			[Token(Token = "0x400304D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneToLoad;

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0x22A5A1C", Offset = "0x22A5A1C", VA = "0x22A5A1C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0x22A5D74", Offset = "0x22A5D74", VA = "0x22A5D74")]
			internal void <CreateListEntry>b__0()
			{
			}

			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0x22A5DE0", Offset = "0x22A5DE0", VA = "0x22A5DE0")]
			internal void <CreateListEntry>b__1(bool x)
			{
			}
		}

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<LibraryListItem> _submenulistItems;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C028", Offset = "0xD1C028")]
		[SerializeField]
		private GameObject mainMenuContainer;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform mainMenuContent;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform organEntryPrefab;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C094", Offset = "0xD1C094")]
		[SerializeField]
		private Transform listViewContainer;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ScrollRect scrollRect;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private LocalizeStringEvent listHeader;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform listSubcategoryHeaderPrefab;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform listEntryPrefab;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform listEntrySelectedPrefab;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform listEntryInsetPrefab;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Transform listEntryInsetSelectedPrefab;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject noFavoritesMessage;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C160", Offset = "0xD1C160")]
		[SerializeField]
		private GameObject welcomeContainer;

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x22A4A64", Offset = "0x22A4A64", VA = "0x22A4A64", Slot = "4")]
		internal override void ClearList()
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x22A4A8C", Offset = "0x22A4A8C", VA = "0x22A4A8C")]
		private void ClearList(List<LibraryListItem> listToClear)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x22A4CB4", Offset = "0x22A4CB4", VA = "0x22A4CB4", Slot = "5")]
		internal override void InitList()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x22A4DAC", Offset = "0x22A4DAC", VA = "0x22A4DAC")]
		private void CreateMainMenu()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x22A4F04", Offset = "0x22A4F04", VA = "0x22A4F04")]
		private void CreateMainMenuEntry(TofuLibraryOrgan organ)
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x22A5330", Offset = "0x22A5330", VA = "0x22A5330")]
		private void CreateSubmenu(TofuLibraryOrgan organ)
		{
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x22A53DC", Offset = "0x22A53DC", VA = "0x22A53DC")]
		private void CreateListSubmenu(TofuLibraryOrgan organ)
		{
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x22A57AC", Offset = "0x22A57AC", VA = "0x22A57AC")]
		private void CreateListEntry(Transform prefab, string displayedText, LocalizedString localizedString, TofuLibraryOrgan organ, TofuLibraryCondition condition, bool requiresUpgrade)
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x22A5A24", Offset = "0x22A5A24", VA = "0x22A5A24", Slot = "6")]
		internal override void OnFavoritesToggle(bool isOn)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x22A555C", Offset = "0x22A555C", VA = "0x22A555C")]
		private void FilterSubmenuFavorites()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x22A5C50", Offset = "0x22A5C50", VA = "0x22A5C50")]
		public LibraryGridView()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class LibraryGuiController : MonoBehaviour
	{
		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SystemSubscriptionController _systemSubscriptionController;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TofuLibraryOrgan[] organs;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1C1AC", Offset = "0xD1C1AC")]
		[SerializeField]
		private SrlToggle favoritesToggle;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LibraryGridView gridView;

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x22A5E0C", Offset = "0x22A5E0C", VA = "0x22A5E0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x22A5F5C", Offset = "0x22A5F5C", VA = "0x22A5F5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x22A6000", Offset = "0x22A6000", VA = "0x22A6000")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x22A6028", Offset = "0x22A6028", VA = "0x22A6028")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x22A5EB4", Offset = "0x22A5EB4", VA = "0x22A5EB4")]
		private bool FavoritesAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x22A60AC", Offset = "0x22A60AC", VA = "0x22A60AC")]
		private void OnFavoritesToggle(bool isOn)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x22A612C", Offset = "0x22A612C", VA = "0x22A612C")]
		public LibraryGuiController()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public class LibraryListInsetMarker : MonoBehaviour
	{
		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform image;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayoutElement layoutElement;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int shortHeight;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int longHeight;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _baseHeight;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _itemAboveBaseHeight;

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x22A6134", Offset = "0x22A6134", VA = "0x22A6134")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x22A6370", Offset = "0x22A6370", VA = "0x22A6370")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x22A6374", Offset = "0x22A6374", VA = "0x22A6374")]
		public void UpdateVisibility()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x22A6270", Offset = "0x22A6270", VA = "0x22A6270")]
		private Transform GetObjectAbove()
		{
			return null;
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x22A65B8", Offset = "0x22A65B8", VA = "0x22A65B8")]
		public LibraryListInsetMarker()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public class LibraryListItem : MonoBehaviour
	{
		[Token(Token = "0x20007CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E728", Offset = "0xD0E728")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x400304E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LibraryListItem <>4__this;

			[Token(Token = "0x400304F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TofuLibraryOrgan organ;

			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0x22A7098", Offset = "0x22A7098", VA = "0x22A7098")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0x22A70A8", Offset = "0x22A70A8", VA = "0x22A70A8")]
			internal bool <DisplayOrganWithFavorites>b__0(TofuLibraryCondition condition)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _favorite;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _displayWithFavorites;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool _requiresUpgrade;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuLibraryOrgan _organ;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TofuLibraryCondition _condition;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SystemSubscriptionController _systemSubscriptionController;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _favoritesPlayerPrefKey;

		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SrlToggle favoriteToggle;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button button;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SrlToggle toggleButton;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text text;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LocalizeStringEvent localizeStringEvent;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image upgradeBadge;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Image sprite;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LibraryListInsetMarker insetMarker;

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x22A65CC", Offset = "0x22A65CC", VA = "0x22A65CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x22A6760", Offset = "0x22A6760", VA = "0x22A6760")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x22A6848", Offset = "0x22A6848", VA = "0x22A6848")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x22A68E0", Offset = "0x22A68E0", VA = "0x22A68E0")]
		private void OnFavoriteToggle(bool isOn)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x22A69B4", Offset = "0x22A69B4", VA = "0x22A69B4")]
		private void SetText(string newText, LocalizedString localizedString)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x22A68E8", Offset = "0x22A68E8", VA = "0x22A68E8")]
		private void SetFavorite(bool newFavorite)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x22A5280", Offset = "0x22A5280", VA = "0x22A5280")]
		internal void Init(string displayedText, LocalizedString localizedString, TofuLibraryOrgan organ, TofuLibraryCondition condition, bool requiresUpgrade)
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x22A5304", Offset = "0x22A5304", VA = "0x22A5304")]
		internal void SetSprite(Sprite newSprite)
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x22A6BF0", Offset = "0x22A6BF0", VA = "0x22A6BF0")]
		private void RecalculateFavorites()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x22A5B78", Offset = "0x22A5B78", VA = "0x22A5B78")]
		internal bool FilterFavorites(bool favoritesFilterOn)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x22A6FD4", Offset = "0x22A6FD4", VA = "0x22A6FD4")]
		private bool DisplayOrganWithFavorites(TofuLibraryOrgan organ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x22A6DEC", Offset = "0x22A6DEC", VA = "0x22A6DEC")]
		private bool ConditionIsFavorite(TofuLibraryOrgan organ, TofuLibraryCondition condition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x22A6E14", Offset = "0x22A6E14", VA = "0x22A6E14")]
		private bool FavoriteChildSubconditionExists(TofuLibraryOrgan organ, TofuLibraryCondition condition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x22A6CEC", Offset = "0x22A6CEC", VA = "0x22A6CEC")]
		private void RefreshUpgradeBadge()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x22A6598", Offset = "0x22A6598", VA = "0x22A6598")]
		internal bool IsSubcondition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x22A6A78", Offset = "0x22A6A78", VA = "0x22A6A78")]
		private string GetFavoritePlayerPrefKey(TofuLibraryOrgan organ, TofuLibraryCondition condition)
		{
			return null;
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x22A70A0", Offset = "0x22A70A0", VA = "0x22A70A0")]
		public LibraryListItem()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class LibraryListView : LibraryViewBase
	{
		[Token(Token = "0x20007CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E738", Offset = "0xD0E738")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4003050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LibraryListView <>4__this;

			[Token(Token = "0x4003051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool requiresUpgrade;

			[Token(Token = "0x4003052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneToLoad;

			[Token(Token = "0x6002B70")]
			[Address(RVA = "0x22A7864", Offset = "0x22A7864", VA = "0x22A7864")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002B71")]
			[Address(RVA = "0x22A7870", Offset = "0x22A7870", VA = "0x22A7870")]
			internal void <CreateListEntry>b__0()
			{
			}

			[Token(Token = "0x6002B72")]
			[Address(RVA = "0x22A7894", Offset = "0x22A7894", VA = "0x22A7894")]
			internal void <CreateListEntry>b__1(bool x)
			{
			}
		}

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C288", Offset = "0xD1C288")]
		[SerializeField]
		private Transform listViewContainer;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform listHeaderPrefab;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform listSubcategoryHeaderPrefab;

		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform listEntryPrefab;

		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform listEntrySelectedPrefab;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform listEntryInsetPrefab;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform listEntryInsetSelectedPrefab;

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x22A70E4", Offset = "0x22A70E4", VA = "0x22A70E4", Slot = "4")]
		internal override void ClearList()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x22A7310", Offset = "0x22A7310", VA = "0x22A7310", Slot = "5")]
		internal override void InitList()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x22A75F4", Offset = "0x22A75F4", VA = "0x22A75F4")]
		private void CreateListEntry(Transform prefab, string displayedText, LocalizedString localizedString, TofuLibraryOrgan organ, TofuLibraryCondition condition, bool requiresUpgrade)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x22A786C", Offset = "0x22A786C", VA = "0x22A786C")]
		public LibraryListView()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class LibraryViewBase : MonoBehaviour
	{
		[Token(Token = "0x20007CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E748", Offset = "0xD0E748")]
		private sealed class <DelayedInitList>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LibraryViewBase <>4__this;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B76")]
				[Address(RVA = "0x22A7F8C", Offset = "0x22A7F8C", VA = "0x22A7F8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B78")]
				[Address(RVA = "0x22A7FF4", Offset = "0x22A7FF4", VA = "0x22A7FF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B73")]
			[Address(RVA = "0x22A7D10", Offset = "0x22A7D10", VA = "0x22A7D10")]
			[DebuggerHidden]
			public <DelayedInitList>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002B74")]
			[Address(RVA = "0x22A7F00", Offset = "0x22A7F00", VA = "0x22A7F00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B75")]
			[Address(RVA = "0x22A7F04", Offset = "0x22A7F04", VA = "0x22A7F04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B77")]
			[Address(RVA = "0x22A7F94", Offset = "0x22A7F94", VA = "0x22A7F94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected LibraryGuiController library;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SystemSubscriptionController _systemSubscriptionController;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AppRunner _appRunner;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected readonly List<LibraryListItem> _listItems;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool _filterFavorites;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected string _currentSceneName;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected string _currentOrganName;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected HomeGuiController homeController;

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x22A78C0", Offset = "0x22A78C0", VA = "0x22A78C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x22A79CC", Offset = "0x22A79CC", VA = "0x22A79CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x22A7AB8", Offset = "0x22A7AB8", VA = "0x22A7AB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x22A7B08", Offset = "0x22A7B08", VA = "0x22A7B08")]
		private void DetermineCurrentScene()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x22A7C6C", Offset = "0x22A7C6C", VA = "0x22A7C6C", Slot = "4")]
		internal virtual void ClearList()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x22A7C70", Offset = "0x22A7C70", VA = "0x22A7C70", Slot = "5")]
		internal virtual void InitList()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x22A7C74", Offset = "0x22A7C74", VA = "0x22A7C74")]
		private void SubscriptionChanged()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x22A7CA0", Offset = "0x22A7CA0", VA = "0x22A7CA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD261BC", Offset = "0xD261BC")]
		private IEnumerator DelayedInitList()
		{
			return null;
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x22A7D3C", Offset = "0x22A7D3C", VA = "0x22A7D3C", Slot = "6")]
		internal virtual void OnFavoritesToggle(bool isOn)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x22A5D98", Offset = "0x22A5D98", VA = "0x22A5D98")]
		protected void OnButtonClick(bool showUpgradePanel, string sceneToLoad)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x22A7E48", Offset = "0x22A7E48", VA = "0x22A7E48")]
		private void LoadScene(string sceneToLoad)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x22A5670", Offset = "0x22A5670", VA = "0x22A5670")]
		protected bool ConditionRequiresUpgrade(TofuLibraryCondition condition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x22A51D8", Offset = "0x22A51D8", VA = "0x22A51D8")]
		protected bool OrganContainsAvailableContent(TofuLibraryOrgan organ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x22A5CBC", Offset = "0x22A5CBC", VA = "0x22A5CBC")]
		public LibraryViewBase()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class OnEnableUtility : MonoBehaviour
	{
		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onEnable;

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x22ADE50", Offset = "0x22ADE50", VA = "0x22ADE50")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x22ADE64", Offset = "0x22ADE64", VA = "0x22ADE64")]
		public OnEnableUtility()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class PunchScale : MonoBehaviour
	{
		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float punch;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int vibrato;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float elasticity;

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x22AEE64", Offset = "0x22AEE64", VA = "0x22AEE64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD26220", Offset = "0xD26220")]
		public void Punch()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x22AEF00", Offset = "0x22AEF00", VA = "0x22AEF00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x22AEF3C", Offset = "0x22AEF3C", VA = "0x22AEF3C")]
		public PunchScale()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class SetAsLastSibling : MonoBehaviour
	{
		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x22B8638", Offset = "0x22B8638", VA = "0x22B8638")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x22B865C", Offset = "0x22B865C", VA = "0x22B865C")]
		public SetAsLastSibling()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public enum SliderStyle
	{
		[Token(Token = "0x400237F")]
		Basic,
		[Token(Token = "0x4002380")]
		Stoplight,
		[Token(Token = "0x4002381")]
		Waypoint
	}
	[Token(Token = "0x200046C")]
	public enum TextVisibilityStyle
	{
		[Token(Token = "0x4002383")]
		PermanentlyInvisible,
		[Token(Token = "0x4002384")]
		PermanentlyVisible,
		[Token(Token = "0x4002385")]
		FadeWithInteraction,
		[Token(Token = "0x4002386")]
		AppearWithInteraction
	}
	[Token(Token = "0x200046D")]
	public class SrlSlider : Slider
	{
		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public SrlSliderColors normalColors;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public SrlSliderColors disabledColors;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private SrlSliderColors _colorPalette;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public SliderStyle sliderStyle;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public TextVisibilityStyle footerVisibility;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public float footerTransitionDuration;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public SrlSliderLayout footerLayout;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public SrlSliderLayout noFooterLayout;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float _paddingTop;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float _paddingBottom;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private bool _transitionInProgress;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		public bool threshold;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float thresholdValue;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public string[] waypoints;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Image interactiveArea;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Image backgroundImage;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Image fillImage;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Image disabledFillImage;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Image handleImage;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Image thresholdImage;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public string title;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public LocalizedString localizedTitle;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public LocalizeStringEvent localizeTitleEvent;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public TextMeshProUGUI titleText;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public string leftLabel;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public LocalizedString localizedLeftLabel;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public LocalizeStringEvent localizeLeftLabelEvent;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public string rightLabel;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public LocalizedString localizedRightLabel;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public LocalizeStringEvent localizeRightLabelEvent;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public CanvasGroup footerCanvasGroup;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public GameObject buttonContainer;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public TextMeshProUGUI[] footerText;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public LocalizeStringEvent[] footerLocalizationEvents;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public VerticalLayoutGroup verticalLayoutGroup;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public GameObject waypointContainer;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public GameObject[] waypointMarkers;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public GameObject[] waypointSpacers;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public SrlSliderStyle basicStyle;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public SrlSliderStyle stoplightStyle;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public SrlSliderStyle waypointStyle;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public bool snapToNearestInt;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x289")]
		private bool _pointerDown;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28A")]
		private bool _pointerIn;

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xE6CB40", Offset = "0xE6CB40", VA = "0xE6CB40", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xE6CD70", Offset = "0xE6CD70", VA = "0xE6CD70", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xE6CE18", Offset = "0xE6CE18", VA = "0xE6CE18", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xE6D178", Offset = "0xE6D178", VA = "0xE6D178", Slot = "52")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xE6D280", Offset = "0xE6D280", VA = "0xE6D280", Slot = "48")]
		public override void SetValueWithoutNotify(float input)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xE6CF74", Offset = "0xE6CF74", VA = "0xE6CF74")]
		public void UpdateFill(float newValue)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xE6D4E4", Offset = "0xE6D4E4", VA = "0xE6D4E4", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xE6D56C", Offset = "0xE6D56C", VA = "0xE6D56C")]
		private void ApplyColorPalette()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xE6D7A4", Offset = "0xE6D7A4", VA = "0xE6D7A4", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xE6D8E4", Offset = "0xE6D8E4", VA = "0xE6D8E4", Slot = "54")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xE6D8F8", Offset = "0xE6D8F8", VA = "0xE6D8F8", Slot = "33")]
		public override void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xE6D7EC", Offset = "0xE6D7EC", VA = "0xE6D7EC")]
		private bool PointerIsWithinInteractiveArea(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xE6CE5C", Offset = "0xE6CE5C", VA = "0xE6CE5C")]
		private void InitFooter()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xE6D2C0", Offset = "0xE6D2C0", VA = "0xE6D2C0")]
		private void UpdateFooter()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xE6DCA8", Offset = "0xE6DCA8", VA = "0xE6DCA8", Slot = "34")]
		public override void OnPointerEnter(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xE6E004", Offset = "0xE6E004", VA = "0xE6E004", Slot = "35")]
		public override void OnPointerExit(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xE6E030", Offset = "0xE6E030", VA = "0xE6E030")]
		private void OnFooterTransitionComplete()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xE6D9D4", Offset = "0xE6D9D4", VA = "0xE6D9D4")]
		private void InteractionOverTransition()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xE6E038", Offset = "0xE6E038", VA = "0xE6E038")]
		public void OnLeftLabelChangedInInspector(string newLabel)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xE6E0F4", Offset = "0xE6E0F4", VA = "0xE6E0F4")]
		public void OnRightLabelChangedInInspector(string newLabel)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xE6D37C", Offset = "0xE6D37C", VA = "0xE6D37C")]
		public void OnTitleChangedInInspector(string newTitle)
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xE6E1B8", Offset = "0xE6E1B8", VA = "0xE6E1B8")]
		public void OnThresholdChangedInInspector(bool newValue)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xE6E1F0", Offset = "0xE6E1F0", VA = "0xE6E1F0")]
		public void UpdateThresholdValue(float newValue)
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xE6E428", Offset = "0xE6E428", VA = "0xE6E428")]
		public void RefreshThresholdMarker()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xE6E430", Offset = "0xE6E430", VA = "0xE6E430")]
		public void OnFooterVisibilityChangedInInspector(TextVisibilityStyle newFooterVisibility)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xE6E5E8", Offset = "0xE6E5E8", VA = "0xE6E5E8")]
		public void OnStyleChangedInInspector(SliderStyle newStyle)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xE6E6B8", Offset = "0xE6E6B8", VA = "0xE6E6B8")]
		public void OnWaypointsChangedInInspector()
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xE6CBF0", Offset = "0xE6CBF0", VA = "0xE6CBF0")]
		public void LinkLocalizationComponents()
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xE6E568", Offset = "0xE6E568", VA = "0xE6E568")]
		private void ShowFooterNow()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xE6E4E8", Offset = "0xE6E4E8", VA = "0xE6E4E8")]
		private void HideFooterNow()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xE6D1B4", Offset = "0xE6D1B4", VA = "0xE6D1B4")]
		private void UpdateVerticalLayoutGroup()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xE6DF88", Offset = "0xE6DF88", VA = "0xE6DF88")]
		private void ForceRefreshVerticalLayoutGroup()
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xE6E0F0", Offset = "0xE6E0F0", VA = "0xE6E0F0")]
		private static void SetDirty(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xE6E87C", Offset = "0xE6E87C", VA = "0xE6E87C")]
		public SrlSlider()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xE6E974", Offset = "0xE6E974", VA = "0xE6E974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26258", Offset = "0xD26258")]
		private bool <PointerIsWithinInteractiveArea>b__55_0(RaycastResult result)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xE6EA0C", Offset = "0xE6EA0C", VA = "0xE6EA0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26268", Offset = "0xD26268")]
		private float <OnPointerEnter>b__58_0()
		{
			return default(float);
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xE6EA14", Offset = "0xE6EA14", VA = "0xE6EA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26278", Offset = "0xD26278")]
		private void <OnPointerEnter>b__58_1(float x)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xE6EA1C", Offset = "0xE6EA1C", VA = "0xE6EA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26288", Offset = "0xD26288")]
		private float <OnPointerEnter>b__58_2()
		{
			return default(float);
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xE6EA24", Offset = "0xE6EA24", VA = "0xE6EA24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26298", Offset = "0xD26298")]
		private void <OnPointerEnter>b__58_3(float x)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xE6EA2C", Offset = "0xE6EA2C", VA = "0xE6EA2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD262A8", Offset = "0xD262A8")]
		private float <InteractionOverTransition>b__61_0()
		{
			return default(float);
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xE6EA34", Offset = "0xE6EA34", VA = "0xE6EA34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD262B8", Offset = "0xD262B8")]
		private void <InteractionOverTransition>b__61_1(float x)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xE6EA3C", Offset = "0xE6EA3C", VA = "0xE6EA3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD262C8", Offset = "0xD262C8")]
		private float <InteractionOverTransition>b__61_2()
		{
			return default(float);
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xE6EA44", Offset = "0xE6EA44", VA = "0xE6EA44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD262D8", Offset = "0xD262D8")]
		private void <InteractionOverTransition>b__61_3(float x)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200046E")]
	public class SrlSliderColors
	{
		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color sliderFill;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color sliderBackground;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient backgroundGradient;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color belowThreshold;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color aboveThreshold;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color handle;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color titleText;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color footerText;

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xE6EA4C", Offset = "0xE6EA4C", VA = "0xE6EA4C")]
		public SrlSliderColors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200046F")]
	public class SrlSliderLayout
	{
		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int paddingTop;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int paddingBottom;

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xE6EA54", Offset = "0xE6EA54", VA = "0xE6EA54")]
		public SrlSliderLayout()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000470")]
	public class SrlSliderStyle
	{
		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite foregroundSprite;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color foregroundColor;

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xE6EA5C", Offset = "0xE6EA5C", VA = "0xE6EA5C")]
		public SrlSliderStyle()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class SrlToggle : Toggle, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
		public bool playingEffect;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
		public bool alwaysShowFillImage;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SrlToggleColors disabledColors;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public SrlToggleColors defaultColors;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public SrlToggleColors defaultPressedColors;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public SrlToggleColors defaultHoverColors;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SrlToggleColors selectedColors;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public SrlToggleColors selectedPressedColors;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SrlToggleColors selectedHoverColors;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float pressedScale;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float pressedEffectDuration;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Image background;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Image fill;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Image icon;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public TextMeshProUGUI labelText;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Image interactiveArea;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Slider[] _parentSliders;

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xE6EA64", Offset = "0xE6EA64", VA = "0xE6EA64", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xE6EB24", Offset = "0xE6EB24", VA = "0xE6EB24", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xE6EBCC", Offset = "0xE6EBCC", VA = "0xE6EBCC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xE6EBFC", Offset = "0xE6EBFC", VA = "0xE6EBFC")]
		private void OnValueChanged(bool newValue)
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xE6EC08", Offset = "0xE6EC08", VA = "0xE6EC08")]
		public void UpdateColors(bool pressed = false, bool hovered = false)
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xE6ED9C", Offset = "0xE6ED9C", VA = "0xE6ED9C", Slot = "26")]
		protected override void DoStateTransition(SelectionState state, bool instant)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xE6EDDC", Offset = "0xE6EDDC", VA = "0xE6EDDC", Slot = "32")]
		public override void OnPointerDown(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xE6EE90", Offset = "0xE6EE90", VA = "0xE6EE90", Slot = "33")]
		public override void OnPointerUp(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xE6EF30", Offset = "0xE6EF30", VA = "0xE6EF30")]
		public SrlToggle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000472")]
	public class SrlToggleColors
	{
		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color backgroundColor;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color fillColor;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color iconAndTextColor;

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xE6EF44", Offset = "0xE6EF44", VA = "0xE6EF44")]
		public SrlToggleColors()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class TofuAdvancedDrawToolController : TofuDrawToolController
	{
		[Token(Token = "0x20007D0")]
		public enum DrawToolState
		{
			[Token(Token = "0x4003057")]
			draw,
			[Token(Token = "0x4003058")]
			stencil,
			[Token(Token = "0x4003059")]
			labels,
			[Token(Token = "0x400305A")]
			none
		}

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<TofuDrawToolStencil> stencils;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public List<TofuDrawToolLabel> labels;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C394", Offset = "0xD1C394")]
		public RectTransform placementLayer;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C3CC", Offset = "0xD1C3CC")]
		public Toggle drawToggle;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Toggle eraseToggle;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Toggle stencilToggle;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Toggle lableToggle;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C404", Offset = "0xD1C404")]
		public Button deleteAllDrawings;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public int maxCountOfStencils;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public int maxCountOfTextBoxes;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public GameObject textLimitDialog;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C43C", Offset = "0xD1C43C")]
		public Button arrowButton;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Button circleButton;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Button squareButton;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C474", Offset = "0xD1C474")]
		public Button labelButton;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Button deletTextBoxButton;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Button deleteAllTextButton;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C4AC", Offset = "0xD1C4AC")]
		public GameObject arrowPrefab;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public GameObject circlePrefab;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GameObject squarePrefab;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public GameObject labelPrefab;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C4E4", Offset = "0xD1C4E4")]
		public Vector3 modelInitPos;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public Vector3 modelInitScale;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private TofuDrawToolModal currentModal;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C51C", Offset = "0xD1C51C")]
		public Toggle smallToggle;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Toggle medToggle;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public Toggle largeToggle;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public int smallFont;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public int medFont;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public int largeFont;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		public int currentFontSize;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C554", Offset = "0xD1C554")]
		public Button confirmButton;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C58C", Offset = "0xD1C58C")]
		public Toggle RedToggleStencils;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public Toggle GreenToggleStencils;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public Toggle YellowToggleStencils;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public Toggle WhiteToggleStencils;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public Toggle BlueToggleStencils;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Toggle filledToggle;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C5C4", Offset = "0xD1C5C4")]
		public Toggle RedToggleText;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Toggle GreenToggleText;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public Toggle YellowToggleText;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public Toggle WhiteToggleText;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public Toggle BlueToggleText;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C5FC", Offset = "0xD1C5FC")]
		public Button confirmButtonStencils;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public Button deleteButtonStencil;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public Button deleteAllStencilsButton;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C634", Offset = "0xD1C634")]
		public GameObject deleteAllStencilsDialog;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public GameObject deleteStencilDialog;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public GameObject deletePenDrawDialog;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public GameObject deleteAllTextBoxesDialog;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public GameObject deleteTextBoxDialog;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public GameObject deleteAllDrawingsDialog;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public Button clearAllStencilsBtn;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public Button clearStencilBtn;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public Button clearPenDrawBtn;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public Button clearAllTextBoxesBtn;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public Button clearTextBoxBtn;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public Button clearAllDrawingsBtn;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private bool hide;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private RectTransform boundsRect;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Image image;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public DrawToolState state;

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xE6F868", Offset = "0xE6F868", VA = "0xE6F868")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xE70A9C", Offset = "0xE70A9C", VA = "0xE70A9C")]
		protected void ClearSettings()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xE70AE4", Offset = "0xE70AE4", VA = "0xE70AE4")]
		public void OnDrawToggled(bool val)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xE70C7C", Offset = "0xE70C7C", VA = "0xE70C7C", Slot = "4")]
		public override void OnDrawToolToggle(bool val)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xE70ECC", Offset = "0xE70ECC", VA = "0xE70ECC", Slot = "5")]
		public override void ConfirmTool(bool val)
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xE7105C", Offset = "0xE7105C", VA = "0xE7105C")]
		public void OnStencilToggled(bool val)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xE712B4", Offset = "0xE712B4", VA = "0xE712B4")]
		public void OnLabelToggled(bool val)
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xE7161C", Offset = "0xE7161C", VA = "0xE7161C", Slot = "6")]
		public override void DrawPanelToggle(bool val)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xE719B8", Offset = "0xE719B8", VA = "0xE719B8")]
		public void OnAddStencil(GameObject prefab)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xE71CF8", Offset = "0xE71CF8", VA = "0xE71CF8")]
		private void OnDeleteAllDrawingsBtnClicked()
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xE71DB8", Offset = "0xE71DB8", VA = "0xE71DB8")]
		public void OnDeleteAllDrawings()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xE72170", Offset = "0xE72170", VA = "0xE72170")]
		private void OnDeleteDrawBtnClicked()
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xE72230", Offset = "0xE72230", VA = "0xE72230")]
		private void OnDeleteAllStencilsBtnClicked()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xE71DE4", Offset = "0xE71DE4", VA = "0xE71DE4")]
		public void OnDeleteAllStencilsClicked()
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xE72304", Offset = "0xE72304", VA = "0xE72304")]
		public void OnAddLabelButtonClicked()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xE727C4", Offset = "0xE727C4", VA = "0xE727C4")]
		private void OnDeleteAllTextsBtnClicked()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xE71F2C", Offset = "0xE71F2C", VA = "0xE71F2C")]
		public void OnDeleteAllLabelsButtonClicked()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xE72898", Offset = "0xE72898", VA = "0xE72898", Slot = "7")]
		protected override void DragDraw(Vector2 startPoint, Vector2 endPoint)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xE729C8", Offset = "0xE729C8", VA = "0xE729C8")]
		public void OnConfirmClicked()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xE72A64", Offset = "0xE72A64", VA = "0xE72A64")]
		private void OnDeleteStencilBtnClicked()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xE72B64", Offset = "0xE72B64", VA = "0xE72B64")]
		public void OnDeleteClicked()
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xE72C68", Offset = "0xE72C68", VA = "0xE72C68")]
		private void OnDeleteTextBtnClicked()
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xE72D68", Offset = "0xE72D68", VA = "0xE72D68")]
		public void OnDeleteTextBoxClicked()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xE72E6C", Offset = "0xE72E6C", VA = "0xE72E6C")]
		public void OnToggleFilled(bool val)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xE714E0", Offset = "0xE714E0", VA = "0xE714E0")]
		protected void OnColorToggleClicked(bool val, Color c, DrawColorState colorState)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xE72F40", Offset = "0xE72F40", VA = "0xE72F40")]
		public void OnFontToggled(bool val, int size)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xE7305C", Offset = "0xE7305C", VA = "0xE7305C")]
		public void OnModalSelected(TofuDrawToolModal mod)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xE73108", Offset = "0xE73108", VA = "0xE73108")]
		private void SetCurrentColorToggle()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xE73294", Offset = "0xE73294", VA = "0xE73294")]
		public TofuAdvancedDrawToolController()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xE733FC", Offset = "0xE733FC", VA = "0xE733FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD262E8", Offset = "0xD262E8")]
		private void <Start>b__63_0()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xE73404", Offset = "0xE73404", VA = "0xE73404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD262F8", Offset = "0xD262F8")]
		private void <Start>b__63_1()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xE7340C", Offset = "0xE7340C", VA = "0xE7340C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26308", Offset = "0xD26308")]
		private void <Start>b__63_2()
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xE73414", Offset = "0xE73414", VA = "0xE73414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26318", Offset = "0xD26318")]
		private void <Start>b__63_3(bool data)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xE73448", Offset = "0xE73448", VA = "0xE73448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26328", Offset = "0xD26328")]
		private void <Start>b__63_4(bool data)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xE734AC", Offset = "0xE734AC", VA = "0xE734AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26338", Offset = "0xD26338")]
		private void <Start>b__63_5(bool data)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xE73510", Offset = "0xE73510", VA = "0xE73510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26348", Offset = "0xD26348")]
		private void <Start>b__63_6(bool data)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xE73574", Offset = "0xE73574", VA = "0xE73574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26358", Offset = "0xD26358")]
		private void <Start>b__63_7(bool data)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xE735D8", Offset = "0xE735D8", VA = "0xE735D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26368", Offset = "0xD26368")]
		private void <Start>b__63_8(bool data)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xE735E0", Offset = "0xE735E0", VA = "0xE735E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26378", Offset = "0xD26378")]
		private void <Start>b__63_9(bool data)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xE73614", Offset = "0xE73614", VA = "0xE73614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26388", Offset = "0xD26388")]
		private void <Start>b__63_10(bool data)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xE73678", Offset = "0xE73678", VA = "0xE73678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26398", Offset = "0xD26398")]
		private void <Start>b__63_11(bool data)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xE736DC", Offset = "0xE736DC", VA = "0xE736DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD263A8", Offset = "0xD263A8")]
		private void <Start>b__63_12(bool data)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xE73740", Offset = "0xE73740", VA = "0xE73740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD263B8", Offset = "0xD263B8")]
		private void <Start>b__63_13(bool data)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xE737A4", Offset = "0xE737A4", VA = "0xE737A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD263C8", Offset = "0xD263C8")]
		private void <Start>b__63_14(bool data)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xE737B0", Offset = "0xE737B0", VA = "0xE737B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD263D8", Offset = "0xD263D8")]
		private void <Start>b__63_15(bool data)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xE737BC", Offset = "0xE737BC", VA = "0xE737BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD263E8", Offset = "0xD263E8")]
		private void <Start>b__63_16(bool data)
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class TofuClickAudioController : MonoBehaviour
	{
		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool doNotClickWhileRecording;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button _detectedButton;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle _detectedToggle;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Label3Dmarker _detectedLabelMarker;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TofuClickListener _detectedClickListener;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xE737C8", Offset = "0xE737C8", VA = "0xE737C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xE73AD0", Offset = "0xE73AD0", VA = "0xE73AD0")]
		public void PlayClick()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xE73B94", Offset = "0xE73B94", VA = "0xE73B94")]
		private void ButtonSelected()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xE73B98", Offset = "0xE73B98", VA = "0xE73B98")]
		private void ToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xE73C54", Offset = "0xE73C54", VA = "0xE73C54")]
		private void LabelSelected()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xE73C58", Offset = "0xE73C58", VA = "0xE73C58")]
		private void ItemClicked()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xE73C5C", Offset = "0xE73C5C", VA = "0xE73C5C")]
		public TofuClickAudioController()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class TofuDrawToolController : MonoBehaviour
	{
		[Token(Token = "0x20007D1")]
		public enum DrawColorState
		{
			[Token(Token = "0x400305C")]
			white,
			[Token(Token = "0x400305D")]
			blue,
			[Token(Token = "0x400305E")]
			green,
			[Token(Token = "0x400305F")]
			red,
			[Token(Token = "0x4003060")]
			yellow
		}

		[Token(Token = "0x20007D2")]
		private enum DrwaLineWidth
		{
			[Token(Token = "0x4003062")]
			small,
			[Token(Token = "0x4003063")]
			medium,
			[Token(Token = "0x4003064")]
			large
		}

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int textureDivider;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImage drawImageCopy;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TofuDrawToolDragListener drawInputRect;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C66C", Offset = "0xD1C66C")]
		public Toggle DrawToolPen;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle DrawToolTog;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Toggle SkinnyTog;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Toggle MediumTog;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Toggle FatTog;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle EraseTog;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle StencilsTog;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Toggle TextBoxTog;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Toggle ToolTog;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1C6A4", Offset = "0xD1C6A4")]
		public Toggle WhiteTog;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Toggle YellowTog;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Toggle GreenTog;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Toggle RedTog;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Toggle BlueTog;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C6B4", Offset = "0xD1C6B4")]
		public Button DeleteButton;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1C6EC", Offset = "0xD1C6EC")]
		public ToggleGroup drawToggleGroup;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1C6FC", Offset = "0xD1C6FC")]
		public Camera CaptureCamera;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Camera DrawCamera;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected RawImage rawImage;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool drawPanelToggle;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		protected bool eraseActive;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Texture2D drawTexture;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Rect drawTextureRect;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Vector2 previousPoint;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Color currentColor;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Color eraseColor;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected DrawColorState currentColorState;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		protected bool currentFillState;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected CameraTarget[] cameraTargets;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected LookAroundController lookAroundController;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		protected int lineWidthSmall;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected int lineWidthMedium;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected int lineWidthLarge;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		protected int eraserWidth;

		[Token(Token = "0x400243B")]
		private const int lineWidthStandard = 4;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private byte[] bytes;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private QualityController _qualityController;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected CanvasGroup penCanvasGroup;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private DrwaLineWidth drawLineWidth;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int fingerId;

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xE73C6C", Offset = "0xE73C6C", VA = "0xE73C6C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xE7462C", Offset = "0xE7462C", VA = "0xE7462C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xE73D94", Offset = "0xE73D94", VA = "0xE73D94")]
		private void SetupListeners()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xE747D0", Offset = "0xE747D0", VA = "0xE747D0")]
		public void ScaleTexture()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xE74A3C", Offset = "0xE74A3C", VA = "0xE74A3C")]
		public void OnLeftBarToggle(bool value)
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xE70D80", Offset = "0xE70D80", VA = "0xE70D80", Slot = "4")]
		public virtual void OnDrawToolToggle(bool val)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xE74ABC", Offset = "0xE74ABC", VA = "0xE74ABC")]
		private void DrawToolConfirmCheck(bool val)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xE74ACC", Offset = "0xE74ACC", VA = "0xE74ACC", Slot = "5")]
		public virtual void ConfirmTool(bool val)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xE7178C", Offset = "0xE7178C", VA = "0xE7178C", Slot = "6")]
		public virtual void DrawPanelToggle(bool val)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xE74AD0", Offset = "0xE74AD0", VA = "0xE74AD0")]
		protected void InitDrawTexture()
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xE74CFC", Offset = "0xE74CFC", VA = "0xE74CFC")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xE74DD4", Offset = "0xE74DD4", VA = "0xE74DD4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xE74ED8", Offset = "0xE74ED8", VA = "0xE74ED8")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xE728A8", Offset = "0xE728A8", VA = "0xE728A8", Slot = "7")]
		protected virtual void DragDraw(Vector2 startPoint, Vector2 endPoint)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xE74FE4", Offset = "0xE74FE4", VA = "0xE74FE4")]
		protected void DrawLine(Vector2 startPoint, Vector2 endPoint)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xE751F4", Offset = "0xE751F4", VA = "0xE751F4")]
		protected void DrawLineSegment(int startPointX, int startPointY)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xE75494", Offset = "0xE75494", VA = "0xE75494")]
		public void SetColorRed(bool val)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xE71270", Offset = "0xE71270", VA = "0xE71270")]
		public void SetColorWhite(bool val)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xE754FC", Offset = "0xE754FC", VA = "0xE754FC")]
		public void SetColorBlue(bool val)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xE75564", Offset = "0xE75564", VA = "0xE75564")]
		public void SetColorYellow(bool val)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xE755CC", Offset = "0xE755CC", VA = "0xE755CC")]
		public void SetColorGreen(bool val)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xE75634", Offset = "0xE75634", VA = "0xE75634")]
		public void LargePenActive(bool value)
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xE75640", Offset = "0xE75640", VA = "0xE75640")]
		public void SmallPenActive(bool value)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xE75648", Offset = "0xE75648", VA = "0xE75648")]
		public void MediumPenActive(bool value)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xE74CBC", Offset = "0xE74CBC", VA = "0xE74CBC")]
		private int LineWidth()
		{
			return default(int);
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xE75654", Offset = "0xE75654", VA = "0xE75654")]
		public void EraseToggle(bool val)
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xE75660", Offset = "0xE75660", VA = "0xE75660")]
		public void DeletePressed()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xE71FF4", Offset = "0xE71FF4", VA = "0xE71FF4")]
		public void ClearTexture()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xE733B0", Offset = "0xE733B0", VA = "0xE733B0")]
		public TofuDrawToolController()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class TofuDrawToolLabel : TofuDrawToolModal
	{
		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TMP_Text text;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TMP_InputField inputText;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public RectTransform textSection;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Scrollbar scrollBarVert;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CanvasGroup scrollBarCanvasGroup;

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xE75668", Offset = "0xE75668", VA = "0xE75668")]
		protected new void Awake()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xE72634", Offset = "0xE72634", VA = "0xE72634")]
		public void OnFontToggled(bool val, int size)
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xE7587C", Offset = "0xE7587C", VA = "0xE7587C")]
		public void OnTextEdited(string val)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xE75928", Offset = "0xE75928", VA = "0xE75928", Slot = "9")]
		public override void OnConfirmClicked()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xE75BDC", Offset = "0xE75BDC", VA = "0xE75BDC", Slot = "11")]
		public override void SetColor(Color c, TofuDrawToolController.DrawColorState colorState)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xE75D38", Offset = "0xE75D38", VA = "0xE75D38", Slot = "14")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xE76000", Offset = "0xE76000", VA = "0xE76000", Slot = "13")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xE76D4C", Offset = "0xE76D4C", VA = "0xE76D4C")]
		public void ValueChangeCheckDelay()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xE768FC", Offset = "0xE768FC", VA = "0xE768FC")]
		public void ValueChangeCheck(string value)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xE76A88", Offset = "0xE76A88", VA = "0xE76A88")]
		private void CheckPositionText()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xE76D90", Offset = "0xE76D90", VA = "0xE76D90")]
		public TofuDrawToolLabel()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class TofuDrawToolModal : MonoBehaviour, IDragHandler, IEventSystemHandler, IEndDragHandler, IPointerDownHandler, IBeginDragHandler, IInitializePotentialDragHandler
	{
		[Token(Token = "0x20007D3")]
		public enum ModalState
		{
			[Token(Token = "0x4003066")]
			locked,
			[Token(Token = "0x4003067")]
			scaling,
			[Token(Token = "0x4003068")]
			rotation,
			[Token(Token = "0x4003069")]
			translate
		}

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C70C", Offset = "0xD1C70C")]
		public Image rotateImage;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image scaleImage;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image translateImage;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image borderImage;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ModalState state;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RectTransform rTran;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hide;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public TofuDrawToolController.DrawColorState currentColorState;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool currentFillState;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int currentFontSize;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected TofuAdvancedDrawToolController controller;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector2 minSize;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector2 maxSize;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RectTransform bounds;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float baseAngel;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 transformOffset;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float distanceToCamera;

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xE757F0", Offset = "0xE757F0", VA = "0xE757F0")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xE76E44", Offset = "0xE76E44", VA = "0xE76E44")]
		protected void InitButtons()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xE76E48", Offset = "0xE76E48", VA = "0xE76E48")]
		public void ToggleHide()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xE75990", Offset = "0xE75990", VA = "0xE75990", Slot = "9")]
		public virtual void OnConfirmClicked()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xE76E4C", Offset = "0xE76E4C", VA = "0xE76E4C", Slot = "10")]
		public virtual void OnDeleteClicked()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xE71CE0", Offset = "0xE71CE0", VA = "0xE71CE0")]
		public void SetStencilColor(Color c, TofuDrawToolController.DrawColorState colorState)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xE76EDC", Offset = "0xE76EDC", VA = "0xE76EDC", Slot = "11")]
		public virtual void SetColor(Color c, TofuDrawToolController.DrawColorState colorState)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xE72F24", Offset = "0xE72F24", VA = "0xE72F24")]
		public void SetFill(bool val)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xE76EE0", Offset = "0xE76EE0", VA = "0xE76EE0", Slot = "12")]
		public virtual void SetFillStencil(bool val)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xE76EE4", Offset = "0xE76EE4", VA = "0xE76EE4", Slot = "8")]
		public void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xE7607C", Offset = "0xE7607C", VA = "0xE7607C", Slot = "13")]
		public virtual void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xE76EFC", Offset = "0xE76EFC", VA = "0xE76EFC")]
		private bool IsInside()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xE770A4", Offset = "0xE770A4", VA = "0xE770A4", Slot = "5")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xE75D60", Offset = "0xE75D60", VA = "0xE75D60", Slot = "14")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xE770AC", Offset = "0xE770AC", VA = "0xE770AC", Slot = "7")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xE76D94", Offset = "0xE76D94", VA = "0xE76D94")]
		public TofuDrawToolModal()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class TofuDrawToolStencil : TofuDrawToolModal
	{
		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Image img;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Sprite filledSprite;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Sprite outlinedSprite;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Toggle filledToggle;

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xE77308", Offset = "0xE77308", VA = "0xE77308")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xE773F4", Offset = "0xE773F4", VA = "0xE773F4", Slot = "11")]
		public override void SetColor(Color c, TofuDrawToolController.DrawColorState colorState)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xE774C4", Offset = "0xE774C4", VA = "0xE774C4")]
		public TofuDrawToolController.DrawColorState GetCurrentColorState()
		{
			return default(TofuDrawToolController.DrawColorState);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xE774CC", Offset = "0xE774CC", VA = "0xE774CC", Slot = "12")]
		public override void SetFillStencil(bool val)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xE7751C", Offset = "0xE7751C", VA = "0xE7751C", Slot = "14")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xE77544", Offset = "0xE77544", VA = "0xE77544", Slot = "13")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xE7756C", Offset = "0xE7756C", VA = "0xE7756C")]
		public TofuDrawToolStencil()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class TofuLeftBarControlsController : MonoBehaviour
	{
		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C774", Offset = "0xD1C774")]
		public Toggle controlsToggle;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<TofuLeftBarControlsShowHide> _tofuLeftBarControlsShowHides;

		[Token(Token = "0x400245D")]
		private const int ParkingDistance = 10000;

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xE83798", Offset = "0xE83798", VA = "0xE83798")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xE8383C", Offset = "0xE8383C", VA = "0xE8383C")]
		public void Register(TofuLeftBarControlsShowHide value)
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xE838A4", Offset = "0xE838A4", VA = "0xE838A4")]
		private void ControlsToggle(bool value)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xE83B28", Offset = "0xE83B28", VA = "0xE83B28")]
		public TofuLeftBarControlsController()
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xE83B98", Offset = "0xE83B98", VA = "0xE83B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD263F8", Offset = "0xD263F8")]
		private void <Start>b__3_0(bool data)
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class TofuLeftBarControlsShowHide : MonoBehaviour
	{
		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public RectTransform rectTransform;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuLeftBarControlsController tofuLeftBarControlsController;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool registered;

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xE83BA0", Offset = "0xE83BA0", VA = "0xE83BA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xE83C08", Offset = "0xE83C08", VA = "0xE83C08")]
		public void Start()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xE83CD4", Offset = "0xE83CD4", VA = "0xE83CD4")]
		public TofuLeftBarControlsShowHide()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class TofuLeftBarLibraryController : MonoBehaviour
	{
		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C7BC", Offset = "0xD1C7BC")]
		public Toggle leftBarMenuToggle;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TofuLibraryController tofuLibraryController;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform libraryRectTransform;

		[Token(Token = "0x4002464")]
		private const int PARKINGDISTANCE = 10000;

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xE83CDC", Offset = "0xE83CDC", VA = "0xE83CDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xE83E2C", Offset = "0xE83E2C", VA = "0xE83E2C")]
		private void ControlsToggle(bool value)
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xE83ED8", Offset = "0xE83ED8", VA = "0xE83ED8")]
		public TofuLeftBarLibraryController()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xE83EE0", Offset = "0xE83EE0", VA = "0xE83EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26408", Offset = "0xD26408")]
		private void <Start>b__4_0(bool data)
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class TofuLeftBarToggleContoller : MonoBehaviour
	{
		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C7F4", Offset = "0xD1C7F4")]
		public Toggle leftBarMenuToggle;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C82C", Offset = "0xD1C82C")]
		public Toggle[] leftBarToggles;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C864", Offset = "0xD1C864")]
		public Toggle[] libraryToggles;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C89C", Offset = "0xD1C89C")]
		public Toggle settingsToggle;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle toolsToggle;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Toggle captureToggle;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool[] _leftBarOnValues;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool[] _leftBarInteractableValues;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TofuLibraryController _tofuLibraryController;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SystemSubscriptionController _systemSubscriptionController;

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xE83EE8", Offset = "0xE83EE8", VA = "0xE83EE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xE83FE0", Offset = "0xE83FE0", VA = "0xE83FE0")]
		public void Start()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xE842C8", Offset = "0xE842C8", VA = "0xE842C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xE84188", Offset = "0xE84188", VA = "0xE84188")]
		public void CheckSubscription()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xE843B4", Offset = "0xE843B4", VA = "0xE843B4")]
		private void LeftBarMenuToggle(bool value)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xE844CC", Offset = "0xE844CC", VA = "0xE844CC")]
		private void SaveValues()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xE84400", Offset = "0xE84400", VA = "0xE84400")]
		private void RestoreValues()
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xE84584", Offset = "0xE84584", VA = "0xE84584")]
		private void SetValues(bool value)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xE84600", Offset = "0xE84600", VA = "0xE84600")]
		private void SetInteractive(bool value)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xE8467C", Offset = "0xE8467C", VA = "0xE8467C")]
		private void CloseLibrary(bool value)
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xE8477C", Offset = "0xE8477C", VA = "0xE8477C")]
		public void LibraryOpened()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xE847F4", Offset = "0xE847F4", VA = "0xE847F4")]
		public TofuLeftBarToggleContoller()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047D")]
	public class TofuLibraryCondition
	{
		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayedText;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString localizedDisplayedString;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string desktopScene;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string tabletScene;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string vrScene;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mobileVrScene;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isSubCondition;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isLabel;

		[NonSerialized]
		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<TofuLibraryCondition> labelChildren;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool free;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool normal;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool pro;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public GameObject conditionObject;

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xE847FC", Offset = "0xE847FC", VA = "0xE847FC")]
		internal void CalculateLabelChildren(TofuLibraryOrgan organ)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xE84954", Offset = "0xE84954", VA = "0xE84954")]
		internal string GetSceneName()
		{
			return null;
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xE84A0C", Offset = "0xE84A0C", VA = "0xE84A0C")]
		internal bool IsAvailableOnCurrentPlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xE84A84", Offset = "0xE84A84", VA = "0xE84A84")]
		public TofuLibraryCondition()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class TofuLibraryController : MonoBehaviour
	{
		[Token(Token = "0x20007D4")]
		public enum Platforms
		{
			[Token(Token = "0x400306B")]
			Undetermined,
			[Token(Token = "0x400306C")]
			Standalone,
			[Token(Token = "0x400306D")]
			Mobile
		}

		[Token(Token = "0x20007D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E758", Offset = "0xD0E758")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x400306E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int tempIndex;

			[Token(Token = "0x400306F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TofuLibraryController <>4__this;

			[Token(Token = "0x6002B79")]
			[Address(RVA = "0x22D500C", Offset = "0x22D500C", VA = "0x22D500C")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0x22D5014", Offset = "0x22D5014", VA = "0x22D5014")]
			internal void <Awake>b__0(bool value)
			{
			}
		}

		[Token(Token = "0x20007D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E768", Offset = "0xD0E768")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4003070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string tempName;

			[Token(Token = "0x4003071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TofuLibraryController <>4__this;

			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0x22D503C", Offset = "0x22D503C", VA = "0x22D503C")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0x22D5044", Offset = "0x22D5044", VA = "0x22D5044")]
			internal void <CreateCondition>b__0(bool value)
			{
			}
		}

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Platforms detectedPlatform;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool testGUIScale;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool animOpen;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C8E4", Offset = "0xD1C8E4")]
		public TofuLibraryOrgan[] organs;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C91C", Offset = "0xD1C91C")]
		public string currentOrgan;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int currentOrganIndex;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string currentCondition;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int currentConditionIndex;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C954", Offset = "0xD1C954")]
		public Toggle organTogglePrefab;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle conditionTogglePrefab;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Toggle subConditionTogglePrefab;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject conditionLabelPrefab;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ToggleGroup organContentToggleGroup;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ToggleGroup conditionContentToggleGroup;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject conditionBottomObject;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshProUGUI currentOrganLabelText;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshProUGUI currentConditionLabelText;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LocalizeStringEvent currentOrganLocalize;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public LocalizeStringEvent currentConditionLocalize;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public ScrollRect organScrollRect;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ScrollRect conditionScrollRect;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject organBottomRoundImage;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject organBottomFlatImage;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Button openButton;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Button closeButton;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C98C", Offset = "0xD1C98C")]
		public AppRunner appRunner;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1C9C4", Offset = "0xD1C9C4")]
		public LocalizedString localeListener;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GameObject[] _conditionObjects;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GameObject _currentConditionBottom;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private TofuLeftBarToggleContoller _tofuLeftBarToggleController;

		[Token(Token = "0x400249B")]
		private const int ConditionLimit = 11;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private SystemSubscriptionController _systemSubscriptionController;

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xE84AF4", Offset = "0xE84AF4", VA = "0xE84AF4")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xE854DC", Offset = "0xE854DC", VA = "0xE854DC")]
		private bool CheckConditionSubscription(TofuLibraryCondition condition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xE85618", Offset = "0xE85618", VA = "0xE85618")]
		private void LibraryOpened()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xE856A0", Offset = "0xE856A0", VA = "0xE856A0")]
		private void DestroyConditions()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xE8577C", Offset = "0xE8577C", VA = "0xE8577C")]
		private void OrganToggleSelected(bool value, int organIndex)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xE8578C", Offset = "0xE8578C", VA = "0xE8578C")]
		private void OrganSelected(int organIndex)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xE85D8C", Offset = "0xE85D8C", VA = "0xE85D8C")]
		private void UpdateBottomEdgeImage(int organIndex)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xE859F4", Offset = "0xE859F4", VA = "0xE859F4")]
		private GameObject CreateCondition(TofuLibraryCondition condition, bool uniteTogglesIntoGroup = false)
		{
			return null;
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xE850EC", Offset = "0xE850EC", VA = "0xE850EC")]
		private void SetCurrentOrganCondition()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xE85454", Offset = "0xE85454", VA = "0xE85454")]
		private void PositionScrollView(ScrollRect scrollRect, int index, int length)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xE85ED0", Offset = "0xE85ED0", VA = "0xE85ED0")]
		private void ConditionToggleSelected(bool value, string conditionName)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xE85EE0", Offset = "0xE85EE0", VA = "0xE85EE0")]
		private void ConditionSelected(string conditionName)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xE8471C", Offset = "0xE8471C", VA = "0xE8471C")]
		public void CloseLibrary()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xE85FCC", Offset = "0xE85FCC", VA = "0xE85FCC")]
		public void UnscaleLibrary()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xE86048", Offset = "0xE86048", VA = "0xE86048")]
		public TofuLibraryController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047F")]
	public class TofuLibraryOrgan
	{
		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nameOfOrgan;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string displayedText;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizedString localizedDisplayedString;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite sprite;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TofuLibraryCondition[] conditions;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Toggle organToggle;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public SetLayoutComponentSize rectSizeSetter;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool containsConditionsForThisPlatform;

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x22D506C", Offset = "0x22D506C", VA = "0x22D506C")]
		internal void Init()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x22D5108", Offset = "0x22D5108", VA = "0x22D5108")]
		public TofuLibraryOrgan()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class TofuSendMail : MonoBehaviour
	{
		[Token(Token = "0x20007D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E778", Offset = "0xD0E778")]
		private sealed class <WaitAndShow>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TofuSendMail <>4__this;

			[Token(Token = "0x4003075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <f>5__2;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B80")]
				[Address(RVA = "0x22D6440", Offset = "0x22D6440", VA = "0x22D6440", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B82")]
				[Address(RVA = "0x22D64A8", Offset = "0x22D64A8", VA = "0x22D64A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0x22D53C0", Offset = "0x22D53C0", VA = "0x22D53C0")]
			[DebuggerHidden]
			public <WaitAndShow>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0x22D5F84", Offset = "0x22D5F84", VA = "0x22D5F84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0x22D5F88", Offset = "0x22D5F88", VA = "0x22D5F88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0x22D6448", Offset = "0x22D6448", VA = "0x22D6448", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E788", Offset = "0xD0E788")]
		private sealed class <TakeScreenShotCoroutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TofuSendMail <>4__this;

			[Token(Token = "0x1700036F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B86")]
				[Address(RVA = "0x22D5F14", Offset = "0x22D5F14", VA = "0x22D5F14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000370")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B88")]
				[Address(RVA = "0x22D5F7C", Offset = "0x22D5F7C", VA = "0x22D5F7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B83")]
			[Address(RVA = "0x22D549C", Offset = "0x22D549C", VA = "0x22D549C")]
			[DebuggerHidden]
			public <TakeScreenShotCoroutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002B84")]
			[Address(RVA = "0x22D5760", Offset = "0x22D5760", VA = "0x22D5760", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B85")]
			[Address(RVA = "0x22D5764", Offset = "0x22D5764", VA = "0x22D5764", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0x22D5F1C", Offset = "0x22D5F1C", VA = "0x22D5F1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E798", Offset = "0xD0E798")]
		private sealed class <restoreScreenshotSettings>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400307A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400307B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color c;

			[Token(Token = "0x400307C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject sphere;

			[Token(Token = "0x400307D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color oldSkyAmb;

			[Token(Token = "0x400307E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color oldTintAmb;

			[Token(Token = "0x400307F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Color oldSkyEmmissive;

			[Token(Token = "0x4003080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Animator[] anims;

			[Token(Token = "0x17000371")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B8C")]
				[Address(RVA = "0x22D66BC", Offset = "0x22D66BC", VA = "0x22D66BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000372")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B8E")]
				[Address(RVA = "0x22D6724", Offset = "0x22D6724", VA = "0x22D6724", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B89")]
			[Address(RVA = "0x22D55A0", Offset = "0x22D55A0", VA = "0x22D55A0")]
			[DebuggerHidden]
			public <restoreScreenshotSettings>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0x22D64B0", Offset = "0x22D64B0", VA = "0x22D64B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0x22D64B4", Offset = "0x22D64B4", VA = "0x22D64B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0x22D66C4", Offset = "0x22D66C4", VA = "0x22D66C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string screenshotName;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string screenshotExtension;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField emailField;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image flashImage;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform screenCapturePanel;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CA2C", Offset = "0xD1CA2C")]
		public CaptureSavedPopup savedPopup;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CA64", Offset = "0xD1CA64")]
		public Button screenShotButton;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CA9C", Offset = "0xD1CA9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1CA9C", Offset = "0xD1CA9C")]
		public RectTransform UI;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool captureActive;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string imagePath;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource clickSound;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string isScreenshotTag;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<CanvasRenderer> previousState;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject theGui;

		[Token(Token = "0x40024B3")]
		private const string MatchEmailPattern = "^(([\\w-]+\\.)+[\\w-]+|([a-zA-Z]{1}|[\\w-]{2,}))@((([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])\\.([0-1]?[0-9]{1,2}|25[0-5]|2[0-4][0-9])){1}|([a-zA-Z]+[\\w-]+\\.)+[a-zA-Z]{2,4})$";

		[Token(Token = "0x40024B4")]
		private const string SfxGroup = "SFX";

		[Token(Token = "0x40024B5")]
		public const string iosSavedToGalleryText = "Screenshot saved to your gallery.";

		[Token(Token = "0x40024B6")]
		public const string iosSavedToDocsText = "Screenshot saved to application documents.";

		[Token(Token = "0x17000195")]
		private bool hideGUI
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0x22D5110", Offset = "0x22D5110", VA = "0x22D5110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x22D5180", Offset = "0x22D5180", VA = "0x22D5180")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x22D5350", Offset = "0x22D5350", VA = "0x22D5350")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26418", Offset = "0xD26418")]
		private IEnumerator WaitAndShow()
		{
			return null;
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x22D53EC", Offset = "0x22D53EC", VA = "0x22D53EC")]
		public void TakeScreenShot()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x22D542C", Offset = "0x22D542C", VA = "0x22D542C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2647C", Offset = "0xD2647C")]
		private IEnumerator TakeScreenShotCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x22D54C8", Offset = "0x22D54C8", VA = "0x22D54C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD264E0", Offset = "0xD264E0")]
		private IEnumerator restoreScreenshotSettings(Color c, GameObject sphere, float oldTime, Color oldSkyAmb, Color oldSkyEmmissive, Color oldTintAmb, Animator[] anims, float[] speeds)
		{
			return null;
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x22D55CC", Offset = "0x22D55CC", VA = "0x22D55CC")]
		private void ShowSavePathPicker(string capturedFilePath)
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x22D55D0", Offset = "0x22D55D0", VA = "0x22D55D0")]
		private void OnImageLoaded()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x22D55D4", Offset = "0x22D55D4", VA = "0x22D55D4")]
		public bool IsEmail(string email)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x22D565C", Offset = "0x22D565C", VA = "0x22D565C")]
		public void Send()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x22D5660", Offset = "0x22D5660", VA = "0x22D5660")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x22D5664", Offset = "0x22D5664", VA = "0x22D5664")]
		private void clearEmailField()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x22D56C0", Offset = "0x22D56C0", VA = "0x22D56C0")]
		public TofuSendMail()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class TofuToggleExtension : MonoBehaviour
	{
		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x22D672C", Offset = "0x22D672C", VA = "0x22D672C")]
		public static void SetToggleValueWithoutSound(Toggle toggle, bool value)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x22D68D4", Offset = "0x22D68D4", VA = "0x22D68D4")]
		public TofuToggleExtension()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class TofuiOSLabelDotScaler : MonoBehaviour
	{
		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CAFC", Offset = "0xD1CAFC")]
		public float dotSize;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 lineSize;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CB34", Offset = "0xD1CB34")]
		public ScaleOnCameraZoom scalingScript;

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x22D68DC", Offset = "0x22D68DC", VA = "0x22D68DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x22D6A30", Offset = "0x22D6A30", VA = "0x22D6A30")]
		public TofuiOSLabelDotScaler()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class GenericNotification : MonoBehaviour
	{
		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GenericNotification _instance;

		[Token(Token = "0x40024BB")]
		private const string panelPrefabName = "Prefabs/UI/GenericNotification_Desktop";

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle dontShowAgainToggle;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject dontShowAgainToggleRow;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject dialogPanel;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI dialogHeaderField;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI dialogTextField;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI dontShowAgainMsgField;

		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action closeButtonStoredAction;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action<bool> closeButtonStoredActionBool;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool dontShowAgainCheck;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int initialSiblingIndex;

		[Token(Token = "0x40024C6")]
		private const string defaultDontShowMsg = "Don't show again";

		[Token(Token = "0x17000196")]
		public static GenericNotification Instance
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xEF77D0", Offset = "0xEF77D0", VA = "0xEF77D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xEF7934", Offset = "0xEF7934", VA = "0xEF7934")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xEF7A04", Offset = "0xEF7A04", VA = "0xEF7A04")]
		public bool IsDialogBusy()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xEF7A20", Offset = "0xEF7A20", VA = "0xEF7A20")]
		public void ShowDialog(string dialogHeader, string dialogText)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xEF7B40", Offset = "0xEF7B40", VA = "0xEF7B40")]
		public void ShowDialog(string dialogHeader, string dialogText, Action closedAction)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xEF7BA0", Offset = "0xEF7BA0", VA = "0xEF7BA0")]
		public void ShowDialog(string dialogHeader, string dialogText, Action<bool> closedAction, string dontShowMsg = "Don't show again")
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xEF7C20", Offset = "0xEF7C20", VA = "0xEF7C20")]
		public void CloseDialog()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xEF7C28", Offset = "0xEF7C28", VA = "0xEF7C28")]
		public void OnCloseButtonClick()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xEF7A48", Offset = "0xEF7A48", VA = "0xEF7A48")]
		private void UpdateLayoutsAndTexts(string dialogHeader, string dialogText)
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xEF7A9C", Offset = "0xEF7A9C", VA = "0xEF7A9C")]
		private void SetPanelActive(bool value)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xEF7CC0", Offset = "0xEF7CC0", VA = "0xEF7CC0")]
		public GenericNotification()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class MobileVrDoAtStart : MonoBehaviour
	{
		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xD1CBCC", Offset = "0xD1CBCC")]
		public UnityEvent doAtStartOnMobileVR;

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x22AAE18", Offset = "0x22AAE18", VA = "0x22AAE18")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x22AAE5C", Offset = "0x22AAE5C", VA = "0x22AAE5C")]
		public MobileVrDoAtStart()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class BrainController : MonoBehaviour
	{
		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Toggle flowControl;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Toggle shellToggle;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Image fill;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle broadmanToggle;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject leftBroadman;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject rightBroadman;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject meshRoot;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer[] toggleRenders;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Renderer[] toggleSagRenders;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Renderer[] toggleTransRenders;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool hideGlassOnFullCSF;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject glassRoot;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ZoneManager zoneMan;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TofuPadController tofuPadController;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Renderer[] ventricleRenders;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float incriment;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float inkDurartion;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float inkTime;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool inking;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string flowMaterialName;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string flowPropertyName;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string flowBoolProperty;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float timer;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool shellState;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool dyeState;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		private bool broadmanState;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Dictionary<Renderer, int> flowRenderersMaterial;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private AnchorVisibilityManager_pointBased _labelsVisibilityManager;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InfoBoxController _infoControl;

		[Token(Token = "0x17000197")]
		private AnchorVisibilityManager_pointBased labelsVisibilityManager
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xF17E0C", Offset = "0xF17E0C", VA = "0xF17E0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private InfoBoxController infoControl
		{
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xF17EC0", Offset = "0xF17EC0", VA = "0xF17EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xF17F74", Offset = "0xF17F74", VA = "0xF17F74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xF17FB0", Offset = "0xF17FB0", VA = "0xF17FB0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xF18314", Offset = "0xF18314", VA = "0xF18314")]
		private void FindFlowMaterials()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xF18BA8", Offset = "0xF18BA8", VA = "0xF18BA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xF18F10", Offset = "0xF18F10", VA = "0xF18F10")]
		public void onZoneChanged(int newZ, int oldZ)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xF19654", Offset = "0xF19654", VA = "0xF19654")]
		private void HandleVirtualZone()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xF18FBC", Offset = "0xF18FBC", VA = "0xF18FBC")]
		private void updateShell(int zone, bool val)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xF19710", Offset = "0xF19710", VA = "0xF19710")]
		private void HideAll()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xF185C8", Offset = "0xF185C8", VA = "0xF185C8")]
		public void onFlowControlPressed(bool val)
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xF18484", Offset = "0xF18484", VA = "0xF18484")]
		public void onShellControlPressed(bool val)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xF194D4", Offset = "0xF194D4", VA = "0xF194D4")]
		public void onBroadmanPressed(bool val)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xF18DA4", Offset = "0xF18DA4", VA = "0xF18DA4")]
		private void UpdateMaterialsFlowValue(float flowValue)
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xF18A0C", Offset = "0xF18A0C", VA = "0xF18A0C")]
		private void UpdateMaterialsFlowToggle(bool value)
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xF19810", Offset = "0xF19810", VA = "0xF19810")]
		public BrainController()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class BrainWhiteMatterController : MonoBehaviour
	{
		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle xyzToggle;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject whiteMatterParent;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer[] _whiteMatterModels;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer[] _labelsModels;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer[] _restoreModels;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LODGroup lodGroup;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AdvancedVisibilityManager viz;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ZoneManager zoneMan;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TofuPadController tofuPadController;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int quality;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AnchorVisibilityManager_pointBased _labelsVisibilityManager;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private InfoBoxController _infoControl;

		[Token(Token = "0x17000199")]
		private AnchorVisibilityManager_pointBased labelsVisibilityManager
		{
			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xF19A74", Offset = "0xF19A74", VA = "0xF19A74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private InfoBoxController infoControl
		{
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xF19B28", Offset = "0xF19B28", VA = "0xF19B28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xF19BDC", Offset = "0xF19BDC", VA = "0xF19BDC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xF19C50", Offset = "0xF19C50", VA = "0xF19C50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xF19C54", Offset = "0xF19C54", VA = "0xF19C54")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xF19E84", Offset = "0xF19E84", VA = "0xF19E84")]
		public void onXYZPressed(bool val)
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xF19F9C", Offset = "0xF19F9C", VA = "0xF19F9C")]
		public void LabelState(bool val)
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xF1A1A0", Offset = "0xF1A1A0", VA = "0xF1A1A0")]
		public void LabelSelected(int LabelID)
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xF1A1A4", Offset = "0xF1A1A4", VA = "0xF1A1A4")]
		public BrainWhiteMatterController()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class AorticStenosisControl : MonoBehaviour
	{
		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CC54", Offset = "0xD1CC54")]
		public Animator aorticAnimatorL;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator aorticAnimatorN;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator aorticAnimatorR;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator aorticAnimatorS;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CC8C", Offset = "0xD1CC8C")]
		public SkinnedMeshRenderer aorticValveRendererL;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SkinnedMeshRenderer aorticValveRendererN;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SkinnedMeshRenderer aorticValveRendererR;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SkinnedMeshRenderer aorticValveRendererS;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CCC4", Offset = "0xD1CCC4")]
		public AorticUISlider sliderManager;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CCFC", Offset = "0xD1CCFC")]
		public Toggle TreatmentToggle;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Toggle ResetToggle;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Toggle popCornToggle;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float minimumDisease;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float startDisease;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AppRunner app;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string valvuloplasty;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string mainKey;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool FXOn;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] blendPercent;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] treatmentdPercent;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material[] materials;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool[] stageOn;

		[Token(Token = "0x4002507")]
		private const float StageZeroEnd = 34f;

		[Token(Token = "0x4002508")]
		private const float StageOneEnd = 56f;

		[Token(Token = "0x4002509")]
		private const float StageTwoEnd = 78f;

		[Token(Token = "0x400250A")]
		private const float StageThreeEnd = 100f;

		[Token(Token = "0x400250B")]
		private const int StageOne = 0;

		[Token(Token = "0x400250C")]
		private const int StageTwo = 1;

		[Token(Token = "0x400250D")]
		private const int StageThree = 2;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fromTreatment;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool revert;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		private bool sync;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		private bool synced;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float treatmentValue;

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xF1186C", Offset = "0xF1186C", VA = "0xF1186C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xF11C14", Offset = "0xF11C14", VA = "0xF11C14")]
		public void OnResetToggled(bool val)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xF11C80", Offset = "0xF11C80", VA = "0xF11C80")]
		public void OnTreatmentToggled(bool val)
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xF11E9C", Offset = "0xF11E9C", VA = "0xF11E9C")]
		public void UpdateStage(float value)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xF11B48", Offset = "0xF11B48", VA = "0xF11B48")]
		private void CoreUpdateStage(float value, int currentValve)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xF11EB8", Offset = "0xF11EB8", VA = "0xF11EB8")]
		private float getNewMin(int currentValve)
		{
			return default(float);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xF125A8", Offset = "0xF125A8", VA = "0xF125A8")]
		public void CalculateBlendPercents(float value)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xF11F58", Offset = "0xF11F58", VA = "0xF11F58")]
		public void CalculateTreatmentPercents(float value)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xF123D4", Offset = "0xF123D4", VA = "0xF123D4")]
		public void UpdateParticleStage(float avg)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xF12904", Offset = "0xF12904", VA = "0xF12904")]
		public void UpdateSettings(float valve_L, float valve_N, float valve_R)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xF12150", Offset = "0xF12150", VA = "0xF12150")]
		public void UpdateBlendTree(int valve, float value)
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xF12A78", Offset = "0xF12A78", VA = "0xF12A78")]
		private int DetermineStageFromValue(float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xF12900", Offset = "0xF12900", VA = "0xF12900")]
		private void SetEffect()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xF12780", Offset = "0xF12780", VA = "0xF12780")]
		public void AdjustBlend(int val)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xF12EC8", Offset = "0xF12EC8", VA = "0xF12EC8")]
		public bool isPopOn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xF128F8", Offset = "0xF128F8", VA = "0xF128F8")]
		public int currentActiveFX()
		{
			return default(int);
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xF12AFC", Offset = "0xF12AFC", VA = "0xF12AFC")]
		private void Adjust_Renderer_Blend(SkinnedMeshRenderer ren, float v1, float v2, float v3)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xF12A18", Offset = "0xF12A18", VA = "0xF12A18")]
		private void clearCalcification(SkinnedMeshRenderer ren)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xF11D2C", Offset = "0xF11D2C", VA = "0xF11D2C")]
		public void SaveSettings()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xF11AB0", Offset = "0xF11AB0", VA = "0xF11AB0")]
		public void RestoreSettings()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xF122B0", Offset = "0xF122B0", VA = "0xF122B0")]
		private void UpdateToggles(float avg)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xF11C18", Offset = "0xF11C18", VA = "0xF11C18")]
		public void RevertSettings()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xF1321C", Offset = "0xF1321C", VA = "0xF1321C")]
		public bool getSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xF13224", Offset = "0xF13224", VA = "0xF13224")]
		public void SyncParticles(int val)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xF13228", Offset = "0xF13228", VA = "0xF13228")]
		public void OnBloodFlowButtonChanged(bool val)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xF13234", Offset = "0xF13234", VA = "0xF13234")]
		public AorticStenosisControl()
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xF132F8", Offset = "0xF132F8", VA = "0xF132F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26544", Offset = "0xD26544")]
		private void <Awake>b__34_0(bool value)
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class AorticStenosisController : MonoBehaviour
	{
		[Token(Token = "0x20007DA")]
		private enum SliderTouchedByUser
		{
			[Token(Token = "0x4003082")]
			None,
			[Token(Token = "0x4003083")]
			Left,
			[Token(Token = "0x4003084")]
			Right,
			[Token(Token = "0x4003085")]
			Bottom
		}

		[Token(Token = "0x20007DB")]
		private enum AorticStenosisBlendShapes
		{
			[Token(Token = "0x4003087")]
			Plaque1,
			[Token(Token = "0x4003088")]
			Plaque2,
			[Token(Token = "0x4003089")]
			Plaque3,
			[Token(Token = "0x400308A")]
			Edge3,
			[Token(Token = "0x400308B")]
			Edge2,
			[Token(Token = "0x400308C")]
			Edge1
		}

		[Token(Token = "0x20007DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E7A8", Offset = "0xD0E7A8")]
		private sealed class <TreatmentCoroutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400308D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400308E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400308F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AorticStenosisController <>4__this;

			[Token(Token = "0x4003090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SrlToggle <toggle>5__2;

			[Token(Token = "0x4003091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__3;

			[Token(Token = "0x4003092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <progress>5__4;

			[Token(Token = "0x17000373")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B92")]
				[Address(RVA = "0xF1467C", Offset = "0xF1467C", VA = "0xF1467C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000374")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B94")]
				[Address(RVA = "0xF146E4", Offset = "0xF146E4", VA = "0xF146E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0xF13BE8", Offset = "0xF13BE8", VA = "0xF13BE8")]
			[DebuggerHidden]
			public <TreatmentCoroutine>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6002B90")]
			[Address(RVA = "0xF14444", Offset = "0xF14444", VA = "0xF14444", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B91")]
			[Address(RVA = "0xF14448", Offset = "0xF14448", VA = "0xF14448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B93")]
			[Address(RVA = "0xF14684", Offset = "0xF14684", VA = "0xF14684", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SliderTouchedByUser lastSliderTouchedByUser;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CD34", Offset = "0xD1CD34")]
		public Animator aorticStenosisAnimator;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CD6C", Offset = "0xD1CD6C")]
		public SkinnedMeshRenderer lValveRenderer;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinnedMeshRenderer nValveRenderer;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SkinnedMeshRenderer rValveRenderer;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CDA4", Offset = "0xD1CDA4")]
		public Slider severitySlider;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider rightValveSlider;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slider bottomValveSlider;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Slider leftValveSlider;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CDDC", Offset = "0xD1CDDC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1CDDC", Offset = "0xD1CDDC")]
		private float TreatmentThreshold;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimationCurve leftSeverityCurve;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve rightSeverityCurve;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AnimationCurve bottomSeverityCurve;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float treatmentDuration;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject treatmentWindowObject;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Toggle treatmentToggle;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Image treatmentFillImage;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Toggle resetToggle;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1CE84", Offset = "0xD1CE84")]
		private float maxGapBetweenSliders;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CEC8", Offset = "0xD1CEC8")]
		public GameObject desktopCameraObject;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject vrCameraObject;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int SequentialBlend;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int ValveLSeverity;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ValveNSeverity;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int ValveRSeverity;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _treatmentComplete;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private TofuFilledImageController _tofuFilledImageController;

		[Token(Token = "0x400252E")]
		private const float Severity0Threshold = 0f;

		[Token(Token = "0x400252F")]
		private const float Severity1Threshold = 33f;

		[Token(Token = "0x4002530")]
		private const float Severity2Threshold = 66f;

		[Token(Token = "0x4002531")]
		private const float Severity3Threshold = 100f;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private SceneController _sceneController;

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xF13304", Offset = "0xF13304", VA = "0xF13304")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xF136A0", Offset = "0xF136A0", VA = "0xF136A0")]
		private void OnSeveritySliderChanged(float newValue)
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xF13A30", Offset = "0xF13A30", VA = "0xF13A30")]
		private void SliderChanged(SkinnedMeshRenderer valve, int severityProperty, float value, SliderTouchedByUser newLastSliderTouchedByUser)
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xF13B44", Offset = "0xF13B44", VA = "0xF13B44")]
		private void TreatmentToggleSelected(bool value)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xF13B78", Offset = "0xF13B78", VA = "0xF13B78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26554", Offset = "0xD26554")]
		private IEnumerator TreatmentCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xF13C14", Offset = "0xF13C14", VA = "0xF13C14")]
		private void ResetButtonSelected(bool val)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xF13FD4", Offset = "0xF13FD4", VA = "0xF13FD4")]
		private float SliderAverage()
		{
			return default(float);
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xF1406C", Offset = "0xF1406C", VA = "0xF1406C")]
		private void UpdateThresholds(float sliderAverage)
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xF138F8", Offset = "0xF138F8", VA = "0xF138F8")]
		private void SetBlendShapesWithSeverity(SkinnedMeshRenderer valve, float severity)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xF13FB4", Offset = "0xF13FB4", VA = "0xF13FB4")]
		private void SetBlendShape(SkinnedMeshRenderer valve, AorticStenosisBlendShapes blendShape, float value)
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xF141A4", Offset = "0xF141A4", VA = "0xF141A4")]
		public AorticStenosisController()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xF14288", Offset = "0xF14288", VA = "0xF14288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD265B8", Offset = "0xD265B8")]
		private void <Initialize>b__34_0(float value)
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xF1431C", Offset = "0xF1431C", VA = "0xF1431C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD265C8", Offset = "0xD265C8")]
		private void <Initialize>b__34_1(float value)
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xF143B0", Offset = "0xF143B0", VA = "0xF143B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD265D8", Offset = "0xD265D8")]
		private void <Initialize>b__34_2(float value)
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class AorticStenosisSelector : BasicSelector
	{
		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AorticUISlider UIManager;

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xF146EC", Offset = "0xF146EC", VA = "0xF146EC", Slot = "5")]
		public override void OnMouseUp()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xF14A14", Offset = "0xF14A14", VA = "0xF14A14")]
		public AorticStenosisSelector()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class AorticUISlider : MonoBehaviour
	{
		[Token(Token = "0x20007DD")]
		public enum valveName
		{
			[Token(Token = "0x4003094")]
			Left,
			[Token(Token = "0x4003095")]
			Right,
			[Token(Token = "0x4003096")]
			North
		}

		[Token(Token = "0x20007DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E7B8", Offset = "0xD0E7B8")]
		private sealed class <FlashTeal>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material mat;

			[Token(Token = "0x400309A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string property;

			[Token(Token = "0x400309B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AorticUISlider <>4__this;

			[Token(Token = "0x400309C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <f>5__2;

			[Token(Token = "0x17000375")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B98")]
				[Address(RVA = "0xF157A8", Offset = "0xF157A8", VA = "0xF157A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000376")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B9A")]
				[Address(RVA = "0xF15810", Offset = "0xF15810", VA = "0xF15810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B95")]
			[Address(RVA = "0xF1553C", Offset = "0xF1553C", VA = "0xF1553C")]
			[DebuggerHidden]
			public <FlashTeal>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002B96")]
			[Address(RVA = "0xF15690", Offset = "0xF15690", VA = "0xF15690", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B97")]
			[Address(RVA = "0xF15694", Offset = "0xF15694", VA = "0xF15694", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B99")]
			[Address(RVA = "0xF157B0", Offset = "0xF157B0", VA = "0xF157B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CF00", Offset = "0xD1CF00")]
		public Slider slide;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CF38", Offset = "0xD1CF38")]
		public AorticStenosisControl control;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CF70", Offset = "0xD1CF70")]
		public Collider valveColliderL;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider valveColliderN;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider valveColliderR;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CFA8", Offset = "0xD1CFA8")]
		public float flashSpeed;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1CFE0", Offset = "0xD1CFE0")]
		public float valveOneValue;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float valveTwoValue;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float valveThreeValue;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float currentValue;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D018", Offset = "0xD1D018")]
		public Image img_L;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image img_N;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image img_R;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool loadingSettings;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int valve;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool postTreatment;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool toggleOneOn;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool toggleTwoOn;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool toggleThreeOn;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int lastValve;

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xF14A7C", Offset = "0xF14A7C", VA = "0xF14A7C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xF14C64", Offset = "0xF14C64", VA = "0xF14C64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xF14B5C", Offset = "0xF14B5C", VA = "0xF14B5C")]
		private void FindActiveToggle()
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xF14D74", Offset = "0xF14D74", VA = "0xF14D74")]
		private void updateValveValue()
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xF14E2C", Offset = "0xF14E2C", VA = "0xF14E2C")]
		private void UpdateSlider()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xF14EA0", Offset = "0xF14EA0", VA = "0xF14EA0")]
		public void OnValueChanged(float inValue)
		{
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xF14F10", Offset = "0xF14F10", VA = "0xF14F10")]
		public void setPostTreatment(bool val)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xF14F1C", Offset = "0xF14F1C", VA = "0xF14F1C")]
		public int getCurrentValve()
		{
			return default(int);
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xF12134", Offset = "0xF12134", VA = "0xF12134")]
		public float getAverage()
		{
			return default(float);
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xF14F24", Offset = "0xF14F24", VA = "0xF14F24")]
		public float getMax()
		{
			return default(float);
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xF12ED0", Offset = "0xF12ED0", VA = "0xF12ED0")]
		public void SaveSettings()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xF12FEC", Offset = "0xF12FEC", VA = "0xF12FEC")]
		public void LoadSettings()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xF14FE8", Offset = "0xF14FE8", VA = "0xF14FE8")]
		private void loadAllSettings()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xF15080", Offset = "0xF15080", VA = "0xF15080")]
		public void lockSlider()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xF150A0", Offset = "0xF150A0", VA = "0xF150A0")]
		public void unlockSlider()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xF150C0", Offset = "0xF150C0", VA = "0xF150C0")]
		public Vector4 getAorticSettings()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xF15100", Offset = "0xF15100", VA = "0xF15100")]
		public void setAorticSettings(Vector4 vals)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xF14C68", Offset = "0xF14C68", VA = "0xF14C68")]
		private void UpdateInput()
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xF15434", Offset = "0xF15434", VA = "0xF15434")]
		private void UpdateCollider(Collider collider, Renderer ren)
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xF1512C", Offset = "0xF1512C", VA = "0xF1512C")]
		private void HandleInput(Vector3 pos)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xF147F4", Offset = "0xF147F4", VA = "0xF147F4")]
		public void ProcessRaycast(GameObject go)
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xF154B8", Offset = "0xF154B8", VA = "0xF154B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD265E8", Offset = "0xD265E8")]
		private IEnumerator FlashTeal(Material mat, string property)
		{
			return null;
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xF1312C", Offset = "0xF1312C", VA = "0xF1312C")]
		public void LoadDefaults()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xF15568", Offset = "0xF15568", VA = "0xF15568")]
		public void FakeInput(valveName valve)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xF15664", Offset = "0xF15664", VA = "0xF15664")]
		public AorticUISlider()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class CallCombinedManager : MonoBehaviour
	{
		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CombinedManager combinedManager;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool transmit;

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xEF402C", Offset = "0xEF402C", VA = "0xEF402C")]
		public void AnimationDone()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xEF4088", Offset = "0xEF4088", VA = "0xEF4088")]
		public void AnimationStart()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xEF40E4", Offset = "0xEF40E4", VA = "0xEF40E4")]
		public CallCombinedManager()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class CombinedManager : MonoBehaviour
	{
		[Token(Token = "0x20007DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E7C8", Offset = "0xD0E7C8")]
		private sealed class <ShowHeart>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400309D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400309E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400309F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CombinedManager <>4__this;

			[Token(Token = "0x40030A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool skipFadeIn;

			[Token(Token = "0x17000377")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B9E")]
				[Address(RVA = "0xEF4CA8", Offset = "0xEF4CA8", VA = "0xEF4CA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000378")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BA0")]
				[Address(RVA = "0xEF4D10", Offset = "0xEF4D10", VA = "0xEF4D10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0xEF46C0", Offset = "0xEF46C0", VA = "0xEF46C0")]
			[DebuggerHidden]
			public <ShowHeart>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0xEF46F4", Offset = "0xEF46F4", VA = "0xEF46F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0xEF46F8", Offset = "0xEF46F8", VA = "0xEF46F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0xEF4CB0", Offset = "0xEF4CB0", VA = "0xEF4CB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera startingCamera;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject rightGeometryObject;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject leftGeometryObject;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator cameraAnimator;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LookAroundController lookAroundController;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D050", Offset = "0xD1D050")]
		[ReadOnly]
		public Toggle pauseToggle;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AppRunner app;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CameraFade fade;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool waitUntilDoneEventFromAnimation;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool waitUntilStartEventFromAnimation;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RuntimeAnimatorController animatorController;

		[Token(Token = "0x4002555")]
		private const float FadeTime = 3f;

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xEF419C", Offset = "0xEF419C", VA = "0xEF419C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xEF430C", Offset = "0xEF430C", VA = "0xEF430C")]
		public void InitPauseToggle()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xEF44D0", Offset = "0xEF44D0", VA = "0xEF44D0")]
		private void AnimationPaused()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xEF451C", Offset = "0xEF451C", VA = "0xEF451C")]
		private void AnimationResumed()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xEF4568", Offset = "0xEF4568", VA = "0xEF4568")]
		public void StartHeart()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xEF463C", Offset = "0xEF463C", VA = "0xEF463C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD2664C", Offset = "0xD2664C")]
		private IEnumerator ShowHeart(bool skipFadeIn = false)
		{
			return null;
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xEF4080", Offset = "0xEF4080", VA = "0xEF4080")]
		public void AnimationDone()
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xEF40DC", Offset = "0xEF40DC", VA = "0xEF40DC")]
		public void AnimationStart()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0xEF46EC", Offset = "0xEF46EC", VA = "0xEF46EC")]
		public CombinedManager()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class SyncAnim : MonoBehaviour
	{
		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AorticStenosisControl control;

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xE6F5D0", Offset = "0xE6F5D0", VA = "0xE6F5D0")]
		public void SyncMeVal(int val)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xE6F654", Offset = "0xE6F654", VA = "0xE6F654")]
		public void SyncEnd()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xE6F6F4", Offset = "0xE6F6F4", VA = "0xE6F6F4")]
		public SyncAnim()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class ColonSpeed : StateMachineBehaviour
	{
		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LinearLargeIntestineFXController colonControl;

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xEF40EC", Offset = "0xEF40EC", VA = "0xEF40EC", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xEF4160", Offset = "0xEF4160", VA = "0xEF4160", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xEF4194", Offset = "0xEF4194", VA = "0xEF4194")]
		public ColonSpeed()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class LinearLargeIntestineFXController : LargeIntestineFXController
	{
		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D09C", Offset = "0xD1D09C")]
		public AppRunner app;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D0D4", Offset = "0xD1D0D4")]
		private ZoneManager zman;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public TofuPadController tofuPadController;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D10C", Offset = "0xD1D10C")]
		public string zoomInScene;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public string zoomInSceneMobileVR;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D144", Offset = "0xD1D144")]
		public InfoBoxController infoBox;

		[Token(Token = "0x400255E")]
		private const int constipationInfoIndex = 11;

		[Token(Token = "0x400255F")]
		private const int diarrhesInfoIndex = 12;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D17C", Offset = "0xD1D17C")]
		public Toggle waterToggle;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public Toggle zoomInToggle;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public Toggle normalToggle;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public Toggle diarrheaToggle;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public Toggle constipationToggle;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Toggle reset;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D1B4", Offset = "0xD1D1B4")]
		public Animator anim;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D1EC", Offset = "0xD1D1EC")]
		public SkinnedMeshRenderer[] veinModels;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D224", Offset = "0xD1D224")]
		public UnityEvent systemOff;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public UnityEvent systemOn;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D25C", Offset = "0xD1D25C")]
		public bool questScene;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float[] layerWeights;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public float[] currentWeights;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public bool normal;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
		public bool diarhea;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x252")]
		public bool constipation;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x253")]
		public bool changingLayers;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public float layerChangeDuration;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public float layerChangeTime;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public float animTime;

		[Token(Token = "0x4002574")]
		private const string ANIMATOR_SPEED = "animatorSpeed";

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x22A7FFC", Offset = "0x22A7FFC", VA = "0x22A7FFC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x22A8000", Offset = "0x22A8000", VA = "0x22A8000")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x22A84D8", Offset = "0x22A84D8", VA = "0x22A84D8", Slot = "15")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x22A84E8", Offset = "0x22A84E8", VA = "0x22A84E8", Slot = "11")]
		protected override void startFecalProcess(bool hideButtons)
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x22A866C", Offset = "0x22A866C", VA = "0x22A866C", Slot = "12")]
		protected override void stopFecalProcess(bool hideButtons)
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x22A8810", Offset = "0x22A8810", VA = "0x22A8810", Slot = "14")]
		protected override void StopAllAnimations()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x22A88B0", Offset = "0x22A88B0", VA = "0x22A88B0", Slot = "13")]
		protected override void UpdateAnimator()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x22A88B4", Offset = "0x22A88B4", VA = "0x22A88B4")]
		public void normalControl(bool val)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x22A89A4", Offset = "0x22A89A4", VA = "0x22A89A4")]
		public void diarrheaControl(bool val)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x22A8A94", Offset = "0x22A8A94", VA = "0x22A8A94")]
		public void constipationControl(bool val)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x22A8B78", Offset = "0x22A8B78", VA = "0x22A8B78")]
		public void OnFecalToggled(bool val)
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x22A8BC4", Offset = "0x22A8BC4", VA = "0x22A8BC4")]
		public void OnWaterPressed(bool val)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x22A8CB4", Offset = "0x22A8CB4", VA = "0x22A8CB4", Slot = "5")]
		public override void OnFecalButtonPressed()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x22A8D00", Offset = "0x22A8D00", VA = "0x22A8D00", Slot = "6")]
		public override void OnFecalNormalButtonPressed()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x22A8D48", Offset = "0x22A8D48", VA = "0x22A8D48", Slot = "7")]
		public override void OnFecalDiarrheaButtonPressed()
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x22A8D94", Offset = "0x22A8D94", VA = "0x22A8D94", Slot = "8")]
		public override void OnFecalConstipationButtonPressed()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x22A8DD8", Offset = "0x22A8DD8", VA = "0x22A8DD8", Slot = "10")]
		public override void OnPauseButtonPressed()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x22A8F5C", Offset = "0x22A8F5C", VA = "0x22A8F5C", Slot = "9")]
		public override void OnFecalSliderUpdated(float val)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x22A90B0", Offset = "0x22A90B0", VA = "0x22A90B0")]
		private void OnZoomToggled(bool val)
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x22A9100", Offset = "0x22A9100", VA = "0x22A9100")]
		private void OnResetToggled(bool val)
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x22A91F0", Offset = "0x22A91F0", VA = "0x22A91F0")]
		private void ChangeLayers(float val)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x22A93D0", Offset = "0x22A93D0", VA = "0x22A93D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x22A9654", Offset = "0x22A9654", VA = "0x22A9654")]
		public LinearLargeIntestineFXController()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class ContentControls : MonoBehaviour
	{
		[Token(Token = "0x20007E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E7D8", Offset = "0xD0E7D8")]
		private sealed class <ChangeRevealState>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ContentControls <>4__this;

			[Token(Token = "0x40030A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <targetParamValue>5__2;

			[Token(Token = "0x40030A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <paramValue>5__3;

			[Token(Token = "0x40030A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <step>5__4;

			[Token(Token = "0x40030A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <currentState>5__5;

			[Token(Token = "0x17000379")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BA4")]
				[Address(RVA = "0xEF5354", Offset = "0xEF5354", VA = "0xEF5354", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BA6")]
				[Address(RVA = "0xEF53BC", Offset = "0xEF53BC", VA = "0xEF53BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0xEF50D4", Offset = "0xEF50D4", VA = "0xEF50D4")]
			[DebuggerHidden]
			public <ChangeRevealState>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0xEF5108", Offset = "0xEF5108", VA = "0xEF5108", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0xEF510C", Offset = "0xEF510C", VA = "0xEF510C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0xEF535C", Offset = "0xEF535C", VA = "0xEF535C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject labels;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject revealLabels;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject laserRay;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D294", Offset = "0xD1D294")]
		public float transitionTime;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer renderer;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string paramName;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minParamValue;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float maxParamValue;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D2CC", Offset = "0xD1D2CC")]
		public Toggle labelToggle;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle revealToggle;

		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Button upButton;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Button downButton;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isRevealed;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine revealTransitionCoroutine;

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xEF4D18", Offset = "0xEF4D18", VA = "0xEF4D18")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xEF4F78", Offset = "0xEF4F78", VA = "0xEF4F78")]
		public void OnDownButtonClicked()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xEF4F7C", Offset = "0xEF4F7C", VA = "0xEF4F7C")]
		public void OnUpButtonClicked()
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xEF4F80", Offset = "0xEF4F80", VA = "0xEF4F80")]
		public void OnRevelToggled(bool val)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xEF4FC4", Offset = "0xEF4FC4", VA = "0xEF4FC4")]
		public void OnLableToggled(bool val)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xEF4FE4", Offset = "0xEF4FE4", VA = "0xEF4FE4")]
		public void ToggleLabels()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xEF5024", Offset = "0xEF5024", VA = "0xEF5024")]
		public void ShowLaserRay()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xEF5044", Offset = "0xEF5044", VA = "0xEF5044")]
		public void HideLaserRay()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xEF4F84", Offset = "0xEF4F84", VA = "0xEF4F84")]
		public void ToggleReveal()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xEF5064", Offset = "0xEF5064", VA = "0xEF5064")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD266B0", Offset = "0xD266B0")]
		private IEnumerator ChangeRevealState()
		{
			return null;
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xEF5100", Offset = "0xEF5100", VA = "0xEF5100")]
		public ContentControls()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class SkinEczemaController : MonoBehaviour
	{
		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D304", Offset = "0xD1D304")]
		public AppRunner app;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D33C", Offset = "0xD1D33C")]
		public string zoomInScene;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D374", Offset = "0xD1D374")]
		public InfoBoxController infoBox;

		[Token(Token = "0x4002586")]
		private const int contactInfoIndex = 11;

		[Token(Token = "0x4002587")]
		private const int diarrhesInfoIndex = 12;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D3AC", Offset = "0xD1D3AC")]
		public Toggle atopicToggle;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle dyshridoticToggle;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Toggle contactToggle;

		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D3E4", Offset = "0xD1D3E4")]
		public Slider timeSlider;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D41C", Offset = "0xD1D41C")]
		public Animator anim;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D454", Offset = "0xD1D454")]
		public UnityEvent systemOff;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent systemOn;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float[] layerWeights;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float[] currentWeights;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool atopic;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool dyshridotic;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public bool contact;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public bool changingLayers;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float layerChangeDuration;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float layerChangeTime;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float animTime;

		[Token(Token = "0x4002598")]
		private const string ANIMATOR_SPEED = "Time";

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x22B8664", Offset = "0x22B8664", VA = "0x22B8664")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x22B89BC", Offset = "0x22B89BC", VA = "0x22B89BC")]
		public void atopicControl(bool val)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x22B8ACC", Offset = "0x22B8ACC", VA = "0x22B8ACC")]
		public void dyshridoticControl(bool val)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x22B8BDC", Offset = "0x22B8BDC", VA = "0x22B8BDC")]
		public void contactControl(bool val)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x22B8D00", Offset = "0x22B8D00", VA = "0x22B8D00")]
		public void OnTimeSliderUpdated(float val)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x22B8DB0", Offset = "0x22B8DB0", VA = "0x22B8DB0")]
		private void ChangeLayers(float val)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x22B8F48", Offset = "0x22B8F48", VA = "0x22B8F48")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x22B901C", Offset = "0x22B901C", VA = "0x22B901C")]
		public SkinEczemaController()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class SmallIntestineController : MonoBehaviour
	{
		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D48C", Offset = "0xD1D48C")]
		public InfoBoxController infoBox;

		[Token(Token = "0x400259A")]
		private const int contractionInfoIndex = 11;

		[Token(Token = "0x400259B")]
		private const int singleInfoIndex = 12;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D4C4", Offset = "0xD1D4C4")]
		public Toggle onToggle;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle normalToggle;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle singleToggle;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle contractionToggle;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Toggle reset;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider timeSlider;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D4FC", Offset = "0xD1D4FC")]
		public Animator anim;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float[] layerWeights;

		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float[] currentWeights;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool normal;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool single;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool contraction;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool changingLayers;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float layerChangeDuration;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float layerChangeTime;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float animTime;

		[Token(Token = "0x40025AC")]
		private const string ANIMATOR_SPEED = "animatorSpeed";

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x22B9ACC", Offset = "0x22B9ACC", VA = "0x22B9ACC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x22B9ED8", Offset = "0x22B9ED8", VA = "0x22B9ED8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x22B9DE8", Offset = "0x22B9DE8", VA = "0x22B9DE8")]
		public void NormalControl(bool val)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x22B9EDC", Offset = "0x22B9EDC", VA = "0x22B9EDC")]
		public void SingleControl(bool val)
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x22B9FCC", Offset = "0x22B9FCC", VA = "0x22B9FCC")]
		public void ContractionControl(bool val)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x22BA0B0", Offset = "0x22BA0B0", VA = "0x22BA0B0")]
		private void OnResetToggled(bool val)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x22BA1A0", Offset = "0x22BA1A0", VA = "0x22BA1A0")]
		private void ChangeLayers(float val)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x22BA4C0", Offset = "0x22BA4C0", VA = "0x22BA4C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x22BA59C", Offset = "0x22BA59C", VA = "0x22BA59C")]
		public void TimeSliderUpdated(float val)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x22BA64C", Offset = "0x22BA64C", VA = "0x22BA64C")]
		public SmallIntestineController()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class SmallIntestineSpeed : StateMachineBehaviour
	{
		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SmallIntestineController intestineControl;

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xE6C110", Offset = "0xE6C110", VA = "0xE6C110", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xE6C184", Offset = "0xE6C184", VA = "0xE6C184", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xE6C1B8", Offset = "0xE6C1B8", VA = "0xE6C1B8")]
		public SmallIntestineSpeed()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class VirusInfluenzaController : MonoBehaviour
	{
		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D534", Offset = "0xD1D534")]
		[HideInInspector]
		public Toggle rnaToggle;

		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve animCurve;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D580", Offset = "0xD1D580")]
		public Animator animRNA;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D5B8", Offset = "0xD1D5B8")]
		public CameraTarget[] camTargets;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int fromCamIndex;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int toCamIndex;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool changeCamPos;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float camTransformDuration;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float timeLeft;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float cameraToCapsuleRootDistance;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform capsuleRootJoint;

		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform vrCamera;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject capsuleAndProng;

		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D5F0", Offset = "0xD1D5F0")]
		public Color backgroundColorWithPPP;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color backgroundColorNoPPP;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PostProcessingBehaviour pppBehaviour;

		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Camera camera;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool vrRNAReturn;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion startRotation;

		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 startPosition;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public LegacyCameraControl camControl;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InfoBoxController _infoControl;

		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private AnchorVisibilityManager_pointBased _labelsVisibilityManager;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private LabelsManager _labelsManager;

		[Token(Token = "0x1700019B")]
		private InfoBoxController infoControl
		{
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x22D8928", Offset = "0x22D8928", VA = "0x22D8928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		private AnchorVisibilityManager_pointBased labelsVisibilityManager
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0x22D89DC", Offset = "0x22D89DC", VA = "0x22D89DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		private LabelsManager labelsManager
		{
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x22D8A90", Offset = "0x22D8A90", VA = "0x22D8A90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x22D8B44", Offset = "0x22D8B44", VA = "0x22D8B44")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x22D8BB8", Offset = "0x22D8BB8", VA = "0x22D8BB8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x22D9450", Offset = "0x22D9450", VA = "0x22D9450")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x22D9590", Offset = "0x22D9590", VA = "0x22D9590")]
		public void RNAToggle(bool val)
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x22D9758", Offset = "0x22D9758", VA = "0x22D9758")]
		public VirusInfluenzaController()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public class PropagateComponentsSettings : MonoBehaviour
	{
		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool propagateLabelsSceneName;

		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool propagateInfoBoxSettings;

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x22AE81C", Offset = "0x22AE81C", VA = "0x22AE81C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x22AE824", Offset = "0x22AE824", VA = "0x22AE824")]
		public void SetLabelsSceneName(string sceneName)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x22AE90C", Offset = "0x22AE90C", VA = "0x22AE90C")]
		public void SetInfoBoxSettings(string sceneName, string sceneConditionName, string url, string videoHeader)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x22AEA40", Offset = "0x22AEA40", VA = "0x22AEA40")]
		public void PropagateLabelsSceneName()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x22AEC0C", Offset = "0x22AEC0C", VA = "0x22AEC0C")]
		public void PropagateInfoBoxSettings()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x22AEE5C", Offset = "0x22AEE5C", VA = "0x22AEE5C")]
		public PropagateComponentsSettings()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class AutomatedFieldChecker : AutomatedSceneCycler
	{
		[Token(Token = "0x20007E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E7E8", Offset = "0xD0E7E8")]
		private sealed class <OnSceneLoaded>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AutomatedFieldChecker <>4__this;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BAA")]
				[Address(RVA = "0xF17B68", Offset = "0xF17B68", VA = "0xF17B68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BAC")]
				[Address(RVA = "0xF17BD0", Offset = "0xF17BD0", VA = "0xF17BD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0xF179A4", Offset = "0xF179A4", VA = "0xF179A4")]
			[DebuggerHidden]
			public <OnSceneLoaded>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0xF17B14", Offset = "0xF17B14", VA = "0xF17B14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0xF17B18", Offset = "0xF17B18", VA = "0xF17B18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0xF17B70", Offset = "0xF17B70", VA = "0xF17B70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AutomatedFieldChecker instance;

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xF17818", Offset = "0xF17818", VA = "0xF17818")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xF1792C", Offset = "0xF1792C", VA = "0xF1792C", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xF17934", Offset = "0xF17934", VA = "0xF17934", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26714", Offset = "0xD26714")]
		protected override IEnumerator OnSceneLoaded()
		{
			return null;
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xF179D0", Offset = "0xF179D0", VA = "0xF179D0", Slot = "6")]
		protected override void OnComplete()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xF179D8", Offset = "0xF179D8", VA = "0xF179D8")]
		public AutomatedFieldChecker()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xF17AB0", Offset = "0xF17AB0", VA = "0xF17AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26778", Offset = "0xD26778")]
		[DebuggerHidden]
		private IEnumerator <>n__0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000497")]
	public class AutomatedSceneCycler : MonoBehaviour
	{
		[Token(Token = "0x20007E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E7F8", Offset = "0xD0E7F8")]
		private sealed class <OnSceneLoaded>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700037D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BB0")]
				[Address(RVA = "0xF17D9C", Offset = "0xF17D9C", VA = "0xF17D9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BB2")]
				[Address(RVA = "0xF17E04", Offset = "0xF17E04", VA = "0xF17E04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0xF17BD8", Offset = "0xF17BD8", VA = "0xF17BD8")]
			[DebuggerHidden]
			public <OnSceneLoaded>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0xF17D64", Offset = "0xF17D64", VA = "0xF17D64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0xF17D68", Offset = "0xF17D68", VA = "0xF17D68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0xF17DA4", Offset = "0xF17DA4", VA = "0xF17DA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D628", Offset = "0xD1D628")]
		[SerializeField]
		protected float delayAfterLoad;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string folder;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string timestamp;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected string saveFolder;

		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1D684", Offset = "0xD1D684")]
		[SerializeField]
		private string[] scenesToExclude;

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xF17930", Offset = "0xF17930", VA = "0xF17930", Slot = "4")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xF17AB4", Offset = "0xF17AB4", VA = "0xF17AB4", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD267B0", Offset = "0xD267B0")]
		protected virtual IEnumerator OnSceneLoaded()
		{
			return null;
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xF179D4", Offset = "0xF179D4", VA = "0xF179D4", Slot = "6")]
		protected virtual void OnComplete()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xF17C04", Offset = "0xF17C04", VA = "0xF17C04")]
		private void SetupOutputFolder()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xF179DC", Offset = "0xF179DC", VA = "0xF179DC")]
		public AutomatedSceneCycler()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class ScreenshotAutomator : AutomatedSceneCycler
	{
		[Token(Token = "0x20007E3")]
		private enum MutuallyExclusiveLeftBarToggles
		{
			[Token(Token = "0x40030AE")]
			None,
			[Token(Token = "0x40030AF")]
			Settings,
			[Token(Token = "0x40030B0")]
			Help,
			[Token(Token = "0x40030B1")]
			Tools,
			[Token(Token = "0x40030B2")]
			Labels,
			[Token(Token = "0x40030B3")]
			Library
		}

		[Token(Token = "0x20007E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E808", Offset = "0xD0E808")]
		private sealed class <OnSceneLoaded>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotAutomator <>4__this;

			[Token(Token = "0x40030B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <maxZone>5__2;

			[Token(Token = "0x40030B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ZoneManager <zoneManager>5__3;

			[Token(Token = "0x40030B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <zone>5__4;

			[Token(Token = "0x1700037F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BB6")]
				[Address(RVA = "0x22B85C8", Offset = "0x22B85C8", VA = "0x22B85C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BB8")]
				[Address(RVA = "0x22B8630", Offset = "0x22B8630", VA = "0x22B8630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x22B6B0C", Offset = "0x22B6B0C", VA = "0x22B6B0C")]
			[DebuggerHidden]
			public <OnSceneLoaded>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0x22B81D8", Offset = "0x22B81D8", VA = "0x22B81D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x22B81DC", Offset = "0x22B81DC", VA = "0x22B81DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0x22B85D0", Offset = "0x22B85D0", VA = "0x22B85D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E818", Offset = "0xD0E818")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x40030BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0x22B7F14", Offset = "0x22B7F14", VA = "0x22B7F14")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0x22B8124", Offset = "0x22B8124", VA = "0x22B8124")]
			internal bool <SimulateClickOnObjectNamed>b__0(GameObject obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E828", Offset = "0xD0E828")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40030BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0x22B80A4", Offset = "0x22B80A4", VA = "0x22B80A4")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0x22B8160", Offset = "0x22B8160", VA = "0x22B8160")]
			internal bool <SimulateClickOnObjectNamedWithParent>b__0(GameObject obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E838", Offset = "0xD0E838")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40030BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0x22B80AC", Offset = "0x22B80AC", VA = "0x22B80AC")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0x22B819C", Offset = "0x22B819C", VA = "0x22B819C")]
			internal bool <SetToggleStateOnObjectNamed>b__0(GameObject obj)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ScreenshotAutomator instance;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D6C0", Offset = "0xD1D6C0")]
		[SerializeField]
		private int sizeMultiplier;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool showAllTooltips;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[SerializeField]
		private bool exitPlayModeWhenDone;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D72C", Offset = "0xD1D72C")]
		[SerializeField]
		private bool hideUI;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[SerializeField]
		private bool hideFloor;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D788", Offset = "0xD1D788")]
		[SerializeField]
		private bool capture;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool info;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool controls;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private MutuallyExclusiveLeftBarToggles leftBarToggles;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D804", Offset = "0xD1D804")]
		[SerializeField]
		private bool captureAllZones;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D850", Offset = "0xD1D850")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1D850", Offset = "0xD1D850")]
		private float xrRigZoomOut;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D8B4", Offset = "0xD1D8B4")]
		[SerializeField]
		private bool logFPS;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string fpsLogPath;

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x22B66B8", Offset = "0x22B66B8", VA = "0x22B66B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x22B67CC", Offset = "0x22B67CC", VA = "0x22B67CC", Slot = "4")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x22B6A9C", Offset = "0x22B6A9C", VA = "0x22B6A9C", Slot = "5")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26814", Offset = "0xD26814")]
		protected override IEnumerator OnSceneLoaded()
		{
			return null;
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x22B6B38", Offset = "0x22B6B38", VA = "0x22B6B38", Slot = "6")]
		protected override void OnComplete()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x22B6C38", Offset = "0x22B6C38", VA = "0x22B6C38")]
		private void CaptureScreenShotForRevealZone(int zone, string saveFolder)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x22B709C", Offset = "0x22B709C", VA = "0x22B709C")]
		private void HideUi()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x22B7160", Offset = "0x22B7160", VA = "0x22B7160")]
		private void HideFloors()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x22B7230", Offset = "0x22B7230", VA = "0x22B7230")]
		private void ShowAllTooltips()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x22B7360", Offset = "0x22B7360", VA = "0x22B7360")]
		private void SimulateClicks()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x22B78E0", Offset = "0x22B78E0", VA = "0x22B78E0")]
		private void SimulateClickOnObjectNamed(string name)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x22B7BBC", Offset = "0x22B7BBC", VA = "0x22B7BBC")]
		private void SimulateClickOnObjectNamedWithParent(string name, string parentName)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x22B7F1C", Offset = "0x22B7F1C", VA = "0x22B7F1C")]
		private void SimulateClickOnGameObject(GameObject go)
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x22B747C", Offset = "0x22B747C", VA = "0x22B747C")]
		private void SetToggleStateOnObjectNamed(string name, bool newIsOn)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x22B80B4", Offset = "0x22B80B4", VA = "0x22B80B4")]
		public ScreenshotAutomator()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x22B811C", Offset = "0x22B811C", VA = "0x22B811C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26878", Offset = "0xD26878")]
		[DebuggerHidden]
		private IEnumerator <>n__0()
		{
			return null;
		}
	}
	[Token(Token = "0x2000499")]
	public class ApplyBuildInfo : MonoBehaviour
	{
		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xF170D4", Offset = "0xF170D4", VA = "0xF170D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xF17188", Offset = "0xF17188", VA = "0xF17188")]
		public ApplyBuildInfo()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class AppRunnerGUIController : GUIController
	{
		[Token(Token = "0x20007E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E848", Offset = "0xD0E848")]
		private sealed class <FadeOut>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppRunnerGUIController <>4__this;

			[Token(Token = "0x40030C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x40030C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Color <c>5__3;

			[Token(Token = "0x17000381")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BC2")]
				[Address(RVA = "0xF16960", Offset = "0xF16960", VA = "0xF16960", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BC4")]
				[Address(RVA = "0xF169C8", Offset = "0xF169C8", VA = "0xF169C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0xF16394", Offset = "0xF16394", VA = "0xF16394")]
			[DebuggerHidden]
			public <FadeOut>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0xF16750", Offset = "0xF16750", VA = "0xF16750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0xF16754", Offset = "0xF16754", VA = "0xF16754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0xF16968", Offset = "0xF16968", VA = "0xF16968", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E858", Offset = "0xD0E858")]
		private sealed class <FadeIn>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AppRunnerGUIController <>4__this;

			[Token(Token = "0x40030C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BC8")]
				[Address(RVA = "0xF166E0", Offset = "0xF166E0", VA = "0xF166E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BCA")]
				[Address(RVA = "0xF16748", Offset = "0xF16748", VA = "0xF16748", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0xF16520", Offset = "0xF16520", VA = "0xF16520")]
			[DebuggerHidden]
			public <FadeIn>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0xF16560", Offset = "0xF16560", VA = "0xF16560", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0xF16564", Offset = "0xF16564", VA = "0xF16564", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0xF166E8", Offset = "0xF166E8", VA = "0xF166E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float faderDuration;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AppRunnerGUIControllerBridge bridge;

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xF160F4", Offset = "0xF160F4", VA = "0xF160F4", Slot = "4")]
		public override void Handshake()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xF16260", Offset = "0xF16260", VA = "0xF16260")]
		public void StartFadeOut()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xF16324", Offset = "0xF16324", VA = "0xF16324")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD268B0", Offset = "0xD268B0")]
		private IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xF163C0", Offset = "0xF163C0", VA = "0xF163C0")]
		public void StartFadeIn()
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xF164B0", Offset = "0xF164B0", VA = "0xF164B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26914", Offset = "0xD26914")]
		private IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xF1654C", Offset = "0xF1654C", VA = "0xF1654C")]
		public AppRunnerGUIController()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class AppRunnerGUIControllerBridge : GUIControllerBridge
	{
		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D900", Offset = "0xD1D900")]
		public AppRunner app;

		[Token(Token = "0x40025DF")]
		private const int BACK_BUTTON_ID = 0;

		[Token(Token = "0x40025E0")]
		private const int EXIT_BUTTON_ID = 1;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AppRunnerGUIController appControl;

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xF169D0", Offset = "0xF169D0", VA = "0xF169D0", Slot = "6")]
		public override void GetControl()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xF16AA0", Offset = "0xF16AA0", VA = "0xF16AA0", Slot = "7")]
		public override void InitalizeDelegates()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xF16BAC", Offset = "0xF16BAC", VA = "0xF16BAC", Slot = "5")]
		public override void Handshake(GUIController c)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xF16C4C", Offset = "0xF16C4C", VA = "0xF16C4C", Slot = "8")]
		public override void SliderChanged(int i, float v)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xF16D30", Offset = "0xF16D30", VA = "0xF16D30", Slot = "9")]
		public override void ToggledChanged(int i, bool v)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xF16E64", Offset = "0xF16E64", VA = "0xF16E64", Slot = "10")]
		public override void ButtonClicked(int i)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xF16FB0", Offset = "0xF16FB0", VA = "0xF16FB0", Slot = "11")]
		public override void ScrollRectMoved(int i, Vector2 v)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xF1709C", Offset = "0xF1709C", VA = "0xF1709C")]
		public void OnFadeIn()
		{
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xF170B4", Offset = "0xF170B4", VA = "0xF170B4")]
		public void OnFadeOut()
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xF170CC", Offset = "0xF170CC", VA = "0xF170CC")]
		public AppRunnerGUIControllerBridge()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class AtlasAppRunnerGUIController : GUIController
	{
		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AtlasAppRunnerGUIControllerBridge bridge;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xF17270", Offset = "0xF17270", VA = "0xF17270", Slot = "4")]
		public override void Handshake()
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xF172E8", Offset = "0xF172E8", VA = "0xF172E8")]
		public AtlasAppRunnerGUIController()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class AtlasAppRunnerGUIControllerBridge : GUIControllerBridge
	{
		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D938", Offset = "0xD1D938")]
		public AtlasAppRunner app;

		[Token(Token = "0x40025E4")]
		private const int BACK_BUTTON_ID = 0;

		[Token(Token = "0x40025E5")]
		private const int EXIT_BUTTON_ID = 1;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AtlasAppRunnerGUIController appControl;

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xF172F0", Offset = "0xF172F0", VA = "0xF172F0", Slot = "6")]
		public override void GetControl()
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xF1737C", Offset = "0xF1737C", VA = "0xF1737C", Slot = "5")]
		public override void Handshake(GUIController c)
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xF1741C", Offset = "0xF1741C", VA = "0xF1741C", Slot = "8")]
		public override void SliderChanged(int i, float v)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xF17500", Offset = "0xF17500", VA = "0xF17500", Slot = "9")]
		public override void ToggledChanged(int i, bool v)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xF175D8", Offset = "0xF175D8", VA = "0xF175D8", Slot = "10")]
		public override void ButtonClicked(int i)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xF17724", Offset = "0xF17724", VA = "0xF17724", Slot = "11")]
		public override void ScrollRectMoved(int i, Vector2 v)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xF17810", Offset = "0xF17810", VA = "0xF17810")]
		public AtlasAppRunnerGUIControllerBridge()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class BrainMicroscopicGUIController : GUIController
	{
		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BrainMicroscopicGUIControllerBridge bridge;

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xF198B8", Offset = "0xF198B8", VA = "0xF198B8", Slot = "4")]
		public override void Handshake()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xF199B8", Offset = "0xF199B8", VA = "0xF199B8")]
		public BrainMicroscopicGUIController()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class BrainMicroscopicGUIControllerBridge : GUIControllerBridge
	{
		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BrainMicroscopicGUIController brainControl;

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xF199C0", Offset = "0xF199C0", VA = "0xF199C0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xF199C8", Offset = "0xF199C8", VA = "0xF199C8", Slot = "6")]
		public override void GetControl()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xF199CC", Offset = "0xF199CC", VA = "0xF199CC", Slot = "5")]
		public override void Handshake(GUIController c)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xF19A6C", Offset = "0xF19A6C", VA = "0xF19A6C")]
		public BrainMicroscopicGUIControllerBridge()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public abstract class GUIController : MonoBehaviour
	{
		[Token(Token = "0x20007EA")]
		public delegate void OnToggled(int id, bool value);

		[Token(Token = "0x20007EB")]
		public delegate void OnButtonClick(int id);

		[Token(Token = "0x20007EC")]
		public delegate void OnSliderChange(int i, float value);

		[Token(Token = "0x20007ED")]
		public delegate void OnScrollRectMove(int i, Vector2 values);

		[Token(Token = "0x20007EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E868", Offset = "0xD0E868")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40030C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x40030C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GUIController <>4__this;

			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0xEF62B0", Offset = "0xEF62B0", VA = "0xEF62B0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xEF6E54", Offset = "0xEF6E54", VA = "0xEF6E54")]
			internal void <SetupDelegates>b__0(float data)
			{
			}
		}

		[Token(Token = "0x20007EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E878", Offset = "0xD0E878")]
		private sealed class <>c__DisplayClass21_1
		{
			[Token(Token = "0x40030C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x40030C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GUIController <>4__this;

			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0xEF62B8", Offset = "0xEF62B8", VA = "0xEF62B8")]
			public <>c__DisplayClass21_1()
			{
			}

			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0xEF6E80", Offset = "0xEF6E80", VA = "0xEF6E80")]
			internal void <SetupDelegates>b__1(bool data)
			{
			}
		}

		[Token(Token = "0x20007F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E888", Offset = "0xD0E888")]
		private sealed class <>c__DisplayClass21_2
		{
			[Token(Token = "0x40030CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x40030CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GUIController <>4__this;

			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0xEF62C0", Offset = "0xEF62C0", VA = "0xEF62C0")]
			public <>c__DisplayClass21_2()
			{
			}

			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0xEF6EB4", Offset = "0xEF6EB4", VA = "0xEF6EB4")]
			internal void <SetupDelegates>b__2()
			{
			}
		}

		[Token(Token = "0x20007F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E898", Offset = "0xD0E898")]
		private sealed class <>c__DisplayClass21_3
		{
			[Token(Token = "0x40030CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x40030CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GUIController <>4__this;

			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0xEF62C8", Offset = "0xEF62C8", VA = "0xEF62C8")]
			public <>c__DisplayClass21_3()
			{
			}

			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xEF6EE0", Offset = "0xEF6EE0", VA = "0xEF6EE0")]
			internal void <SetupDelegates>b__3(Vector2 data)
			{
			}
		}

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D970", Offset = "0xD1D970")]
		protected GUIControllerBridge control;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D9A8", Offset = "0xD1D9A8")]
		public Slider[] slides;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle[] togs;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button[] buts;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScrollRect[] sRects;

		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image[] imgs;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public RectTransform[] rects;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text[] texts;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OnToggled OnToggledChanged;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OnButtonClick OnButtonClicked;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public OnSliderChange OnSliderChanged;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public OnScrollRectMove OnScrollRectMoved;

		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected AppRunner app;

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xEF5C7C", Offset = "0xEF5C7C", VA = "0xEF5C7C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xEF5D04", Offset = "0xEF5D04", VA = "0xEF5D04")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xEF5D28", Offset = "0xEF5D28", VA = "0xEF5D28")]
		protected void InitializeHandshake()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xEF62AC", Offset = "0xEF62AC", VA = "0xEF62AC", Slot = "4")]
		public virtual void Handshake()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xEF5DF0", Offset = "0xEF5DF0", VA = "0xEF5DF0")]
		protected void SetupDelegates()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xEF62D0", Offset = "0xEF62D0", VA = "0xEF62D0")]
		public void SliderChanged(int i, float v)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xEF6560", Offset = "0xEF6560", VA = "0xEF6560")]
		public void ToggledChanged(int i, bool v)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xEF67F4", Offset = "0xEF67F4", VA = "0xEF67F4")]
		public void ButtonClicked(int i)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xEF6A64", Offset = "0xEF6A64", VA = "0xEF6A64")]
		public void ScrollRectMoved(int i, Vector2 v)
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xEF6D0C", Offset = "0xEF6D0C", VA = "0xEF6D0C")]
		public bool SetScrollRectValue(int id, Vector2 value)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xEF6D64", Offset = "0xEF6D64", VA = "0xEF6D64")]
		protected GUIController()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public abstract class GUIControllerBridge : MonoBehaviour
	{
		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1D9E0", Offset = "0xD1D9E0")]
		public ZoneManager zMan;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ASSETControl;

		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected GUIController control;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xEF7210", Offset = "0xEF7210", VA = "0xEF7210", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xEF7290", Offset = "0xEF7290", VA = "0xEF7290", Slot = "5")]
		public virtual void Handshake(GUIController c)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xEF7374", Offset = "0xEF7374", VA = "0xEF7374")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xEF7524", Offset = "0xEF7524", VA = "0xEF7524")]
		public void SetMainPadPosition(Vector2 value)
		{
		}

		[Token(Token = "0x6001D06")]
		public abstract void GetControl();

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xEF7608", Offset = "0xEF7608", VA = "0xEF7608", Slot = "7")]
		public virtual void InitalizeDelegates()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xEF77B8", Offset = "0xEF77B8", VA = "0xEF77B8", Slot = "8")]
		public virtual void SliderChanged(int i, float v)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xEF77BC", Offset = "0xEF77BC", VA = "0xEF77BC", Slot = "9")]
		public virtual void ToggledChanged(int i, bool v)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xEF77C0", Offset = "0xEF77C0", VA = "0xEF77C0", Slot = "10")]
		public virtual void ButtonClicked(int i)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xEF77C4", Offset = "0xEF77C4", VA = "0xEF77C4", Slot = "11")]
		public virtual void ScrollRectMoved(int i, Vector2 v)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xEF77C8", Offset = "0xEF77C8", VA = "0xEF77C8")]
		protected GUIControllerBridge()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class LarynxGUIController : GUIController
	{
		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LarynxGUIControllerBridge bridge;

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x22A429C", Offset = "0x22A429C", VA = "0x22A429C", Slot = "4")]
		public override void Handshake()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x22A43EC", Offset = "0x22A43EC", VA = "0x22A43EC")]
		public LarynxGUIController()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class LarynxGUIControllerBridge : GUIControllerBridge
	{
		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DA18", Offset = "0xD1DA18")]
		public GameObject labels;

		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LarynxGUIController larynxControl;

		[Token(Token = "0x40025FC")]
		private const int LABEL_TOG_ID = 0;

		[Token(Token = "0x40025FD")]
		private const int DRAW_TOOL_TOG_ID = 1;

		[Token(Token = "0x40025FE")]
		private const int SCREENSHOT_BUT_ID = 0;

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x22A43F4", Offset = "0x22A43F4", VA = "0x22A43F4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x22A4490", Offset = "0x22A4490", VA = "0x22A4490", Slot = "6")]
		public override void GetControl()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x22A4494", Offset = "0x22A4494", VA = "0x22A4494", Slot = "5")]
		public override void Handshake(GUIController c)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x22A4574", Offset = "0x22A4574", VA = "0x22A4574", Slot = "9")]
		public override void ToggledChanged(int i, bool v)
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x22A4688", Offset = "0x22A4688", VA = "0x22A4688", Slot = "11")]
		public override void ScrollRectMoved(int i, Vector2 v)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x22A46EC", Offset = "0x22A46EC", VA = "0x22A46EC", Slot = "10")]
		public override void ButtonClicked(int i)
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x22A46F0", Offset = "0x22A46F0", VA = "0x22A46F0")]
		public LarynxGUIControllerBridge()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class SkinGUIController : GUIController
	{
		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SkinGUIControllerBridge bridge;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public SkinUI skin;

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x22B902C", Offset = "0x22B902C", VA = "0x22B902C", Slot = "4")]
		public override void Handshake()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x22B9180", Offset = "0x22B9180", VA = "0x22B9180")]
		public SkinGUIController()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class SkinGUIControllerBridge : GUIControllerBridge
	{
		[Token(Token = "0x4002601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SkinGUIController skinControl;

		[Token(Token = "0x4002602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DA50", Offset = "0xD1DA50")]
		public GameObject labels;

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ContentControls cControl;

		[Token(Token = "0x4002604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SkinUI skin;

		[Token(Token = "0x4002605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LabelsController lControl;

		[Token(Token = "0x4002606")]
		private const int UP_TOG_ID = 0;

		[Token(Token = "0x4002607")]
		private const int DOWN_TOG_ID = 1;

		[Token(Token = "0x4002608")]
		private const int LABEL_TOG_ID = 2;

		[Token(Token = "0x4002609")]
		private const int UP_BUTTON_ID = 0;

		[Token(Token = "0x400260A")]
		private const int DOWN_BUTTON_ID = 1;

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x22B9188", Offset = "0x22B9188", VA = "0x22B9188", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x22B9268", Offset = "0x22B9268", VA = "0x22B9268", Slot = "6")]
		public override void GetControl()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x22B9318", Offset = "0x22B9318", VA = "0x22B9318", Slot = "5")]
		public override void Handshake(GUIController c)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x22B93B8", Offset = "0x22B93B8", VA = "0x22B93B8", Slot = "10")]
		public override void ButtonClicked(int i)
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x22B94D0", Offset = "0x22B94D0", VA = "0x22B94D0", Slot = "9")]
		public override void ToggledChanged(int i, bool v)
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x22B9610", Offset = "0x22B9610", VA = "0x22B9610")]
		public SkinGUIControllerBridge()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class InfoBoxController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E8A8", Offset = "0xD0E8A8")]
		private sealed class <>c
		{
			[Token(Token = "0x40030CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__62_0;

			[Token(Token = "0x40030D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__87_0;

			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0xEFA938", Offset = "0xEFA938", VA = "0xEFA938")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0xEFA940", Offset = "0xEFA940", VA = "0xEFA940")]
			internal bool <Start>b__62_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0xEFA964", Offset = "0xEFA964", VA = "0xEFA964")]
			internal bool <UpdateInfoWithPlaceholders>b__87_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20007F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E8B8", Offset = "0xD0E8B8")]
		private sealed class <Start>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InfoBoxController <>4__this;

			[Token(Token = "0x17000385")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BEA")]
				[Address(RVA = "0xEFB040", Offset = "0xEFB040", VA = "0xEFB040", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BEC")]
				[Address(RVA = "0xEFB0A8", Offset = "0xEFB0A8", VA = "0xEFB0A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0xEF9148", Offset = "0xEF9148", VA = "0xEF9148")]
			[DebuggerHidden]
			public <Start>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xEFA988", Offset = "0xEFA988", VA = "0xEFA988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0xEFA98C", Offset = "0xEFA98C", VA = "0xEFA98C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BEB")]
			[Address(RVA = "0xEFB048", Offset = "0xEFB048", VA = "0xEFB048", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E8C8", Offset = "0xD0E8C8")]
		private sealed class <UpdateInfoWithPlaceholders>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InfoBoxController <>4__this;

			[Token(Token = "0x17000387")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BF0")]
				[Address(RVA = "0xEFB230", Offset = "0xEFB230", VA = "0xEFB230", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF2")]
				[Address(RVA = "0xEFB298", Offset = "0xEFB298", VA = "0xEFB298", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BED")]
			[Address(RVA = "0xEFA560", Offset = "0xEFA560", VA = "0xEFA560")]
			[DebuggerHidden]
			public <UpdateInfoWithPlaceholders>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xEFB0B0", Offset = "0xEFB0B0", VA = "0xEFB0B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xEFB0B4", Offset = "0xEFB0B4", VA = "0xEFB0B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xEFB238", Offset = "0xEFB238", VA = "0xEFB238", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool openInfoOnSceneStart;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string dataSceneName;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string dataSceneCondition;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InfoBoxVideoControl videoControl;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WebcamViewController webcamControl;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform visibleOnCaptureParent;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizedString localizeEventListener;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform notVisibleOnCaptureParent;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle leftBarInfoToggle;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle LeftBarLabelsToggle;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle sceneInfoToggle;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle labelInfoToggle;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle videoInfoToggle;

		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle webcamViewToggle;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button windowedButton;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle voiceOverToggle;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject generalInfoFrame;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextMeshProUGUI sceneInfoText;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TextMeshProUGUI labelInfoTextField;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TextMeshProUGUI generalHeaderText;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TextMeshProUGUI videoHeaderText;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private TextMeshProUGUI labelHeaderText;

		[Token(Token = "0x4002621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ScrollRect sceneInfoScrollRect;

		[Token(Token = "0x4002622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ScrollRect labelInfoScrollRect;

		[Token(Token = "0x4002623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Animator generalInfoFrameAnimator;

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Animator infoBoxAnimator;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action infoCloseLabelsCallback;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private TofuToggleColorController voiceOverToggleColorControl;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private ZoneManager zMan;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private AppRunner appRunner;

		[Token(Token = "0x4002629")]
		private const int firstReveal = 1;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int lastActiveReveal;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int indexInHierarchy;

		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool fixInfo;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int fixedInfoIndex;

		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int voiceOverToPlay;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Dictionary<int, InfoBoxDataManager.InfoBoxInfo> sceneInfo;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private readonly Lazy<TofuSettingsAudioController> tofuSettingsAudioController;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private LabelsManager.LabelsPresentMode currentLabelsMode;

		[Token(Token = "0x4002632")]
		private const string labelsInfoHeaderPlaceholderKey = "InfoBox.LabelsHeader";

		[Token(Token = "0x4002633")]
		private const string webcamViewHeaderTextKey = "InfoBox.WebCamHeader";

		[Token(Token = "0x4002634")]
		private const string labelsListModeInfoTextFormatKey = "InfoBox.EmptyLabelInfoMsg";

		[Token(Token = "0x4002635")]
		private const string labelsDotsModeInfoTextKey = "InfoBox.EmptyDotModeMsg";

		[Token(Token = "0x4002636")]
		private const string animatorBoxActiveParameter = "Visible";

		[Token(Token = "0x4002637")]
		private const string animatorFullscreenVideoParameter = "FullScreenVideo";

		[Token(Token = "0x4002638")]
		private const string prefsVoiceoverAutoplay = "_voiceover_autoplayed";

		[Token(Token = "0x4002639")]
		private const string infoIconTag = "<sprite=\"You-GUI-Icon-Info-44x44\" index=0 color=#5D6A74>";

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool sceneInfoAvailable;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		private bool sceneVideoAvailable;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
		private bool fullScreenActive;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
		private bool captureVisibilityRequired;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool notifyLabelsController;

		[Token(Token = "0x1700019E")]
		private string labelsInfoText
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xEF8F40", Offset = "0xEF8F40", VA = "0xEF8F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private string labelsInfoHeaderPlaceholder
		{
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xEF9020", Offset = "0xEF9020", VA = "0xEF9020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private string webcamViewHeaderText
		{
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0xEF907C", Offset = "0xEF907C", VA = "0xEF907C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private string labelsDotsModeInfoText
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xEF8F54", Offset = "0xEF8F54", VA = "0xEF8F54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		private string labelsListModeInfoText
		{
			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xEF8FB0", Offset = "0xEF8FB0", VA = "0xEF8FB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xEF90D8", Offset = "0xEF90D8", VA = "0xEF90D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26978", Offset = "0xD26978")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xEF9174", Offset = "0xEF9174", VA = "0xEF9174")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xEF9514", Offset = "0xEF9514", VA = "0xEF9514")]
		private void OnLocaleChanged(string aString)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xEF987C", Offset = "0xEF987C", VA = "0xEF987C")]
		public void OnSceneFadeOut()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xEF98A0", Offset = "0xEF98A0", VA = "0xEF98A0")]
		public void OnInfoCloseButton()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xEF9A78", Offset = "0xEF9A78", VA = "0xEF9A78")]
		public void OnVoiceOverToggle(bool value)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xEF9B58", Offset = "0xEF9B58", VA = "0xEF9B58")]
		public void OnVoiceOverPlayEnd()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xEF9C14", Offset = "0xEF9C14", VA = "0xEF9C14")]
		public void OnLeftBarInfoToggle(bool value)
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xEF9E30", Offset = "0xEF9E30", VA = "0xEF9E30")]
		public void SetLabelInfoActive(bool value, string header = "", string text = "")
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xEF9F20", Offset = "0xEF9F20", VA = "0xEF9F20")]
		public void UpdateLabelInfo(string newHeader, string newText)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xEF9F7C", Offset = "0xEF9F7C", VA = "0xEF9F7C")]
		public void ShowLabelInfo(LabelData labelData)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xEF9FD8", Offset = "0xEF9FD8", VA = "0xEF9FD8")]
		public void OnLabelsSetActive(bool value)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xEFA028", Offset = "0xEFA028", VA = "0xEFA028")]
		public void OnLabelsModeChanged(LabelsManager.LabelsPresentMode mode)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xEF9938", Offset = "0xEF9938", VA = "0xEF9938")]
		public void SetWebcamActive(bool value)
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xEFA0FC", Offset = "0xEFA0FC", VA = "0xEFA0FC")]
		public void OnInfoToggle(bool value)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xEFA158", Offset = "0xEFA158", VA = "0xEFA158")]
		public void OnWebcamToggle(bool value)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xEFA1D4", Offset = "0xEFA1D4", VA = "0xEFA1D4")]
		public void OnLabelToggle(bool value)
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xEFA278", Offset = "0xEFA278", VA = "0xEFA278")]
		public void OnVideoToggle(bool value)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xEFA2C0", Offset = "0xEFA2C0", VA = "0xEFA2C0")]
		public void OnVideoFullscreenToggle(bool value)
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xEFA388", Offset = "0xEFA388", VA = "0xEFA388")]
		public void OnRevealChanged(int newZone, int oldZone)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xEF2D20", Offset = "0xEF2D20", VA = "0xEF2D20")]
		public void LockInfoToReveal(int revealIndex)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xEF0DC4", Offset = "0xEF0DC4", VA = "0xEF0DC4")]
		public void UnlockInfoUpdate()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xEFA068", Offset = "0xEFA068", VA = "0xEFA068")]
		private void UpdateLeftBarToggleStatus()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xEFA3B0", Offset = "0xEFA3B0", VA = "0xEFA3B0")]
		private void UpdateBottomTogglesStatus()
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xEF95B8", Offset = "0xEF95B8", VA = "0xEF95B8")]
		private void UpdateSceneInfoText(int reveal = -99)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xEFA4F0", Offset = "0xEFA4F0", VA = "0xEFA4F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD269DC", Offset = "0xD269DC")]
		private IEnumerator UpdateInfoWithPlaceholders()
		{
			return null;
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xEFA58C", Offset = "0xEFA58C", VA = "0xEFA58C")]
		public void OnMovieRecordStarted()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xEFA754", Offset = "0xEFA754", VA = "0xEFA754")]
		public void OnMovieRecordFinished()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xEFA618", Offset = "0xEFA618", VA = "0xEFA618")]
		private void MoveToMovieCaptureCanvas(bool value)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xEFA75C", Offset = "0xEFA75C", VA = "0xEFA75C")]
		private void VoiceoverAutoplay()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xEF86B4", Offset = "0xEF86B4", VA = "0xEF86B4")]
		public void CheckAndPlayVoiceover()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xEFA7E4", Offset = "0xEFA7E4", VA = "0xEFA7E4")]
		public InfoBoxController()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class PointerEventUtility : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IPointerDownHandler, IPointerUpHandler, IPointerClickHandler
	{
		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onBeginDrag;

		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onEndDrag;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onPointerDown;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent onPointerUp;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent onPointerClick;

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x22AE7A8", Offset = "0x22AE7A8", VA = "0x22AE7A8", Slot = "4")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x22AE7BC", Offset = "0x22AE7BC", VA = "0x22AE7BC", Slot = "5")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x22AE7D0", Offset = "0x22AE7D0", VA = "0x22AE7D0", Slot = "6")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x22AE7E4", Offset = "0x22AE7E4", VA = "0x22AE7E4", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x22AE7F8", Offset = "0x22AE7F8", VA = "0x22AE7F8", Slot = "8")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x22AE80C", Offset = "0x22AE80C", VA = "0x22AE80C")]
		public PointerEventUtility()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class QuizLabels_BodyHelper : MonoBehaviour
	{
		[Token(Token = "0x20007F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E8D8", Offset = "0xD0E8D8")]
		private sealed class <MoveSliders>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuizLabels_BodyHelper <>4__this;

			[Token(Token = "0x40030DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float organEndValue;

			[Token(Token = "0x40030DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float systemEndValue;

			[Token(Token = "0x40030DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <organStartValue>5__2;

			[Token(Token = "0x40030DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <systemStartValue>5__3;

			[Token(Token = "0x40030DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40030DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <progress>5__5;

			[Token(Token = "0x17000389")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BF6")]
				[Address(RVA = "0x22B14E8", Offset = "0x22B14E8", VA = "0x22B14E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF8")]
				[Address(RVA = "0x22B1550", Offset = "0x22B1550", VA = "0x22B1550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0x22B12C8", Offset = "0x22B12C8", VA = "0x22B12C8")]
			[DebuggerHidden]
			public <MoveSliders>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0x22B1304", Offset = "0x22B1304", VA = "0x22B1304", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0x22B1308", Offset = "0x22B1308", VA = "0x22B1308", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0x22B14F0", Offset = "0x22B14F0", VA = "0x22B14F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SrlSlider organSlider;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SrlSlider systemSlider;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _originalOrganSliderValue;

		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _originalSystemSliderValue;

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x22B11A0", Offset = "0x22B11A0", VA = "0x22B11A0")]
		public void StartQuiz()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x22B1298", Offset = "0x22B1298", VA = "0x22B1298")]
		public void EndQuiz()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x22B1214", Offset = "0x22B1214", VA = "0x22B1214")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26A40", Offset = "0xD26A40")]
		private IEnumerator MoveSliders(float organEndValue, float systemEndValue)
		{
			return null;
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x22B12F4", Offset = "0x22B12F4", VA = "0x22B12F4")]
		public QuizLabels_BodyHelper()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class QuizLabels_Controller : MonoBehaviour
	{
		[Token(Token = "0x20007F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E8E8", Offset = "0xD0E8E8")]
		private sealed class <StartQuiz>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuizLabels_Controller <>4__this;

			[Token(Token = "0x1700038B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BFC")]
				[Address(RVA = "0x22B3950", Offset = "0x22B3950", VA = "0x22B3950", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BFE")]
				[Address(RVA = "0x22B39B8", Offset = "0x22B39B8", VA = "0x22B39B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0x22B1D4C", Offset = "0x22B1D4C", VA = "0x22B1D4C")]
			[DebuggerHidden]
			public <StartQuiz>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0x22B36CC", Offset = "0x22B36CC", VA = "0x22B36CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0x22B36D0", Offset = "0x22B36D0", VA = "0x22B36D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0x22B3958", Offset = "0x22B3958", VA = "0x22B3958", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20007F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E8F8", Offset = "0xD0E8F8")]
		private sealed class <>c
		{
			[Token(Token = "0x40030E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<LabelData, bool> <>9__53_0;

			[Token(Token = "0x40030E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<LabelData, Guid> <>9__53_1;

			[Token(Token = "0x6002C00")]
			[Address(RVA = "0x22B3330", Offset = "0x22B3330", VA = "0x22B3330")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C01")]
			[Address(RVA = "0x22B3338", Offset = "0x22B3338", VA = "0x22B3338")]
			internal bool <GenerateRandomSteps>b__53_0(LabelData a)
			{
				return default(bool);
			}

			[Token(Token = "0x6002C02")]
			[Address(RVA = "0x22B3358", Offset = "0x22B3358", VA = "0x22B3358")]
			internal Guid <GenerateRandomSteps>b__53_1(LabelData a)
			{
				return default(Guid);
			}
		}

		[Token(Token = "0x20007F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E908", Offset = "0xD0E908")]
		private sealed class <BlinkingHighlight>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuizLabels_Controller <>4__this;

			[Token(Token = "0x1700038D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C06")]
				[Address(RVA = "0x22B3510", Offset = "0x22B3510", VA = "0x22B3510", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C08")]
				[Address(RVA = "0x22B3578", Offset = "0x22B3578", VA = "0x22B3578", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C03")]
			[Address(RVA = "0x22B2DF0", Offset = "0x22B2DF0", VA = "0x22B2DF0")]
			[DebuggerHidden]
			public <BlinkingHighlight>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6002C04")]
			[Address(RVA = "0x22B33B8", Offset = "0x22B33B8", VA = "0x22B33B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C05")]
			[Address(RVA = "0x22B33BC", Offset = "0x22B33BC", VA = "0x22B33BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0x22B3518", Offset = "0x22B3518", VA = "0x22B3518", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E918", Offset = "0xD0E918")]
		private sealed class <SafeUIPanelsRemove>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuizLabels_Controller <>4__this;

			[Token(Token = "0x1700038F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C0C")]
				[Address(RVA = "0x22B365C", Offset = "0x22B365C", VA = "0x22B365C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000390")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C0E")]
				[Address(RVA = "0x22B36C4", Offset = "0x22B36C4", VA = "0x22B36C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C09")]
			[Address(RVA = "0x22B3070", Offset = "0x22B3070", VA = "0x22B3070")]
			[DebuggerHidden]
			public <SafeUIPanelsRemove>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0x22B3580", Offset = "0x22B3580", VA = "0x22B3580", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0x22B3584", Offset = "0x22B3584", VA = "0x22B3584", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0x22B3664", Offset = "0x22B3664", VA = "0x22B3664", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int numberOfSteps;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color labelsCorrectHighlight;

		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color labelsIncorrectHighlight;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color labelsActiveHighlight;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material markerDotMaterial;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material markerCircleMaterial;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VR3DButton quizToggleVr;

		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1DC78", Offset = "0xD1DC78")]
		[SerializeField]
		private UnityEvent onStartQuiz;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnityEvent onEndQuiz;

		[Token(Token = "0x4002652")]
		private const string PrefsDontShowStartDialog = "DontShowQuizStartDialog";

		[Token(Token = "0x4002653")]
		private const string DialogButtonTitleKey = "LabelsQuiz.StartDialogGo";

		[Token(Token = "0x4002654")]
		private const string DialogHeaderKey = "LabelsQuiz.StartDialogHeader";

		[Token(Token = "0x4002655")]
		private const string CloseDialogHeaderKey = "LabelsQuiz.CloseDialogHeader";

		[Token(Token = "0x4002656")]
		private const string CloseDialogTextKey = "LabelsQuiz.CloseDialogText";

		[Token(Token = "0x4002657")]
		private const string CloseDialogButtonsHeaderKey = "Shared.AreYouSure";

		[Token(Token = "0x4002658")]
		private const string CloseDialogFirstButtonTitleKey = "Shared.Yes";

		[Token(Token = "0x4002659")]
		private const string CloseDialogSecondButtonTitleKey = "Shared.No";

		[Token(Token = "0x400265A")]
		private const string CloseDialogDontShowAgainTextKey = "Shared.DisableAllConfirmations";

		[Token(Token = "0x400265B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly List<QuizLabels_EntryData> currentQuizSteps;

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private QuizLabels_ObjectToHideMarker[] objectsToHide;

		[Token(Token = "0x400265D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3[] objectsLastPositions;

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Vector3 panelsHidePosition;

		[Token(Token = "0x400265F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private XR_OrganManipulator organManipulator;

		[Token(Token = "0x4002660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Color defaultClippedDotColor;

		[Token(Token = "0x4002661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color defaultNotClippedDotColor;

		[Token(Token = "0x4002662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color defaultClippedCircleColor;

		[Token(Token = "0x4002663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Color defaultNotClippedCircleColor;

		[Token(Token = "0x4002664")]
		private const string clippedColorProperty = "_Color";

		[Token(Token = "0x4002665")]
		private const string notClippedColorProperty = "_Color2";

		[Token(Token = "0x4002666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float highlightBlinkInterval;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool materialsChanged;

		[Token(Token = "0x4002668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
		private bool colorsAreSaved;

		[Token(Token = "0x4002669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEE")]
		private bool startDialogIsActive;

		[Token(Token = "0x400266A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEF")]
		private bool blinkActive;

		[Token(Token = "0x400266B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private LabelsManager _labelsManager;

		[Token(Token = "0x400266C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private QuizLabels_ProgressPanel _progressPanel;

		[Token(Token = "0x400266D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private QuizLabels_ResultsPanel _resultsPanel;

		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int currentStepNum;

		[Token(Token = "0x170001A3")]
		private string startDialogText
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x22B1558", Offset = "0x22B1558", VA = "0x22B1558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private LabelsManager labelsManager
		{
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x22B15C8", Offset = "0x22B15C8", VA = "0x22B15C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private QuizLabels_ProgressPanel progressPanel
		{
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x22B16BC", Offset = "0x22B16BC", VA = "0x22B16BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private QuizLabels_ResultsPanel resultsPanel
		{
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0x22B1808", Offset = "0x22B1808", VA = "0x22B1808")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x22B18F4", Offset = "0x22B18F4", VA = "0x22B18F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x22B18FC", Offset = "0x22B18FC", VA = "0x22B18FC")]
		public void OnQuizButton()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x22B1B28", Offset = "0x22B1B28", VA = "0x22B1B28")]
		public void OnQuizToggle(bool value)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x22B1BC4", Offset = "0x22B1BC4", VA = "0x22B1BC4")]
		private void OnStartDialogGo(bool dontShowAgain)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x22B1C8C", Offset = "0x22B1C8C", VA = "0x22B1C8C")]
		private void OnQuizDialogClose(bool dontShowAgain)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x22B1AB8", Offset = "0x22B1AB8", VA = "0x22B1AB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26AA4", Offset = "0xD26AA4")]
		private IEnumerator StartQuiz()
		{
			return null;
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x22B1D78", Offset = "0x22B1D78", VA = "0x22B1D78")]
		public void OnAnswerSelected(int selectionId, string selectionName)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x22B2154", Offset = "0x22B2154", VA = "0x22B2154")]
		private void GenerateRandomSteps()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0x22B24A4", Offset = "0x22B24A4", VA = "0x22B24A4")]
		private void NextStep()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0x22B2794", Offset = "0x22B2794", VA = "0x22B2794")]
		private void ShowQuizResult()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x22B284C", Offset = "0x22B284C", VA = "0x22B284C")]
		private void OnCloseButton()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x22B2B88", Offset = "0x22B2B88", VA = "0x22B2B88")]
		private void OnCloseConfirmed(bool dontShowAgain)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x22B2A44", Offset = "0x22B2A44", VA = "0x22B2A44")]
		private void CloseQuiz()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x22B1F30", Offset = "0x22B1F30", VA = "0x22B1F30")]
		private void ClearAllHighlights()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x22B202C", Offset = "0x22B202C", VA = "0x22B202C")]
		private void SetMarkersHighlightColor(Color color)
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x22B264C", Offset = "0x22B264C", VA = "0x22B264C")]
		private void RestoreMarkersHighlight()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x22B2724", Offset = "0x22B2724", VA = "0x22B2724")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26B08", Offset = "0xD26B08")]
		private IEnumerator BlinkingHighlight()
		{
			return null;
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x22B2DB4", Offset = "0x22B2DB4", VA = "0x22B2DB4")]
		private void StopBlinkingHighlight()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x22B2C38", Offset = "0x22B2C38", VA = "0x22B2C38")]
		private void SetAppUiActive(bool value)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x22B2E1C", Offset = "0x22B2E1C", VA = "0x22B2E1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26B6C", Offset = "0xD26B6C")]
		private IEnumerator SafeUIPanelsRemove()
		{
			return null;
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x22B2E8C", Offset = "0x22B2E8C", VA = "0x22B2E8C")]
		private void SetPanelsOffsetActive(bool value)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x22B309C", Offset = "0x22B309C", VA = "0x22B309C")]
		private void SaveOriginalColors()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x22B3170", Offset = "0x22B3170", VA = "0x22B3170")]
		public QuizLabels_Controller()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x22B3234", Offset = "0x22B3234", VA = "0x22B3234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26BD0", Offset = "0xD26BD0")]
		private QuizLabels_ObjectToHideMarker[] <SetAppUiActive>b__64_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20004AA")]
	public class QuizLabels_EntryData
	{
		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int labelId;

		[Token(Token = "0x4002670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int answerId;

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string correctAnswer;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string userAnswer;

		[Token(Token = "0x4002673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool answerWasCorrect;

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x22B2444", Offset = "0x22B2444", VA = "0x22B2444")]
		public QuizLabels_EntryData()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class QuizLabels_ResultEntry : MonoBehaviour
	{
		[Token(Token = "0x4002674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image background;

		[Token(Token = "0x4002675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI textField;

		[Token(Token = "0x4002676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuizLabels_HintButton hintButton;

		[Token(Token = "0x4002677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color correctBgColor;

		[Token(Token = "0x4002678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color incorrectBgColor;

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x22B39C0", Offset = "0x22B39C0", VA = "0x22B39C0")]
		public void UpdateState(QuizLabels_EntryData entryDataData)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x22B3A94", Offset = "0x22B3A94", VA = "0x22B3A94")]
		public QuizLabels_ResultEntry()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class QuizLabels_ResultsPanel : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20007FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E928", Offset = "0xD0E928")]
		private sealed class <>c
		{
			[Token(Token = "0x40030EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<QuizLabels_EntryData, bool> <>9__11_0;

			[Token(Token = "0x6002C10")]
			[Address(RVA = "0x22B3F98", Offset = "0x22B3F98", VA = "0x22B3F98")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C11")]
			[Address(RVA = "0x22B3FA0", Offset = "0x22B3FA0", VA = "0x22B3FA0")]
			internal bool <UpdateResultsDiagram>b__11_0(QuizLabels_EntryData question)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action resultsClosedAction;

		[Token(Token = "0x400267A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject resultsPanel;

		[Token(Token = "0x400267B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuizLabels_ResultEntry resultEntryExample;

		[Token(Token = "0x400267C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI resultTotalTextField;

		[Token(Token = "0x400267D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image correctFillImage;

		[Token(Token = "0x400267E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<QuizLabels_ResultEntry> resultsList;

		[Token(Token = "0x400267F")]
		private const string resultTotalString = "{0}/{1}";

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x22B3A9C", Offset = "0x22B3A9C", VA = "0x22B3A9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x22B2808", Offset = "0x22B2808", VA = "0x22B2808")]
		public void ShowResults(List<QuizLabels_EntryData> results)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x22B3E78", Offset = "0x22B3E78", VA = "0x22B3E78")]
		public void OnOkButton()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x22B3AF8", Offset = "0x22B3AF8", VA = "0x22B3AF8")]
		private void UpdateResultsList(List<QuizLabels_EntryData> results)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x22B3CD8", Offset = "0x22B3CD8", VA = "0x22B3CD8")]
		private void UpdateResultsDiagram(List<QuizLabels_EntryData> results)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x22B3EC4", Offset = "0x22B3EC4", VA = "0x22B3EC4")]
		public QuizLabels_ResultsPanel()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public class SceneTransition : MonoBehaviour
	{
		[Token(Token = "0x20007FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E938", Offset = "0xD0E938")]
		private sealed class <FadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneTransition <>4__this;

			[Token(Token = "0x40030F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000391")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C15")]
				[Address(RVA = "0x22B6648", Offset = "0x22B6648", VA = "0x22B6648", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000392")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C17")]
				[Address(RVA = "0x22B66B0", Offset = "0x22B66B0", VA = "0x22B66B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0x22B5E0C", Offset = "0x22B5E0C", VA = "0x22B5E0C")]
			[DebuggerHidden]
			public <FadeOut>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002C13")]
			[Address(RVA = "0x22B639C", Offset = "0x22B639C", VA = "0x22B639C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C14")]
			[Address(RVA = "0x22B63A0", Offset = "0x22B63A0", VA = "0x22B63A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C16")]
			[Address(RVA = "0x22B6650", Offset = "0x22B6650", VA = "0x22B6650", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E948", Offset = "0xD0E948")]
		private sealed class <FadeIn>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneTransition <>4__this;

			[Token(Token = "0x40030F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x17000393")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C1B")]
				[Address(RVA = "0x22B632C", Offset = "0x22B632C", VA = "0x22B632C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000394")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C1D")]
				[Address(RVA = "0x22B6394", Offset = "0x22B6394", VA = "0x22B6394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0x22B5EA8", Offset = "0x22B5EA8", VA = "0x22B5EA8")]
			[DebuggerHidden]
			public <FadeIn>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0x22B6074", Offset = "0x22B6074", VA = "0x22B6074", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0x22B6078", Offset = "0x22B6078", VA = "0x22B6078", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0x22B6334", Offset = "0x22B6334", VA = "0x22B6334", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DD54", Offset = "0xD1DD54")]
		public CanvasGroup transitionPanel;

		[Token(Token = "0x4002681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AppRunner _appRunner;

		[Token(Token = "0x4002682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image _transitionImageVisibleByMovieCapture;

		[Token(Token = "0x4002683")]
		private const float FaderDuration = 0.1f;

		[Token(Token = "0x4002684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GraphicRaycaster[] _graphicRaycasters;

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x22B5830", Offset = "0x22B5830", VA = "0x22B5830")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x22B58CC", Offset = "0x22B58CC", VA = "0x22B58CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x22B5AC8", Offset = "0x22B5AC8", VA = "0x22B5AC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x22B5C10", Offset = "0x22B5C10", VA = "0x22B5C10")]
		private void OnSceneLoaded(Scene s, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x22B5CD8", Offset = "0x22B5CD8", VA = "0x22B5CD8")]
		private void StartFadeOut()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x22B5D9C", Offset = "0x22B5D9C", VA = "0x22B5D9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26BE0", Offset = "0xD26BE0")]
		private IEnumerator FadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x22B5C14", Offset = "0x22B5C14", VA = "0x22B5C14")]
		private void StartFadeIn()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x22B5E38", Offset = "0x22B5E38", VA = "0x22B5E38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26C44", Offset = "0xD26C44")]
		private IEnumerator FadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x22B5ED4", Offset = "0x22B5ED4", VA = "0x22B5ED4")]
		private void OnFadeOut()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x22B5ED8", Offset = "0x22B5ED8", VA = "0x22B5ED8")]
		private void EnableGraphicRaycasters(bool value)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x22B6014", Offset = "0x22B6014", VA = "0x22B6014")]
		public SceneTransition()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class SplashScreenControl : MonoBehaviour
	{
		[Token(Token = "0x20007FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E958", Offset = "0xD0E958")]
		private sealed class <FadeAndLoad>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40030F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40030F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplashScreenControl <>4__this;

			[Token(Token = "0x40030F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <i>5__2;

			[Token(Token = "0x17000395")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C21")]
				[Address(RVA = "0xE6CAD0", Offset = "0xE6CAD0", VA = "0xE6CAD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000396")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C23")]
				[Address(RVA = "0xE6CB38", Offset = "0xE6CB38", VA = "0xE6CB38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xE6C87C", Offset = "0xE6C87C", VA = "0xE6C87C")]
			[DebuggerHidden]
			public <FadeAndLoad>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0xE6C8B0", Offset = "0xE6C8B0", VA = "0xE6C8B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xE6C8B4", Offset = "0xE6C8B4", VA = "0xE6C8B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C22")]
			[Address(RVA = "0xE6CAD8", Offset = "0xE6CAD8", VA = "0xE6CAD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DD8C", Offset = "0xD1DD8C")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject proLogo;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DDC4", Offset = "0xD1DDC4")]
		public RawImage rawImage;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DDFC", Offset = "0xD1DDFC")]
		public string sceneName;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DE34", Offset = "0xD1DE34")]
		public string questSceneName;

		[Token(Token = "0x400268A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DE6C", Offset = "0xD1DE6C")]
		public GameObject[] desktopGameObjects;

		[Token(Token = "0x400268B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject vrGameObject;

		[Token(Token = "0x400268C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject VRNotConnectedWarning;

		[Token(Token = "0x400268D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AppRunner _appRunner;

		[Token(Token = "0x400268E")]
		private const string StartScene = "startScene";

		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _adjustedColor;

		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SystemSubscriptionController _systemSubscriptionController;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _useUpdate;

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xE6C1C0", Offset = "0xE6C1C0", VA = "0xE6C1C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xE6C248", Offset = "0xE6C248", VA = "0xE6C248")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xE6C5F4", Offset = "0xE6C5F4", VA = "0xE6C5F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xE6C76C", Offset = "0xE6C76C", VA = "0xE6C76C")]
		private void PrepareCompleted(VideoPlayer source)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xE6C550", Offset = "0xE6C550", VA = "0xE6C550")]
		private void EndReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xE6C6FC", Offset = "0xE6C6FC", VA = "0xE6C6FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26CA8", Offset = "0xD26CA8")]
		private IEnumerator FadeAndLoad()
		{
			return null;
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xE6C3AC", Offset = "0xE6C3AC", VA = "0xE6C3AC")]
		private void AdjustVideoSourceToAspectRatio()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xE6C8A8", Offset = "0xE6C8A8", VA = "0xE6C8A8")]
		public SplashScreenControl()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class TextRandomizer : MonoBehaviour
	{
		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI textField;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] textOptionsKeys;

		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DEC4", Offset = "0xD1DEC4")]
		[SerializeField]
		private bool randomizeOnStart;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool randomizeOnEnable;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool randomizeOnDisable;

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xE6F6FC", Offset = "0xE6F6FC", VA = "0xE6F6FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xE6F838", Offset = "0xE6F838", VA = "0xE6F838")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xE6F848", Offset = "0xE6F848", VA = "0xE6F848")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xE6F70C", Offset = "0xE6F70C", VA = "0xE6F70C")]
		private void RandomizeText()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xE6F858", Offset = "0xE6F858", VA = "0xE6F858")]
		public TextRandomizer()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class TransitionMovieControl : MonoBehaviour
	{
		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DF30", Offset = "0xD1DF30")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AppRunner _appRunner;

		[Token(Token = "0x4002699")]
		private const string SaScheme = "sa://";

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x22D6A38", Offset = "0x22D6A38", VA = "0x22D6A38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x22D6C70", Offset = "0x22D6C70", VA = "0x22D6C70")]
		private void PrepareCompleted(VideoPlayer source)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x22D6C8C", Offset = "0x22D6C8C", VA = "0x22D6C8C")]
		private void EndReached(VideoPlayer source)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x22D6CAC", Offset = "0x22D6CAC", VA = "0x22D6CAC")]
		public TransitionMovieControl()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class VR_SceneSetup : MonoBehaviour
	{
		[Token(Token = "0x400269A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneController sceneControl;

		[Token(Token = "0x400269B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AppRunner appRunner;

		[Token(Token = "0x400269C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneTransition sceneTransitionPanel;

		[Token(Token = "0x400269D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public XR_OrganManipulator organManipulator;

		[Token(Token = "0x400269E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform vrMeshTransform;

		[Token(Token = "0x400269F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform organParent;

		[Token(Token = "0x40026A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshRenderer sphereStandin;

		[Token(Token = "0x40026A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[ReadOnly]
		public float sceneScale;

		[Token(Token = "0x40026A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject[] cameraGOs;

		[Token(Token = "0x40026A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DF78", Offset = "0xD1DF78")]
		public float rayLength;

		[Token(Token = "0x40026A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float rayWidth;

		[Token(Token = "0x40026A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float maxRaycastDistance;

		[Token(Token = "0x40026A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1DFB0", Offset = "0xD1DFB0")]
		public float fadeDuration;

		[Token(Token = "0x40026A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float fadeDirection;

		[Token(Token = "0x40026A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float fadeProgress;

		[Token(Token = "0x40026A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool fading;

		[Token(Token = "0x40026AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public CanvasGroup[] fadeImages;

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0x22D7A08", Offset = "0x22D7A08", VA = "0x22D7A08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0x22D7AB8", Offset = "0x22D7AB8", VA = "0x22D7AB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0x22D8424", Offset = "0x22D8424", VA = "0x22D8424")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x22D85A4", Offset = "0x22D85A4", VA = "0x22D85A4")]
		public void FadeIn(Scene s, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x22D8698", Offset = "0x22D8698", VA = "0x22D8698")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x22D87C8", Offset = "0x22D87C8", VA = "0x22D87C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x22D8914", Offset = "0x22D8914", VA = "0x22D8914")]
		public VR_SceneSetup()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class MetastaticCancer_SelectionManager : MonoBehaviour
	{
		[Token(Token = "0x20007FE")]
		public struct sphereScalingData
		{
			[Token(Token = "0x40030FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private GameObject sphere;

			[Token(Token = "0x40030FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Vector3 scalingStep;

			[Token(Token = "0x40030FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int scalingDirection;
		}

		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TransformScaler tfScaler;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnTime;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 hiddenScale;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject leftBreastCullSphere;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject rightBreastCullSphere;

		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI cancerStagingText;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI tumorStagingText;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI nodesStagingText;

		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI metsStagingText;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BasicSelector[] basicSelectors;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MetastaticCancer_DiseaseSphere[] diseaseSpheres;

		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<MetastaticCancer_DiseaseSphere> diseasedParts;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 scale;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string saveVariableName;

		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string leftBreastActivity;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string rightBreastActivity;

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string leftBreastSceneName;

		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private string cancerStage;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string TStage;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string nodesStage;

		[Token(Token = "0x40026BF")]
		private const string stageVarName = "SidebarCancerStageWithoutMets";

		[Token(Token = "0x40026C0")]
		private const string tumorVarName = "SidebarTumorStage";

		[Token(Token = "0x40026C1")]
		private const string nodesVarName = "SidebarNodesStage";

		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string metsCountVarName;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private string prefsVarName_ActiveCancerScene;

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x22A9EB8", Offset = "0x22A9EB8", VA = "0x22A9EB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x22AA004", Offset = "0x22AA004", VA = "0x22AA004")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x22AA468", Offset = "0x22AA468", VA = "0x22AA468")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x22AA564", Offset = "0x22AA564", VA = "0x22AA564")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x22AA64C", Offset = "0x22AA64C", VA = "0x22AA64C")]
		public void Selected(Collider collider)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x22AAAC8", Offset = "0x22AAAC8", VA = "0x22AAAC8")]
		public void ResetState()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x22AA208", Offset = "0x22AA208", VA = "0x22AA208")]
		private void UpdateCancerStages()
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x22AA960", Offset = "0x22AA960", VA = "0x22AA960")]
		private void UpdateMetsStage()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x22AA79C", Offset = "0x22AA79C", VA = "0x22AA79C")]
		private void ShowDiseaseFX(MetastaticCancer_DiseaseSphere sphere)
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x22AA73C", Offset = "0x22AA73C", VA = "0x22AA73C")]
		private void HideDiseaseFX(MetastaticCancer_DiseaseSphere sphere)
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x22AA200", Offset = "0x22AA200", VA = "0x22AA200")]
		private Vector3 GetHiddenScale(Vector3 normalScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x22AA7FC", Offset = "0x22AA7FC", VA = "0x22AA7FC")]
		private void SaveDiseaseState()
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x22AA2E8", Offset = "0x22AA2E8", VA = "0x22AA2E8")]
		private void LoadDiseaseState()
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x22AAB80", Offset = "0x22AAB80", VA = "0x22AAB80")]
		private MetastaticCancer_DiseaseSphere GetDiseaseSphereByID(int ID)
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x22AAC44", Offset = "0x22AAC44", VA = "0x22AAC44")]
		private bool MathfApproximatelyVector3(Vector3 vecA, Vector3 vecB)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x22AAD48", Offset = "0x22AAD48", VA = "0x22AAD48")]
		public MetastaticCancer_SelectionManager()
		{
		}
	}
}
namespace AmplifyImpostors
{
	[Token(Token = "0x20004B3")]
	public enum LODReplacement
	{
		[Token(Token = "0x40026C5")]
		DoNothing,
		[Token(Token = "0x40026C6")]
		ReplaceCulled,
		[Token(Token = "0x40026C7")]
		ReplaceLast,
		[Token(Token = "0x40026C8")]
		ReplaceAllExceptFirst,
		[Token(Token = "0x40026C9")]
		ReplaceSpecific,
		[Token(Token = "0x40026CA")]
		ReplaceAfterSpecific,
		[Token(Token = "0x40026CB")]
		InsertAfter
	}
	[Token(Token = "0x20004B4")]
	public enum CutMode
	{
		[Token(Token = "0x40026CD")]
		Automatic,
		[Token(Token = "0x40026CE")]
		Manual
	}
	[Token(Token = "0x20004B5")]
	public enum FolderMode
	{
		[Token(Token = "0x40026D0")]
		RelativeToPrefab,
		[Token(Token = "0x40026D1")]
		Global
	}
	[Token(Token = "0x20004B6")]
	public enum RenderPipelineInUse
	{
		[Token(Token = "0x40026D3")]
		None = 0,
		[Token(Token = "0x40026D4")]
		LW = 1,
		[Token(Token = "0x40026D5")]
		HD = 2,
		[Token(Token = "0x40026D6")]
		URP = 3,
		[Token(Token = "0x40026D7")]
		Custom = 3
	}
	[Token(Token = "0x20004B7")]
	public class AmplifyImpostor : MonoBehaviour
	{
		[Token(Token = "0x40026D8")]
		private const string ShaderGUID = "e82933f4c0eb9ba42aab0739f48efe21";

		[Token(Token = "0x40026D9")]
		private const string DilateGUID = "57c23892d43bc9f458360024c5985405";

		[Token(Token = "0x40026DA")]
		private const string PackerGUID = "31bd3cd74692f384a916d9d7ea87710d";

		[Token(Token = "0x40026DB")]
		private const string ShaderOctaGUID = "572f9be5706148142b8da6e9de53acdb";

		[Token(Token = "0x40026DC")]
		private const string StandardPreset = "e4786beb7716da54dbb02a632681cc37";

		[Token(Token = "0x40026DD")]
		private const string LWPreset = "089f3a2f6b5f48348a48c755f8d9a7a2";

		[Token(Token = "0x40026DE")]
		private const string LWShaderOctaGUID = "94e2ddcdfb3257a43872042f97e2fb01";

		[Token(Token = "0x40026DF")]
		private const string LWShaderGUID = "990451a2073f6994ebf9fd6f90a842b3";

		[Token(Token = "0x40026E0")]
		private const string HDPreset = "47b6b3dcefe0eaf4997acf89caf8c75e";

		[Token(Token = "0x40026E1")]
		private const string HDShaderOctaGUID = "56236dc63ad9b7949b63a27f0ad180b3";

		[Token(Token = "0x40026E2")]
		private const string HDShaderGUID = "175c951fec709c44fa2f26b8ab78b8dd";

		[Token(Token = "0x40026E3")]
		private const string UPreset = "0403878495ffa3c4e9d4bcb3eac9b559";

		[Token(Token = "0x40026E4")]
		private const string UShaderOctaGUID = "83dd8de9a5c14874884f9012def4fdcc";

		[Token(Token = "0x40026E5")]
		private const string UShaderGUID = "da79d698f4bf0164e910ad798d07efdf";

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AmplifyImpostorAsset m_data;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rootTransform;

		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LODGroup m_lodGroup;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_renderers;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LODReplacement m_lodReplacement;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public RenderPipelineInUse m_renderPipelineInUse;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int m_insertIndex;

		[Token(Token = "0x40026ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public GameObject m_lastImpostor;

		[Token(Token = "0x40026EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public string m_folderPath;

		[NonSerialized]
		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string m_impostorName;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public CutMode m_cutMode;

		[NonSerialized]
		[Token(Token = "0x40026F1")]
		private const float StartXRotation = -90f;

		[NonSerialized]
		[Token(Token = "0x40026F2")]
		private const float StartYRotation = 90f;

		[NonSerialized]
		[Token(Token = "0x40026F3")]
		private const int MinAlphaResolution = 256;

		[NonSerialized]
		[Token(Token = "0x40026F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture[] m_rtGBuffers;

		[NonSerialized]
		[Token(Token = "0x40026F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture[] m_alphaGBuffers;

		[NonSerialized]
		[Token(Token = "0x40026F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_trueDepth;

		[NonSerialized]
		[Token(Token = "0x40026F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D m_alphaTex;

		[NonSerialized]
		[Token(Token = "0x40026F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_xyFitSize;

		[NonSerialized]
		[Token(Token = "0x40026F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_depthFitSize;

		[NonSerialized]
		[Token(Token = "0x40026FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 m_pixelOffset;

		[NonSerialized]
		[Token(Token = "0x40026FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Bounds m_originalBound;

		[NonSerialized]
		[Token(Token = "0x40026FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 m_oriPos;

		[NonSerialized]
		[Token(Token = "0x40026FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion m_oriRot;

		[NonSerialized]
		[Token(Token = "0x40026FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 m_oriSca;

		[NonSerialized]
		[Token(Token = "0x40026FF")]
		private const int BlockSize = 65536;

		[Token(Token = "0x170001A7")]
		public AmplifyImpostorAsset Data
		{
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x117A4C4", Offset = "0x117A4C4", VA = "0x117A4C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x117A4CC", Offset = "0x117A4CC", VA = "0x117A4CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public Transform RootTransform
		{
			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x117A4D4", Offset = "0x117A4D4", VA = "0x117A4D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x117A4DC", Offset = "0x117A4DC", VA = "0x117A4DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public LODGroup LodGroup
		{
			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x117A4E4", Offset = "0x117A4E4", VA = "0x117A4E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x117A4EC", Offset = "0x117A4EC", VA = "0x117A4EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public Renderer[] Renderers
		{
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x117A4F4", Offset = "0x117A4F4", VA = "0x117A4F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x117A4FC", Offset = "0x117A4FC", VA = "0x117A4FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x117A504", Offset = "0x117A504", VA = "0x117A504")]
		private void GenerateTextures(List<TextureOutput> outputList, bool standardRendering)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x117AA94", Offset = "0x117AA94", VA = "0x117AA94")]
		private void GenerateAlphaTextures(List<TextureOutput> outputList)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x117AC2C", Offset = "0x117AC2C", VA = "0x117AC2C")]
		private void ClearBuffers()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x117ACB4", Offset = "0x117ACB4", VA = "0x117ACB4")]
		private void ClearAlphaBuffers()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x117AD3C", Offset = "0x117AD3C", VA = "0x117AD3C")]
		public void RenderImpostor(ImpostorType impostorType, int targetAmount, bool impostorMaps = true, bool combinedAlphas = false, bool useMinResolution = false, [Optional] Shader customShader)
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x117C710", Offset = "0x117C710", VA = "0x117C710")]
		private Matrix4x4 GetCameraRotationMatrix(ImpostorType impostorType, int hframes, int vframes, int x, int y)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x117CED4", Offset = "0x117CED4", VA = "0x117CED4")]
		private Vector3 OctahedronToVector(Vector2 oct)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x117CCB8", Offset = "0x117CCB8", VA = "0x117CCB8")]
		private Vector3 OctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x117CDE4", Offset = "0x117CDE4", VA = "0x117CDE4")]
		private Vector3 HemiOctahedronToVector(float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x117D000", Offset = "0x117D000", VA = "0x117D000")]
		public void GenerateAutomaticMesh(AmplifyImpostorAsset data)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x117E0DC", Offset = "0x117E0DC", VA = "0x117E0DC")]
		public Mesh GenerateMesh(Vector2[] points, Vector3 offset, float width = 1f, float height = 1f, bool invertY = true)
		{
			return null;
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x117E7BC", Offset = "0x117E7BC", VA = "0x117E7BC")]
		public AmplifyImpostor()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public enum ImpostorType
	{
		[Token(Token = "0x4002701")]
		Spherical,
		[Token(Token = "0x4002702")]
		Octahedron,
		[Token(Token = "0x4002703")]
		HemiOctahedron
	}
	[Token(Token = "0x20004B9")]
	[Flags]
	public enum DeferredBuffers
	{
		[Token(Token = "0x4002705")]
		AlbedoAlpha = 1,
		[Token(Token = "0x4002706")]
		SpecularSmoothness = 2,
		[Token(Token = "0x4002707")]
		NormalDepth = 4,
		[Token(Token = "0x4002708")]
		EmissionOcclusion = 8
	}
	[Token(Token = "0x20004BA")]
	public enum RenderingMaps
	{
		[Token(Token = "0x400270A")]
		Standard,
		[Token(Token = "0x400270B")]
		Custom
	}
	[Token(Token = "0x20004BB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD0BD14", Offset = "0xD0BD14")]
	public class AmplifyImpostorAsset : ScriptableObject
	{
		[Token(Token = "0x400270C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Material Material;

		[Token(Token = "0x400270D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Mesh Mesh;

		[Token(Token = "0x400270E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		public int Version;

		[Token(Token = "0x400270F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public ImpostorType ImpostorType;

		[Token(Token = "0x4002710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		public bool LockedSizes;

		[Token(Token = "0x4002711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		[SerializeField]
		public int SelectedSize;

		[Token(Token = "0x4002712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Vector2 TexSize;

		[Token(Token = "0x4002713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		[SerializeField]
		public bool DecoupleAxisFrames;

		[Token(Token = "0x4002714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E188", Offset = "0xD1E188")]
		public int HorizontalFrames;

		[Token(Token = "0x4002715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E1CC", Offset = "0xD1E1CC")]
		public int VerticalFrames;

		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E210", Offset = "0xD1E210")]
		public int PixelPadding;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E254", Offset = "0xD1E254")]
		public int MaxVertices;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E294", Offset = "0xD1E294")]
		public float Tolerance;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E2D8", Offset = "0xD1E2D8")]
		public float NormalScale;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Vector2[] ShapePoints;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public AmplifyImpostorBakePreset Preset;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public List<TextureOutput> OverrideOutput;

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x117E8C8", Offset = "0x117E8C8", VA = "0x117E8C8")]
		public AmplifyImpostorAsset()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public enum ImageFormat
	{
		[Token(Token = "0x400271E")]
		PNG,
		[Token(Token = "0x400271F")]
		TGA,
		[Token(Token = "0x4002720")]
		EXR
	}
	[Token(Token = "0x20004BD")]
	public enum TextureChannels
	{
		[Token(Token = "0x4002722")]
		RGBA,
		[Token(Token = "0x4002723")]
		RGB
	}
	[Token(Token = "0x20004BE")]
	public enum TextureCompression
	{
		[Token(Token = "0x4002725")]
		None,
		[Token(Token = "0x4002726")]
		Normal,
		[Token(Token = "0x4002727")]
		High,
		[Token(Token = "0x4002728")]
		Low
	}
	[Token(Token = "0x20004BF")]
	public enum TextureScale
	{
		[Token(Token = "0x400272A")]
		Full = 1,
		[Token(Token = "0x400272B")]
		Half = 2,
		[Token(Token = "0x400272C")]
		Quarter = 4,
		[Token(Token = "0x400272D")]
		Eighth = 8
	}
	[Token(Token = "0x20004C0")]
	[Flags]
	public enum OverrideMask
	{
		[Token(Token = "0x400272F")]
		OutputToggle = 1,
		[Token(Token = "0x4002730")]
		NameSuffix = 2,
		[Token(Token = "0x4002731")]
		RelativeScale = 4,
		[Token(Token = "0x4002732")]
		ColorSpace = 8,
		[Token(Token = "0x4002733")]
		QualityCompression = 0x10,
		[Token(Token = "0x4002734")]
		FileFormat = 0x20
	}
	[Token(Token = "0x20004C1")]
	public enum PresetPipeline
	{
		[Token(Token = "0x4002736")]
		Legacy,
		[Token(Token = "0x4002737")]
		Lightweight,
		[Token(Token = "0x4002738")]
		HighDefinition
	}
	[Serializable]
	[Token(Token = "0x20004C2")]
	public class TextureOutput
	{
		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int Index;

		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public OverrideMask OverrideMask;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Active;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Name;

		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextureScale Scale;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool SRGB;

		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextureChannels Channels;

		[Token(Token = "0x4002740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public TextureCompression Compression;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ImageFormat ImageFormat;

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x117F24C", Offset = "0x117F24C", VA = "0x117F24C")]
		public TextureOutput()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x117F2C8", Offset = "0x117F2C8", VA = "0x117F2C8")]
		public TextureOutput(bool a, string n, TextureScale s, bool sr, TextureChannels c, TextureCompression nc, ImageFormat i)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x117F3A4", Offset = "0x117F3A4", VA = "0x117F3A4")]
		public TextureOutput Clone()
		{
			return null;
		}
	}
	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xD0BD68", Offset = "0xD0BD68")]
	public class AmplifyImpostorBakePreset : ScriptableObject
	{
		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Shader BakeShader;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Shader RuntimeShader;

		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PresetPipeline Pipeline;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public int AlphaIndex;

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<TextureOutput> Output;

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0x117EB38", Offset = "0x117EB38", VA = "0x117EB38")]
		public AmplifyImpostorBakePreset()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public static class BoundsEx
	{
		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x117CAA4", Offset = "0x117CAA4", VA = "0x117CAA4")]
		public static Bounds Transform(this Bounds bounds, Matrix4x4 matrix)
		{
			return default(Bounds);
		}
	}
	[Token(Token = "0x20004C5")]
	public static class Texture2DEx
	{
		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] Footer;

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0x117EF7C", Offset = "0x117EF7C", VA = "0x117EF7C")]
		public static byte[] EncodeToTGA(this Texture2D tex, bool withAlpha = true)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C6")]
	public static class SpriteUtilityEx
	{
		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type type;

		[Token(Token = "0x170001AB")]
		public static Type Type
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x117EE2C", Offset = "0x117EE2C", VA = "0x117EE2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x117D4E8", Offset = "0x117D4E8", VA = "0x117D4E8")]
		public static void GenerateOutline(Texture2D texture, Rect rect, float detail, byte alphaTolerance, bool holeDetection, out Vector2[][] paths)
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public static class RenderTextureEx
	{
		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x117EDAC", Offset = "0x117EDAC", VA = "0x117EDAC")]
		public static RenderTexture GetTemporary(RenderTexture renderTexture)
		{
			return null;
		}
	}
	[Token(Token = "0x20004C8")]
	public static class Vector2Ex
	{
		[Serializable]
		[Token(Token = "0x20007FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E968", Offset = "0xD0E968")]
		private sealed class <>c
		{
			[Token(Token = "0x40030FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40030FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Vector2> <>9__3_0;

			[Token(Token = "0x6002C25")]
			[Address(RVA = "0x11800A8", Offset = "0x11800A8", VA = "0x11800A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C26")]
			[Address(RVA = "0x11800B0", Offset = "0x11800B0", VA = "0x11800B0")]
			internal int <ConvexHull>b__3_0(Vector2 a, Vector2 b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000800")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E978", Offset = "0xD0E978")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40030FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2[] P;

			[Token(Token = "0x4003100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int smallestIndex;

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0x117FDA8", Offset = "0x117FDA8", VA = "0x117FDA8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002C28")]
			[Address(RVA = "0x11800F4", Offset = "0x11800F4", VA = "0x11800F4")]
			internal bool <ReduceLeastSignificantVertice>b__0(Vector2 x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x117F970", Offset = "0x117F970", VA = "0x117F970")]
		public static float Cross(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x117F990", Offset = "0x117F990", VA = "0x117F990")]
		public static float TriangleArea(this Vector2 O, Vector2 A, Vector2 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x117FA40", Offset = "0x117FA40", VA = "0x117FA40")]
		public static float TriangleArea(this Vector3 O, Vector3 A, Vector3 B)
		{
			return default(float);
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x117D7EC", Offset = "0x117D7EC", VA = "0x117D7EC")]
		public static Vector2[] ConvexHull(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x117DE40", Offset = "0x117DE40", VA = "0x117DE40")]
		public static Vector2[] ScaleAlongNormals(Vector2[] P, float scaleAmount)
		{
			return null;
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x117FAEC", Offset = "0x117FAEC", VA = "0x117FAEC")]
		private static Vector2[] ReduceLeastSignificantVertice(Vector2[] P)
		{
			return null;
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x117DB00", Offset = "0x117DB00", VA = "0x117DB00")]
		public static Vector2[] ReduceVertices(Vector2[] P, int maxVertices)
		{
			return null;
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x117FDB0", Offset = "0x117FDB0", VA = "0x117FDB0")]
		private static Vector2 GetIntersectionPointCoordinates(Vector2 A1, Vector2 A2, Vector2 B1, Vector2 B2)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x117FF50", Offset = "0x117FF50", VA = "0x117FF50")]
		private static float OutsideBounds(Vector2 P)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20004C9")]
	public static class ImpostorBakingTools
	{
		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string PrefGlobalFolder;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string PrefGlobalRelativeFolder;

		[Token(Token = "0x400274B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string PrefGlobalDefault;

		[Token(Token = "0x400274C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string PrefGlobalTexImport;

		[Token(Token = "0x400274D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string PrefGlobalCreateLodGroup;

		[Token(Token = "0x400274E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string PrefGlobalGBuffer0Name;

		[Token(Token = "0x400274F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string PrefGlobalGBuffer1Name;

		[Token(Token = "0x4002750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string PrefGlobalGBuffer2Name;

		[Token(Token = "0x4002751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string PrefGlobalGBuffer3Name;

		[Token(Token = "0x4002752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string PrefGlobalBakingOptions;

		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly string PrefDataImpType;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly string PrefDataTexSizeLocked;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly string PrefDataTexSizeSelected;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly string PrefDataTexSizeX;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly string PrefDataTexSizeY;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static readonly string PrefDataDecoupledFrames;

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static readonly string PrefDataXFrames;

		[Token(Token = "0x400275A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static readonly string PrefDataYFrames;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static readonly string PrefDataPixelBleeding;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static readonly string PrefDataTolerance;

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static readonly string PrefDataNormalScale;

		[Token(Token = "0x400275E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static readonly string PrefDataMaxVertices;
	}
	[Token(Token = "0x20004CA")]
	public class Triangulator
	{
		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector2> m_points;

		[Token(Token = "0x170001AC")]
		public List<Vector2> Points
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x117F42C", Offset = "0x117F42C", VA = "0x117F42C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x117E48C", Offset = "0x117E48C", VA = "0x117E48C")]
		public Triangulator(Vector2[] points)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x117F434", Offset = "0x117F434", VA = "0x117F434")]
		public Triangulator(Vector2[] points, bool invertY = true)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x117E530", Offset = "0x117E530", VA = "0x117E530")]
		public int[] Triangulate()
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x117F58C", Offset = "0x117F58C", VA = "0x117F58C")]
		private float Area()
		{
			return default(float);
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x117F6A8", Offset = "0x117F6A8", VA = "0x117F6A8")]
		private bool Snip(int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x117F8FC", Offset = "0x117F8FC", VA = "0x117F8FC")]
		private bool InsideTriangle(Vector2 pt, Vector2 v1, Vector2 v2, Vector2 v3)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20004CB")]
	public class VersionInfo
	{
		[Token(Token = "0x4002760")]
		public const byte Major = 0;

		[Token(Token = "0x4002761")]
		public const byte Minor = 9;

		[Token(Token = "0x4002762")]
		public const byte Release = 7;

		[Token(Token = "0x4002763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static byte Revision;

		[Token(Token = "0x170001AD")]
		public static int FullNumber
		{
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x11802C0", Offset = "0x11802C0", VA = "0x11802C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AE")]
		public static string FullLabel
		{
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x1180330", Offset = "0x1180330", VA = "0x1180330")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x118016C", Offset = "0x118016C", VA = "0x118016C")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x11803C8", Offset = "0x11803C8", VA = "0x11803C8")]
		public VersionInfo()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo
{
	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0BDDC", Offset = "0xD0BDDC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0BDDC", Offset = "0xD0BDDC")]
	public class ApplyToMaterial : MonoBehaviour
	{
		[Token(Token = "0x4002764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1E3B8", Offset = "0xD1E3B8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1E3B8", Offset = "0xD1E3B8")]
		[SerializeField]
		private MediaPlayer _media;

		[Token(Token = "0x4002765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1E418", Offset = "0xD1E418")]
		[SerializeField]
		private Texture2D _defaultTexture;

		[Token(Token = "0x4002766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1E464", Offset = "0xD1E464")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1E464", Offset = "0xD1E464")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x4002767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _texturePropertyName;

		[Token(Token = "0x4002768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _offset;

		[Token(Token = "0x4002769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDirty;

		[Token(Token = "0x400276B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture _lastTextureApplied;

		[Token(Token = "0x400276C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _propTexture;

		[Token(Token = "0x400276D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Texture _originalTexture;

		[Token(Token = "0x400276E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 _originalScale;

		[Token(Token = "0x400276F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 _originalOffset;

		[Token(Token = "0x4002770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x4002771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x4002772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x4002773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x4002774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propCroppingScalars;

		[Token(Token = "0x4002775")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4002776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propChromaTex;

		[Token(Token = "0x4002777")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x4002779")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x170001AF")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x231F1EC", Offset = "0x231F1EC", VA = "0x231F1EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x231F1F4", Offset = "0x231F1F4", VA = "0x231F1F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public Texture2D DefaultTexture
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x231F3B0", Offset = "0x231F3B0", VA = "0x231F3B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0x231F3B8", Offset = "0x231F3B8", VA = "0x231F3B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public Material Material
		{
			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x231F448", Offset = "0x231F448", VA = "0x231F448")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0x231F450", Offset = "0x231F450", VA = "0x231F450")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public string TexturePropertyName
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x231F4E0", Offset = "0x231F4E0", VA = "0x231F4E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x231F4E8", Offset = "0x231F4E8", VA = "0x231F4E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public Vector2 Offset
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x231F534", Offset = "0x231F534", VA = "0x231F534")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x231F53C", Offset = "0x231F53C", VA = "0x231F53C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public Vector2 Scale
		{
			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x231F5E0", Offset = "0x231F5E0", VA = "0x231F5E0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x231F5E8", Offset = "0x231F5E8", VA = "0x231F5E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x231F68C", Offset = "0x231F68C", VA = "0x231F68C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x231F1F8", Offset = "0x231F1F8", VA = "0x231F1F8")]
		private void ChangeMediaPlayer(MediaPlayer player)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x231F8F0", Offset = "0x231F8F0", VA = "0x231F8F0")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x231FE48", Offset = "0x231FE48", VA = "0x231FE48")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x231F8FC", Offset = "0x231F8FC", VA = "0x231F8FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x231FE68", Offset = "0x231FE68", VA = "0x231FE68")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x2320650", Offset = "0x2320650", VA = "0x2320650")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x2320790", Offset = "0x2320790", VA = "0x2320790")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x23207CC", Offset = "0x23207CC", VA = "0x23207CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x2320674", Offset = "0x2320674", VA = "0x2320674")]
		private void SaveProperties()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x23207D0", Offset = "0x23207D0", VA = "0x23207D0")]
		private void RestoreProperties()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x23208F4", Offset = "0x23208F4", VA = "0x23208F4")]
		public ApplyToMaterial()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0BE40", Offset = "0xD0BE40")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0BE40", Offset = "0xD0BE40")]
	public class ApplyToMesh : MonoBehaviour
	{
		[Token(Token = "0x400277B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1E4F4", Offset = "0xD1E4F4")]
		[SerializeField]
		private MediaPlayer _media;

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1E540", Offset = "0xD1E540")]
		[SerializeField]
		private Texture2D _defaultTexture;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xD1E58C", Offset = "0xD1E58C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1E58C", Offset = "0xD1E58C")]
		[SerializeField]
		private Renderer _mesh;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _texturePropertyName;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 _offset;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 _scale;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDirty;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Texture _lastTextureApplied;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _propTexture;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propStereo;

		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propAlphaPack;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propLayout;

		[Token(Token = "0x4002788")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propChromaTex;

		[Token(Token = "0x400278A")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x400278C")]
		private const string PropUseYpCbCrName = "_UseYpCbCr";

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propCroppingScalars;

		[Token(Token = "0x170001B5")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x14F2C90", Offset = "0x14F2C90", VA = "0x14F2C90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x14F2C98", Offset = "0x14F2C98", VA = "0x14F2C98")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public Texture2D DefaultTexture
		{
			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x14F2E4C", Offset = "0x14F2E4C", VA = "0x14F2E4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x14F2E54", Offset = "0x14F2E54", VA = "0x14F2E54")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public Renderer MeshRenderer
		{
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0x14F2EE4", Offset = "0x14F2EE4", VA = "0x14F2EE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x14F2EEC", Offset = "0x14F2EEC", VA = "0x14F2EEC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public string TexturePropertyName
		{
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x14F2F7C", Offset = "0x14F2F7C", VA = "0x14F2F7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0x14F2F84", Offset = "0x14F2F84", VA = "0x14F2F84")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public Vector2 Offset
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x14F2FD0", Offset = "0x14F2FD0", VA = "0x14F2FD0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x14F2FD8", Offset = "0x14F2FD8", VA = "0x14F2FD8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public Vector2 Scale
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x14F307C", Offset = "0x14F307C", VA = "0x14F307C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x14F3084", Offset = "0x14F3084", VA = "0x14F3084")]
			set
			{
			}
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x14F3128", Offset = "0x14F3128", VA = "0x14F3128")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x14F33F4", Offset = "0x14F33F4", VA = "0x14F33F4")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x14F38D8", Offset = "0x14F38D8", VA = "0x14F38D8")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x14F2C9C", Offset = "0x14F2C9C", VA = "0x14F2C9C")]
		private void ChangeMediaPlayer(MediaPlayer player)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x14F3400", Offset = "0x14F3400", VA = "0x14F3400")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x14F38F8", Offset = "0x14F38F8", VA = "0x14F38F8")]
		private void ApplyMapping(Texture texture, bool requiresYFlip, int plane = 0)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x14F437C", Offset = "0x14F437C", VA = "0x14F437C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x14F44D4", Offset = "0x14F44D4", VA = "0x14F44D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x14F44E4", Offset = "0x14F44E4", VA = "0x14F44E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x14F44EC", Offset = "0x14F44EC", VA = "0x14F44EC")]
		public ApplyToMesh()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class AudioChannelMixer : MonoBehaviour
	{
		[Token(Token = "0x400278F")]
		private const int MaxChannels = 8;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E61C", Offset = "0xD1E61C")]
		[SerializeField]
		private float[] _channels;

		[Token(Token = "0x170001BB")]
		public float[] Channel
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x14F457C", Offset = "0x14F457C", VA = "0x14F457C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0x14F4584", Offset = "0x14F4584", VA = "0x14F4584")]
			set
			{
			}
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x14F458C", Offset = "0x14F458C", VA = "0x14F458C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x14F4628", Offset = "0x14F4628", VA = "0x14F4628")]
		private void ChangeChannelCount(int numChannels)
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x14F475C", Offset = "0x14F475C", VA = "0x14F475C")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x14F4840", Offset = "0x14F4840", VA = "0x14F4840")]
		public AudioChannelMixer()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0BEA4", Offset = "0xD0BEA4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0BEA4", Offset = "0xD0BEA4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0BEA4", Offset = "0xD0BEA4")]
	public class AudioOutput : MonoBehaviour
	{
		[Token(Token = "0x2000801")]
		public enum AudioOutputMode
		{
			[Token(Token = "0x4003102")]
			Single,
			[Token(Token = "0x4003103")]
			Multiple
		}

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioOutputMode _audioOutputMode;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource _audioSource;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int _channelMask;

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x14F4848", Offset = "0x14F4848", VA = "0x14F4848")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x14F48A0", Offset = "0x14F48A0", VA = "0x14F48A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x14F4A34", Offset = "0x14F4A34", VA = "0x14F4A34")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x14F4A3C", Offset = "0x14F4A3C", VA = "0x14F4A3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x14F48A8", Offset = "0x14F48A8", VA = "0x14F48A8")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x14F4DDC", Offset = "0x14F4DDC", VA = "0x14F4DDC")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x14F4B6C", Offset = "0x14F4B6C", VA = "0x14F4B6C")]
		private static void ApplyAudioSettings(MediaPlayer player, AudioSource audioSource)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x14F4E44", Offset = "0x14F4E44", VA = "0x14F4E44")]
		public AudioOutput()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0BF54", Offset = "0xD0BF54")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0BF54", Offset = "0xD0BF54")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0BF54", Offset = "0xD0BF54")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0BF54", Offset = "0xD0BF54")]
	public class CubemapCube : MonoBehaviour
	{
		[Token(Token = "0x2000802")]
		public enum Layout
		{
			[Token(Token = "0x4003105")]
			FacebookTransform32,
			[Token(Token = "0x4003106")]
			Facebook360Capture
		}

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected MeshRenderer _renderer;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float expansion_coeff;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Layout _layout;

		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture _texture;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _verticalFlip;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _textureWidth;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _textureHeight;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propApplyGamma;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propStereo;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x40027A2")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propChromaTex;

		[Token(Token = "0x40027A4")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x170001BC")]
		public MediaPlayer Player
		{
			[Token(Token = "0x6001E18")]
			[Address(RVA = "0x14F61DC", Offset = "0x14F61DC", VA = "0x14F61DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E17")]
			[Address(RVA = "0x14F61D4", Offset = "0x14F61D4", VA = "0x14F61D4")]
			set
			{
			}
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x14F61E4", Offset = "0x14F61E4", VA = "0x14F61E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x14F6310", Offset = "0x14F6310", VA = "0x14F6310")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x14F7458", Offset = "0x14F7458", VA = "0x14F7458")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x14F75AC", Offset = "0x14F75AC", VA = "0x14F75AC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x14F6490", Offset = "0x14F6490", VA = "0x14F6490")]
		private void BuildMesh()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x14F7D98", Offset = "0x14F7D98", VA = "0x14F7D98")]
		private void UpdateMeshUV(int textureWidth, int textureHeight, bool flipY)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x14F87F8", Offset = "0x14F87F8", VA = "0x14F87F8")]
		public CubemapCube()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0C02C", Offset = "0xD0C02C")]
	public class DebugOverlay : MonoBehaviour
	{
		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _guiDepth;

		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _displaySize;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _debugOverlayCount;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool _displayControls;

		[Token(Token = "0x40027AB")]
		private const int s_GuiStartWidth = 10;

		[Token(Token = "0x40027AC")]
		private const int s_GuiWidth = 180;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_GuiPositionX;

		[Token(Token = "0x170001BD")]
		public bool DisplayControls
		{
			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x14F880C", Offset = "0x14F880C", VA = "0x14F880C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x14F8814", Offset = "0x14F8814", VA = "0x14F8814")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x14F8820", Offset = "0x14F8820", VA = "0x14F8820")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x14F8828", Offset = "0x14F8828", VA = "0x14F8828")]
			set
			{
			}
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x14F88B0", Offset = "0x14F88B0", VA = "0x14F88B0")]
		private void SetGuiPositionFromVideoIndex(int index)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x14F8950", Offset = "0x14F8950", VA = "0x14F8950")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x14F8958", Offset = "0x14F8958", VA = "0x14F8958")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x14FA0D0", Offset = "0x14FA0D0", VA = "0x14FA0D0")]
		public DebugOverlay()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0C068", Offset = "0xD0C068")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0C068", Offset = "0xD0C068")]
	[ExecuteInEditMode]
	public class DisplayBackground : MonoBehaviour
	{
		[Token(Token = "0x40027AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IMediaProducer _source;

		[Token(Token = "0x40027AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D _texture;

		[Token(Token = "0x40027B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material _material;

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x1504170", Offset = "0x1504170", VA = "0x1504170")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x1504324", Offset = "0x1504324", VA = "0x1504324")]
		public DisplayBackground()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0C0DC", Offset = "0xD0C0DC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0C0DC", Offset = "0xD0C0DC")]
	[ExecuteInEditMode]
	public class DisplayIMGUI : MonoBehaviour
	{
		[Token(Token = "0x40027B1")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40027B2")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x40027B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40027B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _displayInEditor;

		[Token(Token = "0x40027B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ScaleMode _scaleMode;

		[Token(Token = "0x40027B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color _color;

		[Token(Token = "0x40027B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _alphaBlend;

		[Token(Token = "0x40027B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _useDepth;

		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int _depth;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _fullScreen;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E70C", Offset = "0xD1E70C")]
		public float _x;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E724", Offset = "0xD1E724")]
		public float _y;

		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E73C", Offset = "0xD1E73C")]
		public float _width;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E754", Offset = "0xD1E754")]
		public float _height;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propAlphaPack;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propVertScale;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _propApplyGamma;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _propChromaTex;

		[Token(Token = "0x40027C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x40027C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x40027C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _material;

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x150432C", Offset = "0x150432C", VA = "0x150432C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x1504420", Offset = "0x1504420", VA = "0x1504420")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x150455C", Offset = "0x150455C", VA = "0x150455C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x1504608", Offset = "0x1504608", VA = "0x1504608")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x150486C", Offset = "0x150486C", VA = "0x150486C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x1504B68", Offset = "0x1504B68", VA = "0x1504B68")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x1505438", Offset = "0x1505438", VA = "0x1505438")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x150589C", Offset = "0x150589C", VA = "0x150589C")]
		public DisplayIMGUI()
		{
		}
	}
	[Token(Token = "0x20004D4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0C150", Offset = "0xD0C150")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0C150", Offset = "0xD0C150")]
	public class DisplayUGUI : MaskableGraphic
	{
		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		public Rect m_UVRect;

		[Token(Token = "0x40027C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		public bool _setNativeSize;

		[Token(Token = "0x40027C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		public ScaleMode _scaleMode;

		[Token(Token = "0x40027CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		public bool _noDefaultDisplay;

		[Token(Token = "0x40027CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[SerializeField]
		public bool _displayInEditor;

		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		public Texture _defaultTexture;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _lastWidth;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int _lastHeight;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _flipY;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Texture _lastTexture;

		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader _shaderStereoPacking;

		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Shader _shaderAlphaPacking;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Shader _shaderAndroidOES;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _propAlphaPack;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static int _propVertScale;

		[Token(Token = "0x40027D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _propStereo;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static int _propApplyGamma;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static int _propUseYpCbCr;

		[Token(Token = "0x40027D9")]
		private const string PropChromaTexName = "_ChromaTex";

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static int _propChromaTex;

		[Token(Token = "0x40027DB")]
		private const string PropYpCbCrTransformName = "_YpCbCrTransform";

		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int _propYpCbCrTransform;

		[Token(Token = "0x40027DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static int _propCroppingScalars;

		[Token(Token = "0x40027DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _userMaterial;

		[Token(Token = "0x40027DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material _material;

		[Token(Token = "0x40027E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<UIVertex> _vertices;

		[Token(Token = "0x40027E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<int> QuadIndices;

		[Token(Token = "0x170001BF")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0x1506378", Offset = "0x1506378", VA = "0x1506378", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public MediaPlayer CurrentMediaPlayer
		{
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x15072FC", Offset = "0x15072FC", VA = "0x15072FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x1501F54", Offset = "0x1501F54", VA = "0x1501F54")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public Rect uvRect
		{
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x1507304", Offset = "0x1507304", VA = "0x1507304")]
			get
			{
				return default(Rect);
			}
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x1507310", Offset = "0x1507310", VA = "0x1507310")]
			set
			{
			}
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x15058EC", Offset = "0x15058EC", VA = "0x15058EC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x1505AA4", Offset = "0x1505AA4", VA = "0x1505AA4")]
		private static bool HasMask(GameObject obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x1505C00", Offset = "0x1505C00", VA = "0x1505C00")]
		private static Shader EnsureShader(Shader shader, string name)
		{
			return null;
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x1505D10", Offset = "0x1505D10", VA = "0x1505D10")]
		private static Shader EnsureAlphaPackingShader()
		{
			return null;
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x1505D9C", Offset = "0x1505D9C", VA = "0x1505D9C")]
		private static Shader EnsureStereoPackingShader()
		{
			return null;
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x1505E2C", Offset = "0x1505E2C", VA = "0x1505E2C")]
		private Shader EnsureAndroidOESShader()
		{
			return null;
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x1505EB8", Offset = "0x1505EB8", VA = "0x1505EB8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x1505FA0", Offset = "0x1505FA0", VA = "0x1505FA0", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x150606C", Offset = "0x150606C", VA = "0x150606C")]
		private Shader GetRequiredShader()
		{
			return null;
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x1506524", Offset = "0x1506524", VA = "0x1506524")]
		public bool HasValidTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x150668C", Offset = "0x150668C", VA = "0x150668C")]
		private void UpdateInternalMaterial()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0x150687C", Offset = "0x150687C", VA = "0x150687C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x15073A0", Offset = "0x15073A0", VA = "0x15073A0", Slot = "45")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xD26D5C", Offset = "0xD26D5C")]
		public override void SetNativeSize()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x15075E4", Offset = "0x15075E4", VA = "0x15075E4", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x1507E4C", Offset = "0x1507E4C", VA = "0x1507E4C", Slot = "42")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xD26D94", Offset = "0xD26D94")]
		protected override void OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x150768C", Offset = "0x150768C", VA = "0x150768C")]
		private void _OnFillVBO(List<UIVertex> vbo)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x1507E50", Offset = "0x1507E50", VA = "0x1507E50")]
		private Vector4 GetDrawingDimensions(ScaleMode scaleMode, ref Rect uvRect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x15088F8", Offset = "0x15088F8", VA = "0x15088F8")]
		public DisplayUGUI()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0C1C4", Offset = "0xD0C1C4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0C1C4", Offset = "0xD0C1C4")]
	public class MediaPlayer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000803")]
		public class Setup
		{
			[Token(Token = "0x4003107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool persistent;

			[Token(Token = "0x6002C29")]
			[Address(RVA = "0xF06420", Offset = "0xF06420", VA = "0xF06420")]
			public Setup()
			{
			}
		}

		[Token(Token = "0x2000804")]
		public enum FileLocation
		{
			[Token(Token = "0x4003109")]
			AbsolutePathOrURL,
			[Token(Token = "0x400310A")]
			RelativeToProjectFolder,
			[Token(Token = "0x400310B")]
			RelativeToStreamingAssetsFolder,
			[Token(Token = "0x400310C")]
			RelativeToDataFolder,
			[Token(Token = "0x400310D")]
			RelativeToPersistentDataFolder
		}

		[Serializable]
		[Token(Token = "0x2000805")]
		public class PlatformOptions
		{
			[Serializable]
			[Token(Token = "0x200083E")]
			public struct HTTPHeader
			{
				[Token(Token = "0x40031C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string header;

				[Token(Token = "0x40031C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public string value;

				[Token(Token = "0x6002C9F")]
				[Address(RVA = "0xF06044", Offset = "0xF06044", VA = "0xF06044")]
				public HTTPHeader(string header, string value)
				{
				}
			}

			[Token(Token = "0x200083F")]
			private enum ParseJSONHeadersState
			{
				[Token(Token = "0x40031C4")]
				Begin,
				[Token(Token = "0x40031C5")]
				FindKey,
				[Token(Token = "0x40031C6")]
				ReadKey,
				[Token(Token = "0x40031C7")]
				FindColon,
				[Token(Token = "0x40031C8")]
				FindValue,
				[Token(Token = "0x40031C9")]
				ReadValue,
				[Token(Token = "0x40031CA")]
				FindComma,
				[Token(Token = "0x40031CB")]
				Finished,
				[Token(Token = "0x40031CC")]
				Failed
			}

			[Token(Token = "0x400310E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool overridePath;

			[Token(Token = "0x400310F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FileLocation pathLocation;

			[Token(Token = "0x4003110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0x1511504", Offset = "0x1511504", VA = "0x1511504", Slot = "4")]
			public virtual bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0x151150C", Offset = "0x151150C", VA = "0x151150C", Slot = "5")]
			public virtual string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0x1511514", Offset = "0x1511514", VA = "0x1511514", Slot = "6")]
			public virtual string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0x151151C", Offset = "0x151151C", VA = "0x151151C", Slot = "7")]
			public virtual string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0x1510708", Offset = "0x1510708", VA = "0x1510708")]
			protected static string StringAsJsonString(string str)
			{
				return null;
			}

			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0x1510BFC", Offset = "0x1510BFC", VA = "0x1510BFC")]
			protected static List<HTTPHeader> ParseJsonHTTPHeadersIntoHTTPHeaderList(string httpHeaderJson)
			{
				return null;
			}

			[Token(Token = "0x6002C30")]
			[Address(RVA = "0x1510F6C", Offset = "0x1510F6C", VA = "0x1510F6C")]
			public PlatformOptions()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000806")]
		public class OptionsWindows : PlatformOptions
		{
			[Token(Token = "0x4003111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Windows.VideoApi videoApi;

			[Token(Token = "0x4003112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4003113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool useUnityAudio;

			[Token(Token = "0x4003114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool forceAudioResample;

			[Token(Token = "0x4003115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
			public bool useTextureMips;

			[Token(Token = "0x4003116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool hintAlphaChannel;

			[Token(Token = "0x4003117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool useLowLatency;

			[Token(Token = "0x4003118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string forceAudioOutputDeviceName;

			[Token(Token = "0x4003119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<string> preferredFilters;

			[Token(Token = "0x400311A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool enableAudio360;

			[Token(Token = "0x400311B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x6002C31")]
			[Address(RVA = "0x15113C4", Offset = "0x15113C4", VA = "0x15113C4", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C32")]
			[Address(RVA = "0x150F85C", Offset = "0x150F85C", VA = "0x150F85C")]
			public OptionsWindows()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000807")]
		public class OptionsApple : PlatformOptions, ISerializationCallbackReceiver
		{
			[Token(Token = "0x2000840")]
			public enum AudioMode
			{
				[Token(Token = "0x40031CE")]
				SystemDirect,
				[Token(Token = "0x40031CF")]
				Unity
			}

			[Token(Token = "0x400311C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioMode audioMode;

			[Token(Token = "0x400311D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<HTTPHeader> httpHeaders;

			[Token(Token = "0x400311E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			[Multiline]
			private string httpHeaderJson;

			[Token(Token = "0x400311F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string keyServerURLOverride;

			[Token(Token = "0x4003120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string keyServerAuthToken;

			[Token(Token = "0x4003121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[Multiline]
			public string base64EncodedKeyBlob;

			[Token(Token = "0x6002C33")]
			[Address(RVA = "0x1510F7C", Offset = "0x1510F7C", VA = "0x1510F7C")]
			public string GetHTTPHeadersAsJSON()
			{
				return null;
			}

			[Token(Token = "0x6002C34")]
			[Address(RVA = "0x1511170", Offset = "0x1511170", VA = "0x1511170", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C35")]
			[Address(RVA = "0x1511220", Offset = "0x1511220", VA = "0x1511220", Slot = "5")]
			public override string GetKeyServerURL()
			{
				return null;
			}

			[Token(Token = "0x6002C36")]
			[Address(RVA = "0x1511228", Offset = "0x1511228", VA = "0x1511228", Slot = "6")]
			public override string GetKeyServerAuthToken()
			{
				return null;
			}

			[Token(Token = "0x6002C37")]
			[Address(RVA = "0x1511230", Offset = "0x1511230", VA = "0x1511230", Slot = "7")]
			public override string GetDecryptionKey()
			{
				return null;
			}

			[Token(Token = "0x6002C38")]
			[Address(RVA = "0x1511238", Offset = "0x1511238", VA = "0x1511238", Slot = "8")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x6002C39")]
			[Address(RVA = "0x15112A8", Offset = "0x15112A8", VA = "0x15112A8", Slot = "9")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0x15112E4", Offset = "0x15112E4", VA = "0x15112E4")]
			public OptionsApple()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000808")]
		public class OptionsMacOSX : OptionsApple
		{
			[Token(Token = "0x6002C3B")]
			[Address(RVA = "0x150F8F8", Offset = "0x150F8F8", VA = "0x150F8F8")]
			public OptionsMacOSX()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000809")]
		public class OptionsIOS : OptionsApple
		{
			[Token(Token = "0x4003122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool useYpCbCr420Textures;

			[Token(Token = "0x4003123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
			public bool resumePlaybackOnAudioSessionRouteChange;

			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0x151135C", Offset = "0x151135C", VA = "0x151135C", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C3D")]
			[Address(RVA = "0x150F8FC", Offset = "0x150F8FC", VA = "0x150F8FC")]
			public OptionsIOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200080A")]
		public class OptionsTVOS : OptionsIOS
		{
			[Token(Token = "0x6002C3E")]
			[Address(RVA = "0x150F908", Offset = "0x150F908", VA = "0x150F908")]
			public OptionsTVOS()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200080B")]
		public class OptionsAndroid : PlatformOptions, ISerializationCallbackReceiver
		{
			[Token(Token = "0x4003124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Android.VideoApi videoApi;

			[Token(Token = "0x4003125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useFastOesPath;

			[Token(Token = "0x4003126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			public bool showPosterFrame;

			[Token(Token = "0x4003127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
			public bool enableAudio360;

			[Token(Token = "0x4003128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Audio360ChannelMode audio360ChannelMode;

			[Token(Token = "0x4003129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool preferSoftwareDecoder;

			[Token(Token = "0x400312A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<HTTPHeader> httpHeaders;

			[Token(Token = "0x400312B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[Multiline]
			private string httpHeaderJson;

			[Token(Token = "0x400312C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1F18C", Offset = "0xD1F18C")]
			public int fileOffset;

			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0x150DBF4", Offset = "0x150DBF4", VA = "0x150DBF4")]
			public string GetHTTPHeadersAsJSON()
			{
				return null;
			}

			[Token(Token = "0x6002C40")]
			[Address(RVA = "0x1510AAC", Offset = "0x1510AAC", VA = "0x1510AAC", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C41")]
			[Address(RVA = "0x1510B50", Offset = "0x1510B50", VA = "0x1510B50", Slot = "8")]
			public void OnBeforeSerialize()
			{
			}

			[Token(Token = "0x6002C42")]
			[Address(RVA = "0x1510BC0", Offset = "0x1510BC0", VA = "0x1510BC0", Slot = "9")]
			public void OnAfterDeserialize()
			{
			}

			[Token(Token = "0x6002C43")]
			[Address(RVA = "0x150F914", Offset = "0x150F914", VA = "0x150F914")]
			public OptionsAndroid()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200080C")]
		public class OptionsWindowsPhone : PlatformOptions
		{
			[Token(Token = "0x400312D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x400312E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x400312F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4003130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4003131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x6002C44")]
			[Address(RVA = "0x1511484", Offset = "0x1511484", VA = "0x1511484", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C45")]
			[Address(RVA = "0x150F998", Offset = "0x150F998", VA = "0x150F998")]
			public OptionsWindowsPhone()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200080D")]
		public class OptionsWindowsUWP : PlatformOptions
		{
			[Token(Token = "0x4003132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool useHardwareDecoding;

			[Token(Token = "0x4003133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool useUnityAudio;

			[Token(Token = "0x4003134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool forceAudioResample;

			[Token(Token = "0x4003135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool useTextureMips;

			[Token(Token = "0x4003136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useLowLatency;

			[Token(Token = "0x6002C46")]
			[Address(RVA = "0x15114C4", Offset = "0x15114C4", VA = "0x15114C4", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C47")]
			[Address(RVA = "0x150F9B4", Offset = "0x150F9B4", VA = "0x150F9B4")]
			public OptionsWindowsUWP()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200080E")]
		public class OptionsWebGL : PlatformOptions
		{
			[Token(Token = "0x4003137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WebGL.ExternalLibrary externalLibrary;

			[Token(Token = "0x4003138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool useTextureMips;

			[Token(Token = "0x6002C48")]
			[Address(RVA = "0x151139C", Offset = "0x151139C", VA = "0x151139C", Slot = "4")]
			public override bool IsModified()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C49")]
			[Address(RVA = "0x150F9D0", Offset = "0x150F9D0", VA = "0x150F9D0")]
			public OptionsWebGL()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200080F")]
		public class OptionsPS4 : PlatformOptions
		{
			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0x150F9E0", Offset = "0x150F9E0", VA = "0x150F9E0")]
			public OptionsPS4()
			{
			}
		}

		[Token(Token = "0x2000810")]
		public delegate void ProcessExtractedFrame(Texture2D extractedFrame);

		[Token(Token = "0x2000811")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E988", Offset = "0xD0E988")]
		private sealed class <LoadSubtitlesCoroutine>d__166 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400313A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400313B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x400313C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x400313D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public FileLocation fileLocation;

			[Token(Token = "0x400313E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string filePath;

			[Token(Token = "0x400313F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000397")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C52")]
				[Address(RVA = "0x1510698", Offset = "0x1510698", VA = "0x1510698", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000398")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C54")]
				[Address(RVA = "0x1510700", Offset = "0x1510700", VA = "0x1510700", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0x150BD44", Offset = "0x150BD44", VA = "0x150BD44")]
			[DebuggerHidden]
			public <LoadSubtitlesCoroutine>d__166(int <>1__state)
			{
			}

			[Token(Token = "0x6002C50")]
			[Address(RVA = "0x151043C", Offset = "0x151043C", VA = "0x151043C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C51")]
			[Address(RVA = "0x1510440", Offset = "0x1510440", VA = "0x1510440", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C53")]
			[Address(RVA = "0x15106A0", Offset = "0x15106A0", VA = "0x15106A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000812")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E998", Offset = "0xD0E998")]
		private sealed class <FinalRenderCapture>d__188 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4003143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldInstruction <wait>5__2;

			[Token(Token = "0x17000399")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C58")]
				[Address(RVA = "0x15103CC", Offset = "0x15103CC", VA = "0x15103CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C5A")]
				[Address(RVA = "0x1510434", Offset = "0x1510434", VA = "0x1510434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C55")]
			[Address(RVA = "0x150D9B4", Offset = "0x150D9B4", VA = "0x150D9B4")]
			[DebuggerHidden]
			public <FinalRenderCapture>d__188(int <>1__state)
			{
			}

			[Token(Token = "0x6002C56")]
			[Address(RVA = "0x1510290", Offset = "0x1510290", VA = "0x1510290", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C57")]
			[Address(RVA = "0x1510294", Offset = "0x1510294", VA = "0x1510294", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C59")]
			[Address(RVA = "0x15103D4", Offset = "0x15103D4", VA = "0x15103D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000813")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E9A8", Offset = "0xD0E9A8")]
		private sealed class <ExtractFrameCoroutine>d__209 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4003145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4003146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D target;

			[Token(Token = "0x4003147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MediaPlayer <>4__this;

			[Token(Token = "0x4003148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeSeconds;

			[Token(Token = "0x4003149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int timeThresholdMs;

			[Token(Token = "0x400314A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool accurateSeek;

			[Token(Token = "0x400314B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProcessExtractedFrame callback;

			[Token(Token = "0x400314C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Texture2D <result>5__2;

			[Token(Token = "0x400314D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <currFc>5__3;

			[Token(Token = "0x400314E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <iterations>5__4;

			[Token(Token = "0x400314F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <maxIterations>5__5;

			[Token(Token = "0x1700039B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C5E")]
				[Address(RVA = "0x1510220", Offset = "0x1510220", VA = "0x1510220", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C60")]
				[Address(RVA = "0x1510288", Offset = "0x1510288", VA = "0x1510288", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0x150F1C4", Offset = "0x150F1C4", VA = "0x150F1C4")]
			[DebuggerHidden]
			public <ExtractFrameCoroutine>d__209(int <>1__state)
			{
			}

			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x150F9F4", Offset = "0x150F9F4", VA = "0x150F9F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0x150F9F8", Offset = "0x150F9F8", VA = "0x150F9F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0x1510228", Offset = "0x1510228", VA = "0x1510228", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40027E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FileLocation m_VideoLocation;

		[Token(Token = "0x40027E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_VideoPath;

		[Token(Token = "0x40027E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_AutoOpen;

		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool m_AutoStart;

		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool m_Loop;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E7DC", Offset = "0xD1E7DC")]
		public float m_Volume;

		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E7F4", Offset = "0xD1E7F4")]
		private float m_Balance;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool m_Muted;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E834", Offset = "0xD1E834")]
		public float m_PlaybackRate;

		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool m_Resample;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Resampler.ResampleMode m_ResampleMode;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E874", Offset = "0xD1E874")]
		public int m_ResampleBufferSize;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Resampler m_Resampler;

		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_Persistent;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private VideoMapping m_videoMapping;

		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public StereoPacking m_StereoPacking;

		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public AlphaPacking m_AlphaPacking;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool m_DisplayDebugStereoColorTint;

		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode m_FilterMode;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextureWrapMode m_WrapMode;

		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E8AC", Offset = "0xD1E8AC")]
		public int m_AnisoLevel;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_LoadSubtitles;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private FileLocation m_SubtitleLocation;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FileLocation m_queueSubtitleLocation;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string m_SubtitlePath;

		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string m_queueSubtitlePath;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_loadSubtitlesRoutine;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform m_AudioHeadTransform;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool m_AudioFocusEnabled;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_AudioFocusTransform;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E924", Offset = "0xD1E924")]
		private float m_AudioFocusWidthDegrees;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xD1E96C", Offset = "0xD1E96C")]
		private float m_AudioFocusOffLevelDB;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MediaPlayerEvent m_events;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private int m_eventMask;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private FileFormat m_forceFileFormat;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private bool _pauseMediaOnAppPause;

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[SerializeField]
		private bool _playMediaOnAppUnpause;

		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IMediaControl m_Control;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IMediaProducer m_Texture;

		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IMediaInfo m_Info;

		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IMediaPlayer m_Player;

		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IMediaSubtitles m_Subtitles;

		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private IDisposable m_Dispose;

		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool m_VideoOpened;

		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool m_AutoStartTriggered;

		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		private bool m_WasPlayingOnExternalPause;

		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine _renderingCoroutine;

		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_GlobalStartup;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool m_EventFired_ReadyToPlay;

		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool m_EventFired_Started;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool m_EventFired_FirstFrameReady;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
		private bool m_EventFired_FinishedPlaying;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool m_EventFired_MetaDataReady;

		[Token(Token = "0x4002817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
		private bool m_EventState_PlaybackStalled;

		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
		private bool m_EventState_PlaybackBuffering;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x117")]
		private bool m_EventState_PlaybackSeeking;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int m_EventState_PreviousWidth;

		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int m_EventState_PreviousHeight;

		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int m_previousSubtitleIndex;

		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera m_DummyCamera;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool m_FinishedFrameOpenCheck;

		[Token(Token = "0x400281F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private uint m_sourceSampleRate;

		[Token(Token = "0x4002820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private uint m_sourceChannels;

		[Token(Token = "0x4002821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private bool m_manuallySetAudioSourceProperties;

		[Token(Token = "0x4002822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private OptionsWindows _optionsWindows;

		[Token(Token = "0x4002823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private OptionsMacOSX _optionsMacOSX;

		[Token(Token = "0x4002824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private OptionsIOS _optionsIOS;

		[Token(Token = "0x4002825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private OptionsTVOS _optionsTVOS;

		[Token(Token = "0x4002826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private OptionsAndroid _optionsAndroid;

		[Token(Token = "0x4002827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private OptionsWindowsPhone _optionsWindowsPhone;

		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private OptionsWindowsUWP _optionsWindowsUWP;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private OptionsWebGL _optionsWebGL;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private OptionsPS4 _optionsPS4;

		[Token(Token = "0x170001C2")]
		public Resampler FrameResampler
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0x150AABC", Offset = "0x150AABC", VA = "0x150AABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		public bool Persistent
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0x150AAC4", Offset = "0x150AAC4", VA = "0x150AAC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x150AACC", Offset = "0x150AACC", VA = "0x150AACC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public VideoMapping VideoLayoutMapping
		{
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x150AAD8", Offset = "0x150AAD8", VA = "0x150AAD8")]
			get
			{
				return default(VideoMapping);
			}
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0x150AAE0", Offset = "0x150AAE0", VA = "0x150AAE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public virtual IMediaInfo Info
		{
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x150AAE8", Offset = "0x150AAE8", VA = "0x150AAE8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public virtual IMediaControl Control
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x150AAF0", Offset = "0x150AAF0", VA = "0x150AAF0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public virtual IMediaPlayer Player
		{
			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x150AAF8", Offset = "0x150AAF8", VA = "0x150AAF8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		public virtual IMediaProducer TextureProducer
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x150AB00", Offset = "0x150AB00", VA = "0x150AB00", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public virtual IMediaSubtitles Subtitles
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x150AB08", Offset = "0x150AB08", VA = "0x150AB08", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		public MediaPlayerEvent Events
		{
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0x14F3388", Offset = "0x14F3388", VA = "0x14F3388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public bool VideoOpened
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0x150AB10", Offset = "0x150AB10", VA = "0x150AB10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CC")]
		public bool PauseMediaOnAppPause
		{
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x150AB18", Offset = "0x150AB18", VA = "0x150AB18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x150AB20", Offset = "0x150AB20", VA = "0x150AB20")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public bool PlayMediaOnAppUnpause
		{
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x150AB2C", Offset = "0x150AB2C", VA = "0x150AB2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x150AB34", Offset = "0x150AB34", VA = "0x150AB34")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public FileFormat ForceFileFormat
		{
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x150AB40", Offset = "0x150AB40", VA = "0x150AB40")]
			get
			{
				return default(FileFormat);
			}
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x150AB48", Offset = "0x150AB48", VA = "0x150AB48")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public Transform AudioHeadTransform
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x150AB58", Offset = "0x150AB58", VA = "0x150AB58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0x150AB50", Offset = "0x150AB50", VA = "0x150AB50")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public bool AudioFocusEnabled
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x150AB60", Offset = "0x150AB60", VA = "0x150AB60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x150AB68", Offset = "0x150AB68", VA = "0x150AB68")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public float AudioFocusOffLevelDB
		{
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0x150AB74", Offset = "0x150AB74", VA = "0x150AB74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0x150AB7C", Offset = "0x150AB7C", VA = "0x150AB7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public float AudioFocusWidthDegrees
		{
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0x150AB84", Offset = "0x150AB84", VA = "0x150AB84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0x150AB8C", Offset = "0x150AB8C", VA = "0x150AB8C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public Transform AudioFocusTransform
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x150AB94", Offset = "0x150AB94", VA = "0x150AB94")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x150AB9C", Offset = "0x150AB9C", VA = "0x150AB9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public OptionsWindows PlatformOptionsWindows
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x150ABA4", Offset = "0x150ABA4", VA = "0x150ABA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public OptionsMacOSX PlatformOptionsMacOSX
		{
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0x150ABAC", Offset = "0x150ABAC", VA = "0x150ABAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public OptionsIOS PlatformOptionsIOS
		{
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x150ABB4", Offset = "0x150ABB4", VA = "0x150ABB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public OptionsTVOS PlatformOptionsTVOS
		{
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x150ABBC", Offset = "0x150ABBC", VA = "0x150ABBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public OptionsAndroid PlatformOptionsAndroid
		{
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x150ABC4", Offset = "0x150ABC4", VA = "0x150ABC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public OptionsWindowsPhone PlatformOptionsWindowsPhone
		{
			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0x150ABCC", Offset = "0x150ABCC", VA = "0x150ABCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		public OptionsWindowsUWP PlatformOptionsWindowsUWP
		{
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x150ABD4", Offset = "0x150ABD4", VA = "0x150ABD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public OptionsWebGL PlatformOptionsWebGL
		{
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x150ABDC", Offset = "0x150ABDC", VA = "0x150ABDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public OptionsPS4 PlatformOptionsPS4
		{
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0x150ABE4", Offset = "0x150ABE4", VA = "0x150ABE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		public bool SubtitlesEnabled
		{
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0x150BBDC", Offset = "0x150BBDC", VA = "0x150BBDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001DE")]
		public string SubtitlePath
		{
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0x150BBE4", Offset = "0x150BBE4", VA = "0x150BBE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public FileLocation SubtitleLocation
		{
			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x150BBEC", Offset = "0x150BBEC", VA = "0x150BBEC")]
			get
			{
				return default(FileLocation);
			}
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x150ABEC", Offset = "0x150ABEC", VA = "0x150ABEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x150AC7C", Offset = "0x150AC7C", VA = "0x150AC7C")]
		protected void Initialise()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x150AF50", Offset = "0x150AF50", VA = "0x150AF50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x14FA728", Offset = "0x14FA728", VA = "0x14FA728")]
		public bool OpenVideoFromFile(FileLocation location, string path, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x14FBBEC", Offset = "0x14FBBEC", VA = "0x14FBBEC")]
		public bool OpenVideoFromBuffer(byte[] buffer, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x14FBE88", Offset = "0x14FBE88", VA = "0x14FBE88")]
		public bool StartOpenChunkedVideoFromBuffer(ulong length, bool autoPlay = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x14FC064", Offset = "0x14FC064", VA = "0x14FC064")]
		public bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x14FC068", Offset = "0x14FC068", VA = "0x14FC068")]
		public bool EndOpenChunkedVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x150B280", Offset = "0x150B280", VA = "0x150B280")]
		public bool EnableSubtitles(FileLocation fileLocation, string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x150BCB0", Offset = "0x150BCB0", VA = "0x150BCB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26DCC", Offset = "0xD26DCC")]
		private IEnumerator LoadSubtitlesCoroutine(string url, FileLocation fileLocation, string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x150BD70", Offset = "0x150BD70", VA = "0x150BD70")]
		public void DisableSubtitles()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x150B644", Offset = "0x150B644", VA = "0x150B644")]
		private bool OpenVideoFromBufferInternal(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x150B818", Offset = "0x150B818", VA = "0x150B818")]
		private bool StartOpenVideoFromBufferInternal(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x150B9E4", Offset = "0x150B9E4", VA = "0x150B9E4")]
		private bool AddChunkToBufferInternal(byte[] chunk, ulong offset, ulong chunkSize)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x150BAF8", Offset = "0x150BAF8", VA = "0x150BAF8")]
		private bool EndOpenVideoFromBufferInternal()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x150AFD4", Offset = "0x150AFD4", VA = "0x150AFD4")]
		private bool OpenVideoFromFile()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x150BE7C", Offset = "0x150BE7C", VA = "0x150BE7C")]
		private void SetPlaybackOptions()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x14FBF0C", Offset = "0x14FBF0C", VA = "0x14FBF0C")]
		public void CloseVideo()
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x14FAAD8", Offset = "0x14FAAD8", VA = "0x14FAAD8")]
		public void Play()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x14FAC20", Offset = "0x14FAC20", VA = "0x14FAC20")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x150C4A8", Offset = "0x150C4A8", VA = "0x150C4A8")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x150407C", Offset = "0x150407C", VA = "0x150407C")]
		public void Rewind(bool pause)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x150C564", Offset = "0x150C564", VA = "0x150C564", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x150D474", Offset = "0x150D474", VA = "0x150D474")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x150D478", Offset = "0x150D478", VA = "0x150D478")]
		private void UpdateResampler()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x150D560", Offset = "0x150D560", VA = "0x150D560")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x150D634", Offset = "0x150D634", VA = "0x150D634")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x150D714", Offset = "0x150D714", VA = "0x150D714", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x150D7EC", Offset = "0x150D7EC", VA = "0x150D7EC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x150B604", Offset = "0x150B604", VA = "0x150B604")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x150C478", Offset = "0x150C478", VA = "0x150C478")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x150D944", Offset = "0x150D944", VA = "0x150D944")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26E30", Offset = "0xD26E30")]
		private IEnumerator FinalRenderCapture()
		{
			return null;
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x150BBF4", Offset = "0x150BBF4", VA = "0x150BBF4")]
		public static Platform GetPlatform()
		{
			return default(Platform);
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x150D9E0", Offset = "0x150D9E0", VA = "0x150D9E0")]
		public PlatformOptions GetCurrentPlatformOptions()
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x150D9E8", Offset = "0x150D9E8", VA = "0x150D9E8")]
		public static string GetPath(FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x150DB00", Offset = "0x150DB00", VA = "0x150DB00")]
		public static string GetFilePath(string path, FileLocation location)
		{
			return null;
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x150C3C4", Offset = "0x150C3C4", VA = "0x150C3C4")]
		private string GetPlatformVideoApiString()
		{
			return null;
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x150C354", Offset = "0x150C354", VA = "0x150C354")]
		private long GetPlatformFileOffset()
		{
			return default(long);
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x150C370", Offset = "0x150C370", VA = "0x150C370")]
		private string GetPlatformHttpHeaderJson()
		{
			return null;
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x150BBFC", Offset = "0x150BBFC", VA = "0x150BBFC")]
		private string GetPlatformFilePath(Platform platform, ref string filePath, ref FileLocation fileLocation)
		{
			return null;
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x150DDE8", Offset = "0x150DDE8", VA = "0x150DDE8", Slot = "11")]
		public virtual BaseMediaPlayer CreatePlatformMediaPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x150E050", Offset = "0x150E050", VA = "0x150E050")]
		private bool ForceWaitForNewFrame(int lastFrameCount, float timeoutMs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x150C9CC", Offset = "0x150C9CC", VA = "0x150C9CC")]
		private void UpdateAudioFocus()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x150C820", Offset = "0x150C820", VA = "0x150C820")]
		private void UpdateAudioHeadTransform()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x150CC1C", Offset = "0x150CC1C", VA = "0x150CC1C")]
		private void UpdateErrors()
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x150CDE4", Offset = "0x150CDE4", VA = "0x150CDE4")]
		private void UpdateEvents()
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x150C45C", Offset = "0x150C45C", VA = "0x150C45C")]
		protected bool IsHandleEvent(MediaPlayerEvent.EventType eventType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x150E2CC", Offset = "0x150E2CC", VA = "0x150E2CC")]
		private bool FireEventIfPossible(MediaPlayerEvent.EventType eventType, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x150E360", Offset = "0x150E360", VA = "0x150E360")]
		private bool CanFireEvent(MediaPlayerEvent.EventType et, bool hasFired)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x150EC28", Offset = "0x150EC28", VA = "0x150EC28")]
		private void OnApplicationFocus(bool focusStatus)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x150ED18", Offset = "0x150ED18", VA = "0x150ED18")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x150EEA0", Offset = "0x150EEA0", VA = "0x150EEA0")]
		private static Camera GetDummyCamera()
		{
			return null;
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x150F114", Offset = "0x150F114", VA = "0x150F114")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26E94", Offset = "0xD26E94")]
		private IEnumerator ExtractFrameCoroutine(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x14FB6A4", Offset = "0x14FB6A4", VA = "0x14FB6A4")]
		public void ExtractFrameAsync(Texture2D target, ProcessExtractedFrame callback, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x14FB4A4", Offset = "0x14FB4A4", VA = "0x14FB4A4")]
		public Texture2D ExtractFrame(Texture2D target, float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x150F1F0", Offset = "0x150F1F0", VA = "0x150F1F0")]
		private Texture ExtractFrame(float timeSeconds = -1f, bool accurateSeek = true, int timeoutMs = 1000, int timeThresholdMs = 100)
		{
			return null;
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x150F68C", Offset = "0x150F68C", VA = "0x150F68C")]
		public MediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D6")]
	public class MediaPlaylist
	{
		[Serializable]
		[Token(Token = "0x2000814")]
		public class MediaItem
		{
			[Token(Token = "0x4003150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public MediaPlayer.FileLocation fileLocation;

			[Token(Token = "0x4003151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public string filePath;

			[Token(Token = "0x4003152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public bool loop;

			[Token(Token = "0x4003153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			public PlaylistMediaPlayer.StartMode startMode;

			[Token(Token = "0x4003154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public PlaylistMediaPlayer.ProgressMode progressMode;

			[Token(Token = "0x4003155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			public float progressTimeSeconds;

			[Token(Token = "0x4003156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public bool autoPlay;

			[Token(Token = "0x4003157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			public StereoPacking stereoPacking;

			[Token(Token = "0x4003158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public AlphaPacking alphaPacking;

			[Token(Token = "0x4003159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			public bool isOverrideTransition;

			[Token(Token = "0x400315A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			public PlaylistMediaPlayer.Transition overrideTransition;

			[Token(Token = "0x400315B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[SerializeField]
			public float overrideTransitionDuration;

			[Token(Token = "0x400315C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			public PlaylistMediaPlayer.Easing overrideTransitionEasing;

			[Token(Token = "0x6002C61")]
			[Address(RVA = "0xF067C8", Offset = "0xF067C8", VA = "0xF067C8")]
			public MediaItem()
			{
			}
		}

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<MediaItem> _items;

		[Token(Token = "0x170001E0")]
		public List<MediaItem> Items
		{
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xF066DC", Offset = "0xF066DC", VA = "0xF066DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xF066E4", Offset = "0xF066E4", VA = "0xF066E4")]
		public bool HasItemAt(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xF06754", Offset = "0xF06754", VA = "0xF06754")]
		public MediaPlaylist()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0C228", Offset = "0xD0C228")]
	public class PlaylistMediaPlayer : MediaPlayer, IMediaProducer
	{
		[Token(Token = "0x2000815")]
		public enum Transition
		{
			[Token(Token = "0x400315E")]
			None,
			[Token(Token = "0x400315F")]
			Fade,
			[Token(Token = "0x4003160")]
			Black,
			[Token(Token = "0x4003161")]
			White,
			[Token(Token = "0x4003162")]
			Transparent,
			[Token(Token = "0x4003163")]
			Horiz,
			[Token(Token = "0x4003164")]
			Vert,
			[Token(Token = "0x4003165")]
			Diag,
			[Token(Token = "0x4003166")]
			MirrorH,
			[Token(Token = "0x4003167")]
			MirrorV,
			[Token(Token = "0x4003168")]
			MirrorD,
			[Token(Token = "0x4003169")]
			ScrollV,
			[Token(Token = "0x400316A")]
			ScrollH,
			[Token(Token = "0x400316B")]
			Circle,
			[Token(Token = "0x400316C")]
			Diamond,
			[Token(Token = "0x400316D")]
			Blinds,
			[Token(Token = "0x400316E")]
			Arrows,
			[Token(Token = "0x400316F")]
			SlideH,
			[Token(Token = "0x4003170")]
			SlideV,
			[Token(Token = "0x4003171")]
			Zoom,
			[Token(Token = "0x4003172")]
			RectV,
			[Token(Token = "0x4003173")]
			Random
		}

		[Token(Token = "0x2000816")]
		public enum PlaylistLoopMode
		{
			[Token(Token = "0x4003175")]
			None,
			[Token(Token = "0x4003176")]
			Loop
		}

		[Token(Token = "0x2000817")]
		public enum StartMode
		{
			[Token(Token = "0x4003178")]
			Immediate,
			[Token(Token = "0x4003179")]
			Manual
		}

		[Token(Token = "0x2000818")]
		public enum ProgressMode
		{
			[Token(Token = "0x400317B")]
			OnFinish,
			[Token(Token = "0x400317C")]
			BeforeFinish,
			[Token(Token = "0x400317D")]
			Manual
		}

		[Serializable]
		[Token(Token = "0x2000819")]
		public class Easing
		{
			[Token(Token = "0x2000841")]
			public enum Preset
			{
				[Token(Token = "0x40031D1")]
				Step,
				[Token(Token = "0x40031D2")]
				Linear,
				[Token(Token = "0x40031D3")]
				InQuad,
				[Token(Token = "0x40031D4")]
				OutQuad,
				[Token(Token = "0x40031D5")]
				InOutQuad,
				[Token(Token = "0x40031D6")]
				InCubic,
				[Token(Token = "0x40031D7")]
				OutCubic,
				[Token(Token = "0x40031D8")]
				InOutCubic,
				[Token(Token = "0x40031D9")]
				InQuint,
				[Token(Token = "0x40031DA")]
				OutQuint,
				[Token(Token = "0x40031DB")]
				InOutQuint,
				[Token(Token = "0x40031DC")]
				InQuart,
				[Token(Token = "0x40031DD")]
				OutQuart,
				[Token(Token = "0x40031DE")]
				InOutQuart,
				[Token(Token = "0x40031DF")]
				InExpo,
				[Token(Token = "0x40031E0")]
				OutExpo,
				[Token(Token = "0x40031E1")]
				InOutExpo,
				[Token(Token = "0x40031E2")]
				Random,
				[Token(Token = "0x40031E3")]
				RandomNotStep
			}

			[Token(Token = "0x400317E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Preset preset;

			[Token(Token = "0x6002C62")]
			[Address(RVA = "0xF0775C", Offset = "0xF0775C", VA = "0xF0775C")]
			public static Func<float, float> GetFunction(Preset preset)
			{
				return null;
			}

			[Token(Token = "0x6002C63")]
			[Address(RVA = "0xF08EBC", Offset = "0xF08EBC", VA = "0xF08EBC")]
			public static float PowerEaseIn(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x6002C64")]
			[Address(RVA = "0xF08F30", Offset = "0xF08F30", VA = "0xF08F30")]
			public static float PowerEaseOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x6002C65")]
			[Address(RVA = "0xF08FB8", Offset = "0xF08FB8", VA = "0xF08FB8")]
			public static float PowerEaseInOut(float t, float power)
			{
				return default(float);
			}

			[Token(Token = "0x6002C66")]
			[Address(RVA = "0xF09000", Offset = "0xF09000", VA = "0xF09000")]
			public static float Step(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C67")]
			[Address(RVA = "0xF09018", Offset = "0xF09018", VA = "0xF09018")]
			public static float Linear(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C68")]
			[Address(RVA = "0xF0901C", Offset = "0xF0901C", VA = "0xF0901C")]
			public static float InQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C69")]
			[Address(RVA = "0xF09024", Offset = "0xF09024", VA = "0xF09024")]
			public static float OutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C6A")]
			[Address(RVA = "0xF0902C", Offset = "0xF0902C", VA = "0xF0902C")]
			public static float InOutQuad(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C6B")]
			[Address(RVA = "0xF09034", Offset = "0xF09034", VA = "0xF09034")]
			public static float InCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0xF0903C", Offset = "0xF0903C", VA = "0xF0903C")]
			public static float OutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0xF09044", Offset = "0xF09044", VA = "0xF09044")]
			public static float InOutCubic(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0xF0904C", Offset = "0xF0904C", VA = "0xF0904C")]
			public static float InQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0xF09054", Offset = "0xF09054", VA = "0xF09054")]
			public static float OutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C70")]
			[Address(RVA = "0xF0905C", Offset = "0xF0905C", VA = "0xF0905C")]
			public static float InOutQuart(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C71")]
			[Address(RVA = "0xF09064", Offset = "0xF09064", VA = "0xF09064")]
			public static float InQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xF0906C", Offset = "0xF0906C", VA = "0xF0906C")]
			public static float OutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C73")]
			[Address(RVA = "0xF09074", Offset = "0xF09074", VA = "0xF09074")]
			public static float InOutQuint(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C74")]
			[Address(RVA = "0xF0907C", Offset = "0xF0907C", VA = "0xF0907C")]
			public static float InExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C75")]
			[Address(RVA = "0xF09110", Offset = "0xF09110", VA = "0xF09110")]
			public static float OutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C76")]
			[Address(RVA = "0xF09198", Offset = "0xF09198", VA = "0xF09198")]
			public static float InOutExpo(float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C77")]
			[Address(RVA = "0xF0927C", Offset = "0xF0927C", VA = "0xF0927C")]
			public Easing()
			{
			}
		}

		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private MediaPlayer _playerA;

		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private MediaPlayer _playerB;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private bool _playlistAutoProgress;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1EAFC", Offset = "0xD1EAFC")]
		private bool _autoCloseVideo;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private PlaylistLoopMode _playlistLoopMode;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private MediaPlaylist _playlist;

		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1EB68", Offset = "0xD1EB68")]
		private bool _pausePreviousOnTransition;

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		private Transition _nextTransition;

		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private float _transitionDuration;

		[Token(Token = "0x4002835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Easing _transitionEasing;

		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _propFromTex;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _propT;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private int _playlistIndex;

		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private MediaPlayer _nextPlayer;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Shader _shader;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Material _material;

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Transition _currentTransition;

		[Token(Token = "0x400283D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private string _currentTransitionName;

		[Token(Token = "0x400283E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float _currentTransitionDuration;

		[Token(Token = "0x400283F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Easing.Preset _currentTransitionEasing;

		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float _textureTimer;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float _transitionTimer;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Func<float, float> _easeFunc;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private RenderTexture _rt;

		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private MediaPlaylist.MediaItem _currentItem;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private MediaPlaylist.MediaItem _nextItem;

		[Token(Token = "0x170001E1")]
		public MediaPlayer CurrentPlayer
		{
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xF06D50", Offset = "0xF06D50", VA = "0xF06D50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public MediaPlayer NextPlayer
		{
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xF06DE4", Offset = "0xF06DE4", VA = "0xF06DE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		public MediaPlaylist Playlist
		{
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xF06DEC", Offset = "0xF06DEC", VA = "0xF06DEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public int PlaylistIndex
		{
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xF06DF4", Offset = "0xF06DF4", VA = "0xF06DF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E5")]
		public MediaPlaylist.MediaItem PlaylistItem
		{
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xF06DFC", Offset = "0xF06DFC", VA = "0xF06DFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public PlaylistLoopMode LoopMode
		{
			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xF06E90", Offset = "0xF06E90", VA = "0xF06E90")]
			get
			{
				return default(PlaylistLoopMode);
			}
			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xF06E98", Offset = "0xF06E98", VA = "0xF06E98")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public bool AutoProgress
		{
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xF06EA0", Offset = "0xF06EA0", VA = "0xF06EA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xF06EA8", Offset = "0xF06EA8", VA = "0xF06EA8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public override IMediaInfo Info
		{
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xF06EB4", Offset = "0xF06EB4", VA = "0xF06EB4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		public override IMediaControl Control
		{
			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xF06F60", Offset = "0xF06F60", VA = "0xF06F60", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public override IMediaProducer TextureProducer
		{
			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xF0700C", Offset = "0xF0700C", VA = "0xF0700C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xF07168", Offset = "0xF07168", VA = "0xF07168")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xF074F0", Offset = "0xF074F0", VA = "0xF074F0")]
		private Texture GetCurrentTexture()
		{
			return null;
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xF07630", Offset = "0xF07630", VA = "0xF07630")]
		private Texture GetNextTexture()
		{
			return null;
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xF079EC", Offset = "0xF079EC", VA = "0xF079EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xF07ADC", Offset = "0xF07ADC", VA = "0xF07ADC", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xF07BD0", Offset = "0xF07BD0", VA = "0xF07BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xF07E2C", Offset = "0xF07E2C", VA = "0xF07E2C")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xF08078", Offset = "0xF08078", VA = "0xF08078")]
		public bool PrevItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xF07FEC", Offset = "0xF07FEC", VA = "0xF07FEC")]
		public bool NextItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xF08084", Offset = "0xF08084", VA = "0xF08084")]
		public bool CanJumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xF07D44", Offset = "0xF07D44", VA = "0xF07D44")]
		public bool JumpToItem(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xF08118", Offset = "0xF08118", VA = "0xF08118")]
		public void OpenVideoFile(MediaPlaylist.MediaItem mediaItem)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xF070CC", Offset = "0xF070CC", VA = "0xF070CC")]
		private bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xF082D8", Offset = "0xF082D8", VA = "0xF082D8")]
		private void SetTransition(Transition transition, float duration, Easing.Preset easing)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xF083F8", Offset = "0xF083F8", VA = "0xF083F8", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xF08930", Offset = "0xF08930", VA = "0xF08930", Slot = "13")]
		public Texture GetTexture(int index = 0)
		{
			return null;
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xF08938", Offset = "0xF08938", VA = "0xF08938", Slot = "12")]
		public int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xF08A00", Offset = "0xF08A00", VA = "0xF08A00", Slot = "14")]
		public int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xF08ACC", Offset = "0xF08ACC", VA = "0xF08ACC", Slot = "15")]
		public bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xF08B98", Offset = "0xF08B98", VA = "0xF08B98", Slot = "16")]
		public long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xF08C64", Offset = "0xF08C64", VA = "0xF08C64", Slot = "17")]
		public bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xF08D30", Offset = "0xF08D30", VA = "0xF08D30", Slot = "18")]
		public Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xF0838C", Offset = "0xF0838C", VA = "0xF0838C")]
		private static string GetTransitionName(Transition transition)
		{
			return null;
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xF08E0C", Offset = "0xF08E0C", VA = "0xF08E0C")]
		public PlaylistMediaPlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D8")]
	public class StreamParserEvent : UnityEvent<StreamParser, StreamParserEvent.EventType>
	{
		[Token(Token = "0x200081A")]
		public enum EventType
		{
			[Token(Token = "0x4003180")]
			Success,
			[Token(Token = "0x4003181")]
			Failed
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xF0C140", Offset = "0xF0C140", VA = "0xF0C140")]
		public StreamParserEvent()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class StreamParser : MonoBehaviour
	{
		[Token(Token = "0x200081B")]
		public enum StreamType
		{
			[Token(Token = "0x4003183")]
			HLS
		}

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _url;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StreamType _streamType;

		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _autoLoad;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stream _parser;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _loaded;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Stream> _substreams;

		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Stream.Chunk> _chunks;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private StreamParserEvent _events;

		[Token(Token = "0x170001EB")]
		public StreamParserEvent Events
		{
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0xF0C0D8", Offset = "0xF0C0D8", VA = "0xF0C0D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public bool Loaded
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0xF0C404", Offset = "0xF0C404", VA = "0xF0C404")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001ED")]
		public Stream Root
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xF0C40C", Offset = "0xF0C40C", VA = "0xF0C40C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public List<Stream> SubStreams
		{
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0xF0C424", Offset = "0xF0C424", VA = "0xF0C424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public List<Stream.Chunk> Chunks
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xF0C43C", Offset = "0xF0C43C", VA = "0xF0C43C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xF0C190", Offset = "0xF0C190", VA = "0xF0C190")]
		private void LoadFile()
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xF0C454", Offset = "0xF0C454", VA = "0xF0C454")]
		public void ParseStream()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xF0C4F0", Offset = "0xF0C4F0", VA = "0xF0C4F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xF0C500", Offset = "0xF0C500", VA = "0xF0C500")]
		public StreamParser()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0C264", Offset = "0xD0C264")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0C264", Offset = "0xD0C264")]
	public class SubtitlesUGUI : MonoBehaviour
	{
		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xF0C570", Offset = "0xF0C570", VA = "0xF0C570")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xF0C6F4", Offset = "0xF0C6F4", VA = "0xF0C6F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xF0C578", Offset = "0xF0C578", VA = "0xF0C578")]
		public void ChangeMediaPlayer(MediaPlayer newPlayer)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xF0C6FC", Offset = "0xF0C6FC", VA = "0xF0C6FC")]
		private void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xF0C8A0", Offset = "0xF0C8A0", VA = "0xF0C8A0")]
		public SubtitlesUGUI()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xD0C2C8", Offset = "0xD0C2C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xD0C2C8", Offset = "0xD0C2C8")]
	public class UpdateStereoMaterial : MonoBehaviour
	{
		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1EC04", Offset = "0xD1EC04")]
		public Camera _camera;

		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xD1EC3C", Offset = "0xD1EC3C")]
		public MeshRenderer _renderer;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Graphic _uGuiComponent;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material _material;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StereoEye _forceEyeMode;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _cameraPositionId;

		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _viewMatrixId;

		[Token(Token = "0x4002857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private StereoEye _setForceEyeMode;

		[Token(Token = "0x4002858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera _foundCamera;

		[Token(Token = "0x170001F0")]
		public StereoEye ForceEyeMode
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0xF0C8A8", Offset = "0xF0C8A8", VA = "0xF0C8A8")]
			get
			{
				return default(StereoEye);
			}
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xF0C8B0", Offset = "0xF0C8B0", VA = "0xF0C8B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xF0C8B8", Offset = "0xF0C8B8", VA = "0xF0C8B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xF0C9D4", Offset = "0xF0C9D4", VA = "0xF0C9D4")]
		private void SetupMaterial(Material m, Camera camera)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xF0CB58", Offset = "0xF0CB58", VA = "0xF0CB58")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xF0CEF0", Offset = "0xF0CEF0", VA = "0xF0CEF0")]
		public UpdateStereoMaterial()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class AndroidMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x200081C")]
		private struct Native
		{
			[Token(Token = "0x2000842")]
			public enum AVPPluginEvent
			{
				[Token(Token = "0x40031E5")]
				Nop,
				[Token(Token = "0x40031E6")]
				PlayerSetup,
				[Token(Token = "0x40031E7")]
				PlayerUpdate,
				[Token(Token = "0x40031E8")]
				PlayerDestroy,
				[Token(Token = "0x40031E9")]
				ExtractFrame
			}

			[PreserveSig]
			[Token(Token = "0x6002C78")]
			[Address(RVA = "0x2319990", Offset = "0x2319990", VA = "0x2319990")]
			public static extern IntPtr GetRenderEventFunc();

			[PreserveSig]
			[Token(Token = "0x6002C79")]
			[Address(RVA = "0x231E7A0", Offset = "0x231E7A0", VA = "0x231E7A0")]
			public static extern int _GetWidth(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0x231E820", Offset = "0x231E820", VA = "0x231E820")]
			public static extern int _GetHeight(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002C7B")]
			[Address(RVA = "0x231E89C", Offset = "0x231E89C", VA = "0x231E89C")]
			public static extern int _GetTextureHandle(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0x231ED58", Offset = "0x231ED58", VA = "0x231ED58")]
			public static extern long _GetDuration(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0x231ECD8", Offset = "0x231ECD8", VA = "0x231ECD8")]
			public static extern int _GetLastErrorCode(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0x231D2D4", Offset = "0x231D2D4", VA = "0x231D2D4")]
			public static extern int _GetFrameCount(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0x231CAD0", Offset = "0x231CAD0", VA = "0x231CAD0")]
			public static extern float _GetVideoDisplayRate(int iPlayerIndex);

			[PreserveSig]
			[Token(Token = "0x6002C80")]
			[Address(RVA = "0x231B164", Offset = "0x231B164", VA = "0x231B164")]
			public static extern bool _CanPlay(int iPlayerIndex);
		}

		[Token(Token = "0x4002859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject s_ActivityContext;

		[Token(Token = "0x400285A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static AndroidJavaObject s_Interface;

		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static bool s_bInitialised;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string s_Version;

		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IntPtr _nativeFunction_RenderEvent;

		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected AndroidJavaObject m_Video;

		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Texture2D m_Texture;

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_TextureHandle;

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_UseFastOesPath;

		[Token(Token = "0x4002862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_DurationMs;

		[Token(Token = "0x4002863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int m_Width;

		[Token(Token = "0x4002864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Height;

		[Token(Token = "0x4002865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		protected int m_iPlayerIndex;

		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Android.VideoApi m_API;

		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_HeadRotationEnabled;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool m_FocusEnabled;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IntPtr m_Method_Update;

		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IntPtr m_Method_SetHeadRotation;

		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IntPtr m_Method_GetCurrentTimeMs;

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IntPtr m_Method_GetSourceVideoFrameRate;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private IntPtr m_Method_IsPlaying;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IntPtr m_Method_IsPaused;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IntPtr m_Method_IsFinished;

		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IntPtr m_Method_IsSeeking;

		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IntPtr m_Method_IsBuffering;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IntPtr m_Method_IsLooping;

		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IntPtr m_Method_HasVideo;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private IntPtr m_Method_HasAudio;

		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IntPtr m_Method_SetFocusProps;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IntPtr m_Method_SetFocusEnabled;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private IntPtr m_Method_SetFocusRotation;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private jvalue[] m_Value0;

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private jvalue[] m_Value1;

		[Token(Token = "0x400287A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private jvalue[] m_Value2;

		[Token(Token = "0x400287B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private jvalue[] m_Value4;

		[Token(Token = "0x400287C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int _textureQuality;

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x2319590", Offset = "0x2319590", VA = "0x2319590")]
		public static bool InitialisePlatform()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x2319A04", Offset = "0x2319A04", VA = "0x2319A04")]
		public static void DeinitPlatform()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x2319BA0", Offset = "0x2319BA0", VA = "0x2319BA0")]
		private static void IssuePluginEvent(Native.AVPPluginEvent type, int param)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x2319C40", Offset = "0x2319C40", VA = "0x2319C40")]
		private IntPtr GetMethod(string methodName, string signature)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x2319D88", Offset = "0x2319D88", VA = "0x2319D88")]
		public AndroidMediaPlayer(bool useFastOesPath, bool showPosterFrame, Android.VideoApi api, bool enable360Audio, Audio360ChannelMode channelMode, bool preferSoftware)
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x231A3A0", Offset = "0x231A3A0", VA = "0x231A3A0")]
		public void SetOptions(bool useFastOesPath, bool showPosterFrame)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x231A4F4", Offset = "0x231A4F4", VA = "0x231A4F4", Slot = "183")]
		public override long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x231A634", Offset = "0x231A634", VA = "0x231A634", Slot = "103")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x231A69C", Offset = "0x231A69C", VA = "0x231A69C", Slot = "104")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x231A88C", Offset = "0x231A88C", VA = "0x231A88C")]
		private void DisplayLoadFailureSuggestion(string path)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x231A938", Offset = "0x231A938", VA = "0x231A938", Slot = "123")]
		public override TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x231AA98", Offset = "0x231AA98", VA = "0x231AA98", Slot = "109")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x231AC04", Offset = "0x231AC04", VA = "0x231AC04", Slot = "110")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x231ACF0", Offset = "0x231ACF0", VA = "0x231ACF0", Slot = "111")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x231AE48", Offset = "0x231AE48", VA = "0x231AE48", Slot = "132")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x231AFA0", Offset = "0x231AFA0", VA = "0x231AFA0", Slot = "131")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x231B0F8", Offset = "0x231B0F8", VA = "0x231B0F8", Slot = "112")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x231B15C", Offset = "0x231B15C", VA = "0x231B15C", Slot = "113")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x231B1EC", Offset = "0x231B1EC", VA = "0x231B1EC", Slot = "114")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x231B2EC", Offset = "0x231B2EC", VA = "0x231B2EC", Slot = "115")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x231B3EC", Offset = "0x231B3EC", VA = "0x231B3EC", Slot = "116")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x231B4EC", Offset = "0x231B4EC", VA = "0x231B4EC", Slot = "118")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x231B620", Offset = "0x231B620", VA = "0x231B620", Slot = "119")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x231B754", Offset = "0x231B754", VA = "0x231B754", Slot = "121")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x231B8A0", Offset = "0x231B8A0", VA = "0x231B8A0", Slot = "125")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x231B998", Offset = "0x231B998", VA = "0x231B998", Slot = "124")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x231BAA4", Offset = "0x231BAA4", VA = "0x231BAA4", Slot = "169")]
		public override void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x231BD8C", Offset = "0x231BD8C", VA = "0x231BD8C", Slot = "170")]
		public override void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x231BE84", Offset = "0x231BE84", VA = "0x231BE84", Slot = "172")]
		public override void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x231BFE4", Offset = "0x231BFE4", VA = "0x231BFE4", Slot = "173")]
		public override void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x231C1A0", Offset = "0x231C1A0", VA = "0x231C1A0", Slot = "174")]
		public override void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x231C418", Offset = "0x231C418", VA = "0x231C418", Slot = "175")]
		public override void ResetAudioFocus()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x231C848", Offset = "0x231C848", VA = "0x231C848", Slot = "126")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x231C850", Offset = "0x231C850", VA = "0x231C850", Slot = "127")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x231C858", Offset = "0x231C858", VA = "0x231C858", Slot = "128")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x231C860", Offset = "0x231C860", VA = "0x231C860", Slot = "182")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x231C9B8", Offset = "0x231C9B8", VA = "0x231C9B8", Slot = "184")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x231CAC8", Offset = "0x231CAC8", VA = "0x231CAC8", Slot = "130")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x231CB50", Offset = "0x231CB50", VA = "0x231CB50", Slot = "133")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x231CCA8", Offset = "0x231CCA8", VA = "0x231CCA8", Slot = "134")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x231CE00", Offset = "0x231CE00", VA = "0x231CE00", Slot = "135")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x231CF58", Offset = "0x231CF58", VA = "0x231CF58", Slot = "136")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x231D0B0", Offset = "0x231D0B0", VA = "0x231D0B0", Slot = "137")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x231D208", Offset = "0x231D208", VA = "0x231D208", Slot = "149")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x231D248", Offset = "0x231D248", VA = "0x231D248", Slot = "150")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x231D354", Offset = "0x231D354", VA = "0x231D354", Slot = "153")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x231D35C", Offset = "0x231D35C", VA = "0x231D35C", Slot = "156")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x231D448", Offset = "0x231D448", VA = "0x231D448", Slot = "157")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x231D554", Offset = "0x231D554", VA = "0x231D554", Slot = "158")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x231D64C", Offset = "0x231D64C", VA = "0x231D64C", Slot = "160")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x231D758", Offset = "0x231D758", VA = "0x231D758", Slot = "159")]
		public override void SetBalance(float balance)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x231D850", Offset = "0x231D850", VA = "0x231D850", Slot = "161")]
		public override float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x231D95C", Offset = "0x231D95C", VA = "0x231D95C", Slot = "162")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x231DA68", Offset = "0x231DA68", VA = "0x231DA68", Slot = "164")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x231DB74", Offset = "0x231DB74", VA = "0x231DB74", Slot = "165")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x231DC5C", Offset = "0x231DC5C", VA = "0x231DC5C", Slot = "166")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x231DC94", Offset = "0x231DC94", VA = "0x231DC94", Slot = "167")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x231DC9C", Offset = "0x231DC9C", VA = "0x231DC9C", Slot = "176")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x231DCD0", Offset = "0x231DCD0", VA = "0x231DCD0", Slot = "178")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x231DCD8", Offset = "0x231DCD8", VA = "0x231DCD8", Slot = "179")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x231DCDC", Offset = "0x231DCDC", VA = "0x231DCDC", Slot = "180")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x231DD24", Offset = "0x231DD24", VA = "0x231DD24", Slot = "181")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x231DE30", Offset = "0x231DE30", VA = "0x231DE30", Slot = "138")]
		public override bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x231E054", Offset = "0x231E054", VA = "0x231E054", Slot = "152")]
		public override long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x231E160", Offset = "0x231E160", VA = "0x231E160", Slot = "186")]
		public override void Render()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x231E91C", Offset = "0x231E91C", VA = "0x231E91C", Slot = "192")]
		protected override void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x231E924", Offset = "0x231E924", VA = "0x231E924", Slot = "198")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x231EA24", Offset = "0x231EA24", VA = "0x231EA24", Slot = "122")]
		public override double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x231EB30", Offset = "0x231EB30", VA = "0x231EB30", Slot = "185")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x231EDD8", Offset = "0x231EDD8", VA = "0x231EDD8", Slot = "189")]
		public override bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x231EDE0", Offset = "0x231EDE0", VA = "0x231EDE0", Slot = "154")]
		public override float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x231EEE4", Offset = "0x231EEE4", VA = "0x231EEE4", Slot = "187")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class AudioOutputManager
	{
		[Token(Token = "0x400287D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioOutputManager _instance;

		[Token(Token = "0x400287E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<MediaPlayer, HashSet<AudioOutput>> _accessTrackers;

		[Token(Token = "0x400287F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MediaPlayer, float[]> _pcmData;

		[Token(Token = "0x170001F1")]
		public static AudioOutputManager Instance
		{
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x14F4E5C", Offset = "0x14F4E5C", VA = "0x14F4E5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x14F4F1C", Offset = "0x14F4F1C", VA = "0x14F4F1C")]
		private AudioOutputManager()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x14F4FB8", Offset = "0x14F4FB8", VA = "0x14F4FB8")]
		public void RequestAudio(AudioOutput _outputComponent, MediaPlayer mediaPlayer, float[] data, int channelMask, int totalChannels, AudioOutput.AudioOutputMode audioOutputMode)
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x14F55B8", Offset = "0x14F55B8", VA = "0x14F55B8")]
		private void GrabAudio(MediaPlayer player, float[] data, int channels)
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public abstract class BaseMediaPlayer : IMediaPlayer, IMediaControl, IMediaInfo, IMediaProducer, IMediaSubtitles, IDisposable
	{
		[Token(Token = "0x4002880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string _playerDescription;

		[Token(Token = "0x4002881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ErrorCode _lastError;

		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected FilterMode _defaultTextureFilterMode;

		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected TextureWrapMode _defaultTextureWrapMode;

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int _defaultTextureAnisoLevel;

		[Token(Token = "0x4002885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TimeRange[] _seekableTimeRanges;

		[Token(Token = "0x4002886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool _isSeekingStarted;

		[Token(Token = "0x4002887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _stallDetectionTimer;

		[Token(Token = "0x4002888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _stallDetectionFrame;

		[Token(Token = "0x4002889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected List<Subtitle> _subtitles;

		[Token(Token = "0x400288A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Subtitle _currentSubtitle;

		[Token(Token = "0x6001F36")]
		public abstract string GetVersion();

		[Token(Token = "0x6001F37")]
		public abstract bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x14F56A8", Offset = "0x14F56A8", VA = "0x14F56A8", Slot = "105")]
		public virtual bool OpenVideoFromBuffer(byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x14F56B0", Offset = "0x14F56B0", VA = "0x14F56B0", Slot = "106")]
		public virtual bool StartOpenVideoFromBuffer(ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x14F56B8", Offset = "0x14F56B8", VA = "0x14F56B8", Slot = "107")]
		public virtual bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x14F56C0", Offset = "0x14F56C0", VA = "0x14F56C0", Slot = "108")]
		public virtual bool EndOpenVideoFromBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x14F56C8", Offset = "0x14F56C8", VA = "0x14F56C8", Slot = "109")]
		public virtual void CloseVideo()
		{
		}

		[Token(Token = "0x6001F3D")]
		public abstract void SetLooping(bool bLooping);

		[Token(Token = "0x6001F3E")]
		public abstract bool IsLooping();

		[Token(Token = "0x6001F3F")]
		public abstract bool HasMetaData();

		[Token(Token = "0x6001F40")]
		public abstract bool CanPlay();

		[Token(Token = "0x6001F41")]
		public abstract void Play();

		[Token(Token = "0x6001F42")]
		public abstract void Pause();

		[Token(Token = "0x6001F43")]
		public abstract void Stop();

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x14F56D8", Offset = "0x14F56D8", VA = "0x14F56D8", Slot = "117")]
		public virtual void Rewind()
		{
		}

		[Token(Token = "0x6001F45")]
		public abstract void Seek(float timeMs);

		[Token(Token = "0x6001F46")]
		public abstract void SeekFast(float timeMs);

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x14F56EC", Offset = "0x14F56EC", VA = "0x14F56EC", Slot = "120")]
		public virtual void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x6001F48")]
		public abstract float GetCurrentTimeMs();

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x14F56FC", Offset = "0x14F56FC", VA = "0x14F56FC", Slot = "122")]
		public virtual double GetCurrentDateTimeSecondsSince1970()
		{
			return default(double);
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x14F5704", Offset = "0x14F5704", VA = "0x14F5704", Slot = "123")]
		public virtual TimeRange[] GetSeekableTimeRanges()
		{
			return null;
		}

		[Token(Token = "0x6001F4B")]
		public abstract float GetPlaybackRate();

		[Token(Token = "0x6001F4C")]
		public abstract void SetPlaybackRate(float rate);

		[Token(Token = "0x6001F4D")]
		public abstract float GetDurationMs();

		[Token(Token = "0x6001F4E")]
		public abstract int GetVideoWidth();

		[Token(Token = "0x6001F4F")]
		public abstract int GetVideoHeight();

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x14F570C", Offset = "0x14F570C", VA = "0x14F570C", Slot = "129")]
		public virtual Rect GetCropRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001F51")]
		public abstract float GetVideoDisplayRate();

		[Token(Token = "0x6001F52")]
		public abstract bool HasAudio();

		[Token(Token = "0x6001F53")]
		public abstract bool HasVideo();

		[Token(Token = "0x6001F54")]
		public abstract bool IsSeeking();

		[Token(Token = "0x6001F55")]
		public abstract bool IsPlaying();

		[Token(Token = "0x6001F56")]
		public abstract bool IsPaused();

		[Token(Token = "0x6001F57")]
		public abstract bool IsFinished();

		[Token(Token = "0x6001F58")]
		public abstract bool IsBuffering();

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x14F574C", Offset = "0x14F574C", VA = "0x14F574C", Slot = "138")]
		public virtual bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x14F5754", Offset = "0x14F5754", VA = "0x14F5754", Slot = "139")]
		public virtual void SetPlayWithoutBuffering(bool playWithoutBuffering)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x14F5758", Offset = "0x14F5758", VA = "0x14F5758", Slot = "140")]
		public virtual void SetKeyServerURL(string url)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x14F575C", Offset = "0x14F575C", VA = "0x14F575C", Slot = "141")]
		public virtual void SetKeyServerAuthToken(string token)
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x14F5760", Offset = "0x14F5760", VA = "0x14F5760", Slot = "142")]
		public virtual void SetDecryptionKeyBase64(string key)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x14F5764", Offset = "0x14F5764", VA = "0x14F5764", Slot = "143")]
		public virtual void SetDecryptionKey(byte[] key)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x14F5768", Offset = "0x14F5768", VA = "0x14F5768", Slot = "144")]
		public virtual bool IsExternalPlaybackSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x14F5770", Offset = "0x14F5770", VA = "0x14F5770", Slot = "145")]
		public virtual bool IsExternalPlaybackActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x14F5778", Offset = "0x14F5778", VA = "0x14F5778", Slot = "146")]
		public virtual void SetAllowsExternalPlayback(bool allowsExternalPlayback)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x14F577C", Offset = "0x14F577C", VA = "0x14F577C", Slot = "147")]
		public virtual void SetExternalPlaybackFillMode(ExternalPlaybackFillMode fillMode)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x14F5780", Offset = "0x14F5780", VA = "0x14F5780", Slot = "148")]
		public virtual int GetTextureCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001F64")]
		public abstract Texture GetTexture(int index = 0);

		[Token(Token = "0x6001F65")]
		public abstract int GetTextureFrameCount();

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x14F5788", Offset = "0x14F5788", VA = "0x14F5788", Slot = "151")]
		public virtual bool SupportsTextureFrameCount()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x14F5790", Offset = "0x14F5790", VA = "0x14F5790", Slot = "152")]
		public virtual long GetTextureTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x6001F68")]
		public abstract bool RequiresVerticalFlip();

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x14F5798", Offset = "0x14F5798", VA = "0x14F5798", Slot = "154")]
		public virtual float[] GetTextureTransform()
		{
			return null;
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x14F5818", Offset = "0x14F5818", VA = "0x14F5818", Slot = "155")]
		public virtual Matrix4x4 GetYpCbCrTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001F6B")]
		public abstract void MuteAudio(bool bMuted);

		[Token(Token = "0x6001F6C")]
		public abstract bool IsMuted();

		[Token(Token = "0x6001F6D")]
		public abstract void SetVolume(float volume);

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x14F5880", Offset = "0x14F5880", VA = "0x14F5880", Slot = "159")]
		public virtual void SetBalance(float balance)
		{
		}

		[Token(Token = "0x6001F6F")]
		public abstract float GetVolume();

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x14F5884", Offset = "0x14F5884", VA = "0x14F5884", Slot = "161")]
		public virtual float GetBalance()
		{
			return default(float);
		}

		[Token(Token = "0x6001F71")]
		public abstract int GetAudioTrackCount();

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x14F588C", Offset = "0x14F588C", VA = "0x14F588C", Slot = "163")]
		public virtual string GetAudioTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x6001F73")]
		public abstract int GetCurrentAudioTrack();

		[Token(Token = "0x6001F74")]
		public abstract void SetAudioTrack(int index);

		[Token(Token = "0x6001F75")]
		public abstract string GetCurrentAudioTrackId();

		[Token(Token = "0x6001F76")]
		public abstract int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x14F58B4", Offset = "0x14F58B4", VA = "0x14F58B4", Slot = "168")]
		public virtual int GetNumAudioChannels()
		{
			return default(int);
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x14F58BC", Offset = "0x14F58BC", VA = "0x14F58BC", Slot = "169")]
		public virtual void SetAudioHeadRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x14F58C0", Offset = "0x14F58C0", VA = "0x14F58C0", Slot = "170")]
		public virtual void ResetAudioHeadRotation()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x14F58C4", Offset = "0x14F58C4", VA = "0x14F58C4", Slot = "171")]
		public virtual void SetAudioChannelMode(Audio360ChannelMode channelMode)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x14F58C8", Offset = "0x14F58C8", VA = "0x14F58C8", Slot = "172")]
		public virtual void SetAudioFocusEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x14F58CC", Offset = "0x14F58CC", VA = "0x14F58CC", Slot = "173")]
		public virtual void SetAudioFocusProperties(float offFocusLevel, float widthDegrees)
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x14F58D0", Offset = "0x14F58D0", VA = "0x14F58D0", Slot = "174")]
		public virtual void SetAudioFocusRotation(Quaternion q)
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x14F58D4", Offset = "0x14F58D4", VA = "0x14F58D4", Slot = "175")]
		public virtual void ResetAudioFocus()
		{
		}

		[Token(Token = "0x6001F7F")]
		public abstract int GetVideoTrackCount();

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x14F58D8", Offset = "0x14F58D8", VA = "0x14F58D8", Slot = "177")]
		public virtual string GetVideoTrackId(int index)
		{
			return null;
		}

		[Token(Token = "0x6001F81")]
		public abstract int GetCurrentVideoTrack();

		[Token(Token = "0x6001F82")]
		public abstract void SetVideoTrack(int index);

		[Token(Token = "0x6001F83")]
		public abstract string GetCurrentVideoTrackId();

		[Token(Token = "0x6001F84")]
		public abstract int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x6001F85")]
		public abstract float GetVideoFrameRate();

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x14F5900", Offset = "0x14F5900", VA = "0x14F5900", Slot = "183")]
		public virtual long GetEstimatedTotalBandwidthUsed()
		{
			return default(long);
		}

		[Token(Token = "0x6001F87")]
		public abstract float GetBufferingProgress();

		[Token(Token = "0x6001F88")]
		public abstract void Update();

		[Token(Token = "0x6001F89")]
		public abstract void Render();

		[Token(Token = "0x6001F8A")]
		public abstract void Dispose();

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x14F5908", Offset = "0x14F5908", VA = "0x14F5908", Slot = "49")]
		public ErrorCode GetLastError()
		{
			return default(ErrorCode);
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x14F5910", Offset = "0x14F5910", VA = "0x14F5910", Slot = "188")]
		public virtual long GetLastExtendedErrorCode()
		{
			return default(long);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x14F5918", Offset = "0x14F5918", VA = "0x14F5918", Slot = "87")]
		public string GetPlayerDescription()
		{
			return null;
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x14F5920", Offset = "0x14F5920", VA = "0x14F5920", Slot = "189")]
		public virtual bool PlayerSupportsLinearColorSpace()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x14F5928", Offset = "0x14F5928", VA = "0x14F5928", Slot = "190")]
		public virtual int GetBufferedTimeRangeCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x14F5930", Offset = "0x14F5930", VA = "0x14F5930", Slot = "191")]
		public virtual bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x14F5938", Offset = "0x14F5938", VA = "0x14F5938", Slot = "51")]
		public void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 0)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x14F59C8", Offset = "0x14F59C8", VA = "0x14F59C8", Slot = "192")]
		protected virtual void ApplyTextureProperties(Texture texture)
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x14F5A8C", Offset = "0x14F5A8C", VA = "0x14F5A8C", Slot = "193")]
		public virtual void GrabAudio(float[] buffer, int floatCount, int channelCount)
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x14F5A90", Offset = "0x14F5A90", VA = "0x14F5A90")]
		protected bool IsExpectingNewVideoFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x14F5B14", Offset = "0x14F5B14", VA = "0x14F5B14", Slot = "194")]
		public virtual bool IsPlaybackStalled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x14F5BB4", Offset = "0x14F5BB4", VA = "0x14F5BB4", Slot = "22")]
		public bool IsSeekingStarted()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x14F5BD4", Offset = "0x14F5BD4", VA = "0x14F5BD4", Slot = "23")]
		public void ResetEventState()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x14F5BDC", Offset = "0x14F5BDC", VA = "0x14F5BDC", Slot = "99")]
		public bool LoadSubtitlesSRT(string data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x14F5F84", Offset = "0x14F5F84", VA = "0x14F5F84", Slot = "195")]
		public virtual void UpdateSubtitles()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x14F60CC", Offset = "0x14F60CC", VA = "0x14F60CC", Slot = "196")]
		public virtual int GetSubtitleIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x14F60E4", Offset = "0x14F60E4", VA = "0x14F60E4", Slot = "197")]
		public virtual string GetSubtitleText()
		{
			return null;
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x14F6148", Offset = "0x14F6148", VA = "0x14F6148", Slot = "198")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x14F614C", Offset = "0x14F614C", VA = "0x14F614C")]
		protected BaseMediaPlayer()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class HLSStream : Stream
	{
		[Token(Token = "0x400288B")]
		private const string BANDWIDTH_NAME = "BANDWIDTH=";

		[Token(Token = "0x400288C")]
		private const string RESOLUTION_NAME = "RESOLUTION=";

		[Token(Token = "0x400288D")]
		private const string CHUNK_TAG = "#EXTINF";

		[Token(Token = "0x400288E")]
		private const string STREAM_TAG = "#EXT-X-STREAM-INF";

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Stream> _streams;

		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Chunk> _chunks;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _streamURL;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _width;

		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _height;

		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bandwidth;

		[Token(Token = "0x170001F2")]
		public override int Width
		{
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x1508A5C", Offset = "0x1508A5C", VA = "0x1508A5C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F3")]
		public override int Height
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x1508A64", Offset = "0x1508A64", VA = "0x1508A64", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F4")]
		public override int Bandwidth
		{
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x1508A6C", Offset = "0x1508A6C", VA = "0x1508A6C", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F5")]
		public override string URL
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x1508A74", Offset = "0x1508A74", VA = "0x1508A74", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1508A7C", Offset = "0x1508A7C", VA = "0x1508A7C", Slot = "8")]
		public override List<Chunk> GetAllChunks()
		{
			return null;
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1508B7C", Offset = "0x1508B7C", VA = "0x1508B7C", Slot = "9")]
		public override List<Chunk> GetChunks()
		{
			return null;
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1508B84", Offset = "0x1508B84", VA = "0x1508B84", Slot = "10")]
		public override List<Stream> GetAllStreams()
		{
			return null;
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x1508C84", Offset = "0x1508C84", VA = "0x1508C84", Slot = "11")]
		public override List<Stream> GetStreams()
		{
			return null;
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x1508C8C", Offset = "0x1508C8C", VA = "0x1508C8C")]
		private bool ExtractStreamInfo(string line, ref int width, ref int height, ref int bandwidth)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x1508E94", Offset = "0x1508E94", VA = "0x1508E94")]
		private static bool IsChunk(string line)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x1508EF0", Offset = "0x1508EF0", VA = "0x1508EF0")]
		private void ParseFile(string[] text, string path)
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x150934C", Offset = "0x150934C", VA = "0x150934C")]
		public HLSStream(string filename, int width = 0, int height = 0, int bandwidth = 0)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x1509794", Offset = "0x1509794", VA = "0x1509794")]
		private bool MyRemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20004E0")]
	public class MediaPlayerEvent : UnityEvent<MediaPlayer, MediaPlayerEvent.EventType, ErrorCode>
	{
		[Token(Token = "0x200081D")]
		public enum EventType
		{
			[Token(Token = "0x4003185")]
			MetaDataReady,
			[Token(Token = "0x4003186")]
			ReadyToPlay,
			[Token(Token = "0x4003187")]
			Started,
			[Token(Token = "0x4003188")]
			FirstFrameReady,
			[Token(Token = "0x4003189")]
			FinishedPlaying,
			[Token(Token = "0x400318A")]
			Closing,
			[Token(Token = "0x400318B")]
			Error,
			[Token(Token = "0x400318C")]
			SubtitleChange,
			[Token(Token = "0x400318D")]
			Stalled,
			[Token(Token = "0x400318E")]
			Unstalled,
			[Token(Token = "0x400318F")]
			ResolutionChanged,
			[Token(Token = "0x4003190")]
			StartedSeeking,
			[Token(Token = "0x4003191")]
			FinishedSeeking,
			[Token(Token = "0x4003192")]
			StartedBuffering,
			[Token(Token = "0x4003193")]
			FinishedBuffering,
			[Token(Token = "0x4003194")]
			PropertiesChanged,
			[Token(Token = "0x4003195")]
			PlaylistItemChanged,
			[Token(Token = "0x4003196")]
			PlaylistFinished
		}

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UnityAction<MediaPlayer, EventType, ErrorCode>> _listeners;

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xF06428", Offset = "0xF06428", VA = "0xF06428")]
		public bool HasListeners()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xF0649C", Offset = "0xF0649C", VA = "0xF0649C")]
		public new void AddListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xF0654C", Offset = "0xF0654C", VA = "0xF0654C")]
		public new void RemoveListener(UnityAction<MediaPlayer, EventType, ErrorCode> call)
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xF065FC", Offset = "0xF065FC", VA = "0xF065FC")]
		public new void RemoveAllListeners()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xF06660", Offset = "0xF06660", VA = "0xF06660")]
		public MediaPlayerEvent()
		{
		}
	}
	[Token(Token = "0x20004E1")]
	public interface IMediaPlayer
	{
		[Token(Token = "0x6001FB0")]
		void OnEnable();

		[Token(Token = "0x6001FB1")]
		void Update();

		[Token(Token = "0x6001FB2")]
		void Render();
	}
	[Token(Token = "0x20004E2")]
	public interface IMediaSubtitles
	{
		[Token(Token = "0x6001FB3")]
		bool LoadSubtitlesSRT(string data);

		[Token(Token = "0x6001FB4")]
		int GetSubtitleIndex();

		[Token(Token = "0x6001FB5")]
		string GetSubtitleText();
	}
	[Token(Token = "0x20004E3")]
	public interface IMediaControl
	{
		[Token(Token = "0x6001FB6")]
		bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0);

		[Token(Token = "0x6001FB7")]
		bool OpenVideoFromBuffer(byte[] buffer);

		[Token(Token = "0x6001FB8")]
		bool StartOpenVideoFromBuffer(ulong length);

		[Token(Token = "0x6001FB9")]
		bool AddChunkToVideoBuffer(byte[] chunk, ulong offset, ulong length);

		[Token(Token = "0x6001FBA")]
		bool EndOpenVideoFromBuffer();

		[Token(Token = "0x6001FBB")]
		void CloseVideo();

		[Token(Token = "0x6001FBC")]
		void SetLooping(bool bLooping);

		[Token(Token = "0x6001FBD")]
		bool IsLooping();

		[Token(Token = "0x6001FBE")]
		bool HasMetaData();

		[Token(Token = "0x6001FBF")]
		bool CanPlay();

		[Token(Token = "0x6001FC0")]
		bool IsPlaying();

		[Token(Token = "0x6001FC1")]
		bool IsSeeking();

		[Token(Token = "0x6001FC2")]
		bool IsPaused();

		[Token(Token = "0x6001FC3")]
		bool IsFinished();

		[Token(Token = "0x6001FC4")]
		bool IsBuffering();

		[Token(Token = "0x6001FC5")]
		bool IsSeekingStarted();

		[Token(Token = "0x6001FC6")]
		void ResetEventState();

		[Token(Token = "0x6001FC7")]
		void Play();

		[Token(Token = "0x6001FC8")]
		void Pause();

		[Token(Token = "0x6001FC9")]
		void Stop();

		[Token(Token = "0x6001FCA")]
		void Rewind();

		[Token(Token = "0x6001FCB")]
		void Seek(float timeMs);

		[Token(Token = "0x6001FCC")]
		void SeekFast(float timeMs);

		[Token(Token = "0x6001FCD")]
		void SeekWithTolerance(float timeMs, float beforeMs, float afterMs);

		[Token(Token = "0x6001FCE")]
		float GetCurrentTimeMs();

		[Token(Token = "0x6001FCF")]
		double GetCurrentDateTimeSecondsSince1970();

		[Token(Token = "0x6001FD0")]
		TimeRange[] GetSeekableTimeRanges();

		[Token(Token = "0x6001FD1")]
		float GetPlaybackRate();

		[Token(Token = "0x6001FD2")]
		void SetPlaybackRate(float rate);

		[Token(Token = "0x6001FD3")]
		void MuteAudio(bool bMute);

		[Token(Token = "0x6001FD4")]
		bool IsMuted();

		[Token(Token = "0x6001FD5")]
		void SetVolume(float volume);

		[Token(Token = "0x6001FD6")]
		void SetBalance(float balance);

		[Token(Token = "0x6001FD7")]
		float GetVolume();

		[Token(Token = "0x6001FD8")]
		float GetBalance();

		[Token(Token = "0x6001FD9")]
		int GetCurrentAudioTrack();

		[Token(Token = "0x6001FDA")]
		void SetAudioTrack(int index);

		[Token(Token = "0x6001FDB")]
		int GetCurrentVideoTrack();

		[Token(Token = "0x6001FDC")]
		void SetVideoTrack(int index);

		[Token(Token = "0x6001FDD")]
		float GetBufferingProgress();

		[Token(Token = "0x6001FDE")]
		int GetBufferedTimeRangeCount();

		[Token(Token = "0x6001FDF")]
		bool GetBufferedTimeRange(int index, ref float startTimeMs, ref float endTimeMs);

		[Token(Token = "0x6001FE0")]
		ErrorCode GetLastError();

		[Token(Token = "0x6001FE1")]
		long GetLastExtendedErrorCode();

		[Token(Token = "0x6001FE2")]
		void SetTextureProperties(FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, int anisoLevel = 1);

		[Token(Token = "0x6001FE3")]
		void GrabAudio(float[] buffer, int floatCount, int channelCount);

		[Token(Token = "0x6001FE4")]
		int GetNumAudioChannels();

		[Token(Token = "0x6001FE5")]
		void SetAudioHeadRotation(Quaternion q);

		[Token(Token = "0x6001FE6")]
		void ResetAudioHeadRotation();

		[Token(Token = "0x6001FE7")]
		void SetAudioChannelMode(Audio360ChannelMode channelMode);

		[Token(Token = "0x6001FE8")]
		void SetAudioFocusEnabled(bool enabled);

		[Token(Token = "0x6001FE9")]
		void SetAudioFocusProperties(float offFocusLevel, float widthDegrees);

		[Token(Token = "0x6001FEA")]
		void SetAudioFocusRotation(Quaternion q);

		[Token(Token = "0x6001FEB")]
		void ResetAudioFocus();

		[Token(Token = "0x6001FEC")]
		bool WaitForNextFrame(Camera dummyCamera, int previousFrameCount);

		[Token(Token = "0x6001FED")]
		void SetPlayWithoutBuffering(bool playWithoutBuffering);

		[Token(Token = "0x6001FEE")]
		void SetKeyServerURL(string url);

		[Token(Token = "0x6001FEF")]
		void SetKeyServerAuthToken(string token);

		[Token(Token = "0x6001FF0")]
		void SetDecryptionKeyBase64(string key);

		[Token(Token = "0x6001FF1")]
		void SetDecryptionKey(byte[] key);

		[Token(Token = "0x6001FF2")]
		bool IsExternalPlaybackSupported();

		[Token(Token = "0x6001FF3")]
		bool IsExternalPlaybackActive();

		[Token(Token = "0x6001FF4")]
		void SetAllowsExternalPlayback(bool allowsExternalPlayback);

		[Token(Token = "0x6001FF5")]
		void SetExternalPlaybackFillMode(ExternalPlaybackFillMode fillMode);
	}
	[Token(Token = "0x20004E4")]
	public interface IMediaInfo
	{
		[Token(Token = "0x6001FF6")]
		float GetDurationMs();

		[Token(Token = "0x6001FF7")]
		int GetVideoWidth();

		[Token(Token = "0x6001FF8")]
		int GetVideoHeight();

		[Token(Token = "0x6001FF9")]
		Rect GetCropRect();

		[Token(Token = "0x6001FFA")]
		float GetVideoFrameRate();

		[Token(Token = "0x6001FFB")]
		float GetVideoDisplayRate();

		[Token(Token = "0x6001FFC")]
		bool HasVideo();

		[Token(Token = "0x6001FFD")]
		bool HasAudio();

		[Token(Token = "0x6001FFE")]
		int GetAudioTrackCount();

		[Token(Token = "0x6001FFF")]
		string GetAudioTrackId(int index);

		[Token(Token = "0x6002000")]
		string GetCurrentAudioTrackId();

		[Token(Token = "0x6002001")]
		int GetCurrentAudioTrackBitrate();

		[Token(Token = "0x6002002")]
		int GetVideoTrackCount();

		[Token(Token = "0x6002003")]
		string GetVideoTrackId(int index);

		[Token(Token = "0x6002004")]
		string GetCurrentVideoTrackId();

		[Token(Token = "0x6002005")]
		int GetCurrentVideoTrackBitrate();

		[Token(Token = "0x6002006")]
		string GetPlayerDescription();

		[Token(Token = "0x6002007")]
		bool PlayerSupportsLinearColorSpace();

		[Token(Token = "0x6002008")]
		bool IsPlaybackStalled();

		[Token(Token = "0x6002009")]
		float[] GetTextureTransform();

		[Token(Token = "0x600200A")]
		long GetEstimatedTotalBandwidthUsed();
	}
	[Token(Token = "0x20004E5")]
	public interface IMediaProducer
	{
		[Token(Token = "0x600200B")]
		int GetTextureCount();

		[Token(Token = "0x600200C")]
		Texture GetTexture(int index = 0);

		[Token(Token = "0x600200D")]
		int GetTextureFrameCount();

		[Token(Token = "0x600200E")]
		bool SupportsTextureFrameCount();

		[Token(Token = "0x600200F")]
		long GetTextureTimeStamp();

		[Token(Token = "0x6002010")]
		bool RequiresVerticalFlip();

		[Token(Token = "0x6002011")]
		Matrix4x4 GetYpCbCrTransform();
	}
	[Token(Token = "0x20004E6")]
	public enum Platform
	{
		[Token(Token = "0x4002897")]
		Windows = 0,
		[Token(Token = "0x4002898")]
		MacOSX = 1,
		[Token(Token = "0x4002899")]
		iOS = 2,
		[Token(Token = "0x400289A")]
		tvOS = 3,
		[Token(Token = "0x400289B")]
		Android = 4,
		[Token(Token = "0x400289C")]
		WindowsPhone = 5,
		[Token(Token = "0x400289D")]
		WindowsUWP = 6,
		[Token(Token = "0x400289E")]
		WebGL = 7,
		[Token(Token = "0x400289F")]
		PS4 = 8,
		[Token(Token = "0x40028A0")]
		Count = 9,
		[Token(Token = "0x40028A1")]
		Unknown = 100
	}
	[Token(Token = "0x20004E7")]
	public enum StereoPacking
	{
		[Token(Token = "0x40028A3")]
		None,
		[Token(Token = "0x40028A4")]
		TopBottom,
		[Token(Token = "0x40028A5")]
		LeftRight,
		[Token(Token = "0x40028A6")]
		CustomUV
	}
	[Token(Token = "0x20004E8")]
	public enum StereoEye
	{
		[Token(Token = "0x40028A8")]
		Both,
		[Token(Token = "0x40028A9")]
		Left,
		[Token(Token = "0x40028AA")]
		Right
	}
	[Token(Token = "0x20004E9")]
	public enum AlphaPacking
	{
		[Token(Token = "0x40028AC")]
		None,
		[Token(Token = "0x40028AD")]
		TopBottom,
		[Token(Token = "0x40028AE")]
		LeftRight
	}
	[Token(Token = "0x20004EA")]
	public enum ErrorCode
	{
		[Token(Token = "0x40028B0")]
		None = 0,
		[Token(Token = "0x40028B1")]
		LoadFailed = 100,
		[Token(Token = "0x40028B2")]
		DecodeFailed = 200
	}
	[Token(Token = "0x20004EB")]
	public enum Orientation
	{
		[Token(Token = "0x40028B4")]
		Landscape,
		[Token(Token = "0x40028B5")]
		LandscapeFlipped,
		[Token(Token = "0x40028B6")]
		Portrait,
		[Token(Token = "0x40028B7")]
		PortraitFlipped
	}
	[Token(Token = "0x20004EC")]
	public enum VideoMapping
	{
		[Token(Token = "0x40028B9")]
		Unknown,
		[Token(Token = "0x40028BA")]
		Normal,
		[Token(Token = "0x40028BB")]
		EquiRectangular360,
		[Token(Token = "0x40028BC")]
		EquiRectangular180,
		[Token(Token = "0x40028BD")]
		CubeMap3x2
	}
	[Token(Token = "0x20004ED")]
	public enum ExternalPlaybackFillMode
	{
		[Token(Token = "0x40028BF")]
		Resize,
		[Token(Token = "0x40028C0")]
		ResizeAspect,
		[Token(Token = "0x40028C1")]
		ResizeAspectFill
	}
	[Token(Token = "0x20004EE")]
	public enum FileFormat
	{
		[Token(Token = "0x40028C3")]
		Unknown,
		[Token(Token = "0x40028C4")]
		HLS,
		[Token(Token = "0x40028C5")]
		DASH,
		[Token(Token = "0x40028C6")]
		SmoothStreaming
	}
	[Token(Token = "0x20004EF")]
	public static class Windows
	{
		[Token(Token = "0x200081E")]
		public enum VideoApi
		{
			[Token(Token = "0x4003198")]
			MediaFoundation,
			[Token(Token = "0x4003199")]
			DirectShow
		}

		[Token(Token = "0x40028C7")]
		public const string AudioDeviceOutputName_Vive = "HTC VIVE USB Audio";

		[Token(Token = "0x40028C8")]
		public const string AudioDeviceOutputName_Rift = "Headphones (Rift Audio)";
	}
	[Token(Token = "0x20004F0")]
	public static class Android
	{
		[Token(Token = "0x200081F")]
		public enum VideoApi
		{
			[Token(Token = "0x400319B")]
			MediaPlayer = 1,
			[Token(Token = "0x400319C")]
			ExoPlayer
		}
	}
	[Token(Token = "0x20004F1")]
	public static class WebGL
	{
		[Token(Token = "0x2000820")]
		public enum ExternalLibrary
		{
			[Token(Token = "0x400319E")]
			None,
			[Token(Token = "0x400319F")]
			DashJs,
			[Token(Token = "0x40031A0")]
			HlsJs,
			[Token(Token = "0x40031A1")]
			Custom
		}
	}
	[Token(Token = "0x20004F2")]
	public enum Audio360ChannelMode
	{
		[Token(Token = "0x40028CA")]
		TBE_8_2,
		[Token(Token = "0x40028CB")]
		TBE_8,
		[Token(Token = "0x40028CC")]
		TBE_6_2,
		[Token(Token = "0x40028CD")]
		TBE_6,
		[Token(Token = "0x40028CE")]
		TBE_4_2,
		[Token(Token = "0x40028CF")]
		TBE_4,
		[Token(Token = "0x40028D0")]
		TBE_8_PAIR0,
		[Token(Token = "0x40028D1")]
		TBE_8_PAIR1,
		[Token(Token = "0x40028D2")]
		TBE_8_PAIR2,
		[Token(Token = "0x40028D3")]
		TBE_8_PAIR3,
		[Token(Token = "0x40028D4")]
		TBE_CHANNEL0,
		[Token(Token = "0x40028D5")]
		TBE_CHANNEL1,
		[Token(Token = "0x40028D6")]
		TBE_CHANNEL2,
		[Token(Token = "0x40028D7")]
		TBE_CHANNEL3,
		[Token(Token = "0x40028D8")]
		TBE_CHANNEL4,
		[Token(Token = "0x40028D9")]
		TBE_CHANNEL5,
		[Token(Token = "0x40028DA")]
		TBE_CHANNEL6,
		[Token(Token = "0x40028DB")]
		TBE_CHANNEL7,
		[Token(Token = "0x40028DC")]
		HEADLOCKED_STEREO,
		[Token(Token = "0x40028DD")]
		HEADLOCKED_CHANNEL0,
		[Token(Token = "0x40028DE")]
		HEADLOCKED_CHANNEL1,
		[Token(Token = "0x40028DF")]
		AMBIX_4,
		[Token(Token = "0x40028E0")]
		AMBIX_9,
		[Token(Token = "0x40028E1")]
		AMBIX_9_2,
		[Token(Token = "0x40028E2")]
		AMBIX_16,
		[Token(Token = "0x40028E3")]
		AMBIX_16_2,
		[Token(Token = "0x40028E4")]
		STEREO,
		[Token(Token = "0x40028E5")]
		INVALID
	}
	[Token(Token = "0x20004F3")]
	public struct TimeRange
	{
		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float startTime;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float duration;
	}
	[Token(Token = "0x20004F4")]
	public class Subtitle
	{
		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int timeStartMs;

		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int timeEndMs;

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xF0C510", Offset = "0xF0C510", VA = "0xF0C510")]
		public bool IsBefore(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xF0C53C", Offset = "0xF0C53C", VA = "0xF0C53C")]
		public bool IsTime(float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xF0C568", Offset = "0xF0C568", VA = "0xF0C568")]
		public Subtitle()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public static class Helper
	{
		[Token(Token = "0x40028EC")]
		public const string ScriptVersion = "1.11.7";

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x1509960", Offset = "0x1509960", VA = "0x1509960")]
		public static string GetName(Platform platform)
		{
			return null;
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x1509A30", Offset = "0x1509A30", VA = "0x1509A30")]
		public static string GetErrorMessage(ErrorCode code)
		{
			return null;
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x1509AD8", Offset = "0x1509AD8", VA = "0x1509AD8")]
		public static string[] GetPlatformNames()
		{
			return null;
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1509D8C", Offset = "0x1509D8C", VA = "0x1509D8C")]
		public static void LogInfo(string message, [Optional] UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1509E8C", Offset = "0x1509E8C", VA = "0x1509E8C")]
		public static string GetTimeString(float totalSeconds, bool showMilliseconds = false)
		{
			return null;
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x1508454", Offset = "0x1508454", VA = "0x1508454")]
		public static Orientation GetOrientation(float[] t)
		{
			return default(Orientation);
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x15085A0", Offset = "0x15085A0", VA = "0x15085A0")]
		public static Matrix4x4 GetMatrixForOrientation(Orientation ori)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x150A264", Offset = "0x150A264", VA = "0x150A264")]
		public static void SetupStereoEyeModeMaterial(Material material, StereoEye mode)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x14F403C", Offset = "0x14F403C", VA = "0x14F403C")]
		public static void SetupLayoutMaterial(Material material, VideoMapping mapping)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x14F40E4", Offset = "0x14F40E4", VA = "0x14F40E4")]
		public static void SetupStereoMaterial(Material material, StereoPacking packing, bool displayDebugTinting)
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x14F4208", Offset = "0x14F4208", VA = "0x14F4208")]
		public static void SetupAlphaPackedMaterial(Material material, AlphaPacking packing)
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x14F42D8", Offset = "0x14F42D8", VA = "0x14F42D8")]
		public static void SetupGammaMaterial(Material material, bool playerSupportsLinear)
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x150A3A0", Offset = "0x150A3A0", VA = "0x150A3A0")]
		public static int ConvertTimeSecondsToFrame(float seconds, float frameRate)
		{
			return default(int);
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x150A438", Offset = "0x150A438", VA = "0x150A438")]
		public static float ConvertFrameToTimeSeconds(int frame, float frameRate)
		{
			return default(float);
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x150A4E4", Offset = "0x150A4E4", VA = "0x150A4E4")]
		public static float FindNextKeyFrameTimeSeconds(float seconds, float frameRate, int keyFrameInterval)
		{
			return default(float);
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x150A5BC", Offset = "0x150A5BC", VA = "0x150A5BC")]
		public static DateTime ConvertSecondsSince1970ToDateTime(double secondsSince1970)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x1505524", Offset = "0x1505524", VA = "0x1505524")]
		public static void DrawTexture(Rect screenRect, Texture texture, ScaleMode scaleMode, AlphaPacking alphaPacking, Material material)
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x150A674", Offset = "0x150A674", VA = "0x150A674")]
		public static Texture2D GetReadableTexture(Texture inputTexture, bool requiresVerticalFlip, Orientation ori, Texture2D targetTexture)
		{
			return null;
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x150A988", Offset = "0x150A988", VA = "0x150A988")]
		private static int ParseTimeToMs(string text)
		{
			return default(int);
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x14F5C2C", Offset = "0x14F5C2C", VA = "0x14F5C2C")]
		public static List<Subtitle> LoadSubtitlesSRT(string data)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F6")]
	public sealed class NullMediaPlayer : BaseMediaPlayer
	{
		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isPlaying;

		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isPaused;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentTime;

		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _volume;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _playbackRate;

		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _bLoop;

		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _Width;

		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _height;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Texture2D _texture;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D _texture_AVPro;

		[Token(Token = "0x40028F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D _texture_AVPro1;

		[Token(Token = "0x40028F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _fakeFlipTime;

		[Token(Token = "0x40028F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _frameCount;

		[Token(Token = "0x40028FA")]
		private const float FrameRate = 10f;

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xF067F0", Offset = "0xF067F0", VA = "0xF067F0", Slot = "103")]
		public override string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xF06838", Offset = "0xF06838", VA = "0xF06838", Slot = "104")]
		public override bool OpenVideoFromFile(string path, long offset, string httpHeaderJson, uint sourceSamplerate = 0u, uint sourceChannels = 0u, int forceFileFormat = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xF06958", Offset = "0xF06958", VA = "0xF06958", Slot = "109")]
		public override void CloseVideo()
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xF06998", Offset = "0xF06998", VA = "0xF06998", Slot = "110")]
		public override void SetLooping(bool bLooping)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0xF069A4", Offset = "0xF069A4", VA = "0xF069A4", Slot = "111")]
		public override bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0xF069AC", Offset = "0xF069AC", VA = "0xF069AC", Slot = "112")]
		public override bool HasMetaData()
		{
			return default(bool);
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0xF069B4", Offset = "0xF069B4", VA = "0xF069B4", Slot = "113")]
		public override bool CanPlay()
		{
			return default(bool);
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xF069BC", Offset = "0xF069BC", VA = "0xF069BC", Slot = "131")]
		public override bool HasAudio()
		{
			return default(bool);
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xF069C4", Offset = "0xF069C4", VA = "0xF069C4", Slot = "132")]
		public override bool HasVideo()
		{
			return default(bool);
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xF069CC", Offset = "0xF069CC", VA = "0xF069CC", Slot = "114")]
		public override void Play()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xF069DC", Offset = "0xF069DC", VA = "0xF069DC", Slot = "115")]
		public override void Pause()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0xF069E8", Offset = "0xF069E8", VA = "0xF069E8", Slot = "116")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xF069F0", Offset = "0xF069F0", VA = "0xF069F0", Slot = "133")]
		public override bool IsSeeking()
		{
			return default(bool);
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xF069F8", Offset = "0xF069F8", VA = "0xF069F8", Slot = "134")]
		public override bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xF06A00", Offset = "0xF06A00", VA = "0xF06A00", Slot = "135")]
		public override bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xF06A08", Offset = "0xF06A08", VA = "0xF06A08", Slot = "136")]
		public override bool IsFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xF06A4C", Offset = "0xF06A4C", VA = "0xF06A4C", Slot = "137")]
		public override bool IsBuffering()
		{
			return default(bool);
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xF06A54", Offset = "0xF06A54", VA = "0xF06A54", Slot = "126")]
		public override float GetDurationMs()
		{
			return default(float);
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xF06A60", Offset = "0xF06A60", VA = "0xF06A60", Slot = "127")]
		public override int GetVideoWidth()
		{
			return default(int);
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xF06A68", Offset = "0xF06A68", VA = "0xF06A68", Slot = "128")]
		public override int GetVideoHeight()
		{
			return default(int);
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xF06A70", Offset = "0xF06A70", VA = "0xF06A70", Slot = "130")]
		public override float GetVideoDisplayRate()
		{
			return default(float);
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xF06A78", Offset = "0xF06A78", VA = "0xF06A78", Slot = "149")]
		public override Texture GetTexture(int index)
		{
			return null;
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xF06A80", Offset = "0xF06A80", VA = "0xF06A80", Slot = "150")]
		public override int GetTextureFrameCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xF06A88", Offset = "0xF06A88", VA = "0xF06A88", Slot = "153")]
		public override bool RequiresVerticalFlip()
		{
			return default(bool);
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xF06A90", Offset = "0xF06A90", VA = "0xF06A90", Slot = "118")]
		public override void Seek(float timeMs)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xF06AA0", Offset = "0xF06AA0", VA = "0xF06AA0", Slot = "119")]
		public override void SeekFast(float timeMs)
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xF06AB0", Offset = "0xF06AB0", VA = "0xF06AB0", Slot = "120")]
		public override void SeekWithTolerance(float timeMs, float beforeMs, float afterMs)
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xF06AC0", Offset = "0xF06AC0", VA = "0xF06AC0", Slot = "121")]
		public override float GetCurrentTimeMs()
		{
			return default(float);
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xF06AC8", Offset = "0xF06AC8", VA = "0xF06AC8", Slot = "125")]
		public override void SetPlaybackRate(float rate)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xF06AD0", Offset = "0xF06AD0", VA = "0xF06AD0", Slot = "124")]
		public override float GetPlaybackRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xF06AD8", Offset = "0xF06AD8", VA = "0xF06AD8", Slot = "184")]
		public override float GetBufferingProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xF06AE0", Offset = "0xF06AE0", VA = "0xF06AE0", Slot = "156")]
		public override void MuteAudio(bool bMuted)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xF06AE4", Offset = "0xF06AE4", VA = "0xF06AE4", Slot = "157")]
		public override bool IsMuted()
		{
			return default(bool);
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xF06AEC", Offset = "0xF06AEC", VA = "0xF06AEC", Slot = "158")]
		public override void SetVolume(float volume)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xF06AF4", Offset = "0xF06AF4", VA = "0xF06AF4", Slot = "160")]
		public override float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xF06AFC", Offset = "0xF06AFC", VA = "0xF06AFC", Slot = "162")]
		public override int GetAudioTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xF06B04", Offset = "0xF06B04", VA = "0xF06B04", Slot = "164")]
		public override int GetCurrentAudioTrack()
		{
			return default(int);
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xF06B0C", Offset = "0xF06B0C", VA = "0xF06B0C", Slot = "165")]
		public override void SetAudioTrack(int index)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xF06B10", Offset = "0xF06B10", VA = "0xF06B10", Slot = "176")]
		public override int GetVideoTrackCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xF06B18", Offset = "0xF06B18", VA = "0xF06B18", Slot = "178")]
		public override int GetCurrentVideoTrack()
		{
			return default(int);
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xF06B20", Offset = "0xF06B20", VA = "0xF06B20", Slot = "166")]
		public override string GetCurrentAudioTrackId()
		{
			return null;
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xF06B68", Offset = "0xF06B68", VA = "0xF06B68", Slot = "167")]
		public override int GetCurrentAudioTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xF06B70", Offset = "0xF06B70", VA = "0xF06B70", Slot = "179")]
		public override void SetVideoTrack(int index)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xF06B74", Offset = "0xF06B74", VA = "0xF06B74", Slot = "180")]
		public override string GetCurrentVideoTrackId()
		{
			return null;
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xF06BBC", Offset = "0xF06BBC", VA = "0xF06BBC", Slot = "181")]
		public override int GetCurrentVideoTrackBitrate()
		{
			return default(int);
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xF06BC4", Offset = "0xF06BC4", VA = "0xF06BC4", Slot = "182")]
		public override float GetVideoFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xF06BCC", Offset = "0xF06BCC", VA = "0xF06BCC", Slot = "185")]
		public override void Update()
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xF06D30", Offset = "0xF06D30", VA = "0xF06D30", Slot = "186")]
		public override void Render()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xF06D34", Offset = "0xF06D34", VA = "0xF06D34", Slot = "187")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xF06D38", Offset = "0xF06D38", VA = "0xF06D38")]
		public NullMediaPlayer()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class Resampler
	{
		[Token(Token = "0x2000821")]
		private class TimestampedRenderTexture
		{
			[Token(Token = "0x40031A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderTexture texture;

			[Token(Token = "0x40031A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long timestamp;

			[Token(Token = "0x40031A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool used;

			[Token(Token = "0x6002C81")]
			[Address(RVA = "0xF0A094", Offset = "0xF0A094", VA = "0xF0A094")]
			public TimestampedRenderTexture()
			{
			}
		}

		[Token(Token = "0x2000822")]
		public enum ResampleMode
		{
			[Token(Token = "0x40031A6")]
			POINT,
			[Token(Token = "0x40031A7")]
			LINEAR
		}

		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TimestampedRenderTexture[]> _buffer;

		[Token(Token = "0x40028FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x40028FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture[] _outputTexture;

		[Token(Token = "0x40028FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _start;

		[Token(Token = "0x40028FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _end;

		[Token(Token = "0x4002900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _bufferSize;

		[Token(Token = "0x4002901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long _baseTimestamp;

		[Token(Token = "0x4002902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _elapsedTimeSinceBase;

		[Token(Token = "0x4002903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blendMat;

		[Token(Token = "0x4002904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResampleMode _resampleMode;

		[Token(Token = "0x4002905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string _name;

		[Token(Token = "0x4002906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private long _lastTimeStamp;

		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _droppedFrames;

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long _lastDisplayedTimestamp;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _frameDisplayedTimer;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private long _currentDisplayedTimestamp;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EC84", Offset = "0xD1EC84")]
		private float <LastT>k__BackingField;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD1EC94", Offset = "0xD1EC94")]
		private long <TextureTimeStamp>k__BackingField;

		[Token(Token = "0x400290D")]
		private const string ShaderPropT = "_t";

		[Token(Token = "0x400290E")]
		private const string ShaderPropAftertex = "_AfterTex";

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _propAfterTex;

		[Token(Token = "0x4002910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _propT;

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _videoFrameRate;

		[Token(Token = "0x170001F6")]
		public int DroppedFrames
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0xF0928C", Offset = "0xF0928C", VA = "0xF0928C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F7")]
		public int FrameDisplayedTimer
		{
			[Token(Token = "0x600205C")]
			[Address(RVA = "0xF09294", Offset = "0xF09294", VA = "0xF09294")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F8")]
		public long BaseTimestamp
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0xF0929C", Offset = "0xF0929C", VA = "0xF0929C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600205E")]
			[Address(RVA = "0xF092A4", Offset = "0xF092A4", VA = "0xF092A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public float ElapsedTimeSinceBase
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0xF092AC", Offset = "0xF092AC", VA = "0xF092AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002060")]
			[Address(RVA = "0xF092B4", Offset = "0xF092B4", VA = "0xF092B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public float LastT
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0xF092BC", Offset = "0xF092BC", VA = "0xF092BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26EF8", Offset = "0xD26EF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002062")]
			[Address(RVA = "0xF092C4", Offset = "0xF092C4", VA = "0xF092C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26F08", Offset = "0xD26F08")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public long TextureTimeStamp
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0xF092CC", Offset = "0xF092CC", VA = "0xF092CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26F18", Offset = "0xD26F18")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6002064")]
			[Address(RVA = "0xF092D4", Offset = "0xF092D4", VA = "0xF092D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD26F28", Offset = "0xD26F28")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public Texture[] OutputTexture
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0xF0968C", Offset = "0xF0968C", VA = "0xF0968C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xF092DC", Offset = "0xF092DC", VA = "0xF092DC")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xF09414", Offset = "0xF09414", VA = "0xF09414")]
		public Resampler(MediaPlayer player, string name, int bufferSize = 2, ResampleMode resampleMode = ResampleMode.LINEAR)
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xF09404", Offset = "0xF09404", VA = "0xF09404")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xF097CC", Offset = "0xF097CC", VA = "0xF097CC")]
		public void Release()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xF09888", Offset = "0xF09888", VA = "0xF09888")]
		private void ReleaseRenderTextures()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xF09AD8", Offset = "0xF09AD8", VA = "0xF09AD8")]
		private void ConstructRenderTextures()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xF0A09C", Offset = "0xF0A09C", VA = "0xF0A09C")]
		private bool CheckRenderTexturesValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xF0A498", Offset = "0xF0A498", VA = "0xF0A498")]
		private int FindBeforeFrameIndex(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xF0A67C", Offset = "0xF0A67C", VA = "0xF0A67C")]
		private int FindClosestFrame(int frameIdx)
		{
			return default(int);
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xF0A84C", Offset = "0xF0A84C", VA = "0xF0A84C")]
		private void PointUpdate()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xF0A9F0", Offset = "0xF0A9F0", VA = "0xF0A9F0")]
		private void SampleFrame(int frameIdx, int bufferIdx)
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xF0AB74", Offset = "0xF0AB74", VA = "0xF0AB74")]
		private void SampleFrames(int bufferIdx, int frameIdx1, int frameIdx2, float t)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xF0AE78", Offset = "0xF0AE78", VA = "0xF0AE78")]
		private void LinearUpdate()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xF09694", Offset = "0xF09694", VA = "0xF09694")]
		private void InvalidateBuffer()
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0xF0B080", Offset = "0xF0B080", VA = "0xF0B080")]
		private float GuessFrameRate()
		{
			return default(float);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0xF0B320", Offset = "0xF0B320", VA = "0xF0B320")]
		public void Update()
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xF0C0A0", Offset = "0xF0C0A0", VA = "0xF0C0A0")]
		public void UpdateTimestamp()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public abstract class Stream
	{
		[Token(Token = "0x2000823")]
		public struct Chunk
		{
			[Token(Token = "0x40031A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;
		}

		[Token(Token = "0x170001FD")]
		public abstract int Width
		{
			[Token(Token = "0x6002077")]
			get;
		}

		[Token(Token = "0x170001FE")]
		public abstract int Height
		{
			[Token(Token = "0x6002078")]
			get;
		}

		[Token(Token = "0x170001FF")]
		public abstract int Bandwidth
		{
			[Token(Token = "0x6002079")]
			get;
		}

		[Token(Token = "0x17000200")]
		public abstract string URL
		{
			[Token(Token = "0x600207A")]
			get;
		}

		[Token(Token = "0x600207B")]
		public abstract List<Chunk> GetAllChunks();

		[Token(Token = "0x600207C")]
		public abstract List<Chunk> GetChunks();

		[Token(Token = "0x600207D")]
		public abstract List<Stream> GetAllStreams();

		[Token(Token = "0x600207E")]
		public abstract List<Stream> GetStreams();

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xF0C0D0", Offset = "0xF0C0D0", VA = "0xF0C0D0")]
		protected Stream()
		{
		}
	}
}
namespace RenderHeads.Media.AVProVideo.Demos
{
	[Token(Token = "0x20004F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xD0C32C", Offset = "0xD0C32C")]
	public class AutoRotate : MonoBehaviour
	{
		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float x;

		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float y;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float z;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _timer;

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x14FA0F8", Offset = "0x14FA0F8", VA = "0x14FA0F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x14FA180", Offset = "0x14FA180", VA = "0x14FA180")]
		private void Update()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x14FA0FC", Offset = "0x14FA0FC", VA = "0x14FA0FC")]
		private void Randomise()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x14FA248", Offset = "0x14FA248", VA = "0x14FA248")]
		public AutoRotate()
		{
		}
	}
	[Token(Token = "0x20004FA")]
	public class DemoInfo : MonoBehaviour
	{
		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _title;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Multiline]
		public string _description;

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MediaPlayer _media;

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x14FA930", Offset = "0x14FA930", VA = "0x14FA930")]
		public DemoInfo()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class FrameExtract : MonoBehaviour
	{
		[Token(Token = "0x4002919")]
		private const int NumFrames = 8;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _accurateSeek;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _timeoutMs;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GUISkin _skin;

		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool _asyncExtract;

		[Token(Token = "0x400291F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _busyProcessingFrame;

		[Token(Token = "0x4002920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _timeStepSeconds;

		[Token(Token = "0x4002921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _frameIndex;

		[Token(Token = "0x4002922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D _texture;

		[Token(Token = "0x4002923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture _displaySheet;

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x14FA938", Offset = "0x14FA938", VA = "0x14FA938")]
		private void Start()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x14FAA84", Offset = "0x14FAA84", VA = "0x14FAA84")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x14FAD54", Offset = "0x14FAD54", VA = "0x14FAD54")]
		private void OnNewMediaReady()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x14FAFCC", Offset = "0x14FAFCC", VA = "0x14FAFCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x14FB0B8", Offset = "0x14FB0B8", VA = "0x14FB0B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x14FB278", Offset = "0x14FB278", VA = "0x14FB278")]
		private void ProcessExtractedFrame(Texture2D texture)
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x14FB14C", Offset = "0x14FB14C", VA = "0x14FB14C")]
		private void ExtractNextFrame()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x14FB6D4", Offset = "0x14FB6D4", VA = "0x14FB6D4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x14FBB10", Offset = "0x14FBB10", VA = "0x14FBB10")]
		public FrameExtract()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class Mapping3D : MonoBehaviour
	{
		[Token(Token = "0x4002924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _cubePrefab;

		[Token(Token = "0x4002925")]
		private const int MaxCubes = 48;

		[Token(Token = "0x4002926")]
		private const float SpawnTime = 0.25f;

		[Token(Token = "0x4002927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _timer;

		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _cubes;

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x14FC0CC", Offset = "0x14FC0CC", VA = "0x14FC0CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x14FC16C", Offset = "0x14FC16C", VA = "0x14FC16C")]
		private void SpawnCube()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x14FC374", Offset = "0x14FC374", VA = "0x14FC374")]
		private void RemoveCube()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x14FC420", Offset = "0x14FC420", VA = "0x14FC420")]
		public Mapping3D()
		{
		}
	}
	[Token(Token = "0x20004FD")]
	public class SampleApp_Multiple : MonoBehaviour
	{
		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_videoPath;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MediaPlayer.FileLocation m_videoLocation;

		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int m_NumVideosAdded;

		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<DisplayUGUI> m_aAddedVideos;

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x14FD08C", Offset = "0x14FD08C", VA = "0x14FD08C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x14FD384", Offset = "0x14FD384", VA = "0x14FD384")]
		private void UpdateVideosLayout()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x14FD604", Offset = "0x14FD604", VA = "0x14FD604")]
		public void AddVideoClicked()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x14FD8C4", Offset = "0x14FD8C4", VA = "0x14FD8C4")]
		public void RemoveVideoClicked()
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x14FDA4C", Offset = "0x14FDA4C", VA = "0x14FDA4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x14FDBA0", Offset = "0x14FDBA0", VA = "0x14FDBA0")]
		public SampleApp_Multiple()
		{
		}
	}
	[Token(Token = "0x20004FE")]
	public class ChangeAudioTrack : MonoBehaviour
	{
		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _trackIndex;

		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _isQueued;

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x14FA250", Offset = "0x14FA250", VA = "0x14FA250")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x14FA25C", Offset = "0x14FA25C", VA = "0x14FA25C")]
		private void Update()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x14FA298", Offset = "0x14FA298", VA = "0x14FA298")]
		private bool IsVideoLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x14FA3C0", Offset = "0x14FA3C0", VA = "0x14FA3C0")]
		private static bool DoChangeAudioTrack(MediaPlayer mp, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x14FA5A0", Offset = "0x14FA5A0", VA = "0x14FA5A0")]
		public ChangeAudioTrack()
		{
		}
	}
	[Token(Token = "0x20004FF")]
	public class ChangeStereoMode : MonoBehaviour
	{
		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ApplyToMesh _applyToMesh;

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x14FA5A8", Offset = "0x14FA5A8", VA = "0x14FA5A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x14FA6FC", Offset = "0x14FA6FC", VA = "0x14FA6FC")]
		public ChangeStereoMode()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class ChangeVideoExample : MonoBehaviour
	{
		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x14FA704", Offset = "0x14FA704", VA = "0x14FA704")]
		public void LoadVideo(string filePath)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x14FA76C", Offset = "0x14FA76C", VA = "0x14FA76C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x14FA928", Offset = "0x14FA928", VA = "0x14FA928")]
		public ChangeVideoExample()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class LoadFromBuffer : MonoBehaviour
	{
		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x4002934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x14FBB28", Offset = "0x14FBB28", VA = "0x14FBB28")]
		private void Start()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x14FBC70", Offset = "0x14FBC70", VA = "0x14FBC70")]
		public LoadFromBuffer()
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class LoadFromBufferInChunks : MonoBehaviour
	{
		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mp;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _filename;

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x14FBCD0", Offset = "0x14FBCD0", VA = "0x14FBCD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x14FC06C", Offset = "0x14FC06C", VA = "0x14FC06C")]
		public LoadFromBufferInChunks()
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class NativeMediaOpen : MonoBehaviour
	{
		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _player;

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x14FC49C", Offset = "0x14FC49C", VA = "0x14FC49C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x14FC4A0", Offset = "0x14FC4A0", VA = "0x14FC4A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x14FC4A4", Offset = "0x14FC4A4", VA = "0x14FC4A4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x14FC738", Offset = "0x14FC738", VA = "0x14FC738")]
		public NativeMediaOpen()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class PlaybackSync : MonoBehaviour
	{
		[Token(Token = "0x2000824")]
		private enum State
		{
			[Token(Token = "0x40031AA")]
			Loading,
			[Token(Token = "0x40031AB")]
			Playing,
			[Token(Token = "0x40031AC")]
			Finished
		}

		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _masterPlayer;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer[] _slavePlayers;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float _toleranceMs;

		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool _matchVideo;

		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool _muteSlaves;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private State _state;

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x14FC740", Offset = "0x14FC740", VA = "0x14FC740")]
		private void Start()
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x14FC7F0", Offset = "0x14FC7F0", VA = "0x14FC7F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x14FCCA0", Offset = "0x14FCCA0", VA = "0x14FCCA0")]
		private bool IsAllVideosLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x14FCE40", Offset = "0x14FCE40", VA = "0x14FCE40")]
		private static bool IsVideoLoaded(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x14FCD20", Offset = "0x14FCD20", VA = "0x14FCD20")]
		private static bool IsPlaybackFinished(MediaPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x14FD074", Offset = "0x14FD074", VA = "0x14FD074")]
		public PlaybackSync()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class StartEndPoint : MonoBehaviour
	{
		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _startPointSeconds;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _endPointSeconds;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _loop;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xD1ED44", Offset = "0xD1ED44")]
		public float _startLoopSeconds;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isStartQueued;

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x1501748", Offset = "0x1501748", VA = "0x1501748")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x1501754", Offset = "0x1501754", VA = "0x1501754")]
		private void Update()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x15017C0", Offset = "0x15017C0", VA = "0x15017C0")]
		private static bool IsVideoLoaded(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x15018E0", Offset = "0x15018E0", VA = "0x15018E0")]
		private static void DoStart(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x15019CC", Offset = "0x15019CC", VA = "0x15019CC")]
		private static void DoCheckEnd(MediaPlayer mp, float positionSeconds)
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x1501B58", Offset = "0x1501B58", VA = "0x1501B58")]
		private static void DoCheckLoop(MediaPlayer mp, float positionSeconds, float positionLoop)
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x1501D70", Offset = "0x1501D70", VA = "0x1501D70")]
		public StartEndPoint()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class VideoTrigger : MonoBehaviour
	{
		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MediaPlayer _mediaPlayer;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _fadeTimeMs;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _fade;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _fadeDirection;

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x1503D9C", Offset = "0x1503D9C", VA = "0x1503D9C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1503E2C", Offset = "0x1503E2C", VA = "0x1503E2C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x1503EAC", Offset = "0x1503EAC", VA = "0x1503EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x1504160", Offset = "0x1504160", VA = "0x1504160")]
		public VideoTrigger()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class SimpleController : MonoBehaviour
	{
		[Token(Token = "0x2000825")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xD0E9B8", Offset = "0xD0E9B8")]
		private sealed class <LoadVideoWithFading>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40031AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40031AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleController <>4__this;

			[Token(Token = "0x40031B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fade>5__2;

			[Token(Token = "0x1700039D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C85")]
				[Address(RVA = "0x15010E0", Offset = "0x15010E0", VA = "0x15010E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C87")]
				[Address(RVA = "0x1501148", Offset = "0x1501148", VA = "0x1501148", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C82")]
			[Address(RVA = "0x14FE7E8", Offset = "0x14FE7E8", VA = "0x14FE7E8")]
			[DebuggerHidden]
			public <LoadVideoWithFading>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002C83")]
			[Address(RVA = "0x1500BDC", Offset = "0x1500BDC", VA = "0x1500BDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C84")]
			[Address(RVA = "0x1500BE0", Offset = "0x1500BE0", VA = "0x1500BE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C86")]
			[Address(RVA = "0x15010E8", Offset = "0x15010E8", VA = "0x15010E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _folder;

		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] _filenames;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] _streams;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DisplayIMGUI _display;

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GUISkin _guiSkin;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _width;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _height;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _durationSeconds;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool _useFading;

		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Queue<string> _eventLog;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _eventTimer;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private MediaPlayer.FileLocation _nextVideoLocation;

		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _nextVideoPath;

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x14FDC28", Offset = "0x14FDC28", VA = "0x14FDC28")]
		private void Start()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x14FDCCC", Offset = "0x14FDCCC", VA = "0x14FDCCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x14FDD70", Offset = "0x14FDD70", VA = "0x14FDD70")]
		public void OnMediaPlayerEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x14FDFEC", Offset = "0x14FDFEC", VA = "0x14FDFEC")]
		private void AddEvent(MediaPlayerEvent.EventType et)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x14FDDAC", Offset = "0x14FDDAC", VA = "0x14FDDAC")]
		private void GatherProperties()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x14FE14C", Offset = "0x14FE14C", VA = "0x14FE14C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x14FE334", Offset = "0x14FE334", VA = "0x14FE334")]
		private void LoadVideo(string filePath, bool url = false)
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x14FE420", Offset = "0x14FE420", VA = "0x14FE420")]
		private static bool VideoIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x14FE544", Offset = "0x14FE544", VA = "0x14FE544")]
		private static bool AudioIsReady(MediaPlayer mp)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x14FE778", Offset = "0x14FE778", VA = "0x14FE778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xD26F38", Offset = "0xD26F38")]
		private IEnumerator LoadVideoWithFading()
		{
			return null;
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x14FE814", Offset = "0x14FE814", VA = "0x14FE814")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1500A6C", Offset = "0x1500A6C", VA = "0x1500A6C")]
		public SimpleController()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class SphereDemo : MonoBehaviour
	{
		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _zeroCameraPosition;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _allowRecenter;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _allowVrToggle;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool _lockPitch;

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _spinX;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _spinY;

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x1501150", Offset = "0x1501150", VA = "0x1501150")]
		private void Start()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x1501298", Offset = "0x1501298", VA = "0x1501298")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x15012D4", Offset = "0x15012D4", VA = "0x15012D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x1501690", Offset = "0x1501690", VA = "0x1501690")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x1501738", Offset = "0x1501738", VA = "0x1501738")]
		public SphereDemo()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class VCR : MonoBehaviour
	{
		[Token(Token = "0x400295C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MediaPlayer _mediaPlayer;

		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MediaPlayer _mediaPlayerB;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DisplayUGUI _mediaDisplay;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RectTransform _bufferedSliderRect;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider _videoSeekSlider;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _setVideoSeekSliderValue;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _wasPlayingOnScrub;

		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider _audioVolumeSlider;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _setAudioVolumeSliderValue;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle _AutoStartToggle;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle _MuteToggle;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MediaPlayer.FileLocation _location;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string _folder;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] _videoFiles;

		[Token(Token = "0x400296A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _VideoIndex;

		[Token(Token = "0x400296B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Image _bufferedSliderImage;

		[Token(Token = "0x400296C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MediaPlayer _loadingPlayer;

		[Token(Token = "0x17000201")]
		public MediaPlayer PlayingPlayer
		{
			[Token(Token = "0x60020CC")]
			[Address(RVA = "0x1501D78", Offset = "0x1501D78", VA = "0x1501D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public MediaPlayer LoadingPlayer
		{
			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x1501E0C", Offset = "0x1501E0C", VA = "0x1501E0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x1501E14", Offset = "0x1501E14", VA = "0x1501E14")]
		private void SwapPlayers()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x1501FFC", Offset = "0x1501FFC", VA = "0x1501FFC")]
		public void OnOpenVideoFile()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x1502178", Offset = "0x1502178", VA = "0x1502178")]
		public void OnAutoStartChange()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x1502334", Offset = "0x1502334", VA = "0x1502334")]
		public void OnMuteChange()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x1502534", Offset = "0x1502534", VA = "0x1502534")]
		public void OnPlayButton()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x150264C", Offset = "0x150264C", VA = "0x150264C")]
		public void OnPauseButton()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x1502764", Offset = "0x1502764", VA = "0x1502764")]
		public void OnVideoSeekSlider()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x1502994", Offset = "0x1502994", VA = "0x1502994")]
		public void OnVideoSliderDown()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x1502B50", Offset = "0x1502B50", VA = "0x1502B50")]
		public void OnVideoSliderUp()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x1502C6C", Offset = "0x1502C6C", VA = "0x1502C6C")]
		public void OnAudioVolumeSlider()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x1502F38", Offset = "0x1502F38", VA = "0x1502F38")]
		public void OnRewindButton()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x1503050", Offset = "0x1503050", VA = "0x1503050")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x150305C", Offset = "0x150305C", VA = "0x150305C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x1503304", Offset = "0x1503304", VA = "0x1503304")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x1503484", Offset = "0x1503484", VA = "0x1503484")]
		private void Update()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x1503BA8", Offset = "0x1503BA8", VA = "0x1503BA8")]
		public void OnVideoEvent(MediaPlayer mp, MediaPlayerEvent.EventType et, ErrorCode errorCode)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1503C94", Offset = "0x1503C94", VA = "0x1503C94")]
		public VCR()
		{
		}
	}
}
