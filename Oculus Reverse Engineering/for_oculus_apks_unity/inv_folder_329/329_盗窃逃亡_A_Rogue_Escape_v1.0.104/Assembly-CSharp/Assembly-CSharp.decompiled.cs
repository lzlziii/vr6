using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using Il2CppDummyDll;
using MEC;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using SimpleJSON;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.Video;
using csDelaunay;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AltarPillarMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<AltarPillarMapObj> pillars;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject electricFence;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Color activeColor;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Color inactiveColor;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject pawn;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int cellId;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool isOpen;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int numSubLocks;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<bool> subLocks;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool logUnlocked;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private AudioSource noise;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool mainPillar;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool opening;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private RadarHolo radar;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x8B3D80", Offset = "0x8B3D80", VA = "0x8B3D80", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x8B3D98", Offset = "0x8B3D98", VA = "0x8B3D98")]
	private void initStates()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x8B3F74", Offset = "0x8B3F74", VA = "0x8B3F74")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x8B4280", Offset = "0x8B4280", VA = "0x8B4280")]
	private void openCell()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x8B4440", Offset = "0x8B4440", VA = "0x8B4440")]
	private void playHornSound()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x8B44CC", Offset = "0x8B44CC", VA = "0x8B44CC")]
	private void startOpenCellDone()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x8B4614", Offset = "0x8B4614", VA = "0x8B4614")]
	private void startOpenCell()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x8B46CC", Offset = "0x8B46CC", VA = "0x8B46CC", Slot = "4")]
	public override void takeDamage(float damage)
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x8B4868", Offset = "0x8B4868", VA = "0x8B4868", Slot = "5")]
	public override int obtainConnectionClearance(LandShip ship, bool query)
	{
		return default(int);
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x8B48D0", Offset = "0x8B48D0", VA = "0x8B48D0", Slot = "15")]
	public override void disconnected()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x8B4A44", Offset = "0x8B4A44", VA = "0x8B4A44", Slot = "14")]
	public override void connected()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x8B4BCC", Offset = "0x8B4BCC", VA = "0x8B4BCC")]
	private void unlockSubSys(object lockNum)
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x8B4D84", Offset = "0x8B4D84", VA = "0x8B4D84", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x8B56E4", Offset = "0x8B56E4", VA = "0x8B56E4", Slot = "16")]
	protected override void setData(MapObjData data)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x8B587C", Offset = "0x8B587C", VA = "0x8B587C", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x8B5924", Offset = "0x8B5924", VA = "0x8B5924")]
	public AltarPillarMapObj()
	{
	}
}
[Token(Token = "0x2000003")]
public class AltarTerminalMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Computer playerComputer;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool playedSequence;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool playingSequence;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<TimedCallbackTask> pendingTasks;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x8B5AE0", Offset = "0x8B5AE0", VA = "0x8B5AE0", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x8B5AEC", Offset = "0x8B5AEC", VA = "0x8B5AEC")]
	private void initStates()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x8B5B8C", Offset = "0x8B5B8C", VA = "0x8B5B8C", Slot = "5")]
	public override int obtainConnectionClearance(LandShip ship, bool query)
	{
		return default(int);
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x8B5BF4", Offset = "0x8B5BF4", VA = "0x8B5BF4")]
	private void receiveLighthouseCoords3()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x8B5E6C", Offset = "0x8B5E6C", VA = "0x8B5E6C")]
	private void receiveLighthouseCoords2()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x8B5FA0", Offset = "0x8B5FA0", VA = "0x8B5FA0")]
	private void receiveLighthouseCoords()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x8B619C", Offset = "0x8B619C", VA = "0x8B619C", Slot = "14")]
	public override void connected()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x8B5DB0", Offset = "0x8B5DB0", VA = "0x8B5DB0")]
	private void clearPendingTasks()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x8B62F0", Offset = "0x8B62F0", VA = "0x8B62F0", Slot = "15")]
	public override void disconnected()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x8B64F8", Offset = "0x8B64F8", VA = "0x8B64F8", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x8B69C4", Offset = "0x8B69C4", VA = "0x8B69C4", Slot = "16")]
	protected override void setData(MapObjData data)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x8B69F8", Offset = "0x8B69F8", VA = "0x8B69F8", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x8B6A3C", Offset = "0x8B6A3C", VA = "0x8B6A3C")]
	public AltarTerminalMapObj()
	{
	}
}
[Token(Token = "0x2000004")]
public class ArsenalMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x600001F")]
	[Address(RVA = "0x8B6BA0", Offset = "0x8B6BA0", VA = "0x8B6BA0", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x8B6C70", Offset = "0x8B6C70", VA = "0x8B6C70")]
	private void initStates()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x8B6C78", Offset = "0x8B6C78", VA = "0x8B6C78", Slot = "14")]
	public override void connected()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x8B6D3C", Offset = "0x8B6D3C", VA = "0x8B6D3C", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x8B72BC", Offset = "0x8B72BC", VA = "0x8B72BC", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x8B72E0", Offset = "0x8B72E0", VA = "0x8B72E0")]
	public ArsenalMapObj()
	{
	}
}
[Token(Token = "0x2000005")]
public class BaseAccessPointMapObj : MapObject
{
	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected string log;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected int currentMenu;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected bool sentinelsAlerted;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected List<Record> records;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected List<WeaponCode> weaponCodes;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected bool autoDownload;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	protected bool shouldDisplayLog;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int timeoutBarCount;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int itemIdToTransfer;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x8B3D8C", Offset = "0x8B3D8C", VA = "0x8B3D8C", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x8B7EBC", Offset = "0x8B7EBC", VA = "0x8B7EBC")]
	public void setLog(string log)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x8B7EC4", Offset = "0x8B7EC4", VA = "0x8B7EC4")]
	public string getLog()
	{
		return null;
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x8B7ECC", Offset = "0x8B7ECC", VA = "0x8B7ECC", Slot = "5")]
	public override int obtainConnectionClearance(LandShip ship, bool query)
	{
		return default(int);
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x8B7FC8", Offset = "0x8B7FC8", VA = "0x8B7FC8")]
	protected void selectedMenu(object menuIdObj)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x8B49FC", Offset = "0x8B49FC", VA = "0x8B49FC", Slot = "15")]
	public override void disconnected()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x8B4A68", Offset = "0x8B4A68", VA = "0x8B4A68", Slot = "14")]
	public override void connected()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x8B4B80", Offset = "0x8B4B80", VA = "0x8B4B80")]
	protected void startTimeoutBar()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x8B53CC", Offset = "0x8B53CC", VA = "0x8B53CC")]
	protected void drawTimeoutBar(string msg, ref int vCursor)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x8B80BC", Offset = "0x8B80BC", VA = "0x8B80BC")]
	protected void dropTimeoutBarCount()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x8B6EE8", Offset = "0x8B6EE8", VA = "0x8B6EE8")]
	protected void drawTimeoutBarResult(string headerMsg, string msg, ref int vCursor)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x8B8174", Offset = "0x8B8174", VA = "0x8B8174")]
	protected int getTimeoutBarCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x8B65FC", Offset = "0x8B65FC", VA = "0x8B65FC", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x8B5834", Offset = "0x8B5834", VA = "0x8B5834", Slot = "16")]
	protected override void setData(MapObjData data)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x8B58D4", Offset = "0x8B58D4", VA = "0x8B58D4", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x8B817C", Offset = "0x8B817C", VA = "0x8B817C")]
	public void spawnSentinels()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x8B54E8", Offset = "0x8B54E8", VA = "0x8B54E8")]
	protected void alertSentinels()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x8B831C", Offset = "0x8B831C", VA = "0x8B831C")]
	private void transferWeaponCodeDone(object subject)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x8B83FC", Offset = "0x8B83FC", VA = "0x8B83FC")]
	private void transferWeaponCodeSelected(object subject)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x8B8500", Offset = "0x8B8500", VA = "0x8B8500")]
	private void cancelTransferWeaponCode(object subject)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x8B851C", Offset = "0x8B851C", VA = "0x8B851C")]
	protected void weaponCodeSelected(object weaponCodeEntryIdObj)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x8B6FAC", Offset = "0x8B6FAC", VA = "0x8B6FAC")]
	protected void drawWeaponCodes(ref int vCursor)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x8B8744", Offset = "0x8B8744", VA = "0x8B8744")]
	private void recordSelected(object recordEntryIdObj)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x8B8B84", Offset = "0x8B8B84", VA = "0x8B8B84")]
	protected void drawRecordsMenu(ref int vCursor)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x8B8EA4", Offset = "0x8B8EA4", VA = "0x8B8EA4", Slot = "18")]
	protected virtual void doAutoDownload()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x8B90CC", Offset = "0x8B90CC", VA = "0x8B90CC")]
	private void autoDownloadDone(object arg)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x8B599C", Offset = "0x8B599C", VA = "0x8B599C")]
	public BaseAccessPointMapObj()
	{
	}
}
[Token(Token = "0x2000006")]
public class BaseComp : MonoBehaviour
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isHoveringSomething;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static WeakReference hoveredComponentRef;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Ship ship;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameManager game;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool invalidContext;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Signal signal;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected bool inside;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x8B918C", Offset = "0x8B918C", VA = "0x8B918C")]
	public static void iosHoveredComp(BaseComp comp)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x8B921C", Offset = "0x8B921C", VA = "0x8B921C")]
	public static void clearHOveredComp()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x8B92A4", Offset = "0x8B92A4", VA = "0x8B92A4")]
	public static BaseComp getHOveredComp()
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x8B938C", Offset = "0x8B938C", VA = "0x8B938C")]
	public static void iosHoveredGrabbed()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x8B944C", Offset = "0x8B944C", VA = "0x8B944C")]
	public static void iosHoveredLeft()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x8B950C", Offset = "0x8B950C", VA = "0x8B950C", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x8B95B4", Offset = "0x8B95B4", VA = "0x8B95B4")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x8B95BC", Offset = "0x8B95BC", VA = "0x8B95BC", Slot = "5")]
	public virtual void reset()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x8B95C8", Offset = "0x8B95C8", VA = "0x8B95C8", Slot = "6")]
	public virtual void compMouseEnter()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x8B95CC", Offset = "0x8B95CC", VA = "0x8B95CC", Slot = "7")]
	public virtual void compMouseExit()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x8B95D0", Offset = "0x8B95D0", VA = "0x8B95D0", Slot = "8")]
	public virtual void compMouseDown()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x8B95D4", Offset = "0x8B95D4", VA = "0x8B95D4", Slot = "9")]
	public virtual void compMouseUp()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x8B95D8", Offset = "0x8B95D8", VA = "0x8B95D8", Slot = "10")]
	public virtual void compMouseDrag()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x8B95DC", Offset = "0x8B95DC", VA = "0x8B95DC")]
	public void iosOnDrag()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x8B9440", Offset = "0x8B9440", VA = "0x8B9440")]
	public void iosOnGrabbed()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x8B9500", Offset = "0x8B9500", VA = "0x8B9500")]
	public void iosOnLeft()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x8B95E8", Offset = "0x8B95E8", VA = "0x8B95E8")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x8B9600", Offset = "0x8B9600", VA = "0x8B9600")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x8B9604", Offset = "0x8B9604", VA = "0x8B9604")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x8B9614", Offset = "0x8B9614", VA = "0x8B9614")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x8B9618", Offset = "0x8B9618", VA = "0x8B9618")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x8B961C", Offset = "0x8B961C", VA = "0x8B961C")]
	protected void playSound(string name, float volume = 1f)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x8B9644", Offset = "0x8B9644", VA = "0x8B9644")]
	protected object executeAction(string name, object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x8B98D4", Offset = "0x8B98D4", VA = "0x8B98D4")]
	protected object executeAction(string name)
	{
		return null;
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x8B9940", Offset = "0x8B9940", VA = "0x8B9940")]
	public BaseComp()
	{
	}
}
[Token(Token = "0x2000007")]
public class BaseEncounter
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int entityUnknown;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int entityFriend;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int entityEnemy;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int treeMenu;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int buyMenu;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int sellMenu;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int customMenu;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 radarPos;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string signalId;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int descriptionId;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SystemMenu sysMenu;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float discoverDist;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected string name;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected int entityType;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool connected;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int secretType;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected string nauticlass;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float distToPlayer;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float speed;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected ZeppelinShip zeppelinShip;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool doneInteracting;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected float connectDist;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float minDist;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected List<Resource> resources;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected List<Resource> buyingResources;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Dictionary<string, int> buyingPrices;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Dictionary<string, int> sellingPrices;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected string currentMenuPath;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected List<string> menuEntries;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected bool waintingLog;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected int currentMenu;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string petsciiFlag;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected string shipModelName;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected string rootMenu;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Computer computer;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 deltaVec;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 targetPos;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int dirChangeTimer;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private JSONNode menuTree;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Resource currentResource;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x8B9A24", Offset = "0x8B9A24", VA = "0x8B9A24")]
	public BaseEncounter()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x8B9BF8", Offset = "0x8B9BF8", VA = "0x8B9BF8", Slot = "4")]
	public virtual void init()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x8B9C98", Offset = "0x8B9C98", VA = "0x8B9C98")]
	public void disable()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x8B9C9C", Offset = "0x8B9C9C", VA = "0x8B9C9C")]
	public string getPetsciiFlat()
	{
		return null;
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x8B9CA4", Offset = "0x8B9CA4", VA = "0x8B9CA4")]
	public bool isDoneInteracting()
	{
		return default(bool);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x8B9CAC", Offset = "0x8B9CAC", VA = "0x8B9CAC")]
	public string getName()
	{
		return null;
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x8B9CB4", Offset = "0x8B9CB4", VA = "0x8B9CB4")]
	public string getNauticlass()
	{
		return null;
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x8B9CBC", Offset = "0x8B9CBC", VA = "0x8B9CBC")]
	public bool isConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x8B9CC4", Offset = "0x8B9CC4", VA = "0x8B9CC4")]
	public float getDistToPlayer()
	{
		return default(float);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x8B9CCC", Offset = "0x8B9CCC", VA = "0x8B9CCC")]
	public float getConnectDist()
	{
		return default(float);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x8B9CD4", Offset = "0x8B9CD4", VA = "0x8B9CD4")]
	public int getEntityType()
	{
		return default(int);
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x8B9CDC", Offset = "0x8B9CDC", VA = "0x8B9CDC", Slot = "5")]
	public virtual void updatePos(Vector3 playerPos)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x8BA068", Offset = "0x8BA068", VA = "0x8BA068")]
	public void revealEntityType()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x8BA074", Offset = "0x8BA074", VA = "0x8BA074")]
	private void menuTransitionDone()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x8BA0A4", Offset = "0x8BA0A4", VA = "0x8BA0A4")]
	private void computerLogDone()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x8BA0C8", Offset = "0x8BA0C8", VA = "0x8BA0C8")]
	private object execCommand(string command)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x8BA410", Offset = "0x8BA410", VA = "0x8BA410")]
	private string replaceInteractiveValues(string log)
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x8BA674", Offset = "0x8BA674", VA = "0x8BA674")]
	public void jumpToMenu(string fullPath, bool skipLog = false)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x8BB504", Offset = "0x8BB504", VA = "0x8BB504")]
	public bool hasEnoughSalt(int howMuch)
	{
		return default(bool);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x8BB50C", Offset = "0x8BB50C", VA = "0x8BB50C")]
	public void jumpToStartMenu()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x8BB518", Offset = "0x8BB518", VA = "0x8BB518")]
	private void menuSelected(object menuEntryStrObj)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x8BB5B0", Offset = "0x8BB5B0", VA = "0x8BB5B0")]
	public void addRecord(int id)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x8BB5D4", Offset = "0x8BB5D4", VA = "0x8BB5D4", Slot = "6")]
	public virtual void unhook()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x8BB610", Offset = "0x8BB610", VA = "0x8BB610")]
	public void backToMainMenu(object arg)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x8BB62C", Offset = "0x8BB62C", VA = "0x8BB62C")]
	private void commitSellResource(object arg)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x8BB7B8", Offset = "0x8BB7B8", VA = "0x8BB7B8", Slot = "7")]
	protected virtual void shipAcquiredResource(Ship ship, Resource resource)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x8BB7DC", Offset = "0x8BB7DC", VA = "0x8BB7DC")]
	private void commitBuyResource(object arg)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x8BB970", Offset = "0x8BB970", VA = "0x8BB970")]
	private void buyResourceSelected(object resourceIdObj)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x8BC43C", Offset = "0x8BC43C", VA = "0x8BC43C")]
	private void showSellMenuSelected(object arg)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x8BC4F0", Offset = "0x8BC4F0", VA = "0x8BC4F0")]
	private void sellResourceSelected(object resourceIdObj)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x8BC830", Offset = "0x8BC830", VA = "0x8BC830")]
	public void backToRootMenu()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x8BC8AC", Offset = "0x8BC8AC", VA = "0x8BC8AC")]
	protected void backToRootMenuPressed(object arg)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x8BC8B0", Offset = "0x8BC8B0", VA = "0x8BC8B0")]
	public void drawMenu(int vCursor)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x8BD0B8", Offset = "0x8BD0B8", VA = "0x8BD0B8", Slot = "8")]
	protected virtual void drawCustomMenu(int vCursor)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x8BD000", Offset = "0x8BD000", VA = "0x8BD000")]
	private bool canBuyResource(Resource resource)
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x8BD0BC", Offset = "0x8BD0BC", VA = "0x8BD0BC")]
	public void showTreeMenu()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x8BC470", Offset = "0x8BC470", VA = "0x8BC470")]
	public void showSellMenu()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x8BD13C", Offset = "0x8BD13C", VA = "0x8BD13C")]
	public void showBuyMenu()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x8BD1BC", Offset = "0x8BD1BC", VA = "0x8BD1BC")]
	protected void addSellingResource(Resource resource, int price)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x8BD24C", Offset = "0x8BD24C", VA = "0x8BD24C")]
	protected void addBuyingResource(Resource resource, int price)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x8BB904", Offset = "0x8BB904", VA = "0x8BB904")]
	protected int getSellingPrice(Resource resource)
	{
		return default(int);
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x8BB74C", Offset = "0x8BB74C", VA = "0x8BB74C")]
	protected int getBuyingPrice(Resource resource)
	{
		return default(int);
	}
}
[Token(Token = "0x2000008")]
public class BaseTask
{
	[Token(Token = "0x200020C")]
	public delegate void TaskCallback();

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool executeInMenuMode;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool isDone;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int enlapsedFrames;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TaskCallback callback;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string tag;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x8B6B48", Offset = "0x8B6B48", VA = "0x8B6B48")]
	public BaseTask()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x8BD370", Offset = "0x8BD370", VA = "0x8BD370")]
	public void doRun()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x8BD37C", Offset = "0x8BD37C", VA = "0x8BD37C", Slot = "4")]
	public virtual void run()
	{
	}
}
[Token(Token = "0x2000009")]
public class BigSwitchComp : BaseComp
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leverTrn;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string startAction;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string action;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float limitOff;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float limitOn;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float defaultValue;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float dragMultiplier;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool rotateSelf;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool mouseDown;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 mouseDownPos;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float mouseDownRot;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool turnedOn;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float rot;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool updated;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool locked;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x8BD8D4", Offset = "0x8BD8D4", VA = "0x8BD8D4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x8BD900", Offset = "0x8BD900", VA = "0x8BD900", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x8BDB30", Offset = "0x8BDB30", VA = "0x8BDB30")]
	public bool getState()
	{
		return default(bool);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x8BDB38", Offset = "0x8BDB38", VA = "0x8BDB38")]
	public bool isLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x8BDB40", Offset = "0x8BDB40", VA = "0x8BDB40")]
	public void setLocked(bool state)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x8BDB4C", Offset = "0x8BDB4C", VA = "0x8BDB4C")]
	public float getRot()
	{
		return default(float);
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x8BD97C", Offset = "0x8BD97C", VA = "0x8BD97C")]
	private void updateValue()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x8BDB54", Offset = "0x8BDB54", VA = "0x8BDB54")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x8BDB6C", Offset = "0x8BDB6C", VA = "0x8BDB6C", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x8BDC18", Offset = "0x8BDC18", VA = "0x8BDC18", Slot = "10")]
	public override void compMouseDrag()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x8BDD7C", Offset = "0x8BDD7C", VA = "0x8BDD7C", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x8BDE48", Offset = "0x8BDE48", VA = "0x8BDE48")]
	public void switchOn(bool state)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x8BD7EC", Offset = "0x8BD7EC", VA = "0x8BD7EC")]
	public void setRot(float rot, bool soundOff = false)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x8BD6D8", Offset = "0x8BD6D8", VA = "0x8BD6D8")]
	public void forceRot(float rot, bool soundOff = false)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x8BDF5C", Offset = "0x8BDF5C", VA = "0x8BDF5C")]
	public BigSwitchComp()
	{
	}
}
[Token(Token = "0x200000A")]
public class BreathingLightComp : BaseComp
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string action;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color colorOn;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ledObject;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int materialId;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float multiplier;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material ledMaterial;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color offColor;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool switchedOn;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x8BF0A0", Offset = "0x8BF0A0", VA = "0x8BF0A0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x8BF1B8", Offset = "0x8BF1B8", VA = "0x8BF1B8", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x8BF228", Offset = "0x8BF228", VA = "0x8BF228")]
	public void setSwitchedOn(bool state)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x8BF2B4", Offset = "0x8BF2B4", VA = "0x8BF2B4")]
	private void updateSwitch()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x8BF368", Offset = "0x8BF368", VA = "0x8BF368")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x8BF46C", Offset = "0x8BF46C", VA = "0x8BF46C")]
	public BreathingLightComp()
	{
	}
}
[Token(Token = "0x200000B")]
public class ButtonComp : BaseComp
{
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject button;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float pushLength;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string action;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string releaseAction;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string lightOnQuery;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color emissionColorOn;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material material;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color emissionColorOff;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool pressed;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x8BF508", Offset = "0x8BF508", VA = "0x8BF508", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x8BF654", Offset = "0x8BF654", VA = "0x8BF654")]
	public void Start()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x8BF660", Offset = "0x8BF660", VA = "0x8BF660", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x8BF848", Offset = "0x8BF848", VA = "0x8BF848")]
	public bool isPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x8BF850", Offset = "0x8BF850", VA = "0x8BF850")]
	private void lightOnQueryChanged()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x8BF88C", Offset = "0x8BF88C", VA = "0x8BF88C")]
	private bool queryLightOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x8BF90C", Offset = "0x8BF90C", VA = "0x8BF90C")]
	public bool isLightOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x8BF7E4", Offset = "0x8BF7E4", VA = "0x8BF7E4")]
	public void lightOff()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x8BF764", Offset = "0x8BF764", VA = "0x8BF764")]
	public void lightOn(float intensity = 1f)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x8BF978", Offset = "0x8BF978", VA = "0x8BF978")]
	public void press()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x8BFAA0", Offset = "0x8BFAA0", VA = "0x8BFAA0")]
	public void release()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x8BFBA8", Offset = "0x8BFBA8", VA = "0x8BFBA8", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x8BFBB8", Offset = "0x8BFBB8", VA = "0x8BFBB8", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x8BFBC8", Offset = "0x8BFBC8", VA = "0x8BFBC8")]
	public Color getEmissionColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x8BFBD4", Offset = "0x8BFBD4", VA = "0x8BFBD4")]
	public void setEmissionColor(Color color)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x8BFC70", Offset = "0x8BFC70", VA = "0x8BFC70")]
	public ButtonComp()
	{
	}
}
[Token(Token = "0x200000C")]
public class CableComp : MonoBehaviour
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject startObj;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject endObj;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color colorHighlight;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float thickness;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float offsetFromJack;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float springDampening;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float gravityForce;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material material;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Camera camera;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] pts;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 gravityVec;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 springDelta;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 midVec;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 prevMidVec;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool initialized;

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x8BFE44", Offset = "0x8BFE44", VA = "0x8BFE44")]
	public void init()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x8BFEE4", Offset = "0x8BFEE4", VA = "0x8BFEE4")]
	public void resetVelocity()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x8BFFE0", Offset = "0x8BFFE0", VA = "0x8BFFE0")]
	public Vector3 splineInterp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x8C0418", Offset = "0x8C0418", VA = "0x8C0418")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x8C0830", Offset = "0x8C0830", VA = "0x8C0830")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x8C0B48", Offset = "0x8C0B48", VA = "0x8C0B48")]
	public CableComp()
	{
	}
}
[Token(Token = "0x200000D")]
public class CameraTrigger : MonoBehaviour
{
	[Token(Token = "0x200020D")]
	public delegate void CameraTriggerCallback();

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainCameraObj;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BoxCollider collider;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CameraTriggerCallback callback;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int layerMask;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x76A07C", Offset = "0x76A07C", VA = "0x76A07C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x76A0AC", Offset = "0x76A0AC", VA = "0x76A0AC")]
	public void activateCollider(BoxCollider newCollider, CameraTriggerCallback newCallback)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x76A0C0", Offset = "0x76A0C0", VA = "0x76A0C0")]
	public void reset()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x76A0EC", Offset = "0x76A0EC", VA = "0x76A0EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x76A3FC", Offset = "0x76A3FC", VA = "0x76A3FC")]
	public CameraTrigger()
	{
	}
}
[Token(Token = "0x200000E")]
public class Computer : MonoBehaviour
{
	[Token(Token = "0x200020E")]
	public class BufferRenderData
	{
		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int rows;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int columns;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int cursorX;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int cursorY;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int startLogRow;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> pendingBuffer;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> paletteBuffer;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool petsciiMode;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro textmesh;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public char[][] textmeshCharGrid;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color[] textmeshColors;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool[] highlight;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<string> tmpString;

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x770D60", Offset = "0x770D60", VA = "0x770D60")]
		public BufferRenderData()
		{
		}
	}

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool exceptionRaised;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int mainBuffer;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int statsBuffer;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int finderBuffer;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int landMenuBuffer;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int zeppMainBuffer;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int zeppMenuBuffer;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int liftMenuBuffer;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int zeppRadarPetsciiBuffer;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainMonitorLandTMP;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject menuMonitorLandTMP;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject statsMonitorTMP;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject menuMonitorLiftTMP;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject mainMonitorZeppTMP;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject menuMonitorZeppTMP;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool chineseWordWrap;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int secondaryMonitorVLines;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Color> palette;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color monitorColorOff;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BaseTask.TaskCallback logDoneCallback;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MonitorComp mainMonitorComp;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool electricalOn;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool switchedOn;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool booted;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<int, BufferRenderData> bufferRenderData;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BufferRenderData mainBufferData;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 gpsPosition;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 gpsDirection;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Ship ship;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<MapObject> targets;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool firstTimeBooting;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float proccessingVolume;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Signal outSignal;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Signal electricalSignal;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Sprite[] charsetAtlas;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool forceGlitches;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool waitingForCheck;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int startupCodeSelectedEntry;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int startupCodeNumEntries;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<string> msgEn;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<string> msgLang;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool langTranslate;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int[] check3Values;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<string> langFileSuffix;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool monospaceFont;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool finalRoomSetupEnabled;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	private bool initialized;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private FinderComp finder;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private char[] faultyChars;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int mainBufferId;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private string scanHeader;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x76BE38", Offset = "0x76BE38", VA = "0x76BE38")]
	public static Computer getInstance()
	{
		return null;
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x76BE9C", Offset = "0x76BE9C", VA = "0x76BE9C")]
	public static int getBufferId(string bufferName)
	{
		return default(int);
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x76BF90", Offset = "0x76BF90", VA = "0x76BF90")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x76BF94", Offset = "0x76BF94", VA = "0x76BF94")]
	public int getCurrentLangId()
	{
		return default(int);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x76C008", Offset = "0x76C008", VA = "0x76C008")]
	public bool isLanguageTranslationActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x76C010", Offset = "0x76C010", VA = "0x76C010")]
	private void addTextEntriesToList(string textResource, ref List<string> outList, ref List<string> outSkipList)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x76C428", Offset = "0x76C428", VA = "0x76C428")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x76C430", Offset = "0x76C430", VA = "0x76C430")]
	public void preInit()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x76C74C", Offset = "0x76C74C", VA = "0x76C74C")]
	public void enteredLandCockpit()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x76C8E4", Offset = "0x76C8E4", VA = "0x76C8E4")]
	public void reset()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x76CA58", Offset = "0x76CA58", VA = "0x76CA58")]
	public void setForcedGlitches(bool state)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x76C818", Offset = "0x76C818", VA = "0x76C818")]
	private void clearAllBuffers()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x76C4BC", Offset = "0x76C4BC", VA = "0x76C4BC")]
	private void initBuffers()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x76CC18", Offset = "0x76CC18", VA = "0x76CC18")]
	private void initBuffersReduced(int reduceAmount)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x76CEC8", Offset = "0x76CEC8", VA = "0x76CEC8")]
	public void setFirstTimeBooting(bool state)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x76CED4", Offset = "0x76CED4", VA = "0x76CED4")]
	public void bootDone()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x76D17C", Offset = "0x76D17C", VA = "0x76D17C")]
	private void boot()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x76D26C", Offset = "0x76D26C", VA = "0x76D26C")]
	private void execFirstBoot()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x76D498", Offset = "0x76D498", VA = "0x76D498")]
	public void startupCodePrevButtonPressed()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x76DC00", Offset = "0x76DC00", VA = "0x76DC00")]
	public void startupCodeNextButtonPressed()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x76DCD0", Offset = "0x76DCD0", VA = "0x76DCD0")]
	public void startupCodeSelectButtonPressed()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x76DD8C", Offset = "0x76DD8C", VA = "0x76DD8C")]
	private void validateRoutineCheck1()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x76DEE4", Offset = "0x76DEE4", VA = "0x76DEE4")]
	public void startHelperCheck4()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x76E050", Offset = "0x76E050", VA = "0x76E050")]
	public void displayHelperCheck4()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x76E4A4", Offset = "0x76E4A4", VA = "0x76E4A4")]
	public void helperCheck4Valid()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x76E58C", Offset = "0x76E58C", VA = "0x76E58C")]
	public void startHelperCheck3()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x76D574", Offset = "0x76D574", VA = "0x76D574")]
	public void displayHelperCheck3()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x76DD90", Offset = "0x76DD90", VA = "0x76DD90")]
	public void validateRoutineCheck3()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x76E758", Offset = "0x76E758", VA = "0x76E758")]
	private void check3Invalid()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x76E890", Offset = "0x76E890", VA = "0x76E890")]
	private void check3Valid()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x76EA40", Offset = "0x76EA40", VA = "0x76EA40")]
	public void startHelperCheck1()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x76EBCC", Offset = "0x76EBCC", VA = "0x76EBCC")]
	public void startHelperCheck2()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x76ED58", Offset = "0x76ED58", VA = "0x76ED58")]
	public void displayHelperCheck2()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x76F81C", Offset = "0x76F81C", VA = "0x76F81C")]
	private void displayHelperCheck2Complete()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x76DEDC", Offset = "0x76DEDC", VA = "0x76DEDC")]
	private void check1Valid()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x76DEE0", Offset = "0x76DEE0", VA = "0x76DEE0")]
	private void check1Invalid()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x76D570", Offset = "0x76D570", VA = "0x76D570")]
	public void displayHelperCheck1()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x76F9B0", Offset = "0x76F9B0", VA = "0x76F9B0")]
	public bool waitingForStartupCode()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x76D3C0", Offset = "0x76D3C0", VA = "0x76D3C0")]
	private void quickBoot()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x76FBEC", Offset = "0x76FBEC", VA = "0x76FBEC")]
	private void electricalSwitched()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x76FE78", Offset = "0x76FE78", VA = "0x76FE78")]
	public void setMainBuffer(int bufferId)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x76FEEC", Offset = "0x76FEEC", VA = "0x76FEEC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x76FD9C", Offset = "0x76FD9C", VA = "0x76FD9C")]
	private void softReset()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x770634", Offset = "0x770634", VA = "0x770634")]
	private bool isSwitchOnOffLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x77063C", Offset = "0x77063C", VA = "0x77063C")]
	public void interactSwitchOn(float value)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x7707B8", Offset = "0x7707B8", VA = "0x7707B8")]
	public void interactSwitchEnd(float value)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x770888", Offset = "0x770888", VA = "0x770888")]
	private bool checkSwitchState(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x7706F0", Offset = "0x7706F0", VA = "0x7706F0")]
	public bool switchOn(bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x770950", Offset = "0x770950", VA = "0x770950")]
	public bool isSwitchedOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x770958", Offset = "0x770958", VA = "0x770958")]
	private char getTextMeshGlitchedChar(char ch)
	{
		return default(char);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x7709D0", Offset = "0x7709D0", VA = "0x7709D0")]
	private void initTextMeshString(BufferRenderData data)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x76CA64", Offset = "0x76CA64", VA = "0x76CA64")]
	public void updateBuffer(int bufferName)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x770310", Offset = "0x770310", VA = "0x770310")]
	private void updateTextMesh(BufferRenderData data)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x770BAC", Offset = "0x770BAC", VA = "0x770BAC")]
	private void initTextmeshBuffer(BufferRenderData data, int rows, int columns, int bufferId)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x76CAD4", Offset = "0x76CAD4", VA = "0x76CAD4")]
	private BufferRenderData initBuffer(int bufferId, int columns, int rows, TextMeshPro textmesh)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x770E18", Offset = "0x770E18", VA = "0x770E18")]
	private void setupBuffer(BufferRenderData data, int bufferId)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x7711DC", Offset = "0x7711DC", VA = "0x7711DC")]
	public bool isBufferEnabled(int bufferName)
	{
		return default(bool);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x771258", Offset = "0x771258", VA = "0x771258")]
	public void enableBuffer(int bufferName, bool state)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x76A5B8", Offset = "0x76A5B8", VA = "0x76A5B8")]
	public void clearBuffer(int bufferName)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x7701A8", Offset = "0x7701A8", VA = "0x7701A8")]
	private void scrollUp(BufferRenderData data)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x76A528", Offset = "0x76A528", VA = "0x76A528")]
	public void getBufferRenderSize(int bufferName, ref int columns, ref int rows)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x7712DC", Offset = "0x7712DC", VA = "0x7712DC")]
	public int getBufferRenderWidth(int bufferName)
	{
		return default(int);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x771350", Offset = "0x771350", VA = "0x771350")]
	public int getBufferRenderHeight(int bufferName)
	{
		return default(int);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x7713C4", Offset = "0x7713C4", VA = "0x7713C4")]
	public bool isBooted()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x7713CC", Offset = "0x7713CC", VA = "0x7713CC")]
	public int getCurrentRow(int bufferName)
	{
		return default(int);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x771440", Offset = "0x771440", VA = "0x771440")]
	private bool checkFaulty(int bufferName)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x77156C", Offset = "0x77156C", VA = "0x77156C")]
	public int sendLine(int bufferName, int x, int y, string message, int paletteId = 0, bool highlightRow = false)
	{
		return default(int);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x771820", Offset = "0x771820", VA = "0x771820")]
	public void setSingleChar(int bufferName, int x, int y, char ch)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x7718EC", Offset = "0x7718EC", VA = "0x7718EC")]
	public void setRowHighlight(int bufferName, int row, bool highlight)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x76E148", Offset = "0x76E148", VA = "0x76E148")]
	public int sendMessage(int bufferName, int x, int y, string message, int paletteId = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x771A54", Offset = "0x771A54", VA = "0x771A54")]
	public List<string> autoWrapText(int bufferName, int maxLen, string text)
	{
		return null;
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x771EBC", Offset = "0x771EBC", VA = "0x771EBC")]
	public void sendMessage(int bufferName, int startLine, string message, out int endLine)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x76A9E4", Offset = "0x76A9E4", VA = "0x76A9E4")]
	public void clearBufferUntilStartLog(int bufferName)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x76A9C8", Offset = "0x76A9C8", VA = "0x76A9C8")]
	public int getStartLogRow()
	{
		return default(int);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x77223C", Offset = "0x77223C", VA = "0x77223C")]
	public void setStartLogRow(int startRow)
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x772258", Offset = "0x772258", VA = "0x772258")]
	private void shouldPlayLogSound()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x772310", Offset = "0x772310", VA = "0x772310")]
	public bool isWaitingForCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x772318", Offset = "0x772318", VA = "0x772318")]
	public void setLang(int langId)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x76E754", Offset = "0x76E754", VA = "0x76E754")]
	public void skipTranslation(int bufferName)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x7719A0", Offset = "0x7719A0", VA = "0x7719A0")]
	private void translateMessage(int bufferName, ref string message, bool forced = false)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x76E718", Offset = "0x76E718", VA = "0x76E718")]
	public string translateString(int bufferName, string message)
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x76D0B8", Offset = "0x76D0B8", VA = "0x76D0B8")]
	public void sendLogInternal(string message)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x76CFF4", Offset = "0x76CFF4", VA = "0x76CFF4")]
	public void sendLogWarn(string message)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x772B30", Offset = "0x772B30", VA = "0x772B30")]
	public void sendLogDanger(string message)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x76F9B8", Offset = "0x76F9B8", VA = "0x76F9B8")]
	public int sendMessage(int bufferName, string message)
	{
		return default(int);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x76AAD8", Offset = "0x76AAD8", VA = "0x76AAD8")]
	public void drawLabel(int bufferName, int posY, string label = "", int color = 4)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x76A748", Offset = "0x76A748", VA = "0x76A748")]
	public void drawRect(int bufferName, int startX, int startY, int endX, int endY)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x772BF4", Offset = "0x772BF4", VA = "0x772BF4")]
	public void moveCursor(int bufferName, int x, int y)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x772C78", Offset = "0x772C78", VA = "0x772C78")]
	public void updateGps(Vector3 position, Vector3 direction)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x772C88", Offset = "0x772C88", VA = "0x772C88")]
	public Vector3 getGpsPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x772CC4", Offset = "0x772CC4", VA = "0x772CC4")]
	public Vector3 getGpsDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x772D00", Offset = "0x772D00", VA = "0x772D00")]
	public Vector3 getTargetLocation(int targetId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x772DD8", Offset = "0x772DD8", VA = "0x772DD8")]
	public string getTargetName(int targetId)
	{
		return null;
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x76C9F0", Offset = "0x76C9F0", VA = "0x76C9F0")]
	public void clearTargets()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x772E80", Offset = "0x772E80", VA = "0x772E80")]
	public void removeTarget(MapObject target)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x772F48", Offset = "0x772F48", VA = "0x772F48")]
	public void focusTarget(string targetName)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x773014", Offset = "0x773014", VA = "0x773014")]
	public void addTarget(MapObject target)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x7730AC", Offset = "0x7730AC", VA = "0x7730AC")]
	public int getNumTargets()
	{
		return default(int);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x7730FC", Offset = "0x7730FC", VA = "0x7730FC")]
	public void turnColumnBlack(int buffer, int shift)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x7731D8", Offset = "0x7731D8", VA = "0x7731D8")]
	public void setRowColor(int buffer, int row, int colorId)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x7732A8", Offset = "0x7732A8", VA = "0x7732A8")]
	public void showTestPetscii()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x7732AC", Offset = "0x7732AC", VA = "0x7732AC")]
	public void showPetscii(string filename, int bufferId)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x7732B0", Offset = "0x7732B0", VA = "0x7732B0")]
	public void exitPetsciiMode(int bufferId)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x7732B4", Offset = "0x7732B4", VA = "0x7732B4")]
	public void setZeppelinMode()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x773350", Offset = "0x773350", VA = "0x773350")]
	public void startScanAnim(string header)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x7734A8", Offset = "0x7734A8", VA = "0x7734A8")]
	public void endScanAnim()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x773570", Offset = "0x773570", VA = "0x773570")]
	private bool scanAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x7736C8", Offset = "0x7736C8", VA = "0x7736C8")]
	public Computer()
	{
	}
}
[Token(Token = "0x200000F")]
public class Actor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200020F")]
	public enum ActorType
	{
		[Token(Token = "0x40011B9")]
		Rotator,
		[Token(Token = "0x40011BA")]
		Button,
		[Token(Token = "0x40011BB")]
		Switch,
		[Token(Token = "0x40011BC")]
		Knob,
		[Token(Token = "0x40011BD")]
		Linear,
		[Token(Token = "0x40011BE")]
		RotaKnob,
		[Token(Token = "0x40011BF")]
		Crank,
		[Token(Token = "0x40011C0")]
		Tablet,
		[Token(Token = "0x40011C1")]
		Jack
	}

	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C4E8", Offset = "0x54C4E8")]
	private sealed class <_Action>d__118 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x17000130")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x8AE34C", Offset = "0x8AE34C", VA = "0x8AE34C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x8AE3B4", Offset = "0x8AE3B4", VA = "0x8AE3B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x8AB928", Offset = "0x8AB928", VA = "0x8AB928")]
		[DebuggerHidden]
		public <_Action>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x8ADBD0", Offset = "0x8ADBD0", VA = "0x8ADBD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x8ADBD4", Offset = "0x8ADBD4", VA = "0x8ADBD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x8AE354", Offset = "0x8AE354", VA = "0x8AE354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C4F8", Offset = "0x54C4F8")]
	private sealed class <_ActionButton>d__119 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x17000132")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600153A")]
			[Address(RVA = "0x8AE884", Offset = "0x8AE884", VA = "0x8AE884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0x8AE8EC", Offset = "0x8AE8EC", VA = "0x8AE8EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x8AB9C4", Offset = "0x8AB9C4", VA = "0x8AB9C4")]
		[DebuggerHidden]
		public <_ActionButton>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x8AE418", Offset = "0x8AE418", VA = "0x8AE418", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x8AE41C", Offset = "0x8AE41C", VA = "0x8AE41C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x8AE88C", Offset = "0x8AE88C", VA = "0x8AE88C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000212")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C508", Offset = "0x54C508")]
	private sealed class <_ActionLinear>d__120 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <variableLower>5__2;

		[Token(Token = "0x17000134")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x8B079C", Offset = "0x8B079C", VA = "0x8B079C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x8B0804", Offset = "0x8B0804", VA = "0x8B0804", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x8ABA60", Offset = "0x8ABA60", VA = "0x8ABA60")]
		[DebuggerHidden]
		public <_ActionLinear>d__120(int <>1__state)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x8B0038", Offset = "0x8B0038", VA = "0x8B0038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x8B003C", Offset = "0x8B003C", VA = "0x8B003C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x8B07A4", Offset = "0x8B07A4", VA = "0x8B07A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C518", Offset = "0x54C518")]
	private sealed class <_ActionSwitch>d__121 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 <rootAngle>5__2;

		[Token(Token = "0x17000136")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0x8B16F8", Offset = "0x8B16F8", VA = "0x8B16F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0x8B1760", Offset = "0x8B1760", VA = "0x8B1760", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x8ABAFC", Offset = "0x8ABAFC", VA = "0x8ABAFC")]
		[DebuggerHidden]
		public <_ActionSwitch>d__121(int <>1__state)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x8B11AC", Offset = "0x8B11AC", VA = "0x8B11AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x8B11B0", Offset = "0x8B11B0", VA = "0x8B11B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x8B1700", Offset = "0x8B1700", VA = "0x8B1700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C528", Offset = "0x54C528")]
	private sealed class <_RotateSwitch>d__122 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dVal;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool notAuto;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion <sQuat>5__2;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion <eQuat>5__3;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <i>5__4;

		[Token(Token = "0x17000138")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x8B2F68", Offset = "0x8B2F68", VA = "0x8B2F68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600154E")]
			[Address(RVA = "0x8B2FD0", Offset = "0x8B2FD0", VA = "0x8B2FD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x8ABB28", Offset = "0x8ABB28", VA = "0x8ABB28")]
		[DebuggerHidden]
		public <_RotateSwitch>d__122(int <>1__state)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x8B2B34", Offset = "0x8B2B34", VA = "0x8B2B34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x8B2B38", Offset = "0x8B2B38", VA = "0x8B2B38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x8B2F70", Offset = "0x8B2F70", VA = "0x8B2F70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C538", Offset = "0x54C538")]
	private sealed class <_ActionKnob>d__124 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 <currProjecVec>5__2;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <snapProjectVec>5__3;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <moving>5__4;

		[Token(Token = "0x1700013A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x8AFF6C", Offset = "0x8AFF6C", VA = "0x8AFF6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0x8AFFD4", Offset = "0x8AFFD4", VA = "0x8AFFD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x8ABBC4", Offset = "0x8ABBC4", VA = "0x8ABBC4")]
		[DebuggerHidden]
		public <_ActionKnob>d__124(int <>1__state)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x8AF770", Offset = "0x8AF770", VA = "0x8AF770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x8AF774", Offset = "0x8AF774", VA = "0x8AF774", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x8AFF74", Offset = "0x8AFF74", VA = "0x8AFF74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C548", Offset = "0x54C548")]
	private sealed class <_ActionRotaKnob>d__125 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x1700013C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x8B10E0", Offset = "0x8B10E0", VA = "0x8B10E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x8B1148", Offset = "0x8B1148", VA = "0x8B1148", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x8ABC60", Offset = "0x8ABC60", VA = "0x8ABC60")]
		[DebuggerHidden]
		public <_ActionRotaKnob>d__125(int <>1__state)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x8B0868", Offset = "0x8B0868", VA = "0x8B0868", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x8B086C", Offset = "0x8B086C", VA = "0x8B086C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x8B10E8", Offset = "0x8B10E8", VA = "0x8B10E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C558", Offset = "0x54C558")]
	private sealed class <_ActionCrank>d__126 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 <currProjecVec>5__2;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <snapProjectVec>5__3;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <antiRot>5__4;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool <moving>5__5;

		[Token(Token = "0x1700013E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x8AEF64", Offset = "0x8AEF64", VA = "0x8AEF64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x8AEFCC", Offset = "0x8AEFCC", VA = "0x8AEFCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x8ABCFC", Offset = "0x8ABCFC", VA = "0x8ABCFC")]
		[DebuggerHidden]
		public <_ActionCrank>d__126(int <>1__state)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x8AE950", Offset = "0x8AE950", VA = "0x8AE950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x8AE954", Offset = "0x8AE954", VA = "0x8AE954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x8AEF6C", Offset = "0x8AEF6C", VA = "0x8AEF6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C568", Offset = "0x54C568")]
	private sealed class <_ActionTablet>d__127 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 <endOffset>5__2;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion <endRot>5__3;

		[Token(Token = "0x17000140")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0x8B1CF0", Offset = "0x8B1CF0", VA = "0x8B1CF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x8B1D58", Offset = "0x8B1D58", VA = "0x8B1D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x8ABD98", Offset = "0x8ABD98", VA = "0x8ABD98")]
		[DebuggerHidden]
		public <_ActionTablet>d__127(int <>1__state)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x8B17C4", Offset = "0x8B17C4", VA = "0x8B17C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x8B17C8", Offset = "0x8B17C8", VA = "0x8B17C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x8B1CF8", Offset = "0x8B1CF8", VA = "0x8B1CF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C578", Offset = "0x54C578")]
	private sealed class <_ActionJack>d__128 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] <colli>5__2;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <lerpIncSign>5__3;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lerpInc>5__4;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <snappedWorldToLoc>5__5;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <newOffset>5__6;

		[Token(Token = "0x17000142")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x8AF6A4", Offset = "0x8AF6A4", VA = "0x8AF6A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x8AF70C", Offset = "0x8AF70C", VA = "0x8AF70C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x8ABE34", Offset = "0x8ABE34", VA = "0x8ABE34")]
		[DebuggerHidden]
		public <_ActionJack>d__128(int <>1__state)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x8AF030", Offset = "0x8AF030", VA = "0x8AF030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x8AF034", Offset = "0x8AF034", VA = "0x8AF034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x8AF6AC", Offset = "0x8AF6AC", VA = "0x8AF6AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C588", Offset = "0x54C588")]
	private sealed class <_GoBack>d__134 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <otherStatus>5__2;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <destAngle>5__3;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <sVal>5__4;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <i>5__5;

		[Token(Token = "0x17000144")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0x8B22C0", Offset = "0x8B22C0", VA = "0x8B22C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x8B2328", Offset = "0x8B2328", VA = "0x8B2328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x8AD310", Offset = "0x8AD310", VA = "0x8AD310")]
		[DebuggerHidden]
		public <_GoBack>d__134(int <>1__state)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x8B1DBC", Offset = "0x8B1DBC", VA = "0x8B1DBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x8B1DC0", Offset = "0x8B1DC0", VA = "0x8B1DC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x8B22C8", Offset = "0x8B22C8", VA = "0x8B22C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C598", Offset = "0x54C598")]
	private sealed class <_GoBackButton>d__135 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 <sVec>5__2;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <eVec>5__3;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <i>5__4;

		[Token(Token = "0x17000146")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x8B26C4", Offset = "0x8B26C4", VA = "0x8B26C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x8B272C", Offset = "0x8B272C", VA = "0x8B272C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x8AD33C", Offset = "0x8AD33C", VA = "0x8AD33C")]
		[DebuggerHidden]
		public <_GoBackButton>d__135(int <>1__state)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x8B238C", Offset = "0x8B238C", VA = "0x8B238C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x8B2390", Offset = "0x8B2390", VA = "0x8B2390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x8B26CC", Offset = "0x8B26CC", VA = "0x8B26CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C5A8", Offset = "0x54C5A8")]
	private sealed class <_GoBackLinear>d__136 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Actor <>4__this;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 <sVec>5__2;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <eVec>5__3;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <i>5__4;

		[Token(Token = "0x17000148")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x8B2A68", Offset = "0x8B2A68", VA = "0x8B2A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600157E")]
			[Address(RVA = "0x8B2AD0", Offset = "0x8B2AD0", VA = "0x8B2AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x8AD368", Offset = "0x8AD368", VA = "0x8AD368")]
		[DebuggerHidden]
		public <_GoBackLinear>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x8B2790", Offset = "0x8B2790", VA = "0x8B2790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x8B2794", Offset = "0x8B2794", VA = "0x8B2794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x8B2A70", Offset = "0x8B2A70", VA = "0x8B2A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActorType actorType;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54CCE0", Offset = "0x54CCE0")]
	[SerializeField]
	private bool ClampRotation;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float lowerRotationLimit;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float upperRotationLimit;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x54CD4C", Offset = "0x54CD4C")]
	[SerializeField]
	private bool friction;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float frictionDelay;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float frictionSpeed;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54CDA8", Offset = "0x54CDA8")]
	[SerializeField]
	private float serviceAngle;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool useServiceAngleAsHome;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool useServiceAngleThreshold;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[SerializeField]
	private bool EDITOR_centerServiceAngleBetweenLimits;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54CE24", Offset = "0x54CE24")]
	[SerializeField]
	public float backHomeSpeed;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AnimationCurve easingCurve;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x54CE80", Offset = "0x54CE80")]
	[SerializeField]
	public string onBeingAction;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	public string onAction;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public string onContinueAction;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public string onEndAction;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public string onBackHome;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x54CEFC", Offset = "0x54CEFC")]
	[SerializeField]
	public Transform movingTransform;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public float buttonRestY;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	public float buttonOffsetY;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public float buttonEndY;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	public float linearLowerY;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public float linearStartY;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	public float linearUpperY;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public Transform secondaryPivot;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public float upperAngle;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	public float lowerAngle;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public float vectorLength;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float clockWise;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private bool isUpperAngle;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioSource audioFx;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float audioDelay;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	public Vector2 audioVolumeRange;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private Vector2 pitchRange;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AudioSource audioFxEnd;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Vector2 audioVolumeRangeEnd;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Vector2 pitchRangeEnd;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private bool audioEndStop;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	[SerializeField]
	private bool autoGoBack;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	[SerializeField]
	private bool oneWay;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private float thresholdPos;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject ActivateGobjOnEnd;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Collider ActivateColliOnEnd;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Vector3 limiteMin;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[SerializeField]
	private Vector3 limiteMax;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private float startValue;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	public Transform cockPiece;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	public Vector3 localPosOffset;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[SerializeField]
	public Vector3 localRotOffset;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	public Transform cockPieceParent;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	public Vector3 localParPosOffset;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[SerializeField]
	public Vector3 localParRotOffset;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	public Transform tertiaryPivot;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	public Transform tertiaryPivotSon;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	public Vector3 localTerSonPosOffset;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[SerializeField]
	public Vector3 localTerSonRotOffset;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private bool isVertical;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	[SerializeField]
	private bool setStartValue;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18A")]
	[SerializeField]
	private bool canStuck;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18B")]
	[SerializeField]
	private bool isStuck;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[SerializeField]
	private bool upClamp;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private float stuckAngle;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[SerializeField]
	private float interpolationDistance;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private AnimationCurve lerpCurveA;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private AnimationCurve lerpCurveB;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private Collider ActivateColliAOnBegin;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private Collider ActivateColliBOnBegin;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[SerializeField]
	private LayerMask layerMask;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	[HideInInspector]
	public int jackID;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[HideInInspector]
	public Transform trasporm;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private bool initialStatus;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float _lowerClamp;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float _upperClamp;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float _serviceAngle;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float _stuckAngle;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float value;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float prevValue;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float tabVelo;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool cando;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	private bool moving;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
	private bool serv;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EB")]
	private bool audioLaunched;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private bool tertiaryPresent;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Vector3 directionVec;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private Vector3 currDirectionVec;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Vector3 directionVecProj;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private Vector3 forwardVec;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Vector3 leftVec;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private Vector3 startAngleOffset;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Vector3 rotationEuler;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private Vector3 currRot;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Vector3 pulsantePos;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private Vector3 velo;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private Vector3 minVec;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private Vector3 maxVec;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Vector3 tertiaryUp;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float currentRotAngle;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float currentFrictionDelay;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private HandManager manager;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private CoroutineHandle coHandle;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private CoroutineHandle secondHandle;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Transform offsetPivot;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Transform helperTransform;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool buttonPosDelayed;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private GameObject secondaryPivotObj;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Quaternion restQuatertion;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private int stuckStatus;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private ActorJackSlot currentJackSlot;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private Sensor sensA;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Sensor sensB;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool lastInteractingHand;

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x8AA2B0", Offset = "0x8AA2B0", VA = "0x8AA2B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x8AA80C", Offset = "0x8AA80C", VA = "0x8AA80C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x8AB2C8", Offset = "0x8AB2C8", VA = "0x8AB2C8")]
	public void SetStatus(float val)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x8AB844", Offset = "0x8AB844", VA = "0x8AB844")]
	public void SetStuck(bool val)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x8AB860", Offset = "0x8AB860", VA = "0x8AB860")]
	public void SetStuckAngleAndClamp(float angle, bool newUpClamp)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x8AB8A4", Offset = "0x8AB8A4", VA = "0x8AB8A4")]
	public void SetStuck(int val)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x8AB8B8", Offset = "0x8AB8B8", VA = "0x8AB8B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5535B0", Offset = "0x5535B0")]
	private IEnumerator<float> _Action()
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x8AB954", Offset = "0x8AB954", VA = "0x8AB954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553614", Offset = "0x553614")]
	private IEnumerator<float> _ActionButton()
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x8AB9F0", Offset = "0x8AB9F0", VA = "0x8AB9F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553678", Offset = "0x553678")]
	private IEnumerator<float> _ActionLinear()
	{
		return null;
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x8ABA8C", Offset = "0x8ABA8C", VA = "0x8ABA8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5536DC", Offset = "0x5536DC")]
	private IEnumerator<float> _ActionSwitch()
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x8AB7B0", Offset = "0x8AB7B0", VA = "0x8AB7B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553740", Offset = "0x553740")]
	private IEnumerator<float> _RotateSwitch(float dVal, bool notAuto = true)
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x8ABB54", Offset = "0x8ABB54", VA = "0x8ABB54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5537A4", Offset = "0x5537A4")]
	private IEnumerator<float> _ActionKnob()
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x8ABBF0", Offset = "0x8ABBF0", VA = "0x8ABBF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553808", Offset = "0x553808")]
	private IEnumerator<float> _ActionRotaKnob()
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x8ABC8C", Offset = "0x8ABC8C", VA = "0x8ABC8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55386C", Offset = "0x55386C")]
	private IEnumerator<float> _ActionCrank()
	{
		return null;
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x8ABD28", Offset = "0x8ABD28", VA = "0x8ABD28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5538D0", Offset = "0x5538D0")]
	private IEnumerator<float> _ActionTablet()
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x8ABDC4", Offset = "0x8ABDC4", VA = "0x8ABDC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553934", Offset = "0x553934")]
	private IEnumerator<float> _ActionJack()
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x8ABE60", Offset = "0x8ABE60", VA = "0x8ABE60")]
	public void BeginTriggering(HandManager _manager)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x8AC0B8", Offset = "0x8AC0B8", VA = "0x8AC0B8")]
	public void EndTriggering()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x8AC1C8", Offset = "0x8AC1C8", VA = "0x8AC1C8")]
	public bool IsInteracting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x8AC1D0", Offset = "0x8AC1D0", VA = "0x8AC1D0")]
	public void BeginInteraction(HandManager _manager)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x8AC8DC", Offset = "0x8AC8DC", VA = "0x8AC8DC")]
	public void EndInteraction(bool forced)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x8AD1F0", Offset = "0x8AD1F0", VA = "0x8AD1F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553998", Offset = "0x553998")]
	private IEnumerator<float> _GoBack()
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x8AC158", Offset = "0x8AC158", VA = "0x8AC158")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5539FC", Offset = "0x5539FC")]
	private IEnumerator<float> _GoBackButton()
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x8AD260", Offset = "0x8AD260", VA = "0x8AD260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553A60", Offset = "0x553A60")]
	private IEnumerator<float> _GoBackLinear()
	{
		return null;
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x8AB614", Offset = "0x8AB614", VA = "0x8AB614")]
	private float DirToAngle(Vector3 direction, Vector3 directionReference, Vector3 projectPlaneNormal)
	{
		return default(float);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x8AD394", Offset = "0x8AD394", VA = "0x8AD394")]
	private float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x8AA774", Offset = "0x8AA774", VA = "0x8AA774")]
	private float WrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x8AD458", Offset = "0x8AD458", VA = "0x8AD458")]
	private float Easing(float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x8AD470", Offset = "0x8AD470", VA = "0x8AD470")]
	private Vector3 ClampSqrMagnitude(Vector3 vector, float maxRange)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x8AD544", Offset = "0x8AD544", VA = "0x8AD544")]
	private Vector3 ProjectOnVectorPlane(Vector3 vector, Vector3 planeNormal, float maxRange, out Vector3 sVector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x8AD764", Offset = "0x8AD764", VA = "0x8AD764")]
	private Vector3 ProjectOnVector(Vector3 vector, Vector3 onNormal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x8AD8E0", Offset = "0x8AD8E0", VA = "0x8AD8E0")]
	private float Vector3InvLerp(Vector3 a, Vector3 b, Vector3 value)
	{
		return default(float);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x8AC64C", Offset = "0x8AC64C", VA = "0x8AC64C")]
	protected object executeAction(string name, object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x8ADA30", Offset = "0x8ADA30", VA = "0x8ADA30")]
	public Actor()
	{
	}
}
[Token(Token = "0x2000010")]
public class ActorJackManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200021D")]
	public class JackState
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Actor jackActor;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int slotNumber;

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x8B3D68", Offset = "0x8B3D68", VA = "0x8B3D68")]
		public JackState()
		{
		}
	}

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public JackState[] jack;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x54D288", Offset = "0x54D288")]
	[SerializeField]
	public string onEndAction;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ActorJackSlot[] slots;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int idx;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastSlot;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> jackCount;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] jackLoc;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool completeness;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x8B3034", Offset = "0x8B3034", VA = "0x8B3034")]
	public void init(int[] jData)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x8B3458", Offset = "0x8B3458", VA = "0x8B3458")]
	public void JackTempUpdate(int jackID)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x8B3614", Offset = "0x8B3614", VA = "0x8B3614")]
	public bool GetJacks(out int[] jData)
	{
		return default(bool);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x8B36F4", Offset = "0x8B36F4", VA = "0x8B36F4")]
	public void SetJacks(int[] jData)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x8B31C8", Offset = "0x8B31C8", VA = "0x8B31C8")]
	private void SetupJacks()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x8B37AC", Offset = "0x8B37AC", VA = "0x8B37AC")]
	public void SlotUpdate(int jackID, int slotID = -1)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x8B39C4", Offset = "0x8B39C4", VA = "0x8B39C4")]
	private void RefreshList()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x8B34A0", Offset = "0x8B34A0", VA = "0x8B34A0")]
	private void CheckData()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x8B3A68", Offset = "0x8B3A68", VA = "0x8B3A68")]
	protected object executeAction(string name, object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x8B3CF8", Offset = "0x8B3CF8", VA = "0x8B3CF8")]
	public ActorJackManager()
	{
	}
}
[Token(Token = "0x2000011")]
public class ActorJackSlot : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int usedBy;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public ActorJackManager jackManager;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x8AD2D0", Offset = "0x8AD2D0", VA = "0x8AD2D0")]
	public void EndInteraction(int jackID)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x8AF67C", Offset = "0x8AF67C", VA = "0x8AF67C")]
	public void JackTempUpdate(int jackID)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x8B3D70", Offset = "0x8B3D70", VA = "0x8B3D70")]
	public ActorJackSlot()
	{
	}
}
[Token(Token = "0x2000012")]
public class Axispraxis : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 minMax;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform offsetSensor;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform secondaryPivot;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform snapFather;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Sensor sensor;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HandManager manager;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HandManager[] managers;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool hasStarted;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool outOfRange;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 actualRot;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 directionVec;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float prevAngle;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float currentAngle;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x8B73C8", Offset = "0x8B73C8", VA = "0x8B73C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x8B73D0", Offset = "0x8B73D0", VA = "0x8B73D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x8B749C", Offset = "0x8B749C", VA = "0x8B749C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x8B74AC", Offset = "0x8B74AC", VA = "0x8B74AC")]
	private void OrientPivot()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x8B78C8", Offset = "0x8B78C8", VA = "0x8B78C8")]
	public void OrientPalm(bool isRight)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x8B7AB4", Offset = "0x8B7AB4", VA = "0x8B7AB4")]
	public void ActionStart()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x8B7D38", Offset = "0x8B7D38", VA = "0x8B7D38")]
	public void ActionEnd()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x8B772C", Offset = "0x8B772C", VA = "0x8B772C")]
	private float DirToAngle(Vector3 direction, Vector3 directionReference, Vector3 projectPlaneNormal)
	{
		return default(float);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x8B7A5C", Offset = "0x8B7A5C", VA = "0x8B7A5C")]
	private HandManager GetManager(bool isRight)
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x8B7E20", Offset = "0x8B7E20", VA = "0x8B7E20")]
	public Axispraxis()
	{
	}
}
[Token(Token = "0x2000013")]
public class FloorManager : MonoBehaviour
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FloorManager m;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Axis2D Laxys;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRInput.Axis2D Raxys;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform liftBase;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pitBase;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 Ylimit;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource floorSound;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float asse;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 pos;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 velov;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool resetta;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool halt;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float velo;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float delta;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float posOffset;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float ampli;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float relY;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool rightActive;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool leftActive;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentActiveFloor;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool locked;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1025EA8", Offset = "0x1025EA8", VA = "0x1025EA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1026024", Offset = "0x1026024", VA = "0x1026024")]
	public int GetCurrentActiveFloor()
	{
		return default(int);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x102602C", Offset = "0x102602C", VA = "0x102602C")]
	public void ActivateFloor(int floorNumber)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x102614C", Offset = "0x102614C", VA = "0x102614C")]
	public void AllowUpdate(bool val)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x102615C", Offset = "0x102615C", VA = "0x102615C")]
	public void RightStatus(bool val)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1026178", Offset = "0x1026178", VA = "0x1026178")]
	public void LeftStatus(bool val)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1026188", Offset = "0x1026188", VA = "0x1026188")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x10263B0", Offset = "0x10263B0", VA = "0x10263B0")]
	private void Translate()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1026120", Offset = "0x1026120", VA = "0x1026120")]
	public float GetYPos()
	{
		return default(float);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x102654C", Offset = "0x102654C", VA = "0x102654C")]
	public void SetYPos(float value)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1026554", Offset = "0x1026554", VA = "0x1026554")]
	public void SetOffset(float val)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x102659C", Offset = "0x102659C", VA = "0x102659C")]
	public float GetOffset()
	{
		return default(float);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x10265A4", Offset = "0x10265A4", VA = "0x10265A4")]
	public FloorManager()
	{
	}
}
[Token(Token = "0x2000014")]
public class HandManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C5B8", Offset = "0x54C5B8")]
	private sealed class <>c
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Sensor> <>9__54_0;

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x730C98", Offset = "0x730C98", VA = "0x730C98")]
		public <>c()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x730CA0", Offset = "0x730CA0", VA = "0x730CA0")]
		internal bool <RemoveNullsAndClearPose>b__54_0(Sensor item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C5C8", Offset = "0x54C5C8")]
	private sealed class <_resetHand>d__57 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HandManager <>4__this;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <i>5__2;

		[Token(Token = "0x1700014A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x730F74", Offset = "0x730F74", VA = "0x730F74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x730FDC", Offset = "0x730FDC", VA = "0x730FDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x730954", Offset = "0x730954", VA = "0x730954")]
		[DebuggerHidden]
		public <_resetHand>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x730D0C", Offset = "0x730D0C", VA = "0x730D0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x730D10", Offset = "0x730D10", VA = "0x730D10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x730F7C", Offset = "0x730F7C", VA = "0x730F7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRInput.Controller m_controller;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRInput.Axis1D trigMask;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform handTrack;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3 interactionOffset;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public HandSensor handSensor;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float lowerTriggerThreshold;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float upperTriggerThreshold;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform handPivot;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform indexTransform;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform bonesRoot;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform farHandTrack;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PoseManager poseManager;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material handMaterial;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AnimationCurve easing;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isRightHand;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	public string onContinueAction;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public string onEndAction;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform destTransform;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Sensor> nearSensors;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Sensor currentSensor;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool triggered;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool interacting;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool resetting;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool hadNulls;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Color halfGreen;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Color fullGreen;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Color fullBlack;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int idx;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int curIdx;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int currentPose;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int destPose;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int floorHandId;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float dist;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float curdist;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float trigAmount;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float trigEased;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float poseTimer;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float rotaMitigationFactor;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float inverseUpperTriggerThreshold;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float lrpTrigAmount;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 tempPos;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 handSnapPlaneProjection;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Quaternion tempRot;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Quaternion handSnappedRotation;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Quaternion handSnappedMitigation;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] handBones;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool xPressed;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float presTimer;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool meshShowing;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x72F0DC", Offset = "0x72F0DC", VA = "0x72F0DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x72F1A4", Offset = "0x72F1A4", VA = "0x72F1A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x72F2E0", Offset = "0x72F2E0", VA = "0x72F2E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x72F794", Offset = "0x72F794", VA = "0x72F794")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x730798", Offset = "0x730798", VA = "0x730798")]
	public void showHandsMesh(bool state)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x730594", Offset = "0x730594", VA = "0x730594")]
	public void RemoveNullsAndClearPose()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x7303FC", Offset = "0x7303FC", VA = "0x7303FC")]
	public void ClearSnap(bool forced = false)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x7306A4", Offset = "0x7306A4", VA = "0x7306A4")]
	public void ClearSnapSilent()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x7308E4", Offset = "0x7308E4", VA = "0x7308E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553AC4", Offset = "0x553AC4")]
	private IEnumerator<float> _resetHand()
	{
		return null;
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x73018C", Offset = "0x73018C", VA = "0x73018C")]
	private bool FindNearestSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x730980", Offset = "0x730980", VA = "0x730980")]
	public void AddSensor(Sensor currSensor)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x730AA0", Offset = "0x730AA0", VA = "0x730AA0")]
	public void removeSensor(Sensor currSensor)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x730A20", Offset = "0x730A20", VA = "0x730A20")]
	private void UpdateHandHilightStatus()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x72F504", Offset = "0x72F504", VA = "0x72F504")]
	protected object executeAction(string name, object[] args)
	{
		return null;
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x730B10", Offset = "0x730B10", VA = "0x730B10")]
	public HandManager()
	{
	}
}
[Token(Token = "0x2000015")]
public class HandSensor : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public HandManager handMaster;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x731040", Offset = "0x731040", VA = "0x731040")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x7311E8", Offset = "0x7311E8", VA = "0x7311E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x73126C", Offset = "0x73126C", VA = "0x73126C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x7312F0", Offset = "0x7312F0", VA = "0x7312F0")]
	public HandSensor()
	{
	}
}
[Token(Token = "0x2000016")]
public class HandsHelper : MonoBehaviour
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HandsHelper m;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool lastInteractingHand;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool canInteract;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<HandManager> handManagers;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x731948", Offset = "0x731948", VA = "0x731948")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x72F248", Offset = "0x72F248", VA = "0x72F248")]
	public void AddHandManager(HandManager manager)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x731A4C", Offset = "0x731A4C", VA = "0x731A4C")]
	public void AbortHandInteraction(bool val)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x731B08", Offset = "0x731B08", VA = "0x731B08")]
	public void AllowInteraction(bool val)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x731BC4", Offset = "0x731BC4", VA = "0x731BC4")]
	public void ForceRemoveSensorsToOther(Sensor sensA, Sensor sensB, HandManager manag)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x731D04", Offset = "0x731D04", VA = "0x731D04")]
	public HandsHelper()
	{
	}
}
[Token(Token = "0x2000017")]
public class HangarVertexScroller : MonoBehaviour
{
	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int hangarVertexOffsetID;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector4 VertexOffset;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x731D74", Offset = "0x731D74", VA = "0x731D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x731DCC", Offset = "0x731DCC", VA = "0x731DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x731E18", Offset = "0x731E18", VA = "0x731E18")]
	public HangarVertexScroller()
	{
	}
}
[Token(Token = "0x2000018")]
public class LightingManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000220")]
	public class VLightState
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 VLightPosition;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color VLightColor;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float VLightDistance;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float VLightMaxIntensity;

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x6C44D8", Offset = "0x6C44D8", VA = "0x6C44D8")]
		public VLightState()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000221")]
	public class VLightElement
	{
		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform VLightTransform;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float VLightPower;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int VLightDefaultState;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int VLightCurrentState;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VLightState[] State;

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x6C44C8", Offset = "0x6C44C8", VA = "0x6C44C8")]
		public VLightElement()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000222")]
	public class LightingScenario
	{
		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color CameraClearColor;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReflectionProbe RefleProbe;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 RefleProbeMinMax;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool RealLightActive;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light RealLight;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color RealLightColor;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float RealLightPower;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float RealLightMaxIntensity;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 RealLightPosition;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion RealLightRotation;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public LayerMask RealLightCullingMask;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float RealLightSize;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public DepthTexture RealLightShadowProjector;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int RealLightShadowSize;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5534A0", Offset = "0x5534A0")]
		public Color NoVlightLMColor;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float NoVlightLMPower;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float NoVlightLMMaxIntensity;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5534B4", Offset = "0x5534B4")]
		public float SingleVlightLMPower;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float SingleVlightLMMaxIntensity;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5534C8", Offset = "0x5534C8")]
		public float MultiVlightLMPower;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float MultiVlightLMMaxIntensity;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5534DC", Offset = "0x5534DC")]
		public VLightElement[] vLightElement;

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x6C439C", Offset = "0x6C439C", VA = "0x6C439C")]
		public LightingScenario()
		{
		}
	}

	[Token(Token = "0x2000223")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C5D8", Offset = "0x54C5D8")]
	private sealed class <_SetLightScenario>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightingManager <>4__this;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _scenario;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <_tempo>5__2;

		[Token(Token = "0x1700014C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x6C40AC", Offset = "0x6C40AC", VA = "0x6C40AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700014D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x6C4114", Offset = "0x6C4114", VA = "0x6C4114", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x6C202C", Offset = "0x6C202C", VA = "0x6C202C")]
		[DebuggerHidden]
		public <_SetLightScenario>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x6C3F30", Offset = "0x6C3F30", VA = "0x6C3F30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x6C3F34", Offset = "0x6C3F34", VA = "0x6C3F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x6C40B4", Offset = "0x6C40B4", VA = "0x6C40B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C5E8", Offset = "0x54C5E8")]
	private sealed class <_UpdateLiftWindow>d__35 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LightingManager <>4__this;

		[Token(Token = "0x1700014E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x6C42D0", Offset = "0x6C42D0", VA = "0x6C42D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x6C4338", Offset = "0x6C4338", VA = "0x6C4338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x6C20C8", Offset = "0x6C20C8", VA = "0x6C20C8")]
		[DebuggerHidden]
		public <_UpdateLiftWindow>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x6C4178", Offset = "0x6C4178", VA = "0x6C4178", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x6C417C", Offset = "0x6C417C", VA = "0x6C417C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x6C42D8", Offset = "0x6C42D8", VA = "0x6C42D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LightingManager m;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x54D404", Offset = "0x54D404")]
	public int currentScenario;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool scenarioStatus;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x54D428", Offset = "0x54D428")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x54D428", Offset = "0x54D428")]
	public LightingScenario[] lightingScenario;

	[Token(Token = "0x4000191")]
	private const int vlightsLen = 6;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int tempCurStateIdx;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int index;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int vertexLightsPosID;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lightsColorID;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lightsDistancesID;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int lightsPowerID;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lightmapVectorID;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float tempPower;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4[] vLightsPos;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector4[] colorToVector;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4[] lightmapVector;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] lightDistance;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] lightPower;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool canDo;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private CoroutineHandle coHandle;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera gameCamera;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x6C0FA8", Offset = "0x6C0FA8", VA = "0x6C0FA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x6C10AC", Offset = "0x6C10AC", VA = "0x6C10AC")]
	private void ShaderDataSetup()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x6C11CC", Offset = "0x6C11CC", VA = "0x6C11CC")]
	private void RefreshShaderArrayVLight()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x6C1224", Offset = "0x6C1224", VA = "0x6C1224")]
	private void RefreshAllLightMap()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x6C14EC", Offset = "0x6C14EC", VA = "0x6C14EC")]
	private void SetLightMapPower(float val)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x6C16B0", Offset = "0x6C16B0", VA = "0x6C16B0")]
	private void RefreshAllVLights()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x6C1A68", Offset = "0x6C1A68", VA = "0x6C1A68")]
	private void SetVLightPower(int idx, float val)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x6C1C18", Offset = "0x6C1C18", VA = "0x6C1C18")]
	private void RefreshRealLightPower()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x6C1EA0", Offset = "0x6C1EA0", VA = "0x6C1EA0")]
	private void RefreshCameraSettings()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x6C1F50", Offset = "0x6C1F50", VA = "0x6C1F50")]
	public void ServiceInternal(int val)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x6C1FAC", Offset = "0x6C1FAC", VA = "0x6C1FAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553B28", Offset = "0x553B28")]
	private IEnumerator<float> _SetLightScenario(int _scenario)
	{
		return null;
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x6C2058", Offset = "0x6C2058", VA = "0x6C2058")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553B8C", Offset = "0x553B8C")]
	private IEnumerator<float> _UpdateLiftWindow()
	{
		return null;
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x6C20F4", Offset = "0x6C20F4", VA = "0x6C20F4")]
	public void SetScenarioReflectionProbe(int _scenario, ReflectionProbe rProbe, bool autosetScenario)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x6BC478", Offset = "0x6BC478", VA = "0x6BC478")]
	public void SetLightScenario(int _scenario)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x6C2148", Offset = "0x6C2148", VA = "0x6C2148")]
	public void SetSunPower(float val)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x6C2190", Offset = "0x6C2190", VA = "0x6C2190")]
	public void ShowCristallo(float val)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x6C2338", Offset = "0x6C2338", VA = "0x6C2338")]
	public void ShowLowerPortholeLight(float val)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x6C2638", Offset = "0x6C2638", VA = "0x6C2638")]
	public void ShowUpperPortholeLight(float val)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x6C2938", Offset = "0x6C2938", VA = "0x6C2938")]
	public void StartUpdateLiftWindow()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x6C29BC", Offset = "0x6C29BC", VA = "0x6C29BC")]
	public void StopUpdateLiftWindow()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x6C2B38", Offset = "0x6C2B38", VA = "0x6C2B38")]
	public void SetMonitorPower(int id, bool power)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x6C2FBC", Offset = "0x6C2FBC", VA = "0x6C2FBC")]
	public bool GetMonitorPower(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x6C30C4", Offset = "0x6C30C4", VA = "0x6C30C4")]
	public void SetRadarPower(float val)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x6C3214", Offset = "0x6C3214", VA = "0x6C3214")]
	public float GetRadarPower()
	{
		return default(float);
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x6C327C", Offset = "0x6C327C", VA = "0x6C327C")]
	public void SetFinderPower(bool power)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x6C33E8", Offset = "0x6C33E8", VA = "0x6C33E8")]
	public bool GetFinderPower()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x6C3460", Offset = "0x6C3460", VA = "0x6C3460")]
	public void SetBatteriaPower(bool power)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x6C35CC", Offset = "0x6C35CC", VA = "0x6C35CC")]
	public bool GetBatteriaPower()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x6C3644", Offset = "0x6C3644", VA = "0x6C3644")]
	public void SetMainDoorPower(bool power)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x6C37B0", Offset = "0x6C37B0", VA = "0x6C37B0")]
	public bool GetMainDoorPower()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x6C3828", Offset = "0x6C3828", VA = "0x6C3828")]
	public void SetLanternaPower(bool power)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x6C3848", Offset = "0x6C3848", VA = "0x6C3848")]
	public void SetLanternaPower(bool power, Color col)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x6C38A8", Offset = "0x6C38A8", VA = "0x6C38A8")]
	public bool GetLanternaPower()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x6C3904", Offset = "0x6C3904", VA = "0x6C3904")]
	public void SetLiftCeilingLightPower(float power)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x6BFFE4", Offset = "0x6BFFE4", VA = "0x6BFFE4")]
	public void SetLiftCeilingLightPower(float power, Color col)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x6C3918", Offset = "0x6C3918", VA = "0x6C3918")]
	public float GetLiftCeilingLightStoredPower()
	{
		return default(float);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x6C396C", Offset = "0x6C396C", VA = "0x6C396C")]
	public Color GetLiftCeilingLightStoredColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x6C39C8", Offset = "0x6C39C8", VA = "0x6C39C8")]
	public float GetLiftCeilingLightActualPower()
	{
		return default(float);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x6C3ABC", Offset = "0x6C3ABC", VA = "0x6C3ABC")]
	public Color GetLiftCeilingLightActualColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x6C3B38", Offset = "0x6C3B38", VA = "0x6C3B38")]
	public void SetUpperCPLeftLanterPower(bool power)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x6C3CB0", Offset = "0x6C3CB0", VA = "0x6C3CB0")]
	public bool GetUpperCPLeftLanterPower()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x6C3D30", Offset = "0x6C3D30", VA = "0x6C3D30")]
	public void SetUpperCPRightLanterPower(bool power)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x6C3EA8", Offset = "0x6C3EA8", VA = "0x6C3EA8")]
	public bool GetUpperCPRightLanterPower()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x6C3F28", Offset = "0x6C3F28", VA = "0x6C3F28")]
	public LightingManager()
	{
	}
}
[Token(Token = "0x2000019")]
[ExecuteInEditMode]
public class LuxManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000225")]
	public enum CockpitVerlit
	{
		[Token(Token = "0x4001238")]
		Radar,
		[Token(Token = "0x4001239")]
		Finder,
		[Token(Token = "0x400123A")]
		Monitor1,
		[Token(Token = "0x400123B")]
		Monitor2,
		[Token(Token = "0x400123C")]
		Monitor3,
		[Token(Token = "0x400123D")]
		Gemma
	}

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LuxManager m;

	[Token(Token = "0x40001A3")]
	private const int rimbalzo = 4;

	[Token(Token = "0x40001A4")]
	private const float maxSun = 2f;

	[Token(Token = "0x40001A5")]
	private const float minRefl = 0.2f;

	[Token(Token = "0x40001A6")]
	private const float maxRefl = 0.4f;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool versioneA;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light sunLight;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sunlightPower;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReflectionProbe mainReflProbe;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float roughnesModifier;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] vertexLightsTrn;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color[] lightsColor;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] lightsDistances;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float[] lightsPower;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float[] lightsPowerDefault;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color[] lightmapColor;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float[] lightmapPower;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float[] lightmapPowerDefault;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector4[] vertexLightsPos;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector4[] colorToVectors;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector4[] lightmapVector;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] tempVal;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material lampa;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int roughnesModifierID;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int vertexLightsPosID;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int lightsColorID;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int lightsDistancesID;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int lightsPowerID;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int lightmapVectorID;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int index;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int lightsNumber;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x6C99F4", Offset = "0x6C99F4", VA = "0x6C99F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x6C9B08", Offset = "0x6C9B08", VA = "0x6C9B08")]
	private void Setup()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x6CA1F8", Offset = "0x6CA1F8", VA = "0x6CA1F8")]
	public float GetSunlightPower()
	{
		return default(float);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x6CA200", Offset = "0x6CA200", VA = "0x6CA200")]
	public void SetSunlight(float val)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x6CA0FC", Offset = "0x6CA0FC", VA = "0x6CA0FC")]
	private void RefreshSunlight()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x6CA3D0", Offset = "0x6CA3D0", VA = "0x6CA3D0")]
	public float GetLanternPower()
	{
		return default(float);
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x6CA408", Offset = "0x6CA408", VA = "0x6CA408")]
	public void SetLantern(Color colo)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x6CA444", Offset = "0x6CA444", VA = "0x6CA444")]
	public void SetLantern(float val)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x6CA47C", Offset = "0x6CA47C", VA = "0x6CA47C")]
	public void SetLantern(Color colo, float val)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x6CA4D0", Offset = "0x6CA4D0", VA = "0x6CA4D0")]
	public float GetSalvalavita()
	{
		return default(float);
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x6CA504", Offset = "0x6CA504", VA = "0x6CA504")]
	public void SetSalvalavita(Color colo)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x6CA53C", Offset = "0x6CA53C", VA = "0x6CA53C")]
	public void SetSalvalavita(float val)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x6CA570", Offset = "0x6CA570", VA = "0x6CA570")]
	public void SetSalvalavita(Color colo, float val)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x6CA208", Offset = "0x6CA208", VA = "0x6CA208")]
	private void RefreshLightMap()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x6CA5BC", Offset = "0x6CA5BC", VA = "0x6CA5BC")]
	public float GetVerlitPower(CockpitVerlit cockpitVerlit)
	{
		return default(float);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x6CA5F8", Offset = "0x6CA5F8", VA = "0x6CA5F8")]
	public void SetVerlit(CockpitVerlit cockpitVerlit, float val, bool refreshColorAndPosition = false)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x6C9C38", Offset = "0x6C9C38", VA = "0x6C9C38")]
	private void RefreshVertexLights(bool refreshColorAndPosition = false)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x6CA638", Offset = "0x6CA638", VA = "0x6CA638")]
	public void TurnAllOff()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x6CA6D8", Offset = "0x6CA6D8", VA = "0x6CA6D8")]
	public LuxManager()
	{
	}
}
[Token(Token = "0x200001A")]
public class Parenteer : MonoBehaviour
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform element;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x80D024", Offset = "0x80D024", VA = "0x80D024")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x80D104", Offset = "0x80D104", VA = "0x80D104")]
	public Parenteer()
	{
	}
}
[Token(Token = "0x200001B")]
public class PoseManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000226")]
	public class BonePose
	{
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool selected;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion[] quaternions;

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x80DF38", Offset = "0x80DF38", VA = "0x80DF38")]
		public BonePose()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000227")]
	public class BonePoses
	{
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<BonePose> elems;

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x80DF40", Offset = "0x80DF40", VA = "0x80DF40")]
		public BonePoses()
		{
		}
	}

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BonePoses bonePoses;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int defaultRestPose;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int defaultGrabPose;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x80DF28", Offset = "0x80DF28", VA = "0x80DF28")]
	public PoseManager()
	{
	}
}
[Token(Token = "0x200001C")]
public class Poser : MonoBehaviour
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int areaPose;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x80DFB0", Offset = "0x80DFB0", VA = "0x80DFB0")]
	public Poser()
	{
	}
}
[Token(Token = "0x200001D")]
public class RProbeManager : MonoBehaviour
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool autosetScenario;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Scenario;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ReflectionProbe rProbe;

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x82B8B4", Offset = "0x82B8B4", VA = "0x82B8B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x82B90C", Offset = "0x82B90C", VA = "0x82B90C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x82B9D0", Offset = "0x82B9D0", VA = "0x82B9D0")]
	public RProbeManager()
	{
	}
}
[Token(Token = "0x200001E")]
public class Sensor : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int interMode;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float loseFactor;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float loseDistance;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int grabPose;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int areaPose;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float rotaMitigationFactor;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Transform sensorTransform;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool busy;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Axispraxis axispraxis;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform snapTransform;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform snapTransformL;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Actor actor;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float tx;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lx;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x8360AC", Offset = "0x8360AC", VA = "0x8360AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x8360D8", Offset = "0x8360D8", VA = "0x8360D8")]
	private void CalcLose()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x836124", Offset = "0x836124", VA = "0x836124")]
	public void BeginTriggering(HandManager manager)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x836230", Offset = "0x836230", VA = "0x836230")]
	public void BeginInteraction(HandManager manager)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x83632C", Offset = "0x83632C", VA = "0x83632C")]
	public void EndInteraction(bool forced)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x836354", Offset = "0x836354", VA = "0x836354")]
	public void EndTriggering()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x836390", Offset = "0x836390", VA = "0x836390")]
	public Transform GetSnapTransform(bool isRight)
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x8363D8", Offset = "0x8363D8", VA = "0x8363D8")]
	public Sensor()
	{
	}
}
[Token(Token = "0x200001F")]
public class TabletManager : MonoBehaviour
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material tabletScreenMaterial;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture texA;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture texB;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x786BC0", Offset = "0x786BC0", VA = "0x786BC0")]
	public void SetPrevPage(Texture tex)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x786C2C", Offset = "0x786C2C", VA = "0x786C2C")]
	public void SetNextPage(Texture tex)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x786C98", Offset = "0x786C98", VA = "0x786C98")]
	public void SetPages(Texture prev, Texture next)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x786D28", Offset = "0x786D28", VA = "0x786D28")]
	public void SwapPages(bool invertTransition = false)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x786E38", Offset = "0x786E38", VA = "0x786E38")]
	public void SetTransitionValue(float tVal)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x786EA4", Offset = "0x786EA4", VA = "0x786EA4")]
	public TabletManager()
	{
	}
}
[Token(Token = "0x2000020")]
public static class MECExtensionMethods2
{
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C5F8", Offset = "0x54C5F8")]
	private sealed class <Delay>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToDelay;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x17000150")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x7C16B4", Offset = "0x7C16B4", VA = "0x7C16B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x7C171C", Offset = "0x7C171C", VA = "0x7C171C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x7BFB4C", Offset = "0x7BFB4C", VA = "0x7BFB4C")]
		[DebuggerHidden]
		public <Delay>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x7C1504", Offset = "0x7C1504", VA = "0x7C1504", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x7C1508", Offset = "0x7C1508", VA = "0x7C1508", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x7C16BC", Offset = "0x7C16BC", VA = "0x7C16BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C608", Offset = "0x54C608")]
	private sealed class <Delay>d__1 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<bool> condition;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x17000152")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x7C190C", Offset = "0x7C190C", VA = "0x7C190C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x7C1974", Offset = "0x7C1974", VA = "0x7C1974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x7BFBF4", Offset = "0x7BFBF4", VA = "0x7BFBF4")]
		[DebuggerHidden]
		public <Delay>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x7C1780", Offset = "0x7C1780", VA = "0x7C1780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x7C1784", Offset = "0x7C1784", VA = "0x7C1784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x7C1914", Offset = "0x7C1914", VA = "0x7C1914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C618", Offset = "0x54C618")]
	private sealed class <Delay>d__2<T> : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <>2__current;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<T, bool> condition;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x17000154")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015A9")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015AB")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A6")]
		[DebuggerHidden]
		public <Delay>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60015A7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015A8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AA")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C628", Offset = "0x54C628")]
	private sealed class <DelayFrames>d__3 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int framesToDelay;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x17000156")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x7C1B58", Offset = "0x7C1B58", VA = "0x7C1B58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x7C1BC0", Offset = "0x7C1BC0", VA = "0x7C1BC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x7BFCA0", Offset = "0x7BFCA0", VA = "0x7BFCA0")]
		[DebuggerHidden]
		public <DelayFrames>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x7C19D8", Offset = "0x7C19D8", VA = "0x7C19D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x7C19DC", Offset = "0x7C19DC", VA = "0x7C19DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x7C1B60", Offset = "0x7C1B60", VA = "0x7C1B60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C638", Offset = "0x54C638")]
	private sealed class <CancelWith>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x17000158")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x7C0E2C", Offset = "0x7C0E2C", VA = "0x7C0E2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x7C0E94", Offset = "0x7C0E94", VA = "0x7C0E94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x7BFD48", Offset = "0x7BFD48", VA = "0x7BFD48")]
		[DebuggerHidden]
		public <CancelWith>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x7C0C08", Offset = "0x7C0C08", VA = "0x7C0C08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x7C0C0C", Offset = "0x7C0C0C", VA = "0x7C0C0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x7C0E34", Offset = "0x7C0E34", VA = "0x7C0E34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C648", Offset = "0x54C648")]
	private sealed class <CancelWith>d__5 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject1;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject gameObject2;

		[Token(Token = "0x1700015A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x7C115C", Offset = "0x7C115C", VA = "0x7C115C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x7C11C4", Offset = "0x7C11C4", VA = "0x7C11C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x7BFDF8", Offset = "0x7BFDF8", VA = "0x7BFDF8")]
		[DebuggerHidden]
		public <CancelWith>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x7C0EF8", Offset = "0x7C0EF8", VA = "0x7C0EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x7C0EFC", Offset = "0x7C0EFC", VA = "0x7C0EFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x7C1164", Offset = "0x7C1164", VA = "0x7C1164", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C658", Offset = "0x54C658")]
	private sealed class <CancelWith>d__6<T> : IEnumerator<float>, IEnumerator, IDisposable where T : MonoBehaviour
	{
		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <>2__current;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T script;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject <myGO>5__2;

		[Token(Token = "0x1700015C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015C1")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015C3")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015BE")]
		[DebuggerHidden]
		public <CancelWith>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60015BF")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015C0")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C2")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C668", Offset = "0x54C668")]
	private sealed class <CancelWith>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<bool> condition;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x1700015E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x7C1438", Offset = "0x7C1438", VA = "0x7C1438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x7C14A0", Offset = "0x7C14A0", VA = "0x7C14A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x7BFEA0", Offset = "0x7BFEA0", VA = "0x7BFEA0")]
		[DebuggerHidden]
		public <CancelWith>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x7C1228", Offset = "0x7C1228", VA = "0x7C1228", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x7C122C", Offset = "0x7C122C", VA = "0x7C122C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x7C1440", Offset = "0x7C1440", VA = "0x7C1440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C678", Offset = "0x54C678")]
	private sealed class <PauseWith>d__8 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gameObject;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x17000160")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x7C25BC", Offset = "0x7C25BC", VA = "0x7C25BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x7C2624", Offset = "0x7C2624", VA = "0x7C2624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x7BFF48", Offset = "0x7BFF48", VA = "0x7BFF48")]
		[DebuggerHidden]
		public <PauseWith>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x7C238C", Offset = "0x7C238C", VA = "0x7C238C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x7C2390", Offset = "0x7C2390", VA = "0x7C2390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x7C25C4", Offset = "0x7C25C4", VA = "0x7C25C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C688", Offset = "0x54C688")]
	private sealed class <PauseWith>d__9 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gameObject1;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject2;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x17000162")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x7C28F8", Offset = "0x7C28F8", VA = "0x7C28F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0x7C2960", Offset = "0x7C2960", VA = "0x7C2960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x7BFFF8", Offset = "0x7BFFF8", VA = "0x7BFFF8")]
		[DebuggerHidden]
		public <PauseWith>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x7C2688", Offset = "0x7C2688", VA = "0x7C2688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x7C268C", Offset = "0x7C268C", VA = "0x7C268C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x7C2900", Offset = "0x7C2900", VA = "0x7C2900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C698", Offset = "0x54C698")]
	private sealed class <PauseWith>d__10<T> : IEnumerator<float>, IEnumerator, IDisposable where T : MonoBehaviour
	{
		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <>2__current;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T script;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject <myGO>5__2;

		[Token(Token = "0x17000164")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015D9")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015DB")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D6")]
		[DebuggerHidden]
		public <PauseWith>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60015D7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015D8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DA")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C6A8", Offset = "0x54C6A8")]
	private sealed class <PauseWith>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<bool> condition;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x17000166")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0x7C22C0", Offset = "0x7C22C0", VA = "0x7C22C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x7C2328", Offset = "0x7C2328", VA = "0x7C2328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x7C00A0", Offset = "0x7C00A0", VA = "0x7C00A0")]
		[DebuggerHidden]
		public <PauseWith>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x7C20B0", Offset = "0x7C20B0", VA = "0x7C20B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x7C20B4", Offset = "0x7C20B4", VA = "0x7C20B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x7C22C8", Offset = "0x7C22C8", VA = "0x7C22C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C6B8", Offset = "0x54C6B8")]
	private sealed class <KillWith>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineHandle otherCoroutine;

		[Token(Token = "0x17000168")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x7C1FE4", Offset = "0x7C1FE4", VA = "0x7C1FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x7C204C", Offset = "0x7C204C", VA = "0x7C204C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x7C014C", Offset = "0x7C014C", VA = "0x7C014C")]
		[DebuggerHidden]
		public <KillWith>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x7C1E80", Offset = "0x7C1E80", VA = "0x7C1E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x7C1E84", Offset = "0x7C1E84", VA = "0x7C1E84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x7C1FEC", Offset = "0x7C1FEC", VA = "0x7C1FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C6C8", Offset = "0x54C6C8")]
	private sealed class <Append>d__13 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> nextCoroutine;

		[Token(Token = "0x1700016A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0x7C090C", Offset = "0x7C090C", VA = "0x7C090C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015ED")]
			[Address(RVA = "0x7C0974", Offset = "0x7C0974", VA = "0x7C0974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x7C01F4", Offset = "0x7C01F4", VA = "0x7C01F4")]
		[DebuggerHidden]
		public <Append>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x7C0698", Offset = "0x7C0698", VA = "0x7C0698", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x7C069C", Offset = "0x7C069C", VA = "0x7C069C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x7C0914", Offset = "0x7C0914", VA = "0x7C0914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C6D8", Offset = "0x54C6D8")]
	private sealed class <Append>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action onDone;

		[Token(Token = "0x1700016C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015F1")]
			[Address(RVA = "0x7C0B3C", Offset = "0x7C0B3C", VA = "0x7C0B3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015F3")]
			[Address(RVA = "0x7C0BA4", Offset = "0x7C0BA4", VA = "0x7C0BA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x7C029C", Offset = "0x7C029C", VA = "0x7C029C")]
		[DebuggerHidden]
		public <Append>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x7C09D8", Offset = "0x7C09D8", VA = "0x7C09D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x7C09DC", Offset = "0x7C09DC", VA = "0x7C09DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x7C0B44", Offset = "0x7C0B44", VA = "0x7C0B44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C6E8", Offset = "0x54C6E8")]
	private sealed class <Prepend>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> lastCoroutine;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x1700016E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x7C2C4C", Offset = "0x7C2C4C", VA = "0x7C2C4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0x7C2CB4", Offset = "0x7C2CB4", VA = "0x7C2CB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x7C0344", Offset = "0x7C0344", VA = "0x7C0344")]
		[DebuggerHidden]
		public <Prepend>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x7C29C4", Offset = "0x7C29C4", VA = "0x7C29C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x7C29C8", Offset = "0x7C29C8", VA = "0x7C29C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x7C2C54", Offset = "0x7C2C54", VA = "0x7C2C54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C6F8", Offset = "0x54C6F8")]
	private sealed class <Prepend>d__16 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onStart;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x17000170")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0x7C2E8C", Offset = "0x7C2E8C", VA = "0x7C2E8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x7C2EF4", Offset = "0x7C2EF4", VA = "0x7C2EF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x7C03EC", Offset = "0x7C03EC", VA = "0x7C03EC")]
		[DebuggerHidden]
		public <Prepend>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x7C2D18", Offset = "0x7C2D18", VA = "0x7C2D18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x7C2D1C", Offset = "0x7C2D1C", VA = "0x7C2D1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x7C2E94", Offset = "0x7C2E94", VA = "0x7C2E94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C708", Offset = "0x54C708")]
	private sealed class <Superimpose>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutineA;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Timing instance;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator<float> coroutineB;

		[Token(Token = "0x17000172")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001603")]
			[Address(RVA = "0x7C3824", Offset = "0x7C3824", VA = "0x7C3824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0x7C388C", Offset = "0x7C388C", VA = "0x7C388C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x7C051C", Offset = "0x7C051C", VA = "0x7C051C")]
		[DebuggerHidden]
		public <Superimpose>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x7C3210", Offset = "0x7C3210", VA = "0x7C3210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x7C3214", Offset = "0x7C3214", VA = "0x7C3214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x7C382C", Offset = "0x7C382C", VA = "0x7C382C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C718", Offset = "0x54C718")]
	private sealed class <Hijack>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<float, float> newReturn;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x17000174")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0x7C1DB4", Offset = "0x7C1DB4", VA = "0x7C1DB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600160B")]
			[Address(RVA = "0x7C1E1C", Offset = "0x7C1E1C", VA = "0x7C1E1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x7C05C4", Offset = "0x7C05C4", VA = "0x7C05C4")]
		[DebuggerHidden]
		public <Hijack>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x7C1C24", Offset = "0x7C1C24", VA = "0x7C1C24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x7C1C28", Offset = "0x7C1C28", VA = "0x7C1C28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x7C1DBC", Offset = "0x7C1DBC", VA = "0x7C1DBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C728", Offset = "0x54C728")]
	private sealed class <RerouteExceptions>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator<float> coroutine;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Exception> exceptionHandler;

		[Token(Token = "0x17000176")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0x7C3144", Offset = "0x7C3144", VA = "0x7C3144", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x7C31AC", Offset = "0x7C31AC", VA = "0x7C31AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x7C066C", Offset = "0x7C066C", VA = "0x7C066C")]
		[DebuggerHidden]
		public <RerouteExceptions>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x7C2F58", Offset = "0x7C2F58", VA = "0x7C2F58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x7C2F5C", Offset = "0x7C2F5C", VA = "0x7C2F5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x7C314C", Offset = "0x7C314C", VA = "0x7C314C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x7BFACC", Offset = "0x7BFACC", VA = "0x7BFACC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553BF0", Offset = "0x553BF0")]
	public static IEnumerator<float> Delay(this IEnumerator<float> coroutine, float timeToDelay)
	{
		return null;
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x7BFB78", Offset = "0x7BFB78", VA = "0x7BFB78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553C64", Offset = "0x553C64")]
	public static IEnumerator<float> Delay(this IEnumerator<float> coroutine, Func<bool> condition)
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553CD8", Offset = "0x553CD8")]
	public static IEnumerator<float> Delay<T>(this IEnumerator<float> coroutine, T data, Func<T, bool> condition)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x7BFC20", Offset = "0x7BFC20", VA = "0x7BFC20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553D4C", Offset = "0x553D4C")]
	public static IEnumerator<float> DelayFrames(this IEnumerator<float> coroutine, int framesToDelay)
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x7BFCCC", Offset = "0x7BFCCC", VA = "0x7BFCCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553DC0", Offset = "0x553DC0")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x7BFD74", Offset = "0x7BFD74", VA = "0x7BFD74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553E34", Offset = "0x553E34")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, GameObject gameObject1, GameObject gameObject2)
	{
		return null;
	}

	[Token(Token = "0x60001E2")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553EA8", Offset = "0x553EA8")]
	public static IEnumerator<float> CancelWith<T>(this IEnumerator<float> coroutine, T script) where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x7BFE24", Offset = "0x7BFE24", VA = "0x7BFE24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553F1C", Offset = "0x553F1C")]
	public static IEnumerator<float> CancelWith(this IEnumerator<float> coroutine, Func<bool> condition)
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x7BFECC", Offset = "0x7BFECC", VA = "0x7BFECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x553F90", Offset = "0x553F90")]
	public static IEnumerator<float> PauseWith(this IEnumerator<float> coroutine, GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x7BFF74", Offset = "0x7BFF74", VA = "0x7BFF74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554004", Offset = "0x554004")]
	public static IEnumerator<float> PauseWith(this IEnumerator<float> coroutine, GameObject gameObject1, GameObject gameObject2)
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554078", Offset = "0x554078")]
	public static IEnumerator<float> PauseWith<T>(this IEnumerator<float> coroutine, T script) where T : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x7C0024", Offset = "0x7C0024", VA = "0x7C0024")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5540EC", Offset = "0x5540EC")]
	public static IEnumerator<float> PauseWith(this IEnumerator<float> coroutine, Func<bool> condition)
	{
		return null;
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x7C00CC", Offset = "0x7C00CC", VA = "0x7C00CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554160", Offset = "0x554160")]
	public static IEnumerator<float> KillWith(this IEnumerator<float> coroutine, CoroutineHandle otherCoroutine)
	{
		return null;
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x7C0178", Offset = "0x7C0178", VA = "0x7C0178")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5541D4", Offset = "0x5541D4")]
	public static IEnumerator<float> Append(this IEnumerator<float> coroutine, IEnumerator<float> nextCoroutine)
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x7C0220", Offset = "0x7C0220", VA = "0x7C0220")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554248", Offset = "0x554248")]
	public static IEnumerator<float> Append(this IEnumerator<float> coroutine, Action onDone)
	{
		return null;
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x7C02C8", Offset = "0x7C02C8", VA = "0x7C02C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5542BC", Offset = "0x5542BC")]
	public static IEnumerator<float> Prepend(this IEnumerator<float> coroutine, IEnumerator<float> lastCoroutine)
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x7C0370", Offset = "0x7C0370", VA = "0x7C0370")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554330", Offset = "0x554330")]
	public static IEnumerator<float> Prepend(this IEnumerator<float> coroutine, Action onStart)
	{
		return null;
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x7C0418", Offset = "0x7C0418", VA = "0x7C0418")]
	public static IEnumerator<float> Superimpose(this IEnumerator<float> coroutineA, IEnumerator<float> coroutineB)
	{
		return null;
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x7C0498", Offset = "0x7C0498", VA = "0x7C0498")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5543B4", Offset = "0x5543B4")]
	public static IEnumerator<float> Superimpose(this IEnumerator<float> coroutineA, IEnumerator<float> coroutineB, Timing instance)
	{
		return null;
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x7C0548", Offset = "0x7C0548", VA = "0x7C0548")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554428", Offset = "0x554428")]
	public static IEnumerator<float> Hijack(this IEnumerator<float> coroutine, Func<float, float> newReturn)
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x7C05F0", Offset = "0x7C05F0", VA = "0x7C05F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55449C", Offset = "0x55449C")]
	public static IEnumerator<float> RerouteExceptions(this IEnumerator<float> coroutine, Action<Exception> exceptionHandler)
	{
		return null;
	}
}
[Token(Token = "0x2000021")]
public class VibrationManager : MonoBehaviour
{
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C738", Offset = "0x54C738")]
	private sealed class <_OneShot>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float amplitude;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OVRInput.Controller m_controller;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x17000178")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0x78FDA4", Offset = "0x78FDA4", VA = "0x78FDA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001617")]
			[Address(RVA = "0x78FE0C", Offset = "0x78FE0C", VA = "0x78FE0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x78F7D0", Offset = "0x78F7D0", VA = "0x78F7D0")]
		[DebuggerHidden]
		public <_OneShot>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x78FC60", Offset = "0x78FC60", VA = "0x78FC60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x78FC64", Offset = "0x78FC64", VA = "0x78FC64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x78FDAC", Offset = "0x78FDAC", VA = "0x78FDAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C748", Offset = "0x54C748")]
	private sealed class <_RandomContinuosR>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VibrationManager <>4__this;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float min;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float max;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OVRInput.Controller m_controller;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x1700017A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0x79022C", Offset = "0x79022C", VA = "0x79022C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x790294", Offset = "0x790294", VA = "0x790294", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x78FB9C", Offset = "0x78FB9C", VA = "0x78FB9C")]
		[DebuggerHidden]
		public <_RandomContinuosR>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x7900B4", Offset = "0x7900B4", VA = "0x7900B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x7900B8", Offset = "0x7900B8", VA = "0x7900B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x790234", Offset = "0x790234", VA = "0x790234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C758", Offset = "0x54C758")]
	private sealed class <_RandomContinuosL>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VibrationManager <>4__this;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float min;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float max;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OVRInput.Controller m_controller;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x1700017C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x78FFE8", Offset = "0x78FFE8", VA = "0x78FFE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0x790050", Offset = "0x790050", VA = "0x790050", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x78FBC8", Offset = "0x78FBC8", VA = "0x78FBC8")]
		[DebuggerHidden]
		public <_RandomContinuosL>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x78FE70", Offset = "0x78FE70", VA = "0x78FE70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x78FE74", Offset = "0x78FE74", VA = "0x78FE74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x78FFF0", Offset = "0x78FFF0", VA = "0x78FFF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VibrationManager m;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AnimationCurve[] envelopes;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoroutineHandle runningHandleR;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CoroutineHandle runningHandleL;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool loopR;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool loopL;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int vertexOffsetId;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector4 cockpitVoffset;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x78F200", Offset = "0x78F200", VA = "0x78F200")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x78F36C", Offset = "0x78F36C", VA = "0x78F36C")]
	public void OneShot(float amplitude, float duration, OVRInput.Controller m_controller)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x78F5C8", Offset = "0x78F5C8", VA = "0x78F5C8")]
	public void OneShot(float amplitude, float duration, bool isRightHand)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x78F540", Offset = "0x78F540", VA = "0x78F540")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554510", Offset = "0x554510")]
	private IEnumerator<float> _OneShot(float amplitude, float duration, OVRInput.Controller m_controller)
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x78F7FC", Offset = "0x78F7FC", VA = "0x78F7FC")]
	public void RandomContinuos(float min, float max, float duration, OVRInput.Controller m_controller)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x78FA6C", Offset = "0x78FA6C", VA = "0x78FA6C")]
	public void RandomContinuos(float min, float max, float duration, bool isRightHand)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x78F924", Offset = "0x78F924", VA = "0x78F924")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554574", Offset = "0x554574")]
	private IEnumerator<float> _RandomContinuosR(float min, float max, float duration, OVRInput.Controller m_controller)
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x78F9C8", Offset = "0x78F9C8", VA = "0x78F9C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5545D8", Offset = "0x5545D8")]
	private IEnumerator<float> _RandomContinuosL(float min, float max, float duration, OVRInput.Controller m_controller)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x78FBF4", Offset = "0x78FBF4", VA = "0x78FBF4")]
	public bool IsPlaying(OVRInput.Controller m_controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x78FC14", Offset = "0x78FC14", VA = "0x78FC14")]
	public bool IsPlaying(bool isRightHand)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x78F454", Offset = "0x78F454", VA = "0x78F454")]
	public void Stop(OVRInput.Controller m_controller)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x78F6DC", Offset = "0x78F6DC", VA = "0x78F6DC")]
	public void Stop(bool isRightHand)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x78FC30", Offset = "0x78FC30", VA = "0x78FC30")]
	public void GlobalVisualOffsetY(float val)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x78FC58", Offset = "0x78FC58", VA = "0x78FC58")]
	public VibrationManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class lowerCockpitManager : MonoBehaviour
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxRotAngle;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform tempTrn;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform parCutSX;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform parCutDX;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform parFullSX;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform parFullDX;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 destVectorSX;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 destVectorRX;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xD4F3A8", Offset = "0xD4F3A8", VA = "0xD4F3A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xD4F508", Offset = "0xD4F508", VA = "0xD4F508")]
	public void ShowFullHatch()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xD4F5A4", Offset = "0xD4F5A4", VA = "0xD4F5A4")]
	public void ShowCutHatch()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xD4F640", Offset = "0xD4F640", VA = "0xD4F640")]
	public void RotateHatch(float val)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xD4F70C", Offset = "0xD4F70C", VA = "0xD4F70C")]
	public lowerCockpitManager()
	{
	}
}
[Token(Token = "0x2000023")]
public class CrystalComp : BaseComp
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject crystalObj;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float power;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startPos;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 newPos;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 newRot;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x773A3C", Offset = "0x773A3C", VA = "0x773A3C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x773AFC", Offset = "0x773AFC", VA = "0x773AFC", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x773B28", Offset = "0x773B28", VA = "0x773B28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x773C78", Offset = "0x773C78", VA = "0x773C78")]
	public CrystalComp()
	{
	}
}
[Token(Token = "0x2000024")]
public class CrystalTowerMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x6000208")]
	[Address(RVA = "0x773CE8", Offset = "0x773CE8", VA = "0x773CE8", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x773D1C", Offset = "0x773D1C", VA = "0x773D1C")]
	private void initStates()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x773D2C", Offset = "0x773D2C", VA = "0x773D2C", Slot = "14")]
	public override void connected()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x773DF8", Offset = "0x773DF8", VA = "0x773DF8", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x773EC4", Offset = "0x773EC4", VA = "0x773EC4", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x773EF8", Offset = "0x773EF8", VA = "0x773EF8")]
	public CrystalTowerMapObj()
	{
	}
}
[Token(Token = "0x2000025")]
public class DebugCameraControl : MonoBehaviour
{
	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float lookSpeedH;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float lookSpeedV;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float zoomSpeed;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float dragSpeed;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float yaw;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float pitch;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x77497C", Offset = "0x77497C", VA = "0x77497C")]
	private void Start()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x7749D0", Offset = "0x7749D0", VA = "0x7749D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x774C2C", Offset = "0x774C2C", VA = "0x774C2C")]
	public DebugCameraControl()
	{
	}
}
[Token(Token = "0x2000026")]
public class DrawUtil
{
	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 vtx1;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 vtx2;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector3 vtx3;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Vector3 vtx4;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform cameraTransform;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x101437C", Offset = "0x101437C", VA = "0x101437C")]
	public DrawUtil()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1014384", Offset = "0x1014384", VA = "0x1014384")]
	public void drawLine(Vector3 p1, Vector3 p2, float size)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x10145C0", Offset = "0x10145C0", VA = "0x10145C0")]
	public void drawLineDotted(Vector3 p1, Vector3 p2, float size, int numSteps, int numBlanks)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1014800", Offset = "0x1014800", VA = "0x1014800")]
	public void drawPoint(Vector3 point, float size)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1014AB8", Offset = "0x1014AB8", VA = "0x1014AB8")]
	public void drawPointInGrid(Vector3 point, float size)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1014B20", Offset = "0x1014B20", VA = "0x1014B20")]
	public void drawCircle(Vector3 center, float radius, float lineWidth)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1014E1C", Offset = "0x1014E1C", VA = "0x1014E1C")]
	public void drawLightning(Vector3 p1, Vector3 p2, float thickness, float vibrateAmplitude)
	{
	}
}
[Token(Token = "0x2000027")]
public class ElectricalGroup : MonoBehaviour
{
	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ElectricalGroup _m;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem engineSpark;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem batterySpark;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string batteryIndicatorObjName;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color batteryCellColor;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color batteryCellWarnColor;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color batteryCellCriticalColor;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<MonitorComp> landMonitors;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool switchedOn;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<float> lightStartIntensities;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int turnOnAnim;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float tension;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isCharging;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool batteryLowWarning;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Signal outSignal;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isEngineOn;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Material> batteryBars;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float batteryLevel;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float nextBatteryConsumption;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int batteryCountdown;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int batteryCountdownSpeed;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool displayActiveCellsOnly;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool initialized;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LandShip landShip;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Ship ship;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RadarHolo radar;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private FinderComp finder;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject rechargePoleObj;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 rechargePoleDefaultPos;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Material dynamoMaterial;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Material dynamoBloomMaterial;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AudioSource dynamoSound;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool fadingDynamo;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool rechargePoleAllowed;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x10154F4", Offset = "0x10154F4", VA = "0x10154F4")]
	public static ElectricalGroup getInstance()
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x10155A4", Offset = "0x10155A4", VA = "0x10155A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x10155A8", Offset = "0x10155A8", VA = "0x10155A8")]
	public void preInit()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x10156C0", Offset = "0x10156C0", VA = "0x10156C0")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x10156C8", Offset = "0x10156C8", VA = "0x10156C8")]
	private void enteredCockpit()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1015904", Offset = "0x1015904", VA = "0x1015904")]
	public void reset()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1015A90", Offset = "0x1015A90", VA = "0x1015A90")]
	public void setEngineState(bool state)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x1015D0C", Offset = "0x1015D0C", VA = "0x1015D0C")]
	public bool isBatteryLowWarning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1015D14", Offset = "0x1015D14", VA = "0x1015D14")]
	public bool isBatteryAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1015D98", Offset = "0x1015D98", VA = "0x1015D98")]
	public bool isEngineChargingBattery()
	{
		return default(bool);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1015DA0", Offset = "0x1015DA0", VA = "0x1015DA0")]
	public float getMonitorsConsumption()
	{
		return default(float);
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1015E80", Offset = "0x1015E80", VA = "0x1015E80")]
	public void setDisplayActiveCellsOnly(bool state)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1015E8C", Offset = "0x1015E8C", VA = "0x1015E8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x101684C", Offset = "0x101684C", VA = "0x101684C")]
	public void updateBattery()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x10163E0", Offset = "0x10163E0", VA = "0x10163E0")]
	private void updateBatteryConsumptionLevel()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x10168E0", Offset = "0x10168E0", VA = "0x10168E0")]
	public bool willBatteryDieWithNextAction()
	{
		return default(bool);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x10169B8", Offset = "0x10169B8", VA = "0x10169B8")]
	public float getNextBatteryConsumption()
	{
		return default(float);
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x10169C0", Offset = "0x10169C0", VA = "0x10169C0")]
	public void consumeTurnBattery()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1016DA0", Offset = "0x1016DA0", VA = "0x1016DA0")]
	private void tryAutoRefill()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1015B78", Offset = "0x1015B78", VA = "0x1015B78")]
	private void handleBatteryLow()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1016EC0", Offset = "0x1016EC0", VA = "0x1016EC0")]
	public void checkShouldShowDynamo()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x10161EC", Offset = "0x10161EC", VA = "0x10161EC")]
	private void showDynamo()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1017038", Offset = "0x1017038", VA = "0x1017038")]
	private void showDynamoDone()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x10170C4", Offset = "0x10170C4", VA = "0x10170C4")]
	private void hideDynamo()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1017294", Offset = "0x1017294", VA = "0x1017294")]
	private void hideDynamoDone()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x101746C", Offset = "0x101746C", VA = "0x101746C")]
	private void invokeTabletData()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x10174DC", Offset = "0x10174DC", VA = "0x10174DC")]
	public void interactDynamoCharge(float value)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1017920", Offset = "0x1017920", VA = "0x1017920")]
	public void interactDynamoChargeEnd(float value)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1017B1C", Offset = "0x1017B1C", VA = "0x1017B1C")]
	private bool fadeOutDynamoSound(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1017C60", Offset = "0x1017C60", VA = "0x1017C60")]
	public bool isBatteryCharging()
	{
		return default(bool);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1015AC0", Offset = "0x1015AC0", VA = "0x1015AC0")]
	private void checkEngine()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1017C68", Offset = "0x1017C68", VA = "0x1017C68")]
	public void switchOn(bool state)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1017F44", Offset = "0x1017F44", VA = "0x1017F44")]
	public void interactSwitchOn(float value)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1017F60", Offset = "0x1017F60", VA = "0x1017F60")]
	public bool isSwitchedOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1016A1C", Offset = "0x1016A1C", VA = "0x1016A1C")]
	private void consumeBattery(float amount)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1017FFC", Offset = "0x1017FFC", VA = "0x1017FFC")]
	public void emitEngineSparks()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1017EA4", Offset = "0x1017EA4", VA = "0x1017EA4")]
	public void emitBatterySparks()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1016850", Offset = "0x1016850", VA = "0x1016850")]
	public float getBatteryLevel()
	{
		return default(float);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x101809C", Offset = "0x101809C", VA = "0x101809C")]
	public void depleatBattery()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1016BEC", Offset = "0x1016BEC", VA = "0x1016BEC")]
	public void rechargeBattery(float amount)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x10180A8", Offset = "0x10180A8", VA = "0x10180A8")]
	public void setTension(float tension)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x10180B0", Offset = "0x10180B0", VA = "0x10180B0")]
	public ElectricalGroup()
	{
	}
}
[Token(Token = "0x2000028")]
public class PiratesEncounter : BaseEncounter
{
	[Token(Token = "0x6000244")]
	[Address(RVA = "0x80D10C", Offset = "0x80D10C", VA = "0x80D10C")]
	public PiratesEncounter()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x80D2B8", Offset = "0x80D2B8", VA = "0x80D2B8", Slot = "4")]
	public override void init()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x80D428", Offset = "0x80D428", VA = "0x80D428", Slot = "5")]
	public override void updatePos(Vector3 playerPos)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x80D490", Offset = "0x80D490", VA = "0x80D490", Slot = "6")]
	public override void unhook()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x80D498", Offset = "0x80D498", VA = "0x80D498", Slot = "7")]
	protected override void shipAcquiredResource(Ship ship, Resource resource)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x80D564", Offset = "0x80D564", VA = "0x80D564")]
	private void checkHeraldryDone(object arg)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x80D610", Offset = "0x80D610", VA = "0x80D610")]
	public void checkHeraldry()
	{
	}
}
[Token(Token = "0x2000029")]
public class InformerEncounter : BaseEncounter
{
	[Token(Token = "0x600024B")]
	[Address(RVA = "0x732058", Offset = "0x732058", VA = "0x732058")]
	public InformerEncounter()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x732294", Offset = "0x732294", VA = "0x732294", Slot = "4")]
	public override void init()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x7324CC", Offset = "0x7324CC", VA = "0x7324CC", Slot = "5")]
	public override void updatePos(Vector3 playerPos)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x73254C", Offset = "0x73254C", VA = "0x73254C", Slot = "6")]
	public override void unhook()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x7325EC", Offset = "0x7325EC", VA = "0x7325EC")]
	public void showQuestionsMenu()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x73266C", Offset = "0x73266C", VA = "0x73266C")]
	private void selectedQuestion(object questionStrObj)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x732734", Offset = "0x732734", VA = "0x732734", Slot = "8")]
	protected override void drawCustomMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x732A48", Offset = "0x732A48", VA = "0x732A48")]
	public void askedQuestion(string fieldNoteHeader)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x732BF8", Offset = "0x732BF8", VA = "0x732BF8")]
	public bool noMap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x732424", Offset = "0x732424", VA = "0x732424")]
	public bool hasMap()
	{
		return default(bool);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x732C14", Offset = "0x732C14", VA = "0x732C14")]
	public void obtainMap()
	{
	}
}
[Token(Token = "0x200002A")]
public class EncountersCatalogue
{
	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1018534", Offset = "0x1018534", VA = "0x1018534")]
	public static BaseEncounter instanceEncounter(string className)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x10185F0", Offset = "0x10185F0", VA = "0x10185F0")]
	public EncountersCatalogue()
	{
	}
}
[Token(Token = "0x200002B")]
public class EnemyNauticrawlMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Color alertedColor;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Color offensiveColor;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Color deadColor;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private DrawUtil drawUtil;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private LandShip ship;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Computer playerComputer;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int raycastMask;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float stealthDiscoveryTreshold;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private MapObjMover mover;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject pawn;

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x10185F8", Offset = "0x10185F8", VA = "0x10185F8", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1018738", Offset = "0x1018738", VA = "0x1018738")]
	private void initStates()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1018904", Offset = "0x1018904", VA = "0x1018904", Slot = "4")]
	public override void takeDamage(float damage)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1018978", Offset = "0x1018978", VA = "0x1018978")]
	private void resetState()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x10189FC", Offset = "0x10189FC", VA = "0x10189FC")]
	private void startAlertedEnemyTracking()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1018A88", Offset = "0x1018A88", VA = "0x1018A88", Slot = "8")]
	public override void playerTurnOver()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1018D50", Offset = "0x1018D50", VA = "0x1018D50", Slot = "10")]
	protected override void updateTick()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x10191F4", Offset = "0x10191F4", VA = "0x10191F4")]
	private void checkIfMoving()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1018F6C", Offset = "0x1018F6C", VA = "0x1018F6C")]
	private void execBehaviour()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1019314", Offset = "0x1019314", VA = "0x1019314", Slot = "14")]
	public override void connected()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1019340", Offset = "0x1019340", VA = "0x1019340", Slot = "15")]
	public override void disconnected()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1019348", Offset = "0x1019348", VA = "0x1019348", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x101952C", Offset = "0x101952C", VA = "0x101952C", Slot = "11")]
	public override void drawOnRadar()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1019678", Offset = "0x1019678", VA = "0x1019678")]
	public EnemyNauticrawlMapObj()
	{
	}
}
[Token(Token = "0x200002C")]
public class Engine : MonoBehaviour
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fuelMoveConsumption;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform gamePawn;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float engineFaultyPenalty;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float heatMaxDamage;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rechargeSpeedMultiplier;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem smoke1;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem smoke2;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool switchedOn;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameManager game;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fuelLevel;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float fuelLevel2;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Ship ship;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float moveDist;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float estimatedMoveDist;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float fuelThrottle;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float fuelErogationRate;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float heat;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool moving;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool criticalHeatPointReached;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool useTank1;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float maxMoveDist;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color tankActiveColor;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color tankInactiveColor;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int startupAnim;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool wasPlayingTurnSound;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float maxFuelThrottle;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float maxFuelErogationRate;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float boostCoolDownRate;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float boostBurnRate;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool fuelLowWarned;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool fuelOverWarned;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Signal outSignal;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SwithEngineOnTask switchEngineOnTask;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool colliding;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string lastPlayedMoveSound;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool timingRecharge;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float rechargeTime;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float timingDist;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool autoRefillEnabled;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int raycastMask;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int mapObjLayer;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float moveSoundVolume;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool motionInputAllowed;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	private bool readyToMove;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Signal bootedSignal;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Signal electricalSignal;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int startupAccum;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float rotSpeed;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private RadarHolo radar;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool initialized;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool interactedForward;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private LandShip landShip;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private FinderComp finder;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int moveForwardAttempts;

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1019688", Offset = "0x1019688", VA = "0x1019688")]
	public static Engine getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x10196EC", Offset = "0x10196EC", VA = "0x10196EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x10196F0", Offset = "0x10196F0", VA = "0x10196F0")]
	public void preInit()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x10198C4", Offset = "0x10198C4", VA = "0x10198C4")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x10198CC", Offset = "0x10198CC", VA = "0x10198CC")]
	public void reset()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x10199F4", Offset = "0x10199F4", VA = "0x10199F4")]
	public void setInfiniteFuel(bool state)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x10199F8", Offset = "0x10199F8", VA = "0x10199F8")]
	private void computerBooted()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1019AF4", Offset = "0x1019AF4", VA = "0x1019AF4")]
	private void electricalSwitched()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x101A15C", Offset = "0x101A15C", VA = "0x101A15C")]
	private void modifyMoveVecToCollisions()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x101A2E0", Offset = "0x101A2E0", VA = "0x101A2E0")]
	private void handleFaults()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x101A4D8", Offset = "0x101A4D8", VA = "0x101A4D8")]
	public bool isReadyToMove()
	{
		return default(bool);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x101A4E0", Offset = "0x101A4E0", VA = "0x101A4E0")]
	private void updateMoveDist()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x101A854", Offset = "0x101A854", VA = "0x101A854")]
	private void updateMoveForward()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x101A9E4", Offset = "0x101A9E4", VA = "0x101A9E4")]
	public float getRechargeRateTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x101A9FC", Offset = "0x101A9FC", VA = "0x101A9FC")]
	public void startTimingRechargeRate()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x101AA0C", Offset = "0x101AA0C", VA = "0x101AA0C")]
	private void updateRechargeTime()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x101AAD4", Offset = "0x101AAD4", VA = "0x101AAD4")]
	private void consumeMotionFuel()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1019B80", Offset = "0x1019B80", VA = "0x1019B80")]
	public void updateFuelLed()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x101B030", Offset = "0x101B030", VA = "0x101B030")]
	private bool shipHasFuelResource()
	{
		return default(bool);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x101B098", Offset = "0x101B098", VA = "0x101B098")]
	private void autoRefillFuel()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x101B3BC", Offset = "0x101B3BC", VA = "0x101B3BC")]
	private void updateRadarMoveDist()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x101B430", Offset = "0x101B430", VA = "0x101B430")]
	public void updateMove()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x101B818", Offset = "0x101B818", VA = "0x101B818")]
	public void updateRotate()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x101B8F4", Offset = "0x101B8F4", VA = "0x101B8F4")]
	public void heatReleaseClicked()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x101B9A4", Offset = "0x101B9A4", VA = "0x101B9A4")]
	public void interactReleaseHeat(float value)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x101BA34", Offset = "0x101BA34", VA = "0x101BA34")]
	public void releaseHeat()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x101BB94", Offset = "0x101BB94", VA = "0x101BB94")]
	public bool shouldEngineBeStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x101BCA0", Offset = "0x101BCA0", VA = "0x101BCA0")]
	public void releaseHeatDone()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x101BD54", Offset = "0x101BD54", VA = "0x101BD54")]
	public float getExpectedHeatValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x101B010", Offset = "0x101B010", VA = "0x101B010")]
	private float getFuelConsumption()
	{
		return default(float);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x101BD94", Offset = "0x101BD94", VA = "0x101BD94")]
	public float getExpectedFuelLevel1()
	{
		return default(float);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x101BE7C", Offset = "0x101BE7C", VA = "0x101BE7C")]
	public string getExpectedHeat()
	{
		return null;
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x101A380", Offset = "0x101A380", VA = "0x101A380")]
	public void releaseSmoke()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x101A47C", Offset = "0x101A47C", VA = "0x101A47C")]
	public void stopSmoke()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x101BFAC", Offset = "0x101BFAC", VA = "0x101BFAC")]
	private void produceHeat()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x101C160", Offset = "0x101C160", VA = "0x101C160")]
	private void startMoveForward()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x101C4D0", Offset = "0x101C4D0", VA = "0x101C4D0")]
	public void setMotionInputAllowed(bool state)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x101C4DC", Offset = "0x101C4DC", VA = "0x101C4DC")]
	private void tryMoveForward()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x101A6EC", Offset = "0x101A6EC", VA = "0x101A6EC")]
	public void checkImminentCollision()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x101C890", Offset = "0x101C890", VA = "0x101C890")]
	private void playTurningSound()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x101C958", Offset = "0x101C958", VA = "0x101C958")]
	public void increaseFuel(float amount)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x101CC0C", Offset = "0x101CC0C", VA = "0x101CC0C")]
	public void trySwitchOn()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x101CE1C", Offset = "0x101CE1C", VA = "0x101CE1C")]
	private void startEngine()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x101D260", Offset = "0x101D260", VA = "0x101D260")]
	public bool tryingEngineStart()
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x101A970", Offset = "0x101A970", VA = "0x101A970")]
	private void endMoveForfard()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1019F5C", Offset = "0x1019F5C", VA = "0x1019F5C")]
	public void switchOff()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x101D270", Offset = "0x101D270", VA = "0x101D270")]
	public bool canBeTurnedOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x101D300", Offset = "0x101D300", VA = "0x101D300")]
	public void interactSwitchOnOff()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x101D6EC", Offset = "0x101D6EC", VA = "0x101D6EC")]
	public bool isSwitchedOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x101D6F4", Offset = "0x101D6F4", VA = "0x101D6F4")]
	public bool isFuelTank1Over()
	{
		return default(bool);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x101D778", Offset = "0x101D778", VA = "0x101D778")]
	public bool isFuelTank2Over()
	{
		return default(bool);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x101BDEC", Offset = "0x101BDEC", VA = "0x101BDEC")]
	public float getFuelLevel()
	{
		return default(float);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x101D7FC", Offset = "0x101D7FC", VA = "0x101D7FC")]
	public float getFuelLevel2()
	{
		return default(float);
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x101D88C", Offset = "0x101D88C", VA = "0x101D88C")]
	public bool isFuelTank1Low()
	{
		return default(bool);
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x101D958", Offset = "0x101D958", VA = "0x101D958")]
	public bool isFuelTank2Low()
	{
		return default(bool);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x101DA24", Offset = "0x101DA24", VA = "0x101DA24")]
	public bool isTank1ActiveLed()
	{
		return default(bool);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x101DAC8", Offset = "0x101DAC8", VA = "0x101DAC8")]
	public bool isTank2ActiveLed()
	{
		return default(bool);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x101DB6C", Offset = "0x101DB6C", VA = "0x101DB6C")]
	public bool shouldSwitchToTank2()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x101DC70", Offset = "0x101DC70", VA = "0x101DC70")]
	public bool shouldSwitchToTank1()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x101DD74", Offset = "0x101DD74", VA = "0x101DD74")]
	public bool isTank1Active()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x101DE10", Offset = "0x101DE10", VA = "0x101DE10")]
	public bool isTank2Active()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x101D6D8", Offset = "0x101D6D8", VA = "0x101D6D8")]
	public int getActiveTankId()
	{
		return default(int);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x101A618", Offset = "0x101A618", VA = "0x101A618")]
	public float getActiveTankFuelLevel()
	{
		return default(float);
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x101DEAC", Offset = "0x101DEAC", VA = "0x101DEAC")]
	public float getMaxMoveDist()
	{
		return default(float);
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x101DEC4", Offset = "0x101DEC4", VA = "0x101DEC4")]
	public bool isRotating()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x101DED4", Offset = "0x101DED4", VA = "0x101DED4")]
	public bool isMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x101DEE4", Offset = "0x101DEE4", VA = "0x101DEE4")]
	public float getRPM()
	{
		return default(float);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x101DF00", Offset = "0x101DF00", VA = "0x101DF00")]
	public float getEstimatedMoveDist()
	{
		return default(float);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x101DF18", Offset = "0x101DF18", VA = "0x101DF18")]
	public float getCurrentMotionSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x101DF20", Offset = "0x101DF20", VA = "0x101DF20")]
	public void setFuelThrottle(float value)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x101DF90", Offset = "0x101DF90", VA = "0x101DF90")]
	public void interactSetThrottle(float value)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x101C3BC", Offset = "0x101C3BC", VA = "0x101C3BC")]
	private void startMoveDistUpdate()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x101DFB4", Offset = "0x101DFB4", VA = "0x101DFB4")]
	public void interactSetThrottleEnd(float value)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x101C878", Offset = "0x101C878", VA = "0x101C878")]
	public float getFuelThrottle()
	{
		return default(float);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x101E29C", Offset = "0x101E29C", VA = "0x101E29C")]
	public float getMaxFuelThrottle()
	{
		return default(float);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x101E2A4", Offset = "0x101E2A4", VA = "0x101E2A4")]
	public void setFuelErogationRate(float value)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x101E308", Offset = "0x101E308", VA = "0x101E308")]
	public void interactSetFuelErogationRate(float value)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x101E32C", Offset = "0x101E32C", VA = "0x101E32C")]
	public void interactSetFuelErogationRateEnd(float value)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x101E664", Offset = "0x101E664", VA = "0x101E664")]
	public float getMaxFuelErogationRate()
	{
		return default(float);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x101A6D4", Offset = "0x101A6D4", VA = "0x101A6D4")]
	public float getFuelErogationRate(bool multEnergyFlow = true)
	{
		return default(float);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x101E66C", Offset = "0x101E66C", VA = "0x101E66C")]
	public float getHeat()
	{
		return default(float);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x101E684", Offset = "0x101E684", VA = "0x101E684")]
	public void interactSwitchFuelTank(float value)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x101E704", Offset = "0x101E704", VA = "0x101E704")]
	public void switchTank(int tankId)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x101E8F8", Offset = "0x101E8F8", VA = "0x101E8F8")]
	public void setAutoRefill(bool state)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x101E904", Offset = "0x101E904", VA = "0x101E904")]
	public void setBoostBurnRate(float amount)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x101E90C", Offset = "0x101E90C", VA = "0x101E90C")]
	public float getBoostBurnRate()
	{
		return default(float);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x101E914", Offset = "0x101E914", VA = "0x101E914")]
	public void setBoostCoolDownRate(float amount)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x101E91C", Offset = "0x101E91C", VA = "0x101E91C")]
	public float getBoostCooldownRate()
	{
		return default(float);
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x101B154", Offset = "0x101B154", VA = "0x101B154")]
	public void refillActiveTank()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x101E924", Offset = "0x101E924", VA = "0x101E924")]
	public void interactMoveForward(float value)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x101E970", Offset = "0x101E970", VA = "0x101E970")]
	public void interactMoveForwardEnd(float value)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x101EA08", Offset = "0x101EA08", VA = "0x101EA08")]
	public void interactRotate(float value)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x101EC18", Offset = "0x101EC18", VA = "0x101EC18")]
	public void interactRotateEnd(float value)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x101ED54", Offset = "0x101ED54", VA = "0x101ED54")]
	public Engine()
	{
	}
}
[Token(Token = "0x200002D")]
public class FinalRoom : MonoBehaviour
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color safeColor;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color warnColor;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color dangerColor;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color radioColorOn;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Ship ship;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Computer computer;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Signal signal;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool enteredRoom;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int morseCounter;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int morseFinalMessageId;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int migrationStage;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool migrationStage1Displayed;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool controlsLocked;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<float> thrustersPower;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float leftSideThrust;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rightSideThrust;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float thrustersBalance;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float totalThrust;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int startupSequence;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AudioSource engineSound;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AudioSource backgroundSound;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float totalThrustPower;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool thrustersOutOfBalance;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Color cosmicLightColor;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float cosmicLightLerp;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool pressedFinalRadioButton;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<GameObject> thrusters;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool[] sequenceSwitchesBool;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool[] thrusterSwitchesBool;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<GameObject> thrusterSwitches;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<GameObject> sequenceSwitches;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject bankingIndicator;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> roofPanels;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject radioIndicator;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject spaceDome;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool shouldResetSwitches;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool resettingThrusterLever;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x101EFF4", Offset = "0x101EFF4", VA = "0x101EFF4")]
	public static FinalRoom getInstance()
	{
		return null;
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x101F058", Offset = "0x101F058", VA = "0x101F058")]
	public void reset()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x101F438", Offset = "0x101F438", VA = "0x101F438")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x101F440", Offset = "0x101F440", VA = "0x101F440")]
	private void displaySoloVoyageMode()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x101F764", Offset = "0x101F764", VA = "0x101F764")]
	private void displayMigrationStage1()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x101F310", Offset = "0x101F310", VA = "0x101F310")]
	private void setLightColor(int lightId, Color color, float intensity)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x101F818", Offset = "0x101F818", VA = "0x101F818")]
	private void displayMigrationLog()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x101F8EC", Offset = "0x101F8EC", VA = "0x101F8EC")]
	private void cameraMoveDone()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x101F960", Offset = "0x101F960", VA = "0x101F960")]
	public void morsePressed()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x101FF1C", Offset = "0x101FF1C", VA = "0x101FF1C")]
	private void displayMigrationStage2()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1020060", Offset = "0x1020060", VA = "0x1020060")]
	private void logFinalRadioMessage()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1020118", Offset = "0x1020118", VA = "0x1020118")]
	public float getRadioSignal()
	{
		return default(float);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x102013C", Offset = "0x102013C", VA = "0x102013C")]
	public bool isRadioEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x102014C", Offset = "0x102014C", VA = "0x102014C")]
	private void enableFinalRadio()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1020278", Offset = "0x1020278", VA = "0x1020278")]
	private void finalCredits5()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1020380", Offset = "0x1020380", VA = "0x1020380")]
	private void finalCredits4()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1020488", Offset = "0x1020488", VA = "0x1020488")]
	private void finalCredits3()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1020590", Offset = "0x1020590", VA = "0x1020590")]
	private void finalCredits2()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1020698", Offset = "0x1020698", VA = "0x1020698")]
	private void finalCredits1()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x10207A8", Offset = "0x10207A8", VA = "0x10207A8")]
	private void finalCreditsStarted()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x102085C", Offset = "0x102085C", VA = "0x102085C")]
	private bool roofPanelsAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1020988", Offset = "0x1020988", VA = "0x1020988")]
	private void logStage3_3()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1020B5C", Offset = "0x1020B5C", VA = "0x1020B5C")]
	private void logStage3_2()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1020CFC", Offset = "0x1020CFC", VA = "0x1020CFC")]
	private void logStage3_1()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1020E28", Offset = "0x1020E28", VA = "0x1020E28")]
	private void migrationLogStart()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1020F88", Offset = "0x1020F88", VA = "0x1020F88")]
	private void displayMigrationStage3()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1021170", Offset = "0x1021170", VA = "0x1021170")]
	private void startMigrationStage3()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x101FDE4", Offset = "0x101FDE4", VA = "0x101FDE4")]
	private void startMigrationStage2()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1021338", Offset = "0x1021338", VA = "0x1021338")]
	private void setupControls()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1021850", Offset = "0x1021850", VA = "0x1021850")]
	public void enteredFinalRoom()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x102263C", Offset = "0x102263C", VA = "0x102263C")]
	private void showFirstMessage2()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1022728", Offset = "0x1022728", VA = "0x1022728")]
	private void showFirstMessage3()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1022814", Offset = "0x1022814", VA = "0x1022814")]
	private void showFirstMessage4()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1022900", Offset = "0x1022900", VA = "0x1022900")]
	private void showFirstMessage5()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x102295C", Offset = "0x102295C", VA = "0x102295C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1022F60", Offset = "0x1022F60", VA = "0x1022F60")]
	public float getThrustersBalance()
	{
		return default(float);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1022F68", Offset = "0x1022F68", VA = "0x1022F68")]
	public float getTotalThrust()
	{
		return default(float);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x101F570", Offset = "0x101F570", VA = "0x101F570")]
	private void resetAllControlsDone()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1022F70", Offset = "0x1022F70", VA = "0x1022F70")]
	private bool resetThrustersAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1022184", Offset = "0x1022184", VA = "0x1022184")]
	private void resetAllControls()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x102334C", Offset = "0x102334C", VA = "0x102334C")]
	private void setThrusterSwitch(int id, bool state)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1023644", Offset = "0x1023644", VA = "0x1023644")]
	public void switchTopLeftPressed(bool state)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1023660", Offset = "0x1023660", VA = "0x1023660")]
	private bool isFusionDriveLocked(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x10236A4", Offset = "0x10236A4", VA = "0x10236A4")]
	public void switchBottomLeftPressed(bool state)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x10236C0", Offset = "0x10236C0", VA = "0x10236C0")]
	public void switchTopRightPressed(bool state)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x10236DC", Offset = "0x10236DC", VA = "0x10236DC")]
	public void switchBottomRightPressed(bool state)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x10236F8", Offset = "0x10236F8", VA = "0x10236F8")]
	private void setThruster(int id, float value)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x10237C4", Offset = "0x10237C4", VA = "0x10237C4")]
	private void setThrusterVerbose(int id, float value)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1022E54", Offset = "0x1022E54", VA = "0x1022E54")]
	private void checkIfStage3Cleared()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x10230EC", Offset = "0x10230EC", VA = "0x10230EC")]
	private void updateThrusterValues()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x10238AC", Offset = "0x10238AC", VA = "0x10238AC")]
	public float getThrustTopLeftPower()
	{
		return default(float);
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1023910", Offset = "0x1023910", VA = "0x1023910")]
	public void setThrusterTopLeft(float value)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1023918", Offset = "0x1023918", VA = "0x1023918")]
	public void setThrusterTopLeftVerbose(float value)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1023920", Offset = "0x1023920", VA = "0x1023920")]
	public float getThrustBottomLeftPower()
	{
		return default(float);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1023988", Offset = "0x1023988", VA = "0x1023988")]
	public void setThrusterBottomLeft(float value)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1023990", Offset = "0x1023990", VA = "0x1023990")]
	public void setThrusterBottomLeftVerbose(float value)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1023998", Offset = "0x1023998", VA = "0x1023998")]
	public float getThrustTopRightPower()
	{
		return default(float);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1023A00", Offset = "0x1023A00", VA = "0x1023A00")]
	public void setThrusterTopRight(float value)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1023A08", Offset = "0x1023A08", VA = "0x1023A08")]
	public void setThrusterTopRightVerbose(float value)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1023A10", Offset = "0x1023A10", VA = "0x1023A10")]
	public float getThrustBottomRightPower()
	{
		return default(float);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1023A78", Offset = "0x1023A78", VA = "0x1023A78")]
	public void setThrusterBottomRight(float value)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1023A80", Offset = "0x1023A80", VA = "0x1023A80")]
	public void setThrusterBottomRightVerbose(float value)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1023A88", Offset = "0x1023A88", VA = "0x1023A88")]
	public bool isStage2()
	{
		return default(bool);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1023A98", Offset = "0x1023A98", VA = "0x1023A98")]
	public float getLeftSideThrust()
	{
		return default(float);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1023AA0", Offset = "0x1023AA0", VA = "0x1023AA0")]
	public float getRightSideThrust()
	{
		return default(float);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1023AA8", Offset = "0x1023AA8", VA = "0x1023AA8")]
	private void switch1Done()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1023BC8", Offset = "0x1023BC8", VA = "0x1023BC8")]
	public bool switchSequence1(bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1023DD8", Offset = "0x1023DD8", VA = "0x1023DD8")]
	public bool isSequenceSwitch1On()
	{
		return default(bool);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1023E0C", Offset = "0x1023E0C", VA = "0x1023E0C")]
	private void switch2Done()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1023F14", Offset = "0x1023F14", VA = "0x1023F14")]
	public bool switchSequence2(bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1024184", Offset = "0x1024184", VA = "0x1024184")]
	public bool isSequenceSwitch2On()
	{
		return default(bool);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x10241BC", Offset = "0x10241BC", VA = "0x10241BC")]
	private void switch3Done()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1024368", Offset = "0x1024368", VA = "0x1024368")]
	public bool switchSequence3(bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x10245F4", Offset = "0x10245F4", VA = "0x10245F4")]
	public bool isSequenceSwitch3On()
	{
		return default(bool);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x102462C", Offset = "0x102462C", VA = "0x102462C")]
	public bool switchSequence4(bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1024838", Offset = "0x1024838", VA = "0x1024838")]
	public bool isSequenceSwitch4On()
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1024870", Offset = "0x1024870", VA = "0x1024870")]
	public void interactStartSequence0(float value)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x10248D8", Offset = "0x10248D8", VA = "0x10248D8")]
	public void interactStartSequence1(float value)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1024940", Offset = "0x1024940", VA = "0x1024940")]
	public void interactStartSequence2(float value)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x10249A8", Offset = "0x10249A8", VA = "0x10249A8")]
	public void interactStartSequence3(float value)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1024A10", Offset = "0x1024A10", VA = "0x1024A10")]
	public void interactBroadcast()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1024A14", Offset = "0x1024A14", VA = "0x1024A14")]
	public void interactEngineSwitch0(float value)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1024A50", Offset = "0x1024A50", VA = "0x1024A50")]
	public void interactEngineSwitch1(float value)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1024A8C", Offset = "0x1024A8C", VA = "0x1024A8C")]
	public void interactEngineSwitch2(float value)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1024AC8", Offset = "0x1024AC8", VA = "0x1024AC8")]
	public void interactEngineSwitch3(float value)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1024B04", Offset = "0x1024B04", VA = "0x1024B04")]
	public void interactThruster0(float value)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1024B0C", Offset = "0x1024B0C", VA = "0x1024B0C")]
	public void interactThruster1(float value)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1024B14", Offset = "0x1024B14", VA = "0x1024B14")]
	public void interactThruster2(float value)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1024B1C", Offset = "0x1024B1C", VA = "0x1024B1C")]
	public void interactThruster3(float value)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1024B24", Offset = "0x1024B24", VA = "0x1024B24")]
	public void interactThruster0Verb(float value)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1024B2C", Offset = "0x1024B2C", VA = "0x1024B2C")]
	public void interactThruster1Verb(float value)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1024B34", Offset = "0x1024B34", VA = "0x1024B34")]
	public void interactThruster2Verb(float value)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1024B3C", Offset = "0x1024B3C", VA = "0x1024B3C")]
	public void interactThruster3Verb(float value)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1024B44", Offset = "0x1024B44", VA = "0x1024B44")]
	public void interactFinalRadioButton()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1024D84", Offset = "0x1024D84", VA = "0x1024D84")]
	private bool resetSwitchesDelayed(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1024ED0", Offset = "0x1024ED0", VA = "0x1024ED0")]
	public void interactCheckAllControls(float value)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1024F98", Offset = "0x1024F98", VA = "0x1024F98")]
	public FinalRoom()
	{
	}
}
[Token(Token = "0x200002E")]
public class FinderCameraDraw : MonoBehaviour
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color lineColor;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float noise;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material material;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DrawUtil drawUtil;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameSimulator gameSim;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float width;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float waveTime;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float speed;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float freq;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float amplitude;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float peakStretch;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float dir;

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x102515C", Offset = "0x102515C", VA = "0x102515C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x102522C", Offset = "0x102522C", VA = "0x102522C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1025244", Offset = "0x1025244", VA = "0x1025244")]
	public float easeInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x102529C", Offset = "0x102529C", VA = "0x102529C")]
	private float ease(float val, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x10252F4", Offset = "0x10252F4", VA = "0x10252F4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1025644", Offset = "0x1025644", VA = "0x1025644")]
	public void setValues(float distance, float angle, float angleDirection)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1025774", Offset = "0x1025774", VA = "0x1025774")]
	public FinderCameraDraw()
	{
	}
}
[Token(Token = "0x200002F")]
public class FinderComp : MonoBehaviour
{
	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material materialOn;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro textObj;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject radarPawnObj;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material materialOff;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject displayObj;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Computer computer;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ElectricalGroup electricalGrp;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool switchedOn;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string targetName;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int targetId;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool displayOn;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool initialized;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Signal outSignal;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Signal bootedSignal;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Signal electricalSignal;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x101565C", Offset = "0x101565C", VA = "0x101565C")]
	public static FinderComp getInstance()
	{
		return null;
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x10257F0", Offset = "0x10257F0", VA = "0x10257F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x10257F4", Offset = "0x10257F4", VA = "0x10257F4")]
	public void init()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1025964", Offset = "0x1025964", VA = "0x1025964")]
	public void reset()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1025AB8", Offset = "0x1025AB8", VA = "0x1025AB8")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1025AC0", Offset = "0x1025AC0", VA = "0x1025AC0")]
	public void interactSwitchOn(float value)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1025AEC", Offset = "0x1025AEC", VA = "0x1025AEC")]
	private void computerBooted()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1025BE4", Offset = "0x1025BE4", VA = "0x1025BE4")]
	private void electricalSwitched()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1025C9C", Offset = "0x1025C9C", VA = "0x1025C9C")]
	public string getCurrentTargetName()
	{
		return null;
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1025CA4", Offset = "0x1025CA4", VA = "0x1025CA4")]
	public void clearTargetFocus()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1025B84", Offset = "0x1025B84", VA = "0x1025B84")]
	public void focusTarget(int id)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1025CB4", Offset = "0x1025CB4", VA = "0x1025CB4")]
	public void setDisplayText(string text)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1025CD0", Offset = "0x1025CD0", VA = "0x1025CD0")]
	public string getDisplayText()
	{
		return null;
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x101B4E0", Offset = "0x101B4E0", VA = "0x101B4E0")]
	public void update()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1025AE0", Offset = "0x1025AE0", VA = "0x1025AE0")]
	public void switchOn(bool val)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1025CEC", Offset = "0x1025CEC", VA = "0x1025CEC")]
	public bool isDisplayOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x10259DC", Offset = "0x10259DC", VA = "0x10259DC")]
	private void setDisplayOn(bool val)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1025CF4", Offset = "0x1025CF4", VA = "0x1025CF4")]
	public void interactNextTarget()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1025D70", Offset = "0x1025D70", VA = "0x1025D70")]
	public void interactPrevTarget()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1025DF0", Offset = "0x1025DF0", VA = "0x1025DF0")]
	public bool isSwitchedOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1025DF8", Offset = "0x1025DF8", VA = "0x1025DF8")]
	public FinderComp()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class Vector3Data
{
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float x;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float y;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float z;

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x78EF0C", Offset = "0x78EF0C", VA = "0x78EF0C")]
	public static Vector3 toVector3(Vector3Data vecData)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x78EF50", Offset = "0x78EF50", VA = "0x78EF50")]
	public Vector3Data()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x78EF58", Offset = "0x78EF58", VA = "0x78EF58")]
	public Vector3Data(Vector3 vec)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x78EFA0", Offset = "0x78EFA0", VA = "0x78EFA0")]
	public Vector3Data(Color col)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x78EFE8", Offset = "0x78EFE8", VA = "0x78EFE8")]
	public static implicit operator Vector3(Vector3Data rValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x78F02C", Offset = "0x78F02C", VA = "0x78F02C")]
	public static implicit operator Vector3Data(Vector3 rValue)
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x78F0AC", Offset = "0x78F0AC", VA = "0x78F0AC")]
	public static implicit operator Vector3Data(Color rValue)
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x78F12C", Offset = "0x78F12C", VA = "0x78F12C")]
	public static implicit operator Color(Vector3Data rValue)
	{
		return default(Color);
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class MapObjData
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string mapObjName;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string displayName;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string sceneName;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3Data pos;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool discovered;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Resource> resources;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Record> records;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<WeaponCode> weaponCodes;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<FieldNote> fieldNotes;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<ZeppelinSignal> zeppelinSignals;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string log;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> mapObjs;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string gateWall;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool isOpen;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool requiresKey;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int cellId;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3Data iconColor;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float integrity;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string iconTexture;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool wasAddedToFinder;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool shouldRegenerateCrystal;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool wreckIsPreviousPlayer;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	public bool wreckShouldDisplayLog;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x7C40A4", Offset = "0x7C40A4", VA = "0x7C40A4")]
	public MapObjData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class ProcMapData
{
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float boundsSize;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3Data> boundaryPoints;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Vector3Data> gatePerimeterPoints;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> gateEntrancePointId;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<int> buildingNumPoints;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3Data> buildingPoints;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Vector3Data> pillarPoints;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Vector3Data> roadSpawnPoints;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Vector3Data> usedSpawnPoints;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Vector3Data> gatedSpawnPoints;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<int> buildingCells;

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x82B02C", Offset = "0x82B02C", VA = "0x82B02C")]
	public ProcMapData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class IslandData
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int islandId;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MapObjData> mapObjsData;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> wallsToDisplay;

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x72A978", Offset = "0x72A978", VA = "0x72A978")]
	public IslandData()
	{
	}
}
[Token(Token = "0x2000034")]
public class IslandBuilderData
{
	[Token(Token = "0x600034C")]
	[Address(RVA = "0x732EF8", Offset = "0x732EF8", VA = "0x732EF8")]
	public IslandBuilderData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class ShipPart
{
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float integrity;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool faulty;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x83B630", Offset = "0x83B630", VA = "0x83B630")]
	public ShipPart()
	{
	}
}
[Serializable]
[Token(Token = "0x2000036")]
public class ShipData
{
	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ShipPart enginePart;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShipPart computerPart;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShipPart stealthPart;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ShipPart powerPart;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ShipPart radarPart;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ShipPart jammerPart;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float batteryLevel;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fuelTank1;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float fuelTank2;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool hasNewResource;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> unreadRecords;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<int> unreadFieldNotes;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x83B448", Offset = "0x83B448", VA = "0x83B448")]
	public ShipData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class ZeppelinData
{
	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string spawnedEncounter;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool connectedToEncounter;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string encounterCurrentMenu;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int islandCourseSet;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3Data zeppelinPos;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3Data travelStartPos;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x7938B0", Offset = "0x7938B0", VA = "0x7938B0")]
	public ZeppelinData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class PlayerData
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Resource> resources;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Record> records;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<WeaponCode> weaponCodes;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ZeppelinSignal> zeppelinSignals;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<FieldNote> fieldNotes;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int salt;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int workerId;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int lastVisitedIslandId;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x80DC10", Offset = "0x80DC10", VA = "0x80DC10")]
	public PlayerData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public class GameData
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int compatibleVersion;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShipData shipData;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ZeppelinData zeppelinData;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerData playerData;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerData previousPlayerData;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numGameOvers;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> mapObjTypeIds;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> consumedLogs;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool zeppelinMode;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Vector3Data> islandsCoord;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<int> discoveredIslands;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3Data playerPos;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float playerRot;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float hyperdriveCharge;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<string> periscopeCatalogue;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<string> nethookCatalogue;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int decoObjId;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool updateLighthouseIsland;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int numZeppelinSessions;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<string> broadcastedSignals;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int[] weaponMatrixCode;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int numTechNotesCollected;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool wasEngineEverTurnedOn;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool wasGameEnded;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int numGameOversPastEngineTurnOn;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int introTextIter;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float trackTimeStart;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int trackNumRestarts;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int helperCheck;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int bulletinMessageIt;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int showBulletin;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<string> fieldNotesAchievement;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<FieldNote> visitedIslandsNote;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int gameProgress;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public IslandData currentIslandData;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<int> visitedIslands;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool startingNewRun;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool previousDataPicked;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	public bool piratesQuestActivated;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int piratesQuestIslandId;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int currentIslandId;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int storyAdvance;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<int> receivedRadioMessages;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int[] weaponMatrixJacks;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int tabletDataReceived;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3Data previousPlayerPos;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Vector3Data radarPos;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Vector3Data radarRot;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool wasGateEverOpened;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public string lastDeath;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool shouldAdvanceBulletin;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	public bool restoringIsland;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
	public bool wasElectricalEverSwitchedOn;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14B")]
	public bool wasZepelinSignalEverSent;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public int language;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public int storyScriptMovedTimes;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Vector3Data zeppelinEncounterRadarPos;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool pendingMapUpload;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	public bool zeppelinSessionEncounterSpawned;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	public bool newMapCoords;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public int currentIslandIdSkyMap;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public List<string> unlockedAchievements;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool newAchievement;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1027284", Offset = "0x1027284", VA = "0x1027284")]
	public GameData()
	{
	}
}
[Serializable]
[Token(Token = "0x200003A")]
public class GameSettings
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool initialized;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int compatibleVersion;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debugQuickStart;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool firstAccess;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int brightLevel;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float audioVolume;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool fullScreen;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int screenWidth;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int screenHeight;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int currentLangId;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int quality;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x7264F4", Offset = "0x7264F4", VA = "0x7264F4")]
	public GameSettings()
	{
	}
}
[Token(Token = "0x200003B")]
public class GameDataSerializer
{
	[Token(Token = "0x6000353")]
	[Address(RVA = "0x10275F0", Offset = "0x10275F0", VA = "0x10275F0")]
	public static GameData load()
	{
		return null;
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x10277D4", Offset = "0x10277D4", VA = "0x10277D4")]
	public static void save(GameData gameData)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x10278C0", Offset = "0x10278C0", VA = "0x10278C0")]
	public static GameSettings loadSettings()
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x10278C8", Offset = "0x10278C8", VA = "0x10278C8")]
	public static void saveSettings(GameSettings gameSettings)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x10278CC", Offset = "0x10278CC", VA = "0x10278CC")]
	public GameDataSerializer()
	{
	}
}
[Token(Token = "0x200003C")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string version;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameSettings gameSettings;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameData gameData;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gameplayDebugObj;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject landGameObj;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject liftGameObj;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lowerGameObj;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject zeppelinGameObj;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string island1PrefabName;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string island2PrefabName;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string island3PrefabName;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve verticalMotionEaseCurve;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool debugInfiniteFuel;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool skipInteractionEnd;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool liftNeedsInit;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool landCockpitNeedsInit;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StoryScript storyScript;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Signal signal;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<BaseTask> tasks;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<BaseTask> tasksToRemove;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool initialized;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRScreenFade screenFade;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject mainCameraObj;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject titlesParentObj;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject spatialAudioParentObj;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string currentCockpit;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string quickLoadSceneName;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject landCockpitSceneObj;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private AudioSource liftMotorSound;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float buttonValue;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float screenFadeValue;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject loadBarObj;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Material loadBarBackMat;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Material loadBarMat;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private TextMeshPro textMeshTitle;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool holdButtonEnabled;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool returningToStartMenu;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<string> achievements;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool hasFocus;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool debugEditorMode;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public static bool debugLiftMenu;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool debugSkipStartScreen;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<GameObject> tempParentsLand;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> tempChildrenLand;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<Vector3> tempChildPosLand;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<Vector3> tempChildRotLand;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<GameObject> tempParentsZepp;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<GameObject> tempChildrenZepp;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<Vector3> tempChildPosZepp;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<Vector3> tempChildRotZepp;

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1016F6C", Offset = "0x1016F6C", VA = "0x1016F6C")]
	public static GameManager getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x10278D4", Offset = "0x10278D4", VA = "0x10278D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x10285D4", Offset = "0x10285D4", VA = "0x10285D4")]
	private void exceptionHandler(string condition, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x10284F0", Offset = "0x10284F0", VA = "0x10284F0")]
	private void showStartScreens()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1028700", Offset = "0x1028700", VA = "0x1028700")]
	private void resetTitlesTransform()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x102888C", Offset = "0x102888C", VA = "0x102888C")]
	private void showLogoScreens()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1028958", Offset = "0x1028958", VA = "0x1028958")]
	private void showLogoScreens1()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1028A60", Offset = "0x1028A60", VA = "0x1028A60")]
	private bool fadeLogos1In(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1028B7C", Offset = "0x1028B7C", VA = "0x1028B7C")]
	private bool fadeLogos2Out(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1028D38", Offset = "0x1028D38", VA = "0x1028D38")]
	private void startFadeLogos2Out()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1028DDC", Offset = "0x1028DDC", VA = "0x1028DDC")]
	private bool fadeLogos2In(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1028EF8", Offset = "0x1028EF8", VA = "0x1028EF8")]
	private bool fadeLogos1Out(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x10290AC", Offset = "0x10290AC", VA = "0x10290AC")]
	private void startFadeLogos1Out()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1029150", Offset = "0x1029150", VA = "0x1029150")]
	private bool fadeStartTitleOut(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1029208", Offset = "0x1029208", VA = "0x1029208")]
	private bool fadeStartTitleIn(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x102929C", Offset = "0x102929C", VA = "0x102929C")]
	public TextMeshPro getTextMeshTitle()
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1027DF8", Offset = "0x1027DF8", VA = "0x1027DF8")]
	private void initTitlesScreen()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x10292A4", Offset = "0x10292A4", VA = "0x10292A4")]
	public bool isDebugEditorMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x102930C", Offset = "0x102930C", VA = "0x102930C")]
	public string getCurrentCockpit()
	{
		return null;
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1027D84", Offset = "0x1027D84", VA = "0x1027D84")]
	private void initSaveData()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1029314", Offset = "0x1029314", VA = "0x1029314")]
	private void debug_saveData_island0()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x10293C4", Offset = "0x10293C4", VA = "0x10293C4")]
	public void debug_jumpToIsland0()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x10295F0", Offset = "0x10295F0", VA = "0x10295F0")]
	public void debug_jumpToZeppelin1()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x10296D4", Offset = "0x10296D4", VA = "0x10296D4")]
	public void debug_jumpToIsland1()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x10298B8", Offset = "0x10298B8", VA = "0x10298B8")]
	public void debug_jumpToLowerDeck()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x10299C0", Offset = "0x10299C0", VA = "0x10299C0")]
	public void debug_jumpToZeppelinStorm()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1029ADC", Offset = "0x1029ADC", VA = "0x1029ADC")]
	private void debug_saveData_island2()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1029D80", Offset = "0x1029D80", VA = "0x1029D80")]
	public void debug_jumpToIsland2()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1029E14", Offset = "0x1029E14", VA = "0x1029E14")]
	public void debug_jumpToFinal()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1029768", Offset = "0x1029768", VA = "0x1029768")]
	private void debug_saveData_island1()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1029FDC", Offset = "0x1029FDC", VA = "0x1029FDC")]
	private void debug_testSaveData()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x102A0BC", Offset = "0x102A0BC", VA = "0x102A0BC")]
	private void debug_testSaveData1()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x102A134", Offset = "0x102A134", VA = "0x102A134")]
	private void debug_testSaveData2()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x102A1E8", Offset = "0x102A1E8", VA = "0x102A1E8")]
	private void debug_testSaveData3_4()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x102A28C", Offset = "0x102A28C", VA = "0x102A28C")]
	private void debug_testSaveData5_6_7()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1029FE0", Offset = "0x1029FE0", VA = "0x1029FE0")]
	private void debug_testSaveData8()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x102A378", Offset = "0x102A378", VA = "0x102A378")]
	private void debug_testSaveData9()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x102A478", Offset = "0x102A478", VA = "0x102A478")]
	private void debug_testSaveData10()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x102A4F0", Offset = "0x102A4F0", VA = "0x102A4F0")]
	private void debug_initQuickStartZeppelin()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x102AA98", Offset = "0x102AA98", VA = "0x102AA98")]
	private void debug_initQuickStartLandCockpit()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x102B14C", Offset = "0x102B14C", VA = "0x102B14C")]
	private bool closeHatchLowerDeck(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x102B2E8", Offset = "0x102B2E8", VA = "0x102B2E8")]
	private void enteredLowerDeck()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x102B43C", Offset = "0x102B43C", VA = "0x102B43C")]
	private void debug_initQuickStartLowerDeck()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1027FE4", Offset = "0x1027FE4", VA = "0x1027FE4")]
	private void initGame()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x102B770", Offset = "0x102B770", VA = "0x102B770")]
	private void onSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x102B918", Offset = "0x102B918", VA = "0x102B918")]
	private void liftSceneLoaded()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x102C3D0", Offset = "0x102C3D0", VA = "0x102C3D0")]
	private void resetLift()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x102CB24", Offset = "0x102CB24", VA = "0x102CB24")]
	private void doorKnocking()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1028660", Offset = "0x1028660", VA = "0x1028660")]
	private void setCameraBackground(Color color)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1029458", Offset = "0x1029458", VA = "0x1029458")]
	public void launchNauticrawl()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x102CC70", Offset = "0x102CC70", VA = "0x102CC70")]
	private void launchNewNauticrawlFadeDone()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x102D070", Offset = "0x102D070", VA = "0x102D070")]
	private bool fadeTitleIn(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x102B950", Offset = "0x102B950", VA = "0x102B950")]
	private void landCockpitSceneLoaded()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x102D258", Offset = "0x102D258", VA = "0x102D258")]
	private void landCockpitSceneLoadedDelay()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x102AD18", Offset = "0x102AD18", VA = "0x102AD18")]
	private void initLandCockpit()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x102E1D4", Offset = "0x102E1D4", VA = "0x102E1D4")]
	public Camera getMainCamera()
	{
		return null;
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x102CC10", Offset = "0x102CC10", VA = "0x102CC10")]
	public CameraTrigger getCameraTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1022258", Offset = "0x1022258", VA = "0x1022258")]
	public void setTempParent(string childName, string parentName, string cockpit)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x102E22C", Offset = "0x102E22C", VA = "0x102E22C")]
	private void resetTempParents(string cockpit)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x102D528", Offset = "0x102D528", VA = "0x102D528")]
	private void setupMainCockpitObjects()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x102B620", Offset = "0x102B620", VA = "0x102B620")]
	private void resetGame()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x102AF88", Offset = "0x102AF88", VA = "0x102AF88")]
	private void resetLandCockpit()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x102E71C", Offset = "0x102E71C", VA = "0x102E71C")]
	private void debug_testLift()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x102B0B8", Offset = "0x102B0B8", VA = "0x102B0B8")]
	private void debug_testLandCockpit()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x102E7B0", Offset = "0x102E7B0", VA = "0x102E7B0")]
	private void debug_testMain()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x102E864", Offset = "0x102E864", VA = "0x102E864")]
	private void debug_genTestIsland()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1024CE4", Offset = "0x1024CE4", VA = "0x1024CE4")]
	public ScreenFadeTask fadeScreen(float start, float end, int numFrames)
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x102E918", Offset = "0x102E918", VA = "0x102E918")]
	public void startZeppelinAscent()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x102BED4", Offset = "0x102BED4", VA = "0x102BED4")]
	private void upperTubeSceneLoaded()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x102ECC0", Offset = "0x102ECC0", VA = "0x102ECC0")]
	public void startLowerDeckDescent()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x102BA7C", Offset = "0x102BA7C", VA = "0x102BA7C")]
	private void lowerTubeSceneLoaded()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x102EF1C", Offset = "0x102EF1C", VA = "0x102EF1C")]
	private bool openUpperHatchLandCockpit(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x102F19C", Offset = "0x102F19C", VA = "0x102F19C")]
	private bool openLowerHatchLandCockpit(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x102F41C", Offset = "0x102F41C", VA = "0x102F41C")]
	private bool goToUpperTube(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x102F724", Offset = "0x102F724", VA = "0x102F724")]
	private bool closeLandUpperHatchGointToZeppelin(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x102F968", Offset = "0x102F968", VA = "0x102F968")]
	private bool goToLowerTube(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x102C144", Offset = "0x102C144", VA = "0x102C144")]
	private void upperCockpitSceneLoaded()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x102A78C", Offset = "0x102A78C", VA = "0x102A78C")]
	private void enteredZeppelin()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x102FD14", Offset = "0x102FD14", VA = "0x102FD14")]
	private bool goToZeppelin(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x102BCEC", Offset = "0x102BCEC", VA = "0x102BCEC")]
	private void lowerCockpitSceneLoaded()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x10301EC", Offset = "0x10301EC", VA = "0x10301EC")]
	private bool goToLowerDeck(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x103056C", Offset = "0x103056C", VA = "0x103056C")]
	public void exitZeppelin()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1030AE0", Offset = "0x1030AE0", VA = "0x1030AE0")]
	private bool openHatchLowerDeck(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1030D70", Offset = "0x1030D70", VA = "0x1030D70")]
	public void exitLowerDeck()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x103106C", Offset = "0x103106C", VA = "0x103106C")]
	private bool exitZeppelinAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1031698", Offset = "0x1031698", VA = "0x1031698")]
	private bool exitLowerDeckAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1031B34", Offset = "0x1031B34", VA = "0x1031B34")]
	public void stopLiftMotorSound()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1031C14", Offset = "0x1031C14", VA = "0x1031C14")]
	private bool closeUpperHatchLandCockpit(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1031E98", Offset = "0x1031E98", VA = "0x1031E98")]
	private bool closeLowerHatchLandCockpit(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x103150C", Offset = "0x103150C", VA = "0x103150C")]
	private void unloadZeppelin()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x10319F0", Offset = "0x10319F0", VA = "0x10319F0")]
	private void unloadLowerDeck()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x103211C", Offset = "0x103211C", VA = "0x103211C")]
	private void loadSettings()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1032120", Offset = "0x1032120", VA = "0x1032120")]
	public List<string> getAchievements()
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1028184", Offset = "0x1028184", VA = "0x1028184")]
	private void initAchievementList()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x101D12C", Offset = "0x101D12C", VA = "0x101D12C")]
	public void unlockAchievement(string achievement)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1032128", Offset = "0x1032128", VA = "0x1032128")]
	public void unlockFieldNoteAchievement(FieldNote note)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x103212C", Offset = "0x103212C", VA = "0x103212C")]
	private void unlockGameEndAchievement()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1032130", Offset = "0x1032130", VA = "0x1032130")]
	public void compensateScreenRatio()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1032134", Offset = "0x1032134", VA = "0x1032134")]
	public void clearGameDataAndRestart()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x103245C", Offset = "0x103245C", VA = "0x103245C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x10326B8", Offset = "0x10326B8", VA = "0x10326B8")]
	private void showOneTimeScreen()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x10326BC", Offset = "0x10326BC", VA = "0x10326BC")]
	private void logoScreensDone()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x10326C0", Offset = "0x10326C0", VA = "0x10326C0")]
	private void showLogo2Done()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x10326C4", Offset = "0x10326C4", VA = "0x10326C4")]
	private void showLogo2()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x10326C8", Offset = "0x10326C8", VA = "0x10326C8")]
	private void showLogo1Done()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x10326CC", Offset = "0x10326CC", VA = "0x10326CC")]
	private void showLogo1()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x10326D0", Offset = "0x10326D0", VA = "0x10326D0")]
	private void showLogosScreen()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x10326D4", Offset = "0x10326D4", VA = "0x10326D4")]
	private void showOpeningScreen()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x10326D8", Offset = "0x10326D8", VA = "0x10326D8")]
	private void startIntro()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x10326DC", Offset = "0x10326DC", VA = "0x10326DC")]
	private void introLoaded()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x10326E0", Offset = "0x10326E0", VA = "0x10326E0")]
	private void enableBackMouseAndKeyboard()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x10326E4", Offset = "0x10326E4", VA = "0x10326E4")]
	private void gameFinishedRestart()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x10326E8", Offset = "0x10326E8", VA = "0x10326E8")]
	private void showSpecialThanksReport()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x10326EC", Offset = "0x10326EC", VA = "0x10326EC")]
	public void gameFinished()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1032860", Offset = "0x1032860", VA = "0x1032860")]
	private void skipIntroFadeDone()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1032864", Offset = "0x1032864", VA = "0x1032864")]
	private void iosIntroMenuGoToStart()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1032868", Offset = "0x1032868", VA = "0x1032868")]
	private void iosShowIntroMenu()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x103286C", Offset = "0x103286C", VA = "0x103286C")]
	private void iosSkipIntroDone()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1032870", Offset = "0x1032870", VA = "0x1032870")]
	private void iosSkipToIntroMenu()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1032874", Offset = "0x1032874", VA = "0x1032874")]
	private void skipIntroGoToStartMenu()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1032878", Offset = "0x1032878", VA = "0x1032878")]
	private void skipIntro()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x103287C", Offset = "0x103287C", VA = "0x103287C")]
	public void startLandSwitchAnim()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x1032880", Offset = "0x1032880", VA = "0x1032880")]
	private void landSwitchDone1()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x1032884", Offset = "0x1032884", VA = "0x1032884")]
	private void landSwitchDone2()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x1032888", Offset = "0x1032888", VA = "0x1032888")]
	private void showEndOfDemoScreenDone()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x103288C", Offset = "0x103288C", VA = "0x103288C")]
	private void showEndOfDemoScreen()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x1032890", Offset = "0x1032890", VA = "0x1032890")]
	private void zeppelinLandedSound()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x1032894", Offset = "0x1032894", VA = "0x1032894")]
	public void startZeppelingSwitchAnim()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x1032898", Offset = "0x1032898", VA = "0x1032898")]
	private void zeppelinSwitchAnimDone1()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x103289C", Offset = "0x103289C", VA = "0x103289C")]
	private void zeppelinSwitchAnimDone2()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x10328A0", Offset = "0x10328A0", VA = "0x10328A0")]
	private void resetZeppelin()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x10328A4", Offset = "0x10328A4", VA = "0x10328A4")]
	private void enableZeppelinMode(bool state)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x10328A8", Offset = "0x10328A8", VA = "0x10328A8")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x10328B0", Offset = "0x10328B0", VA = "0x10328B0")]
	public bool isZeppelinMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1032924", Offset = "0x1032924", VA = "0x1032924")]
	private void initKeyBindings()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1032928", Offset = "0x1032928", VA = "0x1032928")]
	private void reset()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x103292C", Offset = "0x103292C", VA = "0x103292C")]
	public void setPauseMenuLocked(bool state)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1032930", Offset = "0x1032930", VA = "0x1032930")]
	public void registerComponent(BaseComp component)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1032934", Offset = "0x1032934", VA = "0x1032934")]
	public void enableMenuMode(bool state)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1032938", Offset = "0x1032938", VA = "0x1032938")]
	public bool isGamePaused()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1032940", Offset = "0x1032940", VA = "0x1032940")]
	private void restoreKeyboard()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1032944", Offset = "0x1032944", VA = "0x1032944")]
	public void addPlayingAnim(Animation anim)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1032948", Offset = "0x1032948", VA = "0x1032948")]
	private void iosShowPauseMenu()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x103294C", Offset = "0x103294C", VA = "0x103294C")]
	private void iosPauseMenuFadeOutDone()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1032950", Offset = "0x1032950", VA = "0x1032950")]
	public void showPauseMenu(bool state)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1032954", Offset = "0x1032954", VA = "0x1032954")]
	private void setMainCamera(int cameraId)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1032958", Offset = "0x1032958", VA = "0x1032958")]
	private void showStartMenu()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x103295C", Offset = "0x103295C", VA = "0x103295C")]
	private void showFirstAccess()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1032960", Offset = "0x1032960", VA = "0x1032960")]
	public void resetOtherComponents()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1032964", Offset = "0x1032964", VA = "0x1032964")]
	private void quitGameFadeBackDone()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1032968", Offset = "0x1032968", VA = "0x1032968")]
	private void quitGameFadeOutDone()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x103296C", Offset = "0x103296C", VA = "0x103296C")]
	private void returnToStartMenuFadeDone()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x10324D0", Offset = "0x10324D0", VA = "0x10324D0")]
	private void prepareToSaveGame()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1032268", Offset = "0x1032268", VA = "0x1032268")]
	public void returnToStartMenu(float startFadeLevel = 0f, int numFrames = 200, bool shouldSave = true)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1032F1C", Offset = "0x1032F1C", VA = "0x1032F1C")]
	public void gameOverFromZeppelin()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1032F20", Offset = "0x1032F20", VA = "0x1032F20")]
	private void showGameOverReport()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1032F24", Offset = "0x1032F24", VA = "0x1032F24")]
	private void hideGameOverReport()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1032F28", Offset = "0x1032F28", VA = "0x1032F28")]
	private void hideGameOverReportDone()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1032D64", Offset = "0x1032D64", VA = "0x1032D64")]
	private void storeCurrentIsland()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x102D390", Offset = "0x102D390", VA = "0x102D390")]
	private void restoreCurrentIsland()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1032F2C", Offset = "0x1032F2C", VA = "0x1032F2C")]
	public void gameOver()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x10335B0", Offset = "0x10335B0", VA = "0x10335B0")]
	public void prepareGameToStart()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x10335B4", Offset = "0x10335B4", VA = "0x10335B4")]
	private void gameStarted()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x10335B8", Offset = "0x10335B8", VA = "0x10335B8")]
	public void loadGame(int progress)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x10335BC", Offset = "0x10335BC", VA = "0x10335BC")]
	public void gameLoaded()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x10335C0", Offset = "0x10335C0", VA = "0x10335C0")]
	public void startGame()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x10335C4", Offset = "0x10335C4", VA = "0x10335C4")]
	private void processTasks()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1033790", Offset = "0x1033790", VA = "0x1033790")]
	public void removeTaskByTag(string tag)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1033818", Offset = "0x1033818", VA = "0x1033818")]
	public BaseTask findTaskByTag(string tag)
	{
		return null;
	}

	[Token(Token = "0x6000401")]
	public void removeTaskByType<TaskType>()
	{
	}

	[Token(Token = "0x6000402")]
	public BaseTask findTaskByType<TaskType>()
	{
		return null;
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1016FD0", Offset = "0x1016FD0", VA = "0x1016FD0")]
	public void addTask(BaseTask task)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x10338C8", Offset = "0x10338C8", VA = "0x10338C8")]
	public void addRepeatedCallback(int numTimes, int numFrames, BaseTask.TaskCallback callback)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1033958", Offset = "0x1033958", VA = "0x1033958")]
	public AnimDoneCallbackTask addAnimDoneCallback(Animation anim, BaseTask.TaskCallback callback)
	{
		return null;
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x10173E0", Offset = "0x10173E0", VA = "0x10173E0")]
	public TimedCallbackTask addTimedCallback(int numFrames, BaseTask.TaskCallback callback)
	{
		return null;
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x10339E4", Offset = "0x10339E4", VA = "0x10339E4")]
	public void buttonPress(float value)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x10339EC", Offset = "0x10339EC", VA = "0x10339EC")]
	public void buttonTrigger(float value)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1021330", Offset = "0x1021330", VA = "0x1021330")]
	public void disableHoldButtonOnly()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1033A84", Offset = "0x1033A84", VA = "0x1033A84")]
	public void disableHoldButton()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1033AEC", Offset = "0x1033AEC", VA = "0x1033AEC")]
	private void updateHoldButton()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1033F38", Offset = "0x1033F38", VA = "0x1033F38")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1033F44", Offset = "0x1033F44", VA = "0x1033F44")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x102C9E4", Offset = "0x102C9E4", VA = "0x102C9E4")]
	private void showHands(bool state)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1034014", Offset = "0x1034014", VA = "0x1034014")]
	private void regainedFocus()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x103401C", Offset = "0x103401C", VA = "0x103401C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x10341EC", Offset = "0x10341EC", VA = "0x10341EC")]
	public void setQuality(int qualitySettingId)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x10341F0", Offset = "0x10341F0", VA = "0x10341F0")]
	public void setBrightness(int value)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x10341F4", Offset = "0x10341F4", VA = "0x10341F4")]
	public GameManager()
	{
	}
}
[Token(Token = "0x200003D")]
public class GameSimulator : MonoBehaviour
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float worldSize;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int gridTextureSize;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool landTurnsActive;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject mapObjsContainer;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject mapScroll;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject mapRot;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Computer computer;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<MapObject> mapObjs;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, MapObject> mapObjsByName;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color radarBackgroundColor;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int turnCounter;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ProcMap procMap;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SkyProcMap skyProcMap;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Signal signal;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int frameTick;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int tickCounter;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int skippedTurn;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool initialized;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int mapObjTotalTicks;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool executingTurn;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int autoTurnTick;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject pendingGateWallToOpen;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private RadarHolo radar;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x726514", Offset = "0x726514", VA = "0x726514")]
	public static GameSimulator getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x726578", Offset = "0x726578", VA = "0x726578")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x72657C", Offset = "0x72657C", VA = "0x72657C")]
	public void preInit()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x726640", Offset = "0x726640", VA = "0x726640")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x726648", Offset = "0x726648", VA = "0x726648")]
	public void reset()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x726A68", Offset = "0x726A68", VA = "0x726A68")]
	public float getMapScaleFactor()
	{
		return default(float);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x726A84", Offset = "0x726A84", VA = "0x726A84")]
	public SkyProcMap getSkyMap()
	{
		return null;
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x726A8C", Offset = "0x726A8C", VA = "0x726A8C")]
	public ProcMap getProcMap()
	{
		return null;
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x726A94", Offset = "0x726A94", VA = "0x726A94")]
	public int getNumRoadSpawnPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x726AB0", Offset = "0x726AB0", VA = "0x726AB0")]
	public int getNumWallSpawnPoints()
	{
		return default(int);
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x726ACC", Offset = "0x726ACC", VA = "0x726ACC")]
	public MapObject debugSpawnMapObj(string classname)
	{
		return null;
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x726D8C", Offset = "0x726D8C", VA = "0x726D8C")]
	public void debugSpawnTestTurret()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x726EA4", Offset = "0x726EA4", VA = "0x726EA4")]
	public void debugSpawnTestLandSquid()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x726F9C", Offset = "0x726F9C", VA = "0x726F9C")]
	public Vector3 debug_getNearStartPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x72707C", Offset = "0x72707C", VA = "0x72707C")]
	private void debug_settarget(MapObject target)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x727098", Offset = "0x727098", VA = "0x727098")]
	public void setPawnPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x7270EC", Offset = "0x7270EC", VA = "0x7270EC")]
	public Vector3 getPawnPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x727118", Offset = "0x727118", VA = "0x727118")]
	private void setPlayerPos(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x727338", Offset = "0x727338", VA = "0x727338")]
	public void placePawnInsideGatedCells(int gateId, GateMapObj gate)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x7273FC", Offset = "0x7273FC", VA = "0x7273FC")]
	public void placePawnAwayFrom(MapObject mapObj)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x7274CC", Offset = "0x7274CC", VA = "0x7274CC")]
	public void placePawnInRandomStartPos()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x72757C", Offset = "0x72757C", VA = "0x72757C")]
	private void initMapObject(MapObject mapObj)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x7276FC", Offset = "0x7276FC", VA = "0x7276FC")]
	public void placePlayerOnRandomSpawnPoint()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x727880", Offset = "0x727880", VA = "0x727880")]
	public void placePlayerCloseToSpawnPoint(Vector3 otherSpawnPoint, float minDistFromOtherPoint)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x727AA4", Offset = "0x727AA4", VA = "0x727AA4")]
	public Vector3 findClosestSpawnPoint(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x727C40", Offset = "0x727C40", VA = "0x727C40")]
	private void setupMapObj(MapObject mapObj, Vector3 radarCenterPos)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x727DDC", Offset = "0x727DDC", VA = "0x727DDC")]
	public void setupMap(GameObject islandParent, string spawnPointName = "")
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x728438", Offset = "0x728438", VA = "0x728438")]
	public void addWalls()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x72843C", Offset = "0x72843C", VA = "0x72843C")]
	public GuardianMapObj spawnGuardian(string displayName)
	{
		return null;
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x728504", Offset = "0x728504", VA = "0x728504")]
	public LighthouseMapObj spawnLighthouse(string displayName)
	{
		return null;
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x7285D0", Offset = "0x7285D0", VA = "0x7285D0")]
	public ArsenalMapObj spawnArsenal(string displayName)
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x728678", Offset = "0x728678", VA = "0x728678")]
	public CrystalTowerMapObj spawnCrystalTower(string displayName)
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x728740", Offset = "0x728740", VA = "0x728740")]
	public void debugMapObjAtStart(MapObject mapObj)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x7288A4", Offset = "0x7288A4", VA = "0x7288A4")]
	private MapObject findRandomMapObj(string nameStart)
	{
		return null;
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x728994", Offset = "0x728994", VA = "0x728994")]
	private bool openGateAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x728BF8", Offset = "0x728BF8", VA = "0x728BF8")]
	private void openGateCameraTrigger()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x728DEC", Offset = "0x728DEC", VA = "0x728DEC")]
	public void openGateNoAnim(string gateWall)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x729030", Offset = "0x729030", VA = "0x729030")]
	public void openGate(string gateWall)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x72913C", Offset = "0x72913C", VA = "0x72913C")]
	public List<Vector3> getSpawnPointsInRadar(int maxNum)
	{
		return null;
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x726BF0", Offset = "0x726BF0", VA = "0x726BF0")]
	public MapObject spawnMapObject(string mapObjName, string name, Vector3 pos, bool shouldInit = true)
	{
		return null;
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x729358", Offset = "0x729358", VA = "0x729358")]
	public void spawnGatedTurrets()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x7294E0", Offset = "0x7294E0", VA = "0x7294E0")]
	public void setSpawnAtDistFromPlayer(float dist)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x7294FC", Offset = "0x7294FC", VA = "0x7294FC")]
	public List<EnemyNauticrawlMapObj> spawnEnemyNauticrawls(int num)
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x7296C0", Offset = "0x7296C0", VA = "0x7296C0")]
	public List<SentinelMapObj> spawnSentinels(int num)
	{
		return null;
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x7298AC", Offset = "0x7298AC", VA = "0x7298AC")]
	public List<LandSquidMapObj> spawnLandSquids(int num)
	{
		return null;
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x729A98", Offset = "0x729A98", VA = "0x729A98")]
	public Vector3 getSpawnPointAtDist(Vector3 point, float dist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x729D6C", Offset = "0x729D6C", VA = "0x729D6C")]
	public Vector3 getGatedSpawnPointCloserTo(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x729D88", Offset = "0x729D88", VA = "0x729D88")]
	public WreckMapObj spawnHelperWreck(GateMapObj gate)
	{
		return null;
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x729EA4", Offset = "0x729EA4", VA = "0x729EA4")]
	public List<WreckMapObj> spawnWrecks(int num)
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x7266E4", Offset = "0x7266E4", VA = "0x7266E4")]
	private void clearCurrentIsland()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x72A090", Offset = "0x72A090", VA = "0x72A090")]
	public void stepProcMapGeneration()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x72A250", Offset = "0x72A250", VA = "0x72A250")]
	public bool isProcMapGenerationDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x72A26C", Offset = "0x72A26C", VA = "0x72A26C")]
	public void finaliseMapGeneration()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x72A2A8", Offset = "0x72A2A8", VA = "0x72A2A8")]
	public void debugStartNearMapObj(MapObject mapObj)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x72A484", Offset = "0x72A484", VA = "0x72A484")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x72A52C", Offset = "0x72A52C", VA = "0x72A52C")]
	private void execMapObjsTurn()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x72A5EC", Offset = "0x72A5EC", VA = "0x72A5EC")]
	public void startMapObjsTurn()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x72A5F8", Offset = "0x72A5F8", VA = "0x72A5F8")]
	public void playerTurnOver()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x72A6B4", Offset = "0x72A6B4", VA = "0x72A6B4")]
	public void decreaseTurnCounter()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x72A6C8", Offset = "0x72A6C8", VA = "0x72A6C8")]
	public void enableAllMapObjs(bool state)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x72A76C", Offset = "0x72A76C", VA = "0x72A76C")]
	public float getWorldSize()
	{
		return default(float);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x72A774", Offset = "0x72A774", VA = "0x72A774")]
	public List<MapObject> getMapObjs()
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x72A77C", Offset = "0x72A77C", VA = "0x72A77C")]
	public IslandData generateIslandData()
	{
		return null;
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x72AA10", Offset = "0x72AA10", VA = "0x72AA10")]
	public void restoreIsland(IslandData islandData)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x72ABBC", Offset = "0x72ABBC", VA = "0x72ABBC")]
	private void restoreMapObj(MapObject mapObj, MapObjData mapObjData)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x72ABF4", Offset = "0x72ABF4", VA = "0x72ABF4")]
	public List<GameObject> getCellWalls(int cellId)
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x72AC10", Offset = "0x72AC10", VA = "0x72AC10")]
	public List<Vector3> getCellSpawnPoints(int celId)
	{
		return null;
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x72AD08", Offset = "0x72AD08", VA = "0x72AD08")]
	public int getRandomCellId()
	{
		return default(int);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x72AD24", Offset = "0x72AD24", VA = "0x72AD24")]
	public bool isLighouseIslandId(int islandId)
	{
		return default(bool);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x72AD98", Offset = "0x72AD98", VA = "0x72AD98")]
	public GameSimulator()
	{
	}
}
[Token(Token = "0x200003E")]
public class GameUtils
{
	[Token(Token = "0x600045B")]
	[Address(RVA = "0x72AE68", Offset = "0x72AE68", VA = "0x72AE68")]
	public static float remap(float s, float a1, float a2, float b1, float b2)
	{
		return default(float);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x72AE84", Offset = "0x72AE84", VA = "0x72AE84")]
	public static Vector3 ProjectPointOnLine(Vector3 linePoint, Vector3 lineVec, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x72AF8C", Offset = "0x72AF8C", VA = "0x72AF8C")]
	public static Vector3 ProjectPoint(Vector3 point, Vector3 segmentStart, Vector3 segmentEnd)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x72B0B4", Offset = "0x72B0B4", VA = "0x72B0B4")]
	public static float Angle360(Vector3 vec)
	{
		return default(float);
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x72B1E4", Offset = "0x72B1E4", VA = "0x72B1E4")]
	public static string GetSubstring(string start, string end, string text)
	{
		return null;
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x72B278", Offset = "0x72B278", VA = "0x72B278")]
	public static void SetupAction(string action, ref Component component, ref MethodInfo method)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x72B60C", Offset = "0x72B60C", VA = "0x72B60C")]
	public GameUtils()
	{
	}
}
[Token(Token = "0x200003F")]
public class GameplayDebugControl : MonoBehaviour
{
	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string action;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string mouseUpAction;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float value;

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x72B614", Offset = "0x72B614", VA = "0x72B614")]
	private void Start()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x72B618", Offset = "0x72B618", VA = "0x72B618")]
	public void _OnMouseDown()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x72B9B8", Offset = "0x72B9B8", VA = "0x72B9B8")]
	public void _OnMouseUp()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x72B730", Offset = "0x72B730", VA = "0x72B730")]
	private void executeAction(string name, object[] args)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x72BAEC", Offset = "0x72BAEC", VA = "0x72BAEC")]
	public GameplayDebugControl()
	{
	}
}
[Token(Token = "0x2000040")]
public class GateMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool isOpen;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	private bool requiresKey;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string gateWall;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x72BB44", Offset = "0x72BB44", VA = "0x72BB44", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x72BB8C", Offset = "0x72BB8C", VA = "0x72BB8C")]
	public bool checkIsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x72BB78", Offset = "0x72BB78", VA = "0x72BB78")]
	private void initStates()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x72BB94", Offset = "0x72BB94", VA = "0x72BB94")]
	public void setRequiresKey(bool state)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x72BBA0", Offset = "0x72BBA0", VA = "0x72BBA0", Slot = "5")]
	public override int obtainConnectionClearance(LandShip ship, bool query)
	{
		return default(int);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x72BC08", Offset = "0x72BC08", VA = "0x72BC08")]
	public void keyUsed(object subject)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x72BC24", Offset = "0x72BC24", VA = "0x72BC24")]
	private void openGateSelected(object subject)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x72BDDC", Offset = "0x72BDDC", VA = "0x72BDDC")]
	public void plugKeySelected(object subject)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x72BFC4", Offset = "0x72BFC4", VA = "0x72BFC4", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x72C10C", Offset = "0x72C10C", VA = "0x72C10C")]
	public void setGateWall(GameObject wallObj)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x72C140", Offset = "0x72C140", VA = "0x72C140", Slot = "16")]
	protected override void setData(MapObjData data)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x72C188", Offset = "0x72C188", VA = "0x72C188", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x72C1FC", Offset = "0x72C1FC", VA = "0x72C1FC")]
	public GateMapObj()
	{
	}
}
[Token(Token = "0x2000041")]
public class GuardianMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject lineObj;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Color deadColor;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Color alertedColor;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Color offensiveColor;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float minDamage;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float maxDamage;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float sightRadius;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private LandShip ship;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Computer playerComputer;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private MapObjMover mover;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool attacked;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject pawn;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 sightVec;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int raycastMask;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool enemyVisible;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioSource lastPlayedSound;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x72D614", Offset = "0x72D614", VA = "0x72D614", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x72D9C0", Offset = "0x72D9C0", VA = "0x72D9C0", Slot = "12")]
	public override void setIsVisibleInRadar(bool state)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x72DA8C", Offset = "0x72DA8C", VA = "0x72DA8C", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x72D644", Offset = "0x72D644", VA = "0x72D644")]
	private void initStates()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x72DB18", Offset = "0x72DB18", VA = "0x72DB18")]
	private void updateLine()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x72DF58", Offset = "0x72DF58", VA = "0x72DF58", Slot = "4")]
	public override void takeDamage(float damage)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x72E224", Offset = "0x72E224", VA = "0x72E224")]
	private void playShutdownSound()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x72E2B0", Offset = "0x72E2B0", VA = "0x72E2B0", Slot = "8")]
	public override void playerTurnOver()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x72E0E8", Offset = "0x72E0E8", VA = "0x72E0E8")]
	private void resetState()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x72E348", Offset = "0x72E348", VA = "0x72E348", Slot = "9")]
	public override void execTick(int tick)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x72EAA0", Offset = "0x72EAA0", VA = "0x72EAA0", Slot = "5")]
	public override int obtainConnectionClearance(LandShip ship, bool query)
	{
		return default(int);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x72EB08", Offset = "0x72EB08", VA = "0x72EB08", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x72F064", Offset = "0x72F064", VA = "0x72F064")]
	public GuardianMapObj()
	{
	}
}
[Token(Token = "0x2000042")]
public class LandShip : MonoBehaviour
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float bloomMaxThreshold;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float bloomMinThreshold;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer portholeSkyObj;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer portholeSkyObj2;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer portholeBloom;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject portholeSkyOccluder;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color mainLightColor;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color warningLightColor;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color batteryWarningLightColor;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ejectLidObj;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> weaponCables;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject weaponCoverObj;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ActorJackManager jackManager;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float wallHitMaxDamage;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float jammerElectricalConsumption;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float stealthMaxElectricalConsumption;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float engineHeatStealthContribution;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float stealthEnergyMultiplier;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float jammerEnergyMultiplier;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float jammerSignalIncrRate;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float stealthLevel;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Ship ship;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Engine engine;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ElectricalGroup electricalGrp;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RadarHolo radar;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameManager game;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private FinderComp finder;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int maxEquip;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Computer computer;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float stealthPower;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool jammerActive;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float jammerLevel;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private MapObject jammedMapObject;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool jammedMapObjectLock;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private MapObject weaponTargetMapObj;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float engineEnergyIn;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float stealthEnergyIn;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float jammerEnergyIn;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float engineEnergy;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float stealthEnergy;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float jammerEnergy;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float energyMaxVal;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool shouldEject;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float crystalLevel;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool[] zeppelinSwitches;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Signal outSignal;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Signal bootedSignal;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Signal electricalOnSignal;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Signal engineOnSignal;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private SystemMenu sysMenu;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float boostStealthRate;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string radioMessage;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Camera radarCamera;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool radioEnabled;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private int statsScreenId;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float zeppelinProgress;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float zeppelinAltitude;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool crystalSwitchReadySoundPlayed;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 startVolumetricLightRot;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float volumetricLightRange;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool zeppelinOffGround;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private AudioSource backgroundSound;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private AudioSource engineSound;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float portHoleOcclusionTarget;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float portHoleOcclusion;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool warningLightLocked;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int warningLightLevel;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float weaponLevel;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private bool weaponActive;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float weaponCharge;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool chargingWeapon;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private AudioSource weaponSound;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int weaponType;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float weaponLevelIncrRate;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float weaponLevelConsumption;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private string weaponName;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float maxEngineVolume;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private bool energyPanelRequired;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private int heraldryLevel;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private bool energyPanelActive;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private string fieldNoteMethodStr;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private float batteryConsumptionLevel;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private bool hullIntegrityWarned;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float weaponMaxDist;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float weaponFirePower;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float weaponPrecision;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float hullIntegrityBost;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool enemiesTrackingPlayer;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float fuelErogTreshold;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool isTrailMessage;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
	private bool weaponFireInProgress;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x232")]
	private bool showingAlert;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private Vector2 skyTextureOffset;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Material skyMat;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private bool initialized;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private float maxSunlight;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private float sunlightPower;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private GameObject mainLightObj;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private GameObject crystalCover;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private LevelIndicatorComp crystalLevelIndicator;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private bool needUpdateEngineSound;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private GameObject crystalObj;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Vector3 crystalRestPos;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private AudioSource waterDripSound;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private TabletManager tabletManager;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private List<Texture> tabletPages;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private int tabletIndex;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private int tabletPageAdvance;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float tabletPrevTrans;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private float tabletNextTrans;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private GameObject sunLightObj;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Vector3 defaultSunLightRot;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private bool squidStuckMode;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CD")]
	private bool shouldBlinkTabletScreen;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private Material weaponMatrixMat;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private GameObject landsquidMapObj;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private bool periscopeScanning;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E1")]
	private bool zeppelinActive;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private int tabletTriggerCounter;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool weaponCoverMoving;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E9")]
	private bool debugGoToZeppelin;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private int tick;

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x72DAB4", Offset = "0x72DAB4", VA = "0x72DAB4")]
	public static LandShip getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x734D2C", Offset = "0x734D2C", VA = "0x734D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x734D30", Offset = "0x734D30", VA = "0x734D30")]
	public void preInit()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x7352F4", Offset = "0x7352F4", VA = "0x7352F4")]
	public void debug_goToZeppelin()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x735364", Offset = "0x735364", VA = "0x735364")]
	public void debug_goToLowerDeck()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x7353D4", Offset = "0x7353D4", VA = "0x7353D4")]
	private void initTablet()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x7355C0", Offset = "0x7355C0", VA = "0x7355C0")]
	public void receiveTabletData()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x73574C", Offset = "0x73574C", VA = "0x73574C")]
	private bool blinkTablet(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x735840", Offset = "0x735840", VA = "0x735840")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x735848", Offset = "0x735848", VA = "0x735848")]
	public void reset()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x7360B8", Offset = "0x7360B8", VA = "0x7360B8")]
	public bool isSquidStackMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x7360C0", Offset = "0x7360C0", VA = "0x7360C0")]
	public void setSquidStuckMode(bool state, [Optional] GameObject landsquidMapObj)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x7366D4", Offset = "0x7366D4", VA = "0x7366D4")]
	public void debug_test1()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x7360B4", Offset = "0x7360B4", VA = "0x7360B4")]
	private void resetPortholeOcclusion()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x7366D8", Offset = "0x7366D8", VA = "0x7366D8")]
	public void setElectricalLocked(bool state)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x7366DC", Offset = "0x7366DC", VA = "0x7366DC")]
	private void updateSaveDataAndBuildIsland()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x736BB4", Offset = "0x736BB4", VA = "0x736BB4")]
	public void debugEnableEject()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x736C84", Offset = "0x736C84", VA = "0x736C84")]
	public void enteredCockpit()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x737A14", Offset = "0x737A14", VA = "0x737A14")]
	private void setWeaponJacksActive(bool state)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x737BA8", Offset = "0x737BA8", VA = "0x737BA8")]
	private bool startFloorAdjustAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x737CF8", Offset = "0x737CF8", VA = "0x737CF8")]
	public void landingSequenceDone()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x7378BC", Offset = "0x7378BC", VA = "0x7378BC")]
	private void initFromPlayerData()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x737FD8", Offset = "0x737FD8", VA = "0x737FD8")]
	public List<ShipPart> getParts()
	{
		return null;
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x737FF4", Offset = "0x737FF4", VA = "0x737FF4")]
	public void computerBooted()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x7385DC", Offset = "0x7385DC", VA = "0x7385DC")]
	private void updateLights()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x738668", Offset = "0x738668", VA = "0x738668")]
	public void flickerMainLight()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x73872C", Offset = "0x73872C", VA = "0x73872C")]
	private bool updateMainLightFlicker(int enlapsedFrames)
	{
		return default(bool);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x7364D0", Offset = "0x7364D0", VA = "0x7364D0")]
	private void startSunLightUpdate()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x7387F8", Offset = "0x7387F8", VA = "0x7387F8")]
	private bool updateSunLight(int enlapsedFrames)
	{
		return default(bool);
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x738A10", Offset = "0x738A10", VA = "0x738A10")]
	private void electricalSwitched()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x739368", Offset = "0x739368", VA = "0x739368")]
	private int getNumEquippedResources()
	{
		return default(int);
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x739424", Offset = "0x739424", VA = "0x739424")]
	public bool equipSlotsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x739450", Offset = "0x739450", VA = "0x739450")]
	public void addResource(Resource resource)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x73946C", Offset = "0x73946C", VA = "0x73946C")]
	public void useResource(Resource resource)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x737E3C", Offset = "0x737E3C", VA = "0x737E3C")]
	public void equipResource(Resource resource)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x739578", Offset = "0x739578", VA = "0x739578")]
	public void unequipResource(Resource resource)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x7396E0", Offset = "0x7396E0", VA = "0x7396E0")]
	public void discardResource(Resource resource)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x7396FC", Offset = "0x7396FC", VA = "0x7396FC")]
	public void discardEquippedResource(Resource resource)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x739718", Offset = "0x739718", VA = "0x739718")]
	public bool isEngineEnergyRedirected()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x73972C", Offset = "0x73972C", VA = "0x73972C")]
	public bool isStealthEnergyRedirected()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x739740", Offset = "0x739740", VA = "0x739740")]
	public bool isJammerEnergyRedirected()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x739754", Offset = "0x739754", VA = "0x739754")]
	public bool isEngineFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x739770", Offset = "0x739770", VA = "0x739770")]
	public bool isComputerFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x73978C", Offset = "0x73978C", VA = "0x73978C")]
	public bool isStealthFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x7397A8", Offset = "0x7397A8", VA = "0x7397A8")]
	public bool isPowerFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x7397C4", Offset = "0x7397C4", VA = "0x7397C4")]
	public bool isRadarFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x7397E0", Offset = "0x7397E0", VA = "0x7397E0")]
	public bool isJammerFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x7397FC", Offset = "0x7397FC", VA = "0x7397FC")]
	public void setStealthPower(float value)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x739804", Offset = "0x739804", VA = "0x739804")]
	public bool isStealthPowered()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x739814", Offset = "0x739814", VA = "0x739814")]
	public float getStealthPower()
	{
		return default(float);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x73981C", Offset = "0x73981C", VA = "0x73981C")]
	public void interactTabletKnob(float value)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x739AD0", Offset = "0x739AD0", VA = "0x739AD0")]
	public void checkShouldEnableTablet()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x739B9C", Offset = "0x739B9C", VA = "0x739B9C")]
	public void interactPeriscope()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x739DD4", Offset = "0x739DD4", VA = "0x739DD4")]
	private void showPeriscopeScan()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x73A1C0", Offset = "0x73A1C0", VA = "0x73A1C0")]
	public void interactSetCloak(float value)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x73A200", Offset = "0x73A200", VA = "0x73A200")]
	public void interactSetCloakEnd(float value)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x738AAC", Offset = "0x738AAC", VA = "0x738AAC")]
	public void updateStealthLevel()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x73A49C", Offset = "0x73A49C", VA = "0x73A49C")]
	private void notifyStealthThreshold(float oldStealth)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x73A55C", Offset = "0x73A55C", VA = "0x73A55C")]
	public bool isStealthNeeded()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x73A5A4", Offset = "0x73A5A4", VA = "0x73A5A4")]
	public bool stealthNeedsLessHeat()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x73A5E8", Offset = "0x73A5E8", VA = "0x73A5E8")]
	public bool stealthNeedsLessErogation()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x73A650", Offset = "0x73A650", VA = "0x73A650")]
	public void setEnemiesTrackingPlayer(bool state)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x73A734", Offset = "0x73A734", VA = "0x73A734")]
	public bool isJammerHooked()
	{
		return default(bool);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x73A73C", Offset = "0x73A73C", VA = "0x73A73C")]
	public void setJammedMapObject(MapObject mapObj)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x73A8D4", Offset = "0x73A8D4", VA = "0x73A8D4")]
	public MapObject getJammedMapObject()
	{
		return null;
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x73A8DC", Offset = "0x73A8DC", VA = "0x73A8DC")]
	public List<Resource> getResources()
	{
		return null;
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x73A8F8", Offset = "0x73A8F8", VA = "0x73A8F8")]
	public Resource findResourceByName(string name)
	{
		return null;
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x738D44", Offset = "0x738D44", VA = "0x738D44")]
	public void unhookJammedTarget()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x73A914", Offset = "0x73A914", VA = "0x73A914")]
	public void setEngineState(bool state)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x732FC8", Offset = "0x732FC8", VA = "0x732FC8")]
	public void updateJammerSignal()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x735D2C", Offset = "0x735D2C", VA = "0x735D2C")]
	public void resetMaxEngineVolume()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x73A918", Offset = "0x73A918", VA = "0x73A918")]
	public void shouldUpdateEngineSound()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x73A924", Offset = "0x73A924", VA = "0x73A924")]
	private void updateEngineSound()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x73ABC0", Offset = "0x73ABC0", VA = "0x73ABC0")]
	public bool crystalSwitchReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x73ABF4", Offset = "0x73ABF4", VA = "0x73ABF4")]
	private void playCrystalSound()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x73ACE0", Offset = "0x73ACE0", VA = "0x73ACE0")]
	public void updateZeppelingModule()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x73B3C8", Offset = "0x73B3C8", VA = "0x73B3C8")]
	public void occludePortHole(float amount = 1f)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x73B3CC", Offset = "0x73B3CC", VA = "0x73B3CC")]
	private void updateWindowLight()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x73B3D0", Offset = "0x73B3D0", VA = "0x73B3D0")]
	private void engineSwitched()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x73B52C", Offset = "0x73B52C", VA = "0x73B52C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x73B614", Offset = "0x73B614", VA = "0x73B614")]
	public float getStealthLevel()
	{
		return default(float);
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x73B61C", Offset = "0x73B61C", VA = "0x73B61C")]
	public float getHullIntegrity()
	{
		return default(float);
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x73B6E8", Offset = "0x73B6E8", VA = "0x73B6E8")]
	private void showHullStats()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x73BC10", Offset = "0x73BC10", VA = "0x73BC10")]
	public float getStealthElectricalConsumption()
	{
		return default(float);
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x73BC34", Offset = "0x73BC34", VA = "0x73BC34")]
	public float getBatteryConsumptionLevel()
	{
		return default(float);
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x73BC3C", Offset = "0x73BC3C", VA = "0x73BC3C")]
	private void showPowerStats()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x73BC40", Offset = "0x73BC40", VA = "0x73BC40")]
	public void showEngineStats()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x73CA60", Offset = "0x73CA60", VA = "0x73CA60")]
	public void showStealthStats()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x73D1D4", Offset = "0x73D1D4", VA = "0x73D1D4")]
	public void showNehookStats()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x73D548", Offset = "0x73D548", VA = "0x73D548")]
	private bool isEnergyFlowBalanced()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x73D5B4", Offset = "0x73D5B4", VA = "0x73D5B4")]
	private void showEnergyFlowStats()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x7380D4", Offset = "0x7380D4", VA = "0x7380D4")]
	public void updateStats()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x73DB6C", Offset = "0x73DB6C", VA = "0x73DB6C")]
	public void nextStatsScreen()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x73DC64", Offset = "0x73DC64", VA = "0x73DC64")]
	public void prevStatsScreen()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x73DD60", Offset = "0x73DD60", VA = "0x73DD60")]
	public List<Resource> getEquippedResources()
	{
		return null;
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x72E9A0", Offset = "0x72E9A0", VA = "0x72E9A0")]
	public void takeRandomPartDamage(float damage)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x73E2D8", Offset = "0x73E2D8", VA = "0x73E2D8")]
	public void takeCollisionDamage()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x73E350", Offset = "0x73E350", VA = "0x73E350")]
	private void setPartFaulty(ShipPart part)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x73B404", Offset = "0x73B404", VA = "0x73B404")]
	private void updateWaterDrip()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x73DE84", Offset = "0x73DE84", VA = "0x73DE84")]
	public void takeDamage(string partName, float damage, bool internalDamage = false)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x73E68C", Offset = "0x73E68C", VA = "0x73E68C")]
	public void displayRepairMenu(Resource repairKitResource)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x73E6A8", Offset = "0x73E6A8", VA = "0x73E6A8")]
	public void repairDamagedPart(int partId)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x73E960", Offset = "0x73E960", VA = "0x73E960")]
	public void interactNethookSwitchOn(float value)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x73EA5C", Offset = "0x73EA5C", VA = "0x73EA5C")]
	public void interactNethookDeploy()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x73EDC8", Offset = "0x73EDC8", VA = "0x73EDC8")]
	private bool checkNethookSwitchState(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x73EE74", Offset = "0x73EE74", VA = "0x73EE74")]
	public void interactNethookSwitchEnd(float value)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x738E94", Offset = "0x738E94", VA = "0x738E94")]
	public bool setJammerActive(bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x73EF5C", Offset = "0x73EF5C", VA = "0x73EF5C")]
	public bool isJammerConnectionReady()
	{
		return default(bool);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x73EFEC", Offset = "0x73EFEC", VA = "0x73EFEC")]
	public bool isJammerOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x73EB34", Offset = "0x73EB34", VA = "0x73EB34")]
	private void jammerDeploy()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x73F1D0", Offset = "0x73F1D0", VA = "0x73F1D0")]
	private void attemptJammerConnection(object arg)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x73F520", Offset = "0x73F520", VA = "0x73F520")]
	private void jammerConnected()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x73F91C", Offset = "0x73F91C", VA = "0x73F91C")]
	public void forceNethookConnection(EnemyNauticrawlMapObj enemy)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x73FACC", Offset = "0x73FACC", VA = "0x73FACC")]
	private void refusedUntrustedConnection(object arg)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x73FAD0", Offset = "0x73FAD0", VA = "0x73FAD0")]
	private void acceptedUntrustedConnection(object arg)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x73F828", Offset = "0x73F828", VA = "0x73F828")]
	private void connectionUntrusted()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x73F3C4", Offset = "0x73F3C4", VA = "0x73F3C4")]
	private void connectionRefused()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x73FAD4", Offset = "0x73FAD4", VA = "0x73FAD4")]
	public float getJammerWeaponLevel()
	{
		return default(float);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x73FAE4", Offset = "0x73FAE4", VA = "0x73FAE4")]
	public bool isJammerWeaponActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x739D94", Offset = "0x739D94", VA = "0x739D94")]
	public bool isJammerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x73FAFC", Offset = "0x73FAFC", VA = "0x73FAFC")]
	public float getJammerLevel()
	{
		return default(float);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x736600", Offset = "0x736600", VA = "0x736600")]
	private void setMainLightColor(Color color)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x73FB04", Offset = "0x73FB04", VA = "0x73FB04")]
	public void lockWarning(bool locked)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x735EA8", Offset = "0x735EA8", VA = "0x735EA8")]
	public void setWarning(int level)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x73FB10", Offset = "0x73FB10", VA = "0x73FB10")]
	public int getMaxResources()
	{
		return default(int);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x73FB2C", Offset = "0x73FB2C", VA = "0x73FB2C")]
	public bool resourceSlotAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x73FB48", Offset = "0x73FB48", VA = "0x73FB48")]
	public int numResourceSlotAvailable()
	{
		return default(int);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x737B1C", Offset = "0x737B1C", VA = "0x737B1C")]
	private void updateStorageWeight()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x73FB64", Offset = "0x73FB64", VA = "0x73FB64")]
	public int getStorageWeight()
	{
		return default(int);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x73FB80", Offset = "0x73FB80", VA = "0x73FB80")]
	public int getMaxStorageWeight()
	{
		return default(int);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x73FB9C", Offset = "0x73FB9C", VA = "0x73FB9C")]
	public float getWeightToEngineMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x73FBC8", Offset = "0x73FBC8", VA = "0x73FBC8")]
	public bool isEjecting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x73FBD0", Offset = "0x73FBD0", VA = "0x73FBD0")]
	private void forceUnlockEjectDone()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x73FBD4", Offset = "0x73FBD4", VA = "0x73FBD4")]
	public void forceUnlockEject()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x73FBD8", Offset = "0x73FBD8", VA = "0x73FBD8")]
	public void disableEject()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x73FE60", Offset = "0x73FE60", VA = "0x73FE60")]
	private void ejectRetracted()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x73E4E8", Offset = "0x73E4E8", VA = "0x73E4E8")]
	public void possiblyNeedsEject()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x73FF64", Offset = "0x73FF64", VA = "0x73FF64")]
	private void ejectLidOpened()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x7400D8", Offset = "0x7400D8", VA = "0x7400D8")]
	public bool jumpStartAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x740128", Offset = "0x740128", VA = "0x740128")]
	public void interactEjectButton()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x735C9C", Offset = "0x735C9C", VA = "0x735C9C")]
	private void stopWaterDrip()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x7402E0", Offset = "0x7402E0", VA = "0x7402E0")]
	public float getEngineEnergy()
	{
		return default(float);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x7402E8", Offset = "0x7402E8", VA = "0x7402E8")]
	public float getStealthEnergy()
	{
		return default(float);
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x7402F0", Offset = "0x7402F0", VA = "0x7402F0")]
	public float getJammerEnergy()
	{
		return default(float);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x7402F8", Offset = "0x7402F8", VA = "0x7402F8")]
	public float getStealthEnergyMultiplied()
	{
		return default(float);
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x740308", Offset = "0x740308", VA = "0x740308")]
	public float getJammerEnergyMultiplied()
	{
		return default(float);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x740318", Offset = "0x740318", VA = "0x740318")]
	private void updateEnergyFlow()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x740638", Offset = "0x740638", VA = "0x740638")]
	public void setEngineEnergy(float value)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x740640", Offset = "0x740640", VA = "0x740640")]
	private void logEnergyFlow()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x740A78", Offset = "0x740A78", VA = "0x740A78")]
	public void setEngineEnergyVerbose(float value)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x740AA0", Offset = "0x740AA0", VA = "0x740AA0")]
	public void setStealthEnergy(float value)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x740AA8", Offset = "0x740AA8", VA = "0x740AA8")]
	public void setStealthEnergyVerbose(float value)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x740AD0", Offset = "0x740AD0", VA = "0x740AD0")]
	public void setJammerEnergy(float value)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x740AD8", Offset = "0x740AD8", VA = "0x740AD8")]
	public void setJammerEnergyVerbose(float value)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x740B00", Offset = "0x740B00", VA = "0x740B00")]
	public void focusFinderTarget(string targetName)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x740B1C", Offset = "0x740B1C", VA = "0x740B1C")]
	public void addFinderTarget(MapObject mapObj, bool verbose = false)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x740C18", Offset = "0x740C18", VA = "0x740C18")]
	public float getRadioSignal()
	{
		return default(float);
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x740C38", Offset = "0x740C38", VA = "0x740C38")]
	public bool isRadioEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x735FDC", Offset = "0x735FDC", VA = "0x735FDC")]
	private void enableRadio(bool state)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x740C40", Offset = "0x740C40", VA = "0x740C40")]
	private string parseFieldNote(string message, out string embeddedCommand, out string keyword)
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x740D88", Offset = "0x740D88", VA = "0x740D88")]
	private void execFieldNoteDiscovery()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x7413F4", Offset = "0x7413F4", VA = "0x7413F4")]
	public string extractFieldNoteData(string msg)
	{
		return null;
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x7414BC", Offset = "0x7414BC", VA = "0x7414BC")]
	private void startRadioTransmission()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x74169C", Offset = "0x74169C", VA = "0x74169C")]
	private FieldNote addFieldNote(string noteHeader)
	{
		return null;
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x7410A8", Offset = "0x7410A8", VA = "0x7410A8")]
	private void addFieldNoteFinalMigration()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x741040", Offset = "0x741040", VA = "0x741040")]
	private void addFieldNoteForbiddenSurface()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x7417B0", Offset = "0x7417B0", VA = "0x7417B0")]
	public void addFieldNoteOptimizedCloak()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x741320", Offset = "0x741320", VA = "0x741320")]
	private void addFieldNoteReactToMotion()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x740FD8", Offset = "0x740FD8", VA = "0x740FD8")]
	private void addFieldNoteTheLighthouse()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x740F70", Offset = "0x740F70", VA = "0x740F70")]
	private void addFieldNoteSkyways()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x74117C", Offset = "0x74117C", VA = "0x74117C")]
	private void addFieldNoteMagmaticSeas()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x7411E4", Offset = "0x7411E4", VA = "0x7411E4")]
	private void addFieldNoteSaltMines()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x74124C", Offset = "0x74124C", VA = "0x74124C")]
	private void addFieldNoteRoyalArsenal()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x7417B4", Offset = "0x7417B4", VA = "0x7417B4")]
	public void clearRadioMessage()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x74188C", Offset = "0x74188C", VA = "0x74188C")]
	public void interactRadioButton()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x741A74", Offset = "0x741A74", VA = "0x741A74")]
	public bool isZeppelingOffGround()
	{
		return default(bool);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x741A7C", Offset = "0x741A7C", VA = "0x741A7C")]
	private bool checkCrystalSwitches(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x741BEC", Offset = "0x741BEC", VA = "0x741BEC")]
	public void interactCrystalSwitchEnd(float value)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x741CB0", Offset = "0x741CB0", VA = "0x741CB0")]
	public void interactCrystalSwitch1(float value)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x742390", Offset = "0x742390", VA = "0x742390")]
	public void interactCrystalSwitch2(float value)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x742434", Offset = "0x742434", VA = "0x742434")]
	public void interactCrystalSwitch3(float value)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x741D54", Offset = "0x741D54", VA = "0x741D54")]
	private bool switchToZeppelin(int switchId, bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x7424D8", Offset = "0x7424D8", VA = "0x7424D8")]
	public bool switchToZeppelin0(bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x7424E4", Offset = "0x7424E4", VA = "0x7424E4")]
	public bool switchToZeppelin1(bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x7424F0", Offset = "0x7424F0", VA = "0x7424F0")]
	public void forceZeppelinMode()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x7424FC", Offset = "0x7424FC", VA = "0x7424FC")]
	public bool switchToZeppelin2(bool state)
	{
		return default(bool);
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x742508", Offset = "0x742508", VA = "0x742508")]
	public float getCrystalLevel()
	{
		return default(float);
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x742510", Offset = "0x742510", VA = "0x742510")]
	public void decryptResource(Resource decrypterResource)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x742514", Offset = "0x742514", VA = "0x742514")]
	public void useEncryptedResource(Resource encryptedResource)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x742518", Offset = "0x742518", VA = "0x742518")]
	public void refillFuel(Resource fuelResource)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x742828", Offset = "0x742828", VA = "0x742828")]
	public void rechargeBattery(Resource batteryResource)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x742960", Offset = "0x742960", VA = "0x742960")]
	public bool canReceiveRadioMessage()
	{
		return default(bool);
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x742A14", Offset = "0x742A14", VA = "0x742A14")]
	public void receiveRadioMessage(string message, bool trailBroadcast = true)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x738578", Offset = "0x738578", VA = "0x738578")]
	private void displayRadioMessageAlert()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x742B9C", Offset = "0x742B9C", VA = "0x742B9C")]
	private void crystalMounted(object subject)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x742DD0", Offset = "0x742DD0", VA = "0x742DD0")]
	public bool isCrystalSwitch1On()
	{
		return default(bool);
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x742E04", Offset = "0x742E04", VA = "0x742E04")]
	public bool isCrystalSwitch2On()
	{
		return default(bool);
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x742E3C", Offset = "0x742E3C", VA = "0x742E3C")]
	public bool isCrystalSwitch3On()
	{
		return default(bool);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x742E74", Offset = "0x742E74", VA = "0x742E74")]
	public bool isCrystalSwitch1Ready()
	{
		return default(bool);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x742ECC", Offset = "0x742ECC", VA = "0x742ECC")]
	public bool isCrystalSwitch2Ready()
	{
		return default(bool);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x742F28", Offset = "0x742F28", VA = "0x742F28")]
	public bool isCrystalSwitch3Ready()
	{
		return default(bool);
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x742F84", Offset = "0x742F84", VA = "0x742F84")]
	private void drawComputerFaultyScreen()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x743028", Offset = "0x743028", VA = "0x743028")]
	public void mountCrystal(Resource crystal)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x74325C", Offset = "0x74325C", VA = "0x74325C")]
	public void cleanupZeppelin()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x743AC8", Offset = "0x743AC8", VA = "0x743AC8")]
	public void resetRadarAfterLanding()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x743B2C", Offset = "0x743B2C", VA = "0x743B2C")]
	public bool jammerButtonShouldBlink()
	{
		return default(bool);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x743CDC", Offset = "0x743CDC", VA = "0x743CDC")]
	private void increaseWeaponLevel()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x73F1B4", Offset = "0x73F1B4", VA = "0x73F1B4")]
	private void completeTurn()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x743D40", Offset = "0x743D40", VA = "0x743D40")]
	public void engineMoveStart()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x743DF4", Offset = "0x743DF4", VA = "0x743DF4")]
	private bool blinkFinderAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x743EE8", Offset = "0x743EE8", VA = "0x743EE8")]
	public void engineMoved()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x743D44", Offset = "0x743D44", VA = "0x743D44")]
	private void updatePorthole()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x744178", Offset = "0x744178", VA = "0x744178")]
	public int getWeaponType()
	{
		return default(int);
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x744180", Offset = "0x744180", VA = "0x744180")]
	public float getWeaponLevel()
	{
		return default(float);
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x7441BC", Offset = "0x7441BC", VA = "0x7441BC")]
	private void retractWeaponCoverDone()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x744260", Offset = "0x744260", VA = "0x744260")]
	private void weaponCoverStoppedMoving()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x744268", Offset = "0x744268", VA = "0x744268")]
	private void retractWeaponCover()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x735D38", Offset = "0x735D38", VA = "0x735D38")]
	private void closeWeaponCover(bool reset = false)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x744404", Offset = "0x744404", VA = "0x744404")]
	private void openWeaponCoverFailed()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x744578", Offset = "0x744578", VA = "0x744578")]
	public float getWeaponCharge()
	{
		return default(float);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x744580", Offset = "0x744580", VA = "0x744580")]
	public bool isChargingWeapon()
	{
		return default(bool);
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x744588", Offset = "0x744588", VA = "0x744588")]
	private void causedEnemyDamage()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x744708", Offset = "0x744708", VA = "0x744708")]
	private void dischargeWeaponDone()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x744874", Offset = "0x744874", VA = "0x744874")]
	private void dischargeWeapon()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x744AA8", Offset = "0x744AA8", VA = "0x744AA8")]
	private void openWeaponCoverDone()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x744CD8", Offset = "0x744CD8", VA = "0x744CD8")]
	private void tryOpenWeaponCover()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x744F3C", Offset = "0x744F3C", VA = "0x744F3C")]
	private void causeWeaponMatrixRandomEffect()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x744FC4", Offset = "0x744FC4", VA = "0x744FC4")]
	private void nullWeaponFired()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x744FC8", Offset = "0x744FC8", VA = "0x744FC8")]
	public bool isWeaponButtonReadyToOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x745008", Offset = "0x745008", VA = "0x745008")]
	public void equipWeaponAccumulator(Resource weaponAccumulatorResource, bool equip)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x7450AC", Offset = "0x7450AC", VA = "0x7450AC")]
	public void interactWeaponCoverButton()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x73EFF4", Offset = "0x73EFF4", VA = "0x73EFF4")]
	private void fireWeapon()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x7451EC", Offset = "0x7451EC", VA = "0x7451EC")]
	public bool isWeaponReadyToFire()
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x74529C", Offset = "0x74529C", VA = "0x74529C")]
	public bool isWeaponCoverOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x7452A4", Offset = "0x7452A4", VA = "0x7452A4")]
	public bool isWeaponActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x73EF38", Offset = "0x73EF38", VA = "0x73EF38")]
	public bool isWeaponConfigured()
	{
		return default(bool);
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x745350", Offset = "0x745350", VA = "0x745350")]
	private bool weaponCodesMatch(int[] code1, int[] code2)
	{
		return default(bool);
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x73765C", Offset = "0x73765C", VA = "0x73765C")]
	private void validateWeaponMatrixCode()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x7453E4", Offset = "0x7453E4", VA = "0x7453E4")]
	private void updateCablesColor()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x7453E8", Offset = "0x7453E8", VA = "0x7453E8")]
	public void updateWeaponMatrix()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x7455B4", Offset = "0x7455B4", VA = "0x7455B4")]
	public List<WeaponCode> getWeaponCodes()
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x737640", Offset = "0x737640", VA = "0x737640")]
	public void addWeaponCode(WeaponCode weaponCode)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x7455E0", Offset = "0x7455E0", VA = "0x7455E0")]
	public void energyPanelFlipped(bool state)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x7455E4", Offset = "0x7455E4", VA = "0x7455E4")]
	public bool shouldEnergyPanelBeOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x7360A8", Offset = "0x7360A8", VA = "0x7360A8")]
	private void resetEnergyFlow()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x7455EC", Offset = "0x7455EC", VA = "0x7455EC")]
	private void unlockEnergyPanel(bool state, bool warnUser = true)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x7455F0", Offset = "0x7455F0", VA = "0x7455F0")]
	public void equipEngineBoost(Resource resource, bool equip)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x74561C", Offset = "0x74561C", VA = "0x74561C")]
	public void equipFuelAutoRefill(Resource resource, bool equip)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x74563C", Offset = "0x74563C", VA = "0x74563C")]
	public void equipHeatBoost(Resource resource, bool equip)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x74566C", Offset = "0x74566C", VA = "0x74566C")]
	public bool isStealthBoosted()
	{
		return default(bool);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x745680", Offset = "0x745680", VA = "0x745680")]
	public void equipStealthBoost(Resource resource, bool equip)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x745698", Offset = "0x745698", VA = "0x745698")]
	public void equipHullBoost(Resource resource, bool equip)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x7456B4", Offset = "0x7456B4", VA = "0x7456B4")]
	public void equipPanelUnlocker(Resource resource, bool equip)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x7456B8", Offset = "0x7456B8", VA = "0x7456B8")]
	public void equipHeraldryScrambler(Resource resource)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x7457AC", Offset = "0x7457AC", VA = "0x7457AC")]
	public void equipHeraldryLevel1(Resource resource, bool equip)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x7457BC", Offset = "0x7457BC", VA = "0x7457BC")]
	public void equipHeraldryLevel2(Resource resource, bool equip)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x7457CC", Offset = "0x7457CC", VA = "0x7457CC")]
	public int getHeraldryLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x7457D4", Offset = "0x7457D4", VA = "0x7457D4")]
	private void displayAllMonitorsWarn(BaseTask.TaskCallback callback, bool menuBufferWarn = true)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x74597C", Offset = "0x74597C", VA = "0x74597C")]
	public void allMonitorsWarnDisplay(string msg, string subMsg = "", bool menuBufferWarn = true)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x745A88", Offset = "0x745A88", VA = "0x745A88")]
	private void batteryLowCriticalWarningDisplay()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x745AF0", Offset = "0x745AF0", VA = "0x745AF0")]
	private void fuelLowCriticalWarningDisplay()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x745B78", Offset = "0x745B78", VA = "0x745B78")]
	public void displayTankEmptyCriticalWarning()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x745DA4", Offset = "0x745DA4", VA = "0x745DA4")]
	public void displayBatteryLowCriticalWarning()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x745E1C", Offset = "0x745E1C", VA = "0x745E1C")]
	public void displayFuelLowCriticalWarning()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x73E46C", Offset = "0x73E46C", VA = "0x73E46C")]
	public void displayHullLowCriticalWarning()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x745E94", Offset = "0x745E94", VA = "0x745E94")]
	public void alertScreenDismissed()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x745E98", Offset = "0x745E98", VA = "0x745E98")]
	public void cockpitRotating(float value)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x745F5C", Offset = "0x745F5C", VA = "0x745F5C")]
	public void cockpitMoving(float value)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x746010", Offset = "0x746010", VA = "0x746010")]
	public void interactJack()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x737970", Offset = "0x737970", VA = "0x737970")]
	public void showSky()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x746088", Offset = "0x746088", VA = "0x746088")]
	public void hideSky()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x74612C", Offset = "0x74612C", VA = "0x74612C")]
	public LandShip()
	{
	}
}
[Token(Token = "0x2000043")]
public class LandSquidMapObj : MapObject
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject lineObj;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color deadColor;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color alertedColor;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color offensiveColor;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float minDamage;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float maxDamage;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float sightRadius;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool pitTracker;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private LandShip ship;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Computer playerComputer;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private MapObjMover mover;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool attacked;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject pawn;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool pitTrackerActivated;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioSource lastPlayedSound;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool canTriggerStuckMode;

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x6B89BC", Offset = "0x6B89BC", VA = "0x6B89BC", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x6B8B98", Offset = "0x6B8B98", VA = "0x6B8B98")]
	public void resetPitTracker()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x6B8CD0", Offset = "0x6B8CD0", VA = "0x6B8CD0")]
	public bool isPitTrackerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x6B8CD8", Offset = "0x6B8CD8", VA = "0x6B8CD8")]
	public void activatePitTracker()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x6B8DB4", Offset = "0x6B8DB4", VA = "0x6B8DB4", Slot = "4")]
	public override void takeDamage(float damage)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x6B8E8C", Offset = "0x6B8E8C", VA = "0x6B8E8C", Slot = "8")]
	public override void playerTurnOver()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x6B8BD4", Offset = "0x6B8BD4", VA = "0x6B8BD4")]
	private void resetState()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x6B8F30", Offset = "0x6B8F30", VA = "0x6B8F30", Slot = "9")]
	public override void execTick(int tick)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x6B96F8", Offset = "0x6B96F8", VA = "0x6B96F8")]
	public LandSquidMapObj()
	{
	}
}
[Token(Token = "0x2000044")]
public class LedComp : MonoBehaviour
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string action;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string signalPlug;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float valueCheck;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color colorIsLessThan;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color colorIsMoreThan;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool blinkMoreThan;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool blinkLessThan;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int blinkWait;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string ledObject;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int materialId;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool startupLit;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool playWarnSound;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string warnSoundName;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float warnSoundVolume;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float warnSoundPitch;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int warnSoundDirection;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool checkElectricity;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string electricityCheckSignal;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string electricityQueryAction;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public MeshRenderer bloom;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Component actionComponent;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MethodInfo actionMethod;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Component electricityQueryComponent;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MethodInfo electricityQueryMethod;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Material ledMaterial;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blinkTimer;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ElectricalGroup electricalGrp;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color offColor;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool electricalSwitchedOn;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TimedCallbackTask startupTask;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Signal electricalSignal;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Signal ledSignal;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float currentValue;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool initialized;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Ship ship;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x6BA010", Offset = "0x6BA010", VA = "0x6BA010")]
	public void init()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x6BA424", Offset = "0x6BA424", VA = "0x6BA424")]
	public void reset()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x6BA810", Offset = "0x6BA810", VA = "0x6BA810")]
	public void switchOff()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x6BA8F0", Offset = "0x6BA8F0", VA = "0x6BA8F0")]
	public void switchOn()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x6BA9D0", Offset = "0x6BA9D0", VA = "0x6BA9D0")]
	public void setLedColor(Color color)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x6BAB08", Offset = "0x6BAB08", VA = "0x6BAB08")]
	private void warnSound()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x6BAB70", Offset = "0x6BAB70", VA = "0x6BAB70")]
	private void blink()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x6BAC40", Offset = "0x6BAC40", VA = "0x6BAC40")]
	private Color getBrighterColor()
	{
		return default(Color);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x6BAC88", Offset = "0x6BAC88", VA = "0x6BAC88")]
	private void startupAnimDone()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x6BA508", Offset = "0x6BA508", VA = "0x6BA508")]
	private void electricalSwitched()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x6BACD0", Offset = "0x6BACD0", VA = "0x6BACD0")]
	public void signalPlugInvoked()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x6BAF64", Offset = "0x6BAF64", VA = "0x6BAF64")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x6BAF74", Offset = "0x6BAF74", VA = "0x6BAF74")]
	public LedComp()
	{
	}
}
[Token(Token = "0x2000045")]
public class LedsLevelIndicatorComp : BaseComp
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string valueQuery;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float impedence;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject indicator;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[] leds;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color emissionColorOn;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string checkSignal;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Component queryComponent;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MethodInfo queryMethod;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MeshRenderer indicatorRenderer;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color offColor;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Material> materials;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float impedenceStep;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float level;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int currentStep;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int animStep;

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x6BB0B4", Offset = "0x6BB0B4", VA = "0x6BB0B4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x6BB2FC", Offset = "0x6BB2FC", VA = "0x6BB2FC", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x6BB3BC", Offset = "0x6BB3BC", VA = "0x6BB3BC")]
	private void updateLedsAnim()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x6BB4B0", Offset = "0x6BB4B0", VA = "0x6BB4B0")]
	private void updateLeds()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x6BB698", Offset = "0x6BB698", VA = "0x6BB698")]
	public LedsLevelIndicatorComp()
	{
	}
}
[Token(Token = "0x2000046")]
public class LevelIndicatorComp : MonoBehaviour
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string valueQuery;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string signalPlug;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float valueMax;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string indicatorObjName;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float tighteness;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentValue;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Component component;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MethodInfo method;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 defaultScale;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 defaultPos;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool initialized;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Signal signal;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform bar;

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x6BB760", Offset = "0x6BB760", VA = "0x6BB760")]
	public void init()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x6BB96C", Offset = "0x6BB96C", VA = "0x6BB96C")]
	public void reset()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x6BBAF0", Offset = "0x6BBAF0", VA = "0x6BBAF0")]
	private void signalPlugInvoked()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x6BBA10", Offset = "0x6BBA10", VA = "0x6BBA10")]
	private void updateFromValue()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x6BBAFC", Offset = "0x6BBAFC", VA = "0x6BBAFC")]
	public void setValue(float value)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x6BBB04", Offset = "0x6BBB04", VA = "0x6BBB04")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x6BBC48", Offset = "0x6BBC48", VA = "0x6BBC48")]
	public LevelIndicatorComp()
	{
	}
}
[Token(Token = "0x2000047")]
public class LiftGame : MonoBehaviour
{
	[Token(Token = "0x200023F")]
	private class HackingPuzzleNode
	{
		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HackingPuzzleNode[] connections;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material ledMaterial;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int state;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int currentOn;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isSlot;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool isSwitch;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isLed;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material[] traces;

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x6BD5AC", Offset = "0x6BD5AC", VA = "0x6BD5AC")]
		public HackingPuzzleNode()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x6BDB74", Offset = "0x6BDB74", VA = "0x6BDB74")]
		public void disableTraces()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x6BDC70", Offset = "0x6BDC70", VA = "0x6BDC70")]
		public void trigger()
		{
		}
	}

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Computer computer;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SystemMenu sysMenu;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Ship ship;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ActorJackManager jackManager;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] menuHackComboActions;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int menuHackIt;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int lastHackAction;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] jacks;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] switches;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HackingPuzzleNode[] slotNode;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HackingPuzzleNode[] switchNode;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HackingPuzzleNode[] ledNode;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool topPanelOpen;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool debugHackingPanel;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool debug_quickStartMenuEnabled;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int liftStage;

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x6BBCBC", Offset = "0x6BBCBC", VA = "0x6BBCBC")]
	public static LiftGame getInstance()
	{
		return null;
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x6BBD20", Offset = "0x6BBD20", VA = "0x6BBD20")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x6BBD2C", Offset = "0x6BBD2C", VA = "0x6BBD2C")]
	public void init()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x6BBD30", Offset = "0x6BBD30", VA = "0x6BBD30")]
	public void reset()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x6BD434", Offset = "0x6BD434", VA = "0x6BD434")]
	public void debug_quickStartGame()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x6BD4A4", Offset = "0x6BD4A4", VA = "0x6BD4A4")]
	public void debug_startLiftRide()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x6BC528", Offset = "0x6BC528", VA = "0x6BC528")]
	private void initHackingPuzzleGraph()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x6BD984", Offset = "0x6BD984", VA = "0x6BD984")]
	public void interactJack()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x6BDA10", Offset = "0x6BDA10", VA = "0x6BDA10")]
	public void interactSwitch1(float value)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x6BDA48", Offset = "0x6BDA48", VA = "0x6BDA48")]
	public void interactSwitch2(float value)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x6BDA84", Offset = "0x6BDA84", VA = "0x6BDA84")]
	public void interactSwitch3(float value)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x6BDAC0", Offset = "0x6BDAC0", VA = "0x6BDAC0")]
	public void interactSwitch4(float value)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x6BDAFC", Offset = "0x6BDAFC", VA = "0x6BDAFC")]
	public void interactSwitch5(float value)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x6BDB38", Offset = "0x6BDB38", VA = "0x6BDB38")]
	public void interactSwitch6(float value)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x6BD6C0", Offset = "0x6BD6C0", VA = "0x6BD6C0")]
	private void checkHackingPuzzle()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x6BE2C4", Offset = "0x6BE2C4", VA = "0x6BE2C4")]
	public void topPanelOpened(float value)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x6BE354", Offset = "0x6BE354", VA = "0x6BE354")]
	public void startLiftStage1()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x6BE5FC", Offset = "0x6BE5FC", VA = "0x6BE5FC")]
	private void liftScanning()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x6BE980", Offset = "0x6BE980", VA = "0x6BE980")]
	private void liftDoneScanning()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x6BEDC4", Offset = "0x6BEDC4", VA = "0x6BEDC4")]
	private void spark2Trigger()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x6BF04C", Offset = "0x6BF04C", VA = "0x6BF04C")]
	private void liftPanelBoxTriggered()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x6BEDAC", Offset = "0x6BEDAC", VA = "0x6BEDAC")]
	public void enableMenuHack(float param)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x6BF1E8", Offset = "0x6BF1E8", VA = "0x6BF1E8")]
	public int getMenuHackIt()
	{
		return default(int);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x6BF1F0", Offset = "0x6BF1F0", VA = "0x6BF1F0")]
	public string getMenuHackStr()
	{
		return null;
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x6BF2C8", Offset = "0x6BF2C8", VA = "0x6BF2C8")]
	public void menuHackCombo(int action)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x6BF3B0", Offset = "0x6BF3B0", VA = "0x6BF3B0")]
	private void failMenuHackAnim()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x6BF4FC", Offset = "0x6BF4FC", VA = "0x6BF4FC")]
	private void startMenuHackAnim()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x6BF638", Offset = "0x6BF638", VA = "0x6BF638")]
	private void wrongHackingMenuScreenConfirmed(object subject)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x6BF6C0", Offset = "0x6BF6C0", VA = "0x6BF6C0")]
	private bool hackingMenuAnimFail(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x6BF8C8", Offset = "0x6BF8C8", VA = "0x6BF8C8")]
	private bool hackingMenuAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x6BFB0C", Offset = "0x6BFB0C", VA = "0x6BFB0C")]
	private void hackingPanelUnlocked(object arg)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x6BFDC0", Offset = "0x6BFDC0", VA = "0x6BFDC0")]
	private void outWindowTriggered()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x6BDF34", Offset = "0x6BDF34", VA = "0x6BDF34")]
	public void liftHacked()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x6BFE6C", Offset = "0x6BFE6C", VA = "0x6BFE6C")]
	private void showGameStartMenu()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x6BFF14", Offset = "0x6BFF14", VA = "0x6BFF14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x6C003C", Offset = "0x6C003C", VA = "0x6C003C")]
	public LiftGame()
	{
	}
}
[Token(Token = "0x2000048")]
public class LighthouseMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x6C0D1C", Offset = "0x6C0D1C", VA = "0x6C0D1C", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x6C0E48", Offset = "0x6C0E48", VA = "0x6C0E48", Slot = "14")]
	public override void connected()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x6C0D44", Offset = "0x6C0D44", VA = "0x6C0D44")]
	private void initStates()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x6C0F10", Offset = "0x6C0F10", VA = "0x6C0F10", Slot = "5")]
	public override int obtainConnectionClearance(LandShip ship, bool query)
	{
		return default(int);
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x6C0F78", Offset = "0x6C0F78", VA = "0x6C0F78", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x6C0FA0", Offset = "0x6C0FA0", VA = "0x6C0FA0")]
	public LighthouseMapObj()
	{
	}
}
[Token(Token = "0x2000049")]
public class LowerDeckGame : MonoBehaviour
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Ship ship;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject windowLidA;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject windowLidB;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float windowOpener;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float windowOpenerTarget;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material monitorMat;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject electricArm;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float electricArmRot;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float electricArmRotTarget;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool initialized;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Signal outSignal;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float oscilloscopeLeft;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float oscilloscopeRight;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool oscilloscopeLeftAligned;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool oscilloscopeRightAligned;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject electricDischargeParticles;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool tentacleEventTriggered;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool landsquidElectrified;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private tentacleScript tentacleController;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int randomSoundCounter;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x6C7F5C", Offset = "0x6C7F5C", VA = "0x6C7F5C")]
	public static LowerDeckGame getInstance()
	{
		return null;
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x6C7FC0", Offset = "0x6C7FC0", VA = "0x6C7FC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x6C7FC4", Offset = "0x6C7FC4", VA = "0x6C7FC4")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x6C7FCC", Offset = "0x6C7FCC", VA = "0x6C7FCC")]
	public void debug_backToLandCockpit()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x6C803C", Offset = "0x6C803C", VA = "0x6C803C")]
	public void reset()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x6C8208", Offset = "0x6C8208", VA = "0x6C8208")]
	public void enteredLowerDeck()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x6C8864", Offset = "0x6C8864", VA = "0x6C8864")]
	public void interactOscilloscopeLeftKnob(float value)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x6C89C0", Offset = "0x6C89C0", VA = "0x6C89C0")]
	public void interactOscilloscopeRightKnob(float value)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x6C85E8", Offset = "0x6C85E8", VA = "0x6C85E8")]
	private void updateOscilloscope()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x6C89E4", Offset = "0x6C89E4", VA = "0x6C89E4")]
	private void triggerTentacleEvent()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x6C8AB8", Offset = "0x6C8AB8", VA = "0x6C8AB8")]
	private void tentacleShake()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x6C8B54", Offset = "0x6C8B54", VA = "0x6C8B54")]
	public void interactPortholeOpener(float value)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x6C8BB4", Offset = "0x6C8BB4", VA = "0x6C8BB4")]
	public float getLedValueLeft()
	{
		return default(float);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x6C8BDC", Offset = "0x6C8BDC", VA = "0x6C8BDC")]
	public float getLedValueRight()
	{
		return default(float);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x6C8C04", Offset = "0x6C8C04", VA = "0x6C8C04")]
	public float getLedValueMiddle()
	{
		return default(float);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x6C8C34", Offset = "0x6C8C34", VA = "0x6C8C34")]
	public void interactReleaseElectricDischarge(float value)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x6C8FF4", Offset = "0x6C8FF4", VA = "0x6C8FF4")]
	private void electricDischargeFailDone()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x6C90B4", Offset = "0x6C90B4", VA = "0x6C90B4")]
	private void electricDischargeDone()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x6C9290", Offset = "0x6C9290", VA = "0x6C9290")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x6C998C", Offset = "0x6C998C", VA = "0x6C998C")]
	public LowerDeckGame()
	{
	}
}
[Token(Token = "0x200004A")]
public class ManometerComp : MonoBehaviour
{
	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string valueQuery;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string signalPlug;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string indicatorObjName;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float indicatorMinDeg;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float indicatorMaxDeg;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float valueMax;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float tightness;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool rotAxisX;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool rotAxisY;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool rotAxisZ;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool destroyIndicatorOnInit;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform indicator;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float currentValue;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Component component;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MethodInfo method;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Signal signal;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initialized;

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x7C38F0", Offset = "0x7C38F0", VA = "0x7C38F0")]
	public void init()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x7C3C60", Offset = "0x7C3C60", VA = "0x7C3C60")]
	private void signalPlugInvoked()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x7C3C30", Offset = "0x7C3C30", VA = "0x7C3C30")]
	public void reset()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x7C3C6C", Offset = "0x7C3C6C", VA = "0x7C3C6C")]
	private void updateVal()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x7C3DA4", Offset = "0x7C3DA4", VA = "0x7C3DA4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x7C3EE8", Offset = "0x7C3EE8", VA = "0x7C3EE8")]
	public ManometerComp()
	{
	}
}
[Token(Token = "0x200004B")]
public class MapObjMover
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float moveDist;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float range;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float collisionRange;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> enemiesToLookFor;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minDistFromEnemy;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lookAheadDist;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform transform;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dirVec;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 targetDirVec;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float targetDirAngle;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject closestDetectedObject;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject pawn;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool readyToAttack;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject trackGameObject;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int raycastMask;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LandShip landShip;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isInShadow;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool directionProcessingDone;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool moving;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float angleIncr;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x7C41C4", Offset = "0x7C41C4", VA = "0x7C41C4")]
	public MapObjMover(Transform transform)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x7C433C", Offset = "0x7C433C", VA = "0x7C433C")]
	public bool isInShadowArea()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x7C4344", Offset = "0x7C4344", VA = "0x7C4344")]
	public bool isReadyToAttack()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x7C434C", Offset = "0x7C434C", VA = "0x7C434C")]
	public void decideNewDirection()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x7C4714", Offset = "0x7C4714", VA = "0x7C4714")]
	public Vector3 getTargetDirVec()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x7C4720", Offset = "0x7C4720", VA = "0x7C4720")]
	public bool isTrackingEnemy()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x7C4790", Offset = "0x7C4790", VA = "0x7C4790")]
	public void forceTracking(GameObject target)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x7C4798", Offset = "0x7C4798", VA = "0x7C4798")]
	public bool isTrackingPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x7C480C", Offset = "0x7C480C", VA = "0x7C480C")]
	public void trackEnemy()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x7C4890", Offset = "0x7C4890", VA = "0x7C4890")]
	public void stopTrackingEnemy()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x7C489C", Offset = "0x7C489C", VA = "0x7C489C")]
	public float getDistFromTrackedGameObj()
	{
		return default(float);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x7C49DC", Offset = "0x7C49DC", VA = "0x7C49DC")]
	public float getDistFromPlayer()
	{
		return default(float);
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x7C4AE0", Offset = "0x7C4AE0", VA = "0x7C4AE0")]
	public void lookForEnemies()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x7C4C18", Offset = "0x7C4C18", VA = "0x7C4C18")]
	public GameObject getEnemyInRange()
	{
		return null;
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x7C4C20", Offset = "0x7C4C20", VA = "0x7C4C20")]
	public bool hasDetectedPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x7C4C90", Offset = "0x7C4C90", VA = "0x7C4C90")]
	public bool hasDetectedEnemy()
	{
		return default(bool);
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x7C4D00", Offset = "0x7C4D00", VA = "0x7C4D00")]
	public bool isMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x7C4D08", Offset = "0x7C4D08", VA = "0x7C4D08")]
	public void move()
	{
	}
}
[Token(Token = "0x200004C")]
public class MapObject : MonoBehaviour
{
	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int stateSleeping;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int stateScouting;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int stateAlerted;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int stateAttacking;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int connectionRefused;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int connectionOpen;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int connectionMonitored;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer meshRender;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string displayName;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string mapObjName;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool shouldRestoreData;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<string> resourceRules;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject mapCamera;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Renderer render;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected List<Resource> resources;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool visibleInRadar;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected SystemMenu sysMenu;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected string description;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected bool discovered;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected int totalTicks;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected int tick;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected int state;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected string petsciiFlag;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected bool nethookCompatible;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	protected bool executesTurn;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	protected bool trackingPlayer;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected float integrity;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected bool transloadAllEnabled;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	protected bool canBeAttacked;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	protected bool isConnected;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	protected bool storable;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected Color depleatedColor;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Color noIntegrityColor;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected bool makeCrystal;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	protected bool movingObject;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	protected bool skipTurn;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameSimulator gameSim;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int maxResouces;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool wasAddedToFinder;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string iconTextureName;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public float distance;

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x7C50A8", Offset = "0x7C50A8", VA = "0x7C50A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x7C5124", Offset = "0x7C5124", VA = "0x7C5124")]
	public void init()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x7C572C", Offset = "0x7C572C", VA = "0x7C572C")]
	public void setNethookCompatible(bool state)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x7C5208", Offset = "0x7C5208", VA = "0x7C5208")]
	private void parseResourceRule(string rule)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x7C56C4", Offset = "0x7C56C4", VA = "0x7C56C4")]
	private void initBaseStates()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x7C5860", Offset = "0x7C5860", VA = "0x7C5860")]
	public void setTotalTicks(int num)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x7C5868", Offset = "0x7C5868", VA = "0x7C5868")]
	public bool isMovingObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x7C5870", Offset = "0x7C5870", VA = "0x7C5870")]
	public void addedToFinder()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x7C587C", Offset = "0x7C587C", VA = "0x7C587C")]
	public bool canBeStored()
	{
		return default(bool);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x7C5884", Offset = "0x7C5884", VA = "0x7C5884")]
	public void setIcon(string mapObjTextureName)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x7C5930", Offset = "0x7C5930", VA = "0x7C5930")]
	public bool canReceiveAttacks()
	{
		return default(bool);
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x7C5938", Offset = "0x7C5938", VA = "0x7C5938")]
	public float getIntegrity()
	{
		return default(float);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x7C5940", Offset = "0x7C5940", VA = "0x7C5940")]
	public void blink()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x7C59E4", Offset = "0x7C59E4", VA = "0x7C59E4", Slot = "4")]
	public virtual void takeDamage(float damage)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x7C5A48", Offset = "0x7C5A48", VA = "0x7C5A48")]
	public bool isTrackingPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x7C5A50", Offset = "0x7C5A50", VA = "0x7C5A50")]
	public bool turnsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x7C5A58", Offset = "0x7C5A58", VA = "0x7C5A58")]
	public bool shouldTick()
	{
		return default(bool);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x7C5A80", Offset = "0x7C5A80", VA = "0x7C5A80", Slot = "5")]
	public virtual int obtainConnectionClearance(LandShip ship, bool query)
	{
		return default(int);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x7C5AE8", Offset = "0x7C5AE8", VA = "0x7C5AE8")]
	public bool isNethookCompatible()
	{
		return default(bool);
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x7C57EC", Offset = "0x7C57EC", VA = "0x7C57EC")]
	public string readText(string entry, int element = -1)
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x7C5AF0", Offset = "0x7C5AF0", VA = "0x7C5AF0", Slot = "6")]
	protected virtual void start()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x7C5AF4", Offset = "0x7C5AF4", VA = "0x7C5AF4", Slot = "7")]
	public virtual void playerStealthChanged()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x7C5AF8", Offset = "0x7C5AF8", VA = "0x7C5AF8", Slot = "8")]
	public virtual void playerTurnOver()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x7C5AFC", Offset = "0x7C5AFC", VA = "0x7C5AFC")]
	public bool isTurnInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x7C5B24", Offset = "0x7C5B24", VA = "0x7C5B24")]
	protected void endTurn()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x7C5B64", Offset = "0x7C5B64", VA = "0x7C5B64")]
	public void startTurn()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x7C5B7C", Offset = "0x7C5B7C", VA = "0x7C5B7C", Slot = "9")]
	public virtual void execTick(int tick)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x7C5B80", Offset = "0x7C5B80", VA = "0x7C5B80", Slot = "10")]
	protected virtual void updateTick()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x7C5B84", Offset = "0x7C5B84", VA = "0x7C5B84", Slot = "11")]
	public virtual void drawOnRadar()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x7C5B88", Offset = "0x7C5B88", VA = "0x7C5B88")]
	public void setVisibility(bool state)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x7C5B8C", Offset = "0x7C5B8C", VA = "0x7C5B8C", Slot = "12")]
	public virtual void setIsVisibleInRadar(bool state)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x7C5BB4", Offset = "0x7C5BB4", VA = "0x7C5BB4")]
	public bool isVisibleInRadar()
	{
		return default(bool);
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x7C5BBC", Offset = "0x7C5BBC", VA = "0x7C5BBC")]
	public Vector3 getGpsPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x7C5A08", Offset = "0x7C5A08", VA = "0x7C5A08")]
	public void setNoIntegrityIconColor()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x7C5C40", Offset = "0x7C5C40", VA = "0x7C5C40")]
	public void setResourcesDepleatedIconColor()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x7C400C", Offset = "0x7C400C", VA = "0x7C400C")]
	public Color getColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x7C4038", Offset = "0x7C4038", VA = "0x7C4038")]
	public void setColor(Color color)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x7C5C80", Offset = "0x7C5C80", VA = "0x7C5C80")]
	public int getNumResources()
	{
		return default(int);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x7C5CD0", Offset = "0x7C5CD0", VA = "0x7C5CD0")]
	public List<Resource> getResources()
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x7C5CD8", Offset = "0x7C5CD8", VA = "0x7C5CD8")]
	public void clearAllResources()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x7C5D30", Offset = "0x7C5D30", VA = "0x7C5D30")]
	private void backToMainMenu(object subject)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x7C5D4C", Offset = "0x7C5D4C", VA = "0x7C5D4C")]
	private void mapResourceSelected(object resource)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x7C5EE4", Offset = "0x7C5EE4", VA = "0x7C5EE4")]
	public void resourceSelected(object resource)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x7C5F84", Offset = "0x7C5F84", VA = "0x7C5F84", Slot = "13")]
	public virtual void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x7C5F88", Offset = "0x7C5F88", VA = "0x7C5F88")]
	private void takeAllResourceSelected(object subject)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x7C5FA8", Offset = "0x7C5FA8", VA = "0x7C5FA8")]
	public void drawResourcesMenu(ref int vCursor)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x7C61C8", Offset = "0x7C61C8", VA = "0x7C61C8")]
	public string getDescription()
	{
		return null;
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x7C61D0", Offset = "0x7C61D0", VA = "0x7C61D0")]
	public bool isDiscovered()
	{
		return default(bool);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x7C61D8", Offset = "0x7C61D8", VA = "0x7C61D8")]
	public void setDiscovered(bool state = true)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x7C5738", Offset = "0x7C5738", VA = "0x7C5738")]
	public void addResource(Resource resource, bool isUnique = false)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x7C61E4", Offset = "0x7C61E4", VA = "0x7C61E4")]
	public void removeResource(Resource resource)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x7C624C", Offset = "0x7C624C", VA = "0x7C624C")]
	public int getState()
	{
		return default(int);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x7C6254", Offset = "0x7C6254", VA = "0x7C6254")]
	public void setSize(float size)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x7C62C8", Offset = "0x7C62C8", VA = "0x7C62C8")]
	public void resetRot()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x7C6330", Offset = "0x7C6330", VA = "0x7C6330")]
	public string getDisplayName()
	{
		return null;
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x7C6338", Offset = "0x7C6338", VA = "0x7C6338")]
	public void setDisplayName(string displayName)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x7C6340", Offset = "0x7C6340", VA = "0x7C6340")]
	public void setPetsciiFlag(string filename)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x7C6348", Offset = "0x7C6348", VA = "0x7C6348")]
	public string getPetsciiFlag()
	{
		return null;
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x7C6350", Offset = "0x7C6350", VA = "0x7C6350")]
	public void setConnected(bool state)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x7C635C", Offset = "0x7C635C", VA = "0x7C635C", Slot = "14")]
	public virtual void connected()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x7C6360", Offset = "0x7C6360", VA = "0x7C6360", Slot = "15")]
	public virtual void disconnected()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x7C6364", Offset = "0x7C6364", VA = "0x7C6364")]
	public bool shouldMakeCrystal()
	{
		return default(bool);
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x7C636C", Offset = "0x7C636C", VA = "0x7C636C")]
	public void setShouldMakeCrystal()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x7C6474", Offset = "0x7C6474", VA = "0x7C6474", Slot = "16")]
	protected virtual void setData(MapObjData data)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x7C6590", Offset = "0x7C6590", VA = "0x7C6590")]
	public MapObjData getData()
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x7C6604", Offset = "0x7C6604", VA = "0x7C6604", Slot = "17")]
	public virtual void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x7C671C", Offset = "0x7C671C", VA = "0x7C671C")]
	public MapObject()
	{
	}
}
[Token(Token = "0x200004D")]
public class MonitorComp : MonoBehaviour
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float electricityConsumption;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int bufferId;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string monitorObjName;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colorOn;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color colorOff;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool switchedOn;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool displayOn;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentRowId;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool initialized;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Signal outSignal;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Signal electricalSignal;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject monitorObj;

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x7C7FD0", Offset = "0x7C7FD0", VA = "0x7C7FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x7C7FD4", Offset = "0x7C7FD4", VA = "0x7C7FD4")]
	public void init()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x7C80A4", Offset = "0x7C80A4", VA = "0x7C80A4")]
	public void reset()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x7C847C", Offset = "0x7C847C", VA = "0x7C847C")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x7C8484", Offset = "0x7C8484", VA = "0x7C8484")]
	private void updateDisplayState()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x7C8528", Offset = "0x7C8528", VA = "0x7C8528")]
	public bool isDisplayOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x7C8530", Offset = "0x7C8530", VA = "0x7C8530")]
	public void interactSwitchOn(float value)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x7C81C8", Offset = "0x7C81C8", VA = "0x7C81C8")]
	private void setDisplayOn(bool val)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x7C86F8", Offset = "0x7C86F8", VA = "0x7C86F8")]
	public void switchOn(bool val)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x7C8704", Offset = "0x7C8704", VA = "0x7C8704")]
	public bool isSwitchedOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x7C870C", Offset = "0x7C870C", VA = "0x7C870C")]
	public MonitorComp()
	{
	}
}
[Token(Token = "0x200004E")]
public class MorseComp : BaseComp
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject lever;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string action;

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x7C87A4", Offset = "0x7C87A4", VA = "0x7C87A4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x7C87D4", Offset = "0x7C87D4", VA = "0x7C87D4", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x7C88A8", Offset = "0x7C88A8", VA = "0x7C88A8", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x7C8968", Offset = "0x7C8968", VA = "0x7C8968")]
	public MorseComp()
	{
	}
}
[Token(Token = "0x200004F")]
public class MovementLeverComp : BaseComp
{
	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leverTrn;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string action;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string releaseAction;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float limitOff;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float limitOn;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float defaultValue;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float dragMultiplier;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float springBackForce;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int rotAxis;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool verticalDrag;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform optionalBreakTrn;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool usePotentiometer;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool mouseDown;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 mouseDownPos;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float mouseDownRot;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rot;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool updated;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool soundPlayed;

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x7C90F8", Offset = "0x7C90F8", VA = "0x7C90F8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x7C9128", Offset = "0x7C9128", VA = "0x7C9128", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x7C9164", Offset = "0x7C9164", VA = "0x7C9164")]
	private void updateValue()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x7C9234", Offset = "0x7C9234", VA = "0x7C9234")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x7C924C", Offset = "0x7C924C", VA = "0x7C924C", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x7C937C", Offset = "0x7C937C", VA = "0x7C937C")]
	public float getRot()
	{
		return default(float);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x7C8E34", Offset = "0x7C8E34", VA = "0x7C8E34")]
	public void setRot(float rot)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x7C8FAC", Offset = "0x7C8FAC", VA = "0x7C8FAC")]
	public void springBack()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x7C9384", Offset = "0x7C9384", VA = "0x7C9384", Slot = "10")]
	public override void compMouseDrag()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x7C9648", Offset = "0x7C9648", VA = "0x7C9648", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x7C97AC", Offset = "0x7C97AC", VA = "0x7C97AC")]
	public MovementLeverComp()
	{
	}
}
[Token(Token = "0x2000050")]
public class PreciseTapComp : BaseComp
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tap;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float min;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float max;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float defaultValue;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minRot;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxRot;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string action;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string releaseAction;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string sound;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string soundGrabbed;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool mouseDown;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float value;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Component comp;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MethodInfo method;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool soundPlayed;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x80DFC8", Offset = "0x80DFC8", VA = "0x80DFC8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x80E0FC", Offset = "0x80E0FC", VA = "0x80E0FC", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x80E174", Offset = "0x80E174", VA = "0x80E174", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x80E1B0", Offset = "0x80E1B0", VA = "0x80E1B0", Slot = "10")]
	public override void compMouseDrag()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x80E4D0", Offset = "0x80E4D0", VA = "0x80E4D0", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x80E5E4", Offset = "0x80E5E4", VA = "0x80E5E4")]
	public PreciseTapComp()
	{
	}
}
[Token(Token = "0x2000051")]
public class ProcMap
{
	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float mapScaleFactor;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int numGates;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float safeSpawnDistFromPlayer;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool doneGenerating;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numCells;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int genSteps;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float cellShrinkFactor;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int openCellChance;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float wallThickness;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float wallHeight;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float minDistCheck;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Voronoi voronoi;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Site> voronoiSites;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Site> sites;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<List<Vector3>> cells;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> cellCenters;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<int> containedCells;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> boundaryCells;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<int> openCells;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<int> gatedCells;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Vector3> gateSpawnPoints;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject radarContainer;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject mapWallsContainer;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject wallPrefab;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<GameObject> walls;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, List<int>> wallsByCell;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<int> gateWalls;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Vector3> tempSpawnPoints;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ProcMapData data;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 playerSpawnPoint;

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x80E65C", Offset = "0x80E65C", VA = "0x80E65C")]
	public ProcMap()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x80E8EC", Offset = "0x80E8EC", VA = "0x80E8EC")]
	private List<Vector2f> createRandomPoints(int numPoints, float bounds)
	{
		return null;
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x80E9F4", Offset = "0x80E9F4", VA = "0x80E9F4")]
	private void addTestPoint(Vector3 pos)
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x80EB74", Offset = "0x80EB74", VA = "0x80EB74")]
	private int addWall(Vector3 pos, float rot = 0f, float size = 0.5f)
	{
		return default(int);
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x80EE74", Offset = "0x80EE74", VA = "0x80EE74")]
	private int addPerimeterWall(Vector3 p1, Vector3 p2)
	{
		return default(int);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x80F24C", Offset = "0x80F24C", VA = "0x80F24C")]
	private Vector3 make3dVec(Vector2f vec2d)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x80F284", Offset = "0x80F284", VA = "0x80F284")]
	private List<Vector3> shrinkCellPoints(List<Vector3> voronoiCellPoints, float shrinkFactor)
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x80F57C", Offset = "0x80F57C", VA = "0x80F57C")]
	private void traceCellWallsPerimeter(int cellId, List<Vector3Data> points)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x80F5FC", Offset = "0x80F5FC", VA = "0x80F5FC")]
	private List<int> traceWallsPerimeter(List<Vector3Data> points)
	{
		return null;
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x80F7E0", Offset = "0x80F7E0", VA = "0x80F7E0")]
	private int findClosestPoint(Vector3 point, List<Vector3> points)
	{
		return default(int);
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x80F934", Offset = "0x80F934", VA = "0x80F934")]
	private List<Vector3> setupGatePerimeterPoints(List<Vector3> points, float shrinkFactor, List<Vector3> cellsCenter)
	{
		return null;
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x80FB08", Offset = "0x80FB08", VA = "0x80FB08")]
	private bool pointInTriangle(Vector3 p, Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(bool);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x80FBD4", Offset = "0x80FBD4", VA = "0x80FBD4")]
	private bool checkPointInsidePolygon(Vector3 point, List<Vector3Data> polygon)
	{
		return default(bool);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x80FD54", Offset = "0x80FD54", VA = "0x80FD54")]
	private bool checkPointsInsidePolygon(List<Vector3> points, List<Vector3Data> polygon)
	{
		return default(bool);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x80FE08", Offset = "0x80FE08", VA = "0x80FE08")]
	private bool isBoundaryCell(List<Vector3> cellPoints)
	{
		return default(bool);
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x80FE34", Offset = "0x80FE34", VA = "0x80FE34")]
	private void addPillar(List<Vector3> points)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x80F408", Offset = "0x80F408", VA = "0x80F408")]
	private Vector3 getPointsCenter(List<Vector3> points)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x80FF74", Offset = "0x80FF74", VA = "0x80FF74")]
	private bool checkDistFromBoundaries(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x8100A4", Offset = "0x8100A4", VA = "0x8100A4")]
	private void collectroadSpawnPoints(List<Vector3> voronoiSitePoints)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x8101F4", Offset = "0x8101F4", VA = "0x8101F4")]
	private List<Vector3> makeCellPoints(Site site, float shrinkFactor, bool collectRoadSpawnPoints = false)
	{
		return null;
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x810524", Offset = "0x810524", VA = "0x810524")]
	private bool siteIsGateNeighbour(Site site)
	{
		return default(bool);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x81061C", Offset = "0x81061C", VA = "0x81061C")]
	private void addBuildings()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x81092C", Offset = "0x81092C", VA = "0x81092C")]
	private float findCommonEdgeLen(Site siteA, Site siteB)
	{
		return default(float);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x810AF8", Offset = "0x810AF8", VA = "0x810AF8")]
	private List<Site> growCave(Site site, int caveSize)
	{
		return null;
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x810CF4", Offset = "0x810CF4", VA = "0x810CF4")]
	private bool addGate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x8112F4", Offset = "0x8112F4", VA = "0x8112F4")]
	public GameObject getGateEntranceWall(int gateId, Vector3 gateTerminalPos)
	{
		return null;
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x810324", Offset = "0x810324", VA = "0x810324")]
	private List<Vector3> getOrderedPointsFromEdges(List<Edge> edges)
	{
		return null;
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x8115A4", Offset = "0x8115A4", VA = "0x8115A4")]
	private void growPerimeterToBounds(Site currentSite, float bounds, ref List<Site> collectedSites)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x8116C4", Offset = "0x8116C4", VA = "0x8116C4")]
	private void addPerimeter()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x8119E4", Offset = "0x8119E4", VA = "0x8119E4")]
	private void step0()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x811B08", Offset = "0x811B08", VA = "0x811B08")]
	private void step1()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x811B0C", Offset = "0x811B0C", VA = "0x811B0C")]
	private void step2()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x811B94", Offset = "0x811B94", VA = "0x811B94")]
	private void step3()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x811B98", Offset = "0x811B98", VA = "0x811B98")]
	public void stepGen()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x811EF0", Offset = "0x811EF0", VA = "0x811EF0")]
	private void debugShowSpawnPoints()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x811F98", Offset = "0x811F98", VA = "0x811F98")]
	private bool checkMinDistance(Vector3 point, List<Vector3Data> otherPoints, float minDist)
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x8120BC", Offset = "0x8120BC", VA = "0x8120BC")]
	private bool checkMinDistance(Vector3 point, List<Vector3> otherPoints, float minDist)
	{
		return default(bool);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x8121D8", Offset = "0x8121D8", VA = "0x8121D8")]
	public Vector3 findStartSpawnPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x81234C", Offset = "0x81234C", VA = "0x81234C")]
	public Vector3 findFurtheyAwayRoadSpawnPoint(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x8124FC", Offset = "0x8124FC", VA = "0x8124FC")]
	public Vector3 findClosestRoadSpawnPoint(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x8126B0", Offset = "0x8126B0", VA = "0x8126B0")]
	public int getNumWallSpawnPoints()
	{
		return default(int);
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x812700", Offset = "0x812700", VA = "0x812700")]
	public int getNumRoadSpawnPointsAvailable()
	{
		return default(int);
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x812768", Offset = "0x812768", VA = "0x812768")]
	private bool checkSafeDistFromPlayer(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x812844", Offset = "0x812844", VA = "0x812844")]
	public void storeTempSpawnPoint(Vector3 point)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x8128C4", Offset = "0x8128C4", VA = "0x8128C4")]
	public Vector3 findRoadSpawnPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x812A50", Offset = "0x812A50", VA = "0x812A50")]
	public Vector3 findWallSpawnPointWithin(Vector3 fromPoint, float maxDistFromPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x812D9C", Offset = "0x812D9C", VA = "0x812D9C")]
	public Vector3 findFurtheyAwayWallSpawnPoint(Vector3 fromPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x8130BC", Offset = "0x8130BC", VA = "0x8130BC")]
	public Vector3 findWallSpawnPointAway(Vector3 fromPoint, float minDistFromPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x813408", Offset = "0x813408", VA = "0x813408")]
	public Vector3 findWallSpawnPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x813644", Offset = "0x813644", VA = "0x813644")]
	public int getNumGates()
	{
		return default(int);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x81364C", Offset = "0x81364C", VA = "0x81364C")]
	public Vector3 getGateSpawnPoint(int gateId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x813724", Offset = "0x813724", VA = "0x813724")]
	public int getNumGatedSpawnPointsLeft()
	{
		return default(int);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x81377C", Offset = "0x81377C", VA = "0x81377C")]
	public Vector3 getGatedSpawnPointCloserTo(Vector3 closerTo)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x813A8C", Offset = "0x813A8C", VA = "0x813A8C")]
	private void removePointFromDataList(Vector3 point, List<Vector3Data> dataList)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x813BE8", Offset = "0x813BE8", VA = "0x813BE8")]
	private int getGateWallIntersection(Vector3 point)
	{
		return default(int);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x81396C", Offset = "0x81396C", VA = "0x81396C")]
	private Vector3 checkAndFixGatedSpawnPoint(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x813D88", Offset = "0x813D88", VA = "0x813D88")]
	public Vector3 getGatedSpawnPointAwayFrom(Vector3 awayFromPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x813F8C", Offset = "0x813F8C", VA = "0x813F8C")]
	public Vector3 getGatedSpawnPoint(int gateId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x8140A0", Offset = "0x8140A0", VA = "0x8140A0")]
	public bool isDoneGenerating()
	{
		return default(bool);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x8140A8", Offset = "0x8140A8", VA = "0x8140A8")]
	public float getBoundsSize()
	{
		return default(float);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x8140C4", Offset = "0x8140C4", VA = "0x8140C4")]
	public ProcMapData getData()
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x811C20", Offset = "0x811C20", VA = "0x811C20")]
	public void buildFromData(ProcMapData data)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x8140CC", Offset = "0x8140CC", VA = "0x8140CC")]
	public int getRandomCellId()
	{
		return default(int);
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x81412C", Offset = "0x81412C", VA = "0x81412C")]
	public List<Vector3Data> getCellSpawnPoints(int cellId)
	{
		return null;
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x81427C", Offset = "0x81427C", VA = "0x81427C")]
	public List<GameObject> getCellWalls(int cellId)
	{
		return null;
	}
}
[Token(Token = "0x2000052")]
public class PullerComp : BaseComp
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform puller;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float max;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float minShift;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxShift;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float mouseScrollMult;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string action;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string releaseAction;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string clickAction;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string valueQuery;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string sound;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string clickSound;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float mouseStartY;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool mouseDown;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float value;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float mousePressValue;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Component comp;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MethodInfo method;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool soundPlayed;

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x82B2C4", Offset = "0x82B2C4", VA = "0x82B2C4", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x82B3F4", Offset = "0x82B3F4", VA = "0x82B3F4", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x82B57C", Offset = "0x82B57C", VA = "0x82B57C")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x82B680", Offset = "0x82B680", VA = "0x82B680", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x82B6C0", Offset = "0x82B6C0", VA = "0x82B6C0")]
	public void pull()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x82B6D4", Offset = "0x82B6D4", VA = "0x82B6D4")]
	public void release()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x82B428", Offset = "0x82B428", VA = "0x82B428")]
	private void updatePuller(float newVal)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x82B6DC", Offset = "0x82B6DC", VA = "0x82B6DC", Slot = "10")]
	public override void compMouseDrag()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x82B754", Offset = "0x82B754", VA = "0x82B754", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x82B838", Offset = "0x82B838", VA = "0x82B838")]
	public PullerComp()
	{
	}
}
[Token(Token = "0x2000053")]
public class RadarCameraDraw : MonoBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool shouldClearGridRef;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color lightZoneColor;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color shadowZoneColor;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color overlayInfoColor;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color jammerColor;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color weaponColor;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameSimulator gameSim;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material material;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private DrawUtil drawUtil;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 vtx1;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 vtx2;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 vtx3;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 vtx4;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3[] points;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3[] motionPoints;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 centerPos;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 dir;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float moveDist;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<MapObject> mapObjs;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float radarPassAlpha;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float jammerRadius;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 jammedMapObjectPos;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Texture2D gridTexture;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject gridTextureObj;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Engine engine;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int gridTextureSize;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<Vector3> spottedObjects;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float spottedObjectZoomer;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Color spottedObjectColor;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool zoomed;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 moveDistOffsetZ;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool shouldDrawComputerEffects;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int periscopeMapObjId;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Color fillColor;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool requestedForcedShadows;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	private bool jammerConnected;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	private bool usingWeapon;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x167")]
	private bool imminentCollision;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x82B9D8", Offset = "0x82B9D8", VA = "0x82B9D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x82BC14", Offset = "0x82BC14", VA = "0x82BC14")]
	public void reset()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x82BDD4", Offset = "0x82BDD4", VA = "0x82BDD4")]
	public void setImminentCollision(bool state)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x82BDE0", Offset = "0x82BDE0", VA = "0x82BDE0")]
	public bool getImminentCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x82BDE8", Offset = "0x82BDE8", VA = "0x82BDE8")]
	public void setShouldDrawComputerEffects(bool state)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x82BDF4", Offset = "0x82BDF4", VA = "0x82BDF4")]
	public void setMapObjectsArray(List<MapObject> mapObjs)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x82BDFC", Offset = "0x82BDFC", VA = "0x82BDFC")]
	public void setDir(Vector3 dir)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x82BE08", Offset = "0x82BE08", VA = "0x82BE08")]
	public void setCenterPos(Vector3 pos)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x82BE14", Offset = "0x82BE14", VA = "0x82BE14")]
	public void setMoveDist(float dist)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x82BE1C", Offset = "0x82BE1C", VA = "0x82BE1C")]
	public float getMoveDist()
	{
		return default(float);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x82BE24", Offset = "0x82BE24", VA = "0x82BE24")]
	public void allocatePoints(int num)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x82BE88", Offset = "0x82BE88", VA = "0x82BE88")]
	public void allocateMotionPoints(int num)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x82BEEC", Offset = "0x82BEEC", VA = "0x82BEEC")]
	public void setPoint(int id, Vector3 point)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x82BF34", Offset = "0x82BF34", VA = "0x82BF34")]
	public void setMotionPoint(int id, Vector3 point)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x82BF7C", Offset = "0x82BF7C", VA = "0x82BF7C")]
	private void drawLine(Vector3 p1, Vector3 p2, float size)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x82C1A8", Offset = "0x82C1A8", VA = "0x82C1A8")]
	private void drawPoint(Vector3 point, float size)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x82C330", Offset = "0x82C330", VA = "0x82C330")]
	private void drawPointInGrid(Vector3 point, float size)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x82C398", Offset = "0x82C398", VA = "0x82C398")]
	private void drawMotionPass()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x82C508", Offset = "0x82C508", VA = "0x82C508")]
	private void drawRadarPass()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x82C7CC", Offset = "0x82C7CC", VA = "0x82C7CC")]
	private void drawMoveDist()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x82CA24", Offset = "0x82CA24", VA = "0x82CA24")]
	private void drawMapObjects()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x82CAC0", Offset = "0x82CAC0", VA = "0x82CAC0")]
	public void clearJammedMapObject()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x82CACC", Offset = "0x82CACC", VA = "0x82CACC")]
	public void setJammedMapObject(Vector3 pos, bool connected)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x82CAE0", Offset = "0x82CAE0", VA = "0x82CAE0")]
	public void showWeapon(bool state)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x82CAEC", Offset = "0x82CAEC", VA = "0x82CAEC")]
	private void drawJammer()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x82CCC4", Offset = "0x82CCC4", VA = "0x82CCC4")]
	private void drawSpottedObjects()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x82CDB4", Offset = "0x82CDB4", VA = "0x82CDB4")]
	public void setPeriscopeMapObjectId(int id)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x82CDBC", Offset = "0x82CDBC", VA = "0x82CDBC")]
	public bool isPointHighlighted(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x82D088", Offset = "0x82D088", VA = "0x82D088")]
	private void highlightPoint(Vector3 p)
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x82D264", Offset = "0x82D264", VA = "0x82D264")]
	private void highlightGrid(int numSteps, Vector3 p1, Vector3 p2)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x82D384", Offset = "0x82D384", VA = "0x82D384")]
	public void clearGridTexture()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x82D38C", Offset = "0x82D38C", VA = "0x82D38C")]
	private void initGridTexture()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x82D424", Offset = "0x82D424", VA = "0x82D424")]
	public void forceUpdateShadows()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x82D430", Offset = "0x82D430", VA = "0x82D430")]
	public void updateShadows(int resolution)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x82D540", Offset = "0x82D540", VA = "0x82D540")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x82D744", Offset = "0x82D744", VA = "0x82D744")]
	public void setFaulty(bool state)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x82D7CC", Offset = "0x82D7CC", VA = "0x82D7CC")]
	public void handleFaults()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x82D84C", Offset = "0x82D84C", VA = "0x82D84C")]
	public void setJammerRadius(float radius)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x82D6C4", Offset = "0x82D6C4", VA = "0x82D6C4")]
	public void spottedNewObject(Vector3 pos)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x82BD28", Offset = "0x82BD28", VA = "0x82BD28")]
	public void setZoomed(bool val)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x82D854", Offset = "0x82D854", VA = "0x82D854")]
	public bool isZoomed()
	{
		return default(bool);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x82D85C", Offset = "0x82D85C", VA = "0x82D85C")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x82D9F4", Offset = "0x82D9F4", VA = "0x82D9F4")]
	public RadarCameraDraw()
	{
	}
}
[Token(Token = "0x2000054")]
public class RadarHolo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C768", Offset = "0x54C768")]
	private sealed class <>c
	{
		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<MapObject, float> <>9__80_0;

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x8325C4", Offset = "0x8325C4", VA = "0x8325C4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x8325CC", Offset = "0x8325CC", VA = "0x8325CC")]
		internal float <getNextPeriscopeTarget>b__80_0(MapObject item)
		{
			return default(float);
		}
	}

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nethookConnectionObj;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject radarSpottedObj;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject jammerRadiusObj;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject distIndicatorObj;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject scanDiscObj;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject mapRotObj;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mapPosObj;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject gridObj;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject holoBackgroundObj;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject pawnIndicatorObj;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject mapWallsObj;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject mapObjsParent;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject nethookLineObj;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject playerMapPos;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color nethookColor;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color weaponColor;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material gridMat;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MeshFilter scanDiscMeshFilter;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LandShip landShip;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int mapObjLayer;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int wallsLayer;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int raycastMask;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 origin;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float radius;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3[] motionPoints;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int tick;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float flickerAmount;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool playSwitchAnim;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool switchedOn;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float radarRadius;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool initialized;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 startPoint;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float startTexY;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<MapObject> mapObjsInSight;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool computerBooted;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Signal outSignal;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Signal electricalSignal;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Signal bootSignal;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject compass;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool updatingCompass;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float compassVelocity;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int mapObjDescId;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool mapEanbled;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	private bool playerTracked;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material jammerRadiusMat;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Material jammerLineMat;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool periscopeDown;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x82DB4C", Offset = "0x82DB4C", VA = "0x82DB4C")]
	public static RadarHolo getInstance()
	{
		return null;
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x82DBB0", Offset = "0x82DBB0", VA = "0x82DBB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x82DBB4", Offset = "0x82DBB4", VA = "0x82DBB4")]
	public void init()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x82E2F4", Offset = "0x82E2F4", VA = "0x82E2F4")]
	public void reset()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x82EFD4", Offset = "0x82EFD4", VA = "0x82EFD4")]
	public bool isPeriscopeActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x82F0C8", Offset = "0x82F0C8", VA = "0x82F0C8")]
	public void blinkPeriscopeIfActive()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x82F200", Offset = "0x82F200", VA = "0x82F200")]
	public void interactPeriscopeUpDown(float pos)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x82F2A8", Offset = "0x82F2A8", VA = "0x82F2A8")]
	public void initLoadedMap()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x82F670", Offset = "0x82F670", VA = "0x82F670")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x82F678", Offset = "0x82F678", VA = "0x82F678")]
	public bool isSwitchedOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x82F680", Offset = "0x82F680", VA = "0x82F680")]
	public void interactSwitchOn(float value)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x82E564", Offset = "0x82E564", VA = "0x82E564")]
	public void doSwitchOnOff()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x830188", Offset = "0x830188", VA = "0x830188")]
	public bool isDisplayOn()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x82EBC4", Offset = "0x82EBC4", VA = "0x82EBC4")]
	public void setImminentCollision(bool collision)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x82F42C", Offset = "0x82F42C", VA = "0x82F42C")]
	private void setFade(float fade)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x82FAE8", Offset = "0x82FAE8", VA = "0x82FAE8")]
	private void switchOnAnim(bool state)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x82EEF4", Offset = "0x82EEF4", VA = "0x82EEF4")]
	public void setDist(float value)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x8301F8", Offset = "0x8301F8", VA = "0x8301F8")]
	public void rotateMap(float rotAmount)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x830980", Offset = "0x830980", VA = "0x830980")]
	public void fixStartPoint()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x830A08", Offset = "0x830A08", VA = "0x830A08")]
	public void moveMapFromStartPoint(float distance, float t)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x830BE4", Offset = "0x830BE4", VA = "0x830BE4")]
	public Vector3 getPlayerPosInMap()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x830D40", Offset = "0x830D40", VA = "0x830D40")]
	public int getNumVisibleMapObjects()
	{
		return default(int);
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x830D90", Offset = "0x830D90", VA = "0x830D90")]
	public List<MapObject> getMapObjsInSight()
	{
		return null;
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x830D98", Offset = "0x830D98", VA = "0x830D98")]
	private void addMapObject(GameObject obj)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x830FA4", Offset = "0x830FA4", VA = "0x830FA4")]
	private void spottedNewMapObject(GameObject obj)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x831058", Offset = "0x831058", VA = "0x831058")]
	private void hideMapObjsInSight()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x8311D0", Offset = "0x8311D0", VA = "0x8311D0")]
	private void updateCompass()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x83133C", Offset = "0x83133C", VA = "0x83133C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x8317D4", Offset = "0x8317D4", VA = "0x8317D4")]
	public void clearJammerConnection()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x82FD10", Offset = "0x82FD10", VA = "0x82FD10")]
	private void setJammedMapObject(Vector3 pos, bool connected)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x831818", Offset = "0x831818", VA = "0x831818")]
	public MapObject getClosestMapObjectInRangeForJammer(float jammerLevel)
	{
		return null;
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x8319C0", Offset = "0x8319C0", VA = "0x8319C0")]
	public MapObject getClosestMapObjectInRangeForWeapon(float jammerLevel)
	{
		return null;
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x82EC68", Offset = "0x82EC68", VA = "0x82EC68")]
	public void updateJammerLevel(float jammerLevel)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x831B68", Offset = "0x831B68", VA = "0x831B68")]
	public MapObject getNextPeriscopeTarget()
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x831D00", Offset = "0x831D00", VA = "0x831D00")]
	public void interactMap()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x831F94", Offset = "0x831F94", VA = "0x831F94")]
	private void interactMapBlankDone()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x832170", Offset = "0x832170", VA = "0x832170")]
	public bool isMapEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x8302A8", Offset = "0x8302A8", VA = "0x8302A8")]
	public void showMap(bool state)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x832178", Offset = "0x832178", VA = "0x832178")]
	public void setAltitude(float altitude)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x832284", Offset = "0x832284", VA = "0x832284")]
	public void blink()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x832354", Offset = "0x832354", VA = "0x832354")]
	private bool blinkAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x832400", Offset = "0x832400", VA = "0x832400")]
	public RadarHolo()
	{
	}
}
[Serializable]
[Token(Token = "0x2000055")]
public class FieldNote
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string header;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string text;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool filled;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string downloadedFrom;

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x101EEE8", Offset = "0x101EEE8", VA = "0x101EEE8")]
	public static int findFieldNoteByName(string name, List<FieldNote> list)
	{
		return default(int);
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x101EF98", Offset = "0x101EF98", VA = "0x101EF98")]
	public FieldNote()
	{
	}
}
[Serializable]
[Token(Token = "0x2000056")]
public class Record
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string header;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string text;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool completed;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string downloadedFrom;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x832CF4", Offset = "0x832CF4", VA = "0x832CF4")]
	public static int findRecordById(int id, List<Record> list)
	{
		return default(int);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x832D9C", Offset = "0x832D9C", VA = "0x832D9C")]
	public Record()
	{
	}
}
[Serializable]
[Token(Token = "0x2000057")]
public class WeaponCode
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RandomConfigType;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int NullConfigType;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int SimpleShootType;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int BombType;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int FreezeType;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int CircularShootType;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string codeStr;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] code;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool secret;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxDist;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float firePower;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float precision;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int type;

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x791C84", Offset = "0x791C84", VA = "0x791C84")]
	public static int findWeaponCodeById(int id, List<WeaponCode> list)
	{
		return default(int);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x791D2C", Offset = "0x791D2C", VA = "0x791D2C")]
	public WeaponCode()
	{
	}
}
[Serializable]
[Token(Token = "0x2000058")]
public class ZeppelinSignal
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string codeStr;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string encounterClassName;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string label;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string description;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xD468A8", Offset = "0xD468A8", VA = "0xD468A8")]
	public static int findSignal(string encounterClassName, List<ZeppelinSignal> list)
	{
		return default(int);
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xD46958", Offset = "0xD46958", VA = "0xD46958")]
	public static int findSignalByClassName(string className, List<ZeppelinSignal> list)
	{
		return default(int);
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xD46A08", Offset = "0xD46A08", VA = "0xD46A08")]
	public ZeppelinSignal()
	{
	}
}
[Serializable]
[Token(Token = "0x2000059")]
public class Resource
{
	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool equipable;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float power;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int weight;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool canBeUsed;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool canBeDiscarded;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string description;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool equipped;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string equipMethod;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string useMethod;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool unique;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x833B20", Offset = "0x833B20", VA = "0x833B20")]
	public static int findResourceByName(string name, List<Resource> list)
	{
		return default(int);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x833BD0", Offset = "0x833BD0", VA = "0x833BD0")]
	public Resource()
	{
	}
}
[Token(Token = "0x200005A")]
public class ResourcesCatalogue
{
	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int recordFirstCrystal;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int recordAltar;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int recordLighthouse;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int recordArsenal;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int recordSkyPirates;

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x833C30", Offset = "0x833C30", VA = "0x833C30")]
	public static Resource instanciateFromString(string resourceName)
	{
		return null;
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x833D5C", Offset = "0x833D5C", VA = "0x833D5C")]
	public static Resource instanciateRandomResource()
	{
		return null;
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x834278", Offset = "0x834278", VA = "0x834278")]
	public static WeaponCode newSecretWeaponCode1()
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x83432C", Offset = "0x83432C", VA = "0x83432C")]
	public static Resource newWeaponAccumulatorResource()
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x834004", Offset = "0x834004", VA = "0x834004")]
	public static Resource newScrapMetalResource()
	{
		return null;
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x8343DC", Offset = "0x8343DC", VA = "0x8343DC")]
	public static Resource newTowResource()
	{
		return null;
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x83446C", Offset = "0x83446C", VA = "0x83446C")]
	public static Resource newMapResource()
	{
		return null;
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x8344FC", Offset = "0x8344FC", VA = "0x8344FC")]
	public static Resource newCrystalResource()
	{
		return null;
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x834090", Offset = "0x834090", VA = "0x834090")]
	public static Resource newRepairKitResource()
	{
		return null;
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x833ED4", Offset = "0x833ED4", VA = "0x833ED4")]
	public static Resource newFuelResource()
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x833F6C", Offset = "0x833F6C", VA = "0x833F6C")]
	public static Resource newBatteryResource()
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x8345A0", Offset = "0x8345A0", VA = "0x8345A0")]
	public static Resource newGateKeyResource()
	{
		return null;
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x834634", Offset = "0x834634", VA = "0x834634")]
	public static Resource newSaltResource(int weight)
	{
		return null;
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x8346C0", Offset = "0x8346C0", VA = "0x8346C0")]
	public static Resource newHeraldry1Resource()
	{
		return null;
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x834768", Offset = "0x834768", VA = "0x834768")]
	public static Resource newWeaponLevel2Resource()
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x8347FC", Offset = "0x8347FC", VA = "0x8347FC")]
	public static WeaponCode newWeaponCode1()
	{
		return null;
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x8348A8", Offset = "0x8348A8", VA = "0x8348A8")]
	public static WeaponCode newWeaponCode2()
	{
		return null;
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x834954", Offset = "0x834954", VA = "0x834954")]
	public static Resource newEngineBoostResource()
	{
		return null;
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x834A00", Offset = "0x834A00", VA = "0x834A00")]
	public static Resource newHeatBoostResource()
	{
		return null;
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x834AAC", Offset = "0x834AAC", VA = "0x834AAC")]
	public static Resource newFuelAutoRefillResource()
	{
		return null;
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x834B58", Offset = "0x834B58", VA = "0x834B58")]
	public static Resource newBatteryAutoChargeResource()
	{
		return null;
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x834C04", Offset = "0x834C04", VA = "0x834C04")]
	public static Resource newCloakBoostResource()
	{
		return null;
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x834CB0", Offset = "0x834CB0", VA = "0x834CB0")]
	public static Resource newHullDeflectorResource()
	{
		return null;
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x834D5C", Offset = "0x834D5C", VA = "0x834D5C")]
	public static Resource newEnergyFlowUnlockerResource()
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x8341D0", Offset = "0x8341D0", VA = "0x8341D0")]
	public static Resource newDecryptResource()
	{
		return null;
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x834128", Offset = "0x834128", VA = "0x834128")]
	public static Resource newEncryptedResource()
	{
		return null;
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x834E08", Offset = "0x834E08", VA = "0x834E08")]
	public ResourcesCatalogue()
	{
	}
}
[Token(Token = "0x200005B")]
public class SentinelMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject lineObj;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Color deadColor;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Color alertedColor;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Color offensiveColor;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float minDamage;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float maxDamage;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float sightRadius;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private LandShip ship;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Computer playerComputer;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private MapObjMover mover;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool attacked;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject pawn;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 sightVec;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float rot;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x8363F4", Offset = "0x8363F4", VA = "0x8363F4", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x8365A8", Offset = "0x8365A8", VA = "0x8365A8", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x836424", Offset = "0x836424", VA = "0x836424")]
	private void initStates()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x8365D0", Offset = "0x8365D0", VA = "0x8365D0", Slot = "12")]
	public override void setIsVisibleInRadar(bool state)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x83669C", Offset = "0x83669C", VA = "0x83669C")]
	private void updateLine()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x836A7C", Offset = "0x836A7C", VA = "0x836A7C", Slot = "4")]
	public override void takeDamage(float damage)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x836C98", Offset = "0x836C98", VA = "0x836C98", Slot = "8")]
	public override void playerTurnOver()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x836B60", Offset = "0x836B60", VA = "0x836B60")]
	private void resetState()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x836D30", Offset = "0x836D30", VA = "0x836D30", Slot = "9")]
	public override void execTick(int tick)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x8373A8", Offset = "0x8373A8", VA = "0x8373A8", Slot = "5")]
	public override int obtainConnectionClearance(LandShip ship, bool query)
	{
		return default(int);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x837410", Offset = "0x837410", VA = "0x837410", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x83796C", Offset = "0x83796C", VA = "0x83796C")]
	public SentinelMapObj()
	{
	}
}
[Token(Token = "0x200005C")]
public class Ship : MonoBehaviour
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int audioDirFrontRight;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int audioDirRight;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int audioDirBack;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int audioDirLeft;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int audioDirUp;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int audioDirDown;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int audioDirFrontLeft;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int audioDirBottomDeck;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cockpitParentTrn;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int maxStorageWeight;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int storageWeight;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int maxResources;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AudioSource> audioComponents;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<List<AudioSource>> audioDirections;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, AudioClip> audioClips;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource backgroundSound;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource engineSound;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<ShipPart> parts;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float shakeTime;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float shakeTimeAmount;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float shakingAmount;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool shouldPlayShakeSound;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float pausedEngineSoundVolume;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float pausedBackgroundSoundVolume;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool initialized;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Signal outSignal;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject shakeItem;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 shakeItemStartPos;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 shakeItemStartRot;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string shakeSound;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameData gameData;

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x82F830", Offset = "0x82F830", VA = "0x82F830")]
	public static Ship getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x8381F0", Offset = "0x8381F0", VA = "0x8381F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x8381F4", Offset = "0x8381F4", VA = "0x8381F4")]
	public void preInit()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x8386E8", Offset = "0x8386E8", VA = "0x8386E8")]
	public void reset()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x838B44", Offset = "0x838B44", VA = "0x838B44")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x8383AC", Offset = "0x8383AC", VA = "0x8383AC")]
	private void initSpatialAudio()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x838B4C", Offset = "0x838B4C", VA = "0x838B4C")]
	public PlayerData getPlayerData()
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x838BC0", Offset = "0x838BC0", VA = "0x838BC0")]
	public WeaponCode getWeaponCodeById(int weaponCodeId)
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x838C6C", Offset = "0x838C6C", VA = "0x838C6C")]
	private int[] genUniqueWeaponCode()
	{
		return null;
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x838CD8", Offset = "0x838CD8", VA = "0x838CD8")]
	private string matrixCodeToStr(int[] matrixCode)
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x8390F4", Offset = "0x8390F4", VA = "0x8390F4")]
	public void addWeaponCode(WeaponCode weaponCode)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x83919C", Offset = "0x83919C", VA = "0x83919C")]
	public void markRecordCompleted(int recordId)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x8392C8", Offset = "0x8392C8", VA = "0x8392C8")]
	public Record makeRecord(int recordId)
	{
		return null;
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x839478", Offset = "0x839478", VA = "0x839478")]
	public void addRecord(Record record)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x8391BC", Offset = "0x8391BC", VA = "0x8391BC")]
	public Record getRecordById(int id)
	{
		return null;
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x839564", Offset = "0x839564", VA = "0x839564")]
	public List<Record> getRecords()
	{
		return null;
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x8395E0", Offset = "0x8395E0", VA = "0x8395E0")]
	public bool isEngineFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x839664", Offset = "0x839664", VA = "0x839664")]
	public bool isComputerFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x8396E8", Offset = "0x8396E8", VA = "0x8396E8")]
	public bool isStealthFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x83976C", Offset = "0x83976C", VA = "0x83976C")]
	public bool isPowerFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x8397F0", Offset = "0x8397F0", VA = "0x8397F0")]
	public bool isRadarFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x839874", Offset = "0x839874", VA = "0x839874")]
	public bool isJammerFaulty()
	{
		return default(bool);
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x8398F8", Offset = "0x8398F8", VA = "0x8398F8")]
	public List<ShipPart> getParts()
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x839900", Offset = "0x839900", VA = "0x839900")]
	public int getStorageWeight()
	{
		return default(int);
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x839908", Offset = "0x839908", VA = "0x839908")]
	public int getMaxStorageWeight()
	{
		return default(int);
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x839910", Offset = "0x839910", VA = "0x839910")]
	public int getMaxResources()
	{
		return default(int);
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x839918", Offset = "0x839918", VA = "0x839918")]
	public bool resourceSlotAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x8399AC", Offset = "0x8399AC", VA = "0x8399AC")]
	public int numResourceSlotAvailable()
	{
		return default(int);
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x839A3C", Offset = "0x839A3C", VA = "0x839A3C")]
	public Resource findResourceByName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x839BB0", Offset = "0x839BB0", VA = "0x839BB0")]
	public void discardResource(Resource resource)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x839C6C", Offset = "0x839C6C", VA = "0x839C6C")]
	public List<Resource> getResources()
	{
		return null;
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x839CE8", Offset = "0x839CE8", VA = "0x839CE8")]
	public void addResource(Resource resource)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x839EA0", Offset = "0x839EA0", VA = "0x839EA0")]
	public int getSalt()
	{
		return default(int);
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x839F1C", Offset = "0x839F1C", VA = "0x839F1C")]
	public void addSalt(int salt)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x839FB4", Offset = "0x839FB4", VA = "0x839FB4")]
	public void spendSalt(int salt)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x8388E0", Offset = "0x8388E0", VA = "0x8388E0")]
	public void updateStorageWeight()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x83A098", Offset = "0x83A098", VA = "0x83A098")]
	public void lowerEngineSound()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x83A150", Offset = "0x83A150", VA = "0x83A150")]
	public void restoreEngineSound()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x83A194", Offset = "0x83A194", VA = "0x83A194")]
	public AudioSource getEngineSound()
	{
		return null;
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x83A19C", Offset = "0x83A19C", VA = "0x83A19C")]
	public void changeEngineSound(string name)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x83A250", Offset = "0x83A250", VA = "0x83A250")]
	public AudioSource getBackgroundSound()
	{
		return null;
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x83A258", Offset = "0x83A258", VA = "0x83A258")]
	public void changeBackgroundSound(string name)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x83A30C", Offset = "0x83A30C", VA = "0x83A30C")]
	public void fadeBackgroundSound(float targetVolume, int numFrames)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x82F894", Offset = "0x82F894", VA = "0x82F894")]
	public AudioSource playSound(string name, float volume = 1f, bool loop = false, float pitch = 0f, int direction = 5)
	{
		return null;
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x83A41C", Offset = "0x83A41C", VA = "0x83A41C")]
	public AudioSource getSoundPlaying(string name)
	{
		return null;
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x83A540", Offset = "0x83A540", VA = "0x83A540")]
	public void stopSound(string name)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x83A688", Offset = "0x83A688", VA = "0x83A688")]
	public void stopAllSoundByName(string name)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x83A7C0", Offset = "0x83A7C0", VA = "0x83A7C0")]
	public bool soundIsPlaying(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x83A8E8", Offset = "0x83A8E8", VA = "0x83A8E8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x83A8EC", Offset = "0x83A8EC", VA = "0x83A8EC")]
	private void updateTimedShake()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x838A24", Offset = "0x838A24", VA = "0x838A24")]
	public void resetShake()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x83A994", Offset = "0x83A994", VA = "0x83A994")]
	private void shake(float amount, string soundName = "cockpitTrembleSound")
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x83AE54", Offset = "0x83AE54", VA = "0x83AE54")]
	public void timedShake(float amount, string sound = "cockpitTrembleSound", float time = 1f)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x83AE6C", Offset = "0x83AE6C", VA = "0x83AE6C")]
	public float getShakingAmount()
	{
		return default(float);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x83AE74", Offset = "0x83AE74", VA = "0x83AE74")]
	public void setShakingAmount(float amount)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x83AE7C", Offset = "0x83AE7C", VA = "0x83AE7C")]
	public void setShakeTime(float secs)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x83AE84", Offset = "0x83AE84", VA = "0x83AE84")]
	public void setShouldPlayShakeSound(bool state)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x83AE90", Offset = "0x83AE90", VA = "0x83AE90")]
	public List<FieldNote> getFieldNotes()
	{
		return null;
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x83AF0C", Offset = "0x83AF0C", VA = "0x83AF0C")]
	public void addFieldNote(FieldNote note)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x83B120", Offset = "0x83B120", VA = "0x83B120")]
	public void addZeppelinSignal(ZeppelinSignal signal)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x83B21C", Offset = "0x83B21C", VA = "0x83B21C")]
	public List<ZeppelinSignal> getSignals()
	{
		return null;
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x83B298", Offset = "0x83B298", VA = "0x83B298")]
	public Ship()
	{
	}
}
[Token(Token = "0x200005D")]
public class Signal
{
	[Token(Token = "0x2000241")]
	public delegate void SignalCallback();

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Dictionary<string, List<Signal>> connections;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SignalCallback callback;

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x8324F0", Offset = "0x8324F0", VA = "0x8324F0")]
	public Signal()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x82F120", Offset = "0x82F120", VA = "0x82F120")]
	public void emit(string name)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x83BD58", Offset = "0x83BD58", VA = "0x83BD58")]
	private void triggerCallback()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x83BF7C", Offset = "0x83BF7C", VA = "0x83BF7C")]
	public void connect(Signal otherSignal, string slotName, SignalCallback callback)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x82DE0C", Offset = "0x82DE0C", VA = "0x82DE0C")]
	public void connect(string signal, SignalCallback callback)
	{
	}
}
[Token(Token = "0x200005E")]
public class SkyProcMap
{
	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float minDist;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int maxIslands;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float maxDist;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float widthBound;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float heightBound;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float zDepth;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> islands;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3> islandsCoord;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<string> islandsName;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int nextIslandId;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 playerPos;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int numDiscoveredIslands;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x8764B4", Offset = "0x8764B4", VA = "0x8764B4")]
	public SkyProcMap()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x8765A4", Offset = "0x8765A4", VA = "0x8765A4")]
	public bool lighthouseIslandDiscovered()
	{
		return default(bool);
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x876600", Offset = "0x876600", VA = "0x876600")]
	public List<Vector3> getIslandsCoord()
	{
		return null;
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x876608", Offset = "0x876608", VA = "0x876608")]
	public void setPlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x876614", Offset = "0x876614", VA = "0x876614")]
	public int getIslandId(Vector3 islandPos)
	{
		return default(int);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x876694", Offset = "0x876694", VA = "0x876694")]
	public int findIslandIdFromName(string islandName)
	{
		return default(int);
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x8766FC", Offset = "0x8766FC", VA = "0x8766FC")]
	public List<string> getIslandsName()
	{
		return null;
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x876704", Offset = "0x876704", VA = "0x876704")]
	public string getIslandName(int islandId)
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x876790", Offset = "0x876790", VA = "0x876790")]
	public int getNumIslandCoords()
	{
		return default(int);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x8767E0", Offset = "0x8767E0", VA = "0x8767E0")]
	public int getNumDiscoveredIslands()
	{
		return default(int);
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x8767E8", Offset = "0x8767E8", VA = "0x8767E8")]
	public float getMinTravelDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x8767F0", Offset = "0x8767F0", VA = "0x8767F0")]
	public float getMaxTravelDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x8767F8", Offset = "0x8767F8", VA = "0x8767F8")]
	public float getHeightBound()
	{
		return default(float);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x876800", Offset = "0x876800", VA = "0x876800")]
	public float getWidthBound()
	{
		return default(float);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x876808", Offset = "0x876808", VA = "0x876808")]
	public float getZDepth()
	{
		return default(float);
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x876810", Offset = "0x876810", VA = "0x876810")]
	public Vector3 getPlayerPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x87681C", Offset = "0x87681C", VA = "0x87681C")]
	public string getCurrentIslandName()
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x8768BC", Offset = "0x8768BC", VA = "0x8768BC")]
	public Vector3 getCurrentIslandPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x876968", Offset = "0x876968", VA = "0x876968")]
	public int getNextIslandId()
	{
		return default(int);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x876970", Offset = "0x876970", VA = "0x876970")]
	public Vector3 getNextIslandPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x8769FC", Offset = "0x8769FC", VA = "0x8769FC")]
	public float getTravelDistance()
	{
		return default(float);
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x876B40", Offset = "0x876B40", VA = "0x876B40")]
	private Vector3 findNewIslandPos(float forcedMinDist)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x876CF0", Offset = "0x876CF0", VA = "0x876CF0")]
	public void addDiscoveredIsland()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x876D98", Offset = "0x876D98", VA = "0x876D98")]
	private float findMaxDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x876F2C", Offset = "0x876F2C", VA = "0x876F2C")]
	public void setNextIslandId(int islandId)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x876F34", Offset = "0x876F34", VA = "0x876F34")]
	public bool isNextIslandSet()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x876F44", Offset = "0x876F44", VA = "0x876F44")]
	public void revealMapIslands()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x876FF8", Offset = "0x876FF8", VA = "0x876FF8")]
	public void generate()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x877764", Offset = "0x877764", VA = "0x877764")]
	public void updateDiscoveredIslands()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x87799C", Offset = "0x87799C", VA = "0x87799C")]
	public int getClosestIslandId()
	{
		return default(int);
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x877AE4", Offset = "0x877AE4", VA = "0x877AE4")]
	public Vector3 getIslandPos(int islandId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x877B88", Offset = "0x877B88", VA = "0x877B88")]
	public int placeLastIsland()
	{
		return default(int);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x877CD0", Offset = "0x877CD0", VA = "0x877CD0")]
	public int getMaxIslands()
	{
		return default(int);
	}
}
[Token(Token = "0x200005F")]
public class StoryScript
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StoryScript globalInstance;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> islandPrefabNames;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected JSONNode gameTextTree;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LandShip landShip;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int movedTimes;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int pendingRadioMessage;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int radioMessageMovesRequired;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isLighthouseIsland;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentIsland;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int tabletMovedTimes;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool landsquidTrackerSpawned;

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x87B534", Offset = "0x87B534", VA = "0x87B534")]
	public static StoryScript getInstance()
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x87B584", Offset = "0x87B584", VA = "0x87B584")]
	public StoryScript()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x87B5FC", Offset = "0x87B5FC", VA = "0x87B5FC")]
	public void preInit()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x87B6D8", Offset = "0x87B6D8", VA = "0x87B6D8")]
	private void addVisitedIslandFieldNote(int islandId)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x87B820", Offset = "0x87B820", VA = "0x87B820")]
	public int getMovedTimes()
	{
		return default(int);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x87B828", Offset = "0x87B828", VA = "0x87B828")]
	public void restoreMovedTimes()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x87B8A4", Offset = "0x87B8A4", VA = "0x87B8A4")]
	public void buildNewIsland(int numExploredIslands)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x87C188", Offset = "0x87C188", VA = "0x87C188")]
	private void populateIsland1()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x87C1D0", Offset = "0x87C1D0", VA = "0x87C1D0")]
	private void populateIsland2()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x87C238", Offset = "0x87C238", VA = "0x87C238")]
	private void setupPreviousPlayer(WreckMapObj wreckMapObj, GameSimulator gameSim)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x87C8C0", Offset = "0x87C8C0", VA = "0x87C8C0")]
	private void populateGenericIsland()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x87C8C4", Offset = "0x87C8C4", VA = "0x87C8C4")]
	private void buildIslandGeneric()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x87BD4C", Offset = "0x87BD4C", VA = "0x87BD4C")]
	private void buildIsland1()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x87BF14", Offset = "0x87BF14", VA = "0x87BF14")]
	private void buildIsland2()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x87C8C8", Offset = "0x87C8C8", VA = "0x87C8C8")]
	private void spawnHelperWreck(GateMapObj gate)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x87BA28", Offset = "0x87BA28", VA = "0x87BA28")]
	private void buildIsland0()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x87CA64", Offset = "0x87CA64", VA = "0x87CA64")]
	public JSONNode getGameTextTree()
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x87CA6C", Offset = "0x87CA6C", VA = "0x87CA6C")]
	private JSONNode findGameTextTreeNode(string entry)
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x87CBA8", Offset = "0x87CBA8", VA = "0x87CBA8")]
	public int getGameTextInt(string entry)
	{
		return default(int);
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x87CC68", Offset = "0x87CC68", VA = "0x87CC68")]
	public int getTextChildCount(string entry)
	{
		return default(int);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x8775B0", Offset = "0x8775B0", VA = "0x8775B0")]
	public string readText(string entry, int element = -1)
	{
		return null;
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x87CC8C", Offset = "0x87CC8C", VA = "0x87CC8C")]
	private void emitLighthouseHorn()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x87CD78", Offset = "0x87CD78", VA = "0x87CD78")]
	private void startTurnsTutorial()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x87CEF0", Offset = "0x87CEF0", VA = "0x87CEF0")]
	private void occludePortholeCallback()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x87CF14", Offset = "0x87CF14", VA = "0x87CF14")]
	public void enteredLandCockpit()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x87D000", Offset = "0x87D000", VA = "0x87D000")]
	private void setPendingRadioMessage(int messageId, int minTurns = 10, int maxTurns = 20)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x87D0C8", Offset = "0x87D0C8", VA = "0x87D0C8")]
	public void pendingRadioMessageReceived()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x87D1DC", Offset = "0x87D1DC", VA = "0x87D1DC")]
	public void engineMoveAhead()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x87D800", Offset = "0x87D800", VA = "0x87D800")]
	public void startMapGen()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x87D834", Offset = "0x87D834", VA = "0x87D834")]
	public void consumedAccessPointLog(BaseAccessPointMapObj mapObj)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x87DA5C", Offset = "0x87DA5C", VA = "0x87DA5C")]
	public string getChapter()
	{
		return null;
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x87DF70", Offset = "0x87DF70", VA = "0x87DF70")]
	public void gameOver()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x87D8B4", Offset = "0x87D8B4", VA = "0x87D8B4")]
	private string getNextLog(string mapObjName)
	{
		return null;
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x87DF7C", Offset = "0x87DF7C", VA = "0x87DF7C")]
	public void connectedToMapObject(BaseAccessPointMapObj mapObj)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x87E594", Offset = "0x87E594", VA = "0x87E594")]
	public void disconnectedFromMapObject(BaseAccessPointMapObj mapObj)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x87E598", Offset = "0x87E598", VA = "0x87E598")]
	public string decideZeppelinEncounter()
	{
		return null;
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x87E6A4", Offset = "0x87E6A4", VA = "0x87E6A4")]
	public void landedOnIsland()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x87E6A8", Offset = "0x87E6A8", VA = "0x87E6A8")]
	public string getGameOverText()
	{
		return null;
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x87E900", Offset = "0x87E900", VA = "0x87E900")]
	public List<string> getBulletin()
	{
		return null;
	}
}
[Token(Token = "0x2000060")]
public class SwitchComp : BaseComp
{
	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leverTrn;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string action;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float switchedOnRot;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int rotAxis;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool forceFeedback;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool state;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float switchedOffRot;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x87ECC8", Offset = "0x87ECC8", VA = "0x87ECC8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x87ED58", Offset = "0x87ED58", VA = "0x87ED58", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x87ED84", Offset = "0x87ED84", VA = "0x87ED84")]
	private void updateLever()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x87EE54", Offset = "0x87EE54", VA = "0x87EE54", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x87EE90", Offset = "0x87EE90", VA = "0x87EE90", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x87F118", Offset = "0x87F118", VA = "0x87F118")]
	public void forceSwitch(bool state, bool execAction = false)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x87F210", Offset = "0x87F210", VA = "0x87F210")]
	public bool getState()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x87F218", Offset = "0x87F218", VA = "0x87F218")]
	public SwitchComp()
	{
	}
}
[Token(Token = "0x2000061")]
public class SystemMenu : MonoBehaviour
{
	[Token(Token = "0x2000242")]
	public delegate void MenuItemCallback(object subject);

	[Token(Token = "0x2000243")]
	public delegate void DrawScreenCallback();

	[Token(Token = "0x2000244")]
	private class MenuItem
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int entryId;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MenuItemCallback callback;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object subject;

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x7867C0", Offset = "0x7867C0", VA = "0x7867C0")]
		public MenuItem()
		{
		}
	}

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showEnableDebug;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ship ship;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LandShip landShip;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ZeppelinShip zeppelinShip;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Computer computer;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LiftGame liftGame;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int cursorDirection;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int bufferCursor;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int renderBufferId;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int selectedEntryId;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int numMenuItems;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<MenuItem> menuItems;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<int> menuItemRows;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DrawScreenCallback drawScreenCallback;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private DrawScreenCallback nonPausedCallback;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int nonPausedBufferId;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Resource currentResource;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int numLines;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string[] currentMessage;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string[] radioMessage;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int progressCounter;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int progressDuration;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MenuItemCallback currentScreenDoneCallback;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MenuItemCallback currentScreenCancelCallback;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool needsUpdate;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Signal signal;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float zeppelinProgress;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float zeppelinAltitude;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool refreshEnabled;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private object[] tempObjects;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string headerMessageLabel;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string okMessageLabel;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string cancelMessageLabel;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool showingAlertScreen;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool zeppelinMode;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int partToRepair;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string alertText;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool debugMenusEnabled;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool zeppScreenBlank;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	private bool showAlertScreenDismissButton;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int bufferScrollOffset;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int drawItemCursor;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int globalItemCursor;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool startScrollEnabled;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool endScrollEnabled;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int highlightRow;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int mouseRow;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int iosStartOperation;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool initialized;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int interactSkipCount;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int blinkTick;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool blink;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool blinkEnabled;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<string> criticalResources;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int postCheckDirection;

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x87D778", Offset = "0x87D778", VA = "0x87D778")]
	public static SystemMenu getInstance()
	{
		return null;
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x87F2EC", Offset = "0x87F2EC", VA = "0x87F2EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x87F2F0", Offset = "0x87F2F0", VA = "0x87F2F0")]
	public void preInit()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x87F558", Offset = "0x87F558", VA = "0x87F558")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x87F560", Offset = "0x87F560", VA = "0x87F560")]
	public void setZeppelinMode(bool state)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x87F56C", Offset = "0x87F56C", VA = "0x87F56C")]
	public void reset()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x87F6DC", Offset = "0x87F6DC", VA = "0x87F6DC")]
	public void setRefreshEnabled(bool state)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x87F6E8", Offset = "0x87F6E8", VA = "0x87F6E8")]
	public int getBufferWidth()
	{
		return default(int);
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x87F730", Offset = "0x87F730", VA = "0x87F730")]
	public int getBottomLine()
	{
		return default(int);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x87F73C", Offset = "0x87F73C", VA = "0x87F73C")]
	public void refresh()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x87F748", Offset = "0x87F748", VA = "0x87F748")]
	public void resetSelection()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x87F750", Offset = "0x87F750", VA = "0x87F750")]
	private void displayBuffer()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x87F83C", Offset = "0x87F83C", VA = "0x87F83C")]
	private void updateSelector()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x87FCD4", Offset = "0x87FCD4", VA = "0x87FCD4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x87FD40", Offset = "0x87FD40", VA = "0x87FD40")]
	public void displayJammerMenu()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x87FE2C", Offset = "0x87FE2C", VA = "0x87FE2C")]
	public void drawBar(int posY, int barCount)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x87FE7C", Offset = "0x87FE7C", VA = "0x87FE7C")]
	public void drawLine(int posY_obsolete, string label = "")
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x880010", Offset = "0x880010", VA = "0x880010")]
	public void drawLongText(int cursorY, string message, out int endLine)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x87FCA0", Offset = "0x87FCA0", VA = "0x87FCA0")]
	public void scrollBufferDown()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x87FCB8", Offset = "0x87FCB8", VA = "0x87FCB8")]
	public void scrollBufferUp()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x880188", Offset = "0x880188", VA = "0x880188")]
	public void setHighlightRow(int row)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x880198", Offset = "0x880198", VA = "0x880198")]
	private void drawEndScrollItem()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x880210", Offset = "0x880210", VA = "0x880210")]
	public void drawStartScrollItem()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x880284", Offset = "0x880284", VA = "0x880284")]
	public bool isLongPage()
	{
		return default(bool);
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x88029C", Offset = "0x88029C", VA = "0x88029C")]
	public bool hasStartScroll()
	{
		return default(bool);
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x8802A4", Offset = "0x8802A4", VA = "0x8802A4")]
	public bool hasEndScroll()
	{
		return default(bool);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x87FFB4", Offset = "0x87FFB4", VA = "0x87FFB4")]
	private void handleScrollArrows()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x8802AC", Offset = "0x8802AC", VA = "0x8802AC")]
	public void drawMenuItem(int cursorY_obsolete, string label, MenuItemCallback callback, [Optional] object subject, int paletteId = 4)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x880430", Offset = "0x880430", VA = "0x880430")]
	public void drawMenuItemHighlight(int cursorY_obsolete, string label, MenuItemCallback callback, [Optional] object subject)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x880438", Offset = "0x880438", VA = "0x880438")]
	public void drawMenuItemBlink(int cursorY_obsolete, string label, MenuItemCallback callback, [Optional] object subject)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x880450", Offset = "0x880450", VA = "0x880450")]
	public void updateZeppelinProgress(float progress, float altitude)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x88046C", Offset = "0x88046C", VA = "0x88046C")]
	private void drawZeppelinTransitionMenu()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x880758", Offset = "0x880758", VA = "0x880758")]
	private void drawStorage()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x880B28", Offset = "0x880B28", VA = "0x880B28")]
	private void dismissLandShipAlertSelected(object subject)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x880C48", Offset = "0x880C48", VA = "0x880C48")]
	public void setHasNewFieldNote(int noteId)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x880D44", Offset = "0x880D44", VA = "0x880D44")]
	public void setHasNewRecord(int recordId)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x880DD8", Offset = "0x880DD8", VA = "0x880DD8")]
	private void drawTest()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x88116C", Offset = "0x88116C", VA = "0x88116C")]
	private void drawMainMenu()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x881618", Offset = "0x881618", VA = "0x881618")]
	private void equippedSelected(object resourceObj)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x8806E0", Offset = "0x8806E0", VA = "0x8806E0")]
	public void drawText(int vCursor, string msg)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x881704", Offset = "0x881704", VA = "0x881704")]
	private void drawEquippedResourceMenu()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x881884", Offset = "0x881884", VA = "0x881884")]
	private void drawResourceMenu()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x881B18", Offset = "0x881B18", VA = "0x881B18")]
	private void drawOkMessageScreen()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x881BE4", Offset = "0x881BE4", VA = "0x881BE4")]
	public void setOkMessageScreen(string msg, MenuItemCallback callback)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x881CF4", Offset = "0x881CF4", VA = "0x881CF4")]
	public void setOkCancelMessageScreen(string message, MenuItemCallback okCallback, MenuItemCallback cancelCallback)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x881E54", Offset = "0x881E54", VA = "0x881E54")]
	public void setCustomMessageScreen(string header, string message, string okLabel, string cancelLabel, MenuItemCallback okCallback, [Optional] MenuItemCallback cancelCallback)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x881F8C", Offset = "0x881F8C", VA = "0x881F8C")]
	private void drawOkCancelMessageScreen()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x882080", Offset = "0x882080", VA = "0x882080")]
	private void resourceUnequipped(object subject)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x88215C", Offset = "0x88215C", VA = "0x88215C")]
	private void equippedMenuOkPressed(object subject)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x8823E0", Offset = "0x8823E0", VA = "0x8823E0")]
	private void resourceEquipped(object subject)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x88241C", Offset = "0x88241C", VA = "0x88241C")]
	private void resourceMenuOkPressed(object subject)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x88260C", Offset = "0x88260C", VA = "0x88260C")]
	public void returnToZeppelinMenu(object subject)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x8820BC", Offset = "0x8820BC", VA = "0x8820BC")]
	public void returnToMainMenu([Optional] object subject)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x8826AC", Offset = "0x8826AC", VA = "0x8826AC")]
	public void displayZeppelinTransitionMenu()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x88274C", Offset = "0x88274C", VA = "0x88274C")]
	private void accessStorageSelected(object subject)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x8827E8", Offset = "0x8827E8", VA = "0x8827E8")]
	private void setCourseToIslandPressed(object subject)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x8829D4", Offset = "0x8829D4", VA = "0x8829D4")]
	private void islandPressed(object islandNameObj)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x882C8C", Offset = "0x882C8C", VA = "0x882C8C")]
	public void backToMainZeppMenuPressed(object subject)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x882CC0", Offset = "0x882CC0", VA = "0x882CC0")]
	private void drawMapMenu()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x882EA8", Offset = "0x882EA8", VA = "0x882EA8")]
	private void mapCoordinatesSelected(object subject)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x882F7C", Offset = "0x882F7C", VA = "0x882F7C")]
	private void displayFieldNotesSelected(object subject)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x883018", Offset = "0x883018", VA = "0x883018")]
	private void displayRecordsSelected(object subject)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x8830B4", Offset = "0x8830B4", VA = "0x8830B4")]
	private void displaySignalsSelected(object subject)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x883150", Offset = "0x883150", VA = "0x883150")]
	public void displayWeaponCodes()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x8831EC", Offset = "0x8831EC", VA = "0x8831EC")]
	private void displayWeaponCodesSelected(object subject)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x883288", Offset = "0x883288", VA = "0x883288")]
	private void selectedLanding(object subject)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x8832A4", Offset = "0x8832A4", VA = "0x8832A4")]
	private void landingSelected(object subject)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x8833F8", Offset = "0x8833F8", VA = "0x8833F8")]
	private void recordSelected(object recordEntryIdObj)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x883908", Offset = "0x883908", VA = "0x883908")]
	private void weaponCodeSelected(object weaponCodeEntryIdObj)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x883DE4", Offset = "0x883DE4", VA = "0x883DE4")]
	private void drawWeaponCodes()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x8840BC", Offset = "0x8840BC", VA = "0x8840BC")]
	private void signalSelected(object signalObj)
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x88431C", Offset = "0x88431C", VA = "0x88431C")]
	private void drawSignals()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x8844D0", Offset = "0x8844D0", VA = "0x8844D0")]
	private void fieldNoteSelected(object fieldNoteIdObj)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x884780", Offset = "0x884780", VA = "0x884780")]
	private void drawFieldNotes()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x8849E0", Offset = "0x8849E0", VA = "0x8849E0")]
	private void drawRecords()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x884D34", Offset = "0x884D34", VA = "0x884D34")]
	public void setZeppelinScreenBlank(bool state)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x884D48", Offset = "0x884D48", VA = "0x884D48")]
	public bool isShowingAlert()
	{
		return default(bool);
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x880B8C", Offset = "0x880B8C", VA = "0x880B8C")]
	public void setShowingAlertScreen(bool state, string msg = "", bool showDismissButton = true)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x884D50", Offset = "0x884D50", VA = "0x884D50")]
	private void dismissZeppelinAlertSelected(object subject)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x884DC8", Offset = "0x884DC8", VA = "0x884DC8")]
	private void drawZeppelinMenu()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x885158", Offset = "0x885158", VA = "0x885158")]
	private void latestBulletinSelected(object subject)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x8851F4", Offset = "0x8851F4", VA = "0x8851F4")]
	public void backToLiftMenuSelected(object subject)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x885290", Offset = "0x885290", VA = "0x885290")]
	private void drawBulletin()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x885434", Offset = "0x885434", VA = "0x885434")]
	private void backToLiftMenuPressed(object subject)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x885550", Offset = "0x885550", VA = "0x885550")]
	private void drawOptionsMenu()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x885690", Offset = "0x885690", VA = "0x885690")]
	private void optionsSelected(object subject)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x88572C", Offset = "0x88572C", VA = "0x88572C")]
	private void launchNauticrawl(object subject)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x88579C", Offset = "0x88579C", VA = "0x88579C")]
	private void liftToRoyalStablesSelected(object subject)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x885870", Offset = "0x885870", VA = "0x885870")]
	private void liftStage1Confirmed(object subject)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x88588C", Offset = "0x88588C", VA = "0x88588C")]
	private void liftFaultySelected(object subject)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x88590C", Offset = "0x88590C", VA = "0x88590C")]
	private void tempPuzzleSelected(object subject)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x885928", Offset = "0x885928", VA = "0x885928")]
	private void debug_jump01(object subject)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x88594C", Offset = "0x88594C", VA = "0x88594C")]
	private void debug_jump02(object subject)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x8859C4", Offset = "0x8859C4", VA = "0x8859C4")]
	private void debug_jump03(object subject)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x885A3C", Offset = "0x885A3C", VA = "0x885A3C")]
	private void debug_jump04(object subject)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x885AB4", Offset = "0x885AB4", VA = "0x885AB4")]
	private void debug_jump05(object subject)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x885B2C", Offset = "0x885B2C", VA = "0x885B2C")]
	private void debug_jump06(object subject)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x885BA4", Offset = "0x885BA4", VA = "0x885BA4")]
	private void debug_jump07(object subject)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x885C1C", Offset = "0x885C1C", VA = "0x885C1C")]
	private void debug_jump08(object subject)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x885C94", Offset = "0x885C94", VA = "0x885C94")]
	private void languageConfirmPressed(object langIdArg)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x885E8C", Offset = "0x885E8C", VA = "0x885E8C")]
	private void langConfirmGoToLiftMenu(object subject)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x885F38", Offset = "0x885F38", VA = "0x885F38")]
	private void achievementPressed(object subject)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x886008", Offset = "0x886008", VA = "0x886008")]
	private void nullAchievementPressed(object subject)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x88600C", Offset = "0x88600C", VA = "0x88600C")]
	private void drawAchievements()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x886318", Offset = "0x886318", VA = "0x886318")]
	private void achievementsSelected(object subject)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x8863F0", Offset = "0x8863F0", VA = "0x8863F0")]
	private void drawLiftMenu()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x88687C", Offset = "0x88687C", VA = "0x88687C")]
	private void dummyCallback(object subject)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x886880", Offset = "0x886880", VA = "0x886880")]
	private void drawMigrationTransfer()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x886940", Offset = "0x886940", VA = "0x886940")]
	public void displayMigrationTransferScreen()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x8828B4", Offset = "0x8828B4", VA = "0x8828B4")]
	public void displayZeppelinMenu()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x885D74", Offset = "0x885D74", VA = "0x885D74")]
	public void displayLiftMenuLangSelect()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x885438", Offset = "0x885438", VA = "0x885438")]
	public void displayLiftMenu()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x8869EC", Offset = "0x8869EC", VA = "0x8869EC")]
	private void unhookEncounterSelected(object subject)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x886A18", Offset = "0x886A18", VA = "0x886A18")]
	private void drawEncounterMenu()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x886A44", Offset = "0x886A44", VA = "0x886A44")]
	public void displayEncounterMenu()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x886AE0", Offset = "0x886AE0", VA = "0x886AE0")]
	private void descendToLowerDeckScreen(object subject)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x886BF8", Offset = "0x886BF8", VA = "0x886BF8")]
	private void lowerDeckPressed(object subject)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x886CF0", Offset = "0x886CF0", VA = "0x886CF0")]
	private void backToLandsquidStuckMenu(object subject)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x886D90", Offset = "0x886D90", VA = "0x886D90")]
	private void enterLowerDeck(object subject)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x886E00", Offset = "0x886E00", VA = "0x886E00")]
	private void drawLandsquidStuckMenu()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x886CF4", Offset = "0x886CF4", VA = "0x886CF4")]
	public void displayLandsquidStuckMenu()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x886EC4", Offset = "0x886EC4", VA = "0x886EC4")]
	public void restoreEnabledState()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x886EF8", Offset = "0x886EF8", VA = "0x886EF8")]
	private void computerSwitched()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x886FB8", Offset = "0x886FB8", VA = "0x886FB8")]
	public void displayMainMenu()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x88706C", Offset = "0x88706C", VA = "0x88706C")]
	private void resourceSelected(object resourceObj)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x887158", Offset = "0x887158", VA = "0x887158")]
	public void interactScrollMenu(float value)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x887274", Offset = "0x887274", VA = "0x887274")]
	public void prevMenuPressed()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x88733C", Offset = "0x88733C", VA = "0x88733C")]
	public int getSelectedEntryId()
	{
		return default(int);
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x8872D0", Offset = "0x8872D0", VA = "0x8872D0")]
	public void nextMenuPressed()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x887344", Offset = "0x887344", VA = "0x887344")]
	public void interactSelectMenu()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x87FDFC", Offset = "0x87FDFC", VA = "0x87FDFC")]
	public void setScreenDrawCallback(DrawScreenCallback drawCallback)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x8874A8", Offset = "0x8874A8", VA = "0x8874A8")]
	private void partRepaired(object subject)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x8874FC", Offset = "0x8874FC", VA = "0x8874FC")]
	private void repairPartPressed(object subject)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x8875E0", Offset = "0x8875E0", VA = "0x8875E0")]
	private void drawRepairMenu()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x88791C", Offset = "0x88791C", VA = "0x88791C")]
	public void displayTankRefill(Resource resource, int tankId)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x887A20", Offset = "0x887A20", VA = "0x887A20")]
	private void useResourceDone(object subject)
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x887A5C", Offset = "0x887A5C", VA = "0x887A5C")]
	public void displayBatteryRecharge(Resource resource)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x887B64", Offset = "0x887B64", VA = "0x887B64")]
	public void itemDecrypted(object subject)
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x887D10", Offset = "0x887D10", VA = "0x887D10")]
	public void decryptPartPressed(object subject)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x887EBC", Offset = "0x887EBC", VA = "0x887EBC")]
	private void drawDecryptMenu()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x888088", Offset = "0x888088", VA = "0x888088")]
	public void displayDecryptMenu(Resource resource)
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x888134", Offset = "0x888134", VA = "0x888134")]
	public void displayRepairMenu(Resource resource)
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x8881E0", Offset = "0x8881E0", VA = "0x8881E0")]
	private void drawJammerMenu()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x888244", Offset = "0x888244", VA = "0x888244")]
	public void returnToJammerMenu(object obj)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x8882E4", Offset = "0x8882E4", VA = "0x8882E4")]
	private void drawProgress()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x88844C", Offset = "0x88844C", VA = "0x88844C")]
	private void transloadAllDone(object subject)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x888450", Offset = "0x888450", VA = "0x888450")]
	private void transloadAllNow(MapObject mapObj)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x888560", Offset = "0x888560", VA = "0x888560")]
	public void transloadAllResourcesFrom(MapObject mapObj)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x888704", Offset = "0x888704", VA = "0x888704")]
	private void gettingResourceDone(object subject)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x88875C", Offset = "0x88875C", VA = "0x88875C")]
	private void gettingSaltDone(object subject)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x8887E0", Offset = "0x8887E0", VA = "0x8887E0")]
	private void discardResourceSelected(object resource)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x8888D8", Offset = "0x8888D8", VA = "0x8888D8")]
	private void discardConfirmed(object resource)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x888998", Offset = "0x888998", VA = "0x888998")]
	private void cancelDiscard(object resource)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x8889A0", Offset = "0x8889A0", VA = "0x8889A0")]
	private void confirmDiscardSelected(object resource)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x888B90", Offset = "0x888B90", VA = "0x888B90")]
	private void wantToDiscardResourceScreen()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x888D88", Offset = "0x888D88", VA = "0x888D88")]
	private void getResourcePressed(object obj)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x888F3C", Offset = "0x888F3C", VA = "0x888F3C")]
	private void drawGetResourceMenu()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x889160", Offset = "0x889160", VA = "0x889160")]
	public void showGetResourceMenu(Resource resource)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x88920C", Offset = "0x88920C", VA = "0x88920C")]
	public void unhookJammerSelected(object subject)
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x882260", Offset = "0x882260", VA = "0x882260")]
	public void startProgress(int duration, string title, string barHeader, string onDoneMsg, MenuItemCallback onEndCallback)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x8892C0", Offset = "0x8892C0", VA = "0x8892C0")]
	public void skipRefresh()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x8892C8", Offset = "0x8892C8", VA = "0x8892C8")]
	private void gameStartSelected(object subject)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x889338", Offset = "0x889338", VA = "0x889338")]
	private void resetToGameMenuSelected(object subject)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x8893AC", Offset = "0x8893AC", VA = "0x8893AC")]
	private void gameCreditsSelected(object subject)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x889448", Offset = "0x889448", VA = "0x889448")]
	private void drawCreditsMenuScreen()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x889628", Offset = "0x889628", VA = "0x889628")]
	private void gameExitSelected(object subject)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x88962C", Offset = "0x88962C", VA = "0x88962C")]
	private void returnToGameSelected(object subject)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x8896A0", Offset = "0x8896A0", VA = "0x8896A0")]
	private void returnToStartMenu(object subject)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x88971C", Offset = "0x88971C", VA = "0x88971C")]
	private void debugCrystalSelected(object subject)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x8897FC", Offset = "0x8897FC", VA = "0x8897FC")]
	private void debugFinalRoomSelected(object subject)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x88985C", Offset = "0x88985C", VA = "0x88985C")]
	private void debugZeppelinSelected(object subject)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x8898BC", Offset = "0x8898BC", VA = "0x8898BC")]
	private void confirmedClearSaveFile(object subject)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x88992C", Offset = "0x88992C", VA = "0x88992C")]
	private void clearSaveDataSelected(object subject)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x889A00", Offset = "0x889A00", VA = "0x889A00")]
	private void backToPauseMenu(object subject)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x889A9C", Offset = "0x889A9C", VA = "0x889A9C")]
	private void backToStartMenu(object subject)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x889B3C", Offset = "0x889B3C", VA = "0x889B3C")]
	public void enableDebugMenu()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x889B48", Offset = "0x889B48", VA = "0x889B48")]
	private void enableDebugSelected(object subject)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x889BF0", Offset = "0x889BF0", VA = "0x889BF0")]
	private void debugVideoKeysSelected(object subject)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x889BF4", Offset = "0x889BF4", VA = "0x889BF4")]
	private void fullScreenSelected(object subject)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x889CE0", Offset = "0x889CE0", VA = "0x889CE0")]
	private void newScreenResolutionSelected(object subject)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x889E7C", Offset = "0x889E7C", VA = "0x889E7C")]
	private void newQualitySettingSelected(object subject)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x889F44", Offset = "0x889F44", VA = "0x889F44")]
	private void drawQualitySettings()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x88A18C", Offset = "0x88A18C", VA = "0x88A18C")]
	private void drawScreenResSettings()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x88A68C", Offset = "0x88A68C", VA = "0x88A68C")]
	private void displayScreenResSettingSelected(object subject)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x88A774", Offset = "0x88A774", VA = "0x88A774")]
	private void displayQualitySettingSelected(object subject)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x88A85C", Offset = "0x88A85C", VA = "0x88A85C")]
	private void newBrightnessSelected(object subject)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x88A928", Offset = "0x88A928", VA = "0x88A928")]
	private void drawScreenBrightSetttings()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x88AC84", Offset = "0x88AC84", VA = "0x88AC84")]
	private void displayBrightnessSettingSelected(object subject)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x88AD6C", Offset = "0x88AD6C", VA = "0x88AD6C")]
	private void newSoundVolumeSelected(object subject)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x88AE98", Offset = "0x88AE98", VA = "0x88AE98")]
	private void displayVolumeSettingSelected(object subject)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x88AF80", Offset = "0x88AF80", VA = "0x88AF80")]
	private void drawVolumeSetting()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x88B1C0", Offset = "0x88B1C0", VA = "0x88B1C0")]
	private void debugQuickStartSelected(object subject)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x88B248", Offset = "0x88B248", VA = "0x88B248")]
	private void accessLockedSelected(object subject)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x88B24C", Offset = "0x88B24C", VA = "0x88B24C")]
	public void drawStartMenu()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x88B250", Offset = "0x88B250", VA = "0x88B250")]
	public void jumpToZeppelinSelected(object subject)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x88B254", Offset = "0x88B254", VA = "0x88B254")]
	private void listBindingsSelected(object subject)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x88B258", Offset = "0x88B258", VA = "0x88B258")]
	private void unlockEjectPressed(object subject)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x88B27C", Offset = "0x88B27C", VA = "0x88B27C")]
	private void debugZeppGetMapSelected(object subject)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x88B2AC", Offset = "0x88B2AC", VA = "0x88B2AC")]
	private void debugZeppLandSelected(object subject)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x88B2DC", Offset = "0x88B2DC", VA = "0x88B2DC")]
	public void drawPauseMenu()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x88B2E0", Offset = "0x88B2E0", VA = "0x88B2E0")]
	private void displayLangSettingSelected(object subject)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x88B37C", Offset = "0x88B37C", VA = "0x88B37C")]
	private void langSelected(object subject)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x88B41C", Offset = "0x88B41C", VA = "0x88B41C")]
	private void drawLangSetting()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x88B7D4", Offset = "0x88B7D4", VA = "0x88B7D4")]
	private void debugDepleatBattery(object arg)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x88B844", Offset = "0x88B844", VA = "0x88B844")]
	public void displayStartMenu()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x88B91C", Offset = "0x88B91C", VA = "0x88B91C")]
	public void disableMenuMode()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x88B920", Offset = "0x88B920", VA = "0x88B920")]
	public void displayPauseMenu(bool state)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x88B924", Offset = "0x88B924", VA = "0x88B924")]
	private void drawImportantMessage()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x88BA20", Offset = "0x88BA20", VA = "0x88BA20")]
	public void displayImportantMessage(string msg)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x88BB30", Offset = "0x88BB30", VA = "0x88BB30")]
	public void displayCrystalMountingProgress(MenuItemCallback callback)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x886F60", Offset = "0x886F60", VA = "0x886F60")]
	public void clearRadioMessage()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x88BBAC", Offset = "0x88BBAC", VA = "0x88BBAC")]
	public void dismissRadioMessage([Optional] object subject)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x88BC78", Offset = "0x88BC78", VA = "0x88BC78")]
	private void showRadioMessage(object subject)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x87D7DC", Offset = "0x87D7DC", VA = "0x87D7DC")]
	public bool isShowingRadioMessage()
	{
		return default(bool);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x88BD44", Offset = "0x88BD44", VA = "0x88BD44")]
	public void displayRadioMessage(string message, bool isTrail, bool showProgressBar = true)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x88BEBC", Offset = "0x88BEBC", VA = "0x88BEBC")]
	private void broadcastSignalPressed(object subject)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x88C05C", Offset = "0x88C05C", VA = "0x88C05C")]
	private void broadcastSignalCancelPressed(object subject)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x88C12C", Offset = "0x88C12C", VA = "0x88C12C")]
	private void drawMatrixCode()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x88C308", Offset = "0x88C308", VA = "0x88C308")]
	public void displayMatrixCode(string code)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x88C418", Offset = "0x88C418", VA = "0x88C418")]
	public SystemMenu()
	{
	}
}
[Token(Token = "0x2000062")]
public class TapComp : BaseComp
{
	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tap;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float min;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float max;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float defaultValue;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minRot;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxRot;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string action;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string releaseAction;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string sound;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float mouseScrollMult;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool useX;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useMinusY;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float mouseStartX;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool mouseDown;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float value;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float mousePressValue;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Component comp;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MethodInfo method;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool soundPlayed;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool locked;

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x786F28", Offset = "0x786F28", VA = "0x786F28", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x78705C", Offset = "0x78705C", VA = "0x78705C", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x787298", Offset = "0x787298", VA = "0x787298", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x7872F8", Offset = "0x7872F8", VA = "0x7872F8")]
	public float getValue()
	{
		return default(float);
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x786F10", Offset = "0x786F10", VA = "0x786F10")]
	public void setValue(float value)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x7870A4", Offset = "0x7870A4", VA = "0x7870A4")]
	private void updateTap(float newVal, bool execMethod = true)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x787300", Offset = "0x787300", VA = "0x787300", Slot = "10")]
	public override void compMouseDrag()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x7873D0", Offset = "0x7873D0", VA = "0x7873D0", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x7874FC", Offset = "0x7874FC", VA = "0x7874FC")]
	public void setLocked(bool state)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x787508", Offset = "0x787508", VA = "0x787508")]
	public TapComp()
	{
	}
}
[Token(Token = "0x2000063")]
public class GenericUpdateTask : BaseTask
{
	[Token(Token = "0x2000245")]
	public delegate bool TaskUpdateCallback(int enlapsedFrames);

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TaskUpdateCallback updateCallback;

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x72C9F0", Offset = "0x72C9F0", VA = "0x72C9F0", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x728DD4", Offset = "0x728DD4", VA = "0x728DD4")]
	public GenericUpdateTask()
	{
	}
}
[Token(Token = "0x2000064")]
public class UpdateLightTask : BaseTask
{
	[Token(Token = "0x2000246")]
	public delegate bool TaskUpdateCallback(int enlapsedFrames);

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TaskUpdateCallback updateCallback;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x78E48C", Offset = "0x78E48C", VA = "0x78E48C", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x78E740", Offset = "0x78E740", VA = "0x78E740")]
	public UpdateLightTask()
	{
	}
}
[Token(Token = "0x2000065")]
public class ShowRechargerPoleTask : BaseTask
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rechargePoleObj;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float start;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float end;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x83BC3C", Offset = "0x83BC3C", VA = "0x83BC3C", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x83BD48", Offset = "0x83BD48", VA = "0x83BD48")]
	public ShowRechargerPoleTask()
	{
	}
}
[Token(Token = "0x2000066")]
public class RadarSpotNewObjTask : BaseTask
{
	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject circleObj;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject targetObj;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x83285C", Offset = "0x83285C", VA = "0x83285C", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x831050", Offset = "0x831050", VA = "0x831050")]
	public RadarSpotNewObjTask()
	{
	}
}
[Token(Token = "0x2000067")]
public class JammerUpdateTask : BaseTask
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LandShip landShip;

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x732F80", Offset = "0x732F80", VA = "0x732F80", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x7331E0", Offset = "0x7331E0", VA = "0x7331E0")]
	public JammerUpdateTask()
	{
	}
}
[Token(Token = "0x2000068")]
public class EngineRotateTask : BaseTask
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Engine engine;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x101EEA0", Offset = "0x101EEA0", VA = "0x101EEA0", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x101EC10", Offset = "0x101EC10", VA = "0x101EC10")]
	public EngineRotateTask()
	{
	}
}
[Token(Token = "0x2000069")]
public class EngineMoveTask : BaseTask
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Engine engine;

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x101EE50", Offset = "0x101EE50", VA = "0x101EE50", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x101D258", Offset = "0x101D258", VA = "0x101D258")]
	public EngineMoveTask()
	{
	}
}
[Token(Token = "0x200006A")]
public class RadarHoloSwitchOnTask : BaseTask
{
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material backgroundMat;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material gridMat;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material scanDiscMat;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material pawnMat;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] radarObjs;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float startValue;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float endValue;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float radiusTarget;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ElectricalGroup electricalGrp;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int frames;

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x8325E4", Offset = "0x8325E4", VA = "0x8325E4", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x830190", Offset = "0x830190", VA = "0x830190")]
	public RadarHoloSwitchOnTask()
	{
	}
}
[Token(Token = "0x200006B")]
public class BootTask : BaseTask
{
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Computer computer;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameManager game;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Ship ship;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> mainBuffer;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int initialDelay;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x8BE6E4", Offset = "0x8BE6E4", VA = "0x8BE6E4", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x8BE9E0", Offset = "0x8BE9E0", VA = "0x8BE9E0")]
	public BootTask()
	{
	}
}
[Token(Token = "0x200006C")]
public class ShouldEjectTask : BaseTask
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LandShip ship;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ejectParentObj;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lidObj;

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x83B640", Offset = "0x83B640", VA = "0x83B640", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x83B7F0", Offset = "0x83B7F0", VA = "0x83B7F0")]
	public ShouldEjectTask()
	{
	}
}
[Token(Token = "0x200006D")]
public class RetractEjectTask : BaseTask
{
	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LandShip ship;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ejectParentObj;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lidObj;

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x834E98", Offset = "0x834E98", VA = "0x834E98", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x834F44", Offset = "0x834F44", VA = "0x834F44")]
	public RetractEjectTask()
	{
	}
}
[Token(Token = "0x200006E")]
public class RepeatedCallbackTask : BaseTask
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numTimes;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int numFrames;

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x833AB0", Offset = "0x833AB0", VA = "0x833AB0", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x833B18", Offset = "0x833B18", VA = "0x833B18")]
	public RepeatedCallbackTask()
	{
	}
}
[Token(Token = "0x200006F")]
public class ScreenFadeTask : BaseTask
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRScreenFade screenFade;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float start;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float end;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numFrames;

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x835EFC", Offset = "0x835EFC", VA = "0x835EFC", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x835F70", Offset = "0x835F70", VA = "0x835F70")]
	public ScreenFadeTask()
	{
	}
}
[Token(Token = "0x2000070")]
public class ImageFadeTask : BaseTask
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image image;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float start;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float end;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numFrames;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int delayFrames;

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x731E90", Offset = "0x731E90", VA = "0x731E90", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x732050", Offset = "0x732050", VA = "0x732050")]
	public ImageFadeTask()
	{
	}
}
[Token(Token = "0x2000071")]
public class TextComposeTask : BaseTask
{
	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI textmesh;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string text;

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x78B658", Offset = "0x78B658", VA = "0x78B658", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x78B74C", Offset = "0x78B74C", VA = "0x78B74C")]
	public TextComposeTask()
	{
	}
}
[Token(Token = "0x2000072")]
public class AudioFadeTask : BaseTask
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audio;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float start;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float end;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numFrames;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float step;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x8B72E4", Offset = "0x8B72E4", VA = "0x8B72E4", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x8B73BC", Offset = "0x8B73BC", VA = "0x8B73BC")]
	public AudioFadeTask()
	{
	}
}
[Token(Token = "0x2000073")]
public class AnimDoneCallbackTask : BaseTask
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animation anim;

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x8B6AA8", Offset = "0x8B6AA8", VA = "0x8B6AA8", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x8B6B44", Offset = "0x8B6B44", VA = "0x8B6B44")]
	public AnimDoneCallbackTask()
	{
	}
}
[Token(Token = "0x2000074")]
public class TimedCallbackTask : BaseTask
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numFrames;

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x78B7A4", Offset = "0x78B7A4", VA = "0x78B7A4", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x78B7C0", Offset = "0x78B7C0", VA = "0x78B7C0")]
	public TimedCallbackTask()
	{
	}
}
[Token(Token = "0x2000075")]
public class SwithEngineOnTask : BaseTask
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Engine engine;

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x87F288", Offset = "0x87F288", VA = "0x87F288", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x87F2E4", Offset = "0x87F2E4", VA = "0x87F2E4")]
	public SwithEngineOnTask()
	{
	}
}
[Token(Token = "0x2000076")]
public class ShowChapterTask : BaseTask
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string chapter;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int delayFrames;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int fadeFrames;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float start;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float end;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text guiText;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x83B7F8", Offset = "0x83B7F8", VA = "0x83B7F8", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x83BA34", Offset = "0x83BA34", VA = "0x83BA34")]
	public ShowChapterTask()
	{
	}
}
[Token(Token = "0x2000077")]
public class ZeppelinTakeOffTask : BaseTask
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LandShip ship;

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xD46A64", Offset = "0xD46A64", VA = "0xD46A64", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xD46A80", Offset = "0xD46A80", VA = "0xD46A80")]
	public ZeppelinTakeOffTask()
	{
	}
}
[Token(Token = "0x2000078")]
public class ShowPetsciiTask : BaseTask
{
	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Computer computer;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool computerFaulty;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int bufferId;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public JSONNode tiles;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int tile;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int x;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int y;

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x83BA8C", Offset = "0x83BA8C", VA = "0x83BA8C", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x83BC34", Offset = "0x83BC34", VA = "0x83BC34")]
	public ShowPetsciiTask()
	{
	}
}
[Token(Token = "0x2000079")]
public class ScrollScreenTask : BaseTask
{
	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int bufferId;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool back;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool forth;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int speed;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Computer computer;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int width;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int col;

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x835F78", Offset = "0x835F78", VA = "0x835F78", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x83609C", Offset = "0x83609C", VA = "0x83609C")]
	public ScrollScreenTask()
	{
	}
}
[Token(Token = "0x200007A")]
public class ChangeZeppelinScreenAnimTask : BaseTask
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Computer computer;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int bufferId;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int verticalLines;

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x76A8AC", Offset = "0x76A8AC", VA = "0x76A8AC", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x76AC28", Offset = "0x76AC28", VA = "0x76AC28")]
	public ChangeZeppelinScreenAnimTask()
	{
	}
}
[Token(Token = "0x200007B")]
public class ChangeScreenAnimTask : BaseTask
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Computer computer;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int bufferId;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int verticalLines;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int halfVerticalLines;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int numHorizontalChars;

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x76A44C", Offset = "0x76A44C", VA = "0x76A44C", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x76A8A4", Offset = "0x76A8A4", VA = "0x76A8A4")]
	public ChangeScreenAnimTask()
	{
	}
}
[Token(Token = "0x200007C")]
public class ZeppRadarNewIslandTask : BaseTask
{
	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ZeppelinRadarCameraDraw radarDraw;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ZeppelinShip zeppShip;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int nextIslandId;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int totalFrames;

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x793738", Offset = "0x793738", VA = "0x793738", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x7938A0", Offset = "0x7938A0", VA = "0x7938A0")]
	public ZeppRadarNewIslandTask()
	{
	}
}
[Token(Token = "0x200007D")]
public class EmitBroadcastTask : BaseTask
{
	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ButtonComp> buttons;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ButtonComp> alreadyPressedButtons;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ZeppelinShip zeppShip;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Ship ship;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string code;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int buttonId;

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x1018188", Offset = "0x1018188", VA = "0x1018188", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x10183D0", Offset = "0x10183D0", VA = "0x10183D0")]
	public EmitBroadcastTask()
	{
	}
}
[Token(Token = "0x200007E")]
public class CockpitDownTask : BaseTask
{
	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameManager gameManager;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform waterDrip;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotZ;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int dir;

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x76BD78", Offset = "0x76BD78", VA = "0x76BD78", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x76BE30", Offset = "0x76BE30", VA = "0x76BE30")]
	public CockpitDownTask()
	{
	}
}
[Token(Token = "0x200007F")]
public class IslandGenTask : BaseTask
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameSimulator gameSim;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float islandSize;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int numGates;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x732F00", Offset = "0x732F00", VA = "0x732F00", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x732F78", Offset = "0x732F78", VA = "0x732F78")]
	public IslandGenTask()
	{
	}
}
[Token(Token = "0x2000080")]
public class PlayAnimTask : BaseTask
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gameObj;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip animClip;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int startFrame;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int endFrame;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playReverse;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float advanceSpeed;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentFrame;

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x80D6F8", Offset = "0x80D6F8", VA = "0x80D6F8", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x80D7E4", Offset = "0x80D7E4", VA = "0x80D7E4")]
	public PlayAnimTask()
	{
	}
}
[Token(Token = "0x2000081")]
public class PlayAnimTimeTask : BaseTask
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject gameObj;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationClip animClip;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float startTime;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float endTime;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float advanceSteps;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentTime;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeStep;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x80D7F4", Offset = "0x80D7F4", VA = "0x80D7F4", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x80D880", Offset = "0x80D880", VA = "0x80D880")]
	public PlayAnimTimeTask()
	{
	}
}
[Token(Token = "0x2000082")]
public class MapObjBlinkTask : BaseTask
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MapObject mapObj;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int numFrames;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color baseColor;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color highlightColor;

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x7C3F64", Offset = "0x7C3F64", VA = "0x7C3F64", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x7C4094", Offset = "0x7C4094", VA = "0x7C4094")]
	public MapObjBlinkTask()
	{
	}
}
[Token(Token = "0x2000083")]
public class LightFlickerTask : BaseTask
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light light;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int duration;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float originalIntensity;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x6C0C68", Offset = "0x6C0C68", VA = "0x6C0C68", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x6C0D0C", Offset = "0x6C0D0C", VA = "0x6C0D0C")]
	public LightFlickerTask()
	{
	}
}
[Token(Token = "0x2000084")]
public class BigSwitchAnim : BaseTask
{
	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BigSwitchComp bigSwitch;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int duration;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float targetRot;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool execAction;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float startRot;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float step;

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x8BD5C4", Offset = "0x8BD5C4", VA = "0x8BD5C4", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x8BD8C8", Offset = "0x8BD8C8", VA = "0x8BD8C8")]
	public BigSwitchAnim()
	{
	}
}
[Token(Token = "0x2000085")]
public class TapAnimTask : BaseTask
{
	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TapComp tap;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int duration;

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x786EAC", Offset = "0x786EAC", VA = "0x786EAC", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x786F18", Offset = "0x786F18", VA = "0x786F18")]
	public TapAnimTask()
	{
	}
}
[Token(Token = "0x2000086")]
public class MovementLeverAnimTask : BaseTask
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MovementLeverComp lever;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetValue;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int duration;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string keyDown;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startRot;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float step;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x7C8D10", Offset = "0x7C8D10", VA = "0x7C8D10", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x7C9098", Offset = "0x7C9098", VA = "0x7C9098")]
	public MovementLeverAnimTask()
	{
	}
}
[Token(Token = "0x2000087")]
internal class GlowTask : BaseTask
{
	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material material;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxGlow;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float originalGlow;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int state;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color color;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float glow;

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x72CD5C", Offset = "0x72CD5C", VA = "0x72CD5C", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x72CEE0", Offset = "0x72CEE0", VA = "0x72CEE0")]
	public GlowTask()
	{
	}
}
[Token(Token = "0x2000088")]
public class PullAnimTask : BaseTask
{
	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pullerObj;

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x82B194", Offset = "0x82B194", VA = "0x82B194", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x82B2BC", Offset = "0x82B2BC", VA = "0x82B2BC")]
	public PullAnimTask()
	{
	}
}
[Token(Token = "0x2000089")]
public class IosIntroMenuAnimsTask : BaseTask
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material atmosphereMat;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material smokeMat1;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material smokeMat2;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material smokeMat3;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material sunMat;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material haze1;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material haze2;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material atmosphereDistortion;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 animValue;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x732DC8", Offset = "0x732DC8", VA = "0x732DC8", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x732EF0", Offset = "0x732EF0", VA = "0x732EF0")]
	public IosIntroMenuAnimsTask()
	{
	}
}
[Token(Token = "0x200008A")]
public class FinalRoomCamMoveTask : BaseTask
{
	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject cameraParent;

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x102508C", Offset = "0x102508C", VA = "0x102508C", Slot = "4")]
	public override void run()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x1025154", Offset = "0x1025154", VA = "0x1025154")]
	public FinalRoomCamMoveTask()
	{
	}
}
[Token(Token = "0x200008B")]
public class Tracker
{
	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool enabled;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int numRestarts;

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x78B7C8", Offset = "0x78B7C8", VA = "0x78B7C8")]
	public static void init()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x78B834", Offset = "0x78B834", VA = "0x78B834")]
	public static void startRun()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x78B918", Offset = "0x78B918", VA = "0x78B918")]
	public static void disable()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x78B980", Offset = "0x78B980", VA = "0x78B980")]
	public static void gameOver()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x78BA2C", Offset = "0x78BA2C", VA = "0x78BA2C")]
	private static string enlapsedTimeStr()
	{
		return null;
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x78BB80", Offset = "0x78BB80", VA = "0x78BB80")]
	private static int enlapsedTimeMinutes()
	{
		return default(int);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x78BC48", Offset = "0x78BC48", VA = "0x78BC48")]
	public static void storyAdvance(int step)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x78BCAC", Offset = "0x78BCAC", VA = "0x78BCAC")]
	public static void deathType(string death)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x78BD10", Offset = "0x78BD10", VA = "0x78BD10")]
	public static void engineStarted()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x78BD74", Offset = "0x78BD74", VA = "0x78BD74")]
	public static void missingTranslation(string message)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x78BDD8", Offset = "0x78BDD8", VA = "0x78BDD8")]
	public Tracker()
	{
	}
}
[Token(Token = "0x200008C")]
public class TurretMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject lineObj;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Color passiveColor;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Color alertedColor;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Color offensiveColor;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Color deadColor;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float minDamage;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float maxDamage;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float sightRadius;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float stealthDiscoveryTreshold;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool playerMoved;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool attacked;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector3 sightVec;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float angle;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject pawn;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private GameObject trackedObj;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private LandShip ship;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Computer playerComputer;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int raycastMask;

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x78BDE4", Offset = "0x78BDE4", VA = "0x78BDE4", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x78BE0C", Offset = "0x78BE0C", VA = "0x78BE0C")]
	private void initStates()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x78BF24", Offset = "0x78BF24", VA = "0x78BF24", Slot = "12")]
	public override void setIsVisibleInRadar(bool state)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x78BFE4", Offset = "0x78BFE4", VA = "0x78BFE4")]
	private void updateLineColor()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x78C0E4", Offset = "0x78C0E4", VA = "0x78C0E4", Slot = "7")]
	public override void playerStealthChanged()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x78C0E8", Offset = "0x78C0E8", VA = "0x78C0E8", Slot = "4")]
	public override void takeDamage(float damage)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x78C278", Offset = "0x78C278", VA = "0x78C278")]
	private void spawnResources()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x78C3C4", Offset = "0x78C3C4", VA = "0x78C3C4", Slot = "8")]
	public override void playerTurnOver()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x78C3D0", Offset = "0x78C3D0", VA = "0x78C3D0", Slot = "9")]
	public override void execTick(int tick)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x78C6F0", Offset = "0x78C6F0", VA = "0x78C6F0")]
	private void scout()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x78CE60", Offset = "0x78CE60", VA = "0x78CE60")]
	private void updateLine()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x78C15C", Offset = "0x78C15C", VA = "0x78C15C")]
	private void resetState()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x78CB6C", Offset = "0x78CB6C", VA = "0x78CB6C")]
	private bool track()
	{
		return default(bool);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x78D0B8", Offset = "0x78D0B8", VA = "0x78D0B8", Slot = "14")]
	public override void connected()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x78D0E4", Offset = "0x78D0E4", VA = "0x78D0E4", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x78D1A8", Offset = "0x78D1A8", VA = "0x78D1A8", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x78D1D0", Offset = "0x78D1D0", VA = "0x78D1D0")]
	public TurretMapObj()
	{
	}
}
[Token(Token = "0x200008D")]
public class VolumeLeverComp : BaseComp
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform volumeLever;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float min;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float max;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float defaultValue;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minHeight;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxHeight;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float mouseScrollMult;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string action;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string releaseAction;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string sound;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float mouseStartY;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool mouseDown;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float value;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float mousePressValue;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Component comp;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MethodInfo method;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool soundPlayed;

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x79092C", Offset = "0x79092C", VA = "0x79092C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x790A58", Offset = "0x790A58", VA = "0x790A58", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x790C74", Offset = "0x790C74", VA = "0x790C74", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x790A94", Offset = "0x790A94", VA = "0x790A94")]
	private void updateVolumeLever(float newVal, bool execMethod = true)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x790CB4", Offset = "0x790CB4", VA = "0x790CB4", Slot = "10")]
	public override void compMouseDrag()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x790D30", Offset = "0x790D30", VA = "0x790D30", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x790E44", Offset = "0x790E44", VA = "0x790E44")]
	public VolumeLeverComp()
	{
	}
}
[Token(Token = "0x200008E")]
public class WeaponCableHandleComp : BaseComp
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color onColor;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color offColor;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject cablePlugObj;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject matrixAnchorsParent;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int cableId;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int startPlug;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector3> targets;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool dragging;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 pulledOffset;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 pluggedOffset;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int currentPlugId;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x790EC0", Offset = "0x790EC0", VA = "0x790EC0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x790FE4", Offset = "0x790FE4", VA = "0x790FE4", Slot = "5")]
	public override void reset()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x7911A0", Offset = "0x7911A0", VA = "0x7911A0", Slot = "8")]
	public override void compMouseDown()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x7913B8", Offset = "0x7913B8", VA = "0x7913B8")]
	public void setPlugColor(Color color)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x791484", Offset = "0x791484", VA = "0x791484", Slot = "10")]
	public override void compMouseDrag()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x7917B8", Offset = "0x7917B8", VA = "0x7917B8", Slot = "9")]
	public override void compMouseUp()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x791A58", Offset = "0x791A58", VA = "0x791A58")]
	public int getCurrentPlugId()
	{
		return default(int);
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x791A60", Offset = "0x791A60", VA = "0x791A60")]
	public void setCurrentPlugId(int id)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x791BA8", Offset = "0x791BA8", VA = "0x791BA8")]
	public WeaponCableHandleComp()
	{
	}
}
[Token(Token = "0x200008F")]
public class WreckMapObj : BaseAccessPointMapObj
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public bool isPreviousPlayer;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<ZeppelinSignal> zeppelinSignals;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<FieldNote> fieldNotes;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x791E80", Offset = "0x791E80", VA = "0x791E80", Slot = "6")]
	protected override void start()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x791EB0", Offset = "0x791EB0", VA = "0x791EB0")]
	private void initStates()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x791EC0", Offset = "0x791EC0", VA = "0x791EC0", Slot = "5")]
	public override int obtainConnectionClearance(LandShip ship, bool query)
	{
		return default(int);
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x791F28", Offset = "0x791F28", VA = "0x791F28")]
	public void addRecord(Record record)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x791FBC", Offset = "0x791FBC", VA = "0x791FBC")]
	public void addWeaponCode(WeaponCode weaponCode)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x792074", Offset = "0x792074", VA = "0x792074")]
	private void addZeppelinSignal(ZeppelinSignal signal)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x792108", Offset = "0x792108", VA = "0x792108")]
	public void addFieldNote(FieldNote note)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x79219C", Offset = "0x79219C", VA = "0x79219C")]
	public void transferPlayerData(PlayerData playerData)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x79246C", Offset = "0x79246C", VA = "0x79246C")]
	private void drawSignals(ref int vCursor)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x7925B0", Offset = "0x7925B0", VA = "0x7925B0")]
	private void fieldNoteSelected(object fieldNoteIdObj)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x7928B8", Offset = "0x7928B8", VA = "0x7928B8")]
	private void drawFieldNotes(ref int vCursor)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x792A84", Offset = "0x792A84", VA = "0x792A84", Slot = "13")]
	public override void drawJammerMenu(int vCursor)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x7930A0", Offset = "0x7930A0", VA = "0x7930A0", Slot = "18")]
	protected override void doAutoDownload()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x793420", Offset = "0x793420", VA = "0x793420", Slot = "14")]
	public override void connected()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x793510", Offset = "0x793510", VA = "0x793510", Slot = "15")]
	public override void disconnected()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x7935E4", Offset = "0x7935E4", VA = "0x7935E4")]
	public void setShouldDisplayLog(bool state)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x7935F0", Offset = "0x7935F0", VA = "0x7935F0", Slot = "16")]
	protected override void setData(MapObjData data)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x793638", Offset = "0x793638", VA = "0x793638", Slot = "17")]
	public override void initFromData(MapObjData data)
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x7936A0", Offset = "0x7936A0", VA = "0x7936A0")]
	public WreckMapObj()
	{
	}
}
[Token(Token = "0x2000090")]
public class ZeppelinRadarCameraDraw : MonoBehaviour
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int motionStatusStationary;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int motionStatusMoving;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int motionStatusWindDrifting;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int motionStatusAnchored;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color playerColor;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color enemyColor;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color mapColor;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color warnColor;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color anchorColor;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color friendColor;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private DrawUtil drawUtil;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material material;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SkyProcMap skyMap;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float circleIndicator;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 travelStartPos;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 nextIslandPos;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float linesThickness;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 posInLine;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 motionVec;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector4[] shaderParamPoints;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] shaderParamPointsRadius;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] shaderParamPointsToDisplay;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float newIslandCircleRadius;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 newIslandCirclePos;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool nextIslandSet;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private BaseEncounter encounter;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 highlightIslandPos;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private int playerMotionStatus;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x79390C", Offset = "0x79390C", VA = "0x79390C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x7939B4", Offset = "0x7939B4", VA = "0x7939B4")]
	public void reset()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x793A60", Offset = "0x793A60", VA = "0x793A60")]
	public void highlightIsland(Vector3 islandPos)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x793A70", Offset = "0x793A70", VA = "0x793A70")]
	public void setSkyMap(SkyProcMap skyMap)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x793B60", Offset = "0x793B60", VA = "0x793B60")]
	public void setPlayerPosInLine(Vector3 posInLine)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x793B6C", Offset = "0x793B6C", VA = "0x793B6C")]
	private void drawPlayerIndicator()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x793EF8", Offset = "0x793EF8", VA = "0x793EF8")]
	public void setMotionVec(Vector3 vec)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x793F98", Offset = "0x793F98", VA = "0x793F98")]
	public void setMotionStatus(int status)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x793A9C", Offset = "0x793A9C", VA = "0x793A9C")]
	public void updateMap()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x793FA0", Offset = "0x793FA0", VA = "0x793FA0")]
	private void drawEncounter()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x794140", Offset = "0x794140", VA = "0x794140")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x793784", Offset = "0x793784", VA = "0x793784")]
	public void findIslandAnim(int frame, int totalFrames, int islandId)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x7942CC", Offset = "0x7942CC", VA = "0x7942CC")]
	public void setEncounter(BaseEncounter encounter)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x7942D4", Offset = "0x7942D4", VA = "0x7942D4")]
	public ZeppelinRadarCameraDraw()
	{
	}
}
[Token(Token = "0x2000091")]
public class ZeppelinShip : MonoBehaviour
{
	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject crystalObj;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject skyObj;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject electricParticleObj;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject portHole;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light cloudsLight;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color weatherRadiationColor;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color weatherStormColor;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderTexture radarPetsciiRenderTexture;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject radarMonitor;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject flash;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject zeppelinCameraParent;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject hyperdriveChargerLever;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject hyperdriveBar;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject engineLeverObj;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject shieldLeverObj;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject altitudeLeverObj;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject migrationLeverObj;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject windowLight;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject roomLight;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject playerRadarMarker;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject encounterRadarMarker;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject encounterShipObj;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LedComp anchorLed;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoxCollider radarBoundsBox;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject altitudeIndicatorObj;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color powerLedColor;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color matrixButtonColorOff;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Color matrixButtonColorOn;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Color matrixButtonColorOnGreen;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Color matrixButtonColorRed;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Color skyShaftsColor;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Color skyWeatherColor;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Color hyperdriveBarColor;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<Material> powerLedsShield;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<Material> powerLedsAltitude;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<Material> powerLedsEngine;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int chanceOfStrongWind;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float minTravelTime;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float maxTravelTime;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float maxWindSpeed;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float inertia;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float platformOffset;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Ship ship;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Computer computer;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private SystemMenu sysMenu;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private ZeppelinRadarCameraDraw radarDraw;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private GameObject zeppelinFxObj;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private AnimationClip solarShieldAnim;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Signal outSignal;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float solarShieldPower;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float portHoleOpenValue;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float enginePower;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float solarShieldPowerIn;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float enginePowerIn;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float altitudePower;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float altitudePowerIn;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float windSpeed;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int windChangeTick;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private int windTickCheck;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float windDir;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private Vector3 newCrystalPos;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Vector3 newCrystalRot;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private Vector2 skyTextureOffset;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 skyTextureOffset2;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private ParticleSystem electricParticle;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private float crystalEngergy;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private float weatherValue;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private float altitude;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private float targetAltitude;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private float crystalIntegrity;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private float crystalStress;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private SkyProcMap skyMap;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float travelTime;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private float travelStepDistance;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float deltaTravelTime;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private Vector3 windVec;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Vector3 lastMoveDelta;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private bool windDrifting;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Vector3 playerPosOnRail;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private Vector3 motionVec;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private Vector3 playerPos;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private bool anchored;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private Vector3 anchorPos;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private float skyTextureMotion;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float skyTextureScale;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Material portHoleMat;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private float solarRadiation;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float radiationTempest;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private float skyColorValue;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private bool crystalIntegrityDraining;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private List<Material> matrixButtonsMats;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private List<string> matrixCode;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private string lastBroadcastedSignalId;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private BaseEncounter encounter;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private int entityWarn;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private bool shieldOperating;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
	private bool mainMenuBlinker;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FE")]
	private bool menuHighlightThrust;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FF")]
	private bool landing;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private bool lightningOn;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private GameObject crystalMeshObj;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private List<string> pendingMessages;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private bool weatherAlertScreen;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	private Color skyEmissionColor;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private AudioSource solarRadiationSound;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private bool menuHighlightAltitude;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x339")]
	private bool isGameOver;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33A")]
	private bool windAlertScreen;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33B")]
	private bool shouldClearWindAlert;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private bool shouldClearWeatherAlert;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private int weatherDelay;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private bool badWeatherSolarRadiation;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x345")]
	private bool badWeatherRadiationStorm;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x346")]
	private bool altitudeAlertScreen;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x347")]
	private bool altitudeAlertDisplayed;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private bool windAlertScreenDisplayed;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private float coursePercentage;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private List<float> badWeatherPoints;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private bool shouldEndBadWeather;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x359")]
	private bool stationary;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35A")]
	private bool reachedDestination;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private int badWeatherCount;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private bool migrationTransferScreen;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x361")]
	private bool transferSalt;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x362")]
	private bool waitingBroadcastResponce;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	private int logStartRow;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private bool landed;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	private int precessedSalt;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private AudioSource transferSaltSound;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private bool lighthouseAlertScreeen;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x379")]
	private bool migrationLeverLocked;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37A")]
	private bool initialized;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private List<GameObject> portholeBlades;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private bool migrationLeverDown;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private GameObject transferSaltPanelObj;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private GameObject finalMigrationPanelObj;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private GameObject merchantShipObj;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private GameObject piratesShipObj;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private int badWeatherResetCount;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	private int thunderCounter;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private int thunderMaxCounter;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private Material skyHazeMat;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private Material skyMat;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private float weatherColorVal;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	private float textureSpeed;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private Material hyperdriveBarMat;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	private bool enteredFinalRoom;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
	private Vector2 hyperdriveBarTextureOffset;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
	private float hyperdriveFinalRoomBoost;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	private Vector3 skyTextureVec;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	private GameObject anchorLeverObj;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	private bool anchorLocked;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x409")]
	private bool encounterIncoming;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	private string[] symbols;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	private float migrationLeverEnergyValue;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
	private Vector2 migrationLeverTextureOffset;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	private Material migrationLeverEnergyMat;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	private MeshRenderer migrationLeverEnergyRend;

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x7943CC", Offset = "0x7943CC", VA = "0x7943CC")]
	public static ZeppelinShip getInstance()
	{
		return null;
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x794430", Offset = "0x794430", VA = "0x794430")]
	private void Start()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x794C04", Offset = "0x794C04", VA = "0x794C04")]
	private void setupControls()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x7951D8", Offset = "0x7951D8", VA = "0x7951D8")]
	public void recordPlatformHeight()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x79523C", Offset = "0x79523C", VA = "0x79523C")]
	public void enteredZeppelin()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x797608", Offset = "0x797608", VA = "0x797608")]
	private void hintMatrixButtons()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x7977F0", Offset = "0x7977F0", VA = "0x7977F0")]
	private bool hintMatrixButtonsAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x797978", Offset = "0x797978", VA = "0x797978")]
	public GameObject getEncounterShipParentObj()
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x796BB4", Offset = "0x796BB4", VA = "0x796BB4")]
	private void lockAnchor(bool state)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x797100", Offset = "0x797100", VA = "0x797100")]
	private void lockHyperchargeLever(bool state)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x797980", Offset = "0x797980", VA = "0x797980")]
	public void debug_goToLandCockpit()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x7979F0", Offset = "0x7979F0", VA = "0x7979F0")]
	public Signal getSignal()
	{
		return null;
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x7979F8", Offset = "0x7979F8", VA = "0x7979F8")]
	public void reset()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x797E6C", Offset = "0x797E6C", VA = "0x797E6C")]
	private void debug_testPreEnteringCockpit()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x797E70", Offset = "0x797E70", VA = "0x797E70")]
	public void debug_test()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x797E74", Offset = "0x797E74", VA = "0x797E74")]
	private void debug_offsetPlayerToFinal()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x797F6C", Offset = "0x797F6C", VA = "0x797F6C")]
	public void resetMatrixButtons()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x798038", Offset = "0x798038", VA = "0x798038")]
	public void matrixButtonPressed(int matrixButtonId)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x798500", Offset = "0x798500", VA = "0x798500")]
	public void emitBroadcast(string code)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x7987A4", Offset = "0x7987A4", VA = "0x7987A4")]
	private bool broadcastButtonsAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x7989D4", Offset = "0x7989D4", VA = "0x7989D4")]
	private bool broadcastButtonsAnimFail(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x798ABC", Offset = "0x798ABC", VA = "0x798ABC")]
	private void broadcastBeep()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x798B30", Offset = "0x798B30", VA = "0x798B30")]
	private bool checkSignalsMatch(string signalA, string signalB)
	{
		return default(bool);
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x798CC4", Offset = "0x798CC4", VA = "0x798CC4")]
	private ZeppelinSignal findBroadcastedSignal(string signalId)
	{
		return null;
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x798D84", Offset = "0x798D84", VA = "0x798D84")]
	private void spawnMalusEncounter()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x798DF0", Offset = "0x798DF0", VA = "0x798DF0")]
	private void chooseBroadcastEncounter()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x797178", Offset = "0x797178", VA = "0x797178")]
	private void spawnEncounter(string encounterName, bool restoring = false)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x799180", Offset = "0x799180", VA = "0x799180")]
	public BaseEncounter getEncounter()
	{
		return null;
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x799188", Offset = "0x799188", VA = "0x799188")]
	private void computeTravel()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x79922C", Offset = "0x79922C", VA = "0x79922C")]
	private void logEnergyBalance()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x799428", Offset = "0x799428", VA = "0x799428")]
	public void interactSetShieldPower(float value)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x799510", Offset = "0x799510", VA = "0x799510")]
	public void interactSetShieldPowerVerbose(float value)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x79969C", Offset = "0x79969C", VA = "0x79969C")]
	public void interactSetEnginePower(float value)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x79974C", Offset = "0x79974C", VA = "0x79974C")]
	public void interactSetEnginePowerVerbose(float value)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x7998C8", Offset = "0x7998C8", VA = "0x7998C8")]
	public float getSolarShieldPower()
	{
		return default(float);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x7994DC", Offset = "0x7994DC", VA = "0x7994DC")]
	public void setSolarShieldPower(float value)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x799744", Offset = "0x799744", VA = "0x799744")]
	public void setEnginePower(float value)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x7998D0", Offset = "0x7998D0", VA = "0x7998D0")]
	public float getEnginePower()
	{
		return default(float);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x7998D8", Offset = "0x7998D8", VA = "0x7998D8")]
	public void setAltitudePower(float value)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x7998E0", Offset = "0x7998E0", VA = "0x7998E0")]
	public void interactSetAltitudePower(float value)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x799990", Offset = "0x799990", VA = "0x799990")]
	public void interactSetAltitudePowerVerbose(float value)
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x799B00", Offset = "0x799B00", VA = "0x799B00")]
	public float getAltitudePower()
	{
		return default(float);
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x796C9C", Offset = "0x796C9C", VA = "0x796C9C")]
	private void updatePowerBalance()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x799B08", Offset = "0x799B08", VA = "0x799B08")]
	public float getWindSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x799B10", Offset = "0x799B10", VA = "0x799B10")]
	public float getWindDir()
	{
		return default(float);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x798F94", Offset = "0x798F94", VA = "0x798F94")]
	private void projectPointWithinBounds(ref Vector3 point)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x799B18", Offset = "0x799B18", VA = "0x799B18")]
	private void computeWindVec(float angleConstraintMin, float angleConstraintMax, float maxWindLen)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x799E78", Offset = "0x799E78", VA = "0x799E78")]
	public bool isWindDrifting()
	{
		return default(bool);
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x799E80", Offset = "0x799E80", VA = "0x799E80")]
	private bool chanceOfStrongWindAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x796BA4", Offset = "0x796BA4", VA = "0x796BA4")]
	private void forceUpdateWind()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x799EFC", Offset = "0x799EFC", VA = "0x799EFC")]
	private void updateWind()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x79A46C", Offset = "0x79A46C", VA = "0x79A46C")]
	private void resetAltitudeHighlight()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x79A474", Offset = "0x79A474", VA = "0x79A474")]
	public float getWeatherValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x79A47C", Offset = "0x79A47C", VA = "0x79A47C")]
	public bool shouldLowerSolarShield()
	{
		return default(bool);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x79A4AC", Offset = "0x79A4AC", VA = "0x79A4AC")]
	public bool hasEnoughSolarShield()
	{
		return default(bool);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x79A508", Offset = "0x79A508", VA = "0x79A508")]
	private void playWeatherBeep()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x79A60C", Offset = "0x79A60C", VA = "0x79A60C")]
	private bool chanceOfBadWeatherAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x79A6CC", Offset = "0x79A6CC", VA = "0x79A6CC")]
	private void revealLighthouseIslandDone()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x79A770", Offset = "0x79A770", VA = "0x79A770")]
	private void revealLighthouseIsland()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x79A978", Offset = "0x79A978", VA = "0x79A978")]
	public void dismissAlertScreen()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x79AA48", Offset = "0x79AA48", VA = "0x79AA48")]
	private void displayAltitudeAlertScreen()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x79ABD0", Offset = "0x79ABD0", VA = "0x79ABD0")]
	private void displayWeatherAlertScreen()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x796A40", Offset = "0x796A40", VA = "0x796A40")]
	private void displayLighthouseAlertScreen()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x79AF50", Offset = "0x79AF50", VA = "0x79AF50")]
	public float getPortHoleOpenValue()
	{
		return default(float);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x79AF58", Offset = "0x79AF58", VA = "0x79AF58")]
	private void updateWeather()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x79B3A4", Offset = "0x79B3A4", VA = "0x79B3A4")]
	private void endBadWeather()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x79B3B0", Offset = "0x79B3B0", VA = "0x79B3B0")]
	private void startSolarRadiation()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x79B398", Offset = "0x79B398", VA = "0x79B398")]
	private void startRadiationStorm()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x79B3BC", Offset = "0x79B3BC", VA = "0x79B3BC")]
	public float getCrystalIntegrity()
	{
		return default(float);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x79B3C4", Offset = "0x79B3C4", VA = "0x79B3C4")]
	public float getCrystalStress()
	{
		return default(float);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x79B3CC", Offset = "0x79B3CC", VA = "0x79B3CC")]
	private void updateCrystal()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x79B888", Offset = "0x79B888", VA = "0x79B888")]
	public void gameOver()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x79B9B0", Offset = "0x79B9B0", VA = "0x79B9B0")]
	public bool isCrystalIntegrityDraining()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x79B9B8", Offset = "0x79B9B8", VA = "0x79B9B8")]
	private void updateSky()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x79A168", Offset = "0x79A168", VA = "0x79A168")]
	private Vector3 projectPlayerPosInLine(Vector3 playerPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x79BDFC", Offset = "0x79BDFC", VA = "0x79BDFC")]
	private Vector3 calcWindInfluenceVec(Vector3 playerPos, Vector3 playerPosInLine)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x79BFEC", Offset = "0x79BFEC", VA = "0x79BFEC")]
	private float getWeightSlowdown()
	{
		return default(float);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x79C03C", Offset = "0x79C03C", VA = "0x79C03C")]
	private void updateCourseOnRail()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x79C6D0", Offset = "0x79C6D0", VA = "0x79C6D0")]
	private float computeCoursePercentage(Vector3 playerPosInLine)
	{
		return default(float);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x79C864", Offset = "0x79C864", VA = "0x79C864")]
	private void updatePlayerPos()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x79CC94", Offset = "0x79CC94", VA = "0x79CC94")]
	private void updateEncounterObj(float dist)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x79CED0", Offset = "0x79CED0", VA = "0x79CED0")]
	private void updateEncounter()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x79D43C", Offset = "0x79D43C", VA = "0x79D43C")]
	private void updateLandingProcess()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x79D5F0", Offset = "0x79D5F0", VA = "0x79D5F0")]
	public bool isAltitudeLow()
	{
		return default(bool);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x79D608", Offset = "0x79D608", VA = "0x79D608")]
	private void updateAltitude()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x79D908", Offset = "0x79D908", VA = "0x79D908")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x79DE5C", Offset = "0x79DE5C", VA = "0x79DE5C")]
	private string windSpeedToString()
	{
		return null;
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x79DEEC", Offset = "0x79DEEC", VA = "0x79DEEC")]
	private string windDirToString()
	{
		return null;
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x79E1EC", Offset = "0x79E1EC", VA = "0x79E1EC")]
	private void highlightMainMenuRow(int row)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x79E290", Offset = "0x79E290", VA = "0x79E290")]
	private void drawLighthouseAlertScreen()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x79E3B0", Offset = "0x79E3B0", VA = "0x79E3B0")]
	private void drawAltitudeAlertScreen()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x79ACA0", Offset = "0x79ACA0", VA = "0x79ACA0")]
	private void drawWeatherAlertScreen()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x79E530", Offset = "0x79E530", VA = "0x79E530")]
	private void drawZeppelinScreen()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x796778", Offset = "0x796778", VA = "0x796778")]
	public void updateMainMenu()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x79FD94", Offset = "0x79FD94", VA = "0x79FD94")]
	public void interactAnchor(float value)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x796878", Offset = "0x796878", VA = "0x796878")]
	public void deployAnchor(bool state)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x79FDCC", Offset = "0x79FDCC", VA = "0x79FDCC")]
	public bool isAnchorLocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x79FDD4", Offset = "0x79FDD4", VA = "0x79FDD4")]
	public bool isAnchorDeployed()
	{
		return default(bool);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x79FDDC", Offset = "0x79FDDC", VA = "0x79FDDC")]
	private void findNextIslandDone()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x79FE38", Offset = "0x79FE38", VA = "0x79FE38")]
	public List<string> getIslandsName()
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x79FED4", Offset = "0x79FED4", VA = "0x79FED4")]
	public void obtainMap()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x7A018C", Offset = "0x7A018C", VA = "0x7A018C")]
	private void revealMapAnim()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x7A0294", Offset = "0x7A0294", VA = "0x7A0294")]
	public bool courseToIslandIsSet()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x7A02A8", Offset = "0x7A02A8", VA = "0x7A02A8")]
	public bool isGameReadyForFinalStage()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x7A03A0", Offset = "0x7A03A0", VA = "0x7A03A0")]
	public bool canLandOnIsland(string islandName)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x7A0498", Offset = "0x7A0498", VA = "0x7A0498")]
	public void setCourseToIsland(string islandName)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x7A07A4", Offset = "0x7A07A4", VA = "0x7A07A4")]
	private void computeBadWeatherPoints()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x7A0860", Offset = "0x7A0860", VA = "0x7A0860")]
	public int getNumDiscoveredIslands()
	{
		return default(int);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x7A087C", Offset = "0x7A087C", VA = "0x7A087C")]
	public void clearHighlightedIsland()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x7A089C", Offset = "0x7A089C", VA = "0x7A089C")]
	public void highlightIsland(int discoveredIslandId)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x7A08E0", Offset = "0x7A08E0", VA = "0x7A08E0")]
	private void updateEncounterMainMenu()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x7A0B38", Offset = "0x7A0B38", VA = "0x7A0B38")]
	private void startChatWithEncounter()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x7A0C44", Offset = "0x7A0C44", VA = "0x7A0C44")]
	private void encounterConnectionStarted()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x7A0D5C", Offset = "0x7A0D5C", VA = "0x7A0D5C")]
	private void encounterConnectionEnded()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x7A0124", Offset = "0x7A0124", VA = "0x7A0124")]
	public void addPendingMessage(string message)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x7A0E6C", Offset = "0x7A0E6C", VA = "0x7A0E6C")]
	private void storeCurrentEncouter()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x79D3A8", Offset = "0x79D3A8", VA = "0x79D3A8")]
	private void destroyEncounter()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x7A1010", Offset = "0x7A1010", VA = "0x7A1010")]
	public void disconnectEncounter()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x7A124C", Offset = "0x7A124C", VA = "0x7A124C")]
	private void encounterConnected()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x7A13C4", Offset = "0x7A13C4", VA = "0x7A13C4")]
	public void connectToEncounter()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x7A13C0", Offset = "0x7A13C0", VA = "0x7A13C0")]
	public void showPetsciiInRadarMonitor(bool state, string petsciiResource = "")
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x7A1500", Offset = "0x7A1500", VA = "0x7A1500")]
	public void addRecord(int id, string downloadedFrom)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x7A15F4", Offset = "0x7A15F4", VA = "0x7A15F4")]
	public void debugZeppGetMapSelected()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x7A15F8", Offset = "0x7A15F8", VA = "0x7A15F8")]
	public void debugLandOnTargetIsland()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x7A1730", Offset = "0x7A1730", VA = "0x7A1730")]
	public void debug_testLanding()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x7A1638", Offset = "0x7A1638", VA = "0x7A1638")]
	public void landOnTargetIsland()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x7A17C0", Offset = "0x7A17C0", VA = "0x7A17C0")]
	public string getClosestIslandName()
	{
		return null;
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x7A1804", Offset = "0x7A1804", VA = "0x7A1804")]
	public string getTargetIslandName()
	{
		return null;
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x7A0698", Offset = "0x7A0698", VA = "0x7A0698")]
	public bool isCloseEnoughToTargetIsland()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x7A1824", Offset = "0x7A1824", VA = "0x7A1824")]
	public bool shouldDeployAnchor()
	{
		return default(bool);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x79F720", Offset = "0x79F720", VA = "0x79F720")]
	private void drawMigrationTransferScreen()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x7A183C", Offset = "0x7A183C", VA = "0x7A183C")]
	private void migrationSwitch1BackDone()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x7A1B8C", Offset = "0x7A1B8C", VA = "0x7A1B8C")]
	private void migrationSwitch1Done()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x7A1CE8", Offset = "0x7A1CE8", VA = "0x7A1CE8")]
	public void migrationLeverPulled(bool state)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x7A1CEC", Offset = "0x7A1CEC", VA = "0x7A1CEC")]
	public void startTransferToHypercharge()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x7A1DEC", Offset = "0x7A1DEC", VA = "0x7A1DEC")]
	public void transferToHyperchargeDone(bool state)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x79DC84", Offset = "0x79DC84", VA = "0x79DC84")]
	private void updateTransferSalt()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x796FB4", Offset = "0x796FB4", VA = "0x796FB4")]
	private void hyperdriveChargeComplete()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x7A1EC4", Offset = "0x7A1EC4", VA = "0x7A1EC4")]
	private bool showFinalPanelAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x7A202C", Offset = "0x7A202C", VA = "0x7A202C")]
	public bool isHyperchargeCompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x7A20B0", Offset = "0x7A20B0", VA = "0x7A20B0")]
	public void enableHyperdriveFinalBoost()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x7A2180", Offset = "0x7A2180", VA = "0x7A2180")]
	private bool hyperdriveBoostAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x79DA14", Offset = "0x79DA14", VA = "0x79DA14")]
	private void updateHyperchargeBar()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x7A21AC", Offset = "0x7A21AC", VA = "0x7A21AC")]
	public Ship getShip()
	{
		return null;
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x7A21B4", Offset = "0x7A21B4", VA = "0x7A21B4")]
	public void interactHyperCharge(float value)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x7A21C0", Offset = "0x7A21C0", VA = "0x7A21C0")]
	public void interactHyperChargeDone(float value)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x7A21C8", Offset = "0x7A21C8", VA = "0x7A21C8")]
	private bool migrationLeverPullAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x7A2370", Offset = "0x7A2370", VA = "0x7A2370")]
	public void interactMigrationLever(float value)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x7A2568", Offset = "0x7A2568", VA = "0x7A2568")]
	public void interactMatrixButton0()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x7A2570", Offset = "0x7A2570", VA = "0x7A2570")]
	public void interactMatrixButton1()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x7A2578", Offset = "0x7A2578", VA = "0x7A2578")]
	public void interactMatrixButton2()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x7A2580", Offset = "0x7A2580", VA = "0x7A2580")]
	public void interactMatrixButton3()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x7A2588", Offset = "0x7A2588", VA = "0x7A2588")]
	public void interactMatrixButton4()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x7A2590", Offset = "0x7A2590", VA = "0x7A2590")]
	public void interactMatrixButton5()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x7A2598", Offset = "0x7A2598", VA = "0x7A2598")]
	public void interactMatrixButton6()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x7A25A0", Offset = "0x7A25A0", VA = "0x7A25A0")]
	public void interactMatrixButton7()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x7A25A8", Offset = "0x7A25A8", VA = "0x7A25A8")]
	public void interactMatrixButton8()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x7A25B0", Offset = "0x7A25B0", VA = "0x7A25B0")]
	public void interactMatrixButton9()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x7A25B8", Offset = "0x7A25B8", VA = "0x7A25B8")]
	public void interactMatrixButton10()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x7A25C0", Offset = "0x7A25C0", VA = "0x7A25C0")]
	public void interactMatrixButton11()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x7A25C8", Offset = "0x7A25C8", VA = "0x7A25C8")]
	public void interactMatrixButton12()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x7A25D0", Offset = "0x7A25D0", VA = "0x7A25D0")]
	public void interactMatrixButton13()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x7A25D8", Offset = "0x7A25D8", VA = "0x7A25D8")]
	public void interactMatrixButton14()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x7A25E0", Offset = "0x7A25E0", VA = "0x7A25E0")]
	public void interactMatrixButton15()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x7A25E8", Offset = "0x7A25E8", VA = "0x7A25E8")]
	public void interactMatrixButton16()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x7A25F0", Offset = "0x7A25F0", VA = "0x7A25F0")]
	public void interactMatrixButton17()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x7A25F8", Offset = "0x7A25F8", VA = "0x7A25F8")]
	public void interactMatrixButton18()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x7A2600", Offset = "0x7A2600", VA = "0x7A2600")]
	public void interactMatrixButton19()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x7A2608", Offset = "0x7A2608", VA = "0x7A2608")]
	public void interactMatrixButton20()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x7A2610", Offset = "0x7A2610", VA = "0x7A2610")]
	public void interactMatrixButton21()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x7A2618", Offset = "0x7A2618", VA = "0x7A2618")]
	public void interactMatrixButton22()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x7A2620", Offset = "0x7A2620", VA = "0x7A2620")]
	public void interactMatrixButton23()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x7A2628", Offset = "0x7A2628", VA = "0x7A2628")]
	public void interactMatrixButton24()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x7A2630", Offset = "0x7A2630", VA = "0x7A2630")]
	public void interactMatrixButton25()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x7A2638", Offset = "0x7A2638", VA = "0x7A2638")]
	public void interactMatrixButton26()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x7A2640", Offset = "0x7A2640", VA = "0x7A2640")]
	public void interactMatrixButton27()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x7A2648", Offset = "0x7A2648", VA = "0x7A2648")]
	public void interactMatrixButton28()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x7A2650", Offset = "0x7A2650", VA = "0x7A2650")]
	public void interactMatrixButton29()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x7A2658", Offset = "0x7A2658", VA = "0x7A2658")]
	public void interactMatrixButton30()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x7A2660", Offset = "0x7A2660", VA = "0x7A2660")]
	public void interactMatrixButton31()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x7A2668", Offset = "0x7A2668", VA = "0x7A2668")]
	public void interactMatrixButton32()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x7A2670", Offset = "0x7A2670", VA = "0x7A2670")]
	public void interactMatrixButton33()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x7A2678", Offset = "0x7A2678", VA = "0x7A2678")]
	public void interactMatrixButton34()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x7A2680", Offset = "0x7A2680", VA = "0x7A2680")]
	public void interactMatrixButton35()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x7A2688", Offset = "0x7A2688", VA = "0x7A2688")]
	public void interactMatrixButton36()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x7A2690", Offset = "0x7A2690", VA = "0x7A2690")]
	public void interactFinalMigrationButton()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x7A27A4", Offset = "0x7A27A4", VA = "0x7A27A4")]
	private void startEnteringFinalRoom()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x7A28A8", Offset = "0x7A28A8", VA = "0x7A28A8")]
	private bool enterFinalRoomAnim(int frame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x7A29CC", Offset = "0x7A29CC", VA = "0x7A29CC")]
	public ZeppelinShip()
	{
	}
}
[Token(Token = "0x2000092")]
public struct Rectf
{
	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Rectf zero;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Rectf one;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float width;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float height;

	[Token(Token = "0x17000001")]
	public float left
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x5BB180", Offset = "0x5BB180", VA = "0x5BB180")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000002")]
	public float right
	{
		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x5BB188", Offset = "0x5BB188", VA = "0x5BB188")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000003")]
	public float top
	{
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x5BB198", Offset = "0x5BB198", VA = "0x5BB198")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000004")]
	public float bottom
	{
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x5BB1A0", Offset = "0x5BB1A0", VA = "0x5BB1A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000005")]
	public Vector2f topLeft
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x5BB1B0", Offset = "0x5BB1B0", VA = "0x5BB1B0")]
		get
		{
			return default(Vector2f);
		}
	}

	[Token(Token = "0x17000006")]
	public Vector2f bottomRight
	{
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x5BB1E0", Offset = "0x5BB1E0", VA = "0x5BB1E0")]
		get
		{
			return default(Vector2f);
		}
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x5BB174", Offset = "0x5BB174", VA = "0x5BB174")]
	public Rectf(float x, float y, float width, float height)
	{
	}
}
[Token(Token = "0x2000093")]
public struct Vector2f
{
	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector2f zero;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Vector2f one;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Vector2f right;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector2f left;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly Vector2f up;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly Vector2f down;

	[Token(Token = "0x17000007")]
	public float magnitude
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x5B9B80", Offset = "0x5B9B80", VA = "0x5B9B80")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x5B9B68", Offset = "0x5B9B68", VA = "0x5B9B68")]
	public Vector2f(float x, float y)
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x5B9B70", Offset = "0x5B9B70", VA = "0x5B9B70")]
	public Vector2f(double x, double y)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x5B9B88", Offset = "0x5B9B88", VA = "0x5B9B88")]
	public void Normalize()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x78E8F0", Offset = "0x78E8F0", VA = "0x78E8F0")]
	public static Vector2f Normalize(Vector2f a)
	{
		return default(Vector2f);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x5B9BBC", Offset = "0x5B9BBC", VA = "0x5B9BBC", Slot = "0")]
	public override bool Equals(object other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x5B9BC4", Offset = "0x5B9BC4", VA = "0x5B9BC4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x5B9BCC", Offset = "0x5B9BCC", VA = "0x5B9BCC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x5B9C08", Offset = "0x5B9C08", VA = "0x5B9C08")]
	public float DistanceSquare(Vector2f v)
	{
		return default(float);
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x78ECAC", Offset = "0x78ECAC", VA = "0x78ECAC")]
	public static float DistanceSquare(Vector2f a, Vector2f b)
	{
		return default(float);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x78ECC4", Offset = "0x78ECC4", VA = "0x78ECC4")]
	public static bool operator ==(Vector2f a, Vector2f b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x78ECDC", Offset = "0x78ECDC", VA = "0x78ECDC")]
	public static bool operator !=(Vector2f a, Vector2f b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x78ECF4", Offset = "0x78ECF4", VA = "0x78ECF4")]
	public static Vector2f operator -(Vector2f a, Vector2f b)
	{
		return default(Vector2f);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x78ED00", Offset = "0x78ED00", VA = "0x78ED00")]
	public static Vector2f operator +(Vector2f a, Vector2f b)
	{
		return default(Vector2f);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x78ED0C", Offset = "0x78ED0C", VA = "0x78ED0C")]
	public static Vector2f operator *(Vector2f a, int i)
	{
		return default(Vector2f);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x78ED1C", Offset = "0x78ED1C", VA = "0x78ED1C")]
	public static Vector2f Min(Vector2f a, Vector2f b)
	{
		return default(Vector2f);
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x78EDC4", Offset = "0x78EDC4", VA = "0x78EDC4")]
	public static Vector2f Max(Vector2f a, Vector2f b)
	{
		return default(Vector2f);
	}
}
[Token(Token = "0x2000094")]
public class DirectionPointer : MonoBehaviour
{
	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xA8DBB8", Offset = "0xA8DBB8", VA = "0xA8DBB8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xA8DC84", Offset = "0xA8DC84", VA = "0xA8DC84")]
	public DirectionPointer()
	{
	}
}
[Token(Token = "0x2000095")]
[ExecuteInEditMode]
public class Generator : MonoBehaviour
{
	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2Int castRows;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shaftSpacing;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool meshCast;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh castMesh;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lightShaftPrefab;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string savePath;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool shaftSettings;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material shaftMat;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x54D554", Offset = "0x54D554")]
	public Color pointer_shaftColor;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float pointer_shaftIntensity;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector2 pointer_noiseDirection;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float pointer_noiseScale;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float pointer_noiseUpdateSpeed;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float pointer_maxLength;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LayerMask pointer_layerMask;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float pointer_shaftWidth;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector2 pointer_shaftWidthMinMax;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture pointer_shaftTexture;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform pointer_shaftDirection;

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x72C8E8", Offset = "0x72C8E8", VA = "0x72C8E8")]
	public Generator()
	{
	}
}
[Serializable]
[Token(Token = "0x2000096")]
public class SaveVariables
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float pointer_shaftIntensity;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float pointer_shaftColorR;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float pointer_shaftColorG;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pointer_shaftColorB;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pointer_shaftColorA;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pointer_noiseDirectionX;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pointer_noiseDirectionY;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pointer_noiseScale;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pointer_noiseUpdateSpeed;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pointer_maxLength;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pointer_shaftWidth;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float pointer_shaftWidthMinMaxX;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pointer_shaftWidthMinMaxY;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pointer_shaftDirectionX;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float pointer_shaftDirectionY;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float pointer_shaftDirectionZ;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int castRowsX;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int castRowsY;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shaftSpacing;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool meshCast;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x835EF4", Offset = "0x835EF4", VA = "0x835EF4")]
	public SaveVariables()
	{
	}
}
[Token(Token = "0x2000097")]
public class Shaft_Behavior : MonoBehaviour
{
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color shaftColor;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shaftIntensity;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 noiseDirection;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float noiseScale;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float noiseUpdateSpeed;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxLength;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask layerMask;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 shaftWidthMinMax;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float shaftAdjustY;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture shaftTexture;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform shaftDirection;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material shaftMat;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float randomRotZ;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float randomWidth;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x8379E4", Offset = "0x8379E4", VA = "0x8379E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x838124", Offset = "0x838124", VA = "0x838124")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x837E58", Offset = "0x837E58", VA = "0x837E58")]
	private void ShaftLength_and_Width()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x838010", Offset = "0x838010", VA = "0x838010")]
	private void Shaft_Color_Intensity_TexOffset()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x837C78", Offset = "0x837C78", VA = "0x837C78")]
	private void OrientShaft()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x837B38", Offset = "0x837B38", VA = "0x837B38")]
	private void SyncVariables()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x838158", Offset = "0x838158", VA = "0x838158")]
	public Shaft_Behavior()
	{
	}
}
[Token(Token = "0x2000098")]
[ExecuteInEditMode]
public class DistanceFogStatic : MonoBehaviour
{
	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Material> materials;

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xA8E4F8", Offset = "0xA8E4F8", VA = "0xA8E4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xA8E51C", Offset = "0xA8E51C", VA = "0xA8E51C")]
	private void findMaterials()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xA8E758", Offset = "0xA8E758", VA = "0xA8E758")]
	private void updateMaterials()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xA8E96C", Offset = "0xA8E96C", VA = "0xA8E96C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xA8E970", Offset = "0xA8E970", VA = "0xA8E970")]
	public DistanceFogStatic()
	{
	}
}
[Token(Token = "0x2000099")]
public class RandomColor : MonoBehaviour
{
	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x83295C", Offset = "0x83295C", VA = "0x83295C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x832CE8", Offset = "0x832CE8", VA = "0x832CE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x832CEC", Offset = "0x832CEC", VA = "0x832CEC")]
	public RandomColor()
	{
	}
}
[Token(Token = "0x200009A")]
public class SkyColorChanger : MonoBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material mat;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color topStartColor;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color bottomStartDolor;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color topEndColor;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color bottomEndColor;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeToChange;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timeElapsed;

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x876304", Offset = "0x876304", VA = "0x876304")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x876308", Offset = "0x876308", VA = "0x876308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x876448", Offset = "0x876448", VA = "0x876448")]
	public SkyColorChanger()
	{
	}
}
[Token(Token = "0x200009B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x54BB74", Offset = "0x54BB74")]
public class CameraOverlay : MonoBehaviour
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Transform> quads;

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x8C0B5C", Offset = "0x8C0B5C", VA = "0x8C0B5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x8C0D5C", Offset = "0x8C0D5C", VA = "0x8C0D5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x8C1334", Offset = "0x8C1334", VA = "0x8C1334")]
	public CameraOverlay()
	{
	}
}
[Token(Token = "0x200009C")]
public class CubeMover : MonoBehaviour
{
	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xSpeed;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ySpeed;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zSpeed;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxMovement;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPos;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool forward;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x773F00", Offset = "0x773F00", VA = "0x773F00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x773F3C", Offset = "0x773F3C", VA = "0x773F3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x7740FC", Offset = "0x7740FC", VA = "0x7740FC")]
	public CubeMover()
	{
	}
}
[Token(Token = "0x200009D")]
[ExecuteInEditMode]
public class CustomLightingManager : MonoBehaviour
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color ambientColor;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ambientPower;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color tintColor;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color rimColor;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float rimPower;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color lightmapColor;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float lightmapPower;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool lightmapEnabled;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float lightmapLight;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Color lastAmbientColor;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lastAmbientPower;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Color lastTintColor;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Color lastRimColor;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float lastRimPower;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Color lastLightmapColor;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float lastLightmapPower;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool lastLightmapEnabled;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float lastLightmapLight;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Material> materials;

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x774184", Offset = "0x774184", VA = "0x774184")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x7741A8", Offset = "0x7741A8", VA = "0x7741A8")]
	private void findMaterials()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x774464", Offset = "0x774464", VA = "0x774464")]
	private void updateMaterials()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x77486C", Offset = "0x77486C", VA = "0x77486C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x774870", Offset = "0x774870", VA = "0x774870")]
	public CustomLightingManager()
	{
	}
}
[Token(Token = "0x200009E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x54BBF8", Offset = "0x54BBF8")]
[ExecuteInEditMode]
public class DirectionalLightManager : MonoBehaviour
{
	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Material> materials;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastUpVector;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 lastRightVector;

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xA8DC8C", Offset = "0xA8DC8C", VA = "0xA8DC8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xA8DCB0", Offset = "0xA8DCB0", VA = "0xA8DCB0")]
	private void findMaterials()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xA8DF6C", Offset = "0xA8DF6C", VA = "0xA8DF6C")]
	private void updateMaterials()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xA8E3B4", Offset = "0xA8E3B4", VA = "0xA8E3B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xA8E3B8", Offset = "0xA8E3B8", VA = "0xA8E3B8")]
	public DirectionalLightManager()
	{
	}
}
[Token(Token = "0x200009F")]
public class DisableRendererOnMouseDown : MonoBehaviour
{
	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xA8E468", Offset = "0xA8E468", VA = "0xA8E468")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xA8E4F0", Offset = "0xA8E4F0", VA = "0xA8E4F0")]
	public DisableRendererOnMouseDown()
	{
	}
}
[Token(Token = "0x20000A0")]
[ExecuteInEditMode]
public class DistanceLight : MonoBehaviour
{
	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxDistance;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool additiveBlending;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture rampTexture;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Material> materials;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture lastRampTexture;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastPosition;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lastDistance;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool lastBlending;

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xA8E9E0", Offset = "0xA8E9E0", VA = "0xA8E9E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xA8EBEC", Offset = "0xA8EBEC", VA = "0xA8EBEC")]
	public void distanceLightChanged()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xA8EBF0", Offset = "0xA8EBF0", VA = "0xA8EBF0")]
	private void checkMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xA8E9E4", Offset = "0xA8E9E4", VA = "0xA8E9E4")]
	private void findMaterials()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xA8ED98", Offset = "0xA8ED98", VA = "0xA8ED98")]
	private void updateMaterials()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xA8F2A0", Offset = "0xA8F2A0", VA = "0xA8F2A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xA8F2A4", Offset = "0xA8F2A4", VA = "0xA8F2A4")]
	public DistanceLight()
	{
	}
}
[Token(Token = "0x20000A1")]
[ExecuteInEditMode]
public class DistanceLightMulti : MonoBehaviour
{
	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> lights;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistance;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool additiveBlending;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture rampTexture;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Material> materials;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector4[] positions;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture lastRampTexture;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastDistance;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool lastBlending;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int lightsCount;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xA8F354", Offset = "0xA8F354", VA = "0xA8F354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xA8F560", Offset = "0xA8F560", VA = "0xA8F560")]
	public void distanceLightChanged()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xA8F564", Offset = "0xA8F564", VA = "0xA8F564")]
	private void checkMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xA8F358", Offset = "0xA8F358", VA = "0xA8F358")]
	private void findMaterials()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xA8FA94", Offset = "0xA8FA94", VA = "0xA8FA94")]
	private void updatePositions(Material m)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xA8F70C", Offset = "0xA8F70C", VA = "0xA8F70C")]
	private void updateMaterials()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xA8FC1C", Offset = "0xA8FC1C", VA = "0xA8FC1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xA8FC20", Offset = "0xA8FC20", VA = "0xA8FC20")]
	public DistanceLightMulti()
	{
	}
}
[Token(Token = "0x20000A2")]
[ExecuteInEditMode]
public class EditModeGridSnap : MonoBehaviour
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float snapValue;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool snapX;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool snapY;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool snapZ;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x10151B8", Offset = "0x10151B8", VA = "0x10151B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x10154D4", Offset = "0x10154D4", VA = "0x10154D4")]
	public EditModeGridSnap()
	{
	}
}
[Token(Token = "0x20000A3")]
[ExecuteInEditMode]
public class EnableCameraDepthTexture : MonoBehaviour
{
	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1018450", Offset = "0x1018450", VA = "0x1018450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x10184B4", Offset = "0x10184B4", VA = "0x10184B4")]
	public EnableCameraDepthTexture()
	{
	}
}
[Token(Token = "0x20000A4")]
public class Fps : MonoBehaviour
{
	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C778", Offset = "0x54C778")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fps <>4__this;

		[Token(Token = "0x1700017E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001642")]
			[Address(RVA = "0x10271FC", Offset = "0x10271FC", VA = "0x10271FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001644")]
			[Address(RVA = "0x1027264", Offset = "0x1027264", VA = "0x1027264", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x1026E3C", Offset = "0x1026E3C", VA = "0x1026E3C")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x1026F9C", Offset = "0x1026F9C", VA = "0x1026F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x1026FA0", Offset = "0x1026FA0", VA = "0x1026FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x1027204", Offset = "0x1027204", VA = "0x1027204", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color textColor;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string label;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float count;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GUIStyle style;

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x1026DCC", Offset = "0x1026DCC", VA = "0x1026DCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55463C", Offset = "0x55463C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1026E68", Offset = "0x1026E68", VA = "0x1026E68")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1026F14", Offset = "0x1026F14", VA = "0x1026F14")]
	public Fps()
	{
	}
}
[Token(Token = "0x20000A5")]
public class FrameRate : MonoBehaviour
{
	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x102726C", Offset = "0x102726C", VA = "0x102726C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x1027278", Offset = "0x1027278", VA = "0x1027278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x102727C", Offset = "0x102727C", VA = "0x102727C")]
	public FrameRate()
	{
	}
}
[Token(Token = "0x20000A6")]
public class DragDirection
{
	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MAX_ITEM_COUNT;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<float> items;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float currentDirection;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1013D90", Offset = "0x1013D90", VA = "0x1013D90")]
	public void addItem(float item)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1013EE0", Offset = "0x1013EE0", VA = "0x1013EE0")]
	public float getDirection()
	{
		return default(float);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1013F50", Offset = "0x1013F50", VA = "0x1013F50")]
	public void clear()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1013FA8", Offset = "0x1013FA8", VA = "0x1013FA8")]
	public DragDirection()
	{
	}
}
[Token(Token = "0x20000A7")]
public class DragForce
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MAX_ITEM_COUNT;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int DELAY;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<float> items;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int delayIndex;

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x101406C", Offset = "0x101406C", VA = "0x101406C")]
	public void addItem(float item)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x10141DC", Offset = "0x10141DC", VA = "0x10141DC")]
	public float getForce()
	{
		return default(float);
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x101424C", Offset = "0x101424C", VA = "0x101424C")]
	public void clear()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x10142A8", Offset = "0x10142A8", VA = "0x10142A8")]
	public DragForce()
	{
	}
}
[Token(Token = "0x20000A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x54BCAC", Offset = "0x54BCAC")]
public class ObjectRotator : MonoBehaviour
{
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C788", Offset = "0x54C788")]
	private sealed class <slowRotationDown>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectRotator <>4__this;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float toAngle;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fromAngle;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <range>5__2;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0x962EBC", Offset = "0x962EBC", VA = "0x962EBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600164A")]
			[Address(RVA = "0x962F24", Offset = "0x962F24", VA = "0x962F24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x962B68", Offset = "0x962B68", VA = "0x962B68")]
		[DebuggerHidden]
		public <slowRotationDown>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x962CA4", Offset = "0x962CA4", VA = "0x962CA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x962CA8", Offset = "0x962CA8", VA = "0x962CA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x962EC4", Offset = "0x962EC4", VA = "0x962EC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform transformToRotate;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool insideTransformToRotate;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool horizontal;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion fromRotation;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion toRotation;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float clickPosition;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IEnumerator slowDownCoroutine;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DragForce dragForce;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DragDirection dragDirection;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lastRotation;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float MAX_DRAG_FORCE;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float SNAP_DISTANCE;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float animationTime;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float ANIMATION_DURATION;

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x961D20", Offset = "0x961D20", VA = "0x961D20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x961DA8", Offset = "0x961DA8", VA = "0x961DA8")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x961E40", Offset = "0x961E40", VA = "0x961E40")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x962054", Offset = "0x962054", VA = "0x962054")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x962244", Offset = "0x962244", VA = "0x962244")]
	private void rotate(float force)
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x962560", Offset = "0x962560", VA = "0x962560")]
	private void setRotation(float rotation)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x962150", Offset = "0x962150", VA = "0x962150")]
	private float getRotationForce(float force, float maxForce, float minForce)
	{
		return default(float);
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x961E14", Offset = "0x961E14", VA = "0x961E14")]
	private float getCurrentMousePosition()
	{
		return default(float);
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x9624B0", Offset = "0x9624B0", VA = "0x9624B0")]
	private bool snapToRotation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x962728", Offset = "0x962728", VA = "0x962728")]
	private bool snapToRotationWithDir(float dir)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x9628F8", Offset = "0x9628F8", VA = "0x9628F8")]
	private float getSnapRotationFromDirection(float dir, float rotation)
	{
		return default(float);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x9629E4", Offset = "0x9629E4", VA = "0x9629E4")]
	private float getClosestSnapDirection()
	{
		return default(float);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x961EBC", Offset = "0x961EBC", VA = "0x961EBC")]
	private float getClosestSnapRotation()
	{
		return default(float);
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x962B00", Offset = "0x962B00", VA = "0x962B00")]
	public static float elasticEaseInOut(float t, float b, float c, float d)
	{
		return default(float);
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x961FD0", Offset = "0x961FD0", VA = "0x961FD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5546A0", Offset = "0x5546A0")]
	public IEnumerator slowRotationDown(float fromAngle, float toAngle)
	{
		return null;
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x962B94", Offset = "0x962B94", VA = "0x962B94")]
	public ObjectRotator()
	{
	}
}
[Token(Token = "0x20000A9")]
public class SimpleRotator : MonoBehaviour
{
	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x876274", Offset = "0x876274", VA = "0x876274")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x876278", Offset = "0x876278", VA = "0x876278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x8762F4", Offset = "0x8762F4", VA = "0x8762F4")]
	public SimpleRotator()
	{
	}
}
[Token(Token = "0x20000AA")]
public class Splasher : MonoBehaviour
{
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> splashers;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minTime;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxTime;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Transform> activeSplashes;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float time;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float nextTime;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int nextSplash;

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x87ADB8", Offset = "0x87ADB8", VA = "0x87ADB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x87ADBC", Offset = "0x87ADBC", VA = "0x87ADBC")]
	private void nextValues()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x87AE60", Offset = "0x87AE60", VA = "0x87AE60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x87B01C", Offset = "0x87B01C", VA = "0x87B01C")]
	private void createSplash()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x87B20C", Offset = "0x87B20C", VA = "0x87B20C")]
	public Splasher()
	{
	}
}
[Token(Token = "0x20000AB")]
[ExecuteInEditMode]
public class UVHeightGenerator : MonoBehaviour
{
	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool makeAllMeshesUnique;

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x78D240", Offset = "0x78D240", VA = "0x78D240")]
	public void GenerateUVs()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x78D4F0", Offset = "0x78D4F0", VA = "0x78D4F0")]
	private void calculateUVs(Transform t, GameObject go)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x78DA04", Offset = "0x78DA04", VA = "0x78DA04")]
	public static Vector3 Vabs(Vector3 a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x78DAAC", Offset = "0x78DAAC", VA = "0x78DAAC")]
	public UVHeightGenerator()
	{
	}
}
[Token(Token = "0x20000AC")]
[ExecuteInEditMode]
public class UVLayoutGenerator : MonoBehaviour
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xScale;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yScale;

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x78DAB4", Offset = "0x78DAB4", VA = "0x78DAB4")]
	public void GenerateUVs()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x78DD64", Offset = "0x78DD64", VA = "0x78DD64")]
	private void calculateUVs(Transform t, GameObject go)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x78E3D4", Offset = "0x78E3D4", VA = "0x78E3D4")]
	public static Vector3 Vabs(Vector3 a)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x78E47C", Offset = "0x78E47C", VA = "0x78E47C")]
	public UVLayoutGenerator()
	{
	}
}
[Token(Token = "0x20000AD")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x54BD30", Offset = "0x54BD30")]
public class FastList<T>
{
	[Token(Token = "0x2000249")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C798", Offset = "0x54C798")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000182")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001652")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001654")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164F")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001650")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001651")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001653")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000008")]
	public int Count
	{
		[Token(Token = "0x6000AA2")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AA3")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public T Item
	{
		[Token(Token = "0x6000AA4")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000AA5")]
		set
		{
		}
	}

	[Token(Token = "0x6000AA0")]
	public FastList()
	{
	}

	[Token(Token = "0x6000AA1")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000AA6")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000AA7")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000AA8")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000AA9")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000AAA")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAB")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000AAC")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAD")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000AAE")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAF")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB0")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000AB1")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000AB2")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000AB3")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000AB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554704", Offset = "0x554704")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000AB5")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000AB6")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000AB7")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000AB8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000AB9")]
	public void Release()
	{
	}
}
[Token(Token = "0x20000AE")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x732D90", Offset = "0x732D90", VA = "0x732D90")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x20000AF")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x732D64", Offset = "0x732D64", VA = "0x732D64")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x20000B0")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x80A90C", Offset = "0x80A90C", VA = "0x80A90C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x80AA78", Offset = "0x80AA78", VA = "0x80AA78")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x80AE1C", Offset = "0x80AE1C", VA = "0x80AE1C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x80B074", Offset = "0x80B074", VA = "0x80B074", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x80B0A0", Offset = "0x80B0A0", VA = "0x80B0A0")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x20000B1")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x80DD28", Offset = "0x80DD28", VA = "0x80DD28")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x80DDB4", Offset = "0x80DDB4", VA = "0x80DDB4")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x80DF20", Offset = "0x80DF20", VA = "0x80DF20")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x20000B2")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700000A")]
	public bool IsVisible
	{
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x72C580", Offset = "0x72C580", VA = "0x72C580")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x72C588", Offset = "0x72C588", VA = "0x72C588")]
		set
		{
		}
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x72C6B0", Offset = "0x72C6B0", VA = "0x72C6B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x72C8CC", Offset = "0x72C8CC", VA = "0x72C8CC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x72C8D4", Offset = "0x72C8D4", VA = "0x72C8D4")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x20000B3")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200024B")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x833880", Offset = "0x833880", VA = "0x833880")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200024C")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5534F0", Offset = "0x5534F0")]
		public float FakeLatencyMax;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x553508", Offset = "0x553508")]
		public float FakeLatencyMin;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x553520", Offset = "0x553520")]
		public float LatencyWeight;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x553538", Offset = "0x553538")]
		public int MaxSamples;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x833888", Offset = "0x833888", VA = "0x833888")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x833A20", Offset = "0x833A20", VA = "0x833A20")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x832F00", Offset = "0x832F00", VA = "0x832F00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x833024", Offset = "0x833024", VA = "0x833024")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x833398", Offset = "0x833398", VA = "0x833398")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x8332FC", Offset = "0x8332FC", VA = "0x8332FC")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x8335F4", Offset = "0x8335F4", VA = "0x8335F4")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x833994", Offset = "0x833994", VA = "0x833994")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x20000B4")]
public class P2PManager
{
	[Token(Token = "0x200024D")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40012CF")]
		Update = 1
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x80C014", Offset = "0x80C014", VA = "0x80C014")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x80C0D4", Offset = "0x80C0D4", VA = "0x80C0D4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x80C1B8", Offset = "0x80C1B8", VA = "0x80C1B8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x80C23C", Offset = "0x80C23C", VA = "0x80C23C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x80C398", Offset = "0x80C398", VA = "0x80C398")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x80C648", Offset = "0x80C648", VA = "0x80C648")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x80CA3C", Offset = "0x80CA3C", VA = "0x80CA3C")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x80CCE0", Offset = "0x80CCE0", VA = "0x80CCE0")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x80C80C", Offset = "0x80C80C", VA = "0x80C80C")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x80CC10", Offset = "0x80CC10", VA = "0x80CC10")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x80C8F4", Offset = "0x80C8F4", VA = "0x80C8F4")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x80CEF8", Offset = "0x80CEF8", VA = "0x80CEF8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x80C854", Offset = "0x80C854", VA = "0x80C854")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x80CC54", Offset = "0x80CC54", VA = "0x80CC54")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x80C99C", Offset = "0x80C99C", VA = "0x80C99C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x80CF84", Offset = "0x80CF84", VA = "0x80CF84")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x20000B5")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x80D890", Offset = "0x80D890", VA = "0x80D890", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x80D8CC", Offset = "0x80D8CC", VA = "0x80D8CC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x80D904", Offset = "0x80D904", VA = "0x80D904", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x80D92C", Offset = "0x80D92C", VA = "0x80D92C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x80DACC", Offset = "0x80DACC", VA = "0x80DACC")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x80DB4C", Offset = "0x80DB4C", VA = "0x80DB4C")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x80DBA0", Offset = "0x80DBA0", VA = "0x80DBA0")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x20000B6")]
public class RemotePlayer
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x833AA8", Offset = "0x833AA8", VA = "0x833AA8")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x20000B7")]
public class RoomManager
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x834F4C", Offset = "0x834F4C", VA = "0x834F4C")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x835018", Offset = "0x835018", VA = "0x835018")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x835178", Offset = "0x835178", VA = "0x835178")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x835288", Offset = "0x835288", VA = "0x835288")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x83533C", Offset = "0x83533C", VA = "0x83533C")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x835470", Offset = "0x835470", VA = "0x835470")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x8351A8", Offset = "0x8351A8", VA = "0x8351A8")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x8354FC", Offset = "0x8354FC", VA = "0x8354FC")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x835BA8", Offset = "0x835BA8", VA = "0x835BA8")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x835E78", Offset = "0x835E78", VA = "0x835E78")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x83579C", Offset = "0x83579C", VA = "0x83579C")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x20000B8")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200024E")]
	public enum State
	{
		[Token(Token = "0x40012D1")]
		INITIALIZING,
		[Token(Token = "0x40012D2")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40012D3")]
		CREATING_A_ROOM,
		[Token(Token = "0x40012D4")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40012D5")]
		JOINING_A_ROOM,
		[Token(Token = "0x40012D6")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40012D7")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40012D8")]
		SHUTDOWN
	}

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700000B")]
	public static State CurrentState
	{
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x879AD4", Offset = "0x879AD4", VA = "0x879AD4")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700000C")]
	public static ulong MyID
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x879B48", Offset = "0x879B48", VA = "0x879B48")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700000D")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x879C20", Offset = "0x879C20", VA = "0x879C20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x877D60", Offset = "0x877D60", VA = "0x877D60", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x8780EC", Offset = "0x8780EC", VA = "0x8780EC", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x8787C8", Offset = "0x8787C8", VA = "0x8787C8")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x878A90", Offset = "0x878A90", VA = "0x878A90", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x878A94", Offset = "0x878A94", VA = "0x878A94")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x878B88", Offset = "0x878B88", VA = "0x878B88")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x87927C", Offset = "0x87927C", VA = "0x87927C")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x879748", Offset = "0x879748", VA = "0x879748")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x879914", Offset = "0x879914", VA = "0x879914")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x879A64", Offset = "0x879A64", VA = "0x879A64")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x8783EC", Offset = "0x8783EC", VA = "0x8783EC")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x878924", Offset = "0x878924", VA = "0x878924")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x8784A0", Offset = "0x8784A0", VA = "0x8784A0")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x879D34", Offset = "0x879D34", VA = "0x879D34")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x879EB4", Offset = "0x879EB4", VA = "0x879EB4")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x879F9C", Offset = "0x879F9C", VA = "0x879F9C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x87A0C0", Offset = "0x87A0C0", VA = "0x87A0C0")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x87A190", Offset = "0x87A190", VA = "0x87A190")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x8789D4", Offset = "0x8789D4", VA = "0x8789D4")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x87A5BC", Offset = "0x87A5BC", VA = "0x87A5BC")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x87A648", Offset = "0x87A648", VA = "0x87A648")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x87A3E0", Offset = "0x87A3E0", VA = "0x87A3E0")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x87A81C", Offset = "0x87A81C", VA = "0x87A81C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x877CD8", Offset = "0x877CD8", VA = "0x877CD8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x554768", Offset = "0x554768")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x87A958", Offset = "0x87A958", VA = "0x87A958")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x87AA20", Offset = "0x87AA20", VA = "0x87AA20")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x20000B9")]
public class VoipManager
{
	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x7902F8", Offset = "0x7902F8", VA = "0x7902F8")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x7903B8", Offset = "0x7903B8", VA = "0x7903B8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x79049C", Offset = "0x79049C", VA = "0x79049C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x790520", Offset = "0x790520", VA = "0x790520")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x79067C", Offset = "0x79067C", VA = "0x79067C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x20000BA")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x72C20C", Offset = "0x72C20C", VA = "0x72C20C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x72C27C", Offset = "0x72C27C", VA = "0x72C27C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x72C3F8", Offset = "0x72C3F8", VA = "0x72C3F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x72C45C", Offset = "0x72C45C", VA = "0x72C45C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x72C2B8", Offset = "0x72C2B8", VA = "0x72C2B8")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x72C518", Offset = "0x72C518", VA = "0x72C518")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x72C578", Offset = "0x72C578", VA = "0x72C578")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BB")]
public class AvatarLayer
{
	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x8B73C0", Offset = "0x8B73C0", VA = "0x8B73C0")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BC")]
public class PacketRecordSettings
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x80D010", Offset = "0x80D010", VA = "0x80D010")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20000BD")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200024F")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x7FDF74", Offset = "0x7FDF74", VA = "0x7FDF74")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000250")]
	public enum HandType
	{
		[Token(Token = "0x40012DB")]
		Right,
		[Token(Token = "0x40012DC")]
		Left,
		[Token(Token = "0x40012DD")]
		Max
	}

	[Token(Token = "0x2000251")]
	public enum HandJoint
	{
		[Token(Token = "0x40012DF")]
		HandBase,
		[Token(Token = "0x40012E0")]
		IndexBase,
		[Token(Token = "0x40012E1")]
		IndexTip,
		[Token(Token = "0x40012E2")]
		ThumbBase,
		[Token(Token = "0x40012E3")]
		ThumbTip,
		[Token(Token = "0x40012E4")]
		Max
	}

	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C7A8", Offset = "0x54C7A8")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x7FDF04", Offset = "0x7FDF04", VA = "0x7FDF04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x7FDF6C", Offset = "0x7FDF6C", VA = "0x7FDF6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x7FDD48", Offset = "0x7FDD48", VA = "0x7FDD48")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x7FDD74", Offset = "0x7FDD74", VA = "0x7FDD74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x7FDD78", Offset = "0x7FDD78", VA = "0x7FDD78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x7FDF0C", Offset = "0x7FDF0C", VA = "0x7FDF0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54D57C", Offset = "0x54D57C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54D5B4", Offset = "0x54D5B4")]
	public bool EnableBody;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54D5EC", Offset = "0x54D5EC")]
	public bool RecordPackets;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54D624", Offset = "0x54D624")]
	public bool StartWithControllers;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54D65C", Offset = "0x54D65C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D65C", Offset = "0x54D65C")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D6CC", Offset = "0x54D6CC")]
	private bool CombineMeshes;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D704", Offset = "0x54D704")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54D73C", Offset = "0x54D73C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54D774", Offset = "0x54D774")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D7AC", Offset = "0x54D7AC")]
	public bool EnableLaughter;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40008EC")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40008EE")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40008EF")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40008F0")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40008F1")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40008F2")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x7B7C40", Offset = "0x7B7C40", VA = "0x7B7C40")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x7B7FA8", Offset = "0x7B7FA8", VA = "0x7B7FA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x7B8034", Offset = "0x7B8034", VA = "0x7B8034")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x7B80A0", Offset = "0x7B80A0", VA = "0x7B80A0")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x7B81C8", Offset = "0x7B81C8", VA = "0x7B81C8")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x7B82AC", Offset = "0x7B82AC", VA = "0x7B82AC")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x7B838C", Offset = "0x7B838C", VA = "0x7B838C")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x7B8574", Offset = "0x7B8574", VA = "0x7B8574")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x7B863C", Offset = "0x7B863C", VA = "0x7B863C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x7B86C0", Offset = "0x7B86C0", VA = "0x7B86C0")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x7B87A8", Offset = "0x7B87A8", VA = "0x7B87A8")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x7B8834", Offset = "0x7B8834", VA = "0x7B8834")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x7B8950", Offset = "0x7B8950", VA = "0x7B8950")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x7B89B0", Offset = "0x7B89B0", VA = "0x7B89B0")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000B2C")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x7B8E34", Offset = "0x7B8E34", VA = "0x7B8E34")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x7B9194", Offset = "0x7B9194", VA = "0x7B9194")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x7B92F8", Offset = "0x7B92F8", VA = "0x7B92F8")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x7B95C0", Offset = "0x7B95C0", VA = "0x7B95C0")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x7B96AC", Offset = "0x7B96AC", VA = "0x7B96AC")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x7B9A60", Offset = "0x7B9A60", VA = "0x7B9A60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x7B9DD4", Offset = "0x7B9DD4", VA = "0x7B9DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x7BA7EC", Offset = "0x7BA7EC", VA = "0x7BA7EC")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x7BA840", Offset = "0x7BA840", VA = "0x7BA840")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x7B9928", Offset = "0x7B9928", VA = "0x7B9928")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x7B99C4", Offset = "0x7B99C4", VA = "0x7B99C4")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x7BA870", Offset = "0x7BA870", VA = "0x7BA870")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x7BA148", Offset = "0x7BA148", VA = "0x7BA148")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x7BAABC", Offset = "0x7BAABC", VA = "0x7BAABC")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x7BA8D8", Offset = "0x7BA8D8", VA = "0x7BA8D8")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x7BAD58", Offset = "0x7BAD58", VA = "0x7BAD58")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x7BB15C", Offset = "0x7BB15C", VA = "0x7BB15C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x7BB38C", Offset = "0x7BB38C", VA = "0x7BB38C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x7BB4CC", Offset = "0x7BB4CC", VA = "0x7BB4CC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x7BB684", Offset = "0x7BB684", VA = "0x7BB684")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x7BA2E8", Offset = "0x7BA2E8", VA = "0x7BA2E8")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x7BB75C", Offset = "0x7BB75C", VA = "0x7BB75C")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x7BA158", Offset = "0x7BA158", VA = "0x7BA158")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x7BB850", Offset = "0x7BB850", VA = "0x7BB850")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x7BBDFC", Offset = "0x7BBDFC", VA = "0x7BBDFC")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x7BC2BC", Offset = "0x7BC2BC", VA = "0x7BC2BC")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x7BC334", Offset = "0x7BC334", VA = "0x7BC334")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x7BC3B0", Offset = "0x7BC3B0", VA = "0x7BC3B0")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x7BA680", Offset = "0x7BA680", VA = "0x7BA680")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x7BB90C", Offset = "0x7BB90C", VA = "0x7BB90C")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x7BC848", Offset = "0x7BC848", VA = "0x7BC848")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5547CC", Offset = "0x5547CC")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x7BC8B8", Offset = "0x7BC8B8", VA = "0x7BC8B8")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x7BC6EC", Offset = "0x7BC6EC", VA = "0x7BC6EC")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x7BC980", Offset = "0x7BC980", VA = "0x7BC980")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x7BCA6C", Offset = "0x7BCA6C", VA = "0x7BCA6C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x7BC480", Offset = "0x7BC480", VA = "0x7BC480")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x7BCB58", Offset = "0x7BCB58", VA = "0x7BCB58")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20000BE")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x7FDFF0", Offset = "0x7FDFF0", VA = "0x7FDFF0")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20000BF")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x7FE0A0", Offset = "0x7FE0A0", VA = "0x7FE0A0")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x7FF380", Offset = "0x7FF380", VA = "0x7FF380")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x7FEF24", Offset = "0x7FEF24", VA = "0x7FEF24")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x7FECC8", Offset = "0x7FECC8", VA = "0x7FECC8")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x7FED98", Offset = "0x7FED98", VA = "0x7FED98")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x7FF5E4", Offset = "0x7FF5E4", VA = "0x7FF5E4")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20000C0")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400090F")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x7FFB64", Offset = "0x7FFB64", VA = "0x7FFB64")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20000C1")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x7FFDCC", Offset = "0x7FFDCC", VA = "0x7FFDCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x8001CC", Offset = "0x8001CC", VA = "0x8001CC")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20000C2")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x8002C8", Offset = "0x8002C8", VA = "0x8002C8")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x800424", Offset = "0x800424", VA = "0x800424")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x800540", Offset = "0x800540", VA = "0x800540")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20000C3")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x8005A4", Offset = "0x8005A4", VA = "0x8005A4")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x7FFEE8", Offset = "0x7FFEE8", VA = "0x7FFEE8")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x800B88", Offset = "0x800B88", VA = "0x800B88")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x800BE8", Offset = "0x800BE8", VA = "0x800BE8")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x8013CC", Offset = "0x8013CC", VA = "0x8013CC")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x800230", Offset = "0x800230", VA = "0x800230")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20000C4")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000253")]
	public enum PacketMode
	{
		[Token(Token = "0x40012E9")]
		SDK,
		[Token(Token = "0x40012EA")]
		Unity
	}

	[Token(Token = "0x2000254")]
	public struct ControllerPose
	{
		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x802A9C", Offset = "0x802A9C", VA = "0x802A9C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000255")]
	public struct PoseFrame
	{
		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x802BF8", Offset = "0x802BF8", VA = "0x802BF8")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x8026C8", Offset = "0x8026C8", VA = "0x8026C8")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000B67")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x8026D8", Offset = "0x8026D8", VA = "0x8026D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x802778", Offset = "0x802778", VA = "0x802778")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x8029F0", Offset = "0x8029F0", VA = "0x8029F0")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x802A8C", Offset = "0x802A8C", VA = "0x802A8C")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20000C5")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x802FB0", Offset = "0x802FB0", VA = "0x802FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x80310C", Offset = "0x80310C", VA = "0x80310C")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20000C6")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x803178", Offset = "0x803178", VA = "0x803178")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x8032E4", Offset = "0x8032E4", VA = "0x8032E4")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x803688", Offset = "0x803688", VA = "0x803688")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x803954", Offset = "0x803954", VA = "0x803954", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x803980", Offset = "0x803980", VA = "0x803980")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20000C7")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000256")]
	public enum TextureType
	{
		[Token(Token = "0x40012FB")]
		DiffuseTextures,
		[Token(Token = "0x40012FC")]
		NormalMaps,
		[Token(Token = "0x40012FD")]
		RoughnessMaps,
		[Token(Token = "0x40012FE")]
		Count
	}

	[Token(Token = "0x2000257")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000258")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000259")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x200025A")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x805BA0", Offset = "0x805BA0", VA = "0x805BA0")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C7B8", Offset = "0x54C7B8")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000186")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x8064B0", Offset = "0x8064B0", VA = "0x8064B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x806518", Offset = "0x806518", VA = "0x806518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x805A08", Offset = "0x805A08", VA = "0x805A08")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x805E38", Offset = "0x805E38", VA = "0x805E38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x805E3C", Offset = "0x805E3C", VA = "0x805E3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x8064B8", Offset = "0x8064B8", VA = "0x8064B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000943")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000944")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000945")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000946")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x803A30", Offset = "0x803A30", VA = "0x803A30")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x803B90", Offset = "0x803B90", VA = "0x803B90")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x803BB8", Offset = "0x803BB8", VA = "0x803BB8")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x8042D0", Offset = "0x8042D0", VA = "0x8042D0")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x804550", Offset = "0x804550", VA = "0x804550")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x803C4C", Offset = "0x803C4C", VA = "0x803C4C")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x804640", Offset = "0x804640", VA = "0x804640")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x80404C", Offset = "0x80404C", VA = "0x80404C")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x8048A8", Offset = "0x8048A8", VA = "0x8048A8")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x804B20", Offset = "0x804B20", VA = "0x804B20")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x804C1C", Offset = "0x804C1C", VA = "0x804C1C")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x804C54", Offset = "0x804C54", VA = "0x804C54")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x804254", Offset = "0x804254", VA = "0x804254")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554830", Offset = "0x554830")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x805A34", Offset = "0x805A34", VA = "0x805A34")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20000C8")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700000E")]
	public float Duration
	{
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x806520", Offset = "0x806520", VA = "0x806520")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000F")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x80658C", Offset = "0x80658C", VA = "0x80658C")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x806610", Offset = "0x806610", VA = "0x806610")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x8066D4", Offset = "0x8066D4", VA = "0x8066D4")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x806814", Offset = "0x806814", VA = "0x806814")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x8068F0", Offset = "0x8068F0", VA = "0x8068F0")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x8069C0", Offset = "0x8069C0", VA = "0x8069C0")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x806BC8", Offset = "0x806BC8", VA = "0x806BC8")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x806E20", Offset = "0x806E20", VA = "0x806E20")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20000C9")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x8BE3D0", Offset = "0x8BE3D0", VA = "0x8BE3D0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x8BE4E4", Offset = "0x8BE4E4", VA = "0x8BE4E4")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x8BE690", Offset = "0x8BE690", VA = "0x8BE690")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x8BE554", Offset = "0x8BE554", VA = "0x8BE554")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x8BE5E8", Offset = "0x8BE5E8", VA = "0x8BE5E8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20000CA")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x8BDFD0", Offset = "0x8BDFD0", VA = "0x8BDFD0")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x8BE374", Offset = "0x8BE374", VA = "0x8BE374")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x8BE170", Offset = "0x8BE170", VA = "0x8BE170")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x8BE1E8", Offset = "0x8BE1E8", VA = "0x8BE1E8")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x8BE284", Offset = "0x8BE284", VA = "0x8BE284")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000CB")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400094E")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400094F")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x807010", Offset = "0x807010", VA = "0x807010")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x80709C", Offset = "0x80709C", VA = "0x80709C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x8070B8", Offset = "0x8070B8", VA = "0x8070B8")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x807264", Offset = "0x807264", VA = "0x807264")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x80740C", Offset = "0x80740C", VA = "0x80740C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000CC")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x80748C", Offset = "0x80748C", VA = "0x80748C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x807570", Offset = "0x807570", VA = "0x807570")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x807764", Offset = "0x807764", VA = "0x807764")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x807AF8", Offset = "0x807AF8", VA = "0x807AF8")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x807BF0", Offset = "0x807BF0", VA = "0x807BF0")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000CD")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000958")]
	Body = 1,
	[Token(Token = "0x4000959")]
	Hands = 2,
	[Token(Token = "0x400095A")]
	Base = 4,
	[Token(Token = "0x400095B")]
	BodyTilt = 0x10,
	[Token(Token = "0x400095C")]
	Expressive = 0x20,
	[Token(Token = "0x400095D")]
	All = -1
}
[Token(Token = "0x20000CE")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400095F")]
	AvatarSpecification,
	[Token(Token = "0x4000960")]
	AssetLoaded,
	[Token(Token = "0x4000961")]
	Count
}
[Token(Token = "0x20000CF")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000D0")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000D1")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000967")]
	Mesh,
	[Token(Token = "0x4000968")]
	Texture,
	[Token(Token = "0x4000969")]
	Pose,
	[Token(Token = "0x400096A")]
	Material,
	[Token(Token = "0x400096B")]
	CombinedMesh,
	[Token(Token = "0x400096C")]
	PBSMaterial,
	[Token(Token = "0x400096D")]
	FailedLoad,
	[Token(Token = "0x400096E")]
	Count
}
[Token(Token = "0x20000D2")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000D3")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000D4")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000D5")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000D6")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000D7")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40009A3")]
	RGB24,
	[Token(Token = "0x40009A4")]
	DXT1,
	[Token(Token = "0x40009A5")]
	DXT5,
	[Token(Token = "0x40009A6")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40009A7")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40009A8")]
	Count
}
[Token(Token = "0x20000D8")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000D9")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40009B0")]
	SkinnedMeshRender,
	[Token(Token = "0x40009B1")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40009B2")]
	ProjectorRender,
	[Token(Token = "0x40009B3")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40009B4")]
	Count
}
[Token(Token = "0x20000DA")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40009B6")]
	Unknown,
	[Token(Token = "0x40009B7")]
	Default,
	[Token(Token = "0x40009B8")]
	Verbose,
	[Token(Token = "0x40009B9")]
	Debug,
	[Token(Token = "0x40009BA")]
	Info,
	[Token(Token = "0x40009BB")]
	Warn,
	[Token(Token = "0x40009BC")]
	Error,
	[Token(Token = "0x40009BD")]
	Fatal,
	[Token(Token = "0x40009BE")]
	Silent
}
[Token(Token = "0x20000DB")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000DC")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40009C3")]
	One = 1,
	[Token(Token = "0x40009C4")]
	Two = 2,
	[Token(Token = "0x40009C5")]
	Three = 4,
	[Token(Token = "0x40009C6")]
	Joystick = 8
}
[Token(Token = "0x20000DD")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40009C8")]
	One = 1,
	[Token(Token = "0x40009C9")]
	Two = 2,
	[Token(Token = "0x40009CA")]
	Joystick = 4,
	[Token(Token = "0x40009CB")]
	ThumbRest = 8,
	[Token(Token = "0x40009CC")]
	Index = 0x10,
	[Token(Token = "0x40009CD")]
	Pointing = 0x40,
	[Token(Token = "0x40009CE")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000DE")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000DF")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000E0")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000E1")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000E2")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000E3")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000E4")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000E5")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000E6")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40009EE")]
	Add,
	[Token(Token = "0x40009EF")]
	Multiply,
	[Token(Token = "0x40009F0")]
	Count
}
[Token(Token = "0x20000E7")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40009F2")]
	Color,
	[Token(Token = "0x40009F3")]
	Texture,
	[Token(Token = "0x40009F4")]
	TextureSingleChannel,
	[Token(Token = "0x40009F5")]
	Parallax,
	[Token(Token = "0x40009F6")]
	Count
}
[Token(Token = "0x20000E8")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40009F8")]
	None,
	[Token(Token = "0x40009F9")]
	Positional,
	[Token(Token = "0x40009FA")]
	ViewReflection,
	[Token(Token = "0x40009FB")]
	Fresnel,
	[Token(Token = "0x40009FC")]
	Pulse,
	[Token(Token = "0x40009FD")]
	Count
}
[Token(Token = "0x20000E9")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40009FF")]
	Touch,
	[Token(Token = "0x4000A00")]
	Malibu,
	[Token(Token = "0x4000A01")]
	Go,
	[Token(Token = "0x4000A02")]
	Quest,
	[Token(Token = "0x4000A03")]
	Count
}
[Token(Token = "0x20000EA")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000A05")]
	Lowest = 1,
	[Token(Token = "0x4000A06")]
	Medium = 3,
	[Token(Token = "0x4000A07")]
	Highest = 5
}
[Token(Token = "0x20000EB")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000A09")]
	Unknown = -1,
	[Token(Token = "0x4000A0A")]
	One,
	[Token(Token = "0x4000A0B")]
	Two
}
[Token(Token = "0x20000EC")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xD50680", Offset = "0xD50680", VA = "0xD50680")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x5CFA44", Offset = "0x5CFA44", VA = "0x5CFA44", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x5CFA4C", Offset = "0x5CFA4C", VA = "0x5CFA4C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000ED")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xD509B4", Offset = "0xD509B4", VA = "0xD509B4")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x5CFC84", Offset = "0x5CFC84", VA = "0x5CFC84", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x5CFC8C", Offset = "0x5CFC8C", VA = "0x5CFC8C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000EE")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xD4FD28", Offset = "0xD4FD28", VA = "0xD4FD28")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x5CF78C", Offset = "0x5CF78C", VA = "0x5CF78C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x5CF794", Offset = "0x5CF794", VA = "0x5CF794", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000EF")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xD50EE0", Offset = "0xD50EE0", VA = "0xD50EE0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x5D050C", Offset = "0x5D050C", VA = "0x5D050C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x5D0514", Offset = "0x5D0514", VA = "0x5D0514", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000F0")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x7FDFF8", Offset = "0x7FDFF8", VA = "0x7FDFF8")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000F1")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000F2")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000A40")]
	FirstPerson = 1,
	[Token(Token = "0x4000A41")]
	ThirdPerson = 2,
	[Token(Token = "0x4000A42")]
	SelfOccluding = 4
}
[Token(Token = "0x20000F3")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000F4")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000F5")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000F6")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000F7")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000A58")]
	Default,
	[Token(Token = "0x4000A59")]
	GripSphere,
	[Token(Token = "0x4000A5A")]
	GripCube,
	[Token(Token = "0x4000A5B")]
	Count
}
[Token(Token = "0x20000F8")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000A5D")]
	Body,
	[Token(Token = "0x4000A5E")]
	Clothing,
	[Token(Token = "0x4000A5F")]
	Eyewear,
	[Token(Token = "0x4000A60")]
	Hair,
	[Token(Token = "0x4000A61")]
	Beard,
	[Token(Token = "0x4000A62")]
	Count
}
[Token(Token = "0x20000F9")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000FA")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000FB")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000FC")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000FD")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000A6C")]
	AvatarHead,
	[Token(Token = "0x4000A6D")]
	AvatarHand,
	[Token(Token = "0x4000A6E")]
	Object,
	[Token(Token = "0x4000A6F")]
	ObjectStatic,
	[Token(Token = "0x4000A70")]
	Count
}
[Token(Token = "0x20000FE")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000FF")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000100")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000101")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000102")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000A7C")]
	Point,
	[Token(Token = "0x4000A7D")]
	Direction,
	[Token(Token = "0x4000A7E")]
	Spot,
	[Token(Token = "0x4000A7F")]
	Count
}
[Token(Token = "0x2000103")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000104")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000105")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000106")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000107")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000A95")]
	None = 0u,
	[Token(Token = "0x4000A96")]
	GazeTarget = 1u,
	[Token(Token = "0x4000A97")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000108")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000109")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x200010A")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200010B")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200010C")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200010D")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200025C")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x5BAA70", Offset = "0x5BAA70", VA = "0x5BAA70")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000AAC")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000010")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x801460", Offset = "0x801460", VA = "0x801460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x807C00", Offset = "0x807C00", VA = "0x807C00")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x807E4C", Offset = "0x807E4C", VA = "0x807E4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x807EC0", Offset = "0x807EC0", VA = "0x807EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x808704", Offset = "0x808704", VA = "0x808704")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x80875C", Offset = "0x80875C", VA = "0x80875C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x8087B4", Offset = "0x8087B4", VA = "0x8087B4")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x80881C", Offset = "0x80881C", VA = "0x80881C")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x808884", Offset = "0x808884", VA = "0x808884")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x80853C", Offset = "0x80853C", VA = "0x80853C")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x808964", Offset = "0x808964", VA = "0x808964")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x808A80", Offset = "0x808A80", VA = "0x808A80")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x8015F0", Offset = "0x8015F0", VA = "0x8015F0")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x808B60", Offset = "0x808B60", VA = "0x808B60")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x807E00", Offset = "0x807E00", VA = "0x807E00")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x804330", Offset = "0x804330", VA = "0x804330")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x808C38", Offset = "0x808C38", VA = "0x808C38")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200010E")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000011")]
	public static string AppID
	{
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x808BF8", Offset = "0x808BF8", VA = "0x808BF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x808D90", Offset = "0x808D90", VA = "0x808D90")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x808C18", Offset = "0x808C18", VA = "0x808C18")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x808DBC", Offset = "0x808DBC", VA = "0x808DBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x808C7C", Offset = "0x808C7C", VA = "0x808C7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x808DE8", Offset = "0x808DE8", VA = "0x808DE8")]
		set
		{
		}
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x808E3C", Offset = "0x808E3C", VA = "0x808E3C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200010F")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x80A518", Offset = "0x80A518", VA = "0x80A518")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x8005AC", Offset = "0x8005AC", VA = "0x8005AC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x80A65C", Offset = "0x80A65C", VA = "0x80A65C")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x80A7BC", Offset = "0x80A7BC", VA = "0x80A7BC")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000110")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x80A7CC", Offset = "0x80A7CC", VA = "0x80A7CC")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x8007D4", Offset = "0x8007D4", VA = "0x8007D4")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x80A8FC", Offset = "0x80A8FC", VA = "0x80A8FC")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000111")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000ABB")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000ABC")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000ABD")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x808E94", Offset = "0x808E94", VA = "0x808E94")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x80096C", Offset = "0x80096C", VA = "0x80096C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x809CD4", Offset = "0x809CD4", VA = "0x809CD4")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x809468", Offset = "0x809468", VA = "0x809468")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x809238", Offset = "0x809238", VA = "0x809238")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x80934C", Offset = "0x80934C", VA = "0x80934C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x80A508", Offset = "0x80A508", VA = "0x80A508")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000112")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200025D")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200025E")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x5BAAD8", Offset = "0x5BAAD8", VA = "0x5BAAD8")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200025F")]
	public struct TextureSet
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x5BAB60", Offset = "0x5BAB60", VA = "0x5BAB60")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C7C8", Offset = "0x54C7C8")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x80BDDC", Offset = "0x80BDDC", VA = "0x80BDDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0x80BE44", Offset = "0x80BE44", VA = "0x80BE44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x80B778", Offset = "0x80B778", VA = "0x80B778")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x80B8E0", Offset = "0x80B8E0", VA = "0x80B8E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x80B8E4", Offset = "0x80B8E4", VA = "0x80B8E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x80BDE4", Offset = "0x80BDE4", VA = "0x80BDE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000AC1")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000AC2")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000AC5")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000AC6")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000AC7")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000AC8")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000AC9")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000ACA")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000ACB")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x80B160", Offset = "0x80B160", VA = "0x80B160")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x80B4BC", Offset = "0x80B4BC", VA = "0x80B4BC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x806460", Offset = "0x806460", VA = "0x806460")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x804724", Offset = "0x804724", VA = "0x804724")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x80B634", Offset = "0x80B634", VA = "0x80B634")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x8043B4", Offset = "0x8043B4", VA = "0x8043B4")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x804598", Offset = "0x804598", VA = "0x804598")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x80B6E4", Offset = "0x80B6E4", VA = "0x80B6E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554934", Offset = "0x554934")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x808918", Offset = "0x808918", VA = "0x808918")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x80B7A4", Offset = "0x80B7A4", VA = "0x80B7A4")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000113")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x80BE4C", Offset = "0x80BE4C", VA = "0x80BE4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x80BFA8", Offset = "0x80BFA8", VA = "0x80BFA8")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000114")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000BF2")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x101852C", Offset = "0x101852C", VA = "0x101852C")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x2000115")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D804", Offset = "0x54D804")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D83C", Offset = "0x54D83C")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D874", Offset = "0x54D874")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x6C4514", Offset = "0x6C4514", VA = "0x6C4514")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x6C4518", Offset = "0x6C4518", VA = "0x6C4518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x6C4598", Offset = "0x6C4598", VA = "0x6C4598")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x6C4784", Offset = "0x6C4784", VA = "0x6C4784")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x2000116")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x6C47B4", Offset = "0x6C47B4", VA = "0x6C47B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x6C48B8", Offset = "0x6C48B8", VA = "0x6C48B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x6C498C", Offset = "0x6C498C", VA = "0x6C498C")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x6C4C18", Offset = "0x6C4C18", VA = "0x6C4C18")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x6C4C68", Offset = "0x6C4C68", VA = "0x6C4C68")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x2000117")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000014")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x95B364", Offset = "0x95B364", VA = "0x95B364")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x95B61C", Offset = "0x95B61C", VA = "0x95B61C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x95B758", Offset = "0x95B758", VA = "0x95B758")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x95B68C", Offset = "0x95B68C", VA = "0x95B68C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x95957C", Offset = "0x95957C", VA = "0x95957C")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x95B8E0", Offset = "0x95B8E0", VA = "0x95B8E0")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x959514", Offset = "0x959514", VA = "0x959514")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x9595FC", Offset = "0x9595FC", VA = "0x9595FC")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x95B7F0", Offset = "0x95B7F0", VA = "0x95B7F0")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x95B980", Offset = "0x95B980", VA = "0x95B980")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x95B9BC", Offset = "0x95B9BC", VA = "0x95B9BC")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x95BBB0", Offset = "0x95BBB0", VA = "0x95BBB0")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x95B9CC", Offset = "0x95B9CC", VA = "0x95B9CC")]
	private void Display()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x95BC60", Offset = "0x95BC60", VA = "0x95BC60")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000118")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x95C724", Offset = "0x95C724", VA = "0x95C724")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000119")]
public static class OVRTouchpad
{
	[Token(Token = "0x2000261")]
	public enum TouchEvent
	{
		[Token(Token = "0x4001331")]
		SingleTap,
		[Token(Token = "0x4001332")]
		DoubleTap,
		[Token(Token = "0x4001333")]
		Left,
		[Token(Token = "0x4001334")]
		Right,
		[Token(Token = "0x4001335")]
		Up,
		[Token(Token = "0x4001336")]
		Down
	}

	[Token(Token = "0x2000262")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x958190", Offset = "0x958190", VA = "0x958190")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x961770", Offset = "0x961770", VA = "0x961770")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x961A90", Offset = "0x961A90", VA = "0x961A90")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x9618E0", Offset = "0x9618E0", VA = "0x9618E0")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x959070", Offset = "0x959070", VA = "0x959070")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x200011A")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x961B40", Offset = "0x961B40", VA = "0x961B40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x961BBC", Offset = "0x961BBC", VA = "0x961BBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x961C54", Offset = "0x961C54", VA = "0x961C54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x961CB0", Offset = "0x961CB0", VA = "0x961CB0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x961D14", Offset = "0x961D14", VA = "0x961D14")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x961D18", Offset = "0x961D18", VA = "0x961D18")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x200011B")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	public enum Result
	{
		[Token(Token = "0x4001338")]
		Success = 0,
		[Token(Token = "0x4001339")]
		Unknown = -2200,
		[Token(Token = "0x400133A")]
		CannotCreateContext = -2201,
		[Token(Token = "0x400133B")]
		InvalidParam = -2202,
		[Token(Token = "0x400133C")]
		BadSampleRate = -2203,
		[Token(Token = "0x400133D")]
		MissingDLL = -2204,
		[Token(Token = "0x400133E")]
		BadVersion = -2205,
		[Token(Token = "0x400133F")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000264")]
	public enum AudioDataType
	{
		[Token(Token = "0x4001341")]
		S16_Mono,
		[Token(Token = "0x4001342")]
		S16_Stereo,
		[Token(Token = "0x4001343")]
		F32_Mono,
		[Token(Token = "0x4001344")]
		F32_Stereo
	}

	[Token(Token = "0x2000265")]
	public enum Viseme
	{
		[Token(Token = "0x4001346")]
		sil,
		[Token(Token = "0x4001347")]
		PP,
		[Token(Token = "0x4001348")]
		FF,
		[Token(Token = "0x4001349")]
		TH,
		[Token(Token = "0x400134A")]
		DD,
		[Token(Token = "0x400134B")]
		kk,
		[Token(Token = "0x400134C")]
		CH,
		[Token(Token = "0x400134D")]
		SS,
		[Token(Token = "0x400134E")]
		nn,
		[Token(Token = "0x400134F")]
		RR,
		[Token(Token = "0x4001350")]
		aa,
		[Token(Token = "0x4001351")]
		E,
		[Token(Token = "0x4001352")]
		ih,
		[Token(Token = "0x4001353")]
		oh,
		[Token(Token = "0x4001354")]
		ou
	}

	[Token(Token = "0x2000266")]
	public enum Signals
	{
		[Token(Token = "0x4001356")]
		VisemeOn,
		[Token(Token = "0x4001357")]
		VisemeOff,
		[Token(Token = "0x4001358")]
		VisemeAmount,
		[Token(Token = "0x4001359")]
		VisemeSmoothing,
		[Token(Token = "0x400135A")]
		LaughterAmount
	}

	[Token(Token = "0x2000267")]
	public enum ContextProviders
	{
		[Token(Token = "0x400135C")]
		Original,
		[Token(Token = "0x400135D")]
		Enhanced,
		[Token(Token = "0x400135E")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000268")]
	public class Frame
	{
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x958DD8", Offset = "0x958DD8", VA = "0x958DD8")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x958E30", Offset = "0x958E30", VA = "0x958E30")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x958EC0", Offset = "0x958EC0", VA = "0x958EC0")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000AE5")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x957760", Offset = "0x957760", VA = "0x957760")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x9577F0", Offset = "0x9577F0", VA = "0x9577F0")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x957860", Offset = "0x957860", VA = "0x957860")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x9578F4", Offset = "0x9578F4", VA = "0x9578F4")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x95799C", Offset = "0x95799C", VA = "0x95799C")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x957A68", Offset = "0x957A68", VA = "0x957A68")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x957AE8", Offset = "0x957AE8", VA = "0x957AE8")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x957B68", Offset = "0x957B68", VA = "0x957B68")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x957C10", Offset = "0x957C10", VA = "0x957C10")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x957D18", Offset = "0x957D18", VA = "0x957D18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x958194", Offset = "0x958194", VA = "0x958194")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x958058", Offset = "0x958058", VA = "0x958058")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x958274", Offset = "0x958274", VA = "0x958274")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x958388", Offset = "0x958388", VA = "0x958388")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x9583F8", Offset = "0x9583F8", VA = "0x9583F8")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x958460", Offset = "0x958460", VA = "0x958460")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x958584", Offset = "0x958584", VA = "0x958584")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x9586BC", Offset = "0x9586BC", VA = "0x9586BC")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x95879C", Offset = "0x95879C", VA = "0x95879C")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x95887C", Offset = "0x95887C", VA = "0x95887C")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x958980", Offset = "0x958980", VA = "0x958980")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x958B24", Offset = "0x958B24", VA = "0x958B24")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x958CC0", Offset = "0x958CC0", VA = "0x958CC0")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x54BDD8", Offset = "0x54BDD8")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D8AC", Offset = "0x54D8AC")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D8E4", Offset = "0x54D8E4")]
	public bool enableTouchInput;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D91C", Offset = "0x54D91C")]
	public bool audioLoopback;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D954", Offset = "0x54D954")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D98C", Offset = "0x54D98C")]
	public bool showVisemes;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D9C4", Offset = "0x54D9C4")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54D9FC", Offset = "0x54D9FC")]
	public bool skipAudioSource;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DA34", Offset = "0x54DA34")]
	public float gain;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x958F48", Offset = "0x958F48", VA = "0x958F48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x959130", Offset = "0x959130", VA = "0x959130")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x95967C", Offset = "0x95967C", VA = "0x95967C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x959928", Offset = "0x959928", VA = "0x959928")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x95998C", Offset = "0x95998C", VA = "0x95998C")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x9599F8", Offset = "0x9599F8", VA = "0x9599F8")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x959B9C", Offset = "0x959B9C", VA = "0x959B9C")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x959D40", Offset = "0x959D40", VA = "0x959D40")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x959E74", Offset = "0x959E74", VA = "0x959E74")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x9596C0", Offset = "0x9596C0", VA = "0x9596C0")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x959440", Offset = "0x959440", VA = "0x959440")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x959E84", Offset = "0x959E84", VA = "0x959E84")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x959FB0", Offset = "0x959FB0", VA = "0x959FB0")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x200011D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x54BE3C", Offset = "0x54BE3C")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DA6C", Offset = "0x54DA6C")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DAA4", Offset = "0x54DAA4")]
	public bool enableAcceleration;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x17000015")]
	public int Smoothing
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x95A130", Offset = "0x95A130", VA = "0x95A130")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x95A044", Offset = "0x95A044", VA = "0x95A044")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public uint Context
	{
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x95A138", Offset = "0x95A138", VA = "0x95A138")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000017")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x95A140", Offset = "0x95A140", VA = "0x95A140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x95A148", Offset = "0x95A148", VA = "0x95A148")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x95A2E0", Offset = "0x95A2E0", VA = "0x95A2E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x95A404", Offset = "0x95A404", VA = "0x95A404")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x95A40C", Offset = "0x95A40C", VA = "0x95A40C")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x95A500", Offset = "0x95A500", VA = "0x95A500")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x95A5C8", Offset = "0x95A5C8", VA = "0x95A5C8")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x959FD4", Offset = "0x959FD4", VA = "0x959FD4")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x200011E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x54BEA0", Offset = "0x54BEA0")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DADC", Offset = "0x54DADC")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x95A640", Offset = "0x95A640", VA = "0x95A640")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x95A7B0", Offset = "0x95A7B0", VA = "0x95A7B0")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x200011F")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DB14", Offset = "0x54DB14")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DB4C", Offset = "0x54DB4C")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DB84", Offset = "0x54DB84")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DBBC", Offset = "0x54DBBC")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DBF4", Offset = "0x54DBF4")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DC2C", Offset = "0x54DC2C")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DC64", Offset = "0x54DC64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DC64", Offset = "0x54DC64")]
	public float laughterThreshold;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DCB8", Offset = "0x54DCB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DCB8", Offset = "0x54DCB8")]
	public float laughterMultiplier;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DD0C", Offset = "0x54DD0C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DD0C", Offset = "0x54DD0C")]
	public int smoothAmount;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x95A7B4", Offset = "0x95A7B4", VA = "0x95A7B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x95A8F8", Offset = "0x95A8F8", VA = "0x95A8F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x95ABA8", Offset = "0x95ABA8", VA = "0x95ABA8")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x95AA04", Offset = "0x95AA04", VA = "0x95AA04")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x95AAB8", Offset = "0x95AAB8", VA = "0x95AAB8")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x95AC78", Offset = "0x95AC78", VA = "0x95AC78")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x95AD3C", Offset = "0x95AD3C", VA = "0x95AD3C")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x95ADA4", Offset = "0x95ADA4", VA = "0x95ADA4")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000120")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DD64", Offset = "0x54DD64")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x54DD64", Offset = "0x54DD64")]
	public Texture[] Textures;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DEE0", Offset = "0x54DEE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DEE0", Offset = "0x54DEE0")]
	public int smoothAmount;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x95AE9C", Offset = "0x95AE9C", VA = "0x95AE9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x95AFF0", Offset = "0x95AFF0", VA = "0x95AFF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x95B194", Offset = "0x95B194", VA = "0x95B194")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x95B2B8", Offset = "0x95B2B8", VA = "0x95B2B8")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000121")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x54BF04", Offset = "0x54BF04")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000269")]
	public enum micActivation
	{
		[Token(Token = "0x4001364")]
		HoldToSpeak,
		[Token(Token = "0x4001365")]
		PushToSpeak,
		[Token(Token = "0x4001366")]
		ConstantSpeak
	}

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DF38", Offset = "0x54DF38")]
	public AudioSource audioSource;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DF70", Offset = "0x54DF70")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DFA8", Offset = "0x54DFA8")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54DFE0", Offset = "0x54DFE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54DFE0", Offset = "0x54DFE0")]
	private float micInputVolume;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E048", Offset = "0x54E048")]
	private int micFrequency;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E094", Offset = "0x54E094")]
	public micActivation micControl;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E0CC", Offset = "0x54E0CC")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E104", Offset = "0x54E104")]
	public string selectedDevice;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000018")]
	public float MicFrequency
	{
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x95BCD4", Offset = "0x95BCD4", VA = "0x95BCD4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x95BCE0", Offset = "0x95BCE0", VA = "0x95BCE0")]
		set
		{
		}
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x95BD6C", Offset = "0x95BD6C", VA = "0x95BD6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x95BE2C", Offset = "0x95BE2C", VA = "0x95BE2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x95BE78", Offset = "0x95BE78", VA = "0x95BE78")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x95BFBC", Offset = "0x95BFBC", VA = "0x95BFBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x95C3F4", Offset = "0x95C3F4", VA = "0x95C3F4")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x95C408", Offset = "0x95C408", VA = "0x95C408")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x95C420", Offset = "0x95C420", VA = "0x95C420")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x95C424", Offset = "0x95C424", VA = "0x95C424")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x95C49C", Offset = "0x95C49C", VA = "0x95C49C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x95BF00", Offset = "0x95BF00", VA = "0x95BF00")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x95C260", Offset = "0x95C260", VA = "0x95C260")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x95C118", Offset = "0x95C118", VA = "0x95C118")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x95C67C", Offset = "0x95C67C", VA = "0x95C67C")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x95C684", Offset = "0x95C684", VA = "0x95C684")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000122")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x95A70C", Offset = "0x95A70C", VA = "0x95A70C")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x95C6B4", Offset = "0x95C6B4", VA = "0x95C6B4")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000123")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200026A")]
	public delegate void OnClick();

	[Token(Token = "0x200026B")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200026C")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200026D")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C7D8", Offset = "0x54C7D8")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x77DE40", Offset = "0x77DE40", VA = "0x77DE40")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x77E7E0", Offset = "0x77E7E0", VA = "0x77E7E0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C7E8", Offset = "0x54C7E8")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x77E0B4", Offset = "0x77E0B4", VA = "0x77E0B4")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x77EA04", Offset = "0x77EA04", VA = "0x77EA04")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C7F8", Offset = "0x54C7F8")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x77E2CC", Offset = "0x77E2CC", VA = "0x77E2CC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x77EC88", Offset = "0x77EC88", VA = "0x77EC88")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C808", Offset = "0x54C808")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x77E460", Offset = "0x77E460", VA = "0x77E460")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x77F060", Offset = "0x77F060", VA = "0x77F060")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C818", Offset = "0x54C818")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x77E6B8", Offset = "0x77E6B8", VA = "0x77E6B8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x77F080", Offset = "0x77F080", VA = "0x77F080")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000B19")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000B1A")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000B1B")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000B28")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000B29")]
	private const float marginH = 16f;

	[Token(Token = "0x4000B2A")]
	private const float marginV = 16f;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x77CDEC", Offset = "0x77CDEC", VA = "0x77CDEC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x77D1F0", Offset = "0x77D1F0", VA = "0x77D1F0")]
	public void Show()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x77D7BC", Offset = "0x77D7BC", VA = "0x77D7BC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x77D568", Offset = "0x77D568", VA = "0x77D568")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x77D964", Offset = "0x77D964", VA = "0x77D964")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x77DC18", Offset = "0x77DC18", VA = "0x77DC18")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x77DE48", Offset = "0x77DE48", VA = "0x77DE48")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x77DF2C", Offset = "0x77DF2C", VA = "0x77DF2C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x77E0BC", Offset = "0x77E0BC", VA = "0x77E0BC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x77E158", Offset = "0x77E158", VA = "0x77E158")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x77E2D4", Offset = "0x77E2D4", VA = "0x77E2D4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x77E468", Offset = "0x77E468", VA = "0x77E468")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x77E6C0", Offset = "0x77E6C0", VA = "0x77E6C0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x77E770", Offset = "0x77E770", VA = "0x77E770")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000124")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x7312F8", Offset = "0x7312F8", VA = "0x7312F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x731380", Offset = "0x731380", VA = "0x731380")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x731448", Offset = "0x731448", VA = "0x731448")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x731484", Offset = "0x731484", VA = "0x731484")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000125")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000273")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001370")]
		On,
		[Token(Token = "0x4001371")]
		Off,
		[Token(Token = "0x4001372")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000019")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x6B97C0", Offset = "0x6B97C0", VA = "0x6B97C0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x6B977C", Offset = "0x6B977C", VA = "0x6B977C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x6B97C8", Offset = "0x6B97C8", VA = "0x6B97C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x6B9820", Offset = "0x6B9820", VA = "0x6B9820")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x6B9938", Offset = "0x6B9938", VA = "0x6B9938", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x6B9954", Offset = "0x6B9954", VA = "0x6B9954", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x6B99A8", Offset = "0x6B99A8", VA = "0x6B99A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x6B9C04", Offset = "0x6B9C04", VA = "0x6B9C04")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x6B9D18", Offset = "0x6B9D18", VA = "0x6B9D18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x6B9DAC", Offset = "0x6B9DAC", VA = "0x6B9DAC")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x6B9E7C", Offset = "0x6B9E7C", VA = "0x6B9E7C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x6B9F34", Offset = "0x6B9F34", VA = "0x6B9F34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x6BA000", Offset = "0x6BA000", VA = "0x6BA000")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000126")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x8BE9EC", Offset = "0x8BE9EC", VA = "0x8BE9EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x8BEBF8", Offset = "0x8BEBF8", VA = "0x8BEBF8")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x8BF098", Offset = "0x8BF098", VA = "0x8BF098")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000127")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x72CEF4", Offset = "0x72CEF4", VA = "0x72CEF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x72D028", Offset = "0x72D028", VA = "0x72D028")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x72D278", Offset = "0x72D278", VA = "0x72D278")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000128")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x1700001A")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x72D324", Offset = "0x72D324", VA = "0x72D324")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x72CF84", Offset = "0x72CF84", VA = "0x72CF84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554998", Offset = "0x554998")]
		add
		{
		}
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x72D280", Offset = "0x72D280", VA = "0x72D280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5549A8", Offset = "0x5549A8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x72D330", Offset = "0x72D330", VA = "0x72D330")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x72D488", Offset = "0x72D488", VA = "0x72D488")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x72D5FC", Offset = "0x72D5FC", VA = "0x72D5FC")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x72D604", Offset = "0x72D604", VA = "0x72D604")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000129")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E1EC", Offset = "0x54E1EC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E224", Offset = "0x54E224")]
	public bool EnableCollision;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E25C", Offset = "0x54E25C")]
	public float MaxFade;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E294", Offset = "0x54E294")]
	public float FadeMinDistance;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E2CC", Offset = "0x54E2CC")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x76AC30", Offset = "0x76AC30", VA = "0x76AC30")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x76ACB8", Offset = "0x76ACB8", VA = "0x76ACB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x76AD28", Offset = "0x76AD28", VA = "0x76AD28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x76AD2C", Offset = "0x76AD2C", VA = "0x76AD2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x76AD50", Offset = "0x76AD50", VA = "0x76AD50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x76AD74", Offset = "0x76AD74", VA = "0x76AD74")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x200012A")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x6C4C78", Offset = "0x6C4C78", VA = "0x6C4C78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x6C4D24", Offset = "0x6C4D24", VA = "0x6C4D24")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200012B")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000274")]
	public enum States
	{
		[Token(Token = "0x4001374")]
		Ready,
		[Token(Token = "0x4001375")]
		Aim,
		[Token(Token = "0x4001376")]
		CancelAim,
		[Token(Token = "0x4001377")]
		PreTeleport,
		[Token(Token = "0x4001378")]
		CancelTeleport,
		[Token(Token = "0x4001379")]
		Teleporting,
		[Token(Token = "0x400137A")]
		PostTeleport
	}

	[Token(Token = "0x2000275")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x400137C")]
		None,
		[Token(Token = "0x400137D")]
		Aim,
		[Token(Token = "0x400137E")]
		PreTeleport,
		[Token(Token = "0x400137F")]
		Teleport
	}

	[Token(Token = "0x2000276")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001381")]
		Point,
		[Token(Token = "0x4001382")]
		Sphere,
		[Token(Token = "0x4001383")]
		Capsule
	}

	[Token(Token = "0x2000277")]
	public class AimData
	{
		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x553550", Offset = "0x553550")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700018A")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x6C7EE8", Offset = "0x6C7EE8", VA = "0x6C7EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5580A0", Offset = "0x5580A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001694")]
			[Address(RVA = "0x6C7EF0", Offset = "0x6C7EF0", VA = "0x6C7EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5580B0", Offset = "0x5580B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x6C7E74", Offset = "0x6C7E74", VA = "0x6C7E74")]
		public AimData()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x6C7EF8", Offset = "0x6C7EF8", VA = "0x6C7EF8")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C828", Offset = "0x54C828")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001699")]
			[Address(RVA = "0x6C7CC0", Offset = "0x6C7CC0", VA = "0x6C7CC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600169B")]
			[Address(RVA = "0x6C7D28", Offset = "0x6C7D28", VA = "0x6C7D28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x6C61C4", Offset = "0x6C61C4", VA = "0x6C61C4")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x6C7BD8", Offset = "0x6C7BD8", VA = "0x6C7BD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x6C7BDC", Offset = "0x6C7BDC", VA = "0x6C7BDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x6C7CC8", Offset = "0x6C7CC8", VA = "0x6C7CC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C838", Offset = "0x54C838")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600169F")]
			[Address(RVA = "0x6C76A0", Offset = "0x6C76A0", VA = "0x6C76A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0x6C7708", Offset = "0x6C7708", VA = "0x6C7708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x6C66AC", Offset = "0x6C66AC", VA = "0x6C66AC")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x6C7568", Offset = "0x6C7568", VA = "0x6C7568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x6C756C", Offset = "0x6C756C", VA = "0x6C756C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x6C76A8", Offset = "0x6C76A8", VA = "0x6C76A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C848", Offset = "0x54C848")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x6C77B4", Offset = "0x6C77B4", VA = "0x6C77B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016A7")]
			[Address(RVA = "0x6C781C", Offset = "0x6C781C", VA = "0x6C781C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x6C6890", Offset = "0x6C6890", VA = "0x6C6890")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x6C7710", Offset = "0x6C7710", VA = "0x6C7710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x6C7714", Offset = "0x6C7714", VA = "0x6C7714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x6C77BC", Offset = "0x6C77BC", VA = "0x6C77BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C858", Offset = "0x54C858")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000191")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x6C7B68", Offset = "0x6C7B68", VA = "0x6C7B68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0x6C7BD0", Offset = "0x6C7BD0", VA = "0x6C7BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x6C6A74", Offset = "0x6C6A74", VA = "0x6C6A74")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x6C7A90", Offset = "0x6C7A90", VA = "0x6C7A90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x6C7A94", Offset = "0x6C7A94", VA = "0x6C7A94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x6C7B70", Offset = "0x6C7B70", VA = "0x6C7B70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C868", Offset = "0x54C868")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000193")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x6C78C8", Offset = "0x6C78C8", VA = "0x6C78C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x6C7930", Offset = "0x6C7930", VA = "0x6C7930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x6C6C58", Offset = "0x6C6C58", VA = "0x6C6C58")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x6C7824", Offset = "0x6C7824", VA = "0x6C7824", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x6C7828", Offset = "0x6C7828", VA = "0x6C7828", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x6C78D0", Offset = "0x6C78D0", VA = "0x6C78D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C878", Offset = "0x54C878")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000195")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0x6C7E04", Offset = "0x6C7E04", VA = "0x6C7E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000196")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x6C7E6C", Offset = "0x6C7E6C", VA = "0x6C7E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x6C6E3C", Offset = "0x6C6E3C", VA = "0x6C6E3C")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x6C7D30", Offset = "0x6C7D30", VA = "0x6C7D30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x6C7D34", Offset = "0x6C7D34", VA = "0x6C7D34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x6C7E0C", Offset = "0x6C7E0C", VA = "0x6C7E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C888", Offset = "0x54C888")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000197")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x6C7A20", Offset = "0x6C7A20", VA = "0x6C7A20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000198")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x6C7A88", Offset = "0x6C7A88", VA = "0x6C7A88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x6C7020", Offset = "0x6C7020", VA = "0x6C7020")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x6C7938", Offset = "0x6C7938", VA = "0x6C7938", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x6C793C", Offset = "0x6C793C", VA = "0x6C793C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x6C7A28", Offset = "0x6C7A28", VA = "0x6C7A28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E304", Offset = "0x54E304")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E33C", Offset = "0x54E33C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E374", Offset = "0x54E374")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E3AC", Offset = "0x54E3AC")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E3E4", Offset = "0x54E3E4")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E41C", Offset = "0x54E41C")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E454", Offset = "0x54E454")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E48C", Offset = "0x54E48C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E4C4", Offset = "0x54E4C4")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E4D4", Offset = "0x54E4D4")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E50C", Offset = "0x54E50C")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E554", Offset = "0x54E554")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E564", Offset = "0x54E564")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E59C", Offset = "0x54E59C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E5D4", Offset = "0x54E5D4")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E60C", Offset = "0x54E60C")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700001B")]
	public States CurrentState
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x6C5708", Offset = "0x6C5708", VA = "0x6C5708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5549B8", Offset = "0x5549B8")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x6C5710", Offset = "0x6C5710", VA = "0x6C5710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5549C8", Offset = "0x5549C8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x6C5940", Offset = "0x6C5940", VA = "0x6C5940")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700001D")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x6C5968", Offset = "0x6C5968", VA = "0x6C5968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5549F8", Offset = "0x5549F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x6C5970", Offset = "0x6C5970", VA = "0x6C5970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554A08", Offset = "0x554A08")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x6C5718", Offset = "0x6C5718", VA = "0x6C5718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5549D8", Offset = "0x5549D8")]
		add
		{
		}
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x6C57BC", Offset = "0x6C57BC", VA = "0x6C57BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5549E8", Offset = "0x5549E8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x6C607C", Offset = "0x6C607C", VA = "0x6C607C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554A50", Offset = "0x554A50")]
		add
		{
		}
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x6C6120", Offset = "0x6C6120", VA = "0x6C6120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554A60", Offset = "0x554A60")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x6C61F0", Offset = "0x6C61F0", VA = "0x6C61F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554AD4", Offset = "0x554AD4")]
		add
		{
		}
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x6C6294", Offset = "0x6C6294", VA = "0x6C6294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554AE4", Offset = "0x554AE4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x6C6338", Offset = "0x6C6338", VA = "0x6C6338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554AF4", Offset = "0x554AF4")]
		add
		{
		}
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x6C63DC", Offset = "0x6C63DC", VA = "0x6C63DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554B04", Offset = "0x554B04")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x6C64F4", Offset = "0x6C64F4", VA = "0x6C64F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554B14", Offset = "0x554B14")]
		add
		{
		}
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x6C6598", Offset = "0x6C6598", VA = "0x6C6598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554B24", Offset = "0x554B24")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x6C66D8", Offset = "0x6C66D8", VA = "0x6C66D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554B98", Offset = "0x554B98")]
		add
		{
		}
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x6C677C", Offset = "0x6C677C", VA = "0x6C677C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554BA8", Offset = "0x554BA8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x6C68BC", Offset = "0x6C68BC", VA = "0x6C68BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554C1C", Offset = "0x554C1C")]
		add
		{
		}
		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x6C6960", Offset = "0x6C6960", VA = "0x6C6960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554C2C", Offset = "0x554C2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x6C6AA0", Offset = "0x6C6AA0", VA = "0x6C6AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554CA0", Offset = "0x554CA0")]
		add
		{
		}
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x6C6B44", Offset = "0x6C6B44", VA = "0x6C6B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554CB0", Offset = "0x554CB0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x6C6C84", Offset = "0x6C6C84", VA = "0x6C6C84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D24", Offset = "0x554D24")]
		add
		{
		}
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x6C6D28", Offset = "0x6C6D28", VA = "0x6C6D28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554D34", Offset = "0x554D34")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x6C6E68", Offset = "0x6C6E68", VA = "0x6C6E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554DA8", Offset = "0x554DA8")]
		add
		{
		}
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x6C6F0C", Offset = "0x6C6F0C", VA = "0x6C6F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554DB8", Offset = "0x554DB8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x6C704C", Offset = "0x6C704C", VA = "0x6C704C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554E2C", Offset = "0x554E2C")]
		add
		{
		}
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x6C70F0", Offset = "0x6C70F0", VA = "0x6C70F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554E3C", Offset = "0x554E3C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x6C53D8", Offset = "0x6C53D8", VA = "0x6C53D8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x6C53FC", Offset = "0x6C53FC", VA = "0x6C53FC")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x6C5860", Offset = "0x6C5860", VA = "0x6C5860")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x6C5978", Offset = "0x6C5978", VA = "0x6C5978")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x6C5CD0", Offset = "0x6C5CD0", VA = "0x6C5CD0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x554A18", Offset = "0x554A18")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x6C5D88", Offset = "0x6C5D88", VA = "0x6C5D88")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x6C5E50", Offset = "0x6C5E50", VA = "0x6C5E50")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x6C5E6C", Offset = "0x6C5E6C", VA = "0x6C5E6C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x6C5F34", Offset = "0x6C5F34", VA = "0x6C5F34")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x6C5F78", Offset = "0x6C5F78", VA = "0x6C5F78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x6C5FD4", Offset = "0x6C5FD4", VA = "0x6C5FD4", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x6C6074", Offset = "0x6C6074", VA = "0x6C6074", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x6C6004", Offset = "0x6C6004", VA = "0x6C6004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554A70", Offset = "0x554A70")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x6C6480", Offset = "0x6C6480", VA = "0x6C6480")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x6C663C", Offset = "0x6C663C", VA = "0x6C663C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554B34", Offset = "0x554B34")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x6C6820", Offset = "0x6C6820", VA = "0x6C6820")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554BB8", Offset = "0x554BB8")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x6C6A04", Offset = "0x6C6A04", VA = "0x6C6A04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554C3C", Offset = "0x554C3C")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x6C6BE8", Offset = "0x6C6BE8", VA = "0x6C6BE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554CC0", Offset = "0x554CC0")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x6C6DCC", Offset = "0x6C6DCC", VA = "0x6C6DCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554D44", Offset = "0x554D44")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x6C6FB0", Offset = "0x6C6FB0", VA = "0x6C6FB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554DC8", Offset = "0x554DC8")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x6C7194", Offset = "0x6C7194", VA = "0x6C7194")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x6C72D8", Offset = "0x6C72D8", VA = "0x6C72D8")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x6C730C", Offset = "0x6C730C", VA = "0x6C730C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x6C742C", Offset = "0x6C742C", VA = "0x6C742C")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x6C7558", Offset = "0x6C7558", VA = "0x6C7558")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x200012C")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x83C0D8", Offset = "0x83C0D8", VA = "0x83C0D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554E4C", Offset = "0x554E4C")]
		add
		{
		}
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x83C17C", Offset = "0x83C17C", VA = "0x83C17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554E5C", Offset = "0x554E5C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x83C220", Offset = "0x83C220", VA = "0x83C220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554E6C", Offset = "0x554E6C")]
		add
		{
		}
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x83C2C4", Offset = "0x83C2C4", VA = "0x83C2C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554E7C", Offset = "0x554E7C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x83C368", Offset = "0x83C368", VA = "0x83C368")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x83C410", Offset = "0x83C410", VA = "0x83C410")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x83C414", Offset = "0x83C414", VA = "0x83C414")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x83C488", Offset = "0x83C488", VA = "0x83C488")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x83C5F8", Offset = "0x83C5F8", VA = "0x83C5F8")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x83C8DC", Offset = "0x83C8DC", VA = "0x83C8DC")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x83CACC", Offset = "0x83CACC", VA = "0x83CACC")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x200012D")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x787594", Offset = "0x787594", VA = "0x787594", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x787628", Offset = "0x787628", VA = "0x787628", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000CDE")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x7876F8", Offset = "0x7876F8", VA = "0x7876F8")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200012E")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E704", Offset = "0x54E704")]
	public float Range;

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x787708", Offset = "0x787708", VA = "0x787708", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x787864", Offset = "0x787864", VA = "0x787864")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200012F")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E73C", Offset = "0x54E73C")]
	public float Range;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E774", Offset = "0x54E774")]
	public float MinimumElevation;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E7AC", Offset = "0x54E7AC")]
	public float Gravity;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E7E4", Offset = "0x54E7E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54E7E4", Offset = "0x54E7E4")]
	public float AimVelocity;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E840", Offset = "0x54E840")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54E840", Offset = "0x54E840")]
	public float AimStep;

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x787874", Offset = "0x787874", VA = "0x787874", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x787AC0", Offset = "0x787AC0", VA = "0x787AC0")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000130")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E898", Offset = "0x54E898")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x787AD4", Offset = "0x787AD4", VA = "0x787AD4")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x787BB8", Offset = "0x787BB8", VA = "0x787BB8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x787BE8", Offset = "0x787BE8", VA = "0x787BE8")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x787C18", Offset = "0x787C18", VA = "0x787C18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x787CB8", Offset = "0x787CB8", VA = "0x787CB8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x787D24", Offset = "0x787D24", VA = "0x787D24", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x787D8C", Offset = "0x787D8C", VA = "0x787D8C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000131")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E8D0", Offset = "0x54E8D0")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E8E0", Offset = "0x54E8E0")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E918", Offset = "0x54E918")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E950", Offset = "0x54E950")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700001E")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x787EA8", Offset = "0x787EA8", VA = "0x787EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554E8C", Offset = "0x554E8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x787EB0", Offset = "0x787EB0", VA = "0x787EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554E9C", Offset = "0x554E9C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x788060", Offset = "0x788060", VA = "0x788060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554EAC", Offset = "0x554EAC")]
		add
		{
		}
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x788104", Offset = "0x788104", VA = "0x788104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554EBC", Offset = "0x554EBC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x787EBC", Offset = "0x787EBC", VA = "0x787EBC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x787F44", Offset = "0x787F44", VA = "0x787F44")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x78801C", Offset = "0x78801C", VA = "0x78801C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x78805C", Offset = "0x78805C", VA = "0x78805C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x7881A8", Offset = "0x7881A8", VA = "0x7881A8")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x788210", Offset = "0x788210", VA = "0x788210")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x788230", Offset = "0x788230", VA = "0x788230", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000132")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C898", Offset = "0x54C898")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000199")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x7888F4", Offset = "0x7888F4", VA = "0x7888F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x78895C", Offset = "0x78895C", VA = "0x78895C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x788640", Offset = "0x788640", VA = "0x788640")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x788864", Offset = "0x788864", VA = "0x788864", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x788868", Offset = "0x788868", VA = "0x788868", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x7888FC", Offset = "0x7888FC", VA = "0x7888FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C8A8", Offset = "0x54C8A8")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700019B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x7887F4", Offset = "0x7887F4", VA = "0x7887F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x78885C", Offset = "0x78885C", VA = "0x78885C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x7886DC", Offset = "0x7886DC", VA = "0x7886DC")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x788760", Offset = "0x788760", VA = "0x788760", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x788764", Offset = "0x788764", VA = "0x788764", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x7887FC", Offset = "0x7887FC", VA = "0x7887FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x788410", Offset = "0x788410", VA = "0x788410")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x7884BC", Offset = "0x7884BC", VA = "0x7884BC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x788514", Offset = "0x788514", VA = "0x788514", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x7885D0", Offset = "0x7885D0", VA = "0x7885D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554ECC", Offset = "0x554ECC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x78866C", Offset = "0x78866C", VA = "0x78866C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554F30", Offset = "0x554F30")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CFB")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000CFC")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x788708", Offset = "0x788708", VA = "0x788708")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554F94", Offset = "0x554F94")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x788734", Offset = "0x788734", VA = "0x788734")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554FA4", Offset = "0x554FA4")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000133")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54E998", Offset = "0x54E998")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E9A8", Offset = "0x54E9A8")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54E9E0", Offset = "0x54E9E0")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EA18", Offset = "0x54EA18")]
	public bool FastTeleport;

	[Token(Token = "0x1700001F")]
	public Transform Pointer
	{
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x788964", Offset = "0x788964", VA = "0x788964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554FB4", Offset = "0x554FB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x78896C", Offset = "0x78896C", VA = "0x78896C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x554FC4", Offset = "0x554FC4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x788974", Offset = "0x788974", VA = "0x788974", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x788AD0", Offset = "0x788AD0", VA = "0x788AD0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x788B88", Offset = "0x788B88", VA = "0x788B88")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000134")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000281")]
	public enum InputModes
	{
		[Token(Token = "0x40013A5")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40013A6")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40013A7")]
		ThumbstickTeleport,
		[Token(Token = "0x40013A8")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000282")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40013AA")]
		A,
		[Token(Token = "0x40013AB")]
		B,
		[Token(Token = "0x40013AC")]
		LeftTrigger,
		[Token(Token = "0x40013AD")]
		LeftThumbstick,
		[Token(Token = "0x40013AE")]
		RightTrigger,
		[Token(Token = "0x40013AF")]
		RightThumbstick,
		[Token(Token = "0x40013B0")]
		X,
		[Token(Token = "0x40013B1")]
		Y
	}

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EA50", Offset = "0x54EA50")]
	public InputModes InputMode;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EA88", Offset = "0x54EA88")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EAC0", Offset = "0x54EAC0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EAF8", Offset = "0x54EAF8")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x788B8C", Offset = "0x788B8C", VA = "0x788B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x788B90", Offset = "0x788B90", VA = "0x788B90", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x788FD8", Offset = "0x788FD8", VA = "0x788FD8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x789098", Offset = "0x789098", VA = "0x789098")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000135")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000283")]
	public enum OrientationModes
	{
		[Token(Token = "0x40013B3")]
		HeadRelative,
		[Token(Token = "0x40013B4")]
		ForwardFacing
	}

	[Token(Token = "0x2000284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C8B8", Offset = "0x54C8B8")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700019D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x789528", Offset = "0x789528", VA = "0x789528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x789590", Offset = "0x789590", VA = "0x789590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x789304", Offset = "0x789304", VA = "0x789304")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x789480", Offset = "0x789480", VA = "0x789480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x789484", Offset = "0x789484", VA = "0x789484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x789530", Offset = "0x789530", VA = "0x789530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x789144", Offset = "0x789144", VA = "0x789144")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x7891F8", Offset = "0x7891F8", VA = "0x7891F8")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x789200", Offset = "0x789200", VA = "0x789200", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x78924C", Offset = "0x78924C", VA = "0x78924C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x789294", Offset = "0x789294", VA = "0x789294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x554FD4", Offset = "0x554FD4")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D0D")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000D0E")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x789330", Offset = "0x789330", VA = "0x789330")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x789454", Offset = "0x789454", VA = "0x789454")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555038", Offset = "0x555038")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000136")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x789598", Offset = "0x789598", VA = "0x789598", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x78959C", Offset = "0x78959C", VA = "0x78959C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x789618", Offset = "0x789618", VA = "0x789618")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000137")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EB30", Offset = "0x54EB30")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EB68", Offset = "0x54EB68")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EBA0", Offset = "0x54EBA0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EBD8", Offset = "0x54EBD8")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x78961C", Offset = "0x78961C", VA = "0x78961C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x78968C", Offset = "0x78968C", VA = "0x78968C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x789B04", Offset = "0x789B04", VA = "0x789B04")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000138")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EC10", Offset = "0x54EC10")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EC48", Offset = "0x54EC48")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EC80", Offset = "0x54EC80")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x789B08", Offset = "0x789B08", VA = "0x789B08", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x789B4C", Offset = "0x789B4C", VA = "0x789B4C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x789FBC", Offset = "0x789FBC", VA = "0x789FBC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000139")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x789FCC", Offset = "0x789FCC", VA = "0x789FCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x789FD0", Offset = "0x789FD0", VA = "0x789FD0")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x789FD8", Offset = "0x789FD8", VA = "0x789FD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x78A0C0", Offset = "0x78A0C0", VA = "0x78A0C0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x78A0E8", Offset = "0x78A0E8", VA = "0x78A0E8")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200013A")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54ECB8", Offset = "0x54ECB8")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000020")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x78A100", Offset = "0x78A100", VA = "0x78A100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555048", Offset = "0x555048")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x78A108", Offset = "0x78A108", VA = "0x78A108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555058", Offset = "0x555058")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x7875C4", Offset = "0x7875C4", VA = "0x7875C4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x7876CC", Offset = "0x7876CC", VA = "0x7876CC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x78A110", Offset = "0x78A110", VA = "0x78A110")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x555068", Offset = "0x555068")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x787D18", Offset = "0x787D18", VA = "0x787D18", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x787D84", Offset = "0x787D84", VA = "0x787D84", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x787700", Offset = "0x787700", VA = "0x787700")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200013B")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000285")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C8C8", Offset = "0x54C8C8")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700019F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x78A764", Offset = "0x78A764", VA = "0x78A764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x78A7CC", Offset = "0x78A7CC", VA = "0x78A7CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x78A360", Offset = "0x78A360", VA = "0x78A360")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x78A4F8", Offset = "0x78A4F8", VA = "0x78A4F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x78A4FC", Offset = "0x78A4FC", VA = "0x78A4FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x78A76C", Offset = "0x78A76C", VA = "0x78A76C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54ECC8", Offset = "0x54ECC8")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000BC3")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x78A1D8", Offset = "0x78A1D8", VA = "0x78A1D8")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x78A29C", Offset = "0x78A29C", VA = "0x78A29C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x78A2C8", Offset = "0x78A2C8", VA = "0x78A2C8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x78A2F0", Offset = "0x78A2F0", VA = "0x78A2F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5550A0", Offset = "0x5550A0")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x78A38C", Offset = "0x78A38C", VA = "0x78A38C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000D2C")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x78A3A8", Offset = "0x78A3A8", VA = "0x78A3A8", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x78A4CC", Offset = "0x78A4CC", VA = "0x78A4CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555104", Offset = "0x555104")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200013C")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x78A7D4", Offset = "0x78A7D4", VA = "0x78A7D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x78A834", Offset = "0x78A834", VA = "0x78A834", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x78A9B8", Offset = "0x78A9B8", VA = "0x78A9B8", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x78AAA8", Offset = "0x78AAA8", VA = "0x78AAA8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x555114", Offset = "0x555114")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x78AAAC", Offset = "0x78AAAC", VA = "0x78AAAC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x200013D")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54ED00", Offset = "0x54ED00")]
	public float LOSOffset;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54ED38", Offset = "0x54ED38")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x78AAB8", Offset = "0x78AAB8", VA = "0x78AAB8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x78ACE8", Offset = "0x78ACE8", VA = "0x78ACE8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200013E")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x78ACF4", Offset = "0x78ACF4", VA = "0x78ACF4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x78AE78", Offset = "0x78AE78", VA = "0x78AE78")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200013F")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x78AE7C", Offset = "0x78AE7C", VA = "0x78AE7C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x78AF14", Offset = "0x78AF14", VA = "0x78AF14", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000D3A")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x78AFA8", Offset = "0x78AFA8", VA = "0x78AFA8")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000140")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C8D8", Offset = "0x54C8D8")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170001A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x78B310", Offset = "0x78B310", VA = "0x78B310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x78B378", Offset = "0x78B378", VA = "0x78B378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x78B04C", Offset = "0x78B04C", VA = "0x78B04C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x78B210", Offset = "0x78B210", VA = "0x78B210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x78B214", Offset = "0x78B214", VA = "0x78B214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x78B318", Offset = "0x78B318", VA = "0x78B318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54ED70", Offset = "0x54ED70")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54ED70", Offset = "0x54ED70")]
	public float TransitionDuration;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EDC8", Offset = "0x54EDC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54EDC8", Offset = "0x54EDC8")]
	public float TeleportDelay;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EE1C", Offset = "0x54EE1C")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x78AFB0", Offset = "0x78AFB0", VA = "0x78AFB0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x78AFDC", Offset = "0x78AFDC", VA = "0x78AFDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55514C", Offset = "0x55514C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x78B078", Offset = "0x78B078", VA = "0x78B078")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000141")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x78B380", Offset = "0x78B380", VA = "0x78B380", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x78B39C", Offset = "0x78B39C", VA = "0x78B39C")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000142")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C8E8", Offset = "0x54C8E8")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0x78B5E8", Offset = "0x78B5E8", VA = "0x78B5E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x78B650", Offset = "0x78B650", VA = "0x78B650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x78B440", Offset = "0x78B440", VA = "0x78B440")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x78B4B4", Offset = "0x78B4B4", VA = "0x78B4B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x78B4B8", Offset = "0x78B4B8", VA = "0x78B4B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x78B5F0", Offset = "0x78B5F0", VA = "0x78B5F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54EE54", Offset = "0x54EE54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54EE54", Offset = "0x54EE54")]
	public float TransitionDuration;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x78B3A4", Offset = "0x78B3A4", VA = "0x78B3A4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x78B3D0", Offset = "0x78B3D0", VA = "0x78B3D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5551B0", Offset = "0x5551B0")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x78B46C", Offset = "0x78B46C", VA = "0x78B46C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000143")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000021")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x7CC5EC", Offset = "0x7CC5EC", VA = "0x7CC5EC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000022")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x7CC8A8", Offset = "0x7CC8A8", VA = "0x7CC8A8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000023")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x7C9A74", Offset = "0x7C9A74", VA = "0x7C9A74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x7CAC94", Offset = "0x7CAC94", VA = "0x7CAC94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000025")]
	public static long Duration
	{
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x7CAE78", Offset = "0x7CAE78", VA = "0x7CAE78")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000026")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x7CAD84", Offset = "0x7CAD84", VA = "0x7CAD84")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x7CA458", Offset = "0x7CA458", VA = "0x7CA458")]
		set
		{
		}
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x7CB4D8", Offset = "0x7CB4D8", VA = "0x7CB4D8")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x7CB21C", Offset = "0x7CB21C", VA = "0x7CB21C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x7CA0E8", Offset = "0x7CA0E8", VA = "0x7CA0E8")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x7CA26C", Offset = "0x7CA26C", VA = "0x7CA26C")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x7CB044", Offset = "0x7CB044", VA = "0x7CB044")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x7CB6CC", Offset = "0x7CB6CC", VA = "0x7CB6CC")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x7CAAD8", Offset = "0x7CAAD8", VA = "0x7CAAD8")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000144")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x8BFCE0", Offset = "0x8BFCE0", VA = "0x8BFCE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555214", Offset = "0x555214")]
		add
		{
		}
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x8BFD84", Offset = "0x8BFD84", VA = "0x8BFD84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555224", Offset = "0x555224")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x8BFE28", Offset = "0x8BFE28", VA = "0x8BFE28", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x8BFE3C", Offset = "0x8BFE3C", VA = "0x8BFE3C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000145")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000288")]
	public enum ButtonType
	{
		[Token(Token = "0x40013C7")]
		Play,
		[Token(Token = "0x40013C8")]
		Pause,
		[Token(Token = "0x40013C9")]
		FastForward,
		[Token(Token = "0x40013CA")]
		Rewind,
		[Token(Token = "0x40013CB")]
		SkipForward,
		[Token(Token = "0x40013CC")]
		SkipBack,
		[Token(Token = "0x40013CD")]
		Stop
	}

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000027")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x7C6A70", Offset = "0x7C6A70", VA = "0x7C6A70")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x7C6A78", Offset = "0x7C6A78", VA = "0x7C6A78")]
		set
		{
		}
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x7C6A9C", Offset = "0x7C6A9C", VA = "0x7C6A9C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x7C7F68", Offset = "0x7C7F68", VA = "0x7C7F68")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000146")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000289")]
	public enum VideoShape
	{
		[Token(Token = "0x40013CF")]
		_360,
		[Token(Token = "0x40013D0")]
		_180,
		[Token(Token = "0x40013D1")]
		Quad
	}

	[Token(Token = "0x200028A")]
	public enum VideoStereo
	{
		[Token(Token = "0x40013D3")]
		Mono,
		[Token(Token = "0x40013D4")]
		TopBottom,
		[Token(Token = "0x40013D5")]
		LeftRight
	}

	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C8F8", Offset = "0x54C8F8")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170001A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x7CB994", Offset = "0x7CB994", VA = "0x7CB994", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x7CB9FC", Offset = "0x7CB9FC", VA = "0x7CB9FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x7C9DE4", Offset = "0x7C9DE4", VA = "0x7C9DE4")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x7CB810", Offset = "0x7CB810", VA = "0x7CB810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x7CB814", Offset = "0x7CB814", VA = "0x7CB814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x7CB99C", Offset = "0x7CB99C", VA = "0x7CB99C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C908", Offset = "0x54C908")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x7CA04C", Offset = "0x7CA04C", VA = "0x7CA04C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x7CB404", Offset = "0x7CB404", VA = "0x7CB404")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EEDC", Offset = "0x54EEDC")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EEEC", Offset = "0x54EEEC")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54EEFC", Offset = "0x54EEFC")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000028")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x7C9828", Offset = "0x7C9828", VA = "0x7C9828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555234", Offset = "0x555234")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x7C9830", Offset = "0x7C9830", VA = "0x7C9830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555244", Offset = "0x555244")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public long Duration
	{
		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x7C983C", Offset = "0x7C983C", VA = "0x7C983C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555254", Offset = "0x555254")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x7C9844", Offset = "0x7C9844", VA = "0x7C9844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555264", Offset = "0x555264")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x7C984C", Offset = "0x7C984C", VA = "0x7C984C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555274", Offset = "0x555274")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x7C9854", Offset = "0x7C9854", VA = "0x7C9854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555284", Offset = "0x555284")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x7C985C", Offset = "0x7C985C", VA = "0x7C985C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x7C9ADC", Offset = "0x7C9ADC", VA = "0x7C9ADC")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x7C9B44", Offset = "0x7C9B44", VA = "0x7C9B44")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x7C9D74", Offset = "0x7C9D74", VA = "0x7C9D74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555294", Offset = "0x555294")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x7C9E10", Offset = "0x7C9E10", VA = "0x7C9E10")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x7CA054", Offset = "0x7CA054", VA = "0x7CA054")]
	public void Play()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x7CA1DC", Offset = "0x7CA1DC", VA = "0x7CA1DC")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x7CA360", Offset = "0x7CA360", VA = "0x7CA360")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x7CA598", Offset = "0x7CA598", VA = "0x7CA598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x7CAF6C", Offset = "0x7CAF6C", VA = "0x7CAF6C")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x7CB18C", Offset = "0x7CB18C", VA = "0x7CB18C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x7CB310", Offset = "0x7CB310", VA = "0x7CB310")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x7CB3F4", Offset = "0x7CB3F4", VA = "0x7CB3F4")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000147")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200028D")]
	private enum PlaybackState
	{
		[Token(Token = "0x40013DD")]
		Playing,
		[Token(Token = "0x40013DE")]
		Paused,
		[Token(Token = "0x40013DF")]
		Rewinding,
		[Token(Token = "0x40013E0")]
		FastForwarding
	}

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x7CBA04", Offset = "0x7CBA04", VA = "0x7CBA04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x7CBD00", Offset = "0x7CBD00", VA = "0x7CBD00")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x7CBEDC", Offset = "0x7CBEDC", VA = "0x7CBEDC")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x7CC010", Offset = "0x7CC010", VA = "0x7CC010")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x7CC118", Offset = "0x7CC118", VA = "0x7CC118")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x7CBFE4", Offset = "0x7CBFE4", VA = "0x7CBFE4")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x7CC1E0", Offset = "0x7CC1E0", VA = "0x7CC1E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x7CBBF4", Offset = "0x7CBBF4", VA = "0x7CBBF4")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x7CC5DC", Offset = "0x7CC5DC", VA = "0x7CC5DC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000148")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x54BF68", Offset = "0x54BF68")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x200028E")]
	private enum CubeFace
	{
		[Token(Token = "0x40013E2")]
		Right,
		[Token(Token = "0x40013E3")]
		Left,
		[Token(Token = "0x40013E4")]
		Top,
		[Token(Token = "0x40013E5")]
		Bottom,
		[Token(Token = "0x40013E6")]
		Front,
		[Token(Token = "0x40013E7")]
		Back,
		[Token(Token = "0x40013E8")]
		COUNT
	}

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x95DFDC", Offset = "0x95DFDC", VA = "0x95DFDC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x95E13C", Offset = "0x95E13C", VA = "0x95E13C")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x95E2F8", Offset = "0x95E2F8", VA = "0x95E2F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x95E7D0", Offset = "0x95E7D0", VA = "0x95E7D0")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x95EAA4", Offset = "0x95EAA4", VA = "0x95EAA4")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x95FD00", Offset = "0x95FD00", VA = "0x95FD00")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x95FD60", Offset = "0x95FD60", VA = "0x95FD60")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x95EE24", Offset = "0x95EE24", VA = "0x95EE24")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x95FE48", Offset = "0x95FE48", VA = "0x95FE48")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x960034", Offset = "0x960034", VA = "0x960034")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x95F2DC", Offset = "0x95F2DC", VA = "0x95F2DC")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x95F604", Offset = "0x95F604", VA = "0x95F604")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x95F95C", Offset = "0x95F95C", VA = "0x95F95C")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x9601E8", Offset = "0x9601E8", VA = "0x9601E8")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x2000149")]
public static class VectorUtil
{
	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x78F16C", Offset = "0x78F16C", VA = "0x78F16C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200014A")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x77F450", Offset = "0x77F450", VA = "0x77F450")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x77F820", Offset = "0x77F820", VA = "0x77F820")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x77F8D8", Offset = "0x77F8D8", VA = "0x77F8D8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x77FAD8", Offset = "0x77FAD8", VA = "0x77FAD8")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x77FBC0", Offset = "0x77FBC0", VA = "0x77FBC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x77FC9C", Offset = "0x77FC9C", VA = "0x77FC9C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x77FD08", Offset = "0x77FD08", VA = "0x77FD08")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x77FD10", Offset = "0x77FD10", VA = "0x77FD10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555308", Offset = "0x555308")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x77FD6C", Offset = "0x77FD6C", VA = "0x77FD6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555318", Offset = "0x555318")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x77FDC8", Offset = "0x77FDC8", VA = "0x77FDC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555328", Offset = "0x555328")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x77FE24", Offset = "0x77FE24", VA = "0x77FE24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555338", Offset = "0x555338")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200014B")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C918", Offset = "0x54C918")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170001A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x7318D8", Offset = "0x7318D8", VA = "0x7318D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x731940", Offset = "0x731940", VA = "0x731940", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x731788", Offset = "0x731788", VA = "0x731788")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x7317BC", Offset = "0x7317BC", VA = "0x7317BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x7317C0", Offset = "0x7317C0", VA = "0x7317C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x7318E0", Offset = "0x7318E0", VA = "0x7318E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x73148C", Offset = "0x73148C", VA = "0x73148C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x73158C", Offset = "0x73158C", VA = "0x73158C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x73151C", Offset = "0x73151C", VA = "0x73151C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555348", Offset = "0x555348")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x7317B4", Offset = "0x7317B4", VA = "0x7317B4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x200014C")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54EF1C", Offset = "0x54EF1C")]
	public int SubdivisionsU;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54EF38", Offset = "0x54EF38")]
	public int SubdivisionsV;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x76B020", Offset = "0x76B020", VA = "0x76B020")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x76BAD8", Offset = "0x76BAD8", VA = "0x76BAD8")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200014D")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700002B")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x6C4D2C", Offset = "0x6C4D2C", VA = "0x6C4D2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x6C4D84", Offset = "0x6C4D84", VA = "0x6C4D84")]
	public void Start()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x6C50C8", Offset = "0x6C50C8", VA = "0x6C50C8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x6C51AC", Offset = "0x6C51AC", VA = "0x6C51AC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5553AC", Offset = "0x5553AC")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000D9C")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000D9D")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000D9E")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000D9F")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000DA0")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000DA1")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000DA2")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000DA3")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x6C5214", Offset = "0x6C5214", VA = "0x6C5214")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x6C5250", Offset = "0x6C5250", VA = "0x6C5250")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x6C52C4", Offset = "0x6C52C4", VA = "0x6C52C4")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x6C5420", Offset = "0x6C5420", VA = "0x6C5420")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x6C54F4", Offset = "0x6C54F4", VA = "0x6C54F4")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x6C4FD4", Offset = "0x6C4FD4", VA = "0x6C4FD4")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x6C55B4", Offset = "0x6C55B4", VA = "0x6C55B4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x6C561C", Offset = "0x6C561C", VA = "0x6C561C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x6C5700", Offset = "0x6C5700", VA = "0x6C5700")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200014E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x54BFFC", Offset = "0x54BFFC")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000290")]
	public enum DrawMode
	{
		[Token(Token = "0x40013ED")]
		Opaque,
		[Token(Token = "0x40013EE")]
		OpaqueWithClip,
		[Token(Token = "0x40013EF")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40013F0")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700002C")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x95DDC0", Offset = "0x95DDC0", VA = "0x95DDC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x95DE54", Offset = "0x95DE54", VA = "0x95DE54")]
		set
		{
		}
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x95C750", Offset = "0x95C750", VA = "0x95C750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x95D3C0", Offset = "0x95D3C0", VA = "0x95D3C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x95D444", Offset = "0x95D444", VA = "0x95D444")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x95D538", Offset = "0x95D538", VA = "0x95D538")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x95D62C", Offset = "0x95D62C", VA = "0x95D62C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x95D830", Offset = "0x95D830", VA = "0x95D830")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x95DF24", Offset = "0x95DF24", VA = "0x95DF24")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200014F")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C928", Offset = "0x54C928")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x87B428", Offset = "0x87B428", VA = "0x87B428")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x87B518", Offset = "0x87B518", VA = "0x87B518")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x87B288", Offset = "0x87B288", VA = "0x87B288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x87B430", Offset = "0x87B430", VA = "0x87B430")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x87B510", Offset = "0x87B510", VA = "0x87B510")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000150")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x54C060", Offset = "0x54C060")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000292")]
	public enum RotationAxes
	{
		[Token(Token = "0x40013F4")]
		MouseXAndY,
		[Token(Token = "0x40013F5")]
		MouseX,
		[Token(Token = "0x40013F6")]
		MouseY
	}

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x7C89D0", Offset = "0x7C89D0", VA = "0x7C89D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x7C8C30", Offset = "0x7C8C30", VA = "0x7C8C30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x7C8CF0", Offset = "0x7C8CF0", VA = "0x7C8CF0")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000151")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000293")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x40013F8")]
		Uninitialized = -1,
		[Token(Token = "0x40013F9")]
		NotEnabled,
		[Token(Token = "0x40013FA")]
		Success,
		[Token(Token = "0x40013FB")]
		StreamError,
		[Token(Token = "0x40013FC")]
		ProcessError,
		[Token(Token = "0x40013FD")]
		MaxStatValue
	}

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700002D")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x7CCB50", Offset = "0x7CCB50", VA = "0x7CCB50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x7CCB58", Offset = "0x7CCB58", VA = "0x7CCB58")]
		set
		{
		}
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x7CCB64", Offset = "0x7CCB64", VA = "0x7CCB64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x7CCD80", Offset = "0x7CCD80", VA = "0x7CCD80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x7CCFDC", Offset = "0x7CCFDC", VA = "0x7CCFDC")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000152")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000294")]
	private enum Parameters
	{
		[Token(Token = "0x40013FF")]
		P_GAIN,
		[Token(Token = "0x4001400")]
		P_USEINVSQR,
		[Token(Token = "0x4001401")]
		P_NEAR,
		[Token(Token = "0x4001402")]
		P_FAR,
		[Token(Token = "0x4001403")]
		P_RADIUS,
		[Token(Token = "0x4001404")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001405")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001406")]
		P_AMBISTAT,
		[Token(Token = "0x4001407")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001408")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001409")]
		P_SENDLEVEL,
		[Token(Token = "0x400140A")]
		P_NUM
	}

	[Token(Token = "0x4000C52")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700002E")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x7CD238", Offset = "0x7CD238", VA = "0x7CD238")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x7CD240", Offset = "0x7CD240", VA = "0x7CD240")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public float Gain
	{
		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x7CD24C", Offset = "0x7CD24C", VA = "0x7CD24C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x7CD254", Offset = "0x7CD254", VA = "0x7CD254")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x7CD2D8", Offset = "0x7CD2D8", VA = "0x7CD2D8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x7CD2E0", Offset = "0x7CD2E0", VA = "0x7CD2E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public float Near
	{
		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x7CD2EC", Offset = "0x7CD2EC", VA = "0x7CD2EC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x7CD2F4", Offset = "0x7CD2F4", VA = "0x7CD2F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public float Far
	{
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x7CD37C", Offset = "0x7CD37C", VA = "0x7CD37C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x7CD384", Offset = "0x7CD384", VA = "0x7CD384")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x7CD40C", Offset = "0x7CD40C", VA = "0x7CD40C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x7CD414", Offset = "0x7CD414", VA = "0x7CD414")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public float ReverbSend
	{
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x7CD49C", Offset = "0x7CD49C", VA = "0x7CD49C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x7CD4A4", Offset = "0x7CD4A4", VA = "0x7CD4A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x7CD52C", Offset = "0x7CD52C", VA = "0x7CD52C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x7CD534", Offset = "0x7CD534", VA = "0x7CD534")]
		set
		{
		}
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x7CD060", Offset = "0x7CD060", VA = "0x7CD060")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5553E4", Offset = "0x5553E4")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x7CD158", Offset = "0x7CD158", VA = "0x7CD158")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x7CD540", Offset = "0x7CD540", VA = "0x7CD540")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x7CD6B4", Offset = "0x7CD6B4", VA = "0x7CD6B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x7CD6B8", Offset = "0x7CD6B8", VA = "0x7CD6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x7CD5AC", Offset = "0x7CD5AC", VA = "0x7CD5AC")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x7CD780", Offset = "0x7CD780", VA = "0x7CD780")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x7CDBE0", Offset = "0x7CDBE0", VA = "0x7CDBE0")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x7CD0D8", Offset = "0x7CD0D8", VA = "0x7CD0D8")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x7CDCB0", Offset = "0x7CDCB0", VA = "0x7CDCB0")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000153")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000C5D")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000C5F")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x7CDCD0", Offset = "0x7CDCD0", VA = "0x7CDCD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x7CDCDC", Offset = "0x7CDCDC", VA = "0x7CDCDC")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x7CDD94", Offset = "0x7CDD94", VA = "0x7CDD94")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x7CDD14", Offset = "0x7CDD14", VA = "0x7CDD14")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x7CDE14", Offset = "0x7CDE14", VA = "0x7CDE14")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000154")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000295")]
	private struct MeshMaterial
	{
		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000296")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000C66")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000036")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x7D0890", Offset = "0x7D0890", VA = "0x7D0890")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000037")]
	public string filePath
	{
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x7D091C", Offset = "0x7D091C", VA = "0x7D091C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x7D0994", Offset = "0x7D0994", VA = "0x7D0994")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x7D0ADC", Offset = "0x7D0ADC", VA = "0x7D0ADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x7D0AE0", Offset = "0x7D0AE0", VA = "0x7D0AE0")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x7D1040", Offset = "0x7D1040", VA = "0x7D1040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x7D13D8", Offset = "0x7D13D8", VA = "0x7D13D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x7D1534", Offset = "0x7D1534", VA = "0x7D1534")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x7D1C1C", Offset = "0x7D1C1C", VA = "0x7D1C1C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x7D1C58", Offset = "0x7D1C58", VA = "0x7D1C58")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x7D3478", Offset = "0x7D3478", VA = "0x7D3478")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x7D3350", Offset = "0x7D3350", VA = "0x7D3350")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x7D0E78", Offset = "0x7D0E78", VA = "0x7D0E78")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x7D0CAC", Offset = "0x7D0CAC", VA = "0x7D0CAC")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x7D3A8C", Offset = "0x7D3A8C", VA = "0x7D3A8C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x7D3EC8", Offset = "0x7D3EC8", VA = "0x7D3EC8")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000155")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000297")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001411")]
		Int8,
		[Token(Token = "0x4001412")]
		UInt8,
		[Token(Token = "0x4001413")]
		Int16,
		[Token(Token = "0x4001414")]
		UInt16,
		[Token(Token = "0x4001415")]
		Int32,
		[Token(Token = "0x4001416")]
		UInt32,
		[Token(Token = "0x4001417")]
		Int64,
		[Token(Token = "0x4001418")]
		UInt64,
		[Token(Token = "0x4001419")]
		Float16,
		[Token(Token = "0x400141A")]
		Float32,
		[Token(Token = "0x400141B")]
		Float64
	}

	[Token(Token = "0x2000298")]
	public class ClientType
	{
		[Token(Token = "0x400141C")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x400141D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400141E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400141F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001420")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001421")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001422")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001423")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001424")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001425")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001426")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001427")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001428")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001429")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x400142A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x7CE2C8", Offset = "0x7CE2C8", VA = "0x7CE2C8")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000299")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60016F5")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60016F6")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60016F7")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60016F8")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60016F9")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60016FA")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60016FB")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60016FC")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60016FD")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60016FE")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60016FF")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001700")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001701")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001702")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001703")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x200029A")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x400142B")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001A9")]
		private IntPtr context
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0x7CEF38", Offset = "0x7CEF38", VA = "0x7CEF38")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001705")]
		[Address(RVA = "0x7CEF9C", Offset = "0x7CEF9C", VA = "0x7CEF9C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001706")]
		[Address(RVA = "0x7CF02C", Offset = "0x7CF02C", VA = "0x7CF02C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x7CF0BC", Offset = "0x7CF0BC", VA = "0x7CF0BC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001708")]
		[Address(RVA = "0x7CF0E0", Offset = "0x7CF0E0", VA = "0x7CF0E0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x7CF170", Offset = "0x7CF170", VA = "0x7CF170", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600170A")]
		[Address(RVA = "0x7CF194", Offset = "0x7CF194", VA = "0x7CF194")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x7CF220", Offset = "0x7CF220", VA = "0x7CF220", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600170C")]
		[Address(RVA = "0x7CF244", Offset = "0x7CF244", VA = "0x7CF244")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x7CF2C4", Offset = "0x7CF2C4", VA = "0x7CF2C4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600170E")]
		[Address(RVA = "0x7CF2CC", Offset = "0x7CF2CC", VA = "0x7CF2CC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x7CF3EC", Offset = "0x7CF3EC", VA = "0x7CF3EC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001710")]
		[Address(RVA = "0x7CF4E4", Offset = "0x7CF4E4", VA = "0x7CF4E4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x7CF57C", Offset = "0x7CF57C", VA = "0x7CF57C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001712")]
		[Address(RVA = "0x7CF588", Offset = "0x7CF588", VA = "0x7CF588")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x7CF6B4", Offset = "0x7CF6B4", VA = "0x7CF6B4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001714")]
		[Address(RVA = "0x7CF6C0", Offset = "0x7CF6C0", VA = "0x7CF6C0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x7CF76C", Offset = "0x7CF76C", VA = "0x7CF76C", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001716")]
		[Address(RVA = "0x7CF778", Offset = "0x7CF778", VA = "0x7CF778")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x7CF824", Offset = "0x7CF824", VA = "0x7CF824", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001718")]
		[Address(RVA = "0x7CF830", Offset = "0x7CF830", VA = "0x7CF830")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x7CF8DC", Offset = "0x7CF8DC", VA = "0x7CF8DC", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600171A")]
		[Address(RVA = "0x7CF8E8", Offset = "0x7CF8E8", VA = "0x7CF8E8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x7CF974", Offset = "0x7CF974", VA = "0x7CF974", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600171C")]
		[Address(RVA = "0x7CF998", Offset = "0x7CF998", VA = "0x7CF998")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x7CFA18", Offset = "0x7CFA18", VA = "0x7CFA18", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600171E")]
		[Address(RVA = "0x7CFA20", Offset = "0x7CFA20", VA = "0x7CFA20")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x7CFAC8", Offset = "0x7CFAC8", VA = "0x7CFAC8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001720")]
		[Address(RVA = "0x7CFAD4", Offset = "0x7CFAD4", VA = "0x7CFAD4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x7CFB7C", Offset = "0x7CFB7C", VA = "0x7CFB7C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001722")]
		[Address(RVA = "0x7CFB8C", Offset = "0x7CFB8C", VA = "0x7CFB8C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x7CFC1C", Offset = "0x7CFC1C", VA = "0x7CFC1C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x7CE274", Offset = "0x7CE274", VA = "0x7CE274")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x200029B")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400142D")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001AA")]
		private IntPtr context
		{
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x7CFC28", Offset = "0x7CFC28", VA = "0x7CFC28")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001726")]
		[Address(RVA = "0x7CE0BC", Offset = "0x7CE0BC", VA = "0x7CE0BC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001727")]
		[Address(RVA = "0x7CFC8C", Offset = "0x7CFC8C", VA = "0x7CFC8C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x7CFD1C", Offset = "0x7CFD1C", VA = "0x7CFD1C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001729")]
		[Address(RVA = "0x7CFD40", Offset = "0x7CFD40", VA = "0x7CFD40")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x7CFDD0", Offset = "0x7CFDD0", VA = "0x7CFDD0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600172B")]
		[Address(RVA = "0x7CFDF4", Offset = "0x7CFDF4", VA = "0x7CFDF4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x7CFE84", Offset = "0x7CFE84", VA = "0x7CFE84", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600172D")]
		[Address(RVA = "0x7CFEA8", Offset = "0x7CFEA8", VA = "0x7CFEA8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x7CFF28", Offset = "0x7CFF28", VA = "0x7CFF28", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600172F")]
		[Address(RVA = "0x7CFF30", Offset = "0x7CFF30", VA = "0x7CFF30")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x7D0050", Offset = "0x7D0050", VA = "0x7D0050", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001731")]
		[Address(RVA = "0x7D0148", Offset = "0x7D0148", VA = "0x7D0148")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x7D01E0", Offset = "0x7D01E0", VA = "0x7D01E0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001733")]
		[Address(RVA = "0x7D01EC", Offset = "0x7D01EC", VA = "0x7D01EC")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x7D0318", Offset = "0x7D0318", VA = "0x7D0318", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001735")]
		[Address(RVA = "0x7D0324", Offset = "0x7D0324", VA = "0x7D0324")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x7D03D0", Offset = "0x7D03D0", VA = "0x7D03D0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001737")]
		[Address(RVA = "0x7D03DC", Offset = "0x7D03DC", VA = "0x7D03DC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x7D0488", Offset = "0x7D0488", VA = "0x7D0488", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001739")]
		[Address(RVA = "0x7D0494", Offset = "0x7D0494", VA = "0x7D0494")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x7D0540", Offset = "0x7D0540", VA = "0x7D0540", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600173B")]
		[Address(RVA = "0x7D054C", Offset = "0x7D054C", VA = "0x7D054C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x7D05DC", Offset = "0x7D05DC", VA = "0x7D05DC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600173D")]
		[Address(RVA = "0x7D0600", Offset = "0x7D0600", VA = "0x7D0600")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x7D0680", Offset = "0x7D0680", VA = "0x7D0680", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600173F")]
		[Address(RVA = "0x7D0688", Offset = "0x7D0688", VA = "0x7D0688")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x7D0730", Offset = "0x7D0730", VA = "0x7D0730", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001741")]
		[Address(RVA = "0x7D073C", Offset = "0x7D073C", VA = "0x7D073C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x7D07E4", Offset = "0x7D07E4", VA = "0x7D07E4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001743")]
		[Address(RVA = "0x7D07F4", Offset = "0x7D07F4", VA = "0x7D07F4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x7D0884", Offset = "0x7D0884", VA = "0x7D0884", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x7CE14C", Offset = "0x7CE14C", VA = "0x7CE14C")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200029C")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400142F")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170001AB")]
		private IntPtr context
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x7CE2D0", Offset = "0x7CE2D0", VA = "0x7CE2D0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001747")]
		[Address(RVA = "0x7CE198", Offset = "0x7CE198", VA = "0x7CE198")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001748")]
		[Address(RVA = "0x7CE334", Offset = "0x7CE334", VA = "0x7CE334")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x7CE3C4", Offset = "0x7CE3C4", VA = "0x7CE3C4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600174A")]
		[Address(RVA = "0x7CE3E8", Offset = "0x7CE3E8", VA = "0x7CE3E8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x7CE478", Offset = "0x7CE478", VA = "0x7CE478", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600174C")]
		[Address(RVA = "0x7CE49C", Offset = "0x7CE49C", VA = "0x7CE49C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x7CE52C", Offset = "0x7CE52C", VA = "0x7CE52C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600174E")]
		[Address(RVA = "0x7CE550", Offset = "0x7CE550", VA = "0x7CE550")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x7CE5D0", Offset = "0x7CE5D0", VA = "0x7CE5D0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001750")]
		[Address(RVA = "0x7CE5D8", Offset = "0x7CE5D8", VA = "0x7CE5D8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x7CE6F8", Offset = "0x7CE6F8", VA = "0x7CE6F8", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001752")]
		[Address(RVA = "0x7CE7F0", Offset = "0x7CE7F0", VA = "0x7CE7F0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x7CE888", Offset = "0x7CE888", VA = "0x7CE888", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001754")]
		[Address(RVA = "0x7CE894", Offset = "0x7CE894", VA = "0x7CE894")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x7CE9C0", Offset = "0x7CE9C0", VA = "0x7CE9C0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001756")]
		[Address(RVA = "0x7CE9CC", Offset = "0x7CE9CC", VA = "0x7CE9CC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x7CEA78", Offset = "0x7CEA78", VA = "0x7CEA78", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001758")]
		[Address(RVA = "0x7CEA84", Offset = "0x7CEA84", VA = "0x7CEA84")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x7CEB30", Offset = "0x7CEB30", VA = "0x7CEB30", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600175A")]
		[Address(RVA = "0x7CEB3C", Offset = "0x7CEB3C", VA = "0x7CEB3C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x7CEBE8", Offset = "0x7CEBE8", VA = "0x7CEBE8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600175C")]
		[Address(RVA = "0x7CEBF4", Offset = "0x7CEBF4", VA = "0x7CEBF4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x7CEC84", Offset = "0x7CEC84", VA = "0x7CEC84", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600175E")]
		[Address(RVA = "0x7CECA8", Offset = "0x7CECA8", VA = "0x7CECA8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x7CED28", Offset = "0x7CED28", VA = "0x7CED28", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001760")]
		[Address(RVA = "0x7CED30", Offset = "0x7CED30", VA = "0x7CED30")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x7CEDD8", Offset = "0x7CEDD8", VA = "0x7CEDD8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001762")]
		[Address(RVA = "0x7CEDE4", Offset = "0x7CEDE4", VA = "0x7CEDE4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x7CEE8C", Offset = "0x7CEE8C", VA = "0x7CEE8C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001764")]
		[Address(RVA = "0x7CEE9C", Offset = "0x7CEE9C", VA = "0x7CEE9C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x7CEF2C", Offset = "0x7CEF2C", VA = "0x7CEF2C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x7CE228", Offset = "0x7CE228", VA = "0x7CE228")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000038")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x7CDE24", Offset = "0x7CDE24", VA = "0x7CDE24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x7CDE94", Offset = "0x7CDE94", VA = "0x7CDE94")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x7CE2C0", Offset = "0x7CE2C0", VA = "0x7CE2C0")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000156")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200029D")]
	public enum Preset
	{
		[Token(Token = "0x4001432")]
		Custom,
		[Token(Token = "0x4001433")]
		AcousticTile,
		[Token(Token = "0x4001434")]
		Brick,
		[Token(Token = "0x4001435")]
		BrickPainted,
		[Token(Token = "0x4001436")]
		Carpet,
		[Token(Token = "0x4001437")]
		CarpetHeavy,
		[Token(Token = "0x4001438")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001439")]
		CeramicTile,
		[Token(Token = "0x400143A")]
		Concrete,
		[Token(Token = "0x400143B")]
		ConcreteRough,
		[Token(Token = "0x400143C")]
		ConcreteBlock,
		[Token(Token = "0x400143D")]
		ConcreteBlockPainted,
		[Token(Token = "0x400143E")]
		Curtain,
		[Token(Token = "0x400143F")]
		Foliage,
		[Token(Token = "0x4001440")]
		Glass,
		[Token(Token = "0x4001441")]
		GlassHeavy,
		[Token(Token = "0x4001442")]
		Grass,
		[Token(Token = "0x4001443")]
		Gravel,
		[Token(Token = "0x4001444")]
		GypsumBoard,
		[Token(Token = "0x4001445")]
		PlasterOnBrick,
		[Token(Token = "0x4001446")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001447")]
		Soil,
		[Token(Token = "0x4001448")]
		SoundProof,
		[Token(Token = "0x4001449")]
		Snow,
		[Token(Token = "0x400144A")]
		Steel,
		[Token(Token = "0x400144B")]
		Water,
		[Token(Token = "0x400144C")]
		WoodThin,
		[Token(Token = "0x400144D")]
		WoodThick,
		[Token(Token = "0x400144E")]
		WoodFloor,
		[Token(Token = "0x400144F")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200029E")]
	public sealed class Point
	{
		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x94DAC0", Offset = "0x94DAC0", VA = "0x94DAC0")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x94DAF8", Offset = "0x94DAF8", VA = "0x94DAF8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x94DB68", Offset = "0x94DB68", VA = "0x94DB68")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x54C938", Offset = "0x54C938")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CCC0", Offset = "0x54CCC0")]
		private sealed class <>c
		{
			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60018D3")]
			[Address(RVA = "0x94E038", Offset = "0x94E038", VA = "0x94E038")]
			public <>c()
			{
			}

			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x94E040", Offset = "0x94E040", VA = "0x94E040")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x94E058", Offset = "0x94E058", VA = "0x94E058")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170001AC")]
		public float Item
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x94DBA0", Offset = "0x94DBA0", VA = "0x94DBA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x94DF5C", Offset = "0x94DF5C", VA = "0x94DF5C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F054", Offset = "0x54F054")]
	public Spectrum absorption;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F08C", Offset = "0x54F08C")]
	public Spectrum transmission;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F0C4", Offset = "0x54F0C4")]
	public Spectrum scattering;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000039")]
	public Preset preset
	{
		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x7D3FA0", Offset = "0x7D3FA0", VA = "0x7D3FA0")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x7D3FA8", Offset = "0x7D3FA8", VA = "0x7D3FA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x7D3FD0", Offset = "0x7D3FD0", VA = "0x7D3FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x7D3920", Offset = "0x7D3920", VA = "0x7D3920")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x7D45B4", Offset = "0x7D45B4", VA = "0x7D45B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x7D45B8", Offset = "0x7D45B8", VA = "0x7D45B8")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x7D3FD4", Offset = "0x7D3FD4", VA = "0x7D3FD4")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x7D31BC", Offset = "0x7D31BC", VA = "0x7D31BC")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x7D469C", Offset = "0x7D469C", VA = "0x7D469C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x7D4B3C", Offset = "0x7D4B3C", VA = "0x7D4B3C")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x7D4FE0", Offset = "0x7D4FE0", VA = "0x7D4FE0")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x7D5480", Offset = "0x7D5480", VA = "0x7D5480")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x7D5934", Offset = "0x7D5934", VA = "0x7D5934")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x7D5DD4", Offset = "0x7D5DD4", VA = "0x7D5DD4")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x7D6274", Offset = "0x7D6274", VA = "0x7D6274")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x7D671C", Offset = "0x7D671C", VA = "0x7D671C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x7D6BC4", Offset = "0x7D6BC4", VA = "0x7D6BC4")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x7D7070", Offset = "0x7D7070", VA = "0x7D7070")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x7D7518", Offset = "0x7D7518", VA = "0x7D7518")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x7D79C8", Offset = "0x7D79C8", VA = "0x7D79C8")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x7D7E68", Offset = "0x7D7E68", VA = "0x7D7E68")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x7D8314", Offset = "0x7D8314", VA = "0x7D8314")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x7D87A4", Offset = "0x7D87A4", VA = "0x7D87A4")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x7D8C40", Offset = "0x7D8C40", VA = "0x7D8C40")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x7D8FC8", Offset = "0x7D8FC8", VA = "0x7D8FC8")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x7D9348", Offset = "0x7D9348", VA = "0x7D9348")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x7D97F8", Offset = "0x7D97F8", VA = "0x7D97F8")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x7D9CA4", Offset = "0x7D9CA4", VA = "0x7D9CA4")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x7DA148", Offset = "0x7DA148", VA = "0x7DA148")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x7DA4D4", Offset = "0x7DA4D4", VA = "0x7DA4D4")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x7DA638", Offset = "0x7DA638", VA = "0x7DA638")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x7DA9B4", Offset = "0x7DA9B4", VA = "0x7DA9B4")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x7DAE44", Offset = "0x7DAE44", VA = "0x7DAE44")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x7DB2E8", Offset = "0x7DB2E8", VA = "0x7DB2E8")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x7DB780", Offset = "0x7DB780", VA = "0x7DB780")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x7DBC20", Offset = "0x7DBC20", VA = "0x7DBC20")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x7DC0C8", Offset = "0x7DC0C8", VA = "0x7DC0C8")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x7DC56C", Offset = "0x7DC56C", VA = "0x7DC56C")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000157")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x94E070", Offset = "0x94E070", VA = "0x94E070")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x94E144", Offset = "0x94E144", VA = "0x94E144")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000158")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700003A")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x94E700", Offset = "0x94E700", VA = "0x94E700")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x94E814", Offset = "0x94E814", VA = "0x94E814")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000159")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000C71")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x94E824", Offset = "0x94E824", VA = "0x94E824")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x94E8BC", Offset = "0x94E8BC", VA = "0x94E8BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x94E9C8", Offset = "0x94E9C8", VA = "0x94E9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x94E9CC", Offset = "0x94E9CC", VA = "0x94E9CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x94E9D0", Offset = "0x94E9D0", VA = "0x94E9D0")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200015A")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20002A0")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000C81")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000C87")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x7B59B8", Offset = "0x7B59B8", VA = "0x7B59B8")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x7B59F0", Offset = "0x7B59F0", VA = "0x7B59F0")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x7B5BC0", Offset = "0x7B5BC0", VA = "0x7B5BC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x7B5C70", Offset = "0x7B5C70", VA = "0x7B5C70")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x7B5D64", Offset = "0x7B5D64", VA = "0x7B5D64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x7B66CC", Offset = "0x7B66CC", VA = "0x7B66CC")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x7B5C54", Offset = "0x7B5C54", VA = "0x7B5C54")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x7B5CD4", Offset = "0x7B5CD4", VA = "0x7B5CD4")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x7B6434", Offset = "0x7B6434", VA = "0x7B6434")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x7B64B4", Offset = "0x7B64B4", VA = "0x7B64B4")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x7B653C", Offset = "0x7B653C", VA = "0x7B653C")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x7B65C4", Offset = "0x7B65C4", VA = "0x7B65C4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x7B6644", Offset = "0x7B6644", VA = "0x7B6644")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x7B7504", Offset = "0x7B7504", VA = "0x7B7504")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x7B75AC", Offset = "0x7B75AC", VA = "0x7B75AC")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x7B7654", Offset = "0x7B7654", VA = "0x7B7654")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x200015B")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x200015C")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x94E154", Offset = "0x94E154", VA = "0x94E154")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x94E158", Offset = "0x94E158", VA = "0x94E158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x94E15C", Offset = "0x94E15C", VA = "0x94E15C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x94E2C4", Offset = "0x94E2C4", VA = "0x94E2C4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x94E1A8", Offset = "0x94E1A8", VA = "0x94E1A8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x94E238", Offset = "0x94E238", VA = "0x94E238")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x94E310", Offset = "0x94E310", VA = "0x94E310")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x94E3A8", Offset = "0x94E3A8", VA = "0x94E3A8")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x94E510", Offset = "0x94E510", VA = "0x94E510")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x94E678", Offset = "0x94E678", VA = "0x94E678")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200015D")]
public static class DebugExtension
{
	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x774C40", Offset = "0x774C40", VA = "0x774C40")]
	public static void DebugPoint(Vector3 position, Color color, float scale = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x774F84", Offset = "0x774F84", VA = "0x774F84")]
	public static void DebugPoint(Vector3 position, float scale = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x775018", Offset = "0x775018", VA = "0x775018")]
	public static void DebugBounds(Bounds bounds, Color color, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x77557C", Offset = "0x77557C", VA = "0x77557C")]
	public static void DebugBounds(Bounds bounds, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x7755D4", Offset = "0x7755D4", VA = "0x7755D4")]
	public static void DebugLocalCube(Transform transform, Vector3 size, Color color, [Optional] Vector3 center, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x775C44", Offset = "0x775C44", VA = "0x775C44")]
	public static void DebugLocalCube(Transform transform, Vector3 size, [Optional] Vector3 center, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x775CF4", Offset = "0x775CF4", VA = "0x775CF4")]
	public static void DebugLocalCube(Matrix4x4 space, Vector3 size, Color color, [Optional] Vector3 center, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x7763A4", Offset = "0x7763A4", VA = "0x7763A4")]
	public static void DebugLocalCube(Matrix4x4 space, Vector3 size, [Optional] Vector3 center, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x776460", Offset = "0x776460", VA = "0x776460")]
	public static void DebugCircle(Vector3 position, Vector3 up, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x77689C", Offset = "0x77689C", VA = "0x77689C")]
	public static void DebugCircle(Vector3 position, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x776980", Offset = "0x776980", VA = "0x776980")]
	public static void DebugCircle(Vector3 position, Vector3 up, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x776A1C", Offset = "0x776A1C", VA = "0x776A1C")]
	public static void DebugCircle(Vector3 position, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x776B04", Offset = "0x776B04", VA = "0x776B04")]
	public static void DebugWireSphere(Vector3 position, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x776E30", Offset = "0x776E30", VA = "0x776E30")]
	public static void DebugWireSphere(Vector3 position, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x776EC4", Offset = "0x776EC4", VA = "0x776EC4")]
	public static void DebugCylinder(Vector3 start, Vector3 end, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x777634", Offset = "0x777634", VA = "0x777634")]
	public static void DebugCylinder(Vector3 start, Vector3 end, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x7776D0", Offset = "0x7776D0", VA = "0x7776D0")]
	public static void DebugCone(Vector3 position, Vector3 direction, Color color, float angle = 45f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x777D80", Offset = "0x777D80", VA = "0x777D80")]
	public static void DebugCone(Vector3 position, Vector3 direction, float angle = 45f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x777E1C", Offset = "0x777E1C", VA = "0x777E1C")]
	public static void DebugCone(Vector3 position, Color color, float angle = 45f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x777F00", Offset = "0x777F00", VA = "0x777F00")]
	public static void DebugCone(Vector3 position, float angle = 45f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x777FE8", Offset = "0x777FE8", VA = "0x777FE8")]
	public static void DebugArrow(Vector3 position, Vector3 direction, Color color, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x77818C", Offset = "0x77818C", VA = "0x77818C")]
	public static void DebugArrow(Vector3 position, Vector3 direction, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x778220", Offset = "0x778220", VA = "0x778220")]
	public static void DebugCapsule(Vector3 start, Vector3 end, Color color, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x7790F0", Offset = "0x7790F0", VA = "0x7790F0")]
	public static void DebugCapsule(Vector3 start, Vector3 end, float radius = 1f, float duration = 0f, bool depthTest = true)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x77918C", Offset = "0x77918C", VA = "0x77918C")]
	public static void DrawPoint(Vector3 position, Color color, float scale = 1f)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x7793E0", Offset = "0x7793E0", VA = "0x7793E0")]
	public static void DrawPoint(Vector3 position, float scale = 1f)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x779448", Offset = "0x779448", VA = "0x779448")]
	public static void DrawBounds(Bounds bounds, Color color)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x77992C", Offset = "0x77992C", VA = "0x77992C")]
	public static void DrawBounds(Bounds bounds)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x779964", Offset = "0x779964", VA = "0x779964")]
	public static void DrawLocalCube(Transform transform, Vector3 size, Color color, [Optional] Vector3 center)
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x779F40", Offset = "0x779F40", VA = "0x779F40")]
	public static void DrawLocalCube(Transform transform, Vector3 size, [Optional] Vector3 center)
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x779FD8", Offset = "0x779FD8", VA = "0x779FD8")]
	public static void DrawLocalCube(Matrix4x4 space, Vector3 size, Color color, [Optional] Vector3 center)
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x77A5D0", Offset = "0x77A5D0", VA = "0x77A5D0")]
	public static void DrawLocalCube(Matrix4x4 space, Vector3 size, [Optional] Vector3 center)
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x77A66C", Offset = "0x77A66C", VA = "0x77A66C")]
	public static void DrawCircle(Vector3 position, Vector3 up, Color color, float radius = 1f)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x77AB20", Offset = "0x77AB20", VA = "0x77AB20")]
	public static void DrawCircle(Vector3 position, Color color, float radius = 1f)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x77ABF4", Offset = "0x77ABF4", VA = "0x77ABF4")]
	public static void DrawCircle(Vector3 position, Vector3 up, float radius = 1f)
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x77AC5C", Offset = "0x77AC5C", VA = "0x77AC5C")]
	public static void DrawCircle(Vector3 position, float radius = 1f)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x77AD34", Offset = "0x77AD34", VA = "0x77AD34")]
	public static void DrawCylinder(Vector3 start, Vector3 end, Color color, float radius = 1f)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x77B3C8", Offset = "0x77B3C8", VA = "0x77B3C8")]
	public static void DrawCylinder(Vector3 start, Vector3 end, float radius = 1f)
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x77B44C", Offset = "0x77B44C", VA = "0x77B44C")]
	public static void DrawCone(Vector3 position, Vector3 direction, Color color, float angle = 45f)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x77BA84", Offset = "0x77BA84", VA = "0x77BA84")]
	public static void DrawCone(Vector3 position, Vector3 direction, float angle = 45f)
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x77BB08", Offset = "0x77BB08", VA = "0x77BB08")]
	public static void DrawCone(Vector3 position, Color color, float angle = 45f)
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x77BBDC", Offset = "0x77BBDC", VA = "0x77BBDC")]
	public static void DrawCone(Vector3 position, float angle = 45f)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x77BCB4", Offset = "0x77BCB4", VA = "0x77BCB4")]
	public static void DrawArrow(Vector3 position, Vector3 direction, Color color)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x77BE3C", Offset = "0x77BE3C", VA = "0x77BE3C")]
	public static void DrawArrow(Vector3 position, Vector3 direction)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x77BEB0", Offset = "0x77BEB0", VA = "0x77BEB0")]
	public static void DrawCapsule(Vector3 start, Vector3 end, Color color, float radius = 1f)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x77CB3C", Offset = "0x77CB3C", VA = "0x77CB3C")]
	public static void DrawCapsule(Vector3 start, Vector3 end, float radius = 1f)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x77CBC0", Offset = "0x77CBC0", VA = "0x77CBC0")]
	public static string MethodsOfObject(object obj, bool includeInfo = false)
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x77CCDC", Offset = "0x77CCDC", VA = "0x77CCDC")]
	public static string MethodsOfType(Type type, bool includeInfo = false)
	{
		return null;
	}
}
[Token(Token = "0x200015E")]
public class LiftLifter : MonoBehaviour
{
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C970", Offset = "0x54C970")]
	private sealed class <_liftStart>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LiftLifter <>4__this;

		[Token(Token = "0x170001AD")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x6C0B9C", Offset = "0x6C0B9C", VA = "0x6C0B9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001775")]
			[Address(RVA = "0x6C0C04", Offset = "0x6C0C04", VA = "0x6C0C04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x6C0514", Offset = "0x6C0514", VA = "0x6C0514")]
		[DebuggerHidden]
		public <_liftStart>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x6C0B34", Offset = "0x6C0B34", VA = "0x6C0B34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x6C0B38", Offset = "0x6C0B38", VA = "0x6C0B38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x6C0BA4", Offset = "0x6C0BA4", VA = "0x6C0BA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C980", Offset = "0x54C980")]
	private sealed class <_haltAnimation>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LiftLifter <>4__this;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 <curPos>5__2;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <newPos>5__3;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <i>5__4;

		[Token(Token = "0x170001AF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x6C0918", Offset = "0x6C0918", VA = "0x6C0918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x6C0980", Offset = "0x6C0980", VA = "0x6C0980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x6C05B0", Offset = "0x6C05B0", VA = "0x6C05B0")]
		[DebuggerHidden]
		public <_haltAnimation>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x6C0708", Offset = "0x6C0708", VA = "0x6C0708", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x6C070C", Offset = "0x6C070C", VA = "0x6C070C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x6C0920", Offset = "0x6C0920", VA = "0x6C0920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C990", Offset = "0x54C990")]
	private sealed class <_liftReset>d__22 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LiftLifter <>4__this;

		[Token(Token = "0x170001B1")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600177F")]
			[Address(RVA = "0x6C0A68", Offset = "0x6C0A68", VA = "0x6C0A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001781")]
			[Address(RVA = "0x6C0AD0", Offset = "0x6C0AD0", VA = "0x6C0AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x6C06C0", Offset = "0x6C06C0", VA = "0x6C06C0")]
		[DebuggerHidden]
		public <_liftReset>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x6C09E4", Offset = "0x6C09E4", VA = "0x6C09E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x6C09E8", Offset = "0x6C09E8", VA = "0x6C09E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x6C0A70", Offset = "0x6C0A70", VA = "0x6C0A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dir;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform traslante;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float haltSpace;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float haltSpeed;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve haltEasing;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] stati;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2[] speed;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float curSpeed;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velo;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool liftOn;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool halting;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int stato;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int idx;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 pos;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 startPos;

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x6C0164", Offset = "0x6C0164", VA = "0x6C0164")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x6C01EC", Offset = "0x6C01EC", VA = "0x6C01EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x6BD524", Offset = "0x6BD524", VA = "0x6BD524")]
	public void LiftStart()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x6C03E0", Offset = "0x6C03E0", VA = "0x6C03E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5553F8", Offset = "0x5553F8")]
	private IEnumerator<float> _liftStart()
	{
		return null;
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x6BED14", Offset = "0x6BED14", VA = "0x6BED14")]
	public void LiftHalt()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x6C0540", Offset = "0x6C0540", VA = "0x6C0540")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55545C", Offset = "0x55545C")]
	private IEnumerator<float> _haltAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x6C05DC", Offset = "0x6C05DC", VA = "0x6C05DC")]
	public void LiftReset()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x6C0650", Offset = "0x6C0650", VA = "0x6C0650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5554C0", Offset = "0x5554C0")]
	private IEnumerator<float> _liftReset()
	{
		return null;
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x6C06EC", Offset = "0x6C06EC", VA = "0x6C06EC")]
	public LiftLifter()
	{
	}
}
[Token(Token = "0x200015F")]
[ExecuteInEditMode]
public class EnableDepthInForwardCamera : MonoBehaviour
{
	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x10184BC", Offset = "0x10184BC", VA = "0x10184BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x1018520", Offset = "0x1018520", VA = "0x1018520")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x1018524", Offset = "0x1018524", VA = "0x1018524")]
	public EnableDepthInForwardCamera()
	{
	}
}
[Token(Token = "0x2000160")]
[ExecuteInEditMode]
public class FoggyLight : MonoBehaviour
{
	[Token(Token = "0x20002A4")]
	public enum BlendModeEnum
	{
		[Token(Token = "0x4001461")]
		Additive,
		[Token(Token = "0x4001462")]
		AlphaBlended
	}

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BlendModeEnum BlendMode;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ApplyTonemap;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Component FogVolumeComponent;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color PointLightColor;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 Position;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F11C", Offset = "0x54F11C")]
	public float PointLightIntensity;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F134", Offset = "0x54F134")]
	public float FoggyLightIntensity;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float PointLightExponent;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float Offset;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F14C", Offset = "0x54F14C")]
	public float IntersectionRange;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int DrawOrder;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool AttatchLight;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Light AttachedLight;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material FoggyLightMaterial;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject FogVolumeContainer;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool InsideFogVolume;

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x10265C8", Offset = "0x10265C8", VA = "0x10265C8")]
	public Material GetMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x10265D0", Offset = "0x10265D0", VA = "0x10265D0")]
	private void CreateMaterial()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x1026724", Offset = "0x1026724", VA = "0x1026724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x1026728", Offset = "0x1026728", VA = "0x1026728")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x102672C", Offset = "0x102672C", VA = "0x102672C")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x1026C60", Offset = "0x1026C60", VA = "0x1026C60")]
	private void BlendValues(BlendModeEnum BlendMode)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x1026D78", Offset = "0x1026D78", VA = "0x1026D78")]
	public FoggyLight()
	{
	}
}
[Token(Token = "0x2000161")]
[ExecuteInEditMode]
public class MatUpdaterLoader : MonoBehaviour
{
	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] mats;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int idx;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int len;

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x7C6948", Offset = "0x7C6948", VA = "0x7C6948")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x7C6A68", Offset = "0x7C6A68", VA = "0x7C6A68")]
	public MatUpdaterLoader()
	{
	}
}
[Token(Token = "0x2000162")]
[ExecuteInEditMode]
public class PoserOLD : MonoBehaviour
{
	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Quaternion[] poseA;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Quaternion[] poseB;

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x80DFB8", Offset = "0x80DFB8", VA = "0x80DFB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x80DFBC", Offset = "0x80DFBC", VA = "0x80DFBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x80DFC0", Offset = "0x80DFC0", VA = "0x80DFC0")]
	public PoserOLD()
	{
	}
}
[Token(Token = "0x2000163")]
[ExecuteInEditMode]
public class CircularBloom : MonoBehaviour
{
	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color PointLightColor;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector4 BloomScale;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F198", Offset = "0x54F198")]
	public float BloomPower;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int DrawOrder;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool refreshMode;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material LightBloomMat;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer objRenderer;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool matCreated;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int BloomColorID;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int BloomPowerID;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int BloomScaleID;

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x76BAE0", Offset = "0x76BAE0", VA = "0x76BAE0")]
	public Material GetMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x76BAE8", Offset = "0x76BAE8", VA = "0x76BAE8")]
	private void CreateMaterial()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x76BC5C", Offset = "0x76BC5C", VA = "0x76BC5C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x76BC60", Offset = "0x76BC60", VA = "0x76BC60")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x76BCE4", Offset = "0x76BCE4", VA = "0x76BCE4")]
	public CircularBloom()
	{
	}
}
[Token(Token = "0x2000164")]
public class DepthTexture : MonoBehaviour
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask casterLayer;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader shader;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Near;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Far;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Size;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int TextureSize;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform maskObj;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F1B0", Offset = "0x54F1B0")]
	public float Bias;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F1CC", Offset = "0x54F1CC")]
	public float Strength;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Matrix4x4 biasMatrix;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Camera depthCamera;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RenderTexture depthTexture;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool calcAll;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool isActive;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool _isActive;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	private bool canLoop;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int _depthVPBiasID;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _depthVID;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int _kkShadowMapID;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _biasID;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _strengthID;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _texmapScaleID;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int _farplaneScaleID;

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x77FE80", Offset = "0x77FE80", VA = "0x77FE80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x7802F8", Offset = "0x7802F8", VA = "0x7802F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x780364", Offset = "0x780364", VA = "0x780364")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x780370", Offset = "0x780370", VA = "0x780370")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x780378", Offset = "0x780378", VA = "0x780378")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x7806E4", Offset = "0x7806E4", VA = "0x7806E4")]
	public DepthTexture()
	{
	}
}
[Token(Token = "0x2000165")]
public class tentacleScript : MonoBehaviour
{
	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Nshapes;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeSlice;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float offset;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float frequency;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float multiplier;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SkinnedMeshRenderer skin;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool notEntered;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool notExited;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool canDo;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] timeSlices;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int idx;

	[Token(Token = "0x4000CE1")]
	private const float pi2 = (float)Math.PI * 2f;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource aImpact;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource aLoop;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource aExit;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource aHurt;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform tentaRing;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 rotation;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float rotval;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float sign;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool initialized;

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xD51ED4", Offset = "0xD51ED4", VA = "0xD51ED4")]
	public void init()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xD5218C", Offset = "0xD5218C", VA = "0xD5218C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xD522EC", Offset = "0xD522EC", VA = "0xD522EC")]
	private float pulse(float tslice, float freq = 0.5f)
	{
		return default(float);
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xD523A0", Offset = "0xD523A0", VA = "0xD523A0")]
	public void EnterTentacle()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xD52430", Offset = "0xD52430", VA = "0xD52430")]
	public void ExitTentacle()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xD520E8", Offset = "0xD520E8", VA = "0xD520E8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xD524AC", Offset = "0xD524AC", VA = "0xD524AC")]
	public void TentacleFirstImpact()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xD524C8", Offset = "0xD524C8", VA = "0xD524C8")]
	public void TentacleAudioloop()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xD524E4", Offset = "0xD524E4", VA = "0xD524E4")]
	public void TentacleAudioStop()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xD52500", Offset = "0xD52500", VA = "0xD52500")]
	public void TentacleAudioHurt()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xD5251C", Offset = "0xD5251C", VA = "0xD5251C")]
	public tentacleScript()
	{
	}
}
[Token(Token = "0x2000166")]
public class ascetest : MonoBehaviour
{
	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int qualeScenario;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LiftLifter ascenso;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool premuto;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float vallo;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float villo;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public tentacleScript tenta;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform[] cosini;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Actor[] attori;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] navi;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FloorManager floor;

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xD46A88", Offset = "0xD46A88", VA = "0xD46A88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xD46B10", Offset = "0xD46B10", VA = "0xD46B10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xD47068", Offset = "0xD47068", VA = "0xD47068")]
	public ascetest()
	{
	}
}
[Token(Token = "0x2000167")]
public class xtool : MonoBehaviour
{
	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xD52994", Offset = "0xD52994", VA = "0xD52994")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xD52A20", Offset = "0xD52A20", VA = "0xD52A20")]
	public xtool()
	{
	}
}
[Token(Token = "0x2000168")]
[ExecuteInEditMode]
public class cancellami_00 : MonoBehaviour
{
	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material coso;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 gino;

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xD47468", Offset = "0xD47468", VA = "0xD47468")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xD474D0", Offset = "0xD474D0", VA = "0xD474D0")]
	public cancellami_00()
	{
	}
}
[Token(Token = "0x2000169")]
[ExecuteInEditMode]
public class orientatore : MonoBehaviour
{
	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform handAnchor;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform snapTransform;

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xD4F71C", Offset = "0xD4F71C", VA = "0xD4F71C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xD4F8E8", Offset = "0xD4F8E8", VA = "0xD4F8E8")]
	public orientatore()
	{
	}
}
[Token(Token = "0x200016A")]
public class provaVibro : MonoBehaviour
{
	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xD51350", Offset = "0xD51350", VA = "0xD51350")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xD513C8", Offset = "0xD513C8", VA = "0xD513C8")]
	public provaVibro()
	{
	}
}
[Token(Token = "0x200016B")]
public class setfovea : MonoBehaviour
{
	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C9A0", Offset = "0x54C9A0")]
	private sealed class <Fix>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001785")]
			[Address(RVA = "0xD51564", Offset = "0xD51564", VA = "0xD51564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001787")]
			[Address(RVA = "0xD515CC", Offset = "0xD515CC", VA = "0xD515CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xD5145C", Offset = "0xD5145C", VA = "0xD5145C")]
		[DebuggerHidden]
		public <Fix>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xD51494", Offset = "0xD51494", VA = "0xD51494", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xD51498", Offset = "0xD51498", VA = "0xD51498", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xD5156C", Offset = "0xD5156C", VA = "0xD5156C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Actor ginoso;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float sts;

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xD513D0", Offset = "0xD513D0", VA = "0xD513D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xD513FC", Offset = "0xD513FC", VA = "0xD513FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555524", Offset = "0x555524")]
	private IEnumerator Fix()
	{
		return null;
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xD51488", Offset = "0xD51488", VA = "0xD51488")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xD5148C", Offset = "0xD5148C", VA = "0xD5148C")]
	public setfovea()
	{
	}
}
[Token(Token = "0x200016C")]
public class showaxys : MonoBehaviour
{
	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float VALORE;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showAxis;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool showPoint;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool showSphere;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color pointColor;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pointScale;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xD515D4", Offset = "0xD515D4", VA = "0xD515D4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xD51888", Offset = "0xD51888", VA = "0xD51888")]
	public showaxys()
	{
	}
}
[Token(Token = "0x200016D")]
public class simplelightact : MonoBehaviour
{
	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float valo;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Actor actoro;

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xD518C8", Offset = "0xD518C8", VA = "0xD518C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xD51928", Offset = "0xD51928", VA = "0xD51928")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xD51A44", Offset = "0xD51A44", VA = "0xD51A44")]
	public simplelightact()
	{
	}
}
[Token(Token = "0x200016E")]
public class symplosionCaster : MonoBehaviour
{
	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject xplosionPrefab;

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xD51D60", Offset = "0xD51D60", VA = "0xD51D60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xD51ECC", Offset = "0xD51ECC", VA = "0xD51ECC")]
	public symplosionCaster()
	{
	}
}
[Token(Token = "0x200016F")]
public class variatore : MonoBehaviour
{
	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light luce;

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xD52544", Offset = "0xD52544", VA = "0xD52544")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xD525DC", Offset = "0xD525DC", VA = "0xD525DC")]
	public variatore()
	{
	}
}
[Token(Token = "0x2000170")]
public class xplosionScript : MonoBehaviour
{
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C9B0", Offset = "0x54C9B0")]
	private sealed class <_ExecuteXplosion>d__5 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public xplosionScript <>4__this;

		[Token(Token = "0x170001B5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0xD528C8", Offset = "0xD528C8", VA = "0xD528C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0xD52930", Offset = "0xD52930", VA = "0xD52930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xD526D0", Offset = "0xD526D0", VA = "0xD526D0")]
		[DebuggerHidden]
		public <_ExecuteXplosion>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xD52710", Offset = "0xD52710", VA = "0xD52710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xD52714", Offset = "0xD52714", VA = "0xD52714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xD528D0", Offset = "0xD528D0", VA = "0xD528D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float AnimationDelay;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource Audio;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animation Anim;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject GObj;

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xD525E4", Offset = "0xD525E4", VA = "0xD525E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xD52660", Offset = "0xD52660", VA = "0xD52660")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555588", Offset = "0x555588")]
	private IEnumerator<float> _ExecuteXplosion()
	{
		return null;
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xD526FC", Offset = "0xD526FC", VA = "0xD526FC")]
	public xplosionScript()
	{
	}
}
namespace DigitalRuby.ThunderAndLightning
{
	[Token(Token = "0x2000171")]
	public enum LightningBoltQualitySetting
	{
		[Token(Token = "0x4000D0A")]
		UseScript,
		[Token(Token = "0x4000D0B")]
		LimitToQualitySetting
	}
	[Token(Token = "0x2000172")]
	public enum CameraMode
	{
		[Token(Token = "0x4000D0D")]
		Auto,
		[Token(Token = "0x4000D0E")]
		Perspective,
		[Token(Token = "0x4000D0F")]
		OrthographicXY,
		[Token(Token = "0x4000D10")]
		OrthographicXZ,
		[Token(Token = "0x4000D11")]
		Unknown
	}
	[Token(Token = "0x2000173")]
	public enum LightningCustomTransformState
	{
		[Token(Token = "0x4000D13")]
		Started,
		[Token(Token = "0x4000D14")]
		Executing,
		[Token(Token = "0x4000D15")]
		Ended
	}
	[Token(Token = "0x2000174")]
	public class LightningCustomTransformStateInfo
	{
		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F224", Offset = "0x54F224")]
		private LightningCustomTransformState <State>k__BackingField;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F234", Offset = "0x54F234")]
		private LightningBoltParameters <Parameters>k__BackingField;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 BoltStartPosition;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 BoltEndPosition;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Transform;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform StartTransform;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform EndTransform;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public object UserInfo;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<LightningCustomTransformStateInfo> cache;

		[Token(Token = "0x1700003B")]
		public LightningCustomTransformState State
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0xA840E4", Offset = "0xA840E4", VA = "0xA840E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5555EC", Offset = "0x5555EC")]
			get
			{
				return default(LightningCustomTransformState);
			}
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0xA840EC", Offset = "0xA840EC", VA = "0xA840EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5555FC", Offset = "0x5555FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public LightningBoltParameters Parameters
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0xA840F4", Offset = "0xA840F4", VA = "0xA840F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55560C", Offset = "0x55560C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0xA840FC", Offset = "0xA840FC", VA = "0xA840FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55561C", Offset = "0x55561C")]
			set
			{
			}
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xA7D298", Offset = "0xA7D298", VA = "0xA7D298")]
		public static LightningCustomTransformStateInfo GetOrCreateStateInfo()
		{
			return null;
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xA7D398", Offset = "0xA7D398", VA = "0xA7D398")]
		public static void ReturnStateInfoToCache(LightningCustomTransformStateInfo info)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xA84104", Offset = "0xA84104", VA = "0xA84104")]
		public LightningCustomTransformStateInfo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000175")]
	public class LightningCustomTransformDelegate : UnityEvent<LightningCustomTransformStateInfo>
	{
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xA84094", Offset = "0xA84094", VA = "0xA84094")]
		public LightningCustomTransformDelegate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class LightningLightParameters
	{
		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F244", Offset = "0x54F244")]
		[HideInInspector]
		public LightRenderMode RenderMode;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F290", Offset = "0x54F290")]
		public Color LightColor;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F2C8", Offset = "0x54F2C8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F2C8", Offset = "0x54F2C8")]
		public float LightPercent;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F31C", Offset = "0x54F31C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F31C", Offset = "0x54F31C")]
		public float LightShadowPercent;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F370", Offset = "0x54F370")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F370", Offset = "0x54F370")]
		public float LightIntensity;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F3C4", Offset = "0x54F3C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F3C4", Offset = "0x54F3C4")]
		public float BounceIntensity;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F418", Offset = "0x54F418")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F418", Offset = "0x54F418")]
		public float ShadowStrength;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F46C", Offset = "0x54F46C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F46C", Offset = "0x54F46C")]
		public float ShadowBias;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F4C0", Offset = "0x54F4C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F4C0", Offset = "0x54F4C0")]
		public float ShadowNormalBias;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F514", Offset = "0x54F514")]
		public float LightRange;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F54C", Offset = "0x54F54C")]
		public LayerMask CullingMask;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F584", Offset = "0x54F584")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F584", Offset = "0x54F584")]
		public float OrthographicOffset;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F5E0", Offset = "0x54F5E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F5E0", Offset = "0x54F5E0")]
		public float FadeInMultiplier;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F634", Offset = "0x54F634")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F634", Offset = "0x54F634")]
		public float FadeFullyLitMultiplier;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F688", Offset = "0x54F688")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F688", Offset = "0x54F688")]
		public float FadeOutMultiplier;

		[Token(Token = "0x1700003D")]
		public bool HasLight
		{
			[Token(Token = "0x6000EC4")]
			[Address(RVA = "0xA85D90", Offset = "0xA85D90", VA = "0xA85D90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xA85DDC", Offset = "0xA85DDC", VA = "0xA85DDC")]
		public LightningLightParameters()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000177")]
	public sealed class LightningBoltParameters
	{
		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int randomSeed;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<LightningBoltParameters> cache;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int generationWhereForksStop;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int forkednessCalculated;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal LightningBoltQualitySetting quality;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float delaySeconds;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int maxLights;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Scale;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Dictionary<int, LightningQualityMaximum> QualityMaximums;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LightningGenerator Generator;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 Start;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 End;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 StartVariance;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 EndVariance;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action<LightningCustomTransformStateInfo> CustomTransform;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int generations;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float LifeTime;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float Delay;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public RangeOfFloats DelayRange;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float ChaosFactor;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float ChaosFactorForks;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float TrunkWidth;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float EndWidthMultiplier;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float Intensity;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float GlowIntensity;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float GlowWidthMultiplier;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float Forkedness;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int GenerationWhereForksStopSubtractor;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color32 Color;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Color32 MainTrunkTintColor;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private System.Random random;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private System.Random currentRandom;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private System.Random randomOverride;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float FadePercent;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float FadeInMultiplier;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float FadeFullyLitMultiplier;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float FadeOutMultiplier;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float growthMultiplier;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float ForkLengthMultiplier;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float ForkLengthVariance;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float ForkEndWidthMultiplier;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public LightningLightParameters LightParameters;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F6DC", Offset = "0x54F6DC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int SmoothingFactor;

		[Token(Token = "0x1700003E")]
		public int Generations
		{
			[Token(Token = "0x6000EC8")]
			[Address(RVA = "0xA7EE1C", Offset = "0xA7EE1C", VA = "0xA7EE1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xA7EE24", Offset = "0xA7EE24", VA = "0xA7EE24")]
			set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public System.Random Random
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0xA7EFD0", Offset = "0xA7EFD0", VA = "0xA7EFD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0xA7EFD8", Offset = "0xA7EFD8", VA = "0xA7EFD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public System.Random RandomOverride
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0xA7F004", Offset = "0xA7F004", VA = "0xA7F004")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0xA7F00C", Offset = "0xA7F00C", VA = "0xA7F00C")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public float GrowthMultiplier
		{
			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0xA7F020", Offset = "0xA7F020", VA = "0xA7F020")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0xA7F028", Offset = "0xA7F028", VA = "0xA7F028")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0xA7F0B0", Offset = "0xA7F0B0", VA = "0xA7F0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55562C", Offset = "0x55562C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0xA7F0B8", Offset = "0xA7F0B8", VA = "0xA7F0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55563C", Offset = "0x55563C")]
			set
			{
			}
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xA7E970", Offset = "0xA7E970", VA = "0xA7E970")]
		static LightningBoltParameters()
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xA7ECB4", Offset = "0xA7ECB4", VA = "0xA7ECB4")]
		public LightningBoltParameters()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xA7F0C0", Offset = "0xA7F0C0", VA = "0xA7F0C0")]
		public float ForkMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xA7F104", Offset = "0xA7F104", VA = "0xA7F104")]
		public Vector3 ApplyVariance(Vector3 pos, Vector3 variance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xA7F204", Offset = "0xA7F204", VA = "0xA7F204")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xA7F2AC", Offset = "0xA7F2AC", VA = "0xA7F2AC")]
		public static LightningBoltParameters GetOrCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xA7D438", Offset = "0xA7D438", VA = "0xA7D438")]
		public static void ReturnParametersToCache(LightningBoltParameters p)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class LightningBoltSegmentGroup
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float LineWidth;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int StartIndex;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Generation;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Delay;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float PeakStart;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float PeakEnd;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LifeTime;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float EndWidthMultiplier;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color32 Color;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly List<LightningBoltSegment> Segments;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly List<Light> Lights;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LightningLightParameters LightParameters;

		[Token(Token = "0x17000043")]
		public int SegmentCount
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0xA82FBC", Offset = "0xA82FBC", VA = "0xA82FBC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xA83014", Offset = "0xA83014", VA = "0xA83014")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xA83090", Offset = "0xA83090", VA = "0xA83090")]
		public LightningBoltSegmentGroup()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public struct LightningBoltSegment
	{
		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Start;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 End;

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x5C50A4", Offset = "0x5C50A4", VA = "0x5C50A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200017A")]
	public class LightningQualityMaximum
	{
		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F6EC", Offset = "0x54F6EC")]
		private int <MaximumGenerations>k__BackingField;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F6FC", Offset = "0x54F6FC")]
		private float <MaximumLightPercent>k__BackingField;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F70C", Offset = "0x54F70C")]
		private float <MaximumShadowPercent>k__BackingField;

		[Token(Token = "0x17000044")]
		public int MaximumGenerations
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xA8823C", Offset = "0xA8823C", VA = "0xA8823C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55564C", Offset = "0x55564C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0xA88244", Offset = "0xA88244", VA = "0xA88244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55565C", Offset = "0x55565C")]
			set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public float MaximumLightPercent
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xA8824C", Offset = "0xA8824C", VA = "0xA8824C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55566C", Offset = "0x55566C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EDE")]
			[Address(RVA = "0xA88254", Offset = "0xA88254", VA = "0xA88254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55567C", Offset = "0x55567C")]
			set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public float MaximumShadowPercent
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0xA8825C", Offset = "0xA8825C", VA = "0xA8825C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55568C", Offset = "0x55568C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0xA88264", Offset = "0xA88264", VA = "0xA88264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55569C", Offset = "0x55569C")]
			set
			{
			}
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xA7ECAC", Offset = "0xA7ECAC", VA = "0xA7ECAC")]
		public LightningQualityMaximum()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class LightningBoltDependencies
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject Parent;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material LightningMaterialMesh;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material LightningMaterialMeshNoGlow;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem OriginParticleSystem;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem DestParticleSystem;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 CameraPos;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool CameraIsOrthographic;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CameraMode CameraMode;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool UseWorldSpace;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LevelOfDetailDistance;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string SortLayerName;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int SortOrderInLayer;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ICollection<LightningBoltParameters> Parameters;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LightningThreadState ThreadState;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Func<IEnumerator, Coroutine> StartCoroutine;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action<Light> LightAdded;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action<Light> LightRemoved;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Action<LightningBolt> AddActiveBolt;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Action<LightningBoltDependencies> ReturnToCache;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Action<LightningBoltParameters, Vector3, Vector3> LightningBoltStarted;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Action<LightningBoltParameters, Vector3, Vector3> LightningBoltEnded;

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xA7E968", Offset = "0xA7E968", VA = "0xA7E968")]
		public LightningBoltDependencies()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class LightningBolt
	{
		[Token(Token = "0x20002A7")]
		public class LineRendererMesh
		{
			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x553560", Offset = "0x553560")]
			private GameObject <GameObject>k__BackingField;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x553570", Offset = "0x553570")]
			private int <Tag>k__BackingField;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x553580", Offset = "0x553580")]
			private Action<LightningCustomTransformStateInfo> <CustomTransform>k__BackingField;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x553590", Offset = "0x553590")]
			private Transform <Transform>k__BackingField;

			[Token(Token = "0x400146C")]
			private const int defaultListCapacity = 2048;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Vector2 uv1;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static readonly Vector2 uv2;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private static readonly Vector2 uv3;

			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private static readonly Vector2 uv4;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly List<int> indices;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private readonly List<Vector3> vertices;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private readonly List<Vector4> lineDirs;

			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private readonly List<Color32> colors;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private readonly List<Vector3> ends;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private readonly List<Vector4> texCoordsAndGlowModifiers;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private readonly List<Vector4> fadeLifetimes;

			[Token(Token = "0x4001478")]
			private const int boundsPadder = 1000000000;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int currentBoundsMinX;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int currentBoundsMinY;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int currentBoundsMinZ;

			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private int currentBoundsMaxX;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int currentBoundsMaxY;

			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private int currentBoundsMaxZ;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Mesh mesh;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private MeshFilter meshFilterGlow;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private MeshFilter meshFilterBolt;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private MeshRenderer meshRendererGlow;

			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private MeshRenderer meshRendererBolt;

			[Token(Token = "0x170001B7")]
			public GameObject GameObject
			{
				[Token(Token = "0x600178E")]
				[Address(RVA = "0xA7D584", Offset = "0xA7D584", VA = "0xA7D584")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558700", Offset = "0x558700")]
				get
				{
					return null;
				}
				[Token(Token = "0x600178F")]
				[Address(RVA = "0xA7D58C", Offset = "0xA7D58C", VA = "0xA7D58C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558710", Offset = "0x558710")]
				private set
				{
				}
			}

			[Token(Token = "0x170001B8")]
			public Material MaterialGlow
			{
				[Token(Token = "0x6001790")]
				[Address(RVA = "0xA7D594", Offset = "0xA7D594", VA = "0xA7D594")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001791")]
				[Address(RVA = "0xA7D5B0", Offset = "0xA7D5B0", VA = "0xA7D5B0")]
				set
				{
				}
			}

			[Token(Token = "0x170001B9")]
			public Material MaterialBolt
			{
				[Token(Token = "0x6001792")]
				[Address(RVA = "0xA7D5CC", Offset = "0xA7D5CC", VA = "0xA7D5CC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001793")]
				[Address(RVA = "0xA7D5E8", Offset = "0xA7D5E8", VA = "0xA7D5E8")]
				set
				{
				}
			}

			[Token(Token = "0x170001BA")]
			public MeshRenderer MeshRendererGlow
			{
				[Token(Token = "0x6001794")]
				[Address(RVA = "0xA7D604", Offset = "0xA7D604", VA = "0xA7D604")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BB")]
			public MeshRenderer MeshRendererBolt
			{
				[Token(Token = "0x6001795")]
				[Address(RVA = "0xA7D60C", Offset = "0xA7D60C", VA = "0xA7D60C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BC")]
			public int Tag
			{
				[Token(Token = "0x6001796")]
				[Address(RVA = "0xA7D614", Offset = "0xA7D614", VA = "0xA7D614")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558720", Offset = "0x558720")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001797")]
				[Address(RVA = "0xA7D61C", Offset = "0xA7D61C", VA = "0xA7D61C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558730", Offset = "0x558730")]
				set
				{
				}
			}

			[Token(Token = "0x170001BD")]
			public Action<LightningCustomTransformStateInfo> CustomTransform
			{
				[Token(Token = "0x6001798")]
				[Address(RVA = "0xA7D624", Offset = "0xA7D624", VA = "0xA7D624")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558740", Offset = "0x558740")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001799")]
				[Address(RVA = "0xA7D62C", Offset = "0xA7D62C", VA = "0xA7D62C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558750", Offset = "0x558750")]
				set
				{
				}
			}

			[Token(Token = "0x170001BE")]
			public Transform Transform
			{
				[Token(Token = "0x600179A")]
				[Address(RVA = "0xA7D634", Offset = "0xA7D634", VA = "0xA7D634")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558760", Offset = "0x558760")]
				get
				{
					return null;
				}
				[Token(Token = "0x600179B")]
				[Address(RVA = "0xA7D63C", Offset = "0xA7D63C", VA = "0xA7D63C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558770", Offset = "0x558770")]
				private set
				{
				}
			}

			[Token(Token = "0x170001BF")]
			public bool Empty
			{
				[Token(Token = "0x600179C")]
				[Address(RVA = "0xA7D644", Offset = "0xA7D644", VA = "0xA7D644")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600179D")]
			[Address(RVA = "0xA7D69C", Offset = "0xA7D69C", VA = "0xA7D69C")]
			public LineRendererMesh()
			{
			}

			[Token(Token = "0x600179E")]
			[Address(RVA = "0xA7DAA0", Offset = "0xA7DAA0", VA = "0xA7DAA0")]
			public void PopulateMesh()
			{
			}

			[Token(Token = "0x600179F")]
			[Address(RVA = "0xA7DD68", Offset = "0xA7DD68", VA = "0xA7DD68")]
			public bool PrepareForLines(int lineCount)
			{
				return default(bool);
			}

			[Token(Token = "0x60017A0")]
			[Address(RVA = "0xA7DDD4", Offset = "0xA7DDD4", VA = "0xA7DDD4")]
			public void BeginLine(Vector3 start, Vector3 end, float radius, Color32 color, float colorIntensity, Vector4 fadeLifeTime, float glowWidthModifier, float glowIntensity)
			{
			}

			[Token(Token = "0x60017A1")]
			[Address(RVA = "0xA7E398", Offset = "0xA7E398", VA = "0xA7E398")]
			public void AppendLine(Vector3 start, Vector3 end, float radius, Color32 color, float colorIntensity, Vector4 fadeLifeTime, float glowWidthModifier, float glowIntensity)
			{
			}

			[Token(Token = "0x60017A2")]
			[Address(RVA = "0xA7E580", Offset = "0xA7E580", VA = "0xA7E580")]
			public void Reset()
			{
			}

			[Token(Token = "0x60017A3")]
			[Address(RVA = "0xA7DB10", Offset = "0xA7DB10", VA = "0xA7DB10")]
			private void PopulateMeshInternal()
			{
			}

			[Token(Token = "0x60017A4")]
			[Address(RVA = "0xA7E6B0", Offset = "0xA7E6B0", VA = "0xA7E6B0")]
			private void UpdateBounds(ref Vector3 point1, ref Vector3 point2)
			{
			}

			[Token(Token = "0x60017A5")]
			[Address(RVA = "0xA7E78C", Offset = "0xA7E78C", VA = "0xA7E78C")]
			private void AddIndices()
			{
			}

			[Token(Token = "0x60017A6")]
			[Address(RVA = "0xA7DF44", Offset = "0xA7DF44", VA = "0xA7DF44")]
			private void AppendLineInternal(ref Vector3 start, ref Vector3 end, ref Vector4 dir, ref Vector4 dirPrev1, ref Vector4 dirPrev2, Color32 color, float colorIntensity, ref Vector4 fadeLifeTime, float glowWidthModifier, float glowIntensity)
			{
			}
		}

		[Token(Token = "0x20002A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C9C0", Offset = "0x54C9C0")]
		private sealed class <EnableLastRendererCoRoutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightningBolt <>4__this;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private LineRendererMesh <lineRenderer>5__2;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <tag>5__3;

			[Token(Token = "0x170001C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017AB")]
				[Address(RVA = "0xA7CB6C", Offset = "0xA7CB6C", VA = "0xA7CB6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017AD")]
				[Address(RVA = "0xA7CBD4", Offset = "0xA7CBD4", VA = "0xA7CBD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xA7CA04", Offset = "0xA7CA04", VA = "0xA7CA04")]
			[DebuggerHidden]
			public <EnableLastRendererCoRoutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60017A9")]
			[Address(RVA = "0xA7CA30", Offset = "0xA7CA30", VA = "0xA7CA30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017AA")]
			[Address(RVA = "0xA7CA34", Offset = "0xA7CA34", VA = "0xA7CA34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xA7CB74", Offset = "0xA7CB74", VA = "0xA7CB74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C9D0", Offset = "0x54C9D0")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightningBolt <>4__this;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LineRendererMesh currentLineRenderer;

			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xA7C718", Offset = "0xA7C718", VA = "0xA7C718")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xA7C720", Offset = "0xA7C720", VA = "0xA7C720")]
			internal void <RenderGroup>b__0(bool inDestroy)
			{
			}
		}

		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C9E0", Offset = "0x54C9E0")]
		private sealed class <NotifyBolt>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightningBoltParameters p;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LightningBoltDependencies dependencies;

			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 start;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 end;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform transform;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <lifeTime>5__2;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private LightningCustomTransformStateInfo <state>5__3;

			[Token(Token = "0x170001C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017B3")]
				[Address(RVA = "0xA7D514", Offset = "0xA7D514", VA = "0xA7D514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017B5")]
				[Address(RVA = "0xA7D57C", Offset = "0xA7D57C", VA = "0xA7D57C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xA7CEB0", Offset = "0xA7CEB0", VA = "0xA7CEB0")]
			[DebuggerHidden]
			public <NotifyBolt>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x60017B1")]
			[Address(RVA = "0xA7CEDC", Offset = "0xA7CEDC", VA = "0xA7CEDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017B2")]
			[Address(RVA = "0xA7CEE0", Offset = "0xA7CEE0", VA = "0xA7CEE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xA7D51C", Offset = "0xA7D51C", VA = "0xA7D51C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54C9F0", Offset = "0x54C9F0")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightningBoltDependencies dependenciesRef;

			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xA7C768", Offset = "0xA7C768", VA = "0xA7C768")]
			public <>c__DisplayClass44_0()
			{
			}
		}

		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA00", Offset = "0x54CA00")]
		private sealed class <>c__DisplayClass44_1
		{
			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightningBoltParameters parameters;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass44_0 CS$<>8__locals1;

			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xA7C770", Offset = "0xA7C770", VA = "0xA7C770")]
			public <>c__DisplayClass44_1()
			{
			}
		}

		[Token(Token = "0x20002AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA10", Offset = "0x54CA10")]
		private sealed class <>c__DisplayClass44_2
		{
			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass44_1 CS$<>8__locals2;

			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xA7C778", Offset = "0xA7C778", VA = "0xA7C778")]
			public <>c__DisplayClass44_2()
			{
			}

			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xA7C780", Offset = "0xA7C780", VA = "0xA7C780")]
			internal void <ProcessAllLightningParameters>b__0(bool inDestroy)
			{
			}
		}

		[Token(Token = "0x20002AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA20", Offset = "0x54CA20")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LightningBolt <>4__this;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 start;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 end;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LightningBoltParameters parameters;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LightningLightParameters lp;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int startGroupIndex;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public LightningBoltQualitySetting quality;

			[Token(Token = "0x60017BA")]
			[Address(RVA = "0xA7C8A0", Offset = "0xA7C8A0", VA = "0xA7C8A0")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xA7C8A8", Offset = "0xA7C8A8", VA = "0xA7C8A8")]
			internal void <RenderLightningBolt>b__0(bool inDestroy)
			{
			}
		}

		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA30", Offset = "0x54CA30")]
		private sealed class <>c__DisplayClass48_1
		{
			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LineRendererMesh currentLineRenderer;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass48_0 CS$<>8__locals1;

			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xA7C9A4", Offset = "0xA7C9A4", VA = "0xA7C9A4")]
			public <>c__DisplayClass48_1()
			{
			}

			[Token(Token = "0x60017BD")]
			[Address(RVA = "0xA7C9AC", Offset = "0xA7C9AC", VA = "0xA7C9AC")]
			internal void <RenderLightningBolt>b__1(bool inDestroy)
			{
			}
		}

		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA40", Offset = "0x54CA40")]
		private sealed class <GenerateParticleCoRoutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ParticleSystem p;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 pos;

			[Token(Token = "0x170001C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017C1")]
				[Address(RVA = "0xA7CE40", Offset = "0xA7CE40", VA = "0xA7CE40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017C3")]
				[Address(RVA = "0xA7CEA8", Offset = "0xA7CEA8", VA = "0xA7CEA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017BE")]
			[Address(RVA = "0xA7CBDC", Offset = "0xA7CBDC", VA = "0xA7CBDC")]
			[DebuggerHidden]
			public <GenerateParticleCoRoutine>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x60017BF")]
			[Address(RVA = "0xA7CC08", Offset = "0xA7CC08", VA = "0xA7CC08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017C0")]
			[Address(RVA = "0xA7CC0C", Offset = "0xA7CC0C", VA = "0xA7CC0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xA7CE48", Offset = "0xA7CE48", VA = "0xA7CE48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MaximumLightCount;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int MaximumLightsPerBatch;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F71C", Offset = "0x54F71C")]
		private float <MinimumDelay>k__BackingField;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F72C", Offset = "0x54F72C")]
		private bool <HasGlow>k__BackingField;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54F73C", Offset = "0x54F73C")]
		private CameraMode <CameraMode>k__BackingField;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DateTime startTimeOffset;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LightningBoltDependencies dependencies;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float elapsedTime;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lifeTime;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float maxLifeTime;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool hasLight;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float timeSinceLevelLoad;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<LightningBoltSegmentGroup> segmentGroups;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly List<LightningBoltSegmentGroup> segmentGroupsWithLight;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<LineRendererMesh> activeLineRenderers;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lightCount;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<LineRendererMesh> lineRendererCache;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<LightningBoltSegmentGroup> groupCache;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<Light> lightCache;

		[Token(Token = "0x17000047")]
		public float MinimumDelay
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x780BD0", Offset = "0x780BD0", VA = "0x780BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5556AC", Offset = "0x5556AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x780BD8", Offset = "0x780BD8", VA = "0x780BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5556BC", Offset = "0x5556BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public bool HasGlow
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x780BE0", Offset = "0x780BE0", VA = "0x780BE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5556CC", Offset = "0x5556CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x780BE8", Offset = "0x780BE8", VA = "0x780BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5556DC", Offset = "0x5556DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public bool IsActive
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x780BF4", Offset = "0x780BF4", VA = "0x780BF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004A")]
		public CameraMode CameraMode
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x780C04", Offset = "0x780C04", VA = "0x780C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5556EC", Offset = "0x5556EC")]
			get
			{
				return default(CameraMode);
			}
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x780C0C", Offset = "0x780C0C", VA = "0x780C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5556FC", Offset = "0x5556FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x780C14", Offset = "0x780C14", VA = "0x780C14")]
		public LightningBolt()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x780CCC", Offset = "0x780CCC", VA = "0x780CCC")]
		public void SetupLightningBolt(LightningBoltDependencies dependencies)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x781C04", Offset = "0x781C04", VA = "0x781C04")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x781DF4", Offset = "0x781DF4", VA = "0x781DF4")]
		public void Cleanup()
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x7824E4", Offset = "0x7824E4", VA = "0x7824E4")]
		public LightningBoltSegmentGroup AddGroup()
		{
			return null;
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x782718", Offset = "0x782718", VA = "0x782718")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x7823C4", Offset = "0x7823C4", VA = "0x7823C4")]
		private void CleanupLight(Light l)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x782AE0", Offset = "0x782AE0", VA = "0x782AE0")]
		private void EnableLineRenderer(LineRendererMesh lineRenderer, int tag)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x782B9C", Offset = "0x782B9C", VA = "0x782B9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55570C", Offset = "0x55570C")]
		private IEnumerator EnableLastRendererCoRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x782C0C", Offset = "0x782C0C", VA = "0x782C0C")]
		private LineRendererMesh GetOrCreateLineRenderer()
		{
			return null;
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x783074", Offset = "0x783074", VA = "0x783074")]
		private void RenderGroup(LightningBoltSegmentGroup group, LightningBoltParameters p)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x7835E4", Offset = "0x7835E4", VA = "0x7835E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555770", Offset = "0x555770")]
		private static IEnumerator NotifyBolt(LightningBoltDependencies dependencies, LightningBoltParameters p, Transform transform, Vector3 start, Vector3 end)
		{
			return null;
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x7836A4", Offset = "0x7836A4", VA = "0x7836A4")]
		private void ProcessParameters(LightningBoltParameters p, RangeOfFloats delay, LightningBoltDependencies depends)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x781248", Offset = "0x781248", VA = "0x781248")]
		private void ProcessAllLightningParameters()
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x784028", Offset = "0x784028", VA = "0x784028")]
		private void EnableCurrentLineRendererFromThread(bool inDestroy)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x783518", Offset = "0x783518", VA = "0x783518")]
		private void EnableCurrentLineRenderer()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x784128", Offset = "0x784128", VA = "0x784128")]
		private void RenderParticleSystems(Vector3 start, Vector3 end, float trunkWidth, float lifeTime, float delaySeconds)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x783A9C", Offset = "0x783A9C", VA = "0x783A9C")]
		private Transform RenderLightningBolt(LightningBoltQualitySetting quality, int generations, int startGroupIndex, int endGroupIndex, LightningBoltParameters parameters)
		{
			return null;
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x78437C", Offset = "0x78437C", VA = "0x78437C")]
		private void CreateLightsForGroup(LightningBoltSegmentGroup group, LightningLightParameters lp, LightningBoltQualitySetting quality, int maxLights)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x7846D8", Offset = "0x7846D8", VA = "0x7846D8")]
		private bool AddLightToGroup(LightningBoltSegmentGroup group, LightningLightParameters lp, int segmentIndex, int nthLight, int nthShadows, ref int maxLights, ref int nthShadowCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x784990", Offset = "0x784990", VA = "0x784990")]
		private Light GetOrCreateLight(LightningLightParameters lp)
		{
			return null;
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x784C50", Offset = "0x784C50", VA = "0x784C50")]
		private void UpdateLight(LightningLightParameters lp, IEnumerable<Light> lights, float delay, float peakStart, float peakEnd, float lifeTime)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x781CF0", Offset = "0x781CF0", VA = "0x781CF0")]
		private void UpdateLights()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x7842E0", Offset = "0x7842E0", VA = "0x7842E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5557D4", Offset = "0x5557D4")]
		private IEnumerator GenerateParticleCoRoutine(ParticleSystem p, Vector3 pos, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x780F1C", Offset = "0x780F1C", VA = "0x780F1C")]
		private void CheckForGlow(IEnumerable<LightningBoltParameters> parameters)
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class LightningThreadState
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Thread lightningThread;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AutoResetEvent lightningThreadEvent;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Queue<Action> actionsForBackgroundThread;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Queue<KeyValuePair<Action<bool>, ManualResetEvent>> actionsForMainThread;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool Running;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool isTerminating;

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xA89E38", Offset = "0xA89E38", VA = "0xA89E38")]
		private bool UpdateMainThreadActionsOnce(bool inDestroy)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xA8A038", Offset = "0xA8A038", VA = "0xA8A038")]
		private void BackgroundThreadMethod()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xA821D8", Offset = "0xA821D8", VA = "0xA821D8")]
		public LightningThreadState()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xA82D4C", Offset = "0xA82D4C", VA = "0xA82D4C")]
		public void TerminateAndWaitForEnd(bool inDestroy)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xA82428", Offset = "0xA82428", VA = "0xA82428")]
		public void UpdateMainThreadActions()
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xA8A354", Offset = "0xA8A354", VA = "0xA8A354")]
		public bool AddActionForMainThread(Action<bool> action, bool waitForAction = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xA8A4B8", Offset = "0xA8A4B8", VA = "0xA8A4B8")]
		public bool AddActionForBackgroundThread(Action action)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017E")]
	public abstract class LightningBoltPathScriptBase : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54F74C", Offset = "0x54F74C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F74C", Offset = "0x54F74C")]
		public List<GameObject> LightningPath;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private readonly List<GameObject> currentPathObjects;

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xA7F6AC", Offset = "0xA7F6AC", VA = "0xA7F6AC")]
		protected List<GameObject> GetCurrentPathObjects()
		{
			return null;
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xA7F94C", Offset = "0xA7F94C", VA = "0xA7F94C", Slot = "9")]
		protected override LightningBoltParameters OnCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xA7F8E0", Offset = "0xA7F8E0", VA = "0xA7F8E0")]
		protected LightningBoltPathScriptBase()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class LightningBoltPathScript : LightningBoltPathScriptBase
	{
		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F7AC", Offset = "0x54F7AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F7AC", Offset = "0x54F7AC")]
		public float Speed;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F804", Offset = "0x54F804")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0x54F804", Offset = "0x54F804")]
		public RangeOfFloats SpeedIntervalRange;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F870", Offset = "0x54F870")]
		public bool Repeat;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private float nextInterval;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private int nextIndex;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3? lastPoint;

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xA7F3A8", Offset = "0xA7F3A8", VA = "0xA7F3A8", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xA7F8A4", Offset = "0xA7F8A4", VA = "0xA7F8A4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xA7F8C0", Offset = "0xA7F8C0", VA = "0xA7F8C0")]
		public LightningBoltPathScript()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public abstract class LightningBoltPrefabScriptBase : LightningBoltScript
	{
		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private readonly List<LightningBoltParameters> batchParameters;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly System.Random random;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54F8A8", Offset = "0x54F8A8")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0x54F8A8", Offset = "0x54F8A8")]
		public RangeOfFloats IntervalRange;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0x54F918", Offset = "0x54F918")]
		public RangeOfIntegers CountRange;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54F95C", Offset = "0x54F95C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54F95C", Offset = "0x54F95C")]
		public float CountProbabilityModifier;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public RangeOfFloats DelayRange;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0x54F9B0", Offset = "0x54F9B0")]
		public RangeOfFloats DurationRange;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x54F9F4", Offset = "0x54F9F4")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0x54F9F4", Offset = "0x54F9F4")]
		public RangeOfFloats TrunkWidthRange;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FA64", Offset = "0x54FA64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FA64", Offset = "0x54FA64")]
		public float LifeTime;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FABC", Offset = "0x54FABC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FABC", Offset = "0x54FABC")]
		public int Generations;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FB10", Offset = "0x54FB10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FB10", Offset = "0x54FB10")]
		public float ChaosFactor;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FB64", Offset = "0x54FB64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FB64", Offset = "0x54FB64")]
		public float ChaosFactorForks;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FBB8", Offset = "0x54FBB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FBB8", Offset = "0x54FBB8")]
		public float Intensity;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FC0C", Offset = "0x54FC0C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FC0C", Offset = "0x54FC0C")]
		public float GlowIntensity;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FC60", Offset = "0x54FC60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FC60", Offset = "0x54FC60")]
		public float GlowWidthMultiplier;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FCB8", Offset = "0x54FCB8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FCB8", Offset = "0x54FCB8")]
		public float FadePercent;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FD0C", Offset = "0x54FD0C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FD0C", Offset = "0x54FD0C")]
		public float FadeInMultiplier;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FD60", Offset = "0x54FD60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FD60", Offset = "0x54FD60")]
		public float FadeFullyLitMultiplier;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FDB4", Offset = "0x54FDB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FDB4", Offset = "0x54FDB4")]
		public float FadeOutMultiplier;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FE08", Offset = "0x54FE08")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FE08", Offset = "0x54FE08")]
		public float GrowthMultiplier;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FE5C", Offset = "0x54FE5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FE5C", Offset = "0x54FE5C")]
		public float EndWidthMultiplier;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FEB0", Offset = "0x54FEB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FEB0", Offset = "0x54FEB0")]
		public float Forkedness;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FF04", Offset = "0x54FF04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FF04", Offset = "0x54FF04")]
		public float ForkLengthMultiplier;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FF58", Offset = "0x54FF58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FF58", Offset = "0x54FF58")]
		public float ForkLengthVariance;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x54FFAC", Offset = "0x54FFAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x54FFAC", Offset = "0x54FFAC")]
		public float ForkEndWidthMultiplier;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x550000", Offset = "0x550000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550000", Offset = "0x550000")]
		public LightningLightParameters LightParameters;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550060", Offset = "0x550060")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x550060", Offset = "0x550060")]
		public int MaximumLightsPerBatch;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5500B8", Offset = "0x5500B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5500B8", Offset = "0x5500B8")]
		public bool ManualMode;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550118", Offset = "0x550118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x550118", Offset = "0x550118")]
		public float AutomaticModeSeconds;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x550170", Offset = "0x550170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550170", Offset = "0x550170")]
		public LightningCustomTransformDelegate CustomTransformHandler;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5501D0", Offset = "0x5501D0")]
		private System.Random <RandomOverride>k__BackingField;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float nextLightningTimestamp;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float lifeTimeRemaining;

		[Token(Token = "0x1700004B")]
		public System.Random RandomOverride
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0xA7FCC0", Offset = "0xA7FCC0", VA = "0xA7FCC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555838", Offset = "0x555838")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xA7FCC8", Offset = "0xA7FCC8", VA = "0xA7FCC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555848", Offset = "0x555848")]
			set
			{
			}
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xA7FCD0", Offset = "0xA7FCD0", VA = "0xA7FCD0")]
		private void CalculateNextLightningTimestamp(float offset)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xA7FD28", Offset = "0xA7FD28", VA = "0xA7FD28")]
		private void CustomTransform(LightningCustomTransformStateInfo state)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xA7FD9C", Offset = "0xA7FD9C", VA = "0xA7FD9C")]
		private void CallLightning()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xA7FDB0", Offset = "0xA7FDB0", VA = "0xA7FDB0")]
		private void CallLightning(Vector3? start, Vector3? end)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xA80000", Offset = "0xA80000", VA = "0xA80000")]
		protected void CreateLightningBoltsNow()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xA801E4", Offset = "0xA801E4", VA = "0xA801E4", Slot = "10")]
		protected override void PopulateParameters(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xA8037C", Offset = "0xA8037C", VA = "0xA8037C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xA8049C", Offset = "0xA8049C", VA = "0xA8049C", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xA7F83C", Offset = "0xA7F83C", VA = "0xA7F83C", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters p)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xA80B88", Offset = "0xA80B88", VA = "0xA80B88")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xA80B90", Offset = "0xA80B90", VA = "0xA80B90")]
		public void Trigger(float seconds)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xA80C30", Offset = "0xA80C30", VA = "0xA80C30")]
		public void Trigger(Vector3? start, Vector3? end)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xA7FA2C", Offset = "0xA7FA2C", VA = "0xA7FA2C")]
		protected LightningBoltPrefabScriptBase()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class LightningBoltPrefabScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5501E0", Offset = "0x5501E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5501E0", Offset = "0x5501E0")]
		public GameObject Source;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550240", Offset = "0x550240")]
		public GameObject Destination;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550278", Offset = "0x550278")]
		public Vector3 StartVariance;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5502B0", Offset = "0x5502B0")]
		public Vector3 EndVariance;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xA7FB70", Offset = "0xA7FB70", VA = "0xA7FB70", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xA7FCBC", Offset = "0xA7FCBC", VA = "0xA7FCBC")]
		public LightningBoltPrefabScript()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class LightningBoltScript : MonoBehaviour
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5502E8", Offset = "0x5502E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5502E8", Offset = "0x5502E8")]
		public Camera Camera;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550348", Offset = "0x550348")]
		public CameraMode CameraMode;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal CameraMode calculatedCameraMode;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550380", Offset = "0x550380")]
		public bool UseWorldSpace;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5503B8", Offset = "0x5503B8")]
		public bool CompensateForParentTransform;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5503F0", Offset = "0x5503F0")]
		public LightningBoltQualitySetting QualitySetting;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550428", Offset = "0x550428")]
		public bool MultiThreaded;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x550460", Offset = "0x550460")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550460", Offset = "0x550460")]
		public float LevelOfDetailDistance;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5504B8", Offset = "0x5504B8")]
		public bool UseGameTime;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5504F0", Offset = "0x5504F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5504F0", Offset = "0x5504F0")]
		public string SortLayerName;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550550", Offset = "0x550550")]
		public int SortOrderInLayer;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x550588", Offset = "0x550588")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550588", Offset = "0x550588")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x550588", Offset = "0x550588")]
		public float SoftParticlesFactor;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550608", Offset = "0x550608")]
		public int RenderQueue;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550640", Offset = "0x550640")]
		public Material LightningMaterialMesh;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550678", Offset = "0x550678")]
		public Material LightningMaterialMeshNoGlow;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5506B0", Offset = "0x5506B0")]
		public Texture2D LightningTexture;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5506E8", Offset = "0x5506E8")]
		public Texture2D LightningGlowTexture;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550720", Offset = "0x550720")]
		public ParticleSystem LightningOriginParticleSystem;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550758", Offset = "0x550758")]
		public ParticleSystem LightningDestinationParticleSystem;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550790", Offset = "0x550790")]
		public Color LightningTintColor;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5507C8", Offset = "0x5507C8")]
		public Color GlowTintColor;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550800", Offset = "0x550800")]
		public Color MainTrunkTintColor;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550838", Offset = "0x550838")]
		public BlendMode SourceBlendMode;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550870", Offset = "0x550870")]
		public BlendMode DestinationBlendMode;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5508A8", Offset = "0x5508A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5508A8", Offset = "0x5508A8")]
		public float JitterMultiplier;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550908", Offset = "0x550908")]
		public float Turbulence;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550940", Offset = "0x550940")]
		public Vector3 TurbulenceVelocity;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550978", Offset = "0x550978")]
		public Vector4 IntensityFlicker;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector4 intensityFlickerDefault;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5509B0", Offset = "0x5509B0")]
		public Texture2D IntensityFlickerTexture;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5509E8", Offset = "0x5509E8")]
		private Action<LightningBoltParameters, Vector3, Vector3> <LightningStartedCallback>k__BackingField;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5509F8", Offset = "0x5509F8")]
		private Action<LightningBoltParameters, Vector3, Vector3> <LightningEndedCallback>k__BackingField;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A08", Offset = "0x550A08")]
		private Action<Light> <LightAddedCallback>k__BackingField;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A18", Offset = "0x550A18")]
		private Action<Light> <LightRemovedCallback>k__BackingField;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A28", Offset = "0x550A28")]
		private static Vector4 <TimeVectorSinceStart>k__BackingField;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A38", Offset = "0x550A38")]
		private static float <TimeSinceStart>k__BackingField;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A48", Offset = "0x550A48")]
		private static float <DeltaTime>k__BackingField;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float TimeScale;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static bool needsTimeUpdate;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A58", Offset = "0x550A58")]
		private Material <lightningMaterialMeshInternal>k__BackingField;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550A68", Offset = "0x550A68")]
		private Material <lightningMaterialMeshNoGlowInternal>k__BackingField;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Texture2D lastLightningTexture;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Texture2D lastLightningGlowTexture;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private readonly List<LightningBolt> activeBolts;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private readonly LightningBoltParameters[] oneParameterArray;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private readonly List<LightningBolt> lightningBoltCache;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private readonly List<LightningBoltDependencies> dependenciesCache;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private LightningThreadState threadState;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static int shaderId_MainTex;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static int shaderId_TintColor;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static int shaderId_JitterMultiplier;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static int shaderId_Turbulence;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static int shaderId_TurbulenceVelocity;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static int shaderId_SrcBlendMode;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static int shaderId_DstBlendMode;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static int shaderId_InvFade;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static int shaderId_LightningTime;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static int shaderId_IntensityFlicker;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static int shaderId_IntensityFlickerTexture;

		[Token(Token = "0x1700004C")]
		public Action<LightningBoltParameters, Vector3, Vector3> LightningStartedCallback
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0xA80E0C", Offset = "0xA80E0C", VA = "0xA80E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555858", Offset = "0x555858")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0xA80E14", Offset = "0xA80E14", VA = "0xA80E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555868", Offset = "0x555868")]
			set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		public Action<LightningBoltParameters, Vector3, Vector3> LightningEndedCallback
		{
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0xA80E1C", Offset = "0xA80E1C", VA = "0xA80E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555878", Offset = "0x555878")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0xA80E24", Offset = "0xA80E24", VA = "0xA80E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555888", Offset = "0x555888")]
			set
			{
			}
		}

		[Token(Token = "0x1700004E")]
		public Action<Light> LightAddedCallback
		{
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0xA80E2C", Offset = "0xA80E2C", VA = "0xA80E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555898", Offset = "0x555898")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0xA80E34", Offset = "0xA80E34", VA = "0xA80E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5558A8", Offset = "0x5558A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public Action<Light> LightRemovedCallback
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0xA80E3C", Offset = "0xA80E3C", VA = "0xA80E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5558B8", Offset = "0x5558B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0xA80E44", Offset = "0xA80E44", VA = "0xA80E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5558C8", Offset = "0x5558C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public bool HasActiveBolts
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0xA80E4C", Offset = "0xA80E4C", VA = "0xA80E4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000051")]
		public static Vector4 TimeVectorSinceStart
		{
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0xA80EA4", Offset = "0xA80EA4", VA = "0xA80EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5558D8", Offset = "0x5558D8")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xA80F10", Offset = "0xA80F10", VA = "0xA80F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5558E8", Offset = "0x5558E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public static float TimeSinceStart
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0xA80F9C", Offset = "0xA80F9C", VA = "0xA80F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5558F8", Offset = "0x5558F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0xA81004", Offset = "0xA81004", VA = "0xA81004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555908", Offset = "0x555908")]
			private set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public static float DeltaTime
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0xA81078", Offset = "0xA81078", VA = "0xA81078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555918", Offset = "0x555918")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0xA810E0", Offset = "0xA810E0", VA = "0xA810E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555928", Offset = "0x555928")]
			private set
			{
			}
		}

		[Token(Token = "0x17000054")]
		internal Material lightningMaterialMeshInternal
		{
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xA824C0", Offset = "0xA824C0", VA = "0xA824C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555938", Offset = "0x555938")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0xA824C8", Offset = "0xA824C8", VA = "0xA824C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555948", Offset = "0x555948")]
			private set
			{
			}
		}

		[Token(Token = "0x17000055")]
		internal Material lightningMaterialMeshNoGlowInternal
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xA824D0", Offset = "0xA824D0", VA = "0xA824D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555958", Offset = "0x555958")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0xA824D8", Offset = "0xA824D8", VA = "0xA824D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555968", Offset = "0x555968")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xA81154", Offset = "0xA81154", VA = "0xA81154", Slot = "4")]
		public virtual void CreateLightningBolt(LightningBoltParameters p)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xA800AC", Offset = "0xA800AC", VA = "0xA800AC")]
		public void CreateLightningBolts(ICollection<LightningBoltParameters> parameters)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xA816DC", Offset = "0xA816DC", VA = "0xA816DC", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xA803D8", Offset = "0xA803D8", VA = "0xA803D8", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xA8071C", Offset = "0xA8071C", VA = "0xA8071C", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xA82454", Offset = "0xA82454", VA = "0xA82454", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xA7F9D0", Offset = "0xA7F9D0", VA = "0xA7F9D0", Slot = "9")]
		protected virtual LightningBoltParameters OnCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xA7FFAC", Offset = "0xA7FFAC", VA = "0xA7FFAC")]
		protected LightningBoltParameters CreateParameters()
		{
			return null;
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xA802EC", Offset = "0xA802EC", VA = "0xA802EC", Slot = "10")]
		protected virtual void PopulateParameters(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xA824E0", Offset = "0xA824E0", VA = "0xA824E0")]
		private Coroutine StartCoroutineWrapper(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xA82528", Offset = "0xA82528", VA = "0xA82528")]
		private void OnSceneLoaded(Scene arg0, LoadSceneMode arg1)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xA8143C", Offset = "0xA8143C", VA = "0xA8143C")]
		private LightningBoltDependencies CreateLightningBoltDependencies(ICollection<LightningBoltParameters> parameters)
		{
			return null;
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xA82588", Offset = "0xA82588", VA = "0xA82588")]
		private void ReturnLightningDependenciesToCache(LightningBoltDependencies d)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xA82600", Offset = "0xA82600", VA = "0xA82600")]
		internal void OnLightAdded(Light l)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xA82674", Offset = "0xA82674", VA = "0xA82674")]
		internal void OnLightRemoved(Light l)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xA826E8", Offset = "0xA826E8", VA = "0xA826E8")]
		internal void AddActiveBolt(LightningBolt bolt)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xA816E0", Offset = "0xA816E0", VA = "0xA816E0")]
		private void UpdateShaderIds()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xA819C0", Offset = "0xA819C0", VA = "0xA819C0")]
		private void UpdateMaterialsForLastTexture()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xA81260", Offset = "0xA81260", VA = "0xA81260")]
		private void UpdateTexture()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xA82820", Offset = "0xA82820", VA = "0xA82820")]
		private void SetMaterialPerspective()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xA82910", Offset = "0xA82910", VA = "0xA82910")]
		private void SetMaterialOrthographicXY()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xA82A00", Offset = "0xA82A00", VA = "0xA82A00")]
		private void SetMaterialOrthographicXZ()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xA82750", Offset = "0xA82750", VA = "0xA82750")]
		private void SetupMaterialCamera()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xA82AF0", Offset = "0xA82AF0", VA = "0xA82AF0")]
		private void EnableKeyword(string keyword, bool enable, Material m)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xA81B6C", Offset = "0xA81B6C", VA = "0xA81B6C")]
		private void UpdateShaderParameters()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xA8204C", Offset = "0xA8204C", VA = "0xA8204C")]
		private void CheckCompensateForParentTransform()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xA818D4", Offset = "0xA818D4", VA = "0xA818D4")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xA813A4", Offset = "0xA813A4", VA = "0xA813A4")]
		private LightningBolt GetOrCreateLightningBolt()
		{
			return null;
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xA82330", Offset = "0xA82330", VA = "0xA82330")]
		private void UpdateActiveBolts()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xA82B18", Offset = "0xA82B18", VA = "0xA82B18")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xA82B28", Offset = "0xA82B28", VA = "0xA82B28")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xA82C38", Offset = "0xA82C38", VA = "0xA82C38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xA82EA0", Offset = "0xA82EA0", VA = "0xA82EA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xA80C34", Offset = "0xA80C34", VA = "0xA80C34")]
		public LightningBoltScript()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class WaitForSecondsLightning : CustomYieldInstruction
	{
		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float remaining;

		[Token(Token = "0x17000056")]
		public override bool keepWaiting
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0xA8DAE0", Offset = "0xA8DAE0", VA = "0xA8DAE0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xA7CB38", Offset = "0xA7CB38", VA = "0xA7CB38")]
		public WaitForSecondsLightning(float time)
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class LightningBoltShapeConeScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x550A78", Offset = "0x550A78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550A78", Offset = "0x550A78")]
		public float InnerRadius;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550AD8", Offset = "0x550AD8")]
		public float OuterRadius;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550B10", Offset = "0x550B10")]
		public float Length;

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xA83128", Offset = "0xA83128", VA = "0xA83128", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xA833C0", Offset = "0xA833C0", VA = "0xA833C0")]
		public LightningBoltShapeConeScript()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class LightningBoltShapeSphereScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x550B48", Offset = "0x550B48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550B48", Offset = "0x550B48")]
		public float InnerRadius;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550BA8", Offset = "0x550BA8")]
		public float Radius;

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xA833D8", Offset = "0xA833D8", VA = "0xA833D8", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xA834C0", Offset = "0xA834C0", VA = "0xA834C0")]
		public LightningBoltShapeSphereScript()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class LightningBoltTransformTrackerScript : MonoBehaviour
	{
		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550BE0", Offset = "0x550BE0")]
		public LightningBoltPrefabScript LightningScript;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550C18", Offset = "0x550C18")]
		public Transform StartTarget;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550C50", Offset = "0x550C50")]
		public Transform EndTarget;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0x550C88", Offset = "0x550C88")]
		public RangeOfFloats ScaleLimit;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<Transform, LightningCustomTransformStateInfo> transformStartPositions;

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xA834D0", Offset = "0xA834D0", VA = "0xA834D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xA835D4", Offset = "0xA835D4", VA = "0xA835D4")]
		private static float AngleBetweenVector2(Vector2 vec1, Vector2 vec2)
		{
			return default(float);
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xA836D0", Offset = "0xA836D0", VA = "0xA836D0")]
		private static void UpdateTransform(LightningCustomTransformStateInfo state, LightningBoltPrefabScript script, RangeOfFloats scaleLimit)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xA83E8C", Offset = "0xA83E8C", VA = "0xA83E8C")]
		public void CustomTransformHandler(LightningCustomTransformStateInfo state)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xA84018", Offset = "0xA84018", VA = "0xA84018")]
		public LightningBoltTransformTrackerScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000187")]
	public struct RangeOfIntegers
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550CC0", Offset = "0x550CC0")]
		public int Minimum;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550CF8", Offset = "0x550CF8")]
		public int Maximum;

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x5C50C0", Offset = "0x5C50C0", VA = "0x5C50C0")]
		public int Random()
		{
			return default(int);
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x5C50D4", Offset = "0x5C50D4", VA = "0x5C50D4")]
		public int Random(System.Random r)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000188")]
	public struct RangeOfFloats
	{
		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550D30", Offset = "0x550D30")]
		public float Minimum;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550D68", Offset = "0x550D68")]
		public float Maximum;

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x5C50AC", Offset = "0x5C50AC", VA = "0x5C50AC")]
		public float Random()
		{
			return default(float);
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x5C50B8", Offset = "0x5C50B8", VA = "0x5C50B8")]
		public float Random(System.Random r)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000189")]
	public class SingleLineAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550DA0", Offset = "0x550DA0")]
		private string <Tooltip>k__BackingField;

		[Token(Token = "0x17000057")]
		public string Tooltip
		{
			[Token(Token = "0x6000F68")]
			[Address(RVA = "0xA8C890", Offset = "0xA8C890", VA = "0xA8C890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555978", Offset = "0x555978")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0xA8C898", Offset = "0xA8C898", VA = "0xA8C898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555988", Offset = "0x555988")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xA8C864", Offset = "0xA8C864", VA = "0xA8C864")]
		public SingleLineAttribute(string tooltip)
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class SingleLineClampAttribute : SingleLineAttribute
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550DB0", Offset = "0x550DB0")]
		private double <MinValue>k__BackingField;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x550DC0", Offset = "0x550DC0")]
		private double <MaxValue>k__BackingField;

		[Token(Token = "0x17000058")]
		public double MinValue
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0xA8C8E0", Offset = "0xA8C8E0", VA = "0xA8C8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555998", Offset = "0x555998")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0xA8C8E8", Offset = "0xA8C8E8", VA = "0xA8C8E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5559A8", Offset = "0x5559A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public double MaxValue
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0xA8C8F0", Offset = "0xA8C8F0", VA = "0xA8C8F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5559B8", Offset = "0x5559B8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0xA8C8F8", Offset = "0xA8C8F8", VA = "0xA8C8F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5559C8", Offset = "0x5559C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xA8C8A0", Offset = "0xA8C8A0", VA = "0xA8C8A0")]
		public SingleLineClampAttribute(string tooltip, double minValue, double maxValue)
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class LightningFieldScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x550DD0", Offset = "0x550DD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550DD0", Offset = "0x550DD0")]
		public float MinimumLength;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private float minimumLengthSquared;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550E30", Offset = "0x550E30")]
		public Bounds FieldBounds;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550E68", Offset = "0x550E68")]
		public Light Light;

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xA84180", Offset = "0xA84180", VA = "0xA84180")]
		private Vector3 RandomPointInBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xA84264", Offset = "0xA84264", VA = "0xA84264", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xA84304", Offset = "0xA84304", VA = "0xA84304", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xA843FC", Offset = "0xA843FC", VA = "0xA843FC", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xA84580", Offset = "0xA84580", VA = "0xA84580")]
		public LightningFieldScript()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class LightningGenerator
	{
		[Token(Token = "0x4000E17")]
		internal const float oneOver255 = 0.003921569f;

		[Token(Token = "0x4000E18")]
		internal const float mainTrunkMultiplier = 0.003921569f;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LightningGenerator GeneratorInstance;

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xA84590", Offset = "0xA84590", VA = "0xA84590")]
		private void GetPerpendicularVector(ref Vector3 directionNormalized, out Vector3 side)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xA8473C", Offset = "0xA8473C", VA = "0xA8473C", Slot = "4")]
		protected virtual void OnGenerateLightningBolt(LightningBolt bolt, Vector3 start, Vector3 end, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xA84BEC", Offset = "0xA84BEC", VA = "0xA84BEC")]
		public bool ShouldCreateFork(LightningBoltParameters parameters, int generation, int totalGenerations)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xA84C58", Offset = "0xA84C58", VA = "0xA84C58")]
		public void CreateFork(LightningBolt bolt, LightningBoltParameters parameters, int generation, int totalGenerations, Vector3 start, Vector3 midPoint)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xA84760", Offset = "0xA84760", VA = "0xA84760")]
		public void GenerateLightningBoltStandard(LightningBolt bolt, Vector3 start, Vector3 end, int generation, int totalGenerations, float offsetAmount, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xA85234", Offset = "0xA85234", VA = "0xA85234")]
		public Vector3 RandomDirection3D(System.Random random)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xA85344", Offset = "0xA85344", VA = "0xA85344")]
		public Vector3 RandomDirection2D(System.Random random)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xA8541C", Offset = "0xA8541C", VA = "0xA8541C")]
		public Vector3 RandomDirection2DXZ(System.Random random)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xA84DE0", Offset = "0xA84DE0", VA = "0xA84DE0")]
		public void RandomVector(LightningBolt bolt, ref Vector3 start, ref Vector3 end, float offsetAmount, System.Random random, out Vector3 result)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xA854F4", Offset = "0xA854F4", VA = "0xA854F4")]
		public void GenerateLightningBolt(LightningBolt bolt, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xA85528", Offset = "0xA85528", VA = "0xA85528")]
		public void GenerateLightningBolt(LightningBolt bolt, LightningBoltParameters parameters, out Vector3 start, out Vector3 end)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xA855D4", Offset = "0xA855D4", VA = "0xA855D4")]
		public LightningGenerator()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class LightningGeneratorPath : LightningGenerator
	{
		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LightningGeneratorPath PathGeneratorInstance;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xA85640", Offset = "0xA85640", VA = "0xA85640")]
		public void GenerateLightningBoltPath(LightningBolt bolt, Vector3 start, Vector3 end, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xA85CBC", Offset = "0xA85CBC", VA = "0xA85CBC", Slot = "4")]
		protected override void OnGenerateLightningBolt(LightningBolt bolt, Vector3 start, Vector3 end, LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xA85CC0", Offset = "0xA85CC0", VA = "0xA85CC0")]
		public LightningGeneratorPath()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class LightningGizmoScript : MonoBehaviour
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xA85D88", Offset = "0xA85D88", VA = "0xA85D88")]
		public LightningGizmoScript()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class LightningLightsabreScript : LightningBoltPrefabScript
	{
		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x550EA0", Offset = "0x550EA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550EA0", Offset = "0x550EA0")]
		public float BladeHeight;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550F00", Offset = "0x550F00")]
		public float ActivationTime;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550F38", Offset = "0x550F38")]
		public AudioSource StartSound;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550F70", Offset = "0x550F70")]
		public AudioSource StopSound;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550FA8", Offset = "0x550FA8")]
		public AudioSource ConstantSound;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private int state;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		private Vector3 bladeStart;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Vector3 bladeDir;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private float bladeTime;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private float bladeIntensity;

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xA85E5C", Offset = "0xA85E5C", VA = "0xA85E5C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xA85E60", Offset = "0xA85E60", VA = "0xA85E60", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xA86098", Offset = "0xA86098", VA = "0xA86098")]
		public bool TurnOn(bool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xA86280", Offset = "0xA86280", VA = "0xA86280")]
		public void TurnOnGUI(bool value)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xA86288", Offset = "0xA86288", VA = "0xA86288")]
		public LightningLightsabreScript()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class LightningMeshSurfaceScript : LightningBoltPrefabScriptBase
	{
		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x550FE0", Offset = "0x550FE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x550FE0", Offset = "0x550FE0")]
		public MeshFilter MeshFilter;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551040", Offset = "0x551040")]
		public Collider MeshCollider;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0x551078", Offset = "0x551078")]
		public RangeOfFloats MeshOffsetRange;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5510B0", Offset = "0x5510B0")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0x5510B0", Offset = "0x5510B0")]
		public RangeOfIntegers PathLengthCount;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0x551110", Offset = "0x551110")]
		public RangeOfFloats MinimumPathDistanceRange;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551148", Offset = "0x551148")]
		public float MaximumPathDistance;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private float maximumPathDistanceSquared;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551180", Offset = "0x551180")]
		public bool Spline;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5511B8", Offset = "0x5511B8")]
		public float DistancePerSegmentHint;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private readonly List<Vector3> sourcePoints;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Mesh previousMesh;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private MeshHelper meshHelper;

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xA86298", Offset = "0xA86298", VA = "0xA86298")]
		private void CheckMesh()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xA86450", Offset = "0xA86450", VA = "0xA86450", Slot = "9")]
		protected override LightningBoltParameters OnCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xA864D4", Offset = "0xA864D4", VA = "0xA864D4", Slot = "11")]
		protected virtual void PopulateSourcePoints(List<Vector3> points)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xA864E4", Offset = "0xA864E4", VA = "0xA864E4")]
		public void CreateRandomLightningPath(List<Vector3> points)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xA86D48", Offset = "0xA86D48", VA = "0xA86D48", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xA86D4C", Offset = "0xA86D4C", VA = "0xA86D4C", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xA86D84", Offset = "0xA86D84", VA = "0xA86D84", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xA87044", Offset = "0xA87044", VA = "0xA87044")]
		public LightningMeshSurfaceScript()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class LightningSplineScript : LightningBoltPathScriptBase
	{
		[Token(Token = "0x4000E31")]
		public const int MaxSplineGenerations = 5;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5511F0", Offset = "0x5511F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5511F0", Offset = "0x5511F0")]
		public float DistancePerSegmentHint;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private readonly List<Vector3> prevSourcePoints;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private readonly List<Vector3> sourcePoints;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private List<Vector3> savedSplinePoints;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private int previousGenerations;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private float previousDistancePerSegment;

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xA88940", Offset = "0xA88940", VA = "0xA88940")]
		private bool SourceChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xA88A94", Offset = "0xA88A94", VA = "0xA88A94", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xA88A98", Offset = "0xA88A98", VA = "0xA88A98", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xA88A9C", Offset = "0xA88A9C", VA = "0xA88A9C", Slot = "4")]
		public override void CreateLightningBolt(LightningBoltParameters parameters)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xA88EF4", Offset = "0xA88EF4", VA = "0xA88EF4", Slot = "9")]
		protected override LightningBoltParameters OnCreateParameters()
		{
			return null;
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xA88F98", Offset = "0xA88F98", VA = "0xA88F98")]
		public void Trigger(List<Vector3> points, bool spline)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xA86F0C", Offset = "0xA86F0C", VA = "0xA86F0C")]
		public static void PopulateSpline(List<Vector3> splinePoints, List<Vector3> sourcePoints, int generations, float distancePerSegmentHit, Camera camera)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xA89D14", Offset = "0xA89D14", VA = "0xA89D14")]
		public LightningSplineScript()
		{
		}
	}
	[Token(Token = "0x2000192")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x54C108", Offset = "0x54C108")]
	public class LightningWhipScript : MonoBehaviour
	{
		[Token(Token = "0x20002B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA50", Offset = "0x54CA50")]
		private sealed class <WhipForward>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightningWhipScript <>4__this;

			[Token(Token = "0x170001C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017C7")]
				[Address(RVA = "0xA8AF40", Offset = "0xA8AF40", VA = "0xA8AF40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017C9")]
				[Address(RVA = "0xA8AFA8", Offset = "0xA8AFA8", VA = "0xA8AFA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xA8A634", Offset = "0xA8A634", VA = "0xA8A634")]
			[DebuggerHidden]
			public <WhipForward>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xA8A9EC", Offset = "0xA8A9EC", VA = "0xA8A9EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017C6")]
			[Address(RVA = "0xA8A9F0", Offset = "0xA8A9F0", VA = "0xA8A9F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017C8")]
			[Address(RVA = "0xA8AF48", Offset = "0xA8AF48", VA = "0xA8AF48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip WhipCrack;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip WhipCrackThunder;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioSource audioSource;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject whipStart;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject whipEndStrike;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject whipHandle;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject whipSpring;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 prevDrag;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool dragging;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool canWhip;

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xA8A5C4", Offset = "0xA8A5C4", VA = "0xA8A5C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5559D8", Offset = "0x5559D8")]
		private IEnumerator WhipForward()
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xA8A660", Offset = "0xA8A660", VA = "0xA8A660")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xA8A718", Offset = "0xA8A718", VA = "0xA8A718")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xA8A9DC", Offset = "0xA8A9DC", VA = "0xA8A9DC")]
		public LightningWhipScript()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class MeshHelper
	{
		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh mesh;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] triangles;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] vertices;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] normals;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] normalizedAreaWeights;

		[Token(Token = "0x1700005A")]
		public Mesh Mesh
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0xA8BBAC", Offset = "0xA8BBAC", VA = "0xA8BBAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		public int[] Triangles
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0xA8BBB4", Offset = "0xA8BBB4", VA = "0xA8BBB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		public Vector3[] Vertices
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0xA8BBBC", Offset = "0xA8BBBC", VA = "0xA8BBBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		public Vector3[] Normals
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xA8BBC4", Offset = "0xA8BBC4", VA = "0xA8BBC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xA863E8", Offset = "0xA863E8", VA = "0xA863E8")]
		public MeshHelper(Mesh mesh)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xA868C8", Offset = "0xA868C8", VA = "0xA868C8")]
		public void GenerateRandomPoint(ref RaycastHit hit, out int triangleIndex)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xA86908", Offset = "0xA86908", VA = "0xA86908")]
		public void GetRaycastFromTriangleIndex(int triangleIndex, ref RaycastHit hit)
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xA8BBCC", Offset = "0xA8BBCC", VA = "0xA8BBCC")]
		private float[] CalculateSurfaceAreas(out float totalSurfaceArea)
		{
			return null;
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xA8B948", Offset = "0xA8B948", VA = "0xA8B948")]
		private void CalculateNormalizedAreaWeights()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xA8B9D8", Offset = "0xA8B9D8", VA = "0xA8B9D8")]
		private int SelectRandomTriangle()
		{
			return default(int);
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xA8BA78", Offset = "0xA8BA78", VA = "0xA8BA78")]
		private Vector3 GenerateRandomBarycentricCoordinates()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000194")]
	public static class PathGenerator
	{
		[Token(Token = "0x4000E47")]
		public const int MinPointsForSpline = 4;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool Is2D;

		[Token(Token = "0x4000E49")]
		private const float curveMultiplier = 3f;

		[Token(Token = "0x4000E4A")]
		private const float splineMultiplier1 = -3f;

		[Token(Token = "0x4000E4B")]
		private const float splineMultiplier2 = 3f;

		[Token(Token = "0x4000E4C")]
		private const float splineMultiplier3 = 2f;

		[Token(Token = "0x4000E4D")]
		private const float splineDistanceClamp = 1f;

		[Token(Token = "0x4000E4E")]
		private const float splineEpsilon = 0.0001f;

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xA85C34", Offset = "0xA85C34", VA = "0xA85C34")]
		public static float SquareRoot(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xA8BEA0", Offset = "0xA8BEA0", VA = "0xA8BEA0")]
		private static float Distance2D(ref Vector3 point1, ref Vector3 point2)
		{
			return default(float);
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xA8BEB8", Offset = "0xA8BEB8", VA = "0xA8BEB8")]
		private static float Distance3D(ref Vector3 point1, ref Vector3 point2)
		{
			return default(float);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xA8BEE8", Offset = "0xA8BEE8", VA = "0xA8BEE8")]
		private static void GetCurvePoint2D(ref Vector3 start, ref Vector3 end, ref Vector3 ctr1, ref Vector3 ctr2, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xA8BFC0", Offset = "0xA8BFC0", VA = "0xA8BFC0")]
		private static void GetCurvePoint3D(ref Vector3 start, ref Vector3 end, ref Vector3 ctr1, ref Vector3 ctr2, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xA8C0DC", Offset = "0xA8C0DC", VA = "0xA8C0DC")]
		private static void CalculateNonuniformCatmullRom(float p1, float p2, float p3, float p4, float distance1, float distance2, float distance3, out Vector4 point)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xA8C198", Offset = "0xA8C198", VA = "0xA8C198")]
		private static float CalculatePolynomial(ref Vector4 point, float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xA8C1C4", Offset = "0xA8C1C4", VA = "0xA8C1C4")]
		private static void ClampSplineDistances(ref float distance1, ref float distance2, ref float distance3)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xA8C210", Offset = "0xA8C210", VA = "0xA8C210")]
		private static void GetSplinePoint2D(ref Vector3 point1, ref Vector3 point2, ref Vector3 point3, ref Vector3 point4, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xA8C3A4", Offset = "0xA8C3A4", VA = "0xA8C3A4")]
		private static void GetSplinePoint3D(ref Vector3 point1, ref Vector3 point2, ref Vector3 point3, ref Vector3 point4, float t, out Vector3 point)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xA8C5CC", Offset = "0xA8C5CC", VA = "0xA8C5CC")]
		public static float CreateCurve(ICollection<Vector3> path, Vector3 start, Vector3 end, Vector3 ctr1, Vector3 ctr2, int numberOfSegments, float startT)
		{
			return default(float);
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xA89748", Offset = "0xA89748", VA = "0xA89748")]
		public static bool CreateSpline(ICollection<Vector3> path, IList<Vector3> points, int numberOfSegments, bool closePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xA890E8", Offset = "0xA890E8", VA = "0xA890E8")]
		public static bool CreateSplineWithSegmentDistance(ICollection<Vector3> path, IList<Vector3> points, float distancePerSegment, bool closePath)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000195")]
	public class LightningBeamSpellScript : LightningSpellScript
	{
		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x551250", Offset = "0x551250")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551250", Offset = "0x551250")]
		public LightningBoltPathScriptBase LightningPathScript;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5512B0", Offset = "0x5512B0")]
		public float EndPointRandomization;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Action<RaycastHit> CollisionCallback;

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x780704", Offset = "0x780704", VA = "0x780704")]
		private void CheckCollision()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x780B10", Offset = "0x780B10", VA = "0x780B10", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x780B48", Offset = "0x780B48", VA = "0x780B48", Slot = "6")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x780B84", Offset = "0x780B84", VA = "0x780B84", Slot = "8")]
		protected override void OnCastSpell()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x780BA0", Offset = "0x780BA0", VA = "0x780BA0", Slot = "9")]
		protected override void OnStopSpell()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x780BC0", Offset = "0x780BC0", VA = "0x780BC0")]
		public LightningBeamSpellScript()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public interface ICollisionHandler
	{
		[Token(Token = "0x6000FBD")]
		void HandleCollision(GameObject obj, List<ParticleCollisionEvent> collision, int collisionCount);
	}
	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x54C16C", Offset = "0x54C16C")]
	public class LightningParticleCollisionForwarder : MonoBehaviour
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5512F8", Offset = "0x5512F8")]
		public MonoBehaviour CollisionHandler;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem _particleSystem;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xA870D4", Offset = "0xA870D4", VA = "0xA870D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xA8712C", Offset = "0xA8712C", VA = "0xA8712C")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xA87234", Offset = "0xA87234", VA = "0xA87234")]
		public LightningParticleCollisionForwarder()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class LightningParticleSpellScript : LightningSpellScript, ICollisionHandler
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x551330", Offset = "0x551330")]
		public ParticleSystem ParticleSystem;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551368", Offset = "0x551368")]
		public float CollisionInterval;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected float collisionTimer;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Action<GameObject, List<ParticleCollisionEvent>, int> CollisionCallback;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5513B0", Offset = "0x5513B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5513B0", Offset = "0x5513B0")]
		public bool EnableParticleLights;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0x551410", Offset = "0x551410")]
		public RangeOfFloats ParticleLightRange;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "SingleLineClampAttribute", RVA = "0x551458", Offset = "0x551458")]
		public RangeOfFloats ParticleLightIntensity;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x55149C", Offset = "0x55149C")]
		public Color ParticleLightColor1;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5514D4", Offset = "0x5514D4")]
		public Color ParticleLightColor2;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x55150C", Offset = "0x55150C")]
		public LayerMask ParticleLightCullingMask;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly List<GameObject> particleLights;

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xA872A4", Offset = "0xA872A4", VA = "0xA872A4")]
		private void PopulateParticleLight(Light src)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xA873CC", Offset = "0xA873CC", VA = "0xA873CC")]
		private void UpdateParticleLights()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xA875FC", Offset = "0xA875FC", VA = "0xA875FC")]
		private void UpdateParticleSystems()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xA877BC", Offset = "0xA877BC", VA = "0xA877BC", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xA878D8", Offset = "0xA878D8", VA = "0xA878D8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xA87974", Offset = "0xA87974", VA = "0xA87974", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xA87B98", Offset = "0xA87B98", VA = "0xA87B98", Slot = "8")]
		protected override void OnCastSpell()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xA87C34", Offset = "0xA87C34", VA = "0xA87C34", Slot = "9")]
		protected override void OnStopSpell()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xA87CC8", Offset = "0xA87CC8", VA = "0xA87CC8", Slot = "12")]
		private void DigitalRuby.ThunderAndLightning.ICollisionHandler.HandleCollision(GameObject obj, List<ParticleCollisionEvent> collisions, int collisionCount)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xA88118", Offset = "0xA88118", VA = "0xA88118")]
		public LightningParticleSpellScript()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public abstract class LightningSpellScript : MonoBehaviour
	{
		[Token(Token = "0x20002B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA60", Offset = "0x54CA60")]
		private sealed class <StopAfterSecondsCoRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightningSpellScript <>4__this;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float seconds;

			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <token>5__2;

			[Token(Token = "0x170001C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017CD")]
				[Address(RVA = "0xA888D0", Offset = "0xA888D0", VA = "0xA888D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017CF")]
				[Address(RVA = "0xA88938", Offset = "0xA88938", VA = "0xA88938", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017CA")]
			[Address(RVA = "0xA882EC", Offset = "0xA882EC", VA = "0xA882EC")]
			[DebuggerHidden]
			public <StopAfterSecondsCoRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60017CB")]
			[Address(RVA = "0xA88800", Offset = "0xA88800", VA = "0xA88800", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017CC")]
			[Address(RVA = "0xA88804", Offset = "0xA88804", VA = "0xA88804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017CE")]
			[Address(RVA = "0xA888D8", Offset = "0xA888D8", VA = "0xA888D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x551544", Offset = "0x551544")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551544", Offset = "0x551544")]
		public GameObject SpellStart;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5515A4", Offset = "0x5515A4")]
		public GameObject SpellEnd;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5515DC", Offset = "0x5515DC")]
		public Vector3 Direction;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551628", Offset = "0x551628")]
		public float MaxDistance;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x551660", Offset = "0x551660")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551660", Offset = "0x551660")]
		public bool CollisionIsExplosion;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5516C0", Offset = "0x5516C0")]
		public float CollisionRadius;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5516F8", Offset = "0x5516F8")]
		public float CollisionForce;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551730", Offset = "0x551730")]
		public ForceMode CollisionForceMode;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551768", Offset = "0x551768")]
		public ParticleSystem CollisionParticleSystem;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5517A0", Offset = "0x5517A0")]
		public LayerMask CollisionMask;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5517D8", Offset = "0x5517D8")]
		public AudioSource CollisionAudioSource;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551810", Offset = "0x551810")]
		public AudioClip[] CollisionAudioClips;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551848", Offset = "0x551848")]
		public RangeOfFloats CollisionVolumeRange;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x551880", Offset = "0x551880")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551880", Offset = "0x551880")]
		public float Duration;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5518E0", Offset = "0x5518E0")]
		public float Cooldown;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x551918", Offset = "0x551918")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551918", Offset = "0x551918")]
		public AudioSource EmissionSound;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551978", Offset = "0x551978")]
		public ParticleSystem EmissionParticleSystem;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5519B0", Offset = "0x5519B0")]
		public Light EmissionLight;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int stopToken;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5519E8", Offset = "0x5519E8")]
		private float <DurationTimer>k__BackingField;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5519F8", Offset = "0x5519F8")]
		private float <CooldownTimer>k__BackingField;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551A08", Offset = "0x551A08")]
		private bool <Casting>k__BackingField;

		[Token(Token = "0x1700005E")]
		protected float DurationTimer
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0xA88318", Offset = "0xA88318", VA = "0xA88318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555AA0", Offset = "0x555AA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0xA88320", Offset = "0xA88320", VA = "0xA88320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555AB0", Offset = "0x555AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		protected float CooldownTimer
		{
			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0xA88328", Offset = "0xA88328", VA = "0xA88328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555AC0", Offset = "0x555AC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0xA88330", Offset = "0xA88330", VA = "0xA88330")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555AD0", Offset = "0x555AD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public bool Casting
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0xA887EC", Offset = "0xA887EC", VA = "0xA887EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555AE0", Offset = "0x555AE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0xA887F4", Offset = "0xA887F4", VA = "0xA887F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555AF0", Offset = "0x555AF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public bool CanCastSpell
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xA88504", Offset = "0xA88504", VA = "0xA88504")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xA8826C", Offset = "0xA8826C", VA = "0xA8826C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555A3C", Offset = "0x555A3C")]
		private IEnumerator StopAfterSecondsCoRoutine(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xA87F28", Offset = "0xA87F28", VA = "0xA87F28")]
		protected void ApplyCollisionForce(Vector3 point)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xA87DE8", Offset = "0xA87DE8", VA = "0xA87DE8")]
		protected void PlayCollisionSound(Vector3 pos)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xA878DC", Offset = "0xA878DC", VA = "0xA878DC", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xA87A48", Offset = "0xA87A48", VA = "0xA87A48", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xA88338", Offset = "0xA88338", VA = "0xA88338", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xA878D4", Offset = "0xA878D4", VA = "0xA878D4", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000FD6")]
		protected abstract void OnCastSpell();

		[Token(Token = "0x6000FD7")]
		protected abstract void OnStopSpell();

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xA8833C", Offset = "0xA8833C", VA = "0xA8833C", Slot = "10")]
		protected virtual void OnActivated()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xA88340", Offset = "0xA88340", VA = "0xA88340", Slot = "11")]
		protected virtual void OnDeactivated()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xA88344", Offset = "0xA88344", VA = "0xA88344")]
		public bool CastSpell()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xA88550", Offset = "0xA88550", VA = "0xA88550")]
		public void StopSpell()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xA886B4", Offset = "0xA886B4", VA = "0xA886B4")]
		public void ActivateSpell()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xA886C0", Offset = "0xA886C0", VA = "0xA886C0")]
		public void DeactivateSpell()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xA88524", Offset = "0xA88524", VA = "0xA88524")]
		public void StopAfterSeconds(float seconds)
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xA886CC", Offset = "0xA886CC", VA = "0xA886CC")]
		public static GameObject FindChildRecursively(Transform t, string name)
		{
			return null;
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xA881E0", Offset = "0xA881E0", VA = "0xA881E0")]
		protected LightningSpellScript()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class LightningWhipSpell : LightningSpellScript
	{
		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA70", Offset = "0x54CA70")]
		private sealed class <WhipForward>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LightningWhipSpell <>4__this;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <whipPositionForwards>5__2;

			[Token(Token = "0x170001CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017D3")]
				[Address(RVA = "0xA8B8D8", Offset = "0xA8B8D8", VA = "0xA8B8D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017D5")]
				[Address(RVA = "0xA8B940", Offset = "0xA8B940", VA = "0xA8B940", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017D0")]
			[Address(RVA = "0xA8B020", Offset = "0xA8B020", VA = "0xA8B020")]
			[DebuggerHidden]
			public <WhipForward>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60017D1")]
			[Address(RVA = "0xA8B1C0", Offset = "0xA8B1C0", VA = "0xA8B1C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017D2")]
			[Address(RVA = "0xA8B1C4", Offset = "0xA8B1C4", VA = "0xA8B1C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xA8B8E0", Offset = "0xA8B8E0", VA = "0xA8B8E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x551A18", Offset = "0x551A18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551A18", Offset = "0x551A18")]
		public GameObject AttachTo;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551A78", Offset = "0x551A78")]
		public GameObject RotateWith;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551AB0", Offset = "0x551AB0")]
		public GameObject WhipHandle;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551AE8", Offset = "0x551AE8")]
		public GameObject WhipStart;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551B20", Offset = "0x551B20")]
		public GameObject WhipSpring;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551B58", Offset = "0x551B58")]
		public AudioSource WhipCrackAudioSource;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Action<Vector3> CollisionCallback;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xA8AFB0", Offset = "0xA8AFB0", VA = "0xA8AFB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555B00", Offset = "0x555B00")]
		private IEnumerator WhipForward()
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xA8B04C", Offset = "0xA8B04C", VA = "0xA8B04C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xA8B094", Offset = "0xA8B094", VA = "0xA8B094", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xA8B14C", Offset = "0xA8B14C", VA = "0xA8B14C", Slot = "8")]
		protected override void OnCastSpell()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xA8B178", Offset = "0xA8B178", VA = "0xA8B178", Slot = "9")]
		protected override void OnStopSpell()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xA8B17C", Offset = "0xA8B17C", VA = "0xA8B17C", Slot = "10")]
		protected override void OnActivated()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xA8B19C", Offset = "0xA8B19C", VA = "0xA8B19C", Slot = "11")]
		protected override void OnDeactivated()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xA8B1BC", Offset = "0xA8B1BC", VA = "0xA8B1BC")]
		public LightningWhipSpell()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class ThunderAndLightningScript : MonoBehaviour
	{
		[Token(Token = "0x20002B4")]
		private class LightningBoltHandler
		{
			[Token(Token = "0x20002F5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CCD0", Offset = "0x54CCD0")]
			private sealed class <ProcessLightning>d__9 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40015C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40015C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40015C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public LightningBoltHandler <>4__this;

				[Token(Token = "0x40015C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public bool intense;

				[Token(Token = "0x40015C5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				public Vector3? _start;

				[Token(Token = "0x40015C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				public Vector3? _end;

				[Token(Token = "0x40015C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
				public bool visible;

				[Token(Token = "0x40015C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				private AudioClip[] <sounds>5__2;

				[Token(Token = "0x40015C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				private float <intensity>5__3;

				[Token(Token = "0x1700020D")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x60018D9")]
					[Address(RVA = "0xA8DA70", Offset = "0xA8DA70", VA = "0xA8DA70", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700020E")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x60018DB")]
					[Address(RVA = "0xA8DAD8", Offset = "0xA8DAD8", VA = "0xA8DAD8", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x60018D6")]
				[Address(RVA = "0xA8D050", Offset = "0xA8D050", VA = "0xA8D050")]
				[DebuggerHidden]
				public <ProcessLightning>d__9(int <>1__state)
				{
				}

				[Token(Token = "0x60018D7")]
				[Address(RVA = "0xA8D704", Offset = "0xA8D704", VA = "0xA8D704", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x60018D8")]
				[Address(RVA = "0xA8D708", Offset = "0xA8D708", VA = "0xA8D708", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x60018DA")]
				[Address(RVA = "0xA8DA78", Offset = "0xA8DA78", VA = "0xA8DA78", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5535A0", Offset = "0x5535A0")]
			private float <VolumeMultiplier>k__BackingField;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ThunderAndLightningScript script;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly System.Random random;

			[Token(Token = "0x170001CC")]
			public float VolumeMultiplier
			{
				[Token(Token = "0x60017D6")]
				[Address(RVA = "0xA8CD68", Offset = "0xA8CD68", VA = "0xA8CD68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558960", Offset = "0x558960")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60017D7")]
				[Address(RVA = "0xA8CD70", Offset = "0xA8CD70", VA = "0xA8CD70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x558970", Offset = "0x558970")]
				set
				{
				}
			}

			[Token(Token = "0x60017D8")]
			[Address(RVA = "0xA8CAE8", Offset = "0xA8CAE8", VA = "0xA8CAE8")]
			public LightningBoltHandler(ThunderAndLightningScript script)
			{
			}

			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xA8CEC4", Offset = "0xA8CEC4", VA = "0xA8CEC4")]
			private void UpdateLighting()
			{
			}

			[Token(Token = "0x60017DA")]
			[Address(RVA = "0xA8CD78", Offset = "0xA8CD78", VA = "0xA8CD78")]
			private void CalculateNextLightningTime()
			{
			}

			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xA8CBF4", Offset = "0xA8CBF4", VA = "0xA8CBF4")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x558980", Offset = "0x558980")]
			public IEnumerator ProcessLightning(Vector3? _start, Vector3? _end, bool intense, bool visible)
			{
				return null;
			}

			[Token(Token = "0x60017DC")]
			[Address(RVA = "0xA8D07C", Offset = "0xA8D07C", VA = "0xA8D07C")]
			private void Strike(Vector3? _start, Vector3? _end, bool intense, float intensity, Camera camera, Camera visibleInCamera)
			{
			}

			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xA8CFC4", Offset = "0xA8CFC4", VA = "0xA8CFC4")]
			private void CheckForLightning()
			{
			}

			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xA8CB9C", Offset = "0xA8CB9C", VA = "0xA8CB9C")]
			public void Update()
			{
			}
		}

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551BA0", Offset = "0x551BA0")]
		public LightningBoltPrefabScript LightningBoltScript;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551BD8", Offset = "0x551BD8")]
		public Camera Camera;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0x551C10", Offset = "0x551C10")]
		public RangeOfFloats LightningIntervalTimeRange;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551C48", Offset = "0x551C48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x551C48", Offset = "0x551C48")]
		public float LightningIntenseProbability;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551C9C", Offset = "0x551C9C")]
		public AudioClip[] ThunderSoundsNormal;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551CD4", Offset = "0x551CD4")]
		public AudioClip[] ThunderSoundsIntense;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551D0C", Offset = "0x551D0C")]
		public bool LightningAlwaysVisible;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551D44", Offset = "0x551D44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x551D44", Offset = "0x551D44")]
		public float CloudLightningChance;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551D98", Offset = "0x551D98")]
		public bool ModifySkyboxExposure;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551DD0", Offset = "0x551DD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x551DD0", Offset = "0x551DD0")]
		public float BaseLightRange;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551E28", Offset = "0x551E28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x551E28", Offset = "0x551E28")]
		public float LightningYStart;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x551E80", Offset = "0x551E80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x551E80", Offset = "0x551E80")]
		public float VolumeMultiplier;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float skyboxExposureOriginal;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float skyboxExposureStorm;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextLightningTime;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool lightningInProgress;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioSource audioSourceThunder;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LightningBoltHandler lightningBoltHandler;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material skyboxMaterial;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AudioClip lastThunderSound;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x551ED4", Offset = "0x551ED4")]
		private bool <EnableLightning>k__BackingField;

		[Token(Token = "0x17000062")]
		public float SkyboxExposureOriginal
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xA8CD08", Offset = "0xA8CD08", VA = "0xA8CD08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000063")]
		public bool EnableLightning
		{
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0xA8CD10", Offset = "0xA8CD10", VA = "0xA8CD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555B64", Offset = "0x555B64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0xA8CD18", Offset = "0xA8CD18", VA = "0xA8CD18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555B74", Offset = "0x555B74")]
			set
			{
			}
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xA8C900", Offset = "0xA8C900", VA = "0xA8C900")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xA8CB68", Offset = "0xA8CB68", VA = "0xA8CB68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xA8CBA0", Offset = "0xA8CBA0", VA = "0xA8CBA0")]
		public void CallNormalLightning()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xA8CBB4", Offset = "0xA8CBB4", VA = "0xA8CBB4")]
		public void CallNormalLightning(Vector3? start, Vector3? end)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xA8CCB4", Offset = "0xA8CCB4", VA = "0xA8CCB4")]
		public void CallIntenseLightning()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xA8CCC8", Offset = "0xA8CCC8", VA = "0xA8CCC8")]
		public void CallIntenseLightning(Vector3? start, Vector3? end)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xA8CD24", Offset = "0xA8CD24", VA = "0xA8CD24")]
		public ThunderAndLightningScript()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200019C")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000064")]
		public bool Highlight
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x7A5618", Offset = "0x7A5618", VA = "0x7A5618")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0x7A5620", Offset = "0x7A5620", VA = "0x7A5620")]
			set
			{
			}
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x7A562C", Offset = "0x7A562C", VA = "0x7A562C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x7A57F8", Offset = "0x7A57F8", VA = "0x7A57F8", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x7A5820", Offset = "0x7A5820", VA = "0x7A5820", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x7A5848", Offset = "0x7A5848", VA = "0x7A5848")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x7A56F8", Offset = "0x7A56F8", VA = "0x7A56F8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x7A5A9C", Offset = "0x7A5A9C", VA = "0x7A5A9C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000065")]
		public bool InRange
		{
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x7A6204", Offset = "0x7A6204", VA = "0x7A6204")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001000")]
			[Address(RVA = "0x7A620C", Offset = "0x7A620C", VA = "0x7A620C")]
			set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public bool Targeted
		{
			[Token(Token = "0x6001001")]
			[Address(RVA = "0x7A6394", Offset = "0x7A6394", VA = "0x7A6394")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x7A639C", Offset = "0x7A639C", VA = "0x7A639C")]
			set
			{
			}
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x7A63A8", Offset = "0x7A63A8", VA = "0x7A63A8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x7A6218", Offset = "0x7A6218", VA = "0x7A6218")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x7A6574", Offset = "0x7A6574", VA = "0x7A6574")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x7A65B8", Offset = "0x7A65B8", VA = "0x7A65B8")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x7A6614", Offset = "0x7A6614", VA = "0x7A6614")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x54C1D0", Offset = "0x54C1D0")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000067")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001008")]
			[Address(RVA = "0x7A661C", Offset = "0x7A661C", VA = "0x7A661C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001009")]
			[Address(RVA = "0x7A6624", Offset = "0x7A6624", VA = "0x7A6624")]
			set
			{
			}
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x7A6640", Offset = "0x7A6640", VA = "0x7A6640", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x7A67CC", Offset = "0x7A67CC", VA = "0x7A67CC", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x7A7160", Offset = "0x7A7160", VA = "0x7A7160", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x7A771C", Offset = "0x7A771C", VA = "0x7A771C", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x7A7AFC", Offset = "0x7A7AFC", VA = "0x7A7AFC")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x7A6A94", Offset = "0x7A6A94", VA = "0x7A6A94")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x7A7BD8", Offset = "0x7A7BD8", VA = "0x7A7BD8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x7A8010", Offset = "0x7A8010", VA = "0x7A8010", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x7A8028", Offset = "0x7A8028", VA = "0x7A8028", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x7A8030", Offset = "0x7A8030", VA = "0x7A8030")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x7A9A70", Offset = "0x7A9A70", VA = "0x7A9A70")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x7A9B20", Offset = "0x7A9B20", VA = "0x7A9B20")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x7A9BCC", Offset = "0x7A9BCC", VA = "0x7A9BCC")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002B5")]
		public enum CrosshairState
		{
			[Token(Token = "0x40014B7")]
			Disabled,
			[Token(Token = "0x40014B8")]
			Enabled,
			[Token(Token = "0x40014B9")]
			Targeted
		}

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x7A9BD4", Offset = "0x7A9BD4", VA = "0x7A9BD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x7A64D8", Offset = "0x7A64D8", VA = "0x7A64D8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x7A9C3C", Offset = "0x7A9C3C", VA = "0x7A9C3C")]
		private void Update()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x7A9C84", Offset = "0x7A9C84", VA = "0x7A9C84")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600101B")]
		[Address(RVA = "0x7AEAC8", Offset = "0x7AEAC8", VA = "0x7AEAC8")]
		private void Start()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x7AEB94", Offset = "0x7AEB94", VA = "0x7AEB94")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x7AEBA0", Offset = "0x7AEBA0", VA = "0x7AEBA0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x7AEBAC", Offset = "0x7AEBAC", VA = "0x7AEBAC")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x7A402C", Offset = "0x7A402C", VA = "0x7A402C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x7A4084", Offset = "0x7A4084", VA = "0x7A4084")]
		private void Update()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x7A4328", Offset = "0x7A4328", VA = "0x7A4328")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x7A4418", Offset = "0x7A4418", VA = "0x7A4418")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x7A4088", Offset = "0x7A4088", VA = "0x7A4088")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x7A4508", Offset = "0x7A4508", VA = "0x7A4508")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002B6")]
		public enum ContactTest
		{
			[Token(Token = "0x40014BB")]
			PerpenTest,
			[Token(Token = "0x40014BC")]
			BackwardsPress
		}

		[Token(Token = "0x4000EB7")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000EB8")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000068")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0x7A45A0", Offset = "0x7A45A0", VA = "0x7A45A0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000069")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x7A45A8", Offset = "0x7A45A8", VA = "0x7A45A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x7A45B4", Offset = "0x7A45B4", VA = "0x7A45B4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x7A4704", Offset = "0x7A4704", VA = "0x7A4704")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x7A4908", Offset = "0x7A4908", VA = "0x7A4908")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x7A4A68", Offset = "0x7A4A68", VA = "0x7A4A68")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x7A4BC8", Offset = "0x7A4BC8", VA = "0x7A4BC8", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x7A508C", Offset = "0x7A508C", VA = "0x7A508C")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x7A5218", Offset = "0x7A5218", VA = "0x7A5218")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x7A530C", Offset = "0x7A530C", VA = "0x7A530C")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x7A5438", Offset = "0x7A5438", VA = "0x7A5438")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552024", Offset = "0x552024")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552034", Offset = "0x552034")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700006A")]
		public Collider Collider
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x7A5524", Offset = "0x7A5524", VA = "0x7A5524", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555B84", Offset = "0x555B84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x7A552C", Offset = "0x7A552C", VA = "0x7A552C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555B94", Offset = "0x555B94")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x7A5534", Offset = "0x7A5534", VA = "0x7A5534", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555BA4", Offset = "0x555BA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x7A553C", Offset = "0x7A553C", VA = "0x7A553C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555BB4", Offset = "0x555BB4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x7A5544", Offset = "0x7A5544", VA = "0x7A5544", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x7A5594", Offset = "0x7A5594", VA = "0x7A5594")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x7A5610", Offset = "0x7A5610", VA = "0x7A5610")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700006D")]
		Collider Collider
		{
			[Token(Token = "0x6001037")]
			get;
		}

		[Token(Token = "0x1700006E")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6001038")]
			get;
		}

		[Token(Token = "0x1700006F")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001039")]
			get;
		}
	}
	[Token(Token = "0x20001A6")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x7A4864", Offset = "0x7A4864", VA = "0x7A4864")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public enum InteractionType
	{
		[Token(Token = "0x4000ECC")]
		Enter,
		[Token(Token = "0x4000ECD")]
		Stay,
		[Token(Token = "0x4000ECE")]
		Exit
	}
	[Token(Token = "0x20001A8")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002B7")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40014BE")]
			Mesh,
			[Token(Token = "0x40014BF")]
			Skeleton,
			[Token(Token = "0x40014C0")]
			Both
		}

		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA80", Offset = "0x54CA80")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170001CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017E2")]
				[Address(RVA = "0x7AAB78", Offset = "0x7AAB78", VA = "0x7AAB78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017E4")]
				[Address(RVA = "0x7AABE0", Offset = "0x7AABE0", VA = "0x7AABE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x7AA66C", Offset = "0x7AA66C", VA = "0x7AA66C")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x7AA958", Offset = "0x7AA958", VA = "0x7AA958", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x7AA95C", Offset = "0x7AA95C", VA = "0x7AA95C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x7AAB80", Offset = "0x7AAB80", VA = "0x7AAB80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ECF")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552064", Offset = "0x552064")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000070")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x7A8B70", Offset = "0x7A8B70", VA = "0x7A8B70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x7A9C8C", Offset = "0x7A9C8C", VA = "0x7A9C8C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600103D")]
			[Address(RVA = "0x7A96F4", Offset = "0x7A96F4", VA = "0x7A96F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103E")]
			[Address(RVA = "0x7A9CF4", Offset = "0x7A9CF4", VA = "0x7A9CF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0x7A9D5C", Offset = "0x7A9D5C", VA = "0x7A9D5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x7A9D94", Offset = "0x7A9D94", VA = "0x7A9D94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001041")]
			[Address(RVA = "0x7A9DFC", Offset = "0x7A9DFC", VA = "0x7A9DFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x7A9E34", Offset = "0x7A9E34", VA = "0x7A9E34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001043")]
			[Address(RVA = "0x7A9E9C", Offset = "0x7A9E9C", VA = "0x7A9E9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001044")]
			[Address(RVA = "0x7A9ED4", Offset = "0x7A9ED4", VA = "0x7A9ED4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0x7A8B3C", Offset = "0x7A8B3C", VA = "0x7A8B3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001046")]
			[Address(RVA = "0x7A9F3C", Offset = "0x7A9F3C", VA = "0x7A9F3C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0x7A96C0", Offset = "0x7A96C0", VA = "0x7A96C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x7A9FA0", Offset = "0x7A9FA0", VA = "0x7A9FA0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0x7AA004", Offset = "0x7AA004", VA = "0x7AA004")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104A")]
			[Address(RVA = "0x7AA038", Offset = "0x7AA038", VA = "0x7AA038")]
			private set
			{
			}
		}

		[Token(Token = "0x17000078")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0x7AA09C", Offset = "0x7AA09C", VA = "0x7AA09C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104C")]
			[Address(RVA = "0x7AA0D0", Offset = "0x7AA0D0", VA = "0x7AA0D0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600104D")]
			[Address(RVA = "0x7AA134", Offset = "0x7AA134", VA = "0x7AA134")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x7AA168", Offset = "0x7AA168", VA = "0x7AA168")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public static HandsManager Instance
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x7AA1CC", Offset = "0x7AA1CC", VA = "0x7AA1CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555BC4", Offset = "0x555BC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x7AA21C", Offset = "0x7AA21C", VA = "0x7AA21C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555BD4", Offset = "0x555BD4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x7AA270", Offset = "0x7AA270", VA = "0x7AA270")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x7AA5E4", Offset = "0x7AA5E4", VA = "0x7AA5E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x7AA574", Offset = "0x7AA574", VA = "0x7AA574")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555BE4", Offset = "0x555BE4")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x7A6058", Offset = "0x7A6058", VA = "0x7A6058")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x7AA698", Offset = "0x7AA698", VA = "0x7AA698")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x7A972C", Offset = "0x7A972C", VA = "0x7A972C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x7A89AC", Offset = "0x7A89AC", VA = "0x7A89AC")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x7AA878", Offset = "0x7AA878", VA = "0x7AA878")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002B9")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x7AB330", Offset = "0x7AB330", VA = "0x7AB330")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700007B")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x7AABE8", Offset = "0x7AABE8", VA = "0x7AABE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x7AABF0", Offset = "0x7AABF0", VA = "0x7AABF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x7AABF8", Offset = "0x7AABF8", VA = "0x7AABF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x7AAC00", Offset = "0x7AAC00", VA = "0x7AAC00", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x7AAC08", Offset = "0x7AAC08", VA = "0x7AAC08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555C48", Offset = "0x555C48")]
			add
			{
			}
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x7AACAC", Offset = "0x7AACAC", VA = "0x7AACAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555C58", Offset = "0x555C58")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x7AADC4", Offset = "0x7AADC4", VA = "0x7AADC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555C68", Offset = "0x555C68")]
			add
			{
			}
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x7AAE68", Offset = "0x7AAE68", VA = "0x7AAE68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555C78", Offset = "0x555C78")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x7AAF80", Offset = "0x7AAF80", VA = "0x7AAF80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555C88", Offset = "0x555C88")]
			add
			{
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x7AB024", Offset = "0x7AB024", VA = "0x7AB024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555C98", Offset = "0x555C98")]
			remove
			{
			}
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x7AAD50", Offset = "0x7AAD50", VA = "0x7AAD50", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x7AAF0C", Offset = "0x7AAF0C", VA = "0x7AAF0C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x7AB0C8", Offset = "0x7AB0C8", VA = "0x7AB0C8", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001066")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x7A46A0", Offset = "0x7A46A0", VA = "0x7A46A0", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x7AB204", Offset = "0x7AB204", VA = "0x7AB204", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x7A551C", Offset = "0x7A551C", VA = "0x7A551C")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000EE7")]
		None,
		[Token(Token = "0x4000EE8")]
		Proximity,
		[Token(Token = "0x4000EE9")]
		Contact,
		[Token(Token = "0x4000EEA")]
		Action
	}
	[Token(Token = "0x20001AB")]
	public enum InteractableState
	{
		[Token(Token = "0x4000EEC")]
		Default,
		[Token(Token = "0x4000EED")]
		ProximityState,
		[Token(Token = "0x4000EEE")]
		ContactState,
		[Token(Token = "0x4000EEF")]
		ActionState
	}
	[Token(Token = "0x20001AC")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x7A5174", Offset = "0x7A5174", VA = "0x7A5174")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700007F")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x7AB380", Offset = "0x7AB380", VA = "0x7AB380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x7AB13C", Offset = "0x7AB13C", VA = "0x7AB13C")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x7AB268", Offset = "0x7AB268", VA = "0x7AB268")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x7AB3E8", Offset = "0x7AB3E8", VA = "0x7AB3E8")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CA90", Offset = "0x54CA90")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170001CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017EA")]
				[Address(RVA = "0x7AC490", Offset = "0x7AC490", VA = "0x7AC490", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017EC")]
				[Address(RVA = "0x7AC4F8", Offset = "0x7AC4F8", VA = "0x7AC4F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x7ABF54", Offset = "0x7ABF54", VA = "0x7ABF54")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x7AC080", Offset = "0x7AC080", VA = "0x7AC080", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x7AC0F4", Offset = "0x7AC0F4", VA = "0x7AC0F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x7AC09C", Offset = "0x7AC09C", VA = "0x7AC09C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x7AC498", Offset = "0x7AC498", VA = "0x7AC498", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x7ABE4C", Offset = "0x7ABE4C", VA = "0x7ABE4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x7ABEC8", Offset = "0x7ABEC8", VA = "0x7ABEC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555CA8", Offset = "0x555CA8")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x7ABF80", Offset = "0x7ABF80", VA = "0x7ABF80")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x7AC078", Offset = "0x7AC078", VA = "0x7AC078")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000080")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x7A83E8", Offset = "0x7A83E8", VA = "0x7A83E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x7A8550", Offset = "0x7A8550", VA = "0x7A8550")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x7AC500", Offset = "0x7AC500", VA = "0x7AC500")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x7AC5AC", Offset = "0x7AC5AC", VA = "0x7AC5AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x7AC874", Offset = "0x7AC874", VA = "0x7AC874")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x7AC8BC", Offset = "0x7AC8BC", VA = "0x7AC8BC")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x7ACB0C", Offset = "0x7ACB0C", VA = "0x7ACB0C")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x7ACC38", Offset = "0x7ACC38", VA = "0x7ACC38")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CAA0", Offset = "0x54CAA0")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170001D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F0")]
				[Address(RVA = "0x7A993C", Offset = "0x7A993C", VA = "0x7A993C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F2")]
				[Address(RVA = "0x7A99A4", Offset = "0x7A99A4", VA = "0x7A99A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x7A866C", Offset = "0x7A866C", VA = "0x7A866C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x7A9358", Offset = "0x7A9358", VA = "0x7A9358", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x7A935C", Offset = "0x7A935C", VA = "0x7A935C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x7A9944", Offset = "0x7A9944", VA = "0x7A9944", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EFF")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000081")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0x7A82CC", Offset = "0x7A82CC", VA = "0x7A82CC", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000082")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0x7A82D4", Offset = "0x7A82D4", VA = "0x7A82D4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000083")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0x7A82DC", Offset = "0x7A82DC", VA = "0x7A82DC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000084")]
		public override bool EnableState
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x7A82E4", Offset = "0x7A82E4", VA = "0x7A82E4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x7A8310", Offset = "0x7A8310", VA = "0x7A8310", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x7A834C", Offset = "0x7A834C", VA = "0x7A834C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x7A85FC", Offset = "0x7A85FC", VA = "0x7A85FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555D0C", Offset = "0x555D0C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x7A8698", Offset = "0x7A8698", VA = "0x7A8698")]
		private void Update()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x7A8BA8", Offset = "0x7A8BA8", VA = "0x7A8BA8")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x7A8E20", Offset = "0x7A8E20", VA = "0x7A8E20")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x7A8F60", Offset = "0x7A8F60", VA = "0x7A8F60", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x7A922C", Offset = "0x7A922C", VA = "0x7A922C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x7A9230", Offset = "0x7A9230", VA = "0x7A9230", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x7A9234", Offset = "0x7A9234", VA = "0x7A9234")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5520F4", Offset = "0x5520F4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552104", Offset = "0x552104")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552114", Offset = "0x552114")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000085")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x7A99AC", Offset = "0x7A99AC", VA = "0x7A99AC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555D70", Offset = "0x555D70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x7A99B4", Offset = "0x7A99B4", VA = "0x7A99B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555D80", Offset = "0x555D80")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public bool EnableState
		{
			[Token(Token = "0x600108C")]
			[Address(RVA = "0x7A99BC", Offset = "0x7A99BC", VA = "0x7A99BC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600108D")]
			[Address(RVA = "0x7A99D8", Offset = "0x7A99D8", VA = "0x7A99D8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x7A99F8", Offset = "0x7A99F8", VA = "0x7A99F8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555D90", Offset = "0x555D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x7A9A00", Offset = "0x7A9A00", VA = "0x7A9A00", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555DA0", Offset = "0x555DA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public float SphereRadius
		{
			[Token(Token = "0x6001090")]
			[Address(RVA = "0x7A9A0C", Offset = "0x7A9A0C", VA = "0x7A9A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555DB0", Offset = "0x555DB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x7A9A14", Offset = "0x7A9A14", VA = "0x7A9A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555DC0", Offset = "0x555DC0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x7A9A1C", Offset = "0x7A9A1C", VA = "0x7A9A1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x7A9A64", Offset = "0x7A9A64", VA = "0x7A9A64", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x7A9A68", Offset = "0x7A9A68", VA = "0x7A9A68")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000F0F")]
		None = 0,
		[Token(Token = "0x4000F10")]
		Ray = 1,
		[Token(Token = "0x4000F11")]
		Poke = 4,
		[Token(Token = "0x4000F12")]
		All = -1
	}
	[Token(Token = "0x20001B3")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000F14")]
		Inactive,
		[Token(Token = "0x4000F15")]
		PrimaryInputDown,
		[Token(Token = "0x4000F16")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000F17")]
		PrimaryInputUp
	}
	[Token(Token = "0x20001B4")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x7A91E8", Offset = "0x7A91E8", VA = "0x7A91E8")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552124", Offset = "0x552124")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552134", Offset = "0x552134")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552144", Offset = "0x552144")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000089")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x7A5430", Offset = "0x7A5430", VA = "0x7A5430")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x7AB464", Offset = "0x7AB464", VA = "0x7AB464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555DD0", Offset = "0x555DD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x7AB46C", Offset = "0x7AB46C", VA = "0x7AB46C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555DE0", Offset = "0x555DE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001099")]
			get;
		}

		[Token(Token = "0x1700008C")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600109A")]
			get;
		}

		[Token(Token = "0x1700008D")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600109B")]
			get;
		}

		[Token(Token = "0x1700008E")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x7AB478", Offset = "0x7AB478", VA = "0x7AB478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555DF0", Offset = "0x555DF0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x7AB484", Offset = "0x7AB484", VA = "0x7AB484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555E00", Offset = "0x555E00")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0x7AB490", Offset = "0x7AB490", VA = "0x7AB490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555E10", Offset = "0x555E10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x7AB49C", Offset = "0x7AB49C", VA = "0x7AB49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555E20", Offset = "0x555E20")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60010A4")]
			get;
			[Token(Token = "0x60010A5")]
			set;
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x7AB4A8", Offset = "0x7AB4A8", VA = "0x7AB4A8")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60010A1")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60010A2")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60010A3")]
		public abstract void DeFocus();

		[Token(Token = "0x60010A6")]
		public abstract void Initialize();

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x7AB4B0", Offset = "0x7AB4B0", VA = "0x7AB4B0")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x7AB500", Offset = "0x7AB500", VA = "0x7AB500")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x7AB558", Offset = "0x7AB558", VA = "0x7AB558", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x7AB79C", Offset = "0x7AB79C", VA = "0x7AB79C", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x7A9248", Offset = "0x7A9248", VA = "0x7A9248")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000091")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60010AC")]
			get;
		}

		[Token(Token = "0x17000092")]
		bool EnableState
		{
			[Token(Token = "0x60010AE")]
			get;
			[Token(Token = "0x60010AF")]
			set;
		}

		[Token(Token = "0x17000093")]
		bool ToolActivateState
		{
			[Token(Token = "0x60010B0")]
			get;
			[Token(Token = "0x60010B1")]
			set;
		}

		[Token(Token = "0x60010AD")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20001B7")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002BC")]
		private enum PinchState
		{
			[Token(Token = "0x40014D1")]
			None,
			[Token(Token = "0x40014D2")]
			PinchDown,
			[Token(Token = "0x40014D3")]
			PinchStay,
			[Token(Token = "0x40014D4")]
			PinchUp
		}

		[Token(Token = "0x4000F24")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000094")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x7AEBB4", Offset = "0x7AEBB4", VA = "0x7AEBB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000095")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x7AEC40", Offset = "0x7AEC40", VA = "0x7AEC40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000096")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x7AECCC", Offset = "0x7AECCC", VA = "0x7AECCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x7AED58", Offset = "0x7AED58", VA = "0x7AED58")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x7AED84", Offset = "0x7AED84", VA = "0x7AED84")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000F27")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000F28")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000F29")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000F2A")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000F2B")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x552164", Offset = "0x552164")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000097")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x7AF024", Offset = "0x7AF024", VA = "0x7AF024", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000098")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x7AF02C", Offset = "0x7AF02C", VA = "0x7AF02C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000099")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x7AF094", Offset = "0x7AF094", VA = "0x7AF094", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009A")]
		public override bool EnableState
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x7AF09C", Offset = "0x7AF09C", VA = "0x7AF09C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x7AF0E0", Offset = "0x7AF0E0", VA = "0x7AF0E0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x7AF154", Offset = "0x7AF154", VA = "0x7AF154", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x7AF1AC", Offset = "0x7AF1AC", VA = "0x7AF1AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x7AF248", Offset = "0x7AF248", VA = "0x7AF248")]
		private void Update()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x7AF548", Offset = "0x7AF548", VA = "0x7AF548")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x7AF644", Offset = "0x7AF644", VA = "0x7AF644", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x7AF9A8", Offset = "0x7AF9A8", VA = "0x7AF9A8")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x7AFB4C", Offset = "0x7AFB4C", VA = "0x7AFB4C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x7AFC74", Offset = "0x7AFC74", VA = "0x7AFC74")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x7AFFAC", Offset = "0x7AFFAC", VA = "0x7AFFAC")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x7B03BC", Offset = "0x7B03BC", VA = "0x7B03BC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x7B0490", Offset = "0x7B0490", VA = "0x7B0490", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x7B04C4", Offset = "0x7B04C4", VA = "0x7B04C4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F37")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000F38")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5521D8", Offset = "0x5521D8")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x1700009B")]
		public bool EnableState
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x7AF0C4", Offset = "0x7AF0C4", VA = "0x7AF0C4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x7AF0FC", Offset = "0x7AF0FC", VA = "0x7AF0FC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x7B057C", Offset = "0x7B057C", VA = "0x7B057C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x7AF50C", Offset = "0x7AF50C", VA = "0x7AF50C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x7B07AC", Offset = "0x7B07AC", VA = "0x7B07AC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555E30", Offset = "0x555E30")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x7B07B4", Offset = "0x7B07B4", VA = "0x7B07B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555E40", Offset = "0x555E40")]
			set
			{
			}
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x7B0584", Offset = "0x7B0584", VA = "0x7B0584")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x7B03F0", Offset = "0x7B03F0", VA = "0x7B03F0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x7B07BC", Offset = "0x7B07BC", VA = "0x7B07BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x7B0AE8", Offset = "0x7B0AE8", VA = "0x7B0AE8")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x7B0CD8", Offset = "0x7B0CD8", VA = "0x7B0CD8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700009E")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x7A8050", Offset = "0x7A8050", VA = "0x7A8050")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x7A8058", Offset = "0x7A8058", VA = "0x7A8058")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x7A80E0", Offset = "0x7A80E0", VA = "0x7A80E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x7A80E8", Offset = "0x7A80E8", VA = "0x7A80E8")]
			set
			{
			}
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x7A8154", Offset = "0x7A8154", VA = "0x7A8154")]
		private void Start()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x7A82A4", Offset = "0x7A82A4", VA = "0x7A82A4")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x7A82B4", Offset = "0x7A82B4", VA = "0x7A82B4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x7A82C4", Offset = "0x7A82C4", VA = "0x7A82C4")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x7A5B88", Offset = "0x7A5B88", VA = "0x7A5B88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x7A5B8C", Offset = "0x7A5B8C", VA = "0x7A5B8C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x7A5C0C", Offset = "0x7A5C0C", VA = "0x7A5C0C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x7A5CFC", Offset = "0x7A5CFC", VA = "0x7A5CFC")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x7A5DEC", Offset = "0x7A5DEC", VA = "0x7A5DEC")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x7A5EAC", Offset = "0x7A5EAC", VA = "0x7A5EAC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x7A5F9C", Offset = "0x7A5F9C", VA = "0x7A5F9C")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x7A5FE4", Offset = "0x7A5FE4", VA = "0x7A5FE4")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x7A6140", Offset = "0x7A6140", VA = "0x7A6140")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x7A61B0", Offset = "0x7A61B0", VA = "0x7A61B0")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x7A61B8", Offset = "0x7A61B8", VA = "0x7A61B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x7A61BC", Offset = "0x7A61BC", VA = "0x7A61BC")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x7A6174", Offset = "0x7A6174", VA = "0x7A6174")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x7A61FC", Offset = "0x7A61FC", VA = "0x7A61FC")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CAB0", Offset = "0x54CAB0")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40014D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40014D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40014DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170001D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F6")]
				[Address(RVA = "0x7AEA58", Offset = "0x7AEA58", VA = "0x7AEA58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F8")]
				[Address(RVA = "0x7AEAC0", Offset = "0x7AEAC0", VA = "0x7AEAC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x7AE78C", Offset = "0x7AE78C", VA = "0x7AE78C")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x7AE868", Offset = "0x7AE868", VA = "0x7AE868", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x7AE86C", Offset = "0x7AE86C", VA = "0x7AE86C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x7AEA60", Offset = "0x7AEA60", VA = "0x7AEA60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F48")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000F49")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x7AE3A4", Offset = "0x7AE3A4", VA = "0x7AE3A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x7AE43C", Offset = "0x7AE43C", VA = "0x7AE43C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x7AE6C8", Offset = "0x7AE6C8", VA = "0x7AE6C8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x7AE658", Offset = "0x7AE658", VA = "0x7AE658")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555E50", Offset = "0x555E50")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x7AE7B8", Offset = "0x7AE7B8", VA = "0x7AE7B8")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002BE")]
		public enum SelectionState
		{
			[Token(Token = "0x40014DC")]
			Off,
			[Token(Token = "0x40014DD")]
			Selected,
			[Token(Token = "0x40014DE")]
			Highlighted
		}

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170000A0")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x7B0D38", Offset = "0x7B0D38", VA = "0x7B0D38")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x7B0D40", Offset = "0x7B0D40", VA = "0x7B0D40")]
			set
			{
			}
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x7B0EC8", Offset = "0x7B0EC8", VA = "0x7B0EC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x7B1088", Offset = "0x7B1088", VA = "0x7B1088")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x7B0DC8", Offset = "0x7B0DC8", VA = "0x7B0DC8")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x7B1178", Offset = "0x7B1178", VA = "0x7B1178")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002BF")]
		public enum SegmentType
		{
			[Token(Token = "0x40014E0")]
			Straight,
			[Token(Token = "0x40014E1")]
			LeftTurn,
			[Token(Token = "0x40014E2")]
			RightTurn,
			[Token(Token = "0x40014E3")]
			Switch
		}

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000F5E")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000F5F")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5522B8", Offset = "0x5522B8")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170000A1")]
		public float StartDistance
		{
			[Token(Token = "0x60010F5")]
			[Address(RVA = "0x7B11E4", Offset = "0x7B11E4", VA = "0x7B11E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555EB4", Offset = "0x555EB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x7B11EC", Offset = "0x7B11EC", VA = "0x7B11EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555EC4", Offset = "0x555EC4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public float GridSize
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x7B11F4", Offset = "0x7B11F4", VA = "0x7B11F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x7B11FC", Offset = "0x7B11FC", VA = "0x7B11FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public int SubDivCount
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x7B1204", Offset = "0x7B1204", VA = "0x7B1204")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x7B120C", Offset = "0x7B120C", VA = "0x7B120C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public SegmentType Type
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x7B1214", Offset = "0x7B1214", VA = "0x7B1214")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000A5")]
		public Pose EndPose
		{
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x7B121C", Offset = "0x7B121C", VA = "0x7B121C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		public float Radius
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0x7B16B0", Offset = "0x7B16B0", VA = "0x7B16B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000A7")]
		public float SegmentLength
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x7B1284", Offset = "0x7B1284", VA = "0x7B1284")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x7B16C0", Offset = "0x7B16C0", VA = "0x7B16C0")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x7B16D8", Offset = "0x7B16D8", VA = "0x7B16D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x7B12C4", Offset = "0x7B12C4", VA = "0x7B12C4")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x7B16DC", Offset = "0x7B16DC", VA = "0x7B16DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x7B16E0", Offset = "0x7B16E0", VA = "0x7B16E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x7B174C", Offset = "0x7B174C", VA = "0x7B174C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x7B22D4", Offset = "0x7B22D4", VA = "0x7B22D4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x7B25E0", Offset = "0x7B25E0", VA = "0x7B25E0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CAC0", Offset = "0x54CAC0")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170001D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017FC")]
				[Address(RVA = "0x7B31E8", Offset = "0x7B31E8", VA = "0x7B31E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017FE")]
				[Address(RVA = "0x7B3250", Offset = "0x7B3250", VA = "0x7B3250", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x7B2F60", Offset = "0x7B2F60", VA = "0x7B2F60")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x7B303C", Offset = "0x7B303C", VA = "0x7B303C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x7B3040", Offset = "0x7B3040", VA = "0x7B3040", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x7B31F0", Offset = "0x7B31F0", VA = "0x7B31F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F65")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000F66")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x7B2684", Offset = "0x7B2684", VA = "0x7B2684")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x7B2730", Offset = "0x7B2730", VA = "0x7B2730")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x7B27E4", Offset = "0x7B27E4", VA = "0x7B27E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x7B2910", Offset = "0x7B2910", VA = "0x7B2910")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x7B2A80", Offset = "0x7B2A80", VA = "0x7B2A80")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x7B2C1C", Offset = "0x7B2C1C", VA = "0x7B2C1C")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x7B2E98", Offset = "0x7B2E98", VA = "0x7B2E98")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x7B2D30", Offset = "0x7B2D30", VA = "0x7B2D30")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x7B2D44", Offset = "0x7B2D44", VA = "0x7B2D44")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x7B2EF0", Offset = "0x7B2EF0", VA = "0x7B2EF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555ED4", Offset = "0x555ED4")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x7B2F8C", Offset = "0x7B2F8C", VA = "0x7B2F8C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170000A8")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001112")]
			[Address(RVA = "0x7B3258", Offset = "0x7B3258", VA = "0x7B3258")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x7B3268", Offset = "0x7B3268", VA = "0x7B3268", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x7B3270", Offset = "0x7B3270", VA = "0x7B3270", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x7B36DC", Offset = "0x7B36DC", VA = "0x7B36DC")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000F79")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000F7A")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5523B8", Offset = "0x5523B8")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170000A9")]
		public float Distance
		{
			[Token(Token = "0x6001116")]
			[Address(RVA = "0x7B37D4", Offset = "0x7B37D4", VA = "0x7B37D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555F38", Offset = "0x555F38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x7B37DC", Offset = "0x7B37DC", VA = "0x7B37DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x555F48", Offset = "0x555F48")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public float Scale
		{
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x7B37E4", Offset = "0x7B37E4", VA = "0x7B37E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001119")]
			[Address(RVA = "0x7B37EC", Offset = "0x7B37EC", VA = "0x7B37EC")]
			set
			{
			}
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x7B326C", Offset = "0x7B326C", VA = "0x7B326C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x7B37F4", Offset = "0x7B37F4", VA = "0x7B37F4")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x7B32B8", Offset = "0x7B32B8", VA = "0x7B32B8")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x7B3590", Offset = "0x7B3590", VA = "0x7B3590")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600111E")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x7B374C", Offset = "0x7B374C", VA = "0x7B374C")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CAD0", Offset = "0x54CAD0")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40014EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40014EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40014F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40014F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40014F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170001D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001802")]
				[Address(RVA = "0x7B417C", Offset = "0x7B417C", VA = "0x7B417C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001804")]
				[Address(RVA = "0x7B41E4", Offset = "0x7B41E4", VA = "0x7B41E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x7B3DC0", Offset = "0x7B3DC0", VA = "0x7B3DC0")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001800")]
			[Address(RVA = "0x7B3F58", Offset = "0x7B3F58", VA = "0x7B3F58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001801")]
			[Address(RVA = "0x7B3F5C", Offset = "0x7B3F5C", VA = "0x7B3F5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001803")]
			[Address(RVA = "0x7B4184", Offset = "0x7B4184", VA = "0x7B4184", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x7B39C4", Offset = "0x7B39C4", VA = "0x7B39C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x7B3A10", Offset = "0x7B3A10", VA = "0x7B3A10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x7B3B1C", Offset = "0x7B3B1C", VA = "0x7B3B1C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x7B3C64", Offset = "0x7B3C64", VA = "0x7B3C64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x7B3B78", Offset = "0x7B3B78", VA = "0x7B3B78")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x7B3D40", Offset = "0x7B3D40", VA = "0x7B3D40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555F58", Offset = "0x555F58")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x7B3DEC", Offset = "0x7B3DEC", VA = "0x7B3DEC")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x7B3E98", Offset = "0x7B3E98", VA = "0x7B3E98")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x7B3EF8", Offset = "0x7B3EF8", VA = "0x7B3EF8")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002C2")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40014F6")]
			Start,
			[Token(Token = "0x40014F7")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40014F8")]
			Stop
		}

		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CAE0", Offset = "0x54CAE0")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170001D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001808")]
				[Address(RVA = "0x7B4B08", Offset = "0x7B4B08", VA = "0x7B4B08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600180A")]
				[Address(RVA = "0x7B4B70", Offset = "0x7B4B70", VA = "0x7B4B70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001805")]
			[Address(RVA = "0x7B44A4", Offset = "0x7B44A4", VA = "0x7B44A4")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001806")]
			[Address(RVA = "0x7B48E8", Offset = "0x7B48E8", VA = "0x7B48E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001807")]
			[Address(RVA = "0x7B48EC", Offset = "0x7B48EC", VA = "0x7B48EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001809")]
			[Address(RVA = "0x7B4B10", Offset = "0x7B4B10", VA = "0x7B4B10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F8D")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000F8E")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000F8F")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000F90")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x552418", Offset = "0x552418")]
		protected float _initialSpeed;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x7B41EC", Offset = "0x7B41EC", VA = "0x7B41EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x7B4344", Offset = "0x7B4344", VA = "0x7B4344")]
		private void Update()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x7B4350", Offset = "0x7B4350", VA = "0x7B4350", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x7A5BC0", Offset = "0x7A5BC0", VA = "0x7A5BC0")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x7B42C0", Offset = "0x7B42C0", VA = "0x7B42C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x555FBC", Offset = "0x555FBC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x7B44D0", Offset = "0x7B44D0", VA = "0x7B44D0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x7B4440", Offset = "0x7B4440", VA = "0x7B4440")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x7A5C40", Offset = "0x7A5C40", VA = "0x7A5C40")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x7A5D30", Offset = "0x7A5D30", VA = "0x7A5D30")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x7B4704", Offset = "0x7B4704", VA = "0x7B4704")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x7B47F4", Offset = "0x7B47F4", VA = "0x7B47F4")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x7A5E20", Offset = "0x7A5E20", VA = "0x7A5E20")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x7A5EE0", Offset = "0x7A5EE0", VA = "0x7A5EE0")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x7A5FD4", Offset = "0x7A5FD4", VA = "0x7A5FD4")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x7B487C", Offset = "0x7B487C", VA = "0x7B487C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170000AB")]
		public float TrackLength
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x7B4B78", Offset = "0x7B4B78", VA = "0x7B4B78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x7B4B80", Offset = "0x7B4B80", VA = "0x7B4B80")]
			private set
			{
			}
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x7B4B88", Offset = "0x7B4B88", VA = "0x7B4B88")]
		private void Awake()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x7B3874", Offset = "0x7B3874", VA = "0x7B3874")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x7B4B8C", Offset = "0x7B4B8C", VA = "0x7B4B8C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x7B4D84", Offset = "0x7B4D84", VA = "0x7B4D84")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x7B4EA0", Offset = "0x7B4EA0", VA = "0x7B4EA0")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class Pose
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x7AEF08", Offset = "0x7AEF08", VA = "0x7AEF08")]
		public Pose()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x7AEFB4", Offset = "0x7AEFB4", VA = "0x7AEFB4")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CAF0", Offset = "0x54CAF0")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170001DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600180E")]
				[Address(RVA = "0x7B5484", Offset = "0x7B5484", VA = "0x7B5484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001810")]
				[Address(RVA = "0x7B54EC", Offset = "0x7B54EC", VA = "0x7B54EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600180B")]
			[Address(RVA = "0x7B5148", Offset = "0x7B5148", VA = "0x7B5148")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600180C")]
			[Address(RVA = "0x7B52A8", Offset = "0x7B52A8", VA = "0x7B52A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600180D")]
			[Address(RVA = "0x7B52AC", Offset = "0x7B52AC", VA = "0x7B52AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600180F")]
			[Address(RVA = "0x7B548C", Offset = "0x7B548C", VA = "0x7B548C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB00", Offset = "0x54CB00")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400150A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400150B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170001DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001814")]
				[Address(RVA = "0x7B55C0", Offset = "0x7B55C0", VA = "0x7B55C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001816")]
				[Address(RVA = "0x7B5628", Offset = "0x7B5628", VA = "0x7B5628", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001811")]
			[Address(RVA = "0x7B5208", Offset = "0x7B5208", VA = "0x7B5208")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001812")]
			[Address(RVA = "0x7B54F4", Offset = "0x7B54F4", VA = "0x7B54F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001813")]
			[Address(RVA = "0x7B54F8", Offset = "0x7B54F8", VA = "0x7B54F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001815")]
			[Address(RVA = "0x7B55C8", Offset = "0x7B55C8", VA = "0x7B55C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FB3")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x552600", Offset = "0x552600")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170000AC")]
		public bool IsMoving
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x7B4EBC", Offset = "0x7B4EBC", VA = "0x7B4EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x556020", Offset = "0x556020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x7B4EC4", Offset = "0x7B4EC4", VA = "0x7B4EC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x556030", Offset = "0x556030")]
			private set
			{
			}
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x7B4ED0", Offset = "0x7B4ED0", VA = "0x7B4ED0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x7B4F0C", Offset = "0x7B4F0C", VA = "0x7B4F0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x7B5060", Offset = "0x7B5060", VA = "0x7B5060")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x7B50C8", Offset = "0x7B50C8", VA = "0x7B50C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556040", Offset = "0x556040")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x7B5174", Offset = "0x7B5174", VA = "0x7B5174")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5560A4", Offset = "0x5560A4")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x7B5234", Offset = "0x7B5234", VA = "0x7B5234")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x7B52A0", Offset = "0x7B52A0", VA = "0x7B52A0")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x7B5630", Offset = "0x7B5630", VA = "0x7B5630")]
		private void Awake()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x7B5698", Offset = "0x7B5698", VA = "0x7B5698")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x7B5750", Offset = "0x7B5750", VA = "0x7B5750")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x7B5850", Offset = "0x7B5850", VA = "0x7B5850")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x7B58CC", Offset = "0x7B58CC", VA = "0x7B58CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x7B59A8", Offset = "0x7B59A8", VA = "0x7B59A8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000FC4")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000FC5")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000FC6")]
		EUDT_None,
		[Token(Token = "0x4000FC7")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20001CA")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB10", Offset = "0x54CB10")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400150F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170001DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600181A")]
				[Address(RVA = "0x7AE334", Offset = "0x7AE334", VA = "0x7AE334", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600181C")]
				[Address(RVA = "0x7AE39C", Offset = "0x7AE39C", VA = "0x7AE39C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001817")]
			[Address(RVA = "0x7AD9B0", Offset = "0x7AD9B0", VA = "0x7AD9B0")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001818")]
			[Address(RVA = "0x7AE0E8", Offset = "0x7AE0E8", VA = "0x7AE0E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001819")]
			[Address(RVA = "0x7AE0EC", Offset = "0x7AE0EC", VA = "0x7AE0EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600181B")]
			[Address(RVA = "0x7AE33C", Offset = "0x7AE33C", VA = "0x7AE33C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000FC9")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000FCA")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000FCB")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x552640", Offset = "0x552640")]
		public GameObject mainCamera;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x552678", Offset = "0x552678")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x7ACCF8", Offset = "0x7ACCF8", VA = "0x7ACCF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x7AD4D8", Offset = "0x7AD4D8", VA = "0x7AD4D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x7AD618", Offset = "0x7AD618", VA = "0x7AD618")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x7AD740", Offset = "0x7AD740", VA = "0x7AD740")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x7AD868", Offset = "0x7AD868", VA = "0x7AD868")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x7AD5EC", Offset = "0x7AD5EC", VA = "0x7AD5EC")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x7AD940", Offset = "0x7AD940", VA = "0x7AD940")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556108", Offset = "0x556108")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x7AD9DC", Offset = "0x7AD9DC", VA = "0x7AD9DC")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x7AD064", Offset = "0x7AD064", VA = "0x7AD064")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x7ADB04", Offset = "0x7ADB04", VA = "0x7ADB04")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x7ADA10", Offset = "0x7ADA10", VA = "0x7ADA10")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x7ADEA0", Offset = "0x7ADEA0", VA = "0x7ADEA0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x7ADF7C", Offset = "0x7ADF7C", VA = "0x7ADF7C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x7ADFF8", Offset = "0x7ADFF8", VA = "0x7ADFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55616C", Offset = "0x55616C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x7AE048", Offset = "0x7AE048", VA = "0x7AE048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55617C", Offset = "0x55617C")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x7AE098", Offset = "0x7AE098", VA = "0x7AE098")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55618C", Offset = "0x55618C")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x54C244", Offset = "0x54C244")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB20", Offset = "0x54CB20")]
		private sealed class <>c
		{
			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x600181E")]
			[Address(RVA = "0x961400", Offset = "0x961400", VA = "0x961400")]
			public <>c()
			{
			}

			[Token(Token = "0x600181F")]
			[Address(RVA = "0x961408", Offset = "0x961408", VA = "0x961408")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FE0")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000FE1")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000FE2")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000FE3")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000FE4")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000FE5")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000FE6")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000FE7")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000FE8")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000FE9")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000FEA")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x960644", Offset = "0x960644", VA = "0x960644")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x96069C", Offset = "0x96069C", VA = "0x96069C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x960AA4", Offset = "0x960AA4", VA = "0x960AA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x960B70", Offset = "0x960B70", VA = "0x960B70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x960C7C", Offset = "0x960C7C", VA = "0x960C7C")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x960FB4", Offset = "0x960FB4", VA = "0x960FB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x96111C", Offset = "0x96111C", VA = "0x96111C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x961268", Offset = "0x961268", VA = "0x961268")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x960D18", Offset = "0x960D18", VA = "0x960D18")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x960DB8", Offset = "0x960DB8", VA = "0x960DB8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x9608F8", Offset = "0x9608F8", VA = "0x9608F8")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x961384", Offset = "0x961384", VA = "0x961384")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000FFD")]
		Default,
		[Token(Token = "0x4000FFE")]
		Generic,
		[Token(Token = "0x4000FFF")]
		PingPongBall,
		[Token(Token = "0x4001000")]
		Controller
	}
	[Token(Token = "0x20001CD")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000AD")]
		public bool AllowPointing
		{
			[Token(Token = "0x600116D")]
			[Address(RVA = "0x961434", Offset = "0x961434", VA = "0x961434")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AE")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0x96143C", Offset = "0x96143C", VA = "0x96143C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AF")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0x961444", Offset = "0x961444", VA = "0x961444")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x96144C", Offset = "0x96144C", VA = "0x96144C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x961454", Offset = "0x961454", VA = "0x961454")]
		private void Update()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x9616C8", Offset = "0x9616C8", VA = "0x9616C8")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x961724", Offset = "0x961724", VA = "0x961724")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x961768", Offset = "0x961768", VA = "0x961768")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20001CF")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001008")]
		TRIANGLES,
		[Token(Token = "0x4001009")]
		QUADS
	}
	[Token(Token = "0x20001D0")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400100B")]
		ABSORPTION,
		[Token(Token = "0x400100C")]
		TRANSMISSION,
		[Token(Token = "0x400100D")]
		SCATTERING
	}
	[Token(Token = "0x20001D1")]
	public struct MeshGroup
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20001D2")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001012")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001013")]
		public const string Tab = "    ";

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x962F2C", Offset = "0x962F2C", VA = "0x962F2C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x55619C", Offset = "0x55619C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x55619C", Offset = "0x55619C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x962FB4", Offset = "0x962FB4", VA = "0x962FB4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5561FC", Offset = "0x5561FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5561FC", Offset = "0x5561FC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x96304C", Offset = "0x96304C", VA = "0x96304C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x55625C", Offset = "0x55625C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x55625C", Offset = "0x55625C")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x9630D4", Offset = "0x9630D4", VA = "0x9630D4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5562BC", Offset = "0x5562BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5562BC", Offset = "0x5562BC")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x96315C", Offset = "0x96315C", VA = "0x96315C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x55631C", Offset = "0x55631C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x55631C", Offset = "0x55631C")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class CAPI
	{
		[Token(Token = "0x20002C8")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002C9")]
		public enum Result
		{
			[Token(Token = "0x4001514")]
			Success = 0,
			[Token(Token = "0x4001515")]
			Failure = -1000,
			[Token(Token = "0x4001516")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001517")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001518")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001519")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x400151A")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x400151B")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x400151C")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002CA")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400151D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001824")]
			[Address(RVA = "0x7A3ED8", Offset = "0x7A3ED8", VA = "0x7A3ED8")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001014")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x400101C")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600117A")]
		[Address(RVA = "0x96325C", Offset = "0x96325C", VA = "0x96325C")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x9632EC", Offset = "0x9632EC", VA = "0x9632EC")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x9634A8", Offset = "0x9634A8", VA = "0x9634A8")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600117D")]
		[Address(RVA = "0x963588", Offset = "0x963588", VA = "0x963588")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600117E")]
		[Address(RVA = "0x9635F8", Offset = "0x9635F8", VA = "0x9635F8")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x600117F")]
		[Address(RVA = "0x96366C", Offset = "0x96366C", VA = "0x96366C")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x9636EC", Offset = "0x9636EC", VA = "0x9636EC")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001181")]
		[Address(RVA = "0x963804", Offset = "0x963804", VA = "0x963804")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x963884", Offset = "0x963884", VA = "0x963884")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001183")]
		[Address(RVA = "0x96399C", Offset = "0x96399C", VA = "0x96399C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001184")]
		[Address(RVA = "0x963A1C", Offset = "0x963A1C", VA = "0x963A1C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001185")]
		[Address(RVA = "0x963A9C", Offset = "0x963A9C", VA = "0x963A9C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001186")]
		[Address(RVA = "0x963B1C", Offset = "0x963B1C", VA = "0x963B1C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001187")]
		[Address(RVA = "0x963B9C", Offset = "0x963B9C", VA = "0x963B9C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001188")]
		[Address(RVA = "0x963C2C", Offset = "0x963C2C", VA = "0x963C2C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001189")]
		[Address(RVA = "0x963CBC", Offset = "0x963CBC", VA = "0x963CBC")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600118A")]
		[Address(RVA = "0x963D4C", Offset = "0x963D4C", VA = "0x963D4C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600118B")]
		[Address(RVA = "0x963DCC", Offset = "0x963DCC", VA = "0x963DCC")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600118C")]
		[Address(RVA = "0x963E4C", Offset = "0x963E4C", VA = "0x963E4C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600118D")]
		[Address(RVA = "0x963EDC", Offset = "0x963EDC", VA = "0x963EDC")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600118E")]
		[Address(RVA = "0x963F6C", Offset = "0x963F6C", VA = "0x963F6C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x600118F")]
		[Address(RVA = "0x963FFC", Offset = "0x963FFC", VA = "0x963FFC")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001190")]
		[Address(RVA = "0x96407C", Offset = "0x96407C", VA = "0x96407C")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x96411C", Offset = "0x96411C", VA = "0x96411C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001192")]
		[Address(RVA = "0x96419C", Offset = "0x96419C", VA = "0x96419C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001193")]
		[Address(RVA = "0x96423C", Offset = "0x96423C", VA = "0x96423C")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001194")]
		[Address(RVA = "0x9642FC", Offset = "0x9642FC", VA = "0x9642FC")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001195")]
		[Address(RVA = "0x9643CC", Offset = "0x9643CC", VA = "0x9643CC")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001196")]
		[Address(RVA = "0x96445C", Offset = "0x96445C", VA = "0x96445C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001197")]
		[Address(RVA = "0x9644EC", Offset = "0x9644EC", VA = "0x9644EC")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001198")]
		[Address(RVA = "0x96457C", Offset = "0x96457C", VA = "0x96457C")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001199")]
		[Address(RVA = "0x96460C", Offset = "0x96460C", VA = "0x96460C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600119A")]
		[Address(RVA = "0x96469C", Offset = "0x96469C", VA = "0x96469C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x96471C", Offset = "0x96471C", VA = "0x96471C")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x96483C", Offset = "0x96483C", VA = "0x96483C")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600119D")]
		[Address(RVA = "0x9647AC", Offset = "0x9647AC", VA = "0x9647AC")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x964A30", Offset = "0x964A30", VA = "0x964A30")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x964B68", Offset = "0x964B68", VA = "0x964B68")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011A0")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x964BE8", Offset = "0x964BE8", VA = "0x964BE8")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x964E58", Offset = "0x964E58", VA = "0x964E58")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x964ED8", Offset = "0x964ED8", VA = "0x964ED8")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x965010", Offset = "0x965010", VA = "0x965010")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x965090", Offset = "0x965090", VA = "0x965090")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x9651C8", Offset = "0x9651C8", VA = "0x9651C8")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x965248", Offset = "0x965248", VA = "0x965248")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x965380", Offset = "0x965380", VA = "0x965380")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x965400", Offset = "0x965400", VA = "0x965400")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x965538", Offset = "0x965538", VA = "0x965538")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x9655B8", Offset = "0x9655B8", VA = "0x9655B8")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x965638", Offset = "0x965638", VA = "0x965638")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x9656D0", Offset = "0x9656D0", VA = "0x9656D0")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x965750", Offset = "0x965750", VA = "0x965750")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x9658FC", Offset = "0x9658FC", VA = "0x9658FC")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x965A28", Offset = "0x965A28", VA = "0x965A28")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x96587C", Offset = "0x96587C", VA = "0x96587C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x965AA8", Offset = "0x965AA8", VA = "0x965AA8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x965B28", Offset = "0x965B28", VA = "0x965B28")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x965BB8", Offset = "0x965BB8", VA = "0x965BB8")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x965C38", Offset = "0x965C38", VA = "0x965C38")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x965CC8", Offset = "0x965CC8", VA = "0x965CC8")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x965D48", Offset = "0x965D48", VA = "0x965D48")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x965DC8", Offset = "0x965DC8", VA = "0x965DC8")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x966004", Offset = "0x966004", VA = "0x966004")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x966094", Offset = "0x966094", VA = "0x966094")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x966280", Offset = "0x966280", VA = "0x966280")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x966318", Offset = "0x966318", VA = "0x966318")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x96643C", Offset = "0x96643C", VA = "0x96643C")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x9664BC", Offset = "0x9664BC", VA = "0x9664BC")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x96653C", Offset = "0x96653C", VA = "0x96653C")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x966664", Offset = "0x966664", VA = "0x966664")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x9666E4", Offset = "0x9666E4", VA = "0x9666E4")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x96680C", Offset = "0x96680C", VA = "0x96680C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x96688C", Offset = "0x96688C", VA = "0x96688C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x96691C", Offset = "0x96691C", VA = "0x96691C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x9669AC", Offset = "0x9669AC", VA = "0x9669AC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x966A3C", Offset = "0x966A3C", VA = "0x966A3C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x966ABC", Offset = "0x966ABC", VA = "0x966ABC")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x966B44", Offset = "0x966B44", VA = "0x966B44")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x966BCC", Offset = "0x966BCC", VA = "0x966BCC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x966C4C", Offset = "0x966C4C", VA = "0x966C4C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x966CCC", Offset = "0x966CCC", VA = "0x966CCC")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x966D80", Offset = "0x966D80", VA = "0x966D80")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x966E10", Offset = "0x966E10", VA = "0x966E10")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x966EA0", Offset = "0x966EA0", VA = "0x966EA0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x966F20", Offset = "0x966F20", VA = "0x966F20")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x966FA0", Offset = "0x966FA0", VA = "0x966FA0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x967020", Offset = "0x967020", VA = "0x967020")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x9670B8", Offset = "0x9670B8", VA = "0x9670B8")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x967148", Offset = "0x967148", VA = "0x967148")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x9671D8", Offset = "0x9671D8", VA = "0x9671D8")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x967268", Offset = "0x967268", VA = "0x967268")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x967300", Offset = "0x967300", VA = "0x967300")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x967398", Offset = "0x967398", VA = "0x967398")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x967418", Offset = "0x967418", VA = "0x967418")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x967498", Offset = "0x967498", VA = "0x967498")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x9675C0", Offset = "0x9675C0", VA = "0x9675C0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x967640", Offset = "0x967640", VA = "0x967640")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x967768", Offset = "0x967768", VA = "0x967768")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x9677E8", Offset = "0x9677E8", VA = "0x9677E8")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x967910", Offset = "0x967910", VA = "0x967910")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x967990", Offset = "0x967990", VA = "0x967990")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x967B38", Offset = "0x967B38", VA = "0x967B38")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x967DD4", Offset = "0x967DD4", VA = "0x967DD4")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x967AB8", Offset = "0x967AB8", VA = "0x967AB8")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x967E64", Offset = "0x967E64", VA = "0x967E64")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x967EE4", Offset = "0x967EE4", VA = "0x967EE4")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x967F74", Offset = "0x967F74", VA = "0x967F74")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x968004", Offset = "0x968004", VA = "0x968004")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x968094", Offset = "0x968094", VA = "0x968094")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x968134", Offset = "0x968134", VA = "0x968134")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x9681D4", Offset = "0x9681D4", VA = "0x9681D4")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x968274", Offset = "0x968274", VA = "0x968274")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x9682F4", Offset = "0x9682F4", VA = "0x9682F4")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x968374", Offset = "0x968374", VA = "0x968374")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x9683F4", Offset = "0x9683F4", VA = "0x9683F4")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x968474", Offset = "0x968474", VA = "0x968474")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x9684F4", Offset = "0x9684F4", VA = "0x9684F4")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x96861C", Offset = "0x96861C", VA = "0x96861C")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x9686B4", Offset = "0x9686B4", VA = "0x9686B4")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x968734", Offset = "0x968734", VA = "0x968734")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x968798", Offset = "0x968798", VA = "0x968798")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x9688B4", Offset = "0x9688B4", VA = "0x9688B4")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x968944", Offset = "0x968944", VA = "0x968944")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x968A88", Offset = "0x968A88", VA = "0x968A88")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x968B18", Offset = "0x968B18", VA = "0x968B18")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x968BB8", Offset = "0x968BB8", VA = "0x968BB8")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x968F50", Offset = "0x968F50", VA = "0x968F50")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x968FD0", Offset = "0x968FD0", VA = "0x968FD0")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x969068", Offset = "0x969068", VA = "0x969068")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x969830", Offset = "0x969830", VA = "0x969830")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x9698B0", Offset = "0x9698B0", VA = "0x9698B0")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x9631F4", Offset = "0x9631F4", VA = "0x9631F4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x55637C", Offset = "0x55637C")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x969948", Offset = "0x969948", VA = "0x969948")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001200")]
		[Address(RVA = "0x9699CC", Offset = "0x9699CC", VA = "0x9699CC")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001201")]
		[Address(RVA = "0x969A4C", Offset = "0x969A4C", VA = "0x969A4C")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001202")]
		[Address(RVA = "0x969ACC", Offset = "0x969ACC", VA = "0x969ACC")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x969B4C", Offset = "0x969B4C", VA = "0x969B4C")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001204")]
		[Address(RVA = "0x96A52C", Offset = "0x96A52C", VA = "0x96A52C")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x96A5AC", Offset = "0x96A5AC", VA = "0x96A5AC")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001206")]
		[Address(RVA = "0x96A998", Offset = "0x96A998", VA = "0x96A998")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x96A908", Offset = "0x96A908", VA = "0x96A908")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x96AA0C", Offset = "0x96AA0C", VA = "0x96AA0C")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20001D4")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x552730", Offset = "0x552730")]
		public SoundFXRef testSound1;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x957694", Offset = "0x957694", VA = "0x957694")]
		private void Start()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x957698", Offset = "0x957698", VA = "0x957698")]
		private void Update()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x957758", Offset = "0x957758", VA = "0x957758")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x55277C", Offset = "0x55277C")]
		public bool autoRetrigger;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5527B4", Offset = "0x5527B4")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5527D8", Offset = "0x5527D8")]
		public Transform[] playPositions;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x94E9D8", Offset = "0x94E9D8", VA = "0x94E9D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x94EB5C", Offset = "0x94EB5C", VA = "0x94EB5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x94ED38", Offset = "0x94ED38", VA = "0x94ED38")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x94EBBC", Offset = "0x94EBBC", VA = "0x94EBBC")]
		public void Play()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x94EE78", Offset = "0x94EE78", VA = "0x94EE78")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x94EFEC", Offset = "0x94EFEC", VA = "0x94EFEC")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public enum PreloadSounds
	{
		[Token(Token = "0x400102B")]
		Default,
		[Token(Token = "0x400102C")]
		Preload,
		[Token(Token = "0x400102D")]
		ManualPreload
	}
	[Token(Token = "0x20001D7")]
	public enum Fade
	{
		[Token(Token = "0x400102F")]
		In,
		[Token(Token = "0x4001030")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20001D8")]
	public class SoundGroup
	{
		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x552810", Offset = "0x552810")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x957574", Offset = "0x957574", VA = "0x957574")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x957608", Offset = "0x957608", VA = "0x957608")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x955FE0", Offset = "0x955FE0", VA = "0x955FE0")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x956120", Offset = "0x956120", VA = "0x956120")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x956BD8", Offset = "0x956BD8", VA = "0x956BD8")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001D9")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002CB")]
		public enum Fade
		{
			[Token(Token = "0x400151F")]
			In,
			[Token(Token = "0x4001520")]
			Out
		}

		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB30", Offset = "0x54CB30")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001826")]
			[Address(RVA = "0x953100", Offset = "0x953100", VA = "0x953100")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6001827")]
			[Address(RVA = "0x955A9C", Offset = "0x955A9C", VA = "0x955A9C")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB40", Offset = "0x54CB40")]
		private sealed class <>c
		{
			[Token(Token = "0x4001522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6001829")]
			[Address(RVA = "0x955A04", Offset = "0x955A04", VA = "0x955A04")]
			public <>c()
			{
			}

			[Token(Token = "0x600182A")]
			[Address(RVA = "0x955A0C", Offset = "0x955A0C", VA = "0x955A0C")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x55283C", Offset = "0x55283C")]
		public bool makePersistent;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552874", Offset = "0x552874")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5528AC", Offset = "0x5528AC")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5528E4", Offset = "0x5528E4")]
		public AudioMixer audioMixer;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x55291C", Offset = "0x55291C")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552954", Offset = "0x552954")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x55298C", Offset = "0x55298C")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5529C4", Offset = "0x5529C4")]
		public bool verboseLogging;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5529FC", Offset = "0x5529FC")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552A34", Offset = "0x552A34")]
		public float volumeSoundFX;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552A6C", Offset = "0x552A6C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000B0")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001218")]
			[Address(RVA = "0x94F0AC", Offset = "0x94F0AC", VA = "0x94F0AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B1")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0x94F18C", Offset = "0x94F18C", VA = "0x94F18C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public static float NearFallOff
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0x94F1F4", Offset = "0x94F1F4", VA = "0x94F1F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B3")]
		public static float FarFallOff
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x94F268", Offset = "0x94F268", VA = "0x94F268")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B4")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0x94F2DC", Offset = "0x94F2DC", VA = "0x94F2DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x600121D")]
			[Address(RVA = "0x94F350", Offset = "0x94F350", VA = "0x94F350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600121E")]
			[Address(RVA = "0x94F3C4", Offset = "0x94F3C4", VA = "0x94F3C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0x951114", Offset = "0x951114", VA = "0x951114")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x94F438", Offset = "0x94F438", VA = "0x94F438")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x94F660", Offset = "0x94F660", VA = "0x94F660")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x94F43C", Offset = "0x94F43C", VA = "0x94F43C")]
		private void Init()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x95028C", Offset = "0x95028C", VA = "0x95028C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x94F7B8", Offset = "0x94F7B8", VA = "0x94F7B8")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x9508B0", Offset = "0x9508B0", VA = "0x9508B0")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x950A30", Offset = "0x950A30", VA = "0x950A30")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x950BCC", Offset = "0x950BCC", VA = "0x950BCC")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x950CCC", Offset = "0x950CCC", VA = "0x950CCC")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x950D5C", Offset = "0x950D5C", VA = "0x950D5C")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x94FC04", Offset = "0x94FC04", VA = "0x94FC04")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x950290", Offset = "0x950290", VA = "0x950290")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x951394", Offset = "0x951394", VA = "0x951394")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x951498", Offset = "0x951498", VA = "0x951498")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x9515A0", Offset = "0x9515A0", VA = "0x9515A0")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x95125C", Offset = "0x95125C", VA = "0x95125C")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x95170C", Offset = "0x95170C", VA = "0x95170C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x951860", Offset = "0x951860", VA = "0x951860")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x951A10", Offset = "0x951A10", VA = "0x951A10")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x94EDC8", Offset = "0x94EDC8", VA = "0x94EDC8")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x94EF3C", Offset = "0x94EF3C", VA = "0x94EF3C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x951BBC", Offset = "0x951BBC", VA = "0x951BBC")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x951C88", Offset = "0x951C88", VA = "0x951C88")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x951D1C", Offset = "0x951D1C", VA = "0x951D1C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x951DE0", Offset = "0x951DE0", VA = "0x951DE0")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x951E84", Offset = "0x951E84", VA = "0x951E84")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x951F64", Offset = "0x951F64", VA = "0x951F64")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x952A48", Offset = "0x952A48", VA = "0x952A48")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x953108", Offset = "0x953108", VA = "0x953108")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x9532E8", Offset = "0x9532E8", VA = "0x9532E8")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x95402C", Offset = "0x95402C", VA = "0x95402C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x95216C", Offset = "0x95216C", VA = "0x95216C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x95414C", Offset = "0x95414C", VA = "0x95414C")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x954230", Offset = "0x954230", VA = "0x954230")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x954320", Offset = "0x954320", VA = "0x954320")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x9546D8", Offset = "0x9546D8", VA = "0x9546D8")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x9548D4", Offset = "0x9548D4", VA = "0x9548D4")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x9549F0", Offset = "0x9549F0", VA = "0x9549F0")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x954BB8", Offset = "0x954BB8", VA = "0x954BB8")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x954C90", Offset = "0x954C90", VA = "0x954C90")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x954DC4", Offset = "0x954DC4", VA = "0x954DC4")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x9551B0", Offset = "0x9551B0", VA = "0x9551B0")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001058")]
		None = -1,
		[Token(Token = "0x4001059")]
		Reserved,
		[Token(Token = "0x400105A")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20001DB")]
	public class MixerSnapshot
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x955B98", Offset = "0x955B98", VA = "0x955B98")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x955B3C", Offset = "0x955B3C", VA = "0x955B3C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002CE")]
		public enum FadeState
		{
			[Token(Token = "0x4001525")]
			Null,
			[Token(Token = "0x4001526")]
			FadingIn,
			[Token(Token = "0x4001527")]
			FadingOut,
			[Token(Token = "0x4001528")]
			Ducking
		}

		[Token(Token = "0x20002CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB50", Offset = "0x54CB50")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400152A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400152E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170001E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600182E")]
				[Address(RVA = "0x9565E4", Offset = "0x9565E4", VA = "0x9565E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001830")]
				[Address(RVA = "0x95664C", Offset = "0x95664C", VA = "0x95664C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600182B")]
			[Address(RVA = "0x9562C4", Offset = "0x9562C4", VA = "0x9562C4")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600182C")]
			[Address(RVA = "0x9564F4", Offset = "0x9564F4", VA = "0x9564F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600182D")]
			[Address(RVA = "0x9564F8", Offset = "0x9564F8", VA = "0x9564F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600182F")]
			[Address(RVA = "0x9565EC", Offset = "0x9565EC", VA = "0x9565EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB60", Offset = "0x54CB60")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400152F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170001E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001834")]
				[Address(RVA = "0x956A98", Offset = "0x956A98", VA = "0x956A98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001836")]
				[Address(RVA = "0x956B00", Offset = "0x956B00", VA = "0x956B00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001831")]
			[Address(RVA = "0x956484", Offset = "0x956484", VA = "0x956484")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001832")]
			[Address(RVA = "0x95692C", Offset = "0x95692C", VA = "0x95692C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0x956930", Offset = "0x956930", VA = "0x956930", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001835")]
			[Address(RVA = "0x956AA0", Offset = "0x956AA0", VA = "0x956AA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB70", Offset = "0x54CB70")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170001E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600183A")]
				[Address(RVA = "0x9568BC", Offset = "0x9568BC", VA = "0x9568BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600183C")]
				[Address(RVA = "0x956924", Offset = "0x956924", VA = "0x956924", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001837")]
			[Address(RVA = "0x9564B0", Offset = "0x9564B0", VA = "0x9564B0")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001838")]
			[Address(RVA = "0x956654", Offset = "0x956654", VA = "0x956654", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001839")]
			[Address(RVA = "0x956658", Offset = "0x956658", VA = "0x956658", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600183B")]
			[Address(RVA = "0x9568C4", Offset = "0x9568C4", VA = "0x9568C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000B8")]
		public float volume
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x954010", Offset = "0x954010", VA = "0x954010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x955C38", Offset = "0x955C38", VA = "0x955C38")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float pitch
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x955C54", Offset = "0x955C54", VA = "0x955C54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x955C70", Offset = "0x955C70", VA = "0x955C70")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public AudioClip clip
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x955C8C", Offset = "0x955C8C", VA = "0x955C8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x955CA8", Offset = "0x955CA8", VA = "0x955CA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public float time
		{
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x955CC4", Offset = "0x955CC4", VA = "0x955CC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x951F48", Offset = "0x951F48", VA = "0x951F48")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public float length
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x955CE0", Offset = "0x955CE0", VA = "0x955CE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BD")]
		public bool loop
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x955D98", Offset = "0x955D98", VA = "0x955D98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x955DB4", Offset = "0x955DB4", VA = "0x955DB4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public bool mute
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x955DD4", Offset = "0x955DD4", VA = "0x955DD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x955DF0", Offset = "0x955DF0", VA = "0x955DF0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x955E10", Offset = "0x955E10", VA = "0x955E10")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x955E2C", Offset = "0x955E2C", VA = "0x955E2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public bool isPlaying
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x955E48", Offset = "0x955E48", VA = "0x955E48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x955E64", Offset = "0x955E64", VA = "0x955E64")]
		private void Awake()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x953FFC", Offset = "0x953FFC", VA = "0x953FFC")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x956070", Offset = "0x956070", VA = "0x956070")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x954318", Offset = "0x954318", VA = "0x954318")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x956078", Offset = "0x956078", VA = "0x956078")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x956080", Offset = "0x956080", VA = "0x956080")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x954B10", Offset = "0x954B10", VA = "0x954B10")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x951328", Offset = "0x951328", VA = "0x951328")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x956088", Offset = "0x956088", VA = "0x956088")]
		public void Play()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x9560E8", Offset = "0x9560E8", VA = "0x9560E8")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x95117C", Offset = "0x95117C", VA = "0x95117C")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x9561B0", Offset = "0x9561B0", VA = "0x9561B0")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x9545DC", Offset = "0x9545DC", VA = "0x9545DC")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x95481C", Offset = "0x95481C", VA = "0x95481C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x9516CC", Offset = "0x9516CC", VA = "0x9516CC")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x956208", Offset = "0x956208", VA = "0x956208")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x956234", Offset = "0x956234", VA = "0x956234")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5563E0", Offset = "0x5563E0")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x9562F0", Offset = "0x9562F0", VA = "0x9562F0")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x951AC8", Offset = "0x951AC8", VA = "0x951AC8")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x951B44", Offset = "0x951B44", VA = "0x951B44")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x951978", Offset = "0x951978", VA = "0x951978")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x9517C4", Offset = "0x9517C4", VA = "0x9517C4")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x956358", Offset = "0x956358", VA = "0x956358")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556444", Offset = "0x556444")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x9563DC", Offset = "0x9563DC", VA = "0x9563DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5564A8", Offset = "0x5564A8")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x9564DC", Offset = "0x9564DC", VA = "0x9564DC")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001071")]
		Random,
		[Token(Token = "0x4001072")]
		Sequential
	}
	[Token(Token = "0x20001DF")]
	public enum FreqHint
	{
		[Token(Token = "0x4001074")]
		None,
		[Token(Token = "0x4001075")]
		Wide,
		[Token(Token = "0x4001076")]
		Narrow
	}
	[Token(Token = "0x20001E0")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001078")]
		VeryLow = -2,
		[Token(Token = "0x4001079")]
		Low,
		[Token(Token = "0x400107A")]
		Default,
		[Token(Token = "0x400107B")]
		High,
		[Token(Token = "0x400107C")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20001E1")]
	public class OSPProps
	{
		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552B54", Offset = "0x552B54")]
		public bool enableSpatialization;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552B8C", Offset = "0x552B8C")]
		public bool useFastOverride;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552BC4", Offset = "0x552BC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x552BC4", Offset = "0x552BC4")]
		public float gain;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552C18", Offset = "0x552C18")]
		public bool enableInvSquare;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552C50", Offset = "0x552C50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x552C50", Offset = "0x552C50")]
		public float volumetric;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552CA8", Offset = "0x552CA8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x552CA8", Offset = "0x552CA8")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x955BA8", Offset = "0x955BA8", VA = "0x955BA8")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E2")]
	public class SoundFX
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552D08", Offset = "0x552D08")]
		public string name;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552D40", Offset = "0x552D40")]
		public SoundFXNext playback;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552D78", Offset = "0x552D78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x552D78", Offset = "0x552D78")]
		public float volume;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552DCC", Offset = "0x552DCC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x552DCC", Offset = "0x552DCC")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552E28", Offset = "0x552E28")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x552E28", Offset = "0x552E28")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552E88", Offset = "0x552E88")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552EC0", Offset = "0x552EC0")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552EF8", Offset = "0x552EF8")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552F30", Offset = "0x552F30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x552F30", Offset = "0x552F30")]
		public float spread;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552F88", Offset = "0x552F88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x552F88", Offset = "0x552F88")]
		public float pctChanceToPlay;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x552FDC", Offset = "0x552FDC")]
		public SoundPriority priority;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x553014", Offset = "0x553014")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x553014", Offset = "0x553014")]
		public Vector2 delay;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x553070", Offset = "0x553070")]
		public bool looping;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5530A8", Offset = "0x5530A8")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000C1")]
		public int Length
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x956B08", Offset = "0x956B08", VA = "0x956B08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C2")]
		public bool IsValid
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x956B24", Offset = "0x956B24", VA = "0x956B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C3")]
		public SoundGroup Group
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x956BC8", Offset = "0x956BC8", VA = "0x956BC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x956BD0", Offset = "0x956BD0", VA = "0x956BD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x953F04", Offset = "0x953F04", VA = "0x953F04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C5")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x953F38", Offset = "0x953F38", VA = "0x953F38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x9554B8", Offset = "0x9554B8", VA = "0x9554B8")]
		public SoundFX()
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x953E34", Offset = "0x953E34", VA = "0x953E34")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x953F5C", Offset = "0x953F5C", VA = "0x953F5C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x953F10", Offset = "0x953F10", VA = "0x953F10")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x956BF8", Offset = "0x956BF8", VA = "0x956BF8")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x953F50", Offset = "0x953F50", VA = "0x953F50")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x956CF4", Offset = "0x956CF4", VA = "0x956CF4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x956DD0", Offset = "0x956DD0", VA = "0x956DD0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x956EE4", Offset = "0x956EE4", VA = "0x956EE4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x956F70", Offset = "0x956F70", VA = "0x956F70")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x957004", Offset = "0x957004", VA = "0x957004")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x957090", Offset = "0x957090", VA = "0x957090")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x95711C", Offset = "0x95711C", VA = "0x95711C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E3")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000C6")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x957194", Offset = "0x957194", VA = "0x957194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public string name
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x957288", Offset = "0x957288", VA = "0x957288")]
			get
			{
				return null;
			}
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x957290", Offset = "0x957290", VA = "0x957290")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public int Length
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x957298", Offset = "0x957298", VA = "0x957298")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C9")]
		public bool IsValid
		{
			[Token(Token = "0x600128F")]
			[Address(RVA = "0x9572DC", Offset = "0x9572DC", VA = "0x9572DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x9571C4", Offset = "0x9571C4", VA = "0x9571C4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x957314", Offset = "0x957314", VA = "0x957314")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x95734C", Offset = "0x95734C", VA = "0x95734C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x95738C", Offset = "0x95738C", VA = "0x95738C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x94ED48", Offset = "0x94ED48", VA = "0x94ED48")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x9573D4", Offset = "0x9573D4", VA = "0x9573D4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x957414", Offset = "0x957414", VA = "0x957414")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x957464", Offset = "0x957464", VA = "0x957464")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x95749C", Offset = "0x95749C", VA = "0x95749C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x9574DC", Offset = "0x9574DC", VA = "0x9574DC")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x957514", Offset = "0x957514", VA = "0x957514")]
		public SoundFXRef()
		{
		}
	}
}
namespace Kirnu
{
	[Token(Token = "0x20001E4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x54C2A8", Offset = "0x54C2A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x54C2A8", Offset = "0x54C2A8")]
	public class MarvelousBloom : MonoBehaviour
	{
		[Token(Token = "0x20002D2")]
		public enum Resolution
		{
			[Token(Token = "0x4001545")]
			Lower,
			[Token(Token = "0x4001546")]
			Low,
			[Token(Token = "0x4001547")]
			High,
			[Token(Token = "0x4001548")]
			Higher
		}

		[Token(Token = "0x20002D3")]
		public enum BlurType
		{
			[Token(Token = "0x400154A")]
			Standard,
			[Token(Token = "0x400154B")]
			Sgx
		}

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color bloomColor;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5530E0", Offset = "0x5530E0")]
		public float threshold;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5530F8", Offset = "0x5530F8")]
		public float intensity;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Resolution resolution;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x553110", Offset = "0x553110")]
		public int blurIterations;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader shader;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material material;

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x733258", Offset = "0x733258", VA = "0x733258")]
		private void Start()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x733298", Offset = "0x733298", VA = "0x733298")]
		public void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x7336E8", Offset = "0x7336E8", VA = "0x7336E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x7336EC", Offset = "0x7336EC", VA = "0x7336EC")]
		public MarvelousBloom()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class OceanCreator
	{
		[Token(Token = "0x600129E")]
		[Address(RVA = "0x733734", Offset = "0x733734", VA = "0x733734")]
		private static Mesh createPlaneMesh(int widthSegments, int lengthSegments, float width, float length)
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x733B30", Offset = "0x733B30", VA = "0x733B30")]
		public static Mesh createOcean()
		{
			return null;
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x733F00", Offset = "0x733F00", VA = "0x733F00")]
		public OceanCreator()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	internal class FloatingObject
	{
		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> vertices;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform t;

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x7331E8", Offset = "0x7331E8", VA = "0x7331E8")]
		public FloatingObject()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	[ExecuteInEditMode]
	public class OceanWaver : MonoBehaviour
	{
		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> floatingObjects;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waveHeight;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float waveSpeed;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float yPower;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float xPower;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float zPower;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] vertices;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] normals;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color[] speeds;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] newVertices;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh mesh;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Mesh newMesh;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<FloatingObject> internalFloatingObjects;

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x733F08", Offset = "0x733F08", VA = "0x733F08")]
		private void preCalculateFloatingObjects()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x73418C", Offset = "0x73418C", VA = "0x73418C")]
		private void calculateFloatingObjects()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x73453C", Offset = "0x73453C", VA = "0x73453C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x734724", Offset = "0x734724", VA = "0x734724")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x734934", Offset = "0x734934", VA = "0x734934")]
		public OceanWaver()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x54C350", Offset = "0x54C350")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x54C350", Offset = "0x54C350")]
	public class ScreenTextureBlend : MonoBehaviour
	{
		[Token(Token = "0x20002D4")]
		public enum BlendMode
		{
			[Token(Token = "0x400154D")]
			Darken,
			[Token(Token = "0x400154E")]
			Multiply,
			[Token(Token = "0x400154F")]
			ColorBurn,
			[Token(Token = "0x4001550")]
			LinearBurn,
			[Token(Token = "0x4001551")]
			Lighten,
			[Token(Token = "0x4001552")]
			Screen,
			[Token(Token = "0x4001553")]
			ColorDodge,
			[Token(Token = "0x4001554")]
			LinearDodge,
			[Token(Token = "0x4001555")]
			Overlay,
			[Token(Token = "0x4001556")]
			SoftLight,
			[Token(Token = "0x4001557")]
			HardLight,
			[Token(Token = "0x4001558")]
			VividLight,
			[Token(Token = "0x4001559")]
			LinearLight,
			[Token(Token = "0x400155A")]
			PinLight,
			[Token(Token = "0x400155B")]
			Difference,
			[Token(Token = "0x400155C")]
			Exclusion
		}

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlendMode blendMode;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int currentBlendMode;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x553128", Offset = "0x553128")]
		public float blendIntensity;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x553140", Offset = "0x553140")]
		public float vignetteIntensity;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x553158", Offset = "0x553158")]
		public float vignetteMaxValue;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D gradientTexture;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader shader;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material material;

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x7349E4", Offset = "0x7349E4", VA = "0x7349E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x734A94", Offset = "0x734A94", VA = "0x734A94")]
		public void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x734D14", Offset = "0x734D14", VA = "0x734D14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x734D18", Offset = "0x734D18", VA = "0x734D18")]
		public ScreenTextureBlend()
		{
		}
	}
}
namespace csDelaunay
{
	[Token(Token = "0x20001E9")]
	public class Edge
	{
		[Token(Token = "0x20002D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB80", Offset = "0x54CB80")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2f coord;

			[Token(Token = "0x600183D")]
			[Address(RVA = "0xD48024", Offset = "0xD48024", VA = "0xD48024")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600183E")]
			[Address(RVA = "0xD48D50", Offset = "0xD48D50", VA = "0xD48D50")]
			internal bool <SelectEdgesForSitePoint>b__0(Edge e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<Edge> pool;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int nEdges;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Edge DELETED;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float a;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float b;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float c;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vertex leftVertex;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vertex rightVertex;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<LR, Vector2f> clippedVertices;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<LR, Site> sites;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int edgeIndex;

		[Token(Token = "0x170000CA")]
		public Vertex LeftVertex
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0xD4802C", Offset = "0xD4802C", VA = "0xD4802C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		public Vertex RightVertex
		{
			[Token(Token = "0x60012AF")]
			[Address(RVA = "0xD48034", Offset = "0xD48034", VA = "0xD48034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public Dictionary<LR, Vector2f> ClippedEnds
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xD48424", Offset = "0xD48424", VA = "0xD48424")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		public Site LeftSite
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0xD48244", Offset = "0xD48244", VA = "0xD48244")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xD47CCC", Offset = "0xD47CCC", VA = "0xD47CCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public Site RightSite
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0xD482CC", Offset = "0xD482CC", VA = "0xD482CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0xD47D64", Offset = "0xD47D64", VA = "0xD47D64")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public int EdgeIndex
		{
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xD484A4", Offset = "0xD484A4", VA = "0xD484A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xD47A98", Offset = "0xD47A98", VA = "0xD47A98")]
		public static Edge CreateBisectingEdge(Site s0, Site s1)
		{
			return null;
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xD47BF8", Offset = "0xD47BF8", VA = "0xD47BF8")]
		private static Edge Create()
		{
			return null;
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xD47F58", Offset = "0xD47F58", VA = "0xD47F58")]
		public static List<Edge> SelectEdgesForSitePoint(Vector2f coord, List<Edge> edgesToTest)
		{
			return null;
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xD4803C", Offset = "0xD4803C", VA = "0xD4803C")]
		public Vertex Vertex(LR leftRight)
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xD480C8", Offset = "0xD480C8", VA = "0xD480C8")]
		public void SetVertex(LR leftRight, Vertex v)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xD48158", Offset = "0xD48158", VA = "0xD48158")]
		public bool IsPartOfConvexHull()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xD48178", Offset = "0xD48178", VA = "0xD48178")]
		public float SitesDistance()
		{
			return default(float);
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xD48354", Offset = "0xD48354", VA = "0xD48354")]
		public static int CompareSitesDistances_MAX(Edge edge0, Edge edge1)
		{
			return default(int);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xD483A8", Offset = "0xD483A8", VA = "0xD483A8")]
		public static int CompareSitesDistances(Edge edge0, Edge edge1)
		{
			return default(int);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xD4842C", Offset = "0xD4842C", VA = "0xD4842C")]
		public bool Visible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xD4843C", Offset = "0xD4843C", VA = "0xD4843C")]
		public Site Site(LR leftRight)
		{
			return null;
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xD484AC", Offset = "0xD484AC", VA = "0xD484AC")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xD47ED0", Offset = "0xD47ED0", VA = "0xD47ED0")]
		public Edge()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xD47E64", Offset = "0xD47E64", VA = "0xD47E64")]
		public Edge Init()
		{
			return null;
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xD4856C", Offset = "0xD4856C", VA = "0xD4856C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xD488F4", Offset = "0xD488F4", VA = "0xD488F4")]
		public void ClipVertices(Rectf bounds)
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class EdgeList
	{
		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float deltaX;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float xmin;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int hashSize;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Halfedge[] hash;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Halfedge leftEnd;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Halfedge rightEnd;

		[Token(Token = "0x170000D0")]
		public Halfedge LeftEnd
		{
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xD48E80", Offset = "0xD48E80", VA = "0xD48E80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		public Halfedge RightEnd
		{
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0xD48E88", Offset = "0xD48E88", VA = "0xD48E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xD48E90", Offset = "0xD48E90", VA = "0xD48E90")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xD48FAC", Offset = "0xD48FAC", VA = "0xD48FAC")]
		public EdgeList(float xmin, float deltaX, int sqrtSitesNb)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xD4918C", Offset = "0xD4918C", VA = "0xD4918C")]
		public void Insert(Halfedge lb, Halfedge newHalfedge)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xD491C4", Offset = "0xD491C4", VA = "0xD491C4")]
		public void Remove(Halfedge halfedge)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xD4926C", Offset = "0xD4926C", VA = "0xD4926C")]
		public Halfedge EdgeListLeftNeighbor(Vector2f p)
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xD49424", Offset = "0xD49424", VA = "0xD49424")]
		private Halfedge GetHash(int b)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EB")]
	public class EdgeReorderer
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Edge> edges;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LR> edgeOrientations;

		[Token(Token = "0x170000D2")]
		public List<Edge> Edges
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0xD49764", Offset = "0xD49764", VA = "0xD49764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		public List<LR> EdgeOrientations
		{
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0xD4976C", Offset = "0xD4976C", VA = "0xD4976C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xD49774", Offset = "0xD49774", VA = "0xD49774")]
		public EdgeReorderer(List<Edge> origEdges, Type criterion)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xD49F20", Offset = "0xD49F20", VA = "0xD49F20")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xD49848", Offset = "0xD49848", VA = "0xD49848")]
		private List<Edge> ReorderEdges(List<Edge> origEdges, Type criterion)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EC")]
	public class Halfedge
	{
		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<Halfedge> pool;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Halfedge edgeListLeftNeighbor;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Halfedge edgeListRightNeighbor;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Halfedge nextInPriorityQueue;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Edge edge;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LR leftRight;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vertex vertex;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float ystar;

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xD49F28", Offset = "0xD49F28", VA = "0xD49F28")]
		public static Halfedge Create(Edge edge, LR lr)
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xD49128", Offset = "0xD49128", VA = "0xD49128")]
		public static Halfedge CreateDummy()
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xD4A01C", Offset = "0xD4A01C", VA = "0xD4A01C")]
		public Halfedge(Edge edge, LR lr)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xD4A010", Offset = "0xD4A010", VA = "0xD4A010")]
		private Halfedge Init(Edge edge, LR lr)
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xD4A058", Offset = "0xD4A058", VA = "0xD4A058", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xD48EFC", Offset = "0xD48EFC", VA = "0xD48EFC")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xD4A1D0", Offset = "0xD4A1D0", VA = "0xD4A1D0")]
		public void ReallyDispose()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xD49520", Offset = "0xD49520", VA = "0xD49520")]
		public bool IsLeftOf(Vector2f p)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001ED")]
	public class HalfedgePriorityQueue
	{
		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Halfedge[] hash;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int count;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int minBucked;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int hashSize;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float ymin;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float deltaY;

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xD4A2D4", Offset = "0xD4A2D4", VA = "0xD4A2D4")]
		public HalfedgePriorityQueue(float ymin, float deltaY, int sqrtSitesNb)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xD4A44C", Offset = "0xD4A44C", VA = "0xD4A44C")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xD4A31C", Offset = "0xD4A31C", VA = "0xD4A31C")]
		public void Init()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xD4A4C0", Offset = "0xD4A4C0", VA = "0xD4A4C0")]
		public void Insert(Halfedge halfedge)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xD4A5D4", Offset = "0xD4A5D4", VA = "0xD4A5D4")]
		public void Remove(Halfedge halfedge)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xD4A590", Offset = "0xD4A590", VA = "0xD4A590")]
		private int Bucket(Halfedge halfedge)
		{
			return default(int);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xD4A670", Offset = "0xD4A670", VA = "0xD4A670")]
		private bool IsEmpty(int bucket)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xD4A6BC", Offset = "0xD4A6BC", VA = "0xD4A6BC")]
		private void AdjustMinBucket()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xD4A70C", Offset = "0xD4A70C", VA = "0xD4A70C")]
		public bool Empty()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xD4A71C", Offset = "0xD4A71C", VA = "0xD4A71C")]
		public Vector2f Min()
		{
			return default(Vector2f);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xD4A79C", Offset = "0xD4A79C", VA = "0xD4A79C")]
		public Halfedge ExtractMin()
		{
			return null;
		}
	}
	[Token(Token = "0x20001EE")]
	public interface ICoord
	{
		[Token(Token = "0x170000D4")]
		Vector2f Coord
		{
			[Token(Token = "0x60012E5")]
			get;
			[Token(Token = "0x60012E6")]
			set;
		}
	}
	[Token(Token = "0x20001EF")]
	public class LR
	{
		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly LR LEFT;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly LR RIGHT;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name;

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xD4A804", Offset = "0xD4A804", VA = "0xD4A804")]
		public LR(string name)
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xD4A830", Offset = "0xD4A830", VA = "0xD4A830")]
		public static LR Other(LR leftRight)
		{
			return null;
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xD4A8F0", Offset = "0xD4A8F0", VA = "0xD4A8F0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001F0")]
	public class Site : ICoord
	{
		[Serializable]
		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CB90", Offset = "0x54CB90")]
		private sealed class <>c
		{
			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Site> <>9__2_0;

			[Token(Token = "0x6001840")]
			[Address(RVA = "0xD4C5B0", Offset = "0xD4C5B0", VA = "0xD4C5B0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001841")]
			[Address(RVA = "0xD4C5B8", Offset = "0xD4C5B8", VA = "0xD4C5B8")]
			internal int <SortSites>b__2_0(Site s0, Site s1)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<Site> pool;

		[Token(Token = "0x40010DC")]
		private const float EPSILON = 0.005f;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int siteIndex;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector2f coord;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float weigth;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Edge> edges;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<LR> edgeOrientations;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector2f> region;

		[Token(Token = "0x170000D5")]
		public int SiteIndex
		{
			[Token(Token = "0x60012F0")]
			[Address(RVA = "0xD4B3A8", Offset = "0xD4B3A8", VA = "0xD4B3A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xD4B3B0", Offset = "0xD4B3B0", VA = "0xD4B3B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public Vector2f Coord
		{
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0xD4B3B8", Offset = "0xD4B3B8", VA = "0xD4B3B8", Slot = "4")]
			get
			{
				return default(Vector2f);
			}
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xD4B3C0", Offset = "0xD4B3C0", VA = "0xD4B3C0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public float x
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xD47BE8", Offset = "0xD47BE8", VA = "0xD47BE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D8")]
		public float y
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xD47BF0", Offset = "0xD47BF0", VA = "0xD47BF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D9")]
		public float Weigth
		{
			[Token(Token = "0x60012F6")]
			[Address(RVA = "0xD4B3C8", Offset = "0xD4B3C8", VA = "0xD4B3C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000DA")]
		public List<Edge> Edges
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0xD4B3D0", Offset = "0xD4B3D0", VA = "0xD4B3D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xD4AF20", Offset = "0xD4AF20", VA = "0xD4AF20")]
		public static Site Create(Vector2f p, int index, float weigth)
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xD4B118", Offset = "0xD4B118", VA = "0xD4B118")]
		public static void SortSites(List<Site> sites)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xD4B20C", Offset = "0xD4B20C", VA = "0xD4B20C")]
		public int Compare(Site s1, Site s2)
		{
			return default(int);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xD4B228", Offset = "0xD4B228", VA = "0xD4B228")]
		public int CompareTo(Site s1)
		{
			return default(int);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xD4B2F0", Offset = "0xD4B2F0", VA = "0xD4B2F0")]
		private static bool CloseEnough(Vector2f p0, Vector2f p1)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xD4B0C0", Offset = "0xD4B0C0", VA = "0xD4B0C0")]
		public Site(Vector2f p, int index, float weigth)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xD4B01C", Offset = "0xD4B01C", VA = "0xD4B01C")]
		private Site Init(Vector2f p, int index, float weigth)
		{
			return null;
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xD4B3D8", Offset = "0xD4B3D8", VA = "0xD4B3D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xD4B560", Offset = "0xD4B560", VA = "0xD4B560")]
		private void Move(Vector2f p)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xD4B628", Offset = "0xD4B628", VA = "0xD4B628")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xD4B594", Offset = "0xD4B594", VA = "0xD4B594")]
		private void Clear()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xD47DFC", Offset = "0xD47DFC", VA = "0xD47DFC")]
		public void AddEdge(Edge edge)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xD4B6B4", Offset = "0xD4B6B4", VA = "0xD4B6B4")]
		public Edge NearestEdge()
		{
			return null;
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xD4B774", Offset = "0xD4B774", VA = "0xD4B774")]
		public List<Site> NeighborSites()
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xD4B9C4", Offset = "0xD4B9C4", VA = "0xD4B9C4")]
		private Site NeighborSite(Edge edge)
		{
			return null;
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xD4BA30", Offset = "0xD4BA30", VA = "0xD4BA30")]
		public List<Vector2f> Region(Rectf clippingBounds)
		{
			return null;
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xD4B8FC", Offset = "0xD4B8FC", VA = "0xD4B8FC")]
		private void ReorderEdges()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xD4BB64", Offset = "0xD4BB64", VA = "0xD4BB64")]
		private List<Vector2f> ClipToBounds(Rectf bounds)
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xD4BDFC", Offset = "0xD4BDFC", VA = "0xD4BDFC")]
		private void Connect(ref List<Vector2f> points, int j, Rectf bounds, bool closingUp = false)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xD4C3B4", Offset = "0xD4C3B4", VA = "0xD4C3B4")]
		public float Dist(ICoord p)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001F1")]
	public class BoundsCheck
	{
		[Token(Token = "0x40010E3")]
		public const int TOP = 1;

		[Token(Token = "0x40010E4")]
		public const int BOTTOM = 2;

		[Token(Token = "0x40010E5")]
		public const int LEFT = 4;

		[Token(Token = "0x40010E6")]
		public const int RIGHT = 8;

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xD477E0", Offset = "0xD477E0", VA = "0xD477E0")]
		public static int Check(Vector2f point, Rectf bounds)
		{
			return default(int);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xD47868", Offset = "0xD47868", VA = "0xD47868")]
		public BoundsCheck()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class SiteList
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Site> sites;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int currentIndex;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool sorted;

		[Token(Token = "0x170000DB")]
		public List<Site> Sites
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0xD4C63C", Offset = "0xD4C63C", VA = "0xD4C63C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xD4C644", Offset = "0xD4C644", VA = "0xD4C644")]
		public SiteList()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xD4C6BC", Offset = "0xD4C6BC", VA = "0xD4C6BC")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xD4C714", Offset = "0xD4C714", VA = "0xD4C714")]
		public int Add(Site site)
		{
			return default(int);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xD4C790", Offset = "0xD4C790", VA = "0xD4C790")]
		public int Count()
		{
			return default(int);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xD4C7E0", Offset = "0xD4C7E0", VA = "0xD4C7E0")]
		public Site Next()
		{
			return null;
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xD4C8B8", Offset = "0xD4C8B8", VA = "0xD4C8B8")]
		public Rectf GetSitesBounds()
		{
			return default(Rectf);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xD4CB40", Offset = "0xD4CB40", VA = "0xD4CB40")]
		public List<Vector2f> SiteCoords()
		{
			return null;
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xD4CC84", Offset = "0xD4CC84", VA = "0xD4CC84")]
		public List<Circle> Circles()
		{
			return null;
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xD4CE78", Offset = "0xD4CE78", VA = "0xD4CE78")]
		public List<List<Vector2f>> Regions(Rectf plotBounds)
		{
			return null;
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xD4CB38", Offset = "0xD4CB38", VA = "0xD4CB38")]
		public void ResetListIndex()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xD4CAC4", Offset = "0xD4CAC4", VA = "0xD4CAC4")]
		public void SortList()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class Triangle
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Site> sites;

		[Token(Token = "0x170000DC")]
		public List<Site> Sites
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0xD4CFF0", Offset = "0xD4CFF0", VA = "0xD4CFF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xD4CFF8", Offset = "0xD4CFF8", VA = "0xD4CFF8")]
		public Triangle(Site a, Site b, Site c)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xD4D0CC", Offset = "0xD4D0CC", VA = "0xD4D0CC")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class Vertex : ICoord
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vertex VERTEX_AT_INFINITY;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Queue<Vertex> pool;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int nVertices;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2f coord;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int vertexIndex;

		[Token(Token = "0x170000DD")]
		public Vector2f Coord
		{
			[Token(Token = "0x600131A")]
			[Address(RVA = "0xD4D304", Offset = "0xD4D304", VA = "0xD4D304", Slot = "4")]
			get
			{
				return default(Vector2f);
			}
			[Token(Token = "0x600131B")]
			[Address(RVA = "0xD4D30C", Offset = "0xD4D30C", VA = "0xD4D30C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public float x
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0xD48CB0", Offset = "0xD48CB0", VA = "0xD48CB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000DF")]
		public float y
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0xD48CA8", Offset = "0xD48CA8", VA = "0xD48CA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E0")]
		public int VertexIndex
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0xD4D314", Offset = "0xD4D314", VA = "0xD4D314")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xD4D124", Offset = "0xD4D124", VA = "0xD4D124")]
		private static Vertex Create(float x, float y)
		{
			return null;
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xD4D2B0", Offset = "0xD4D2B0", VA = "0xD4D2B0")]
		public Vertex(float x, float y)
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xD4D278", Offset = "0xD4D278", VA = "0xD4D278")]
		private Vertex Init(float x, float y)
		{
			return null;
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xD4D31C", Offset = "0xD4D31C", VA = "0xD4D31C")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xD4D3D0", Offset = "0xD4D3D0", VA = "0xD4D3D0")]
		public void SetIndex()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xD4D448", Offset = "0xD4D448", VA = "0xD4D448", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xD4D4D4", Offset = "0xD4D4D4", VA = "0xD4D4D4")]
		public static Vertex Intersect(Halfedge halfedge0, Halfedge halfedge1)
		{
			return null;
		}
	}
	[Token(Token = "0x20001F5")]
	public class Voronoi
	{
		[Serializable]
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CBA0", Offset = "0x54CBA0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Edge> <>9__25_0;

			[Token(Token = "0x6001843")]
			[Address(RVA = "0xD4F370", Offset = "0xD4F370", VA = "0xD4F370")]
			public <>c()
			{
			}

			[Token(Token = "0x6001844")]
			[Address(RVA = "0xD4F378", Offset = "0xD4F378", VA = "0xD4F378")]
			internal bool <HullEdges>b__25_0(Edge edge)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SiteList sites;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Triangle> triangles;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Edge> edges;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rectf plotBounds;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Vector2f, Site> sitesIndexedByLocation;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private System.Random weigthDistributor;

		[Token(Token = "0x170000E1")]
		public List<Site> Sites
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0xD4D7B8", Offset = "0xD4D7B8", VA = "0xD4D7B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		public List<Edge> Edges
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0xD4D7D4", Offset = "0xD4D7D4", VA = "0xD4D7D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		public Rectf PlotBounds
		{
			[Token(Token = "0x6001328")]
			[Address(RVA = "0xD4D7DC", Offset = "0xD4D7DC", VA = "0xD4D7DC")]
			get
			{
				return default(Rectf);
			}
		}

		[Token(Token = "0x170000E4")]
		public Dictionary<Vector2f, Site> SitesIndexedByLocation
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0xD4D7E8", Offset = "0xD4D7E8", VA = "0xD4D7E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xD4D7F0", Offset = "0xD4D7F0", VA = "0xD4D7F0")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xD4DA1C", Offset = "0xD4DA1C", VA = "0xD4DA1C")]
		public Voronoi(List<Vector2f> points, Rectf plotBounds)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xD4DBE4", Offset = "0xD4DBE4", VA = "0xD4DBE4")]
		public Voronoi(List<Vector2f> points, Rectf plotBounds, int lloydIterations)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xD4DACC", Offset = "0xD4DACC", VA = "0xD4DACC")]
		private void Init(List<Vector2f> points, Rectf plotBounds)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xD4DFD8", Offset = "0xD4DFD8", VA = "0xD4DFD8")]
		private void AddSites(List<Vector2f> points)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xD4EB40", Offset = "0xD4EB40", VA = "0xD4EB40")]
		private void AddSite(Vector2f p, int index)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xD4EC38", Offset = "0xD4EC38", VA = "0xD4EC38")]
		public List<Vector2f> Region(Vector2f p)
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xD4ED04", Offset = "0xD4ED04", VA = "0xD4ED04")]
		public List<Vector2f> NeighborSitesForSite(Vector2f coord)
		{
			return null;
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xD4EE8C", Offset = "0xD4EE8C", VA = "0xD4EE8C")]
		public List<Circle> Circles()
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xD4EEA4", Offset = "0xD4EEA4", VA = "0xD4EEA4")]
		public List<LineSegment> VoronoiBoundarayForSite(Vector2f coord)
		{
			return null;
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xD4EF28", Offset = "0xD4EF28", VA = "0xD4EF28")]
		public List<LineSegment> VoronoiDiagram()
		{
			return null;
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xD4EF30", Offset = "0xD4EF30", VA = "0xD4EF30")]
		public List<Edge> HullEdges()
		{
			return null;
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xD4F028", Offset = "0xD4F028", VA = "0xD4F028")]
		public List<Vector2f> HullPointsInOrder()
		{
			return null;
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xD4F1C0", Offset = "0xD4F1C0", VA = "0xD4F1C0")]
		public List<List<Vector2f>> Regions()
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xD4F1E4", Offset = "0xD4F1E4", VA = "0xD4F1E4")]
		public List<Vector2f> SiteCoords()
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xD4E07C", Offset = "0xD4E07C", VA = "0xD4E07C")]
		private void FortunesAlgorithm()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xD4DCA4", Offset = "0xD4DCA4", VA = "0xD4DCA4")]
		public void LloydRelaxation(int nbIterations)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xD4F2E4", Offset = "0xD4F2E4", VA = "0xD4F2E4")]
		private Site LeftRegion(Halfedge he, Site bottomMostSite)
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xD4F240", Offset = "0xD4F240", VA = "0xD4F240")]
		private Site RightRegion(Halfedge he, Site bottomMostSite)
		{
			return null;
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xD4B29C", Offset = "0xD4B29C", VA = "0xD4B29C")]
		public static int CompareByYThenX(Site s1, Site s2)
		{
			return default(int);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xD4F1FC", Offset = "0xD4F1FC", VA = "0xD4F1FC")]
		public static int CompareByYThenX(Site s1, Vector2f s2)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001F6")]
	public class Circle
	{
		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2f center;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xD47870", Offset = "0xD47870", VA = "0xD47870")]
		public Circle(float centerX, float centerY, float radius)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xD478DC", Offset = "0xD478DC", VA = "0xD478DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001F7")]
	public class LineSegment
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2f p0;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2f p1;

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xD4A9A4", Offset = "0xD4A9A4", VA = "0xD4A9A4")]
		public static List<LineSegment> VisibleLineSegments(List<Edge> edges)
		{
			return null;
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xD4AC10", Offset = "0xD4AC10", VA = "0xD4AC10")]
		public static float CompareLengths_MAX(LineSegment segment0, LineSegment segment1)
		{
			return default(float);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xD4AD08", Offset = "0xD4AD08", VA = "0xD4AD08")]
		public static float CompareLengths(LineSegment edge0, LineSegment edge1)
		{
			return default(float);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xD4ABC4", Offset = "0xD4ABC4", VA = "0xD4ABC4")]
		public LineSegment(Vector2f p0, Vector2f p1)
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class Polygon
	{
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector2f> vertices;

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xD4AD20", Offset = "0xD4AD20", VA = "0xD4AD20")]
		public Polygon(List<Vector2f> vertices)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xD4AD4C", Offset = "0xD4AD4C", VA = "0xD4AD4C")]
		public float Area()
		{
			return default(float);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xD4AEF0", Offset = "0xD4AEF0", VA = "0xD4AEF0")]
		public Winding PolyWinding()
		{
			return default(Winding);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xD4ADCC", Offset = "0xD4ADCC", VA = "0xD4ADCC")]
		private float SignedDoubleArea()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001F9")]
	public enum Winding
	{
		[Token(Token = "0x40010FC")]
		CLOCKWISE,
		[Token(Token = "0x40010FD")]
		COUNTERCLOCKWISE,
		[Token(Token = "0x40010FE")]
		NONE
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x20001FA")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4001100")]
		Array = 1,
		[Token(Token = "0x4001101")]
		Object = 2,
		[Token(Token = "0x4001102")]
		String = 3,
		[Token(Token = "0x4001103")]
		Number = 4,
		[Token(Token = "0x4001104")]
		NullValue = 5,
		[Token(Token = "0x4001105")]
		Boolean = 6,
		[Token(Token = "0x4001106")]
		None = 7,
		[Token(Token = "0x4001107")]
		Custom = 255
	}
	[Token(Token = "0x20001FB")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4001109")]
		Compact,
		[Token(Token = "0x400110A")]
		Indent
	}
	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x54C3E8", Offset = "0x54C3E8")]
	public abstract class JSONNode
	{
		[Token(Token = "0x20002D8")]
		public struct Enumerator
		{
			[Token(Token = "0x20002F6")]
			private enum Type
			{
				[Token(Token = "0x40015CB")]
				None,
				[Token(Token = "0x40015CC")]
				Array,
				[Token(Token = "0x40015CD")]
				Object
			}

			[Token(Token = "0x4001562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4001563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4001564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x170001E7")]
			public bool IsValid
			{
				[Token(Token = "0x6001845")]
				[Address(RVA = "0x5BB2A0", Offset = "0x5BB2A0", VA = "0x5BB2A0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170001E8")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6001848")]
				[Address(RVA = "0x5BB328", Offset = "0x5BB328", VA = "0x5BB328")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6001846")]
			[Address(RVA = "0x5BB2B0", Offset = "0x5BB2B0", VA = "0x5BB2B0")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6001847")]
			[Address(RVA = "0x5BB2EC", Offset = "0x5BB2EC", VA = "0x5BB2EC")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6001849")]
			[Address(RVA = "0x5BB330", Offset = "0x5BB330", VA = "0x5BB330")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002D9")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170001E9")]
			public JSONNode Current
			{
				[Token(Token = "0x600184D")]
				[Address(RVA = "0x5BB500", Offset = "0x5BB500", VA = "0x5BB500")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600184A")]
			[Address(RVA = "0x5BB468", Offset = "0x5BB468", VA = "0x5BB468")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x600184B")]
			[Address(RVA = "0x5BB4B0", Offset = "0x5BB4B0", VA = "0x5BB4B0")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x600184C")]
			[Address(RVA = "0x5BB4E4", Offset = "0x5BB4E4", VA = "0x5BB4E4")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x600184E")]
			[Address(RVA = "0x5BB508", Offset = "0x5BB508", VA = "0x5BB508")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600184F")]
			[Address(RVA = "0x5BB510", Offset = "0x5BB510", VA = "0x5BB510")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x20002DA")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x4001566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170001EA")]
			public JSONNode Current
			{
				[Token(Token = "0x6001853")]
				[Address(RVA = "0x5BB40C", Offset = "0x5BB40C", VA = "0x5BB40C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001850")]
			[Address(RVA = "0x5BB374", Offset = "0x5BB374", VA = "0x5BB374")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6001851")]
			[Address(RVA = "0x5BB3BC", Offset = "0x5BB3BC", VA = "0x5BB3BC")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6001852")]
			[Address(RVA = "0x5BB3F0", Offset = "0x5BB3F0", VA = "0x5BB3F0")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6001854")]
			[Address(RVA = "0x5BB414", Offset = "0x5BB414", VA = "0x5BB414")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001855")]
			[Address(RVA = "0x5BB41C", Offset = "0x5BB41C", VA = "0x5BB41C")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x20002DB")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x4001567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private JSONNode m_Node;

			[Token(Token = "0x4001568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170001EB")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6001857")]
				[Address(RVA = "0x840AB8", Offset = "0x840AB8", VA = "0x840AB8", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x170001EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001858")]
				[Address(RVA = "0x840AC0", Offset = "0x840AC0", VA = "0x840AC0", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001856")]
			[Address(RVA = "0x83EF8C", Offset = "0x83EF8C", VA = "0x83EF8C")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6001859")]
			[Address(RVA = "0x840B2C", Offset = "0x840B2C", VA = "0x840B2C", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0x840B34", Offset = "0x840B34", VA = "0x840B34", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x600185B")]
			[Address(RVA = "0x840B54", Offset = "0x840B54", VA = "0x840B54", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600185C")]
			[Address(RVA = "0x840BB8", Offset = "0x840BB8", VA = "0x840BB8", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x600185D")]
			[Address(RVA = "0x840C64", Offset = "0x840C64", VA = "0x840C64", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20002DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CBB0", Offset = "0x54CBB0")]
		private sealed class <get_Children>d__39 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400156A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170001ED")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001861")]
				[Address(RVA = "0x83FFC8", Offset = "0x83FFC8", VA = "0x83FFC8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001863")]
				[Address(RVA = "0x840030", Offset = "0x840030", VA = "0x840030", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600185E")]
			[Address(RVA = "0x83ED08", Offset = "0x83ED08", VA = "0x83ED08")]
			[DebuggerHidden]
			public <get_Children>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x600185F")]
			[Address(RVA = "0x83FFAC", Offset = "0x83FFAC", VA = "0x83FFAC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001860")]
			[Address(RVA = "0x83FFB0", Offset = "0x83FFB0", VA = "0x83FFB0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001862")]
			[Address(RVA = "0x83FFD0", Offset = "0x83FFD0", VA = "0x83FFD0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001864")]
			[Address(RVA = "0x840038", Offset = "0x840038", VA = "0x840038", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001865")]
			[Address(RVA = "0x8400D0", Offset = "0x8400D0", VA = "0x8400D0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20002DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CBC0", Offset = "0x54CBC0")]
		private sealed class <get_DeepChildren>d__41 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400156D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x400156E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400156F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170001EF")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600186B")]
				[Address(RVA = "0x8406EC", Offset = "0x8406EC", VA = "0x8406EC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600186D")]
				[Address(RVA = "0x840754", Offset = "0x840754", VA = "0x840754", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001866")]
			[Address(RVA = "0x83EDC0", Offset = "0x83EDC0", VA = "0x83EDC0")]
			[DebuggerHidden]
			public <get_DeepChildren>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6001867")]
			[Address(RVA = "0x8400D4", Offset = "0x8400D4", VA = "0x8400D4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001868")]
			[Address(RVA = "0x8402CC", Offset = "0x8402CC", VA = "0x8402CC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001869")]
			[Address(RVA = "0x84020C", Offset = "0x84020C", VA = "0x84020C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600186A")]
			[Address(RVA = "0x84014C", Offset = "0x84014C", VA = "0x84014C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600186C")]
			[Address(RVA = "0x8406F4", Offset = "0x8406F4", VA = "0x8406F4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600186E")]
			[Address(RVA = "0x84075C", Offset = "0x84075C", VA = "0x84075C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600186F")]
			[Address(RVA = "0x840808", Offset = "0x840808", VA = "0x840808", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x400110C")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x170000E5")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x6001349")]
			get;
		}

		[Token(Token = "0x170000E6")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0x83EB68", Offset = "0x83EB68", VA = "0x83EB68", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x83EB70", Offset = "0x83EB70", VA = "0x83EB70", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x83EB74", Offset = "0x83EB74", VA = "0x83EB74", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134D")]
			[Address(RVA = "0x83EB7C", Offset = "0x83EB7C", VA = "0x83EB7C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public virtual string Value
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0x83EB80", Offset = "0x83EB80", VA = "0x83EB80", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600134F")]
			[Address(RVA = "0x83EBC8", Offset = "0x83EBC8", VA = "0x83EBC8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public virtual int Count
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0x83EBCC", Offset = "0x83EBCC", VA = "0x83EBCC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EA")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0x83EBD4", Offset = "0x83EBD4", VA = "0x83EBD4", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EB")]
		public virtual bool IsString
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x83EBDC", Offset = "0x83EBDC", VA = "0x83EBDC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0x83EBE4", Offset = "0x83EBE4", VA = "0x83EBE4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000ED")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6001354")]
			[Address(RVA = "0x83EBEC", Offset = "0x83EBEC", VA = "0x83EBEC", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EE")]
		public virtual bool IsArray
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0x83EBF4", Offset = "0x83EBF4", VA = "0x83EBF4", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EF")]
		public virtual bool IsObject
		{
			[Token(Token = "0x6001356")]
			[Address(RVA = "0x83EBFC", Offset = "0x83EBFC", VA = "0x83EBFC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F0")]
		public virtual bool Inline
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0x83EC04", Offset = "0x83EC04", VA = "0x83EC04", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x83EC0C", Offset = "0x83EC0C", VA = "0x83EC0C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600135E")]
			[Address(RVA = "0x83EC98", Offset = "0x83EC98", VA = "0x83EC98", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55650C", Offset = "0x55650C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x83ED40", Offset = "0x83ED40", VA = "0x83ED40")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556570", Offset = "0x556570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x83EF2C", Offset = "0x83EF2C", VA = "0x83EF2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x83F050", Offset = "0x83F050", VA = "0x83F050")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x170000F5")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x83F098", Offset = "0x83F098", VA = "0x83F098")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x170000F6")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x83F0E0", Offset = "0x83F0E0", VA = "0x83F0E0", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x83F184", Offset = "0x83F184", VA = "0x83F184", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public virtual int AsInt
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0x83F1C4", Offset = "0x83F1C4", VA = "0x83F1C4", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x83F1E8", Offset = "0x83F1E8", VA = "0x83F1E8", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public virtual float AsFloat
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x83F200", Offset = "0x83F200", VA = "0x83F200", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x83F224", Offset = "0x83F224", VA = "0x83F224", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public virtual bool AsBool
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x83F238", Offset = "0x83F238", VA = "0x83F238", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600136E")]
			[Address(RVA = "0x83F300", Offset = "0x83F300", VA = "0x83F300", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x83F37C", Offset = "0x83F37C", VA = "0x83F37C", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0x83F3FC", Offset = "0x83F3FC", VA = "0x83F3FC", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x83FA48", Offset = "0x83FA48", VA = "0x83FA48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x83EC10", Offset = "0x83EC10", VA = "0x83EC10", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x83EC14", Offset = "0x83EC14", VA = "0x83EC14", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x83EC80", Offset = "0x83EC80", VA = "0x83EC80", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x83EC88", Offset = "0x83EC88", VA = "0x83EC88", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x83EC90", Offset = "0x83EC90", VA = "0x83EC90", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x83EDF8", Offset = "0x83EDF8", VA = "0x83EDF8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x83EE8C", Offset = "0x83EE8C", VA = "0x83EE8C", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6001363")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x83F47C", Offset = "0x83F47C", VA = "0x83F47C")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x83F4E0", Offset = "0x83F4E0", VA = "0x83F4E0")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x83F574", Offset = "0x83F574", VA = "0x83F574")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x83F5E0", Offset = "0x83F5E0", VA = "0x83F5E0")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x83F678", Offset = "0x83F678", VA = "0x83F678")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x83F6E4", Offset = "0x83F6E4", VA = "0x83F6E4")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x83F77C", Offset = "0x83F77C", VA = "0x83F77C")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x83F7E0", Offset = "0x83F7E0", VA = "0x83F7E0")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x83F878", Offset = "0x83F878", VA = "0x83F878")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x83F8D8", Offset = "0x83F8D8", VA = "0x83F8D8")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x83F970", Offset = "0x83F970", VA = "0x83F970")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x83D418", Offset = "0x83D418", VA = "0x83D418")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x83F9B4", Offset = "0x83F9B4", VA = "0x83F9B4")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x83FA34", Offset = "0x83FA34", VA = "0x83FA34", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x83FA40", Offset = "0x83FA40", VA = "0x83FA40", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x83FB18", Offset = "0x83FB18", VA = "0x83FB18")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x83FDB8", Offset = "0x83FDB8", VA = "0x83FDB8")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x83CB50", Offset = "0x83CB50", VA = "0x83CB50")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x83DC54", Offset = "0x83DC54", VA = "0x83DC54")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x54C420", Offset = "0x54C420")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x20002DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CBD0", Offset = "0x54CBD0")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001575")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001576")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170001F1")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001874")]
				[Address(RVA = "0x83DE24", Offset = "0x83DE24", VA = "0x83DE24", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001876")]
				[Address(RVA = "0x83DE8C", Offset = "0x83DE8C", VA = "0x83DE8C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001870")]
			[Address(RVA = "0x83DA14", Offset = "0x83DA14", VA = "0x83DA14")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001871")]
			[Address(RVA = "0x83DC5C", Offset = "0x83DC5C", VA = "0x83DC5C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001872")]
			[Address(RVA = "0x83DCD0", Offset = "0x83DCD0", VA = "0x83DCD0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001873")]
			[Address(RVA = "0x83DC78", Offset = "0x83DC78", VA = "0x83DC78")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001875")]
			[Address(RVA = "0x83DE2C", Offset = "0x83DE2C", VA = "0x83DE2C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001877")]
			[Address(RVA = "0x83DE94", Offset = "0x83DE94", VA = "0x83DE94", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001878")]
			[Address(RVA = "0x83DF40", Offset = "0x83DF40", VA = "0x83DF40", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x170000FD")]
		public override bool Inline
		{
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x83D11C", Offset = "0x83D11C", VA = "0x83D11C", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x83D124", Offset = "0x83D124", VA = "0x83D124", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001388")]
			[Address(RVA = "0x83D130", Offset = "0x83D130", VA = "0x83D130", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000FF")]
		public override bool IsArray
		{
			[Token(Token = "0x6001389")]
			[Address(RVA = "0x83D138", Offset = "0x83D138", VA = "0x83D138", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000100")]
		public override JSONNode Item
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x83D1FC", Offset = "0x83D1FC", VA = "0x83D1FC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x83D31C", Offset = "0x83D31C", VA = "0x83D31C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public override JSONNode Item
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x83D648", Offset = "0x83D648", VA = "0x83D648", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x83D6A8", Offset = "0x83D6A8", VA = "0x83D6A8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public override int Count
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x83D768", Offset = "0x83D768", VA = "0x83D768", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000103")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x83D994", Offset = "0x83D994", VA = "0x83D994", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5565D4", Offset = "0x5565D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x83D140", Offset = "0x83D140", VA = "0x83D140", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x83D7B8", Offset = "0x83D7B8", VA = "0x83D7B8", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x83D878", Offset = "0x83D878", VA = "0x83D878", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x83D924", Offset = "0x83D924", VA = "0x83D924", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x83DA4C", Offset = "0x83DA4C", VA = "0x83DA4C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x83DBC4", Offset = "0x83DBC4", VA = "0x83DBC4")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x54C458", Offset = "0x54C458")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CBE0", Offset = "0x54CBE0")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001577")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6001879")]
			[Address(RVA = "0x87582C", Offset = "0x87582C", VA = "0x87582C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x600187A")]
			[Address(RVA = "0x875C4C", Offset = "0x875C4C", VA = "0x875C4C")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20002E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CBF0", Offset = "0x54CBF0")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001578")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001579")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x400157A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400157B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x400157C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170001F3")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600187F")]
				[Address(RVA = "0x875E98", Offset = "0x875E98", VA = "0x875E98", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001881")]
				[Address(RVA = "0x875F00", Offset = "0x875F00", VA = "0x875F00", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600187B")]
			[Address(RVA = "0x8758B4", Offset = "0x8758B4", VA = "0x8758B4")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600187C")]
			[Address(RVA = "0x875CC8", Offset = "0x875CC8", VA = "0x875CC8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600187D")]
			[Address(RVA = "0x875D3C", Offset = "0x875D3C", VA = "0x875D3C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600187E")]
			[Address(RVA = "0x875CE4", Offset = "0x875CE4", VA = "0x875CE4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001880")]
			[Address(RVA = "0x875EA0", Offset = "0x875EA0", VA = "0x875EA0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001882")]
			[Address(RVA = "0x875F08", Offset = "0x875F08", VA = "0x875F08", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001883")]
			[Address(RVA = "0x875FB4", Offset = "0x875FB4", VA = "0x875FB4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x17000104")]
		public override bool Inline
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x874F08", Offset = "0x874F08", VA = "0x874F08", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x874F10", Offset = "0x874F10", VA = "0x874F10", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x874F1C", Offset = "0x874F1C", VA = "0x874F1C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000106")]
		public override bool IsObject
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x874F24", Offset = "0x874F24", VA = "0x874F24", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000107")]
		public override JSONNode Item
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x874FC0", Offset = "0x874FC0", VA = "0x874FC0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139C")]
			[Address(RVA = "0x875080", Offset = "0x875080", VA = "0x875080", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public override JSONNode Item
		{
			[Token(Token = "0x600139D")]
			[Address(RVA = "0x87519C", Offset = "0x87519C", VA = "0x87519C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x875234", Offset = "0x875234", VA = "0x875234", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public override int Count
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0x875358", Offset = "0x875358", VA = "0x875358", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010A")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x875834", Offset = "0x875834", VA = "0x875834", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556638", Offset = "0x556638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x874F2C", Offset = "0x874F2C", VA = "0x874F2C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x8753B0", Offset = "0x8753B0", VA = "0x8753B0", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x87553C", Offset = "0x87553C", VA = "0x87553C", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x8755F8", Offset = "0x8755F8", VA = "0x8755F8", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x8756B4", Offset = "0x8756B4", VA = "0x8756B4", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x8758EC", Offset = "0x8758EC", VA = "0x8758EC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x875BBC", Offset = "0x875BBC", VA = "0x875BBC")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x1700010B")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0x875FB8", Offset = "0x875FB8", VA = "0x875FB8", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700010C")]
		public override bool IsString
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x875FC0", Offset = "0x875FC0", VA = "0x875FC0", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010D")]
		public override string Value
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x875FE8", Offset = "0x875FE8", VA = "0x875FE8", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013AB")]
			[Address(RVA = "0x875FF0", Offset = "0x875FF0", VA = "0x875FF0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x875FC8", Offset = "0x875FC8", VA = "0x875FC8", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x875FF8", Offset = "0x875FF8", VA = "0x875FF8")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x876074", Offset = "0x876074", VA = "0x876074", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x876130", Offset = "0x876130", VA = "0x876130", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x876254", Offset = "0x876254", VA = "0x876254", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000200")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x1700010E")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x874A94", Offset = "0x874A94", VA = "0x874A94", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700010F")]
		public override bool IsNumber
		{
			[Token(Token = "0x60013B1")]
			[Address(RVA = "0x874A9C", Offset = "0x874A9C", VA = "0x874A9C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		public override string Value
		{
			[Token(Token = "0x60013B3")]
			[Address(RVA = "0x874AC4", Offset = "0x874AC4", VA = "0x874AC4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B4")]
			[Address(RVA = "0x874AD0", Offset = "0x874AD0", VA = "0x874AD0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public override double AsDouble
		{
			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x874B5C", Offset = "0x874B5C", VA = "0x874B5C", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x874B64", Offset = "0x874B64", VA = "0x874B64", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x874AA4", Offset = "0x874AA4", VA = "0x874AA4", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x874B6C", Offset = "0x874B6C", VA = "0x874B6C")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x874BE8", Offset = "0x874BE8", VA = "0x874BE8")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x874C70", Offset = "0x874C70", VA = "0x874C70", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x874C90", Offset = "0x874C90", VA = "0x874C90")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x874DC0", Offset = "0x874DC0", VA = "0x874DC0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x874EFC", Offset = "0x874EFC", VA = "0x874EFC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000201")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x17000112")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x83DF44", Offset = "0x83DF44", VA = "0x83DF44", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000113")]
		public override bool IsBoolean
		{
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x83DF4C", Offset = "0x83DF4C", VA = "0x83DF4C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public override string Value
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x83DF74", Offset = "0x83DF74", VA = "0x83DF74", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x83DF80", Offset = "0x83DF80", VA = "0x83DF80", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public override bool AsBool
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x83E00C", Offset = "0x83E00C", VA = "0x83E00C", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x83E014", Offset = "0x83E014", VA = "0x83E014", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x83DF54", Offset = "0x83DF54", VA = "0x83DF54", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x83E020", Offset = "0x83E020", VA = "0x83E020")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x83E0A0", Offset = "0x83E0A0", VA = "0x83E0A0")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x83E128", Offset = "0x83E128", VA = "0x83E128", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x83E1A4", Offset = "0x83E1A4", VA = "0x83E1A4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x83E22C", Offset = "0x83E22C", VA = "0x83E22C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000202")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool reuseSameInstance;

		[Token(Token = "0x17000116")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x840E3C", Offset = "0x840E3C", VA = "0x840E3C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000117")]
		public override bool IsNull
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x840E44", Offset = "0x840E44", VA = "0x840E44", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		public override string Value
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x840E6C", Offset = "0x840E6C", VA = "0x840E6C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x840EB4", Offset = "0x840EB4", VA = "0x840EB4", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public override bool AsBool
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x840EB8", Offset = "0x840EB8", VA = "0x840EB8", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x840EC0", Offset = "0x840EC0", VA = "0x840EC0", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x83D5A8", Offset = "0x83D5A8", VA = "0x83D5A8")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x840DD4", Offset = "0x840DD4", VA = "0x840DD4")]
		private JSONNull()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x840E4C", Offset = "0x840E4C", VA = "0x840E4C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x840EC4", Offset = "0x840EC4", VA = "0x840EC4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x840F60", Offset = "0x840F60", VA = "0x840F60", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x840F68", Offset = "0x840F68", VA = "0x840F68", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x54C490", Offset = "0x54C490")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x1700011A")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x83E238", Offset = "0x83E238", VA = "0x83E238", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700011B")]
		public override JSONNode Item
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x83E348", Offset = "0x83E348", VA = "0x83E348", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x83E3A8", Offset = "0x83E3A8", VA = "0x83E3A8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public override JSONNode Item
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x83E434", Offset = "0x83E434", VA = "0x83E434", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x83E4A4", Offset = "0x83E4A4", VA = "0x83E4A4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public override int AsInt
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0x83E6B0", Offset = "0x83E6B0", VA = "0x83E6B0", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0x83E720", Offset = "0x83E720", VA = "0x83E720", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public override float AsFloat
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0x83E794", Offset = "0x83E794", VA = "0x83E794", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0x83E804", Offset = "0x83E804", VA = "0x83E804", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public override double AsDouble
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x83E878", Offset = "0x83E878", VA = "0x83E878", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x83E8E8", Offset = "0x83E8E8", VA = "0x83E8E8", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public override bool AsBool
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x83E95C", Offset = "0x83E95C", VA = "0x83E95C", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x83E9C8", Offset = "0x83E9C8", VA = "0x83E9C8", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x83EA38", Offset = "0x83EA38", VA = "0x83EA38", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x60013EE")]
			[Address(RVA = "0x83EAA0", Offset = "0x83EAA0", VA = "0x83EAA0", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x83E240", Offset = "0x83E240", VA = "0x83E240", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x83D2A0", Offset = "0x83D2A0", VA = "0x83D2A0")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x83E260", Offset = "0x83E260", VA = "0x83E260")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x83E2E0", Offset = "0x83E2E0", VA = "0x83E2E0")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x83E53C", Offset = "0x83E53C", VA = "0x83E53C", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x83E5C8", Offset = "0x83E5C8", VA = "0x83E5C8", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x83E660", Offset = "0x83E660", VA = "0x83E660")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x83E678", Offset = "0x83E678", VA = "0x83E678")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x83E690", Offset = "0x83E690", VA = "0x83E690", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x83E6A8", Offset = "0x83E6A8", VA = "0x83E6A8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x83EB0C", Offset = "0x83EB0C", VA = "0x83EB0C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x2000204")]
	public static class JSON
	{
		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x83CAEC", Offset = "0x83CAEC", VA = "0x83CAEC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace MEC
{
	[Token(Token = "0x2000205")]
	public class Timing : MonoBehaviour
	{
		[Token(Token = "0x20002E1")]
		private struct ProcessIndex : IEquatable<ProcessIndex>
		{
			[Token(Token = "0x400157D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Segment seg;

			[Token(Token = "0x400157E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int i;

			[Token(Token = "0x6001884")]
			[Address(RVA = "0x5B9C38", Offset = "0x5B9C38", VA = "0x5B9C38", Slot = "4")]
			public bool Equals(ProcessIndex other)
			{
				return default(bool);
			}

			[Token(Token = "0x6001885")]
			[Address(RVA = "0x5B9C60", Offset = "0x5B9C60", VA = "0x5B9C60", Slot = "0")]
			public override bool Equals(object other)
			{
				return default(bool);
			}

			[Token(Token = "0x6001886")]
			[Address(RVA = "0x7BFA6C", Offset = "0x7BFA6C", VA = "0x7BFA6C")]
			public static bool operator ==(ProcessIndex a, ProcessIndex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001887")]
			[Address(RVA = "0x7BFA8C", Offset = "0x7BFA8C", VA = "0x7BFA8C")]
			public static bool operator !=(ProcessIndex a, ProcessIndex b)
			{
				return default(bool);
			}

			[Token(Token = "0x6001888")]
			[Address(RVA = "0x5B9C68", Offset = "0x5B9C68", VA = "0x5B9C68", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC00", Offset = "0x54CC00")]
		private sealed class <_EOFPumpWatcher>d__132 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400157F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x170001F5")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600188C")]
				[Address(RVA = "0x7BE9E8", Offset = "0x7BE9E8", VA = "0x7BE9E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600188E")]
				[Address(RVA = "0x7BEA50", Offset = "0x7BEA50", VA = "0x7BEA50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001889")]
			[Address(RVA = "0x7BE928", Offset = "0x7BE928", VA = "0x7BE928")]
			[DebuggerHidden]
			public <_EOFPumpWatcher>d__132(int <>1__state)
			{
			}

			[Token(Token = "0x600188A")]
			[Address(RVA = "0x7BE954", Offset = "0x7BE954", VA = "0x7BE954", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600188B")]
			[Address(RVA = "0x7BE958", Offset = "0x7BE958", VA = "0x7BE958", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600188D")]
			[Address(RVA = "0x7BE9F0", Offset = "0x7BE9F0", VA = "0x7BE9F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC10", Offset = "0x54CC10")]
		private sealed class <_EOFPump>d__133 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Timing <>4__this;

			[Token(Token = "0x170001F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001892")]
				[Address(RVA = "0x7BE8B8", Offset = "0x7BE8B8", VA = "0x7BE8B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001894")]
				[Address(RVA = "0x7BE920", Offset = "0x7BE920", VA = "0x7BE920", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600188F")]
			[Address(RVA = "0x7BE0D8", Offset = "0x7BE0D8", VA = "0x7BE0D8")]
			[DebuggerHidden]
			public <_EOFPump>d__133(int <>1__state)
			{
			}

			[Token(Token = "0x6001890")]
			[Address(RVA = "0x7BE104", Offset = "0x7BE104", VA = "0x7BE104", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001891")]
			[Address(RVA = "0x7BE108", Offset = "0x7BE108", VA = "0x7BE108", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001893")]
			[Address(RVA = "0x7BE8C0", Offset = "0x7BE8C0", VA = "0x7BE8C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC20", Offset = "0x54CC20")]
		private sealed class <_StartWhenDone>d__275 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoroutineHandle handle;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> proc;

			[Token(Token = "0x170001F9")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001899")]
				[Address(RVA = "0x7BF084", Offset = "0x7BF084", VA = "0x7BF084", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600189B")]
				[Address(RVA = "0x7BF0EC", Offset = "0x7BF0EC", VA = "0x7BF0EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001895")]
			[Address(RVA = "0x7BECD4", Offset = "0x7BECD4", VA = "0x7BECD4")]
			[DebuggerHidden]
			public <_StartWhenDone>d__275(int <>1__state)
			{
			}

			[Token(Token = "0x6001896")]
			[Address(RVA = "0x7BED00", Offset = "0x7BED00", VA = "0x7BED00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001897")]
			[Address(RVA = "0x7BED58", Offset = "0x7BED58", VA = "0x7BED58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001898")]
			[Address(RVA = "0x7BED2C", Offset = "0x7BED2C", VA = "0x7BED2C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600189A")]
			[Address(RVA = "0x7BF08C", Offset = "0x7BF08C", VA = "0x7BF08C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC30", Offset = "0x54CC30")]
		private sealed class <_StartWhenDone>d__280 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncOperation operation;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x170001FB")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600189F")]
				[Address(RVA = "0x7BF2A0", Offset = "0x7BF2A0", VA = "0x7BF2A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A1")]
				[Address(RVA = "0x7BF308", Offset = "0x7BF308", VA = "0x7BF308", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600189C")]
			[Address(RVA = "0x7BF150", Offset = "0x7BF150", VA = "0x7BF150")]
			[DebuggerHidden]
			public <_StartWhenDone>d__280(int <>1__state)
			{
			}

			[Token(Token = "0x600189D")]
			[Address(RVA = "0x7BF17C", Offset = "0x7BF17C", VA = "0x7BF17C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600189E")]
			[Address(RVA = "0x7BF180", Offset = "0x7BF180", VA = "0x7BF180", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x7BF2A8", Offset = "0x7BF2A8", VA = "0x7BF2A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC40", Offset = "0x54CC40")]
		private sealed class <_StartWhenDone>d__282 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CustomYieldInstruction operation;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x170001FD")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60018A5")]
				[Address(RVA = "0x7BF4C0", Offset = "0x7BF4C0", VA = "0x7BF4C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170001FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A7")]
				[Address(RVA = "0x7BF528", Offset = "0x7BF528", VA = "0x7BF528", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x7BF36C", Offset = "0x7BF36C", VA = "0x7BF36C")]
			[DebuggerHidden]
			public <_StartWhenDone>d__282(int <>1__state)
			{
			}

			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x7BF398", Offset = "0x7BF398", VA = "0x7BF398", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x7BF39C", Offset = "0x7BF39C", VA = "0x7BF39C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x7BF4C8", Offset = "0x7BF4C8", VA = "0x7BF4C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC50", Offset = "0x54CC50")]
		private sealed class <_StartWhenDone>d__287 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<bool> evaluatorFunc;

			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool continueOn;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> pausedProc;

			[Token(Token = "0x170001FF")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60018AB")]
				[Address(RVA = "0x7BF6F4", Offset = "0x7BF6F4", VA = "0x7BF6F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000200")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018AD")]
				[Address(RVA = "0x7BF75C", Offset = "0x7BF75C", VA = "0x7BF75C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x7BF58C", Offset = "0x7BF58C", VA = "0x7BF58C")]
			[DebuggerHidden]
			public <_StartWhenDone>d__287(int <>1__state)
			{
			}

			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x7BF5B8", Offset = "0x7BF5B8", VA = "0x7BF5B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018AA")]
			[Address(RVA = "0x7BF5BC", Offset = "0x7BF5BC", VA = "0x7BF5BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x7BF6FC", Offset = "0x7BF6FC", VA = "0x7BF6FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC60", Offset = "0x54CC60")]
		private sealed class <_InjectDelay>d__288 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitTime;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator<float> proc;

			[Token(Token = "0x17000201")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60018B1")]
				[Address(RVA = "0x7BEC08", Offset = "0x7BEC08", VA = "0x7BEC08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018B3")]
				[Address(RVA = "0x7BEC70", Offset = "0x7BEC70", VA = "0x7BEC70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018AE")]
			[Address(RVA = "0x7BEAB4", Offset = "0x7BEAB4", VA = "0x7BEAB4")]
			[DebuggerHidden]
			public <_InjectDelay>d__288(int <>1__state)
			{
			}

			[Token(Token = "0x60018AF")]
			[Address(RVA = "0x7BEAE0", Offset = "0x7BEAE0", VA = "0x7BEAE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x7BEAE4", Offset = "0x7BEAE4", VA = "0x7BEAE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x7BEC10", Offset = "0x7BEC10", VA = "0x7BEC10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC70", Offset = "0x54CC70")]
		private sealed class <_DelayedCall>d__313 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject cancelWith;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action action;

			[Token(Token = "0x17000203")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60018B7")]
				[Address(RVA = "0x7BE00C", Offset = "0x7BE00C", VA = "0x7BE00C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000204")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018B9")]
				[Address(RVA = "0x7BE074", Offset = "0x7BE074", VA = "0x7BE074", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B4")]
			[Address(RVA = "0x7BDF04", Offset = "0x7BDF04", VA = "0x7BDF04")]
			[DebuggerHidden]
			public <_DelayedCall>d__313(int <>1__state)
			{
			}

			[Token(Token = "0x60018B5")]
			[Address(RVA = "0x7BDF30", Offset = "0x7BDF30", VA = "0x7BDF30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B6")]
			[Address(RVA = "0x7BDF34", Offset = "0x7BDF34", VA = "0x7BDF34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x7BE014", Offset = "0x7BE014", VA = "0x7BE014", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC80", Offset = "0x54CC80")]
		private sealed class <_WatchCall>d__334 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float timeframe;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public CoroutineHandle handle;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onDone;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gObject;

			[Token(Token = "0x17000205")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60018BD")]
				[Address(RVA = "0x7BF8E0", Offset = "0x7BF8E0", VA = "0x7BF8E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000206")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018BF")]
				[Address(RVA = "0x7BF948", Offset = "0x7BF948", VA = "0x7BF948", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BA")]
			[Address(RVA = "0x7BF7C0", Offset = "0x7BF7C0", VA = "0x7BF7C0")]
			[DebuggerHidden]
			public <_WatchCall>d__334(int <>1__state)
			{
			}

			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x7BF7EC", Offset = "0x7BF7EC", VA = "0x7BF7EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x7BF7F0", Offset = "0x7BF7F0", VA = "0x7BF7F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018BE")]
			[Address(RVA = "0x7BF8E8", Offset = "0x7BF8E8", VA = "0x7BF8E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CC90", Offset = "0x54CC90")]
		private sealed class <_CallContinuously>d__335 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Timing <>4__this;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float period;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject gObject;

			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action action;

			[Token(Token = "0x17000207")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60018C3")]
				[Address(RVA = "0x7BDE38", Offset = "0x7BDE38", VA = "0x7BDE38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000208")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C5")]
				[Address(RVA = "0x7BDEA0", Offset = "0x7BDEA0", VA = "0x7BDEA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C0")]
			[Address(RVA = "0x7BDCC8", Offset = "0x7BDCC8", VA = "0x7BDCC8")]
			[DebuggerHidden]
			public <_CallContinuously>d__335(int <>1__state)
			{
			}

			[Token(Token = "0x60018C1")]
			[Address(RVA = "0x7BDCF4", Offset = "0x7BDCF4", VA = "0x7BDCF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x7BDCF8", Offset = "0x7BDCF8", VA = "0x7BDCF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x7BDE40", Offset = "0x7BDE40", VA = "0x7BDE40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CCA0", Offset = "0x54CCA0")]
		private sealed class <_WatchCall>d__352<T> : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <>2__current;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Timing <>4__this;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float timeframe;

			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CoroutineHandle handle;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> onDone;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject gObject;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T reference;

			[Token(Token = "0x17000209")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60018C9")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700020A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018CB")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C6")]
			[DebuggerHidden]
			public <_WatchCall>d__352(int <>1__state)
			{
			}

			[Token(Token = "0x60018C7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018CA")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x54CCB0", Offset = "0x54CCB0")]
		private sealed class <_CallContinuously>d__353<T> : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <>2__current;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Timing <>4__this;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float period;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject gObject;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> action;

			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T reference;

			[Token(Token = "0x1700020B")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60018CF")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700020C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D1")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018CC")]
			[DebuggerHidden]
			public <_CallContinuously>d__353(int <>1__state)
			{
			}

			[Token(Token = "0x60018CD")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018CE")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D0")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x553180", Offset = "0x553180")]
		public float TimeBetweenSlowUpdateCalls;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5531B8", Offset = "0x5531B8")]
		public DebugInfoType ProfilerDebugAmount;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5531F0", Offset = "0x5531F0")]
		public bool AutoTriggerManualTimeframe;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x553228", Offset = "0x553228")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x553228", Offset = "0x553228")]
		public int UpdateCoroutines;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x553278", Offset = "0x553278")]
		public int FixedUpdateCoroutines;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5532B0", Offset = "0x5532B0")]
		public int LateUpdateCoroutines;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5532E8", Offset = "0x5532E8")]
		public int SlowUpdateCoroutines;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x553320", Offset = "0x553320")]
		public int RealtimeUpdateCoroutines;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x553358", Offset = "0x553358")]
		public int EditorUpdateCoroutines;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x553390", Offset = "0x553390")]
		public int EditorSlowUpdateCoroutines;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5533C8", Offset = "0x5533C8")]
		public int EndOfFrameCoroutines;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x553400", Offset = "0x553400")]
		public int ManualTimeframeCoroutines;

		[NonSerialized]
		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float localTime;

		[NonSerialized]
		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float deltaTime;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Func<float, float> SetManualTimeframeTime;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<IEnumerator<float>, CoroutineHandle, IEnumerator<float>> ReplacementFunction;

		[Token(Token = "0x4001129")]
		public const float WaitForOneFrame = float.NegativeInfinity;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x553448", Offset = "0x553448")]
		private static Thread <MainThread>k__BackingField;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x553458", Offset = "0x553458")]
		private CoroutineHandle <currentCoroutine>k__BackingField;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static object _tmpRef;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int _tmpInt;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static bool _tmpBool;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Segment _tmpSegment;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static CoroutineHandle _tmpHandle;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentUpdateFrame;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _currentLateUpdateFrame;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _currentSlowUpdateFrame;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _currentRealtimeUpdateFrame;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _currentEndOfFrameFrame;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _nextUpdateProcessSlot;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _nextLateUpdateProcessSlot;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _nextFixedUpdateProcessSlot;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _nextSlowUpdateProcessSlot;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _nextRealtimeUpdateProcessSlot;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _nextEditorUpdateProcessSlot;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _nextEditorSlowUpdateProcessSlot;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _nextEndOfFrameProcessSlot;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _nextManualTimeframeProcessSlot;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _lastUpdateProcessSlot;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _lastLateUpdateProcessSlot;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _lastFixedUpdateProcessSlot;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int _lastSlowUpdateProcessSlot;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int _lastRealtimeUpdateProcessSlot;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _lastEndOfFrameProcessSlot;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int _lastManualTimeframeProcessSlot;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _lastUpdateTime;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _lastLateUpdateTime;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _lastFixedUpdateTime;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _lastSlowUpdateTime;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _lastRealtimeUpdateTime;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _lastEndOfFrameTime;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _lastManualTimeframeTime;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _lastSlowUpdateDeltaTime;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _lastEditorUpdateDeltaTime;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float _lastEditorSlowUpdateDeltaTime;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _lastManualTimeframeDeltaTime;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private ushort _framesSinceUpdate;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
		private ushort _expansions;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private byte _instanceID;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _EOFPumpRan;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly Dictionary<CoroutineHandle, HashSet<CoroutineHandle>> Links;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly WaitForEndOfFrame EofWaitObject;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly Dictionary<CoroutineHandle, HashSet<CoroutineHandle>> _waitingTriggers;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly HashSet<CoroutineHandle> _allWaiting;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly Dictionary<CoroutineHandle, ProcessIndex> _handleToIndex;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly Dictionary<ProcessIndex, CoroutineHandle> _indexToHandle;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly Dictionary<CoroutineHandle, string> _processTags;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private readonly Dictionary<string, HashSet<CoroutineHandle>> _taggedProcesses;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private readonly Dictionary<CoroutineHandle, int> _processLayers;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private readonly Dictionary<int, HashSet<CoroutineHandle>> _layeredProcesses;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private IEnumerator<float>[] UpdateProcesses;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private IEnumerator<float>[] LateUpdateProcesses;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private IEnumerator<float>[] FixedUpdateProcesses;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private IEnumerator<float>[] SlowUpdateProcesses;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private IEnumerator<float>[] RealtimeUpdateProcesses;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private IEnumerator<float>[] EditorUpdateProcesses;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private IEnumerator<float>[] EditorSlowUpdateProcesses;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private IEnumerator<float>[] EndOfFrameProcesses;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private IEnumerator<float>[] ManualTimeframeProcesses;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool[] UpdatePaused;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool[] LateUpdatePaused;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool[] FixedUpdatePaused;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool[] SlowUpdatePaused;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool[] RealtimeUpdatePaused;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool[] EditorUpdatePaused;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private bool[] EditorSlowUpdatePaused;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool[] EndOfFramePaused;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool[] ManualTimeframePaused;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private bool[] UpdateHeld;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool[] LateUpdateHeld;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool[] FixedUpdateHeld;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private bool[] SlowUpdateHeld;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool[] RealtimeUpdateHeld;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool[] EditorUpdateHeld;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool[] EditorSlowUpdateHeld;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool[] EndOfFrameHeld;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool[] ManualTimeframeHeld;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private CoroutineHandle _eofWatcherHandle;

		[Token(Token = "0x400117B")]
		private const ushort FramesUntilMaintenance = 64;

		[Token(Token = "0x400117C")]
		private const int ProcessArrayChunkSize = 64;

		[Token(Token = "0x400117D")]
		private const int InitialBufferSizeLarge = 256;

		[Token(Token = "0x400117E")]
		private const int InitialBufferSizeMedium = 64;

		[Token(Token = "0x400117F")]
		private const int InitialBufferSizeSmall = 8;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Timing[] ActiveInstances;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Timing _instance;

		[Token(Token = "0x17000123")]
		public static float LocalTime
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0x6CF5D4", Offset = "0x6CF5D4", VA = "0x6CF5D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000124")]
		public static float DeltaTime
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0x6C08AC", Offset = "0x6C08AC", VA = "0x6C08AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000125")]
		public static Thread MainThread
		{
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0x6CFA58", Offset = "0x6CFA58", VA = "0x6CFA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5566BC", Offset = "0x5566BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0x6CFAC0", Offset = "0x6CFAC0", VA = "0x6CFAC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5566CC", Offset = "0x5566CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public static CoroutineHandle CurrentCoroutine
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x6CFB2C", Offset = "0x6CFB2C", VA = "0x6CFB2C")]
			get
			{
				return default(CoroutineHandle);
			}
		}

		[Token(Token = "0x17000127")]
		public CoroutineHandle currentCoroutine
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x6CFCC8", Offset = "0x6CFCC8", VA = "0x6CFCC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5566DC", Offset = "0x5566DC")]
			get
			{
				return default(CoroutineHandle);
			}
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x6CFCD0", Offset = "0x6CFCD0", VA = "0x6CFCD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5566EC", Offset = "0x5566EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public static Timing Instance
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x6CF640", Offset = "0x6CF640", VA = "0x6CF640")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0x6CFF30", Offset = "0x6CFF30", VA = "0x6CFF30")]
			set
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event Action OnPreExecute
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x6CF878", Offset = "0x6CF878", VA = "0x6CF878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x55669C", Offset = "0x55669C")]
			add
			{
			}
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x6CF968", Offset = "0x6CF968", VA = "0x6CF968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5566AC", Offset = "0x5566AC")]
			remove
			{
			}
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x6CFF9C", Offset = "0x6CFF9C", VA = "0x6CFF9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x6D006C", Offset = "0x6D006C", VA = "0x6D006C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x6D04A0", Offset = "0x6D04A0", VA = "0x6D04A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x6CFCD8", Offset = "0x6CFCD8", VA = "0x6CFCD8")]
		private void InitializeInstanceID()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x6D0574", Offset = "0x6D0574", VA = "0x6D0574")]
		private void Update()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x6D3DA0", Offset = "0x6D3DA0", VA = "0x6D3DA0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x6D44CC", Offset = "0x6D44CC", VA = "0x6D44CC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x6D1E74", Offset = "0x6D1E74", VA = "0x6D1E74")]
		public void TriggerManualTimeframeUpdate()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x6D01D4", Offset = "0x6D01D4", VA = "0x6D01D4")]
		private bool OnEditorStart()
		{
			return default(bool);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x6D01DC", Offset = "0x6D01DC", VA = "0x6D01DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5566FC", Offset = "0x5566FC")]
		private IEnumerator<float> _EOFPumpWatcher()
		{
			return null;
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x6D4BF8", Offset = "0x6D4BF8", VA = "0x6D4BF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556760", Offset = "0x556760")]
		private IEnumerator _EOFPump()
		{
			return null;
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x6D25C4", Offset = "0x6D25C4", VA = "0x6D25C4")]
		private void RemoveUnused()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x6D5100", Offset = "0x6D5100", VA = "0x6D5100")]
		private void EditorRemoveUnused()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x6C0450", Offset = "0x6C0450", VA = "0x6C0450")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x6CC2C4", Offset = "0x6CC2C4", VA = "0x6CC2C4")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x6CC4B4", Offset = "0x6CC4B4", VA = "0x6CC4B4")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x6CC600", Offset = "0x6CC600", VA = "0x6CC600")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x6CC754", Offset = "0x6CC754", VA = "0x6CC754")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x6CC958", Offset = "0x6CC958", VA = "0x6CC958")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x6CCAA8", Offset = "0x6CCAA8", VA = "0x6CCAA8")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x6CCBFC", Offset = "0x6CCBFC", VA = "0x6CCBFC")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x6CCE00", Offset = "0x6CCE00", VA = "0x6CCE00")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x6CCF58", Offset = "0x6CCF58", VA = "0x6CCF58")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x6CD0C0", Offset = "0x6CD0C0", VA = "0x6CD0C0")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x6CD2D8", Offset = "0x6CD2D8", VA = "0x6CD2D8")]
		public static CoroutineHandle RunCoroutine(IEnumerator<float> coroutine, Segment segment, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x6D8294", Offset = "0x6D8294", VA = "0x6D8294")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x6D8300", Offset = "0x6D8300", VA = "0x6D8300")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x6D8428", Offset = "0x6D8428", VA = "0x6D8428")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x6D84A0", Offset = "0x6D84A0", VA = "0x6D84A0")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x6D8518", Offset = "0x6D8518", VA = "0x6D8518")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x6D8644", Offset = "0x6D8644", VA = "0x6D8644")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x6D86C0", Offset = "0x6D86C0", VA = "0x6D86C0")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x6D8738", Offset = "0x6D8738", VA = "0x6D8738")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x6D8864", Offset = "0x6D8864", VA = "0x6D8864")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x6D88E0", Offset = "0x6D88E0", VA = "0x6D88E0")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x6D895C", Offset = "0x6D895C", VA = "0x6D895C")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x6D8A94", Offset = "0x6D8A94", VA = "0x6D8A94")]
		public CoroutineHandle RunCoroutineOnInstance(IEnumerator<float> coroutine, Segment segment, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x6CD43C", Offset = "0x6CD43C", VA = "0x6CD43C")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, CoroutineHandle handle, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x6D8E38", Offset = "0x6D8E38", VA = "0x6D8E38")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x6CD718", Offset = "0x6CD718", VA = "0x6CD718")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x6CDB08", Offset = "0x6CDB08", VA = "0x6CDB08")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x6D9A78", Offset = "0x6D9A78", VA = "0x6D9A78")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x6CDF08", Offset = "0x6CDF08", VA = "0x6CDF08")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x6CE518", Offset = "0x6CE518", VA = "0x6CE518")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, CoroutineHandle handle, Segment segment, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x6D9D80", Offset = "0x6D9D80", VA = "0x6D9D80")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x6CE80C", Offset = "0x6CE80C", VA = "0x6CE80C")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x6CEC28", Offset = "0x6CEC28", VA = "0x6CEC28")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x6D9E94", Offset = "0x6D9E94", VA = "0x6D9E94")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x6CF040", Offset = "0x6CF040", VA = "0x6CF040")]
		public static CoroutineHandle RunCoroutineSingleton(IEnumerator<float> coroutine, Segment segment, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x6D9FB8", Offset = "0x6D9FB8", VA = "0x6D9FB8")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, CoroutineHandle handle, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x6DA3B4", Offset = "0x6DA3B4", VA = "0x6DA3B4")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x6DA480", Offset = "0x6DA480", VA = "0x6DA480")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x6D024C", Offset = "0x6D024C", VA = "0x6D024C")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x6DAD4C", Offset = "0x6DAD4C", VA = "0x6DAD4C")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x6DAE28", Offset = "0x6DAE28", VA = "0x6DAE28")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x6DB8C8", Offset = "0x6DB8C8", VA = "0x6DB8C8")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x6DB9A0", Offset = "0x6DB9A0", VA = "0x6DB9A0")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x6DBC00", Offset = "0x6DBC00", VA = "0x6DBC00")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x6DBE60", Offset = "0x6DBE60", VA = "0x6DBE60")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x6DBF50", Offset = "0x6DBF50", VA = "0x6DBF50")]
		public CoroutineHandle RunCoroutineSingletonOnInstance(IEnumerator<float> coroutine, Segment segment, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x6D58C0", Offset = "0x6D58C0", VA = "0x6D58C0")]
		private CoroutineHandle RunCoroutineInternal(IEnumerator<float> coroutine, Segment segment, int layer, bool layerHasValue, string tag, CoroutineHandle handle, bool prewarm)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x6DC544", Offset = "0x6DC544", VA = "0x6DC544")]
		public static int KillCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x6DC620", Offset = "0x6DC620", VA = "0x6DC620")]
		public int KillCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x6C2A28", Offset = "0x6C2A28", VA = "0x6C2A28")]
		public static int KillCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x6DCA74", Offset = "0x6DCA74", VA = "0x6DCA74")]
		public static int KillCoroutines(IEnumerable<CoroutineHandle> handles)
		{
			return default(int);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x6D1C84", Offset = "0x6D1C84", VA = "0x6D1C84")]
		public int KillCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x6DCD88", Offset = "0x6DCD88", VA = "0x6DCD88")]
		public static int KillCoroutines(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x6DCE8C", Offset = "0x6DCE8C", VA = "0x6DCE8C")]
		public int KillCoroutinesOnInstance(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x6D8F38", Offset = "0x6D8F38", VA = "0x6D8F38")]
		public static int KillCoroutines(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x6DA6D4", Offset = "0x6DA6D4", VA = "0x6DA6D4")]
		public int KillCoroutinesOnInstance(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x6D9988", Offset = "0x6D9988", VA = "0x6D9988")]
		public static int KillCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x6DAAD4", Offset = "0x6DAAD4", VA = "0x6DAAD4")]
		public int KillCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x6DCFD0", Offset = "0x6DCFD0", VA = "0x6DCFD0")]
		public static int KillCoroutines(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x6DD0DC", Offset = "0x6DD0DC", VA = "0x6DD0DC")]
		public int KillCoroutinesOnInstance(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x6D9B90", Offset = "0x6D9B90", VA = "0x6D9B90")]
		public static int KillCoroutines(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x6DB1AC", Offset = "0x6DB1AC", VA = "0x6DB1AC")]
		public int KillCoroutinesOnInstance(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x6DC9C8", Offset = "0x6DC9C8", VA = "0x6DC9C8")]
		public static Timing GetInstance(byte ID)
		{
			return null;
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x6DD11C", Offset = "0x6DD11C", VA = "0x6DD11C")]
		public static float WaitForSeconds(float waitTime)
		{
			return default(float);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x6DD1A8", Offset = "0x6DD1A8", VA = "0x6DD1A8")]
		public float WaitForSecondsOnInstance(float waitTime)
		{
			return default(float);
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x6D1988", Offset = "0x6D1988", VA = "0x6D1988")]
		private bool UpdateTimeValues(Segment segment)
		{
			return default(bool);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x6DD1EC", Offset = "0x6DD1EC", VA = "0x6DD1EC")]
		private float GetSegmentTime(Segment segment)
		{
			return default(float);
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x6DD2D8", Offset = "0x6DD2D8", VA = "0x6DD2D8")]
		public static int PauseCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x6DD3B4", Offset = "0x6DD3B4", VA = "0x6DD3B4")]
		public int PauseCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x6CBF24", Offset = "0x6CBF24", VA = "0x6CBF24")]
		public static int PauseCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x6DE654", Offset = "0x6DE654", VA = "0x6DE654")]
		public int PauseCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x6DF5EC", Offset = "0x6DF5EC", VA = "0x6DF5EC")]
		public static int PauseCoroutines(IEnumerable<CoroutineHandle> handles)
		{
			return default(int);
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x6DF7C8", Offset = "0x6DF7C8", VA = "0x6DF7C8")]
		public static int PauseCoroutines(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x6DF8B8", Offset = "0x6DF8B8", VA = "0x6DF8B8")]
		public int PauseCoroutinesOnInstance(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x6DFC34", Offset = "0x6DFC34", VA = "0x6DFC34")]
		public static int PauseCoroutines(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x6DF968", Offset = "0x6DF968", VA = "0x6DF968")]
		public int PauseCoroutinesOnInstance(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x6DFD24", Offset = "0x6DFD24", VA = "0x6DFD24")]
		public static int PauseCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x6DFE14", Offset = "0x6DFE14", VA = "0x6DFE14")]
		public int PauseCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x6E00E4", Offset = "0x6E00E4", VA = "0x6E00E4")]
		public static int PauseCoroutines(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x6E0590", Offset = "0x6E0590", VA = "0x6E0590")]
		public int PauseCoroutinesOnInstance(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x6E0648", Offset = "0x6E0648", VA = "0x6E0648")]
		public static int PauseCoroutines(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x6E01F0", Offset = "0x6E01F0", VA = "0x6E01F0")]
		public int PauseCoroutinesOnInstance(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x6E0740", Offset = "0x6E0740", VA = "0x6E0740")]
		public static int ResumeCoroutines()
		{
			return default(int);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x6E081C", Offset = "0x6E081C", VA = "0x6E081C")]
		public int ResumeCoroutinesOnInstance()
		{
			return default(int);
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x6CC034", Offset = "0x6CC034", VA = "0x6CC034")]
		public static int ResumeCoroutines(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x6D9028", Offset = "0x6D9028", VA = "0x6D9028")]
		public static int ResumeCoroutines(IEnumerable<CoroutineHandle> handles)
		{
			return default(int);
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x6DA164", Offset = "0x6DA164", VA = "0x6DA164")]
		public int ResumeCoroutinesOnInstance(CoroutineHandle handle)
		{
			return default(int);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x6DA928", Offset = "0x6DA928", VA = "0x6DA928")]
		public int ResumeCoroutinesOnInstance(IEnumerable<CoroutineHandle> handles)
		{
			return default(int);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x6E0D50", Offset = "0x6E0D50", VA = "0x6E0D50")]
		public static int ResumeCoroutines(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x6E111C", Offset = "0x6E111C", VA = "0x6E111C")]
		public int ResumeCoroutinesOnInstance(GameObject gameObj)
		{
			return default(int);
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0x6E11CC", Offset = "0x6E11CC", VA = "0x6E11CC")]
		public static int ResumeCoroutines(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x6E0E54", Offset = "0x6E0E54", VA = "0x6E0E54")]
		public int ResumeCoroutinesOnInstance(int layer)
		{
			return default(int);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x6E12BC", Offset = "0x6E12BC", VA = "0x6E12BC")]
		public static int ResumeCoroutines(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x6E13AC", Offset = "0x6E13AC", VA = "0x6E13AC")]
		public int ResumeCoroutinesOnInstance(string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x6E1678", Offset = "0x6E1678", VA = "0x6E1678")]
		public static int ResumeCoroutines(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x6E1784", Offset = "0x6E1784", VA = "0x6E1784")]
		public int ResumeCoroutinesOnInstance(GameObject gameObj, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x6D9C88", Offset = "0x6D9C88", VA = "0x6D9C88")]
		public static int ResumeCoroutines(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x6DB574", Offset = "0x6DB574", VA = "0x6DB574")]
		public int ResumeCoroutinesOnInstance(int layer, string tag)
		{
			return default(int);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x6CAC90", Offset = "0x6CAC90", VA = "0x6CAC90")]
		public static string GetTag(CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x6CADB0", Offset = "0x6CADB0", VA = "0x6CADB0")]
		public static int? GetLayer(CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x6CAEF4", Offset = "0x6CAEF4", VA = "0x6CAEF4")]
		public static string GetDebugName(CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x6CB690", Offset = "0x6CB690", VA = "0x6CB690")]
		public static Segment GetSegment(CoroutineHandle handle)
		{
			return default(Segment);
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x6CB114", Offset = "0x6CB114", VA = "0x6CB114")]
		public static bool SetTag(CoroutineHandle handle, string newTag, bool overwriteExisting = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x6CB4CC", Offset = "0x6CB4CC", VA = "0x6CB4CC")]
		public static bool SetLayer(CoroutineHandle handle, int newLayer, bool overwriteExisting = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x6CB800", Offset = "0x6CB800", VA = "0x6CB800")]
		public static bool SetSegment(CoroutineHandle handle, Segment newSegment)
		{
			return default(bool);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x6E2B54", Offset = "0x6E2B54", VA = "0x6E2B54")]
		public static bool RemoveTag(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x6CB3B4", Offset = "0x6CB3B4", VA = "0x6CB3B4")]
		public static bool RemoveLayer(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x6CBB54", Offset = "0x6CBB54", VA = "0x6CBB54")]
		public static bool IsRunning(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x6CBD50", Offset = "0x6CBD50", VA = "0x6CBD50")]
		public static bool IsAliveAndPaused(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x6DC2D4", Offset = "0x6DC2D4", VA = "0x6DC2D4")]
		private void AddTagOnInstance(string tag, CoroutineHandle handle)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x6DC40C", Offset = "0x6DC40C", VA = "0x6DC40C")]
		private void AddLayerOnInstance(int layer, CoroutineHandle handle)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x6E1904", Offset = "0x6E1904", VA = "0x6E1904")]
		private void RemoveTagOnInstance(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x6E1A58", Offset = "0x6E1A58", VA = "0x6E1A58")]
		private void RemoveLayerOnInstance(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x6D4EC4", Offset = "0x6D4EC4", VA = "0x6D4EC4")]
		private void RemoveGraffiti(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x6E1BAC", Offset = "0x6E1BAC", VA = "0x6E1BAC")]
		private IEnumerator<float> CoindexExtract(ProcessIndex coindex)
		{
			return null;
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x6D4C68", Offset = "0x6D4C68", VA = "0x6D4C68")]
		private bool CoindexIsNull(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x6E183C", Offset = "0x6E183C", VA = "0x6E183C")]
		private IEnumerator<float> CoindexPeek(ProcessIndex coindex)
		{
			return null;
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x6DCD14", Offset = "0x6DCD14", VA = "0x6DCD14")]
		private bool Nullify(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x6DCEC4", Offset = "0x6DCEC4", VA = "0x6DCEC4")]
		private bool Nullify(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x6DE8A8", Offset = "0x6DE8A8", VA = "0x6DE8A8")]
		private bool SetPause(ProcessIndex coindex, bool newPausedState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x6E1E10", Offset = "0x6E1E10", VA = "0x6E1E10")]
		private bool SetHeld(ProcessIndex coindex, bool newHeldState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x6E2BC0", Offset = "0x6E2BC0", VA = "0x6E2BC0")]
		private IEnumerator<float> CreateHold(ProcessIndex coindex, IEnumerator<float> coptr)
		{
			return null;
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x6E1D44", Offset = "0x6E1D44", VA = "0x6E1D44")]
		private bool CoindexIsPaused(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x6E1C78", Offset = "0x6E1C78", VA = "0x6E1C78")]
		private bool CoindexIsHeld(ProcessIndex coindex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x6E3888", Offset = "0x6E3888", VA = "0x6E3888")]
		private void CoindexReplace(ProcessIndex coindex, IEnumerator<float> replacement)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x6E3984", Offset = "0x6E3984", VA = "0x6E3984")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine)
		{
			return default(float);
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x6E3CE0", Offset = "0x6E3CE0", VA = "0x6E3CE0")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, string tag)
		{
			return default(float);
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x6E3D7C", Offset = "0x6E3D7C", VA = "0x6E3D7C")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, int layer)
		{
			return default(float);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x6E3E18", Offset = "0x6E3E18", VA = "0x6E3E18")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, int layer, string tag)
		{
			return default(float);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x6E3EC4", Offset = "0x6E3EC4", VA = "0x6E3EC4")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, Segment segment)
		{
			return default(float);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x6E3F44", Offset = "0x6E3F44", VA = "0x6E3F44")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, Segment segment, string tag)
		{
			return default(float);
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x6E3FCC", Offset = "0x6E3FCC", VA = "0x6E3FCC")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, Segment segment, int layer)
		{
			return default(float);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x6E4054", Offset = "0x6E4054", VA = "0x6E4054")]
		public static float WaitUntilDone(IEnumerator<float> newCoroutine, Segment segment, int layer, string tag)
		{
			return default(float);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x6E40EC", Offset = "0x6E40EC", VA = "0x6E40EC")]
		public static float WaitUntilDone(CoroutineHandle otherCoroutine)
		{
			return default(float);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x6E3A18", Offset = "0x6E3A18", VA = "0x6E3A18")]
		public static float WaitUntilDone(CoroutineHandle otherCoroutine, bool warnOnIssue)
		{
			return default(float);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x6D8B1C", Offset = "0x6D8B1C", VA = "0x6D8B1C")]
		public static void WaitForOtherHandles(CoroutineHandle handle, CoroutineHandle otherHandle, bool warnOnIssue = true)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x6D91FC", Offset = "0x6D91FC", VA = "0x6D91FC")]
		public static void WaitForOtherHandles(CoroutineHandle handle, IEnumerable<CoroutineHandle> otherHandles, bool warnOnIssue = true)
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x6E41DC", Offset = "0x6E41DC", VA = "0x6E41DC")]
		private void SwapToLast(CoroutineHandle firstHandle, CoroutineHandle lastHandle)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x6E4154", Offset = "0x6E4154", VA = "0x6E4154")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5567C4", Offset = "0x5567C4")]
		private IEnumerator<float> _StartWhenDone(CoroutineHandle handle, IEnumerator<float> proc)
		{
			return null;
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x6D4D38", Offset = "0x6D4D38", VA = "0x6D4D38")]
		private void CloseWaitingProcess(CoroutineHandle handle)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x6E4554", Offset = "0x6E4554", VA = "0x6E4554")]
		private bool HandleIsInWaitingList(CoroutineHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x6E4620", Offset = "0x6E4620", VA = "0x6E4620")]
		private static IEnumerator<float> ReturnTmpRefForRepFunc(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x6E4694", Offset = "0x6E4694", VA = "0x6E4694")]
		public static float WaitUntilDone(AsyncOperation operation)
		{
			return default(float);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x6E4810", Offset = "0x6E4810", VA = "0x6E4810")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556828", Offset = "0x556828")]
		private static IEnumerator<float> _StartWhenDone(AsyncOperation operation, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x6E488C", Offset = "0x6E488C", VA = "0x6E488C")]
		public static float WaitUntilDone(CustomYieldInstruction operation)
		{
			return default(float);
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x6E4A0C", Offset = "0x6E4A0C", VA = "0x6E4A0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x55688C", Offset = "0x55688C")]
		private static IEnumerator<float> _StartWhenDone(CustomYieldInstruction operation, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x6E4A88", Offset = "0x6E4A88", VA = "0x6E4A88")]
		public static float WaitUntilTrue(Func<bool> evaluatorFunc)
		{
			return default(float);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x6E4B58", Offset = "0x6E4B58", VA = "0x6E4B58")]
		private static IEnumerator<float> WaitUntilTrueHelper(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x6E4C7C", Offset = "0x6E4C7C", VA = "0x6E4C7C")]
		public static float WaitUntilFalse(Func<bool> evaluatorFunc)
		{
			return default(float);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x6E4D4C", Offset = "0x6E4D4C", VA = "0x6E4D4C")]
		private static IEnumerator<float> WaitUntilFalseHelper(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x6E4BF0", Offset = "0x6E4BF0", VA = "0x6E4BF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5568F0", Offset = "0x5568F0")]
		private static IEnumerator<float> _StartWhenDone(Func<bool> evaluatorFunc, bool continueOn, IEnumerator<float> pausedProc)
		{
			return null;
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x6DE5C4", Offset = "0x6DE5C4", VA = "0x6DE5C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556954", Offset = "0x556954")]
		private IEnumerator<float> _InjectDelay(IEnumerator<float> proc, float waitTime)
		{
			return null;
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x6E4DE4", Offset = "0x6E4DE4", VA = "0x6E4DE4")]
		public bool LockCoroutine(CoroutineHandle coroutine, CoroutineHandle key)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x6E4F9C", Offset = "0x6E4F9C", VA = "0x6E4F9C")]
		public bool UnlockCoroutine(CoroutineHandle coroutine, CoroutineHandle key)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x6E5148", Offset = "0x6E5148", VA = "0x6E5148")]
		public static int LinkCoroutines(CoroutineHandle master, CoroutineHandle slave)
		{
			return default(int);
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x6E539C", Offset = "0x6E539C", VA = "0x6E539C")]
		public static int UnlinkCoroutines(CoroutineHandle master, CoroutineHandle slave, bool twoWay = false)
		{
			return default(int);
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x6E56F0", Offset = "0x6E56F0", VA = "0x6E56F0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5569B8", Offset = "0x5569B8")]
		public static float GetMyHandle(Action<CoroutineHandle> reciever)
		{
			return default(float);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x6E57A4", Offset = "0x6E57A4", VA = "0x6E57A4")]
		private static IEnumerator<float> GetHandleHelper(IEnumerator<float> input, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x6E585C", Offset = "0x6E585C", VA = "0x6E585C")]
		public static float SwitchCoroutine(Segment newSegment)
		{
			return default(float);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x6E5910", Offset = "0x6E5910", VA = "0x6E5910")]
		private static IEnumerator<float> SwitchCoroutineRepS(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x6E59C4", Offset = "0x6E59C4", VA = "0x6E59C4")]
		public static float SwitchCoroutine(Segment newSegment, string newTag)
		{
			return default(float);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x6E5A8C", Offset = "0x6E5A8C", VA = "0x6E5A8C")]
		private static IEnumerator<float> SwitchCoroutineRepST(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x6E5BE8", Offset = "0x6E5BE8", VA = "0x6E5BE8")]
		public static float SwitchCoroutine(Segment newSegment, int newLayer)
		{
			return default(float);
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x6E5CB0", Offset = "0x6E5CB0", VA = "0x6E5CB0")]
		private static IEnumerator<float> SwitchCoroutineRepSL(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x6E5D90", Offset = "0x6E5D90", VA = "0x6E5D90")]
		public static float SwitchCoroutine(Segment newSegment, int newLayer, string newTag)
		{
			return default(float);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x6E5E64", Offset = "0x6E5E64", VA = "0x6E5E64")]
		private static IEnumerator<float> SwitchCoroutineRepSLT(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x6E5FE0", Offset = "0x6E5FE0", VA = "0x6E5FE0")]
		public static float SwitchCoroutine(string newTag)
		{
			return default(float);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x6E6094", Offset = "0x6E6094", VA = "0x6E6094")]
		private static IEnumerator<float> SwitchCoroutineRepT(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x6E61A4", Offset = "0x6E61A4", VA = "0x6E61A4")]
		public static float SwitchCoroutine(int newLayer)
		{
			return default(float);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x6E6258", Offset = "0x6E6258", VA = "0x6E6258")]
		private static IEnumerator<float> SwitchCoroutineRepL(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x6E62F8", Offset = "0x6E62F8", VA = "0x6E62F8")]
		public static float SwitchCoroutine(int newLayer, string newTag)
		{
			return default(float);
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x6E63C0", Offset = "0x6E63C0", VA = "0x6E63C0")]
		private static IEnumerator<float> SwitchCoroutineRepLT(IEnumerator<float> coptr, CoroutineHandle handle)
		{
			return null;
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x6E64F4", Offset = "0x6E64F4", VA = "0x6E64F4")]
		public static CoroutineHandle CallDelayed(float delay, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x6E6624", Offset = "0x6E6624", VA = "0x6E6624")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x6E6664", Offset = "0x6E6664", VA = "0x6E6664")]
		public static CoroutineHandle CallDelayed(float delay, Action action, GameObject gameObject)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x6E6710", Offset = "0x6E6710", VA = "0x6E6710")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Action action, GameObject gameObject)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x6E6590", Offset = "0x6E6590", VA = "0x6E6590")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5569F4", Offset = "0x5569F4")]
		private IEnumerator<float> _DelayedCall(float delay, Action action, GameObject cancelWith)
		{
			return null;
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x6E6754", Offset = "0x6E6754", VA = "0x6E6754")]
		public static CoroutineHandle CallDelayed(float delay, Segment segment, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x6E6800", Offset = "0x6E6800", VA = "0x6E6800")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Segment segment, Action action)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x6E684C", Offset = "0x6E684C", VA = "0x6E684C")]
		public static CoroutineHandle CallDelayed(float delay, Segment segment, Action action, GameObject gameObject)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x6E6900", Offset = "0x6E6900", VA = "0x6E6900")]
		public CoroutineHandle CallDelayedOnInstance(float delay, Segment segment, Action action, GameObject gameObject)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x6E695C", Offset = "0x6E695C", VA = "0x6E695C")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x6E6B8C", Offset = "0x6E6B8C", VA = "0x6E6B8C")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x6E6C24", Offset = "0x6E6C24", VA = "0x6E6C24")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x6E6D34", Offset = "0x6E6D34", VA = "0x6E6D34")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x6E6E3C", Offset = "0x6E6E3C", VA = "0x6E6E3C")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x6E6F40", Offset = "0x6E6F40", VA = "0x6E6F40")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x6E7048", Offset = "0x6E7048", VA = "0x6E7048")]
		public static CoroutineHandle CallPeriodically(float timeframe, float period, Action action, Segment timing, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x6E716C", Offset = "0x6E716C", VA = "0x6E716C")]
		public CoroutineHandle CallPeriodicallyOnInstance(float timeframe, float period, Action action, Segment timing, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x6E7280", Offset = "0x6E7280", VA = "0x6E7280")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x6E7380", Offset = "0x6E7380", VA = "0x6E7380")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x6E7470", Offset = "0x6E7470", VA = "0x6E7470")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x6E757C", Offset = "0x6E757C", VA = "0x6E757C")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x6E7680", Offset = "0x6E7680", VA = "0x6E7680")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x6E778C", Offset = "0x6E778C", VA = "0x6E778C")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, Segment timing, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x6E7890", Offset = "0x6E7890", VA = "0x6E7890")]
		public static CoroutineHandle CallContinuously(float timeframe, Action action, Segment timing, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x6E79B0", Offset = "0x6E79B0", VA = "0x6E79B0")]
		public CoroutineHandle CallContinuouslyOnInstance(float timeframe, Action action, Segment timing, GameObject gameObject, [Optional] Action onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x6E6AE8", Offset = "0x6E6AE8", VA = "0x6E6AE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556A58", Offset = "0x556A58")]
		private IEnumerator<float> _WatchCall(float timeframe, CoroutineHandle handle, GameObject gObject, Action onDone)
		{
			return null;
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x6E6A54", Offset = "0x6E6A54", VA = "0x6E6A54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556ABC", Offset = "0x556ABC")]
		private IEnumerator<float> _CallContinuously(float period, Action action, GameObject gObject)
		{
			return null;
		}

		[Token(Token = "0x60014D1")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014D2")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014D3")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014D4")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014D5")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014D6")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014D7")]
		public static CoroutineHandle CallPeriodically<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014D8")]
		public CoroutineHandle CallPeriodicallyOnInstance<T>(T reference, float timeframe, float period, Action<T> action, Segment timing, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014D9")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014DA")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014DB")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014DC")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014DD")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014DE")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, Segment timing, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014DF")]
		public static CoroutineHandle CallContinuously<T>(T reference, float timeframe, Action<T> action, Segment timing, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014E0")]
		public CoroutineHandle CallContinuouslyOnInstance<T>(T reference, float timeframe, Action<T> action, Segment timing, GameObject gameObject, [Optional] Action<T> onDone)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x60014E1")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556B20", Offset = "0x556B20")]
		private IEnumerator<float> _WatchCall<T>(T reference, float timeframe, CoroutineHandle handle, GameObject gObject, Action<T> onDone)
		{
			return null;
		}

		[Token(Token = "0x60014E2")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x556B84", Offset = "0x556B84")]
		private IEnumerator<float> _CallContinuously<T>(T reference, float period, Action<T> action, GameObject gObject)
		{
			return null;
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x6E7AC0", Offset = "0x6E7AC0", VA = "0x6E7AC0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556BE8", Offset = "0x556BE8")]
		public new Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x6E7AC8", Offset = "0x6E7AC8", VA = "0x6E7AC8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556C24", Offset = "0x556C24")]
		public new Coroutine StartCoroutine(string methodName, object value)
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x6E7AD0", Offset = "0x6E7AD0", VA = "0x6E7AD0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556C60", Offset = "0x556C60")]
		public new Coroutine StartCoroutine(string methodName)
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x6E7AD8", Offset = "0x6E7AD8", VA = "0x6E7AD8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556C9C", Offset = "0x556C9C")]
		public new Coroutine StartCoroutine_Auto(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x6E7AE0", Offset = "0x6E7AE0", VA = "0x6E7AE0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556CD8", Offset = "0x556CD8")]
		public new void StopCoroutine(string methodName)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x6E7AE4", Offset = "0x6E7AE4", VA = "0x6E7AE4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556D14", Offset = "0x556D14")]
		public new void StopCoroutine(IEnumerator routine)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x6E7AE8", Offset = "0x6E7AE8", VA = "0x6E7AE8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556D50", Offset = "0x556D50")]
		public new void StopCoroutine(Coroutine routine)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x6E7AEC", Offset = "0x6E7AEC", VA = "0x6E7AEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556D8C", Offset = "0x556D8C")]
		public new void StopAllCoroutines()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x6E7AF0", Offset = "0x6E7AF0", VA = "0x6E7AF0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556DC8", Offset = "0x556DC8")]
		public new static void Destroy(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x6E7AF4", Offset = "0x6E7AF4", VA = "0x6E7AF4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556E04", Offset = "0x556E04")]
		public new static void Destroy(UnityEngine.Object obj, float f)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x6E7AF8", Offset = "0x6E7AF8", VA = "0x6E7AF8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556E40", Offset = "0x556E40")]
		public static void DestroyObject(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x6E7AFC", Offset = "0x6E7AFC", VA = "0x6E7AFC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556E7C", Offset = "0x556E7C")]
		public static void DestroyObject(UnityEngine.Object obj, float f)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x6E7B00", Offset = "0x6E7B00", VA = "0x6E7B00")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556EB8", Offset = "0x556EB8")]
		public new static void DestroyImmediate(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x6E7B04", Offset = "0x6E7B04", VA = "0x6E7B04")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556EF4", Offset = "0x556EF4")]
		public new static void DestroyImmediate(UnityEngine.Object obj, bool b)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x6E7B08", Offset = "0x6E7B08", VA = "0x6E7B08")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556F30", Offset = "0x556F30")]
		public new static void Instantiate(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x6E7B0C", Offset = "0x6E7B0C", VA = "0x6E7B0C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556F6C", Offset = "0x556F6C")]
		public new static void Instantiate(UnityEngine.Object original, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60014F3")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556FA8", Offset = "0x556FA8")]
		public new static void Instantiate<T>(T original) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x60014F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x556FE4", Offset = "0x556FE4")]
		public new static T FindObjectOfType<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x6E7B10", Offset = "0x6E7B10", VA = "0x6E7B10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x557020", Offset = "0x557020")]
		public new static UnityEngine.Object FindObjectOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x55705C", Offset = "0x55705C")]
		public new static T[] FindObjectsOfType<T>() where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x6E7B18", Offset = "0x6E7B18", VA = "0x6E7B18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x557098", Offset = "0x557098")]
		public new static UnityEngine.Object[] FindObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x6E7B20", Offset = "0x6E7B20", VA = "0x6E7B20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5570D4", Offset = "0x5570D4")]
		public new static void print(object message)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x6E7B24", Offset = "0x6E7B24", VA = "0x6E7B24")]
		public Timing()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public enum Segment
	{
		[Token(Token = "0x4001183")]
		Invalid = -1,
		[Token(Token = "0x4001184")]
		Update,
		[Token(Token = "0x4001185")]
		FixedUpdate,
		[Token(Token = "0x4001186")]
		LateUpdate,
		[Token(Token = "0x4001187")]
		SlowUpdate,
		[Token(Token = "0x4001188")]
		RealtimeUpdate,
		[Token(Token = "0x4001189")]
		EditorUpdate,
		[Token(Token = "0x400118A")]
		EditorSlowUpdate,
		[Token(Token = "0x400118B")]
		EndOfFrame,
		[Token(Token = "0x400118C")]
		ManualTimeframe
	}
	[Token(Token = "0x2000207")]
	public enum DebugInfoType
	{
		[Token(Token = "0x400118E")]
		None,
		[Token(Token = "0x400118F")]
		SeperateCoroutines,
		[Token(Token = "0x4001190")]
		SeperateTags
	}
	[Token(Token = "0x2000208")]
	public enum SingletonBehavior
	{
		[Token(Token = "0x4001192")]
		Abort,
		[Token(Token = "0x4001193")]
		Overwrite,
		[Token(Token = "0x4001194")]
		Wait,
		[Token(Token = "0x4001195")]
		AbortAndUnpause
	}
	[Token(Token = "0x2000209")]
	public struct CoroutineHandle : IEquatable<CoroutineHandle>
	{
		[Token(Token = "0x4001196")]
		private const byte ReservedSpace = 15;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] NextIndex;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int _id;

		[Token(Token = "0x17000129")]
		public byte Key
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x5B9110", Offset = "0x5B9110", VA = "0x5B9110")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x1700012A")]
		public string Tag
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x5B9154", Offset = "0x5B9154", VA = "0x5B9154")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x5B915C", Offset = "0x5B915C", VA = "0x5B915C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public int? Layer
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x5B9164", Offset = "0x5B9164", VA = "0x5B9164")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x5B916C", Offset = "0x5B916C", VA = "0x5B916C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public Segment Segment
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0x5B9174", Offset = "0x5B9174", VA = "0x5B9174")]
			get
			{
				return default(Segment);
			}
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x5B917C", Offset = "0x5B917C", VA = "0x5B917C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public bool IsRunning
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x5B9184", Offset = "0x5B9184", VA = "0x5B9184")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x5B918C", Offset = "0x5B918C", VA = "0x5B918C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public bool IsAliveAndPaused
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x5B9198", Offset = "0x5B9198", VA = "0x5B9198")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x5B91A0", Offset = "0x5B91A0", VA = "0x5B91A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public bool IsValid
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x5B91AC", Offset = "0x5B91AC", VA = "0x5B91AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x5B911C", Offset = "0x5B911C", VA = "0x5B911C")]
		public CoroutineHandle(byte ind)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x5B9124", Offset = "0x5B9124", VA = "0x5B9124")]
		public CoroutineHandle(CoroutineHandle other)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x5B912C", Offset = "0x5B912C", VA = "0x5B912C", Slot = "4")]
		public bool Equals(CoroutineHandle other)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x5B913C", Offset = "0x5B913C", VA = "0x5B913C", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x6CA92C", Offset = "0x6CA92C", VA = "0x6CA92C")]
		public static bool operator ==(CoroutineHandle a, CoroutineHandle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x6CA938", Offset = "0x6CA938", VA = "0x6CA938")]
		public static bool operator !=(CoroutineHandle a, CoroutineHandle b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x5B9144", Offset = "0x5B9144", VA = "0x5B9144", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x5B914C", Offset = "0x5B914C", VA = "0x5B914C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200020A")]
	public static class MECExtensionMethods1
	{
		[Token(Token = "0x6001510")]
		[Address(RVA = "0x6CC1DC", Offset = "0x6CC1DC", VA = "0x6CC1DC")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x6CC248", Offset = "0x6CC248", VA = "0x6CC248")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x6CC438", Offset = "0x6CC438", VA = "0x6CC438")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x6CC584", Offset = "0x6CC584", VA = "0x6CC584")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x6CC6D0", Offset = "0x6CC6D0", VA = "0x6CC6D0")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x6CC8D4", Offset = "0x6CC8D4", VA = "0x6CC8D4")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x6CCA2C", Offset = "0x6CCA2C", VA = "0x6CCA2C")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, Segment segment)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x6CCB78", Offset = "0x6CCB78", VA = "0x6CCB78")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, Segment segment, GameObject gameObj)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x6CCD7C", Offset = "0x6CCD7C", VA = "0x6CCD7C")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, Segment segment, int layer)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x6CCED4", Offset = "0x6CCED4", VA = "0x6CCED4")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, Segment segment, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x6CD02C", Offset = "0x6CD02C", VA = "0x6CD02C")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x6CD244", Offset = "0x6CD244", VA = "0x6CD244")]
		public static CoroutineHandle RunCoroutine(this IEnumerator<float> coroutine, Segment segment, int layer, string tag)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x6CD3B8", Offset = "0x6CD3B8", VA = "0x6CD3B8")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, CoroutineHandle handle, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x6CD618", Offset = "0x6CD618", VA = "0x6CD618")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x6CDA00", Offset = "0x6CDA00", VA = "0x6CDA00")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x6CDA84", Offset = "0x6CDA84", VA = "0x6CDA84")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x6CDDF0", Offset = "0x6CDDF0", VA = "0x6CDDF0")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x6CE3F0", Offset = "0x6CE3F0", VA = "0x6CE3F0")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x6CE484", Offset = "0x6CE484", VA = "0x6CE484")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, CoroutineHandle handle, Segment segment, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x6CE6F8", Offset = "0x6CE6F8", VA = "0x6CE6F8")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, Segment segment, GameObject gameObj, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x6CEB00", Offset = "0x6CEB00", VA = "0x6CEB00")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, Segment segment, int layer, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x6CEB94", Offset = "0x6CEB94", VA = "0x6CEB94")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, Segment segment, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x6CEF1C", Offset = "0x6CEF1C", VA = "0x6CEF1C")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, Segment segment, GameObject gameObj, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x6CF538", Offset = "0x6CF538", VA = "0x6CF538")]
		public static CoroutineHandle RunCoroutineSingleton(this IEnumerator<float> coroutine, Segment segment, int layer, string tag, SingletonBehavior behaviorOnCollision)
		{
			return default(CoroutineHandle);
		}
	}
}
